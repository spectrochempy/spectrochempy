Search.setIndex({"alltitles": {"1) simulated chromatogram": [[16, "simulated-chromatogram"]], "1. Spectral Smoothing": [[89, "1.-Spectral-Smoothing"]], "1D-Dataset (unidimensional dataset)": [[333, "1D-Dataset-(unidimensional-dataset)"]], "2) absorption spectra": [[16, "absorption-spectra"]], "2. Baseline Correction": [[89, "2.-Baseline-Correction"]], "2021": [[316, "id18"]], "2022": [[316, "id15"]], "2023": [[316, "id10"]], "2024": [[316, "id4"]], "2025": [[316, "id1"]], "2D-IRIS analysis example": [[18, null]], "3) simulated data matrix": [[16, "simulated-data-matrix"]], "4) evolving factor analysis (EFA)": [[16, "evolving-factor-analysis-efa"]], "A basic illustration of the rotational ambiguity": [[320, "A-basic-illustration-of-the-rotational-ambiguity"]], "A code snippet to display properties": [[322, "A-code-snippet-to-display-properties"]], "A good practice: use relative paths": [[326, "A-good-practice:-use-relative-paths"]], "ALS Optimization": [[320, "ALS-Optimization"]], "API Configuration": [[325, null]], "API Documentation": [[9, "api-documentation"]], "About the dates and times": [[333, "About-the-dates-and-times"]], "About the history attribute": [[333, "About-the-history-attribute"]], "About this user\u2019s guide": [[331, "About-this-user's-guide"]], "Acknowledgments": [[1, null]], "Acquisition dates and y axis": [[327, "Acquisition-dates-and-y-axis"]], "Adding a Reader": [[4, null]], "Adding several coordinates to a single dimension": [[333, "Adding-several-coordinates-to-a-single-dimension"]], "Adding titles and annotations": [[336, "Adding-titles-and-annotations"]], "Adding your examples to the gallery": [[10, null]], "Additional Resources": [[83, "additional-resources"]], "Additional Tips": [[88, "additional-tips"]], "Advanced Analysis as for instance IRIS Processing": [[89, "Advanced-Analysis-as-for-instance-IRIS-Processing"]], "Algebra": [[315, "algebra"]], "Alignment along several dimensions": [[337, "Alignment-along-several-dimensions"]], "Alignment of datasets": [[337, null]], "Alignment, interpolation": [[315, "alignment-interpolation"]], "Alternative Installation Methods": [[83, "alternative-installation-methods"]], "Analysing the 2D NMD dataset": [[74, "analysing-the-2d-nmd-dataset"]], "Analysing the data": [[75, "analysing-the-data"]], "Analysis": [[315, "analysis"], [319, null]], "Analysis CP NMR spectra": [[73, null]], "Analysis NDDataset": [[33, null]], "Angle units conversion": [[344, "Angle-units-conversion"]], "Another default search directory: datadir": [[326, "Another-default-search-directory:-datadir"]], "Apodization": [[57, null], [71, "apodization"], [315, "apodization"], [338, null]], "Apodization using sine window multiplication": [[338, "Apodization-using-sine-window-multiplication"]], "Arithmetic": [[344, "Arithmetic"]], "Asymmetric Least Squares smoothing": [[78, "asymmetric-least-squares-smoothing"]], "Augmented datasets": [[320, "Augmented-datasets"]], "Automatic search": [[18, "automatic-search"]], "Backwards compatibility": [[6, "backwards-compatibility"]], "Baseline": [[61, null], [71, "baseline"]], "Baseline correction": [[78, "baseline-correction"], [315, "baseline-correction"], [318, "Baseline-correction"]], "Baseline correction 2D spectra (series of spectra)": [[78, "baseline-correction-2d-spectra-series-of-spectra"]], "Baseline correction using NDDataset or API methods": [[339, "Baseline-correction-using-NDDataset-or-API-methods"]], "Baseline corrections": [[339, null]], "Basic Rules": [[8, "basic-rules"]], "Basic creation methods": [[315, "basic-creation-methods"]], "Basic transformations": [[348, null]], "Bibliography": [[92, null]], "Binary Ufuncs": [[344, "Binary-Ufuncs"]], "Binary functions": [[344, "Binary-functions"]], "Breaking changes": [[349, "breaking-changes"], [376, "breaking-changes"], [385, "breaking-changes"], [391, "breaking-changes"], [392, "breaking-changes"], [393, "breaking-changes"], [395, "breaking-changes"], [399, "breaking-changes"], [401, "breaking-changes"]], "Bug fixes": [[349, "bug-fixes"], [351, "bug-fixes"], [353, "bug-fixes"], [354, "bug-fixes"], [355, "bug-fixes"], [356, "bug-fixes"], [357, "bug-fixes"], [358, "bug-fixes"], [359, "bug-fixes"], [360, "bug-fixes"], [361, "bug-fixes"], [362, "bug-fixes"], [363, "bug-fixes"], [364, "bug-fixes"], [365, "bug-fixes"], [366, "bug-fixes"], [367, "bug-fixes"], [368, "bug-fixes"], [369, "bug-fixes"], [370, "bug-fixes"], [371, "bug-fixes"], [372, "bug-fixes"], [374, "bug-fixes"], [375, "bug-fixes"], [376, "bug-fixes"], [377, "bug-fixes"], [378, "bug-fixes"], [381, "bug-fixes"], [382, "bug-fixes"], [383, "bug-fixes"], [384, "bug-fixes"], [386, "bug-fixes"], [387, "bug-fixes"], [388, "bug-fixes"], [389, "bug-fixes"], [390, "bug-fixes"], [392, "bug-fixes"], [393, "bug-fixes"], [395, "bug-fixes"], [396, "bug-fixes"], [397, "bug-fixes"], [398, "bug-fixes"], [399, "bug-fixes"], [400, "bug-fixes"], [401, "bug-fixes"], [402, "bug-fixes"]], "Build Options": [[9, "build-options"]], "Building Documentation": [[9, "building-documentation"]], "Bullets": [[332, "Bullets"]], "Cantera": [[84, "cantera"]], "Case of initial spectral profiles": [[320, "Case-of-initial-spectral-profiles"]], "Change the NDDataset.preferences": [[336, "Change-the-NDDataset.preferences"]], "Changing number of dimensions": [[315, "changing-number-of-dimensions"]], "Changing the aspect of the plot": [[336, "Changing-the-aspect-of-the-plot"]], "Changing the plot style using matplotlib style sheets": [[336, "Changing-the-plot-style-using-matplotlib-style-sheets"]], "Changing the type of plot": [[336, "Changing-the-type-of-plot"]], "Changing type": [[315, "changing-type"]], "Changing units": [[348, "Changing-units"]], "Citing SpectroChemPy": [[0, null]], "Clipping and rounding": [[315, "clipping-and-rounding"]], "Code snippet for \u2018advanced\u2019 baseline correction": [[339, "Code-snippet-for-'advanced'-baseline-correction"]], "Code standards": [[6, "code-standards"]], "Code usage": [[93, "code-usage"]], "Colored note boxes": [[332, "Colored-note-boxes"]], "Comparison with the OMNIC processing.": [[343, "Comparison-with-the-OMNIC-processing."]], "Complex": [[315, "complex"]], "Complex or hypercomplex NDDatasets": [[344, "Complex-or-hypercomplex-NDDatasets"]], "Computation times": [[25, null], [28, null], [32, null], [34, null], [39, null], [47, null], [51, null], [54, null], [56, null], [60, null], [63, null], [67, null], [70, null], [76, null], [79, null], [80, null], [317, null]], "Conda Package Managers (Recommended)": [[83, "conda-package-managers-recommended"]], "Configuration": [[13, "configuration"]], "Constant trend": [[339, "Constant-trend"]], "Contents": [[4, "contents"], [8, "contents"], [9, "contents"], [87, "contents"], [90, "contents"]], "Contents:": [[329, null]], "Contribute": [[82, "contribute"], [91, "contribute"]], "Contributing to Documentation": [[9, null]], "Contributing to SpectroChemPy": [[5, null]], "Contributing to specific parts of the code": [[7, null]], "Contributing to the code": [[6, null]], "Convert between units": [[38, "convert-between-units"]], "Convolution with window filters": [[346, "Convolution-with-window-filters"]], "Convolution with windows": [[346, "Convolution-with-windows"]], "Coordinates": [[36, "coordinates"], [333, "Coordinates"]], "Coordinates-related objects": [[315, "coordinates-related-objects"]], "Copying existing NDDataset": [[333, "Copying-existing-NDDataset"]], "Core functionalities": [[55, null]], "Core objects": [[334, null]], "Create Environment": [[83, "create-environment"]], "Create a MCR-ALS object": [[19, "create-a-mcr-als-object"]], "Create a NMF object": [[21, "create-a-nmf-object"]], "Create a dataset from a function": [[333, "Create-a-dataset-from-a-function"]], "Create a new Jupyter notebook": [[330, "Create-a-new-Jupyter-notebook"]], "Create and fit a FastICA object": [[17, "create-and-fit-a-fastica-object"]], "Create quantities": [[38, "create-quantities"]], "Create your own style": [[336, "Create-your-own-style"]], "Creating NDDataset": [[315, "creating-nddataset"]], "Creating a Permanent Environment Shortcut": [[88, "creating-a-permanent-environment-shortcut"]], "Creation": [[36, "creation"]], "Creation from existing data": [[315, "creation-from-existing-data"]], "Creation from numerical ranges": [[315, "creation-from-numerical-ranges"]], "Credits": [[91, "credits"]], "Cross-decomposition": [[26, null], [33, "cross-decomposition"]], "Curvefitting": [[29, null], [33, "curvefitting"]], "Data": [[36, "data"]], "Data Processing Techniques": [[89, "Data-Processing-Techniques"]], "Data Selection and Manipulation": [[89, "Data-Selection-and-Manipulation"]], "Data Visualization": [[89, "Data-Visualization"]], "Decomposition": [[14, null], [33, "decomposition"]], "Default behaviour": [[322, "Default-behaviour"]], "Default plotting": [[336, "Default-plotting"]], "Denoising": [[64, null], [71, "denoising"], [78, "denoising"], [340, null]], "Denoising 2D spectra": [[340, "Denoising-2D-spectra"]], "Denoising a 2D Raman spectrum": [[65, null]], "Dependency updates": [[349, "dependency-updates"], [401, "dependency-updates"]], "Deprecations": [[349, "deprecations"], [378, "deprecations"], [382, "deprecations"], [391, "deprecations"], [392, "deprecations"], [393, "deprecations"], [395, "deprecations"], [397, "deprecations"]], "Designed for Open Science": [[90, "designed-for-open-science"]], "Determination of initial concentrations using EFA": [[320, "Determination-of-initial-concentrations-using-EFA"]], "Detrend independently on several data segment": [[339, "Detrend-independently-on-several-data-segment"]], "Detrending": [[78, "detrending"], [339, "Detrending"]], "Developer\u2019s Guide": [[11, null]], "Dialog boxes": [[326, "Dialog-boxes"]], "Directly loading Example Files": [[85, "directly-loading-example-files"]], "Docstring Format": [[8, "docstring-format"]], "Documentation": [[82, "documentation"]], "Documentation Sources": [[9, "documentation-sources"]], "Documentation Structure": [[9, "documentation-structure"]], "Documenting change log": [[6, "documenting-change-log"]], "EFA (Keller and Massart original example)": [[16, null]], "EFA example": [[15, null]], "Editors": [[13, null]], "Emphasis": [[332, "Emphasis"]], "Environment Setup": [[86, "environment-setup"], [88, "environment-setup"]], "Error handling": [[325, "Error-handling"]], "Evolving factor analysis": [[315, "evolving-factor-analysis"]], "Example": [[337, "Example"], [339, "Example"]], "Example Structure": [[8, "example-structure"]], "Examples": [[81, null]], "Examples Section": [[8, "examples-section"]], "Examples and Testing Data": [[84, "examples-and-testing-data"]], "Examples using spectrochempy.concatenate": [[146, "examples-using-spectrochempy-concatenate"]], "Examples using spectrochempy.denoise": [[156, "examples-using-spectrochempy-denoise"]], "Examples using spectrochempy.despike": [[157, "examples-using-spectrochempy-despike"]], "Examples using spectrochempy.detrend": [[158, "examples-using-spectrochempy-detrend"]], "Examples using spectrochempy.dot": [[161, "examples-using-spectrochempy-dot"]], "Examples using spectrochempy.em": [[163, "examples-using-spectrochempy-em"]], "Examples using spectrochempy.error_": [[166, "examples-using-spectrochempy-error"]], "Examples using spectrochempy.fft": [[168, "examples-using-spectrochempy-fft"]], "Examples using spectrochempy.info_": [[188, "examples-using-spectrochempy-info"]], "Examples using spectrochempy.load_iris": [[196, "examples-using-spectrochempy-load-iris"]], "Examples using spectrochempy.pk": [[215, "examples-using-spectrochempy-pk"]], "Examples using spectrochempy.plot": [[217, "examples-using-spectrochempy-plot"]], "Examples using spectrochempy.plot_multiple": [[224, "examples-using-spectrochempy-plot-multiple"]], "Examples using spectrochempy.plot_stack": [[228, "examples-using-spectrochempy-plot-stack"]], "Examples using spectrochempy.qsin": [[235, "examples-using-spectrochempy-qsin"]], "Examples using spectrochempy.read": [[237, "examples-using-spectrochempy-read"]], "Examples using spectrochempy.read_labspec": [[244, "examples-using-spectrochempy-read-labspec"]], "Examples using spectrochempy.read_matlab": [[246, "examples-using-spectrochempy-read-matlab"]], "Examples using spectrochempy.read_omnic": [[247, "examples-using-spectrochempy-read-omnic"]], "Examples using spectrochempy.read_opus": [[248, "examples-using-spectrochempy-read-opus"]], "Examples using spectrochempy.read_topspin": [[256, "examples-using-spectrochempy-read-topspin"]], "Examples using spectrochempy.read_wdf": [[257, "examples-using-spectrochempy-read-wdf"]], "Examples using spectrochempy.read_wire": [[258, "examples-using-spectrochempy-read-wire"]], "Examples using spectrochempy.run_script": [[266, "examples-using-spectrochempy-run-script"]], "Examples using spectrochempy.set_loglevel": [[270, "examples-using-spectrochempy-set-loglevel"]], "Examples using spectrochempy.sinm": [[278, "examples-using-spectrochempy-sinm"]], "Examples using spectrochempy.snip": [[280, "examples-using-spectrochempy-snip"]], "Examples using spectrochempy.sp": [[282, "examples-using-spectrochempy-sp"]], "Example\u2019s gallery": [[81, null]], "Exploring Your Data": [[89, "Exploring-Your-Data"]], "Exponential multiplication": [[338, "Exponential-multiplication"]], "Exponential window multiplication": [[58, null]], "Export a NDDataset": [[315, "export-a-nddataset"]], "External links": [[332, "External-links"]], "FFT of 1D NMR spectra": [[341, "FFT-of-1D-NMR-spectra"]], "FTIR interferogram processing": [[343, null]], "FastICA example": [[17, null]], "File": [[315, "file"]], "Filtering using API or NDDataset methods.": [[346, "Filtering-using-API-or-NDDataset-methods."]], "Filtering, Smoothing and Denoising": [[346, null]], "Find maxima by manual inspection of the plot": [[322, "Find-maxima-by-manual-inspection-of-the-plot"]], "Find maxima with an automated method: find_peaks()": [[322, "Find-maxima-with-an-automated-method:-find_peaks()"]], "Find peaks": [[315, "find-peaks"]], "Fit a model": [[75, "fit-a-model"]], "Fit the MCR-ALS model": [[19, "fit-the-mcr-als-model"]], "Fit the model": [[21, "fit-the-model"]], "Fitting": [[318, null]], "Fitting 1D dataset": [[30, null]], "Fitting script": [[318, "Fitting-script"]], "Fourier transform": [[315, "fourier-transform"]], "Frequently asked questions (FAQ)": [[93, null]], "Functions affecting magnitudes of the number but also units": [[344, "Functions-affecting-magnitudes-of-the-number-but-also-units"], [344, "id2"]], "Functions affecting magnitudes of the number but keeping units": [[344, "Functions-affecting-magnitudes-of-the-number-but-keeping-units"], [344, "id1"]], "Functions that require no units or dimensionless units for inputs. Returns dimensionless objects.": [[344, "Functions-that-require-no-units-or-dimensionless-units-for-inputs.-Returns-dimensionless-objects."], [344, "id3"]], "Functions that return numpy arrays (Work only for NDDataset)": [[344, "Functions-that-return-numpy-arrays-(Work-only-for-NDDataset)"], [344, "id4"]], "GUI Support": [[84, "gui-support"]], "Gaussian-Lorentzian apodization": [[338, "Gaussian-Lorentzian-apodization"]], "General": [[93, "general"]], "General Principles": [[5, "general-principles"]], "General information": [[325, "General-information"]], "Generate a test dataset": [[16, "generate-a-test-dataset"]], "Geometric shapes": [[332, "Geometric-shapes"]], "Get project\u2019s elements": [[335, "Get-project's-elements"]], "Get the mixing system and source spectral profiles": [[17, "get-the-mixing-system-and-source-spectral-profiles"]], "Getting Help": [[82, null]], "Getting Started": [[89, "Getting-Started"], [91, "getting-started"]], "Getting Started with Development": [[5, "getting-started-with-development"]], "Getting the Source Code": [[87, "getting-the-source-code"]], "Git Installation": [[87, "git-installation"]], "GitHub Discussions": [[82, "github-discussions"]], "GitHub Issues": [[82, "github-issues"]], "Glossary": [[314, null]], "Good practice: use os or pathlib modules": [[326, "Good-practice:-use-os-or-pathlib-modules"]], "Graphics": [[332, "Graphics"]], "Guessing the concentration profile with PCA + EFA": [[320, "Guessing-the-concentration-profile-with-PCA-+-EFA"]], "Guides & Tutorials": [[9, "guides-tutorials"]], "Headings": [[332, "Headings"]], "Horizontal lines": [[332, "Horizontal-lines"]], "How it works?": [[339, "How-it-works?"]], "How to get started": [[331, "How-to-get-started"]], "How to get the index from a coordinate?": [[93, "how-to-get-the-index-from-a-coordinate"]], "How to specify a plot with abscissa in ascending or descending order?": [[93, "how-to-specify-a-plot-with-abscissa-in-ascending-or-descending-order"]], "How to use NDDataset": [[35, null], [55, "how-to-use-nddataset"]], "Hyperbolic functions": [[344, "Hyperbolic-functions"], [344, "id5"]], "IRIS analysis without regularization": [[18, "iris-analysis-without-regularization"]], "Import & Export": [[328, null]], "Import / Export": [[40, null], [55, "import-export"]], "Import API": [[73, "import-api"], [74, "import-api"], [75, "import-api"]], "Import Data in SpectroChemPy": [[326, null]], "Import IR Data": [[327, null]], "Import NMR spectra": [[73, "import-nmr-spectra"]], "Import a NDataset from external source": [[315, "import-a-ndataset-from-external-source"]], "Import dataset from local files": [[41, "import-dataset-from-local-files"]], "Import dataset from remote files": [[41, "import-dataset-from-remote-files"]], "Import of Bruker OPUS files": [[327, "Import-of-Bruker-OPUS-files"]], "Import of OMNIC files": [[327, "Import-of-OMNIC-files"]], "Import with explicit directory or file pathnames": [[326, "Import-with-explicit-directory-or-file-pathnames"]], "Import/Export of JCAMP-DX files": [[327, "Import/Export-of-JCAMP-DX-files"]], "Import/export": [[315, "import-export"]], "Importing a 1D spectra": [[78, "importing-a-1d-spectra"]], "Importing a 2D NMR spectra": [[74, "importing-a-2d-nmr-spectra"]], "Importing a pseudo 2D NMR spectra": [[75, "importing-a-pseudo-2d-nmr-spectra"]], "Importing from external dataset": [[333, "Importing-from-external-dataset"]], "Indenting": [[332, "Indenting"]], "Independant Component Analysis": [[315, "independant-component-analysis"]], "Indexing": [[315, "indexing"]], "Initial guess and MCR ALS optimization": [[320, "Initial-guess-and-MCR-ALS-optimization"]], "Install Package": [[83, "install-package"]], "Install SpectroChemPy": [[86, "install-spectrochempy"]], "Install in Google Colaboratory (Colab)": [[85, null]], "Installation": [[85, "installation"]], "Installation Guide": [[83, null]], "Installation Guide for Mac OSX and Linux": [[86, null]], "Installation Guide for Windows": [[88, null]], "Installation Methods": [[87, "installation-methods"]], "Installation Steps": [[83, "installation-steps"]], "Installation from Sources": [[87, null]], "Installing Python": [[83, "installing-python"]], "Installing SpectroChemPy": [[83, "installing-spectrochempy"], [88, "installing-spectrochempy"]], "Integral inversion solver for spectroscopic data": [[315, "integral-inversion-solver-for-spectroscopic-data"]], "Internal links": [[332, "Internal-links"]], "Introduction": [[85, "introduction"], [320, "Introduction"], [321, "Introduction"], [324, "Introduction"], [331, null], [338, "Introduction"]], "Introduction to the plotting librairie": [[50, null]], "Joining or splitting datasets": [[315, "joining-or-splitting-datasets"]], "Kinetic": [[315, "kinetic"]], "Labels": [[333, "Labels"]], "Least square with non-negativity constraint (NNLS)": [[318, "Least-square-with-non-negativity-constraint-(NNLS)"]], "Line breaks": [[332, "Line-breaks"]], "Line broadening": [[341, "Line-broadening"]], "Linear regression": [[315, "linear-regression"]], "Linear trend": [[339, "Linear-trend"]], "Lineshape models": [[315, "lineshape-models"]], "List of UFuncs working on NDDataset:": [[344, "List-of-UFuncs-working-on-NDDataset:"]], "Load the API": [[336, "Load-the-API"]], "Load, prepare and plot the dataset": [[17, "load-prepare-and-plot-the-dataset"]], "Loading": [[335, "Loading"]], "Loading Bruker OPUS files": [[43, null]], "Loading RAMAN experimental file": [[45, null]], "Loading a NDDataset": [[20, "loading-a-nddataset"]], "Loading an IR (omnic SPG) experimental file": [[42, null]], "Loading an experimental dataset": [[322, "Loading-an-experimental-dataset"]], "Loading of experimental 1D NMR data": [[44, null]], "Loading of the dataset": [[321, "Loading-of-the-dataset"], [324, "Loading-of-the-dataset"]], "Loading the API": [[315, "loading-the-api"], [331, "Loading-the-API"]], "Loading the data": [[336, "Loading-the-data"]], "Loading the example dataset": [[19, "loading-the-example-dataset"]], "Logging": [[315, "logging"]], "Logic functions": [[315, "logic-functions"]], "Loglevel": [[325, "Loglevel"]], "MCR ALS": [[320, null]], "MCR-ALS example (adapted from Jaumot et al. 2005)": [[19, null]], "MCR-ALS with kinetic constraints": [[20, null]], "Magnitude calculation": [[341, "Magnitude-calculation"]], "Maintaining Your PR": [[5, "maintaining-your-pr"]], "Making Changes": [[5, "making-changes"]], "Markdown Cheat Sheet": [[332, null]], "Markdown cheat sheet": [[330, "Markdown-cheat-sheet"]], "Masking data": [[348, "Masking-data"]], "Masks": [[315, "masks"]], "Math operations on coordinates": [[333, "Math-operations-on-coordinates"]], "Mathematical Operations": [[89, "Mathematical-Operations"]], "Mathematical operations": [[315, "mathematical-operations"], [344, null]], "Mathematical symbols": [[332, "Mathematical-symbols"]], "Median filter": [[340, "Median-filter"]], "Methods for alignments": [[337, "Methods-for-alignments"]], "Methods to create NDDataset": [[333, "Methods-to-create-NDDataset"]], "Minimum and maximum": [[315, "minimum-and-maximum"]], "Misc": [[315, "misc"]], "Miscellaneous": [[315, "miscellaneous"]], "Monospace font": [[332, "Monospace-font"]], "More information about the MCRALS estimator": [[320, "More-information-about-the-MCRALS-estimator"]], "More insight on coordinates": [[333, "More-insight-on-coordinates"]], "More on peak properties": [[322, "More-on-peak-properties"]], "Moving average": [[346, "Moving-average"]], "Multivariate Curve Resolution - Alternating Least Squares": [[315, "multivariate-curve-resolution-alternating-least-squares"]], "Multivariate approach": [[339, "Multivariate-approach"]], "NDDataset": [[334, "nddataset"]], "NDDataset baseline correction": [[62, null]], "NDDataset coordinates example": [[37, null]], "NDDataset creation and plotting example": [[36, null]], "NDDataset modelling using non-linear optimisation method": [[318, "NDDataset-modelling-using-non-linear-optimisation-method"]], "NMF analysis example": [[21, null]], "New features": [[349, "new-features"], [353, "new-features"], [354, "new-features"], [358, "new-features"], [359, "new-features"], [360, "new-features"], [361, "new-features"], [362, "new-features"], [363, "new-features"], [366, "new-features"], [367, "new-features"], [368, "new-features"], [369, "new-features"], [370, "new-features"], [372, "new-features"], [373, "new-features"], [374, "new-features"], [375, "new-features"], [376, "new-features"], [377, "new-features"], [378, "new-features"], [379, "new-features"], [380, "new-features"], [381, "new-features"], [382, "new-features"], [384, "new-features"], [385, "new-features"], [386, "new-features"], [387, "new-features"], [388, "new-features"], [390, "new-features"], [392, "new-features"], [393, "new-features"], [394, "new-features"], [395, "new-features"], [397, "new-features"], [398, "new-features"], [399, "new-features"], [401, "new-features"]], "Next Steps": [[86, "next-steps"], [88, "next-steps"]], "Non-Negative Matrix Factorization": [[315, "non-negative-matrix-factorization"]], "Non-linear optimization and curve fit": [[315, "non-linear-optimization-and-curve-fit"]], "Numbered lists": [[332, "Numbered-lists"]], "Offset correction": [[315, "offset-correction"]], "One-dimensional (1D) Fourier transformation": [[341, null]], "Open Source and Free": [[90, "open-source-and-free"]], "Optional Dependencies": [[84, null]], "Optional dependencies": [[6, "optional-dependencies"]], "Options of find_peaks()": [[322, "Options-of-find_peaks()"]], "Other Licenses": [[2, "other-licenses"]], "Other apodization functions": [[338, "Other-apodization-functions"]], "Overview": [[84, "overview"]], "Overview of the main configuration parameters": [[336, "Overview-of-the-main-configuration-parameters"]], "Overview of the other model": [[339, "Overview-of-the-other-model"]], "PCA analysis example": [[23, null]], "PCA example (iris dataset)": [[22, null]], "PLS regression example": [[27, null]], "Papers citing SpectroChemPy": [[316, null]], "Parameter Documentation": [[8, "parameter-documentation"]], "Partial Least Square regression": [[315, "partial-least-square-regression"]], "Partial Least Squares Regression (PLSRegression)": [[324, null]], "Peak Integration": [[323, null]], "Peak Maxima Finding": [[322, null]], "Peak finding": [[318, "Peak-finding"]], "Peak fitting": [[74, "peak-fitting"]], "Peak picking": [[74, "peak-picking"]], "Phasing": [[315, "phasing"]], "Plot of the Real and Imaginary original data": [[338, "Plot-of-the-Real-and-Imaginary-original-data"]], "Plot results": [[21, "plot-results"]], "Plotting": [[315, "plotting"], [336, null]], "Plotting 1D datasets": [[336, "Plotting-1D-datasets"]], "Plotting datasets": [[48, null], [55, "plotting-datasets"]], "Plotting several dataset on the same figure": [[336, "Plotting-several-dataset-on-the-same-figure"]], "Plotting the results": [[19, "plotting-the-results"]], "Polynomial": [[339, "Polynomial"]], "Polynomial trend": [[339, "Polynomial-trend"]], "Power spectrum": [[341, "Power-spectrum"]], "Pre-commit": [[6, "pre-commit"]], "Prepare the dataset to NMF factorize": [[21, "prepare-the-dataset-to-nmf-factorize"]], "Preparing the data": [[336, "Preparing-the-data"]], "Preprocessing": [[341, "Preprocessing"]], "Prerequisites": [[83, "prerequisites"], [87, "prerequisites"]], "Principal Component Analysis": [[321, null]], "Processing": [[315, "processing"], [342, null]], "Processing NDDataset": [[71, null]], "Processing NMR datasets": [[71, "processing-nmr-datasets"], [72, null]], "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)": [[74, null]], "Processing RAMAN spectra": [[78, null]], "Processing Raman datasets": [[71, "processing-raman-datasets"], [77, null]], "Processing Relaxation measurement": [[75, null]], "Processing functions": [[332, "Processing-functions"]], "Processing, analyzing and modeling spectroscopic data": [[91, null]], "Project": [[334, "project"]], "Project Management": [[52, null], [55, "project-management"]], "Project creation": [[53, null], [335, "Project-creation"]], "Project management": [[315, "project-management"], [335, null]], "Prominence": [[322, "Prominence"]], "Public API reference": [[315, null]], "Python (PEP8 / ruff)": [[6, "python-pep8-ruff"]], "Python-Powered Analysis": [[90, "python-powered-analysis"]], "Qt Backend": [[84, "qt-backend"]], "Quick Start": [[9, "quick-start"], [85, "quick-start"]], "Reading Renishaw WiRE files": [[46, null]], "Reading datasets": [[41, null]], "Real Fourier transform": [[341, "Real-Fourier-transform"]], "Reconstruct the dataset": [[17, "reconstruct-the-dataset"]], "Reference": [[91, "reference"]], "Release notes": [[350, null]], "Remove an element from a project": [[335, "Remove-an-element-from-a-project"]], "Removing cosmic ray spikes from a Raman spectrum": [[66, null]], "Removing cosmic rays spike from Raman spectra": [[340, "Removing-cosmic-rays-spike-from-Raman-spectra"]], "Reporting Issues": [[12, null]], "Requirements": [[86, "requirements"], [88, "requirements"]], "Revisions 0.1.0 to 0.1.19": [[352, null]], "Rolling": [[315, "rolling"]], "Rubberband": [[339, "Rubberband"]], "Running PLSRegression": [[324, "Running-PLSRegression"]], "Running a PCA": [[321, "Running-a-PCA"]], "Running the test suite": [[6, "running-the-test-suite"]], "SIMPLISMA example": [[24, null]], "SIMPLe to use Interactive Self-modeling Mixture Analysis": [[315, "simple-to-use-interactive-self-modeling-mixture-analysis"]], "Saving": [[335, "Saving"]], "Saving and loading projects": [[335, "Saving-and-loading-projects"]], "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum": [[69, null]], "Savitzky-Golay filter": [[346, "Savitzky-Golay-filter"]], "Savitzky-Golay filter:savgol": [[346, "Savitzky-Golay-filter:savgol"]], "Scientific Computing Extensions": [[84, "scientific-computing-extensions"]], "Script": [[334, "script"]], "Scripting": [[315, "scripting"]], "See also": [[3, null]], "Select data in a NDDataset": [[315, "select-data-in-a-nddataset"]], "Selecting the output window": [[336, "Selecting-the-output-window"]], "Setting Up Your Development Environment": [[5, "setting-up-your-development-environment"]], "Setting coordinates using set_coordset": [[333, "Setting-coordinates-using-set_coordset"]], "Setting new coordinates": [[18, "setting-new-coordinates"], [37, "setting-new-coordinates"]], "Sharing coordinates between dimensions": [[333, "Sharing-coordinates-between-dimensions"]], "Shifted Gaussian-Lorentzian apodization": [[338, "Shifted-Gaussian-Lorentzian-apodization"]], "Shifted apodization": [[338, "Shifted-apodization"]], "Sine bell and squared Sine bell window multiplication": [[59, null]], "Singular value decomposition and Principal component analysis": [[315, "singular-value-decomposition-and-principal-component-analysis"]], "Slicing NDDatasets": [[345, null]], "Slicing of NDDatasets": [[345, "Slicing-of-NDDatasets"]], "Slicing with coordinates": [[345, "Slicing-with-coordinates"]], "Slicing with indexes": [[345, "Slicing-with-indexes"]], "Smoothing, filtering, denoising": [[315, "smoothing-filtering-denoising"]], "Solutions": [[320, "Solutions"]], "Solve a linear equation using LSTSQ": [[31, null]], "Solving a linear equation using the least square method (LSTSQ)": [[318, "Solving-a-linear-equation-using-the-least-square-method-(LSTSQ)"]], "Sorting": [[315, "sorting"]], "Source control": [[13, "source-control"]], "SpectroChemPy Docstring Guide": [[8, null]], "SpectroChemPy Overview": [[89, null]], "SpectroChempy License": [[2, null]], "Stack Overflow": [[82, "stack-overflow"]], "Start editing": [[13, "start-editing"]], "Starting Jupyter lab": [[330, null]], "Statistical operations": [[315, "statistical-operations"]], "Step 1: Add Tests and Sample Files": [[4, "step-1-add-tests-and-sample-files"]], "Step 2: Register the File Format": [[4, "step-2-register-the-file-format"]], "Step 3: Create the Reader Module": [[4, "step-3-create-the-reader-module"]], "Step 4: Data Format Guidelines": [[4, "step-4-data-format-guidelines"]], "Step 5: Documentation": [[4, "step-5-documentation"]], "Summary of the coordinate setting syntax": [[333, "Summary-of-the-coordinate-setting-syntax"]], "Sums, integal, difference": [[315, "sums-integal-difference"]], "Supported file formats": [[327, "Supported-file-formats"]], "Syntax 1": [[333, "Syntax-1"]], "Syntax 2": [[333, "Syntax-2"]], "Syntax for parameters definition": [[318, "Syntax-for-parameters-definition"]], "Table of Contents": [[83, "table-of-contents"], [85, "table-of-contents"], [86, "table-of-contents"], [88, "table-of-contents"], [93, "table-of-contents"], [315, "table-of-contents"]], "Table of Contents:": [[6, "table-of-contents"]], "Table of contents:": [[5, "table-of-contents"]], "Test-driven development/code writing": [[6, "test-driven-development-code-writing"]], "Testing with continuous integration": [[6, "testing-with-continuous-integration"]], "The (minimal) dataset": [[320, "The-(minimal)-dataset"]], "The Baseline processor": [[339, "The-Baseline-processor"]], "The Filter processor": [[346, "The-Filter-processor"]], "The NDDataset Object": [[315, "the-nddataset-object"]], "The NDDataset object": [[333, null]], "The order of spectra": [[327, "The-order-of-spectra"]], "The smooth method": [[346, "The-smooth-method"]], "Third-party Licenses": [[1, "third-party-licenses"]], "Time domain baseline correction": [[341, "Time-domain-baseline-correction"]], "Time domain baseline correction (NMR)": [[347, null]], "Time-domain processing": [[315, "time-domain-processing"]], "Tips for Success": [[5, "tips-for-success"]], "To get help about the different configuration parameters": [[320, "To-get-help-about-the-different-configuration-parameters"]], "Todo": [[1, "id1"], [334, "id1"]], "Transpose-like operations": [[315, "transpose-like-operations"]], "Transposition": [[348, "Transposition"]], "Trigonometric functions. Require dimensionless/unitless dataset or radians.": [[344, "Trigonometric-functions.-Require-dimensionless/unitless-dataset-or-radians."]], "Trigonometric functions. Require unitless data or radian units.": [[344, "Trigonometric-functions.-Require-unitless-data-or-radian-units."]], "Troubleshooting": [[84, "troubleshooting"]], "Ufuncs (Universal Numpy\u2019s functions)": [[344, "Ufuncs-(Universal-Numpy's-functions)"]], "Unary functions": [[344, "Unary-functions"]], "Unit conversions": [[344, "Unit-conversions"]], "Units": [[333, "Units"]], "Units for dataset": [[38, "units-for-dataset"]], "Units manipulation": [[315, "units-manipulation"]], "Units manipulation examples": [[38, null]], "Updating SpectroChemPy": [[87, "updating-spectrochempy"]], "Uploading a dataset": [[37, "uploading-a-dataset"]], "Uploading dataset": [[18, "uploading-dataset"]], "Usage": [[344, "Usage"]], "Use of PCA to assess the number of pure species": [[320, "Use-of-PCA-to-assess-the-number-of-pure-species"]], "User Guide and Tutorials": [[329, null]], "User\u2019s Guide & Tutorials": [[91, "user-s-guide-tutorials"]], "Using File Explorer": [[85, "using-file-explorer"]], "Using Git Repository": [[85, "using-git-repository"]], "Using Google Drive": [[85, "using-google-drive"]], "Using numpy-like constructors of NDDatasets": [[333, "Using-numpy-like-constructors-of-NDDatasets"]], "Using plot_multiple to plot several datasets on the same figure": [[49, null]], "Using pytest": [[6, "using-pytest"]], "Using the application in a web browser": [[330, "Using-the-application-in-a-web-browser"]], "Utilities": [[315, "utilities"], [315, "id1"]], "Verifying Installation": [[86, "verifying-installation"], [87, "verifying-installation"], [88, "verifying-installation"]], "Version 0.1": [[350, "version-0-1"]], "Version 0.2": [[350, "version-0-2"]], "Version 0.3": [[350, "version-0-3"]], "Version 0.4": [[350, "version-0-4"]], "Version 0.5": [[350, "version-0-5"]], "Version 0.6": [[350, "version-0-6"]], "Version 0.7": [[350, "version-0-7"]], "Version Control Setup": [[5, "version-control-setup"]], "Visual Studio Installation": [[13, "visual-studio-installation"]], "What is the slicing ?": [[345, "What-is-the-slicing-?"]], "What to do if questions arise": [[331, "What-to-do-if-questions-arise"]], "What\u2019s new in revision": [[349, null]], "What\u2019s new in revision 0.2.0": [[353, null]], "What\u2019s new in revision 0.2.10 [2021-02-14]": [[354, null]], "What\u2019s new in revision 0.2.11 [2021-02-17]": [[355, null]], "What\u2019s new in revision 0.2.12 [2021-02-23]": [[356, null]], "What\u2019s new in revision 0.2.13 [2021-02-23]": [[357, null]], "What\u2019s new in revision 0.2.14 [2021-02-25]": [[358, null]], "What\u2019s new in revision 0.2.15 [2021-03-29]": [[359, null]], "What\u2019s new in revision 0.2.16 [2021-11-11]": [[360, null]], "What\u2019s new in revision 0.2.17 [2021-11-29]": [[361, null]], "What\u2019s new in revision 0.2.18 [2022-01-05]": [[362, null]], "What\u2019s new in revision 0.2.21 [2022-01-09]": [[363, null]], "What\u2019s new in revision 0.2.22 [2022-01-10]": [[364, null]], "What\u2019s new in revision 0.2.23 [2022-01-16]": [[365, null]], "What\u2019s new in revision 0.2.4": [[366, null]], "What\u2019s new in revision 0.2.5": [[367, null]], "What\u2019s new in revision 0.2.6": [[368, null]], "What\u2019s new in revision 0.2.7": [[369, null]], "What\u2019s new in revision 0.2.8": [[370, null]], "What\u2019s new in revision 0.2.9 [2021-11-29]": [[371, null]], "What\u2019s new in revision 0.3.0 [2022-01-20]": [[372, null]], "What\u2019s new in revision 0.3.1 [2022-01-21]": [[373, null]], "What\u2019s new in revision 0.3.2 [2022-01-31]": [[374, null]], "What\u2019s new in revision 0.3.3 [2022-03-9]": [[375, null]], "What\u2019s new in revision 0.4.1 [2022-03-14]": [[376, null]], "What\u2019s new in revision 0.4.10 [2023-01-07]": [[377, null]], "What\u2019s new in revision 0.4.2 [2022-03-16]": [[378, null]], "What\u2019s new in revision 0.4.3 [2022-03-20]": [[379, null]], "What\u2019s new in revision 0.4.4 [2022-03-22]": [[380, null]], "What\u2019s new in revision 0.4.5 [2022-04-09]": [[381, null]], "What\u2019s new in revision 0.4.6 [2022-05-16]": [[382, null]], "What\u2019s new in revision 0.4.7 [2022-05-16]": [[383, null]], "What\u2019s new in revision 0.4.9 [2023-01-05]": [[384, null]], "What\u2019s new in revision 0.5.0 [2023-01-11]": [[385, null]], "What\u2019s new in revision 0.5.1": [[386, null]], "What\u2019s new in revision 0.5.2": [[387, null]], "What\u2019s new in revision 0.5.3": [[388, null]], "What\u2019s new in revision 0.5.4": [[389, null]], "What\u2019s new in revision 0.5.5": [[390, null]], "What\u2019s new in revision 0.6.1": [[391, null]], "What\u2019s new in revision 0.6.10": [[392, null]], "What\u2019s new in revision 0.6.2": [[393, null]], "What\u2019s new in revision 0.6.3": [[394, null]], "What\u2019s new in revision 0.6.4": [[395, null]], "What\u2019s new in revision 0.6.5": [[396, null]], "What\u2019s new in revision 0.6.6": [[397, null]], "What\u2019s new in revision 0.6.7": [[398, null]], "What\u2019s new in revision 0.6.8": [[399, null]], "What\u2019s new in revision 0.6.9": [[400, null]], "What\u2019s new in revision 0.7.0": [[401, null]], "What\u2019s new in revision 0.7.1": [[351, null], [402, null]], "Where are the preference\u2019s files saved?": [[93, "where-are-the-preference-s-files-saved"]], "Where to go next?": [[331, "Where-to-go-next?"]], "Whittaker-Eilers filter": [[346, "Whittaker-Eilers-filter"]], "Whittaker-eilers filter : whittaker": [[346, "Whittaker-eilers-filter-:-whittaker"]], "Why NOT SpectroChemPy ?": [[90, "why-not-spectrochempy"]], "Why SpectroChemPy?": [[90, null]], "Width": [[322, "Width"]], "Window size influence": [[346, "Window-size-influence"]], "With regularization and a manual search": [[18, "with-regularization-and-a-manual-search"]], "Working with Data": [[85, "working-with-data"]], "Working with NDDataset Objects": [[89, "Working-with-NDDataset-Objects"]], "Writing Tips": [[9, "writing-tips"]], "Writing and executing SpectroChemPy scripts": [[331, "Writing-and-executing-SpectroChemPy-scripts"]], "Writing tests": [[6, "writing-tests"]], "Zero-filling": [[315, "zero-filling"], [341, "Zero-filling"]], "a) import spg file": [[327, "a)-import-spg-file"]], "abs": [[344, "abs"]], "absolute (alias of abs)": [[344, "absolute-(alias-of-abs)"]], "add": [[344, "add"]], "arccos": [[344, "arccos"]], "arccosh": [[344, "arccosh"]], "arcsin": [[344, "arcsin"]], "arcsinh": [[344, "arcsinh"]], "arctan": [[344, "arctan"]], "arctanh": [[344, "arctanh"]], "b) Import of .spa files": [[327, "b)-Import-of-.spa-files"]], "basc": [[339, "basc"]], "cbrt": [[344, "cbrt"]], "ceil": [[344, "ceil"]], "cos": [[344, "cos"]], "cosh": [[344, "cosh"]], "deg2rad": [[344, "deg2rad"]], "despike method": [[340, "despike-method"]], "divide": [[344, "divide"]], "exp": [[344, "exp"]], "exp2": [[344, "exp2"]], "expm1": [[344, "expm1"]], "fabs (absolute for float arrays)": [[344, "fabs-(absolute-for-float-arrays)"]], "filtering": [[68, null], [71, "filtering"]], "first method": [[337, "first-method"]], "floor": [[344, "floor"]], "floor_divide": [[344, "floor_divide"]], "inner method": [[337, "inner-method"]], "isfinite": [[344, "isfinite"]], "isinf": [[344, "isinf"]], "isnan": [[344, "isnan"]], "last method": [[337, "last-method"]], "log": [[344, "log"]], "log10": [[344, "log10"]], "log1p": [[344, "log1p"]], "log2": [[344, "log2"]], "logical_not": [[344, "logical_not"]], "multiply": [[344, "multiply"]], "nD-Dataset (multidimensional dataset)": [[333, "nD-Dataset-(multidimensional-dataset)"]], "nd-Dataset": [[36, "nd-dataset"]], "negative": [[344, "negative"]], "rad2deg": [[344, "rad2deg"]], "reciprocal": [[344, "reciprocal"]], "rint": [[344, "rint"]], "sign": [[344, "sign"]], "signbit": [[344, "signbit"]], "sin": [[344, "sin"]], "sinh": [[344, "sinh"]], "spectrochempy.ActionMassKinetics": [[94, null]], "spectrochempy.Baseline": [[95, null]], "spectrochempy.BaselineCorrector": [[96, null]], "spectrochempy.Coord": [[97, null]], "spectrochempy.CoordSet": [[98, null]], "spectrochempy.EFA": [[99, null]], "spectrochempy.FastICA": [[100, null]], "spectrochempy.FileSelector": [[101, null]], "spectrochempy.Filter": [[102, null]], "spectrochempy.II": [[103, null]], "spectrochempy.IR": [[104, null]], "spectrochempy.IRIS": [[105, null]], "spectrochempy.IrisKernel": [[106, null]], "spectrochempy.LSTSQ": [[107, null]], "spectrochempy.MCRALS": [[108, null]], "spectrochempy.NDDataset": [[109, null]], "spectrochempy.NDDataset.save": [[110, null]], "spectrochempy.NDDataset.save_as": [[111, null]], "spectrochempy.NMF": [[112, null]], "spectrochempy.NNLS": [[113, null]], "spectrochempy.Optimize": [[114, null]], "spectrochempy.PCA": [[115, null]], "spectrochempy.PFR": [[116, null]], "spectrochempy.PLSRegression": [[117, null]], "spectrochempy.Project": [[118, null]], "spectrochempy.Quantity": [[119, null]], "spectrochempy.RI": [[120, null]], "spectrochempy.RR": [[121, null]], "spectrochempy.SIMPLISMA": [[122, null]], "spectrochempy.SVD": [[123, null]], "spectrochempy.Script": [[124, null]], "spectrochempy.Unit": [[125, null]], "spectrochempy.abs": [[126, null]], "spectrochempy.absolute": [[127, null]], "spectrochempy.align": [[128, null]], "spectrochempy.all": [[129, null]], "spectrochempy.amax": [[130, null]], "spectrochempy.amin": [[131, null]], "spectrochempy.any": [[132, null]], "spectrochempy.arange": [[133, null]], "spectrochempy.argmax": [[134, null]], "spectrochempy.argmin": [[135, null]], "spectrochempy.around": [[136, null]], "spectrochempy.asls": [[137, null]], "spectrochempy.asymmetricvoigtmodel": [[138, null]], "spectrochempy.autosub": [[139, null]], "spectrochempy.average": [[140, null]], "spectrochempy.bartlett": [[141, null]], "spectrochempy.basc": [[142, null]], "spectrochempy.blackmanharris": [[143, null]], "spectrochempy.clip": [[144, null]], "spectrochempy.component": [[145, null]], "spectrochempy.concatenate": [[146, null]], "spectrochempy.conj": [[147, null]], "spectrochempy.conjugate": [[148, null]], "spectrochempy.coordmax": [[149, null]], "spectrochempy.coordmin": [[150, null]], "spectrochempy.copy": [[151, null]], "spectrochempy.cs": [[152, null]], "spectrochempy.cumsum": [[153, null]], "spectrochempy.dc": [[154, null]], "spectrochempy.debug_": [[155, null]], "spectrochempy.denoise": [[156, null]], "spectrochempy.despike": [[157, null]], "spectrochempy.detrend": [[158, null]], "spectrochempy.diag": [[159, null]], "spectrochempy.diagonal": [[160, null]], "spectrochempy.dot": [[161, null]], "spectrochempy.download_nist_ir": [[162, null]], "spectrochempy.em": [[163, null]], "spectrochempy.empty": [[164, null]], "spectrochempy.empty_like": [[165, null]], "spectrochempy.error_": [[166, null]], "spectrochempy.eye": [[167, null]], "spectrochempy.fft": [[168, null]], "spectrochempy.find_peaks": [[169, null]], "spectrochempy.fromfunction": [[170, null]], "spectrochempy.fromiter": [[171, null]], "spectrochempy.fsh": [[172, null]], "spectrochempy.fsh2": [[173, null]], "spectrochempy.full": [[174, null]], "spectrochempy.full_like": [[175, null]], "spectrochempy.gaussianmodel": [[176, null]], "spectrochempy.general_hamming": [[177, null]], "spectrochempy.geomspace": [[178, null]], "spectrochempy.get_baseline": [[179, null]], "spectrochempy.get_loglevel": [[180, null]], "spectrochempy.gm": [[181, null]], "spectrochempy.hamming": [[182, null]], "spectrochempy.hann": [[183, null]], "spectrochempy.ht": [[184, null]], "spectrochempy.identity": [[185, null]], "spectrochempy.ifft": [[186, null]], "spectrochempy.imag": [[187, null]], "spectrochempy.info_": [[188, null]], "spectrochempy.interpolate": [[189, null]], "spectrochempy.is_units_compatible": [[190, null]], "spectrochempy.ito": [[191, null]], "spectrochempy.ito_base_units": [[192, null]], "spectrochempy.ito_reduced_units": [[193, null]], "spectrochempy.linspace": [[194, null]], "spectrochempy.load": [[195, null]], "spectrochempy.load_iris": [[196, null]], "spectrochempy.logspace": [[197, null]], "spectrochempy.lorentzianmodel": [[198, null]], "spectrochempy.ls": [[199, null]], "spectrochempy.max": [[200, null]], "spectrochempy.mc": [[201, null]], "spectrochempy.mean": [[202, null]], "spectrochempy.min": [[203, null]], "spectrochempy.multiplot": [[204, null]], "spectrochempy.multiplot_image": [[205, null]], "spectrochempy.multiplot_lines": [[206, null]], "spectrochempy.multiplot_map": [[207, null]], "spectrochempy.multiplot_scatter": [[208, null]], "spectrochempy.multiplot_stack": [[209, null]], "spectrochempy.multiplot_with_transposed": [[210, null]], "spectrochempy.ones": [[211, null]], "spectrochempy.ones_like": [[212, null]], "spectrochempy.pathclean": [[213, null]], "spectrochempy.pipe": [[214, null]], "spectrochempy.pk": [[215, null]], "spectrochempy.pk_exp": [[216, null]], "spectrochempy.plot": [[217, null]], "spectrochempy.plot_1D": [[218, null]], "spectrochempy.plot_2D": [[219, null]], "spectrochempy.plot_3D": [[220, null]], "spectrochempy.plot_bar": [[221, null]], "spectrochempy.plot_image": [[222, null]], "spectrochempy.plot_map": [[223, null]], "spectrochempy.plot_multiple": [[224, null]], "spectrochempy.plot_pen": [[225, null]], "spectrochempy.plot_scatter": [[226, null]], "spectrochempy.plot_scatter_pen": [[227, null]], "spectrochempy.plot_stack": [[228, null]], "spectrochempy.plot_surface": [[229, null]], "spectrochempy.plot_waterfall": [[230, null]], "spectrochempy.plot_with_transposed": [[231, null]], "spectrochempy.polynomialbaseline": [[232, null]], "spectrochempy.ps": [[233, null]], "spectrochempy.ptp": [[234, null]], "spectrochempy.qsin": [[235, null]], "spectrochempy.random": [[236, null]], "spectrochempy.read": [[237, null]], "spectrochempy.read_carroucell": [[238, null]], "spectrochempy.read_csv": [[239, null]], "spectrochempy.read_ddr": [[240, null]], "spectrochempy.read_dir": [[241, null]], "spectrochempy.read_hdr": [[242, null]], "spectrochempy.read_jcamp": [[243, null]], "spectrochempy.read_labspec": [[244, null]], "spectrochempy.read_mat": [[245, null]], "spectrochempy.read_matlab": [[246, null]], "spectrochempy.read_omnic": [[247, null]], "spectrochempy.read_opus": [[248, null]], "spectrochempy.read_quadera": [[249, null]], "spectrochempy.read_sdr": [[250, null]], "spectrochempy.read_soc": [[251, null]], "spectrochempy.read_spa": [[252, null]], "spectrochempy.read_spc": [[253, null]], "spectrochempy.read_spg": [[254, null]], "spectrochempy.read_srs": [[255, null]], "spectrochempy.read_topspin": [[256, null]], "spectrochempy.read_wdf": [[257, null]], "spectrochempy.read_wire": [[258, null]], "spectrochempy.read_zip": [[259, null]], "spectrochempy.real": [[260, null]], "spectrochempy.remove_masks": [[261, null]], "spectrochempy.roll": [[262, null]], "spectrochempy.round": [[263, null]], "spectrochempy.rs": [[264, null]], "spectrochempy.run_all_scripts": [[265, null]], "spectrochempy.run_script": [[266, null]], "spectrochempy.savgol": [[267, null]], "spectrochempy.set_complex": [[268, null]], "spectrochempy.set_hypercomplex": [[269, null]], "spectrochempy.set_loglevel": [[270, null]], "spectrochempy.set_nmr_context": [[271, null]], "spectrochempy.set_quaternion": [[272, null]], "spectrochempy.show": [[273, null]], "spectrochempy.show_versions": [[274, null]], "spectrochempy.sigmoidmodel": [[275, null]], "spectrochempy.simpson": [[276, null]], "spectrochempy.sine": [[277, null]], "spectrochempy.sinm": [[278, null]], "spectrochempy.smooth": [[279, null]], "spectrochempy.snip": [[280, null]], "spectrochempy.sort": [[281, null]], "spectrochempy.sp": [[282, null]], "spectrochempy.squeeze": [[283, null]], "spectrochempy.stack": [[284, null]], "spectrochempy.std": [[285, null]], "spectrochempy.sum": [[286, null]], "spectrochempy.swapdims": [[287, null]], "spectrochempy.take": [[288, null]], "spectrochempy.to": [[289, null]], "spectrochempy.to_array": [[290, null]], "spectrochempy.to_base_units": [[291, null]], "spectrochempy.to_reduced_units": [[292, null]], "spectrochempy.to_xarray": [[293, null]], "spectrochempy.transpose": [[294, null]], "spectrochempy.trapezoid": [[295, null]], "spectrochempy.triang": [[296, null]], "spectrochempy.var": [[297, null]], "spectrochempy.voigtmodel": [[298, null]], "spectrochempy.warning_": [[299, null]], "spectrochempy.whittaker": [[300, null]], "spectrochempy.write": [[301, null]], "spectrochempy.write_csv": [[302, null]], "spectrochempy.write_excel": [[303, null]], "spectrochempy.write_jcamp": [[304, null]], "spectrochempy.write_mat": [[305, null]], "spectrochempy.write_matlab": [[306, null]], "spectrochempy.write_xls": [[307, null]], "spectrochempy.zeros": [[308, null]], "spectrochempy.zeros_like": [[309, null]], "spectrochempy.zf": [[310, null]], "spectrochempy.zf_auto": [[311, null]], "spectrochempy.zf_double": [[312, null]], "spectrochempy.zf_size": [[313, null]], "sqrt": [[344, "sqrt"]], "square": [[344, "square"]], "subtract": [[344, "subtract"]], "tan": [[344, "tan"]], "tanh": [[344, "tanh"]], "trunc": [[344, "trunc"]]}, "docnames": ["credits/citing", "credits/credits", "credits/license", "credits/seealso", "devguide/codespec_adding_reader", "devguide/contributing", "devguide/contributing_codebase", "devguide/contributing_codespecifics", "devguide/contributing_docstring", "devguide/contributing_documentation", "devguide/examples", "devguide/index", "devguide/issues", "devguide/visualcode", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/index", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/e_project/index", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/index", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/index", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/plot_baseline_correction", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/raman/index", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times", "gettingstarted/examples/index", "gettingstarted/getting_help", "gettingstarted/install/index", "gettingstarted/install/install_adds", "gettingstarted/install/install_colab", "gettingstarted/install/install_mac_linux", "gettingstarted/install/install_sources", "gettingstarted/install/install_win", "gettingstarted/overview", "gettingstarted/whyscpy", "index", "reference/bibliography", "reference/faq", "reference/generated/spectrochempy.ActionMassKinetics", "reference/generated/spectrochempy.Baseline", "reference/generated/spectrochempy.BaselineCorrector", "reference/generated/spectrochempy.Coord", "reference/generated/spectrochempy.CoordSet", "reference/generated/spectrochempy.EFA", "reference/generated/spectrochempy.FastICA", "reference/generated/spectrochempy.FileSelector", "reference/generated/spectrochempy.Filter", "reference/generated/spectrochempy.II", "reference/generated/spectrochempy.IR", "reference/generated/spectrochempy.IRIS", "reference/generated/spectrochempy.IrisKernel", "reference/generated/spectrochempy.LSTSQ", "reference/generated/spectrochempy.MCRALS", "reference/generated/spectrochempy.NDDataset", "reference/generated/spectrochempy.NDDataset.save", "reference/generated/spectrochempy.NDDataset.save_as", "reference/generated/spectrochempy.NMF", "reference/generated/spectrochempy.NNLS", "reference/generated/spectrochempy.Optimize", "reference/generated/spectrochempy.PCA", "reference/generated/spectrochempy.PFR", "reference/generated/spectrochempy.PLSRegression", "reference/generated/spectrochempy.Project", "reference/generated/spectrochempy.Quantity", "reference/generated/spectrochempy.RI", "reference/generated/spectrochempy.RR", "reference/generated/spectrochempy.SIMPLISMA", "reference/generated/spectrochempy.SVD", "reference/generated/spectrochempy.Script", "reference/generated/spectrochempy.Unit", "reference/generated/spectrochempy.abs", "reference/generated/spectrochempy.absolute", "reference/generated/spectrochempy.align", "reference/generated/spectrochempy.all", "reference/generated/spectrochempy.amax", "reference/generated/spectrochempy.amin", "reference/generated/spectrochempy.any", "reference/generated/spectrochempy.arange", "reference/generated/spectrochempy.argmax", "reference/generated/spectrochempy.argmin", "reference/generated/spectrochempy.around", "reference/generated/spectrochempy.asls", "reference/generated/spectrochempy.asymmetricvoigtmodel", "reference/generated/spectrochempy.autosub", "reference/generated/spectrochempy.average", "reference/generated/spectrochempy.bartlett", "reference/generated/spectrochempy.basc", "reference/generated/spectrochempy.blackmanharris", "reference/generated/spectrochempy.clip", "reference/generated/spectrochempy.component", "reference/generated/spectrochempy.concatenate", "reference/generated/spectrochempy.conj", "reference/generated/spectrochempy.conjugate", "reference/generated/spectrochempy.coordmax", "reference/generated/spectrochempy.coordmin", "reference/generated/spectrochempy.copy", "reference/generated/spectrochempy.cs", "reference/generated/spectrochempy.cumsum", "reference/generated/spectrochempy.dc", "reference/generated/spectrochempy.debug_", "reference/generated/spectrochempy.denoise", "reference/generated/spectrochempy.despike", "reference/generated/spectrochempy.detrend", "reference/generated/spectrochempy.diag", "reference/generated/spectrochempy.diagonal", "reference/generated/spectrochempy.dot", "reference/generated/spectrochempy.download_nist_ir", "reference/generated/spectrochempy.em", "reference/generated/spectrochempy.empty", "reference/generated/spectrochempy.empty_like", "reference/generated/spectrochempy.error_", "reference/generated/spectrochempy.eye", "reference/generated/spectrochempy.fft", "reference/generated/spectrochempy.find_peaks", "reference/generated/spectrochempy.fromfunction", "reference/generated/spectrochempy.fromiter", "reference/generated/spectrochempy.fsh", "reference/generated/spectrochempy.fsh2", "reference/generated/spectrochempy.full", "reference/generated/spectrochempy.full_like", "reference/generated/spectrochempy.gaussianmodel", "reference/generated/spectrochempy.general_hamming", "reference/generated/spectrochempy.geomspace", "reference/generated/spectrochempy.get_baseline", "reference/generated/spectrochempy.get_loglevel", "reference/generated/spectrochempy.gm", "reference/generated/spectrochempy.hamming", "reference/generated/spectrochempy.hann", "reference/generated/spectrochempy.ht", "reference/generated/spectrochempy.identity", "reference/generated/spectrochempy.ifft", "reference/generated/spectrochempy.imag", "reference/generated/spectrochempy.info_", "reference/generated/spectrochempy.interpolate", "reference/generated/spectrochempy.is_units_compatible", "reference/generated/spectrochempy.ito", "reference/generated/spectrochempy.ito_base_units", "reference/generated/spectrochempy.ito_reduced_units", "reference/generated/spectrochempy.linspace", "reference/generated/spectrochempy.load", "reference/generated/spectrochempy.load_iris", "reference/generated/spectrochempy.logspace", "reference/generated/spectrochempy.lorentzianmodel", "reference/generated/spectrochempy.ls", "reference/generated/spectrochempy.max", "reference/generated/spectrochempy.mc", "reference/generated/spectrochempy.mean", "reference/generated/spectrochempy.min", "reference/generated/spectrochempy.multiplot", "reference/generated/spectrochempy.multiplot_image", "reference/generated/spectrochempy.multiplot_lines", "reference/generated/spectrochempy.multiplot_map", "reference/generated/spectrochempy.multiplot_scatter", "reference/generated/spectrochempy.multiplot_stack", "reference/generated/spectrochempy.multiplot_with_transposed", "reference/generated/spectrochempy.ones", "reference/generated/spectrochempy.ones_like", "reference/generated/spectrochempy.pathclean", "reference/generated/spectrochempy.pipe", "reference/generated/spectrochempy.pk", "reference/generated/spectrochempy.pk_exp", "reference/generated/spectrochempy.plot", "reference/generated/spectrochempy.plot_1D", "reference/generated/spectrochempy.plot_2D", "reference/generated/spectrochempy.plot_3D", "reference/generated/spectrochempy.plot_bar", "reference/generated/spectrochempy.plot_image", "reference/generated/spectrochempy.plot_map", "reference/generated/spectrochempy.plot_multiple", "reference/generated/spectrochempy.plot_pen", "reference/generated/spectrochempy.plot_scatter", "reference/generated/spectrochempy.plot_scatter_pen", "reference/generated/spectrochempy.plot_stack", "reference/generated/spectrochempy.plot_surface", "reference/generated/spectrochempy.plot_waterfall", "reference/generated/spectrochempy.plot_with_transposed", "reference/generated/spectrochempy.polynomialbaseline", "reference/generated/spectrochempy.ps", "reference/generated/spectrochempy.ptp", "reference/generated/spectrochempy.qsin", "reference/generated/spectrochempy.random", "reference/generated/spectrochempy.read", "reference/generated/spectrochempy.read_carroucell", "reference/generated/spectrochempy.read_csv", "reference/generated/spectrochempy.read_ddr", "reference/generated/spectrochempy.read_dir", "reference/generated/spectrochempy.read_hdr", "reference/generated/spectrochempy.read_jcamp", "reference/generated/spectrochempy.read_labspec", "reference/generated/spectrochempy.read_mat", "reference/generated/spectrochempy.read_matlab", "reference/generated/spectrochempy.read_omnic", "reference/generated/spectrochempy.read_opus", "reference/generated/spectrochempy.read_quadera", "reference/generated/spectrochempy.read_sdr", "reference/generated/spectrochempy.read_soc", "reference/generated/spectrochempy.read_spa", "reference/generated/spectrochempy.read_spc", "reference/generated/spectrochempy.read_spg", "reference/generated/spectrochempy.read_srs", "reference/generated/spectrochempy.read_topspin", "reference/generated/spectrochempy.read_wdf", "reference/generated/spectrochempy.read_wire", "reference/generated/spectrochempy.read_zip", "reference/generated/spectrochempy.real", "reference/generated/spectrochempy.remove_masks", "reference/generated/spectrochempy.roll", "reference/generated/spectrochempy.round", "reference/generated/spectrochempy.rs", "reference/generated/spectrochempy.run_all_scripts", "reference/generated/spectrochempy.run_script", "reference/generated/spectrochempy.savgol", "reference/generated/spectrochempy.set_complex", "reference/generated/spectrochempy.set_hypercomplex", "reference/generated/spectrochempy.set_loglevel", "reference/generated/spectrochempy.set_nmr_context", "reference/generated/spectrochempy.set_quaternion", "reference/generated/spectrochempy.show", "reference/generated/spectrochempy.show_versions", "reference/generated/spectrochempy.sigmoidmodel", "reference/generated/spectrochempy.simpson", "reference/generated/spectrochempy.sine", "reference/generated/spectrochempy.sinm", "reference/generated/spectrochempy.smooth", "reference/generated/spectrochempy.snip", "reference/generated/spectrochempy.sort", "reference/generated/spectrochempy.sp", "reference/generated/spectrochempy.squeeze", "reference/generated/spectrochempy.stack", "reference/generated/spectrochempy.std", "reference/generated/spectrochempy.sum", "reference/generated/spectrochempy.swapdims", "reference/generated/spectrochempy.take", "reference/generated/spectrochempy.to", "reference/generated/spectrochempy.to_array", "reference/generated/spectrochempy.to_base_units", "reference/generated/spectrochempy.to_reduced_units", "reference/generated/spectrochempy.to_xarray", "reference/generated/spectrochempy.transpose", "reference/generated/spectrochempy.trapezoid", "reference/generated/spectrochempy.triang", "reference/generated/spectrochempy.var", "reference/generated/spectrochempy.voigtmodel", "reference/generated/spectrochempy.warning_", "reference/generated/spectrochempy.whittaker", "reference/generated/spectrochempy.write", "reference/generated/spectrochempy.write_csv", "reference/generated/spectrochempy.write_excel", "reference/generated/spectrochempy.write_jcamp", "reference/generated/spectrochempy.write_mat", "reference/generated/spectrochempy.write_matlab", "reference/generated/spectrochempy.write_xls", "reference/generated/spectrochempy.zeros", "reference/generated/spectrochempy.zeros_like", "reference/generated/spectrochempy.zf", "reference/generated/spectrochempy.zf_auto", "reference/generated/spectrochempy.zf_double", "reference/generated/spectrochempy.zf_size", "reference/glossary", "reference/index", "reference/papers", "sg_execution_times", "userguide/analysis/fitting", "userguide/analysis/index", "userguide/analysis/mcr_als", "userguide/analysis/pca", "userguide/analysis/peak_finding", "userguide/analysis/peak_integration", "userguide/analysis/pls", "userguide/api/api", "userguide/importexport/import", "userguide/importexport/importIR", "userguide/importexport/index", "userguide/index", "userguide/introduction/interface", "userguide/introduction/introduction", "userguide/introduction/mdcheatsheet", "userguide/objects/dataset/dataset", "userguide/objects/index", "userguide/objects/project/project", "userguide/plotting/plotting", "userguide/processing/alignment", "userguide/processing/apodization", "userguide/processing/baseline", "userguide/processing/denoising", "userguide/processing/fourier", "userguide/processing/index", "userguide/processing/interferogram", "userguide/processing/math_operations", "userguide/processing/slicing", "userguide/processing/smoothing", "userguide/processing/td_baseline", "userguide/processing/transformations", "whatsnew/changelog", "whatsnew/index", "whatsnew/latest", "whatsnew/v0.1.0", "whatsnew/v0.2.0", "whatsnew/v0.2.10", "whatsnew/v0.2.11", "whatsnew/v0.2.12", "whatsnew/v0.2.13", "whatsnew/v0.2.14", "whatsnew/v0.2.15", "whatsnew/v0.2.16", "whatsnew/v0.2.17", "whatsnew/v0.2.18", "whatsnew/v0.2.21", "whatsnew/v0.2.22", "whatsnew/v0.2.23", "whatsnew/v0.2.4", "whatsnew/v0.2.5", "whatsnew/v0.2.6", "whatsnew/v0.2.7", "whatsnew/v0.2.8", "whatsnew/v0.2.9", "whatsnew/v0.3.0", "whatsnew/v0.3.1", "whatsnew/v0.3.2", "whatsnew/v0.3.3", "whatsnew/v0.4.1", "whatsnew/v0.4.10", "whatsnew/v0.4.2", "whatsnew/v0.4.3", "whatsnew/v0.4.4", "whatsnew/v0.4.5", "whatsnew/v0.4.6", "whatsnew/v0.4.7", "whatsnew/v0.4.9", "whatsnew/v0.5.0", "whatsnew/v0.5.1", "whatsnew/v0.5.2", "whatsnew/v0.5.3", "whatsnew/v0.5.4", "whatsnew/v0.5.5", "whatsnew/v0.6.1", "whatsnew/v0.6.10", "whatsnew/v0.6.2", "whatsnew/v0.6.3", "whatsnew/v0.6.4", "whatsnew/v0.6.5", "whatsnew/v0.6.6", "whatsnew/v0.6.7", "whatsnew/v0.6.8", "whatsnew/v0.6.9", "whatsnew/v0.7.0", "whatsnew/v0.7.1"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["credits/citing.rst", "credits/credits.rst", "credits/license.rst", "credits/seealso.rst", "devguide/codespec_adding_reader.rst", "devguide/contributing.rst", "devguide/contributing_codebase.rst", "devguide/contributing_codespecifics.rst", "devguide/contributing_docstring.rst", "devguide/contributing_documentation.rst", "devguide/examples.rst", "devguide/index.rst", "devguide/issues.rst", "devguide/visualcode.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/index.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/index.rst", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/plot_baseline_correction.rst", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times.rst", "gettingstarted/examples/index.rst", "gettingstarted/getting_help.rst", "gettingstarted/install/index.rst", "gettingstarted/install/install_adds.rst", "gettingstarted/install/install_colab.rst", "gettingstarted/install/install_mac_linux.rst", "gettingstarted/install/install_sources.rst", "gettingstarted/install/install_win.rst", "gettingstarted/overview.ipynb", "gettingstarted/whyscpy.rst", "index.rst", "reference/bibliography.rst", "reference/faq.rst", "reference/generated/spectrochempy.ActionMassKinetics.rst", "reference/generated/spectrochempy.Baseline.rst", "reference/generated/spectrochempy.BaselineCorrector.rst", "reference/generated/spectrochempy.Coord.rst", "reference/generated/spectrochempy.CoordSet.rst", "reference/generated/spectrochempy.EFA.rst", "reference/generated/spectrochempy.FastICA.rst", "reference/generated/spectrochempy.FileSelector.rst", "reference/generated/spectrochempy.Filter.rst", "reference/generated/spectrochempy.II.rst", "reference/generated/spectrochempy.IR.rst", "reference/generated/spectrochempy.IRIS.rst", "reference/generated/spectrochempy.IrisKernel.rst", "reference/generated/spectrochempy.LSTSQ.rst", "reference/generated/spectrochempy.MCRALS.rst", "reference/generated/spectrochempy.NDDataset.rst", "reference/generated/spectrochempy.NDDataset.save.rst", "reference/generated/spectrochempy.NDDataset.save_as.rst", "reference/generated/spectrochempy.NMF.rst", "reference/generated/spectrochempy.NNLS.rst", "reference/generated/spectrochempy.Optimize.rst", "reference/generated/spectrochempy.PCA.rst", "reference/generated/spectrochempy.PFR.rst", "reference/generated/spectrochempy.PLSRegression.rst", "reference/generated/spectrochempy.Project.rst", "reference/generated/spectrochempy.Quantity.rst", "reference/generated/spectrochempy.RI.rst", "reference/generated/spectrochempy.RR.rst", "reference/generated/spectrochempy.SIMPLISMA.rst", "reference/generated/spectrochempy.SVD.rst", "reference/generated/spectrochempy.Script.rst", "reference/generated/spectrochempy.Unit.rst", "reference/generated/spectrochempy.abs.rst", "reference/generated/spectrochempy.absolute.rst", "reference/generated/spectrochempy.align.rst", "reference/generated/spectrochempy.all.rst", "reference/generated/spectrochempy.amax.rst", "reference/generated/spectrochempy.amin.rst", "reference/generated/spectrochempy.any.rst", "reference/generated/spectrochempy.arange.rst", "reference/generated/spectrochempy.argmax.rst", "reference/generated/spectrochempy.argmin.rst", "reference/generated/spectrochempy.around.rst", "reference/generated/spectrochempy.asls.rst", "reference/generated/spectrochempy.asymmetricvoigtmodel.rst", "reference/generated/spectrochempy.autosub.rst", "reference/generated/spectrochempy.average.rst", "reference/generated/spectrochempy.bartlett.rst", "reference/generated/spectrochempy.basc.rst", "reference/generated/spectrochempy.blackmanharris.rst", "reference/generated/spectrochempy.clip.rst", "reference/generated/spectrochempy.component.rst", "reference/generated/spectrochempy.concatenate.rst", "reference/generated/spectrochempy.conj.rst", "reference/generated/spectrochempy.conjugate.rst", "reference/generated/spectrochempy.coordmax.rst", "reference/generated/spectrochempy.coordmin.rst", "reference/generated/spectrochempy.copy.rst", "reference/generated/spectrochempy.cs.rst", "reference/generated/spectrochempy.cumsum.rst", "reference/generated/spectrochempy.dc.rst", "reference/generated/spectrochempy.debug_.rst", "reference/generated/spectrochempy.denoise.rst", "reference/generated/spectrochempy.despike.rst", "reference/generated/spectrochempy.detrend.rst", "reference/generated/spectrochempy.diag.rst", "reference/generated/spectrochempy.diagonal.rst", "reference/generated/spectrochempy.dot.rst", "reference/generated/spectrochempy.download_nist_ir.rst", "reference/generated/spectrochempy.em.rst", "reference/generated/spectrochempy.empty.rst", "reference/generated/spectrochempy.empty_like.rst", "reference/generated/spectrochempy.error_.rst", "reference/generated/spectrochempy.eye.rst", "reference/generated/spectrochempy.fft.rst", "reference/generated/spectrochempy.find_peaks.rst", "reference/generated/spectrochempy.fromfunction.rst", "reference/generated/spectrochempy.fromiter.rst", "reference/generated/spectrochempy.fsh.rst", "reference/generated/spectrochempy.fsh2.rst", "reference/generated/spectrochempy.full.rst", "reference/generated/spectrochempy.full_like.rst", "reference/generated/spectrochempy.gaussianmodel.rst", "reference/generated/spectrochempy.general_hamming.rst", "reference/generated/spectrochempy.geomspace.rst", "reference/generated/spectrochempy.get_baseline.rst", "reference/generated/spectrochempy.get_loglevel.rst", "reference/generated/spectrochempy.gm.rst", "reference/generated/spectrochempy.hamming.rst", "reference/generated/spectrochempy.hann.rst", "reference/generated/spectrochempy.ht.rst", "reference/generated/spectrochempy.identity.rst", "reference/generated/spectrochempy.ifft.rst", "reference/generated/spectrochempy.imag.rst", "reference/generated/spectrochempy.info_.rst", "reference/generated/spectrochempy.interpolate.rst", "reference/generated/spectrochempy.is_units_compatible.rst", "reference/generated/spectrochempy.ito.rst", "reference/generated/spectrochempy.ito_base_units.rst", "reference/generated/spectrochempy.ito_reduced_units.rst", "reference/generated/spectrochempy.linspace.rst", "reference/generated/spectrochempy.load.rst", "reference/generated/spectrochempy.load_iris.rst", "reference/generated/spectrochempy.logspace.rst", "reference/generated/spectrochempy.lorentzianmodel.rst", "reference/generated/spectrochempy.ls.rst", "reference/generated/spectrochempy.max.rst", "reference/generated/spectrochempy.mc.rst", "reference/generated/spectrochempy.mean.rst", "reference/generated/spectrochempy.min.rst", "reference/generated/spectrochempy.multiplot.rst", "reference/generated/spectrochempy.multiplot_image.rst", "reference/generated/spectrochempy.multiplot_lines.rst", "reference/generated/spectrochempy.multiplot_map.rst", "reference/generated/spectrochempy.multiplot_scatter.rst", "reference/generated/spectrochempy.multiplot_stack.rst", "reference/generated/spectrochempy.multiplot_with_transposed.rst", "reference/generated/spectrochempy.ones.rst", "reference/generated/spectrochempy.ones_like.rst", "reference/generated/spectrochempy.pathclean.rst", "reference/generated/spectrochempy.pipe.rst", "reference/generated/spectrochempy.pk.rst", "reference/generated/spectrochempy.pk_exp.rst", "reference/generated/spectrochempy.plot.rst", "reference/generated/spectrochempy.plot_1D.rst", "reference/generated/spectrochempy.plot_2D.rst", "reference/generated/spectrochempy.plot_3D.rst", "reference/generated/spectrochempy.plot_bar.rst", "reference/generated/spectrochempy.plot_image.rst", "reference/generated/spectrochempy.plot_map.rst", "reference/generated/spectrochempy.plot_multiple.rst", "reference/generated/spectrochempy.plot_pen.rst", "reference/generated/spectrochempy.plot_scatter.rst", "reference/generated/spectrochempy.plot_scatter_pen.rst", "reference/generated/spectrochempy.plot_stack.rst", "reference/generated/spectrochempy.plot_surface.rst", "reference/generated/spectrochempy.plot_waterfall.rst", "reference/generated/spectrochempy.plot_with_transposed.rst", "reference/generated/spectrochempy.polynomialbaseline.rst", "reference/generated/spectrochempy.ps.rst", "reference/generated/spectrochempy.ptp.rst", "reference/generated/spectrochempy.qsin.rst", "reference/generated/spectrochempy.random.rst", "reference/generated/spectrochempy.read.rst", "reference/generated/spectrochempy.read_carroucell.rst", "reference/generated/spectrochempy.read_csv.rst", "reference/generated/spectrochempy.read_ddr.rst", "reference/generated/spectrochempy.read_dir.rst", "reference/generated/spectrochempy.read_hdr.rst", "reference/generated/spectrochempy.read_jcamp.rst", "reference/generated/spectrochempy.read_labspec.rst", "reference/generated/spectrochempy.read_mat.rst", "reference/generated/spectrochempy.read_matlab.rst", "reference/generated/spectrochempy.read_omnic.rst", "reference/generated/spectrochempy.read_opus.rst", "reference/generated/spectrochempy.read_quadera.rst", "reference/generated/spectrochempy.read_sdr.rst", "reference/generated/spectrochempy.read_soc.rst", "reference/generated/spectrochempy.read_spa.rst", "reference/generated/spectrochempy.read_spc.rst", "reference/generated/spectrochempy.read_spg.rst", "reference/generated/spectrochempy.read_srs.rst", "reference/generated/spectrochempy.read_topspin.rst", "reference/generated/spectrochempy.read_wdf.rst", "reference/generated/spectrochempy.read_wire.rst", "reference/generated/spectrochempy.read_zip.rst", "reference/generated/spectrochempy.real.rst", "reference/generated/spectrochempy.remove_masks.rst", "reference/generated/spectrochempy.roll.rst", "reference/generated/spectrochempy.round.rst", "reference/generated/spectrochempy.rs.rst", "reference/generated/spectrochempy.run_all_scripts.rst", "reference/generated/spectrochempy.run_script.rst", "reference/generated/spectrochempy.savgol.rst", "reference/generated/spectrochempy.set_complex.rst", "reference/generated/spectrochempy.set_hypercomplex.rst", "reference/generated/spectrochempy.set_loglevel.rst", "reference/generated/spectrochempy.set_nmr_context.rst", "reference/generated/spectrochempy.set_quaternion.rst", "reference/generated/spectrochempy.show.rst", "reference/generated/spectrochempy.show_versions.rst", "reference/generated/spectrochempy.sigmoidmodel.rst", "reference/generated/spectrochempy.simpson.rst", "reference/generated/spectrochempy.sine.rst", "reference/generated/spectrochempy.sinm.rst", "reference/generated/spectrochempy.smooth.rst", "reference/generated/spectrochempy.snip.rst", "reference/generated/spectrochempy.sort.rst", "reference/generated/spectrochempy.sp.rst", "reference/generated/spectrochempy.squeeze.rst", "reference/generated/spectrochempy.stack.rst", "reference/generated/spectrochempy.std.rst", "reference/generated/spectrochempy.sum.rst", "reference/generated/spectrochempy.swapdims.rst", "reference/generated/spectrochempy.take.rst", "reference/generated/spectrochempy.to.rst", "reference/generated/spectrochempy.to_array.rst", "reference/generated/spectrochempy.to_base_units.rst", "reference/generated/spectrochempy.to_reduced_units.rst", "reference/generated/spectrochempy.to_xarray.rst", "reference/generated/spectrochempy.transpose.rst", "reference/generated/spectrochempy.trapezoid.rst", "reference/generated/spectrochempy.triang.rst", "reference/generated/spectrochempy.var.rst", "reference/generated/spectrochempy.voigtmodel.rst", "reference/generated/spectrochempy.warning_.rst", "reference/generated/spectrochempy.whittaker.rst", "reference/generated/spectrochempy.write.rst", "reference/generated/spectrochempy.write_csv.rst", "reference/generated/spectrochempy.write_excel.rst", "reference/generated/spectrochempy.write_jcamp.rst", "reference/generated/spectrochempy.write_mat.rst", "reference/generated/spectrochempy.write_matlab.rst", "reference/generated/spectrochempy.write_xls.rst", "reference/generated/spectrochempy.zeros.rst", "reference/generated/spectrochempy.zeros_like.rst", "reference/generated/spectrochempy.zf.rst", "reference/generated/spectrochempy.zf_auto.rst", "reference/generated/spectrochempy.zf_double.rst", "reference/generated/spectrochempy.zf_size.rst", "reference/glossary.rst", "reference/index.rst", "reference/papers.rst", "sg_execution_times.rst", "userguide/analysis/fitting.ipynb", "userguide/analysis/index.rst", "userguide/analysis/mcr_als.ipynb", "userguide/analysis/pca.ipynb", "userguide/analysis/peak_finding.ipynb", "userguide/analysis/peak_integration.ipynb", "userguide/analysis/pls.ipynb", "userguide/api/api.ipynb", "userguide/importexport/import.ipynb", "userguide/importexport/importIR.ipynb", "userguide/importexport/index.rst", "userguide/index.rst", "userguide/introduction/interface.ipynb", "userguide/introduction/introduction.ipynb", "userguide/introduction/mdcheatsheet.ipynb", "userguide/objects/dataset/dataset.ipynb", "userguide/objects/index.rst", "userguide/objects/project/project.ipynb", "userguide/plotting/plotting.ipynb", "userguide/processing/alignment.ipynb", "userguide/processing/apodization.ipynb", "userguide/processing/baseline.ipynb", "userguide/processing/denoising.ipynb", "userguide/processing/fourier.ipynb", "userguide/processing/index.rst", "userguide/processing/interferogram.ipynb", "userguide/processing/math_operations.ipynb", "userguide/processing/slicing.ipynb", "userguide/processing/smoothing.ipynb", "userguide/processing/td_baseline.ipynb", "userguide/processing/transformations.ipynb", "whatsnew/changelog.rst", "whatsnew/index.rst", "whatsnew/latest.rst", "whatsnew/v0.1.0.rst", "whatsnew/v0.2.0.rst", "whatsnew/v0.2.10.rst", "whatsnew/v0.2.11.rst", "whatsnew/v0.2.12.rst", "whatsnew/v0.2.13.rst", "whatsnew/v0.2.14.rst", "whatsnew/v0.2.15.rst", "whatsnew/v0.2.16.rst", "whatsnew/v0.2.17.rst", "whatsnew/v0.2.18.rst", "whatsnew/v0.2.21.rst", "whatsnew/v0.2.22.rst", "whatsnew/v0.2.23.rst", "whatsnew/v0.2.4.rst", "whatsnew/v0.2.5.rst", "whatsnew/v0.2.6.rst", "whatsnew/v0.2.7.rst", "whatsnew/v0.2.8.rst", "whatsnew/v0.2.9.rst", "whatsnew/v0.3.0.rst", "whatsnew/v0.3.1.rst", "whatsnew/v0.3.2.rst", "whatsnew/v0.3.3.rst", "whatsnew/v0.4.1.rst", "whatsnew/v0.4.10.rst", "whatsnew/v0.4.2.rst", "whatsnew/v0.4.3.rst", "whatsnew/v0.4.4.rst", "whatsnew/v0.4.5.rst", "whatsnew/v0.4.6.rst", "whatsnew/v0.4.7.rst", "whatsnew/v0.4.9.rst", "whatsnew/v0.5.0.rst", "whatsnew/v0.5.1.rst", "whatsnew/v0.5.2.rst", "whatsnew/v0.5.3.rst", "whatsnew/v0.5.4.rst", "whatsnew/v0.5.5.rst", "whatsnew/v0.6.1.rst", "whatsnew/v0.6.10.rst", "whatsnew/v0.6.2.rst", "whatsnew/v0.6.3.rst", "whatsnew/v0.6.4.rst", "whatsnew/v0.6.5.rst", "whatsnew/v0.6.6.rst", "whatsnew/v0.6.7.rst", "whatsnew/v0.6.8.rst", "whatsnew/v0.6.9.rst", "whatsnew/v0.7.0.rst", "whatsnew/v0.7.1.rst"], "indexentries": {"a (actionmasskinetics attribute)": [[94, "spectrochempy.ActionMassKinetics.A", false]], "a (fastica attribute)": [[100, "spectrochempy.FastICA.A", false]], "abs() (in module spectrochempy)": [[126, "spectrochempy.abs", false]], "abs() (nddataset method)": [[109, "spectrochempy.NDDataset.abs", false]], "absolute() (in module spectrochempy)": [[127, "spectrochempy.absolute", false]], "absolute() (nddataset method)": [[109, "spectrochempy.NDDataset.absolute", false]], "acquisition_date (nddataset attribute)": [[109, "spectrochempy.NDDataset.acquisition_date", false]], "actionmasskinetics (class in spectrochempy)": [[94, "spectrochempy.ActionMassKinetics", false]], "add_coordset() (nddataset method)": [[109, "spectrochempy.NDDataset.add_coordset", false]], "add_dataset() (project method)": [[118, "spectrochempy.Project.add_dataset", false]], "add_datasets() (project method)": [[118, "spectrochempy.Project.add_datasets", false]], "add_project() (project method)": [[118, "spectrochempy.Project.add_project", false]], "add_projects() (project method)": [[118, "spectrochempy.Project.add_projects", false]], "add_script() (project method)": [[118, "spectrochempy.Project.add_script", false]], "add_scripts() (project method)": [[118, "spectrochempy.Project.add_scripts", false]], "algorithm (fastica attribute)": [[100, "spectrochempy.FastICA.algorithm", false]], "align() (in module spectrochempy)": [[128, "spectrochempy.align", false]], "align() (nddataset method)": [[109, "spectrochempy.NDDataset.align", false]], "all() (in module spectrochempy)": [[129, "spectrochempy.all", false]], "all() (nddataset method)": [[109, "spectrochempy.NDDataset.all", false]], "allitems (project attribute)": [[118, "spectrochempy.Project.allitems", false]], "allnames (project attribute)": [[118, "spectrochempy.Project.allnames", false]], "alpha_h (nmf attribute)": [[112, "spectrochempy.NMF.alpha_H", false]], "alpha_w (nmf attribute)": [[112, "spectrochempy.NMF.alpha_W", false]], "als": [[314, "term-ALS", true]], "amax() (coord method)": [[97, "spectrochempy.Coord.amax", false]], "amax() (in module spectrochempy)": [[130, "spectrochempy.amax", false]], "amax() (nddataset method)": [[109, "spectrochempy.NDDataset.amax", false]], "amin() (coord method)": [[97, "spectrochempy.Coord.amin", false]], "amin() (in module spectrochempy)": [[131, "spectrochempy.amin", false]], "amin() (nddataset method)": [[109, "spectrochempy.NDDataset.amin", false]], "amplitude_mode (optimize attribute)": [[114, "spectrochempy.Optimize.amplitude_mode", false]], "any() (in module spectrochempy)": [[132, "spectrochempy.any", false]], "any() (nddataset method)": [[109, "spectrochempy.NDDataset.any", false]], "api": [[314, "term-API", true]], "arange() (coord method)": [[97, "spectrochempy.Coord.arange", false]], "arange() (in module spectrochempy)": [[133, "spectrochempy.arange", false]], "arange() (nddataset method)": [[109, "spectrochempy.NDDataset.arange", false]], "argmax() (in module spectrochempy)": [[134, "spectrochempy.argmax", false]], "argmax() (nddataset method)": [[109, "spectrochempy.NDDataset.argmax", false]], "argmin() (in module spectrochempy)": [[135, "spectrochempy.argmin", false]], "argmin() (nddataset method)": [[109, "spectrochempy.NDDataset.argmin", false]], "args (asymmetricvoigtmodel attribute)": [[138, "spectrochempy.asymmetricvoigtmodel.args", false]], "args (gaussianmodel attribute)": [[176, "spectrochempy.gaussianmodel.args", false]], "args (lorentzianmodel attribute)": [[198, "spectrochempy.lorentzianmodel.args", false]], "args (polynomialbaseline attribute)": [[232, "spectrochempy.polynomialbaseline.args", false]], "args (sigmoidmodel attribute)": [[275, "spectrochempy.sigmoidmodel.args", false]], "args (voigtmodel attribute)": [[298, "spectrochempy.voigtmodel.args", false]], "argsgetconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.argsGetConc", false]], "argsgetspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.argsGetSpec", false]], "around() (coord method)": [[97, "spectrochempy.Coord.around", false]], "around() (in module spectrochempy)": [[136, "spectrochempy.around", false]], "around() (nddataset method)": [[109, "spectrochempy.NDDataset.around", false]], "array-like": [[314, "term-array-like", true]], "asfortranarray() (nddataset method)": [[109, "spectrochempy.NDDataset.asfortranarray", false]], "asls": [[314, "term-AsLS", true]], "asls() (in module spectrochempy)": [[137, "spectrochempy.asls", false]], "asls() (nddataset method)": [[109, "spectrochempy.NDDataset.asls", false]], "astype() (coord method)": [[97, "spectrochempy.Coord.astype", false]], "astype() (nddataset method)": [[109, "spectrochempy.NDDataset.astype", false]], "asymmetricvoigtmodel (class in spectrochempy)": [[138, "spectrochempy.asymmetricvoigtmodel", false]], "asymmetry (baseline attribute)": [[95, "spectrochempy.Baseline.asymmetry", false]], "atleast_2d() (nddataset method)": [[109, "spectrochempy.NDDataset.atleast_2d", false]], "author (nddataset attribute)": [[109, "spectrochempy.NDDataset.author", false]], "autoampl (optimize attribute)": [[114, "spectrochempy.Optimize.autoampl", false]], "autobase (optimize attribute)": [[114, "spectrochempy.Optimize.autobase", false]], "autosub() (in module spectrochempy)": [[139, "spectrochempy.autosub", false]], "autosub() (nddataset method)": [[109, "spectrochempy.NDDataset.autosub", false]], "available_names (coordset attribute)": [[98, "spectrochempy.CoordSet.available_names", false]], "average() (in module spectrochempy)": [[140, "spectrochempy.average", false]], "average() (nddataset method)": [[109, "spectrochempy.NDDataset.average", false]], "ax (nddataset attribute)": [[109, "spectrochempy.NDDataset.ax", false]], "axec (nddataset attribute)": [[109, "spectrochempy.NDDataset.axec", false]], "axect (nddataset attribute)": [[109, "spectrochempy.NDDataset.axecT", false]], "axex (nddataset attribute)": [[109, "spectrochempy.NDDataset.axex", false]], "axey (nddataset attribute)": [[109, "spectrochempy.NDDataset.axey", false]], "axt (nddataset attribute)": [[109, "spectrochempy.NDDataset.axT", false]], "b (actionmasskinetics attribute)": [[94, "spectrochempy.ActionMassKinetics.B", false]], "b_ev (efa attribute)": [[99, "spectrochempy.EFA.b_ev", false]], "bartlett() (in module spectrochempy)": [[141, "spectrochempy.bartlett", false]], "bartlett() (nddataset method)": [[109, "spectrochempy.NDDataset.bartlett", false]], "basc() (in module spectrochempy)": [[142, "spectrochempy.basc", false]], "basc() (nddataset method)": [[109, "spectrochempy.NDDataset.basc", false]], "baseline (baseline attribute)": [[95, "spectrochempy.Baseline.baseline", false]], "baseline (baselinecorrector attribute)": [[96, "spectrochempy.BaselineCorrector.baseline", false]], "baseline (class in spectrochempy)": [[95, "spectrochempy.Baseline", false]], "baselinecorrector (class in spectrochempy)": [[96, "spectrochempy.BaselineCorrector", false]], "beta_loss (nmf attribute)": [[112, "spectrochempy.NMF.beta_loss", false]], "blackmanharris() (in module spectrochempy)": [[143, "spectrochempy.blackmanharris", false]], "blackmanharris() (nddataset method)": [[109, "spectrochempy.NDDataset.blackmanharris", false]], "breakpoints (baseline attribute)": [[95, "spectrochempy.Baseline.breakpoints", false]], "c (mcrals attribute)": [[108, "spectrochempy.MCRALS.C", false]], "c (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.C", false]], "c_constrained (mcrals attribute)": [[108, "spectrochempy.MCRALS.C_constrained", false]], "c_constrained_list (mcrals attribute)": [[108, "spectrochempy.MCRALS.C_constrained_list", false]], "c_ls_list (mcrals attribute)": [[108, "spectrochempy.MCRALS.C_ls_list", false]], "callback_every (optimize attribute)": [[114, "spectrochempy.Optimize.callback_every", false]], "carroucell": [[314, "term-Carroucell", true]], "check() (quantity method)": [[119, "spectrochempy.Quantity.check", false]], "clip() (in module spectrochempy)": [[144, "spectrochempy.clip", false]], "clip() (nddataset method)": [[109, "spectrochempy.NDDataset.clip", false]], "close_figure() (nddataset method)": [[109, "spectrochempy.NDDataset.close_figure", false]], "closure": [[314, "term-closure", true]], "closureconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.closureConc", false]], "closuremethod (mcrals attribute)": [[108, "spectrochempy.MCRALS.closureMethod", false]], "closures": [[314, "term-closures", true]], "closuretarget (mcrals attribute)": [[108, "spectrochempy.MCRALS.closureTarget", false]], "coef (lstsq attribute)": [[107, "spectrochempy.LSTSQ.coef", false]], "coef (nnls attribute)": [[113, "spectrochempy.NNLS.coef", false]], "comment (nddataset attribute)": [[109, "spectrochempy.NDDataset.comment", false]], "component() (in module spectrochempy)": [[145, "spectrochempy.component", false]], "component() (nddataset method)": [[109, "spectrochempy.NDDataset.component", false]], "components (efa attribute)": [[99, "spectrochempy.EFA.components", false]], "components (fastica attribute)": [[100, "spectrochempy.FastICA.components", false]], "components (iris attribute)": [[105, "spectrochempy.IRIS.components", false]], "components (mcrals attribute)": [[108, "spectrochempy.MCRALS.components", false]], "components (nmf attribute)": [[112, "spectrochempy.NMF.components", false]], "components (optimize attribute)": [[114, "spectrochempy.Optimize.components", false]], "components (pca attribute)": [[115, "spectrochempy.PCA.components", false]], "components (plsregression attribute)": [[117, "spectrochempy.PLSRegression.components", false]], "components (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.components", false]], "components (svd attribute)": [[123, "spectrochempy.SVD.components", false]], "compute() (quantity method)": [[119, "spectrochempy.Quantity.compute", false]], "compute_uv (svd attribute)": [[123, "spectrochempy.SVD.compute_uv", false]], "concatenate() (in module spectrochempy)": [[146, "spectrochempy.concatenate", false]], "concatenate() (nddataset method)": [[109, "spectrochempy.NDDataset.concatenate", false]], "config (baseline attribute)": [[95, "spectrochempy.Baseline.config", false]], "config (efa attribute)": [[99, "spectrochempy.EFA.config", false]], "config (fastica attribute)": [[100, "spectrochempy.FastICA.config", false]], "config (filter attribute)": [[102, "spectrochempy.Filter.config", false]], "config (iris attribute)": [[105, "spectrochempy.IRIS.config", false]], "config (lstsq attribute)": [[107, "spectrochempy.LSTSQ.config", false]], "config (mcrals attribute)": [[108, "spectrochempy.MCRALS.config", false]], "config (nmf attribute)": [[112, "spectrochempy.NMF.config", false]], "config (nnls attribute)": [[113, "spectrochempy.NNLS.config", false]], "config (optimize attribute)": [[114, "spectrochempy.Optimize.config", false]], "config (pca attribute)": [[115, "spectrochempy.PCA.config", false]], "config (plsregression attribute)": [[117, "spectrochempy.PLSRegression.config", false]], "config (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.config", false]], "config (svd attribute)": [[123, "spectrochempy.SVD.config", false]], "conj() (in module spectrochempy)": [[147, "spectrochempy.conj", false]], "conj() (nddataset method)": [[109, "spectrochempy.NDDataset.conj", false]], "conjugate() (in module spectrochempy)": [[148, "spectrochempy.conjugate", false]], "conjugate() (nddataset method)": [[109, "spectrochempy.NDDataset.conjugate", false]], "constraints (optimize attribute)": [[114, "spectrochempy.Optimize.constraints", false]], "coord (class in spectrochempy)": [[97, "spectrochempy.Coord", false]], "coord() (nddataset method)": [[109, "spectrochempy.NDDataset.coord", false]], "coordmax() (in module spectrochempy)": [[149, "spectrochempy.coordmax", false]], "coordmax() (nddataset method)": [[109, "spectrochempy.NDDataset.coordmax", false]], "coordmin() (in module spectrochempy)": [[150, "spectrochempy.coordmin", false]], "coordmin() (nddataset method)": [[109, "spectrochempy.NDDataset.coordmin", false]], "coordnames (nddataset attribute)": [[109, "spectrochempy.NDDataset.coordnames", false]], "coords (coordset attribute)": [[98, "spectrochempy.CoordSet.coords", false]], "coordset (class in spectrochempy)": [[98, "spectrochempy.CoordSet", false]], "coordset (nddataset attribute)": [[109, "spectrochempy.NDDataset.coordset", false]], "coordtitles (nddataset attribute)": [[109, "spectrochempy.NDDataset.coordtitles", false]], "coordunits (nddataset attribute)": [[109, "spectrochempy.NDDataset.coordunits", false]], "copy() (coord method)": [[97, "spectrochempy.Coord.copy", false]], "copy() (coordset method)": [[98, "spectrochempy.CoordSet.copy", false]], "copy() (in module spectrochempy)": [[151, "spectrochempy.copy", false]], "copy() (nddataset method)": [[109, "spectrochempy.NDDataset.copy", false]], "copy() (project method)": [[118, "spectrochempy.Project.copy", false]], "corrected (baseline attribute)": [[95, "spectrochempy.Baseline.corrected", false]], "corrected (baselinecorrector attribute)": [[96, "spectrochempy.BaselineCorrector.corrected", false]], "created (nddataset attribute)": [[109, "spectrochempy.NDDataset.created", false]], "cs() (in module spectrochempy)": [[152, "spectrochempy.cs", false]], "cs() (nddataset method)": [[109, "spectrochempy.NDDataset.cs", false]], "cumsum() (in module spectrochempy)": [[153, "spectrochempy.cumsum", false]], "cumsum() (nddataset method)": [[109, "spectrochempy.NDDataset.cumsum", false]], "cumulative_explained_variance (svd attribute)": [[123, "spectrochempy.SVD.cumulative_explained_variance", false]], "cutoff (efa attribute)": [[99, "spectrochempy.EFA.cutoff", false]], "cval (filter attribute)": [[102, "spectrochempy.Filter.cval", false]], "data (coord attribute)": [[97, "spectrochempy.Coord.data", false]], "data (nddataset attribute)": [[109, "spectrochempy.NDDataset.data", false]], "datasets (project attribute)": [[118, "spectrochempy.Project.datasets", false]], "datasets_names (project attribute)": [[118, "spectrochempy.Project.datasets_names", false]], "dc() (in module spectrochempy)": [[154, "spectrochempy.dc", false]], "dc() (nddataset method)": [[109, "spectrochempy.NDDataset.dc", false]], "debug_() (in module spectrochempy)": [[155, "spectrochempy.debug_", false]], "default (coordset attribute)": [[98, "spectrochempy.CoordSet.default", false]], "default_format (quantity attribute)": [[119, "spectrochempy.Quantity.default_format", false]], "default_format (unit attribute)": [[125, "spectrochempy.Unit.default_format", false]], "delete_coordset() (nddataset method)": [[109, "spectrochempy.NDDataset.delete_coordset", false]], "delta (filter attribute)": [[102, "spectrochempy.Filter.delta", false]], "denoise() (in module spectrochempy)": [[156, "spectrochempy.denoise", false]], "denoise() (nddataset method)": [[109, "spectrochempy.NDDataset.denoise", false]], "deriv (filter attribute)": [[102, "spectrochempy.Filter.deriv", false]], "description (lstsq attribute)": [[107, "spectrochempy.LSTSQ.description", false]], "description (nddataset attribute)": [[109, "spectrochempy.NDDataset.description", false]], "description (nnls attribute)": [[113, "spectrochempy.NNLS.description", false]], "despike() (in module spectrochempy)": [[157, "spectrochempy.despike", false]], "despike() (nddataset method)": [[109, "spectrochempy.NDDataset.despike", false]], "detrend() (in module spectrochempy)": [[158, "spectrochempy.detrend", false]], "detrend() (nddataset method)": [[109, "spectrochempy.NDDataset.detrend", false]], "diag() (in module spectrochempy)": [[159, "spectrochempy.diag", false]], "diag() (nddataset method)": [[109, "spectrochempy.NDDataset.diag", false]], "diagonal() (in module spectrochempy)": [[160, "spectrochempy.diagonal", false]], "diagonal() (nddataset method)": [[109, "spectrochempy.NDDataset.diagonal", false]], "dimensionality (quantity attribute)": [[119, "spectrochempy.Quantity.dimensionality", false]], "dimensionality (unit attribute)": [[125, "spectrochempy.Unit.dimensionality", false]], "dimensionless (coord attribute)": [[97, "spectrochempy.Coord.dimensionless", false]], "dimensionless (nddataset attribute)": [[109, "spectrochempy.NDDataset.dimensionless", false]], "dimensionless (quantity attribute)": [[119, "spectrochempy.Quantity.dimensionless", false]], "dimensionless (unit attribute)": [[125, "spectrochempy.Unit.dimensionless", false]], "dims (nddataset attribute)": [[109, "spectrochempy.NDDataset.dims", false]], "directory (nddataset attribute)": [[109, "spectrochempy.NDDataset.directory", false]], "divider (nddataset attribute)": [[109, "spectrochempy.NDDataset.divider", false]], "dot() (in module spectrochempy)": [[161, "spectrochempy.dot", false]], "dot() (nddataset method)": [[109, "spectrochempy.NDDataset.dot", false]], "dot() (quantity method)": [[119, "spectrochempy.Quantity.dot", false]], "download_nist_ir() (in module spectrochempy)": [[162, "spectrochempy.download_nist_ir", false]], "download_nist_ir() (nddataset method)": [[109, "spectrochempy.NDDataset.download_nist_ir", false]], "dry (optimize attribute)": [[114, "spectrochempy.Optimize.dry", false]], "dtype (coord attribute)": [[97, "spectrochempy.Coord.dtype", false]], "dtype (nddataset attribute)": [[109, "spectrochempy.NDDataset.dtype", false]], "dump() (nddataset method)": [[109, "spectrochempy.NDDataset.dump", false]], "dump() (project method)": [[118, "spectrochempy.Project.dump", false]], "efa": [[314, "term-EFA", true]], "efa (class in spectrochempy)": [[99, "spectrochempy.EFA", false]], "em() (in module spectrochempy)": [[163, "spectrochempy.em", false]], "em() (nddataset method)": [[109, "spectrochempy.NDDataset.em", false]], "empty() (in module spectrochempy)": [[164, "spectrochempy.empty", false]], "empty() (nddataset method)": [[109, "spectrochempy.NDDataset.empty", false]], "empty_like() (in module spectrochempy)": [[165, "spectrochempy.empty_like", false]], "empty_like() (nddataset method)": [[109, "spectrochempy.NDDataset.empty_like", false]], "error_() (in module spectrochempy)": [[166, "spectrochempy.error_", false]], "ev (svd attribute)": [[123, "spectrochempy.SVD.ev", false]], "ev_cum (svd attribute)": [[123, "spectrochempy.SVD.ev_cum", false]], "ev_ratio (svd attribute)": [[123, "spectrochempy.SVD.ev_ratio", false]], "explained_variance (svd attribute)": [[123, "spectrochempy.SVD.explained_variance", false]], "explained_variance_ratio (svd attribute)": [[123, "spectrochempy.SVD.explained_variance_ratio", false]], "extraoutputgetconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.extraOutputGetConc", false]], "extraoutputgetspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.extraOutputGetSpec", false]], "eye() (in module spectrochempy)": [[167, "spectrochempy.eye", false]], "eye() (nddataset method)": [[109, "spectrochempy.NDDataset.eye", false]], "f_ev (efa attribute)": [[99, "spectrochempy.EFA.f_ev", false]], "fastica (class in spectrochempy)": [[100, "spectrochempy.FastICA", false]], "fft() (in module spectrochempy)": [[168, "spectrochempy.fft", false]], "fft() (nddataset method)": [[109, "spectrochempy.NDDataset.fft", false]], "fig (nddataset attribute)": [[109, "spectrochempy.NDDataset.fig", false]], "fignum (nddataset attribute)": [[109, "spectrochempy.NDDataset.fignum", false]], "filename (coord attribute)": [[97, "spectrochempy.Coord.filename", false]], "filename (nddataset attribute)": [[109, "spectrochempy.NDDataset.filename", false]], "filename (project attribute)": [[118, "spectrochempy.Project.filename", false]], "fileselector (class in spectrochempy)": [[101, "spectrochempy.FileSelector", false]], "filetype (nddataset attribute)": [[109, "spectrochempy.NDDataset.filetype", false]], "filetype (project attribute)": [[118, "spectrochempy.Project.filetype", false]], "filter (class in spectrochempy)": [[102, "spectrochempy.Filter", false]], "find_peaks() (in module spectrochempy)": [[169, "spectrochempy.find_peaks", false]], "find_peaks() (nddataset method)": [[109, "spectrochempy.NDDataset.find_peaks", false]], "fit() (baseline method)": [[95, "spectrochempy.Baseline.fit", false]], "fit() (efa method)": [[99, "spectrochempy.EFA.fit", false]], "fit() (fastica method)": [[100, "spectrochempy.FastICA.fit", false]], "fit() (iris method)": [[105, "spectrochempy.IRIS.fit", false]], "fit() (lstsq method)": [[107, "spectrochempy.LSTSQ.fit", false]], "fit() (mcrals method)": [[108, "spectrochempy.MCRALS.fit", false]], "fit() (nmf method)": [[112, "spectrochempy.NMF.fit", false]], "fit() (nnls method)": [[113, "spectrochempy.NNLS.fit", false]], "fit() (optimize method)": [[114, "spectrochempy.Optimize.fit", false]], "fit() (pca method)": [[115, "spectrochempy.PCA.fit", false]], "fit() (plsregression method)": [[117, "spectrochempy.PLSRegression.fit", false]], "fit() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.fit", false]], "fit() (svd method)": [[123, "spectrochempy.SVD.fit", false]], "fit_intercept (lstsq attribute)": [[107, "spectrochempy.LSTSQ.fit_intercept", false]], "fit_intercept (nnls attribute)": [[113, "spectrochempy.NNLS.fit_intercept", false]], "fit_to_concentrations() (actionmasskinetics method)": [[94, "spectrochempy.ActionMassKinetics.fit_to_concentrations", false]], "fit_to_gas_concentrations() (pfr method)": [[116, "spectrochempy.PFR.fit_to_gas_concentrations", false]], "fit_transform() (efa method)": [[99, "spectrochempy.EFA.fit_transform", false]], "fit_transform() (fastica method)": [[100, "spectrochempy.FastICA.fit_transform", false]], "fit_transform() (iris method)": [[105, "spectrochempy.IRIS.fit_transform", false]], "fit_transform() (mcrals method)": [[108, "spectrochempy.MCRALS.fit_transform", false]], "fit_transform() (nmf method)": [[112, "spectrochempy.NMF.fit_transform", false]], "fit_transform() (optimize method)": [[114, "spectrochempy.Optimize.fit_transform", false]], "fit_transform() (pca method)": [[115, "spectrochempy.PCA.fit_transform", false]], "fit_transform() (plsregression method)": [[117, "spectrochempy.PLSRegression.fit_transform", false]], "fit_transform() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.fit_transform", false]], "fit_transform() (svd method)": [[123, "spectrochempy.SVD.fit_transform", false]], "fp (optimize attribute)": [[114, "spectrochempy.Optimize.fp", false]], "from_() (unit method)": [[125, "spectrochempy.Unit.from_", false]], "from_list() (quantity class method)": [[119, "spectrochempy.Quantity.from_list", false]], "from_sequence() (quantity class method)": [[119, "spectrochempy.Quantity.from_sequence", false]], "fromfunction() (coord method)": [[97, "spectrochempy.Coord.fromfunction", false]], "fromfunction() (in module spectrochempy)": [[170, "spectrochempy.fromfunction", false]], "fromfunction() (nddataset method)": [[109, "spectrochempy.NDDataset.fromfunction", false]], "fromiter() (coord method)": [[97, "spectrochempy.Coord.fromiter", false]], "fromiter() (in module spectrochempy)": [[171, "spectrochempy.fromiter", false]], "fromiter() (nddataset method)": [[109, "spectrochempy.NDDataset.fromiter", false]], "fsh() (in module spectrochempy)": [[172, "spectrochempy.fsh", false]], "fsh() (nddataset method)": [[109, "spectrochempy.NDDataset.fsh", false]], "fsh2() (in module spectrochempy)": [[173, "spectrochempy.fsh2", false]], "fsh2() (nddataset method)": [[109, "spectrochempy.NDDataset.fsh2", false]], "full() (in module spectrochempy)": [[174, "spectrochempy.full", false]], "full() (nddataset method)": [[109, "spectrochempy.NDDataset.full", false]], "full_like() (in module spectrochempy)": [[175, "spectrochempy.full_like", false]], "full_like() (nddataset method)": [[109, "spectrochempy.NDDataset.full_like", false]], "full_matrices (svd attribute)": [[123, "spectrochempy.SVD.full_matrices", false]], "fun (fastica attribute)": [[100, "spectrochempy.FastICA.fun", false]], "fun_args (fastica attribute)": [[100, "spectrochempy.FastICA.fun_args", false]], "gaussianmodel (class in spectrochempy)": [[176, "spectrochempy.gaussianmodel", false]], "general_hamming() (in module spectrochempy)": [[177, "spectrochempy.general_hamming", false]], "general_hamming() (nddataset method)": [[109, "spectrochempy.NDDataset.general_hamming", false]], "geomspace() (coord method)": [[97, "spectrochempy.Coord.geomspace", false]], "geomspace() (in module spectrochempy)": [[178, "spectrochempy.geomspace", false]], "geomspace() (nddataset method)": [[109, "spectrochempy.NDDataset.geomspace", false]], "get_axis() (nddataset method)": [[109, "spectrochempy.NDDataset.get_axis", false]], "get_baseline() (in module spectrochempy)": [[179, "spectrochempy.get_baseline", false]], "get_baseline() (nddataset method)": [[109, "spectrochempy.NDDataset.get_baseline", false]], "get_components() (efa method)": [[99, "spectrochempy.EFA.get_components", false]], "get_components() (fastica method)": [[100, "spectrochempy.FastICA.get_components", false]], "get_components() (iris method)": [[105, "spectrochempy.IRIS.get_components", false]], "get_components() (mcrals method)": [[108, "spectrochempy.MCRALS.get_components", false]], "get_components() (nmf method)": [[112, "spectrochempy.NMF.get_components", false]], "get_components() (optimize method)": [[114, "spectrochempy.Optimize.get_components", false]], "get_components() (pca method)": [[115, "spectrochempy.PCA.get_components", false]], "get_components() (plsregression method)": [[117, "spectrochempy.PLSRegression.get_components", false]], "get_components() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.get_components", false]], "get_components() (svd method)": [[123, "spectrochempy.SVD.get_components", false]], "get_labels() (coord method)": [[97, "spectrochempy.Coord.get_labels", false]], "get_labels() (nddataset method)": [[109, "spectrochempy.NDDataset.get_labels", false]], "get_loglevel() (in module spectrochempy)": [[180, "spectrochempy.get_loglevel", false]], "getc_to_c_idx (mcrals attribute)": [[108, "spectrochempy.MCRALS.getC_to_C_idx", false]], "getconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.getConc", false]], "getspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.getSpec", false]], "getst_to_st_idx (mcrals attribute)": [[108, "spectrochempy.MCRALS.getSt_to_St_idx", false]], "gm() (in module spectrochempy)": [[181, "spectrochempy.gm", false]], "gm() (nddataset method)": [[109, "spectrochempy.NDDataset.gm", false]], "hamming() (in module spectrochempy)": [[182, "spectrochempy.hamming", false]], "hamming() (nddataset method)": [[109, "spectrochempy.NDDataset.hamming", false]], "hann() (in module spectrochempy)": [[183, "spectrochempy.hann", false]], "hann() (nddataset method)": [[109, "spectrochempy.NDDataset.hann", false]], "hardconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.hardConc", false]], "hardspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.hardSpec", false]], "has_complex_dims (nddataset attribute)": [[109, "spectrochempy.NDDataset.has_complex_dims", false]], "has_data (coord attribute)": [[97, "spectrochempy.Coord.has_data", false]], "has_data (nddataset attribute)": [[109, "spectrochempy.NDDataset.has_data", false]], "has_defined_name (coord attribute)": [[97, "spectrochempy.Coord.has_defined_name", false]], "has_defined_name (coordset attribute)": [[98, "spectrochempy.CoordSet.has_defined_name", false]], "has_defined_name (nddataset attribute)": [[109, "spectrochempy.NDDataset.has_defined_name", false]], "has_units (coord attribute)": [[97, "spectrochempy.Coord.has_units", false]], "has_units (nddataset attribute)": [[109, "spectrochempy.NDDataset.has_units", false]], "history (nddataset attribute)": [[109, "spectrochempy.NDDataset.history", false]], "ht() (in module spectrochempy)": [[184, "spectrochempy.ht", false]], "ht() (nddataset method)": [[109, "spectrochempy.NDDataset.ht", false]], "ica": [[314, "term-ICA", true]], "id (coord attribute)": [[97, "spectrochempy.Coord.id", false]], "id (coordset attribute)": [[98, "spectrochempy.CoordSet.id", false]], "id (nddataset attribute)": [[109, "spectrochempy.NDDataset.id", false]], "id (project attribute)": [[118, "spectrochempy.Project.id", false]], "identity() (in module spectrochempy)": [[185, "spectrochempy.identity", false]], "identity() (nddataset method)": [[109, "spectrochempy.NDDataset.identity", false]], "ifft() (in module spectrochempy)": [[186, "spectrochempy.ifft", false]], "ifft() (nddataset method)": [[109, "spectrochempy.NDDataset.ifft", false]], "ii (in module spectrochempy)": [[103, "spectrochempy.II", false]], "ii (nddataset attribute)": [[109, "spectrochempy.NDDataset.II", false]], "imag (in module spectrochempy)": [[187, "spectrochempy.imag", false]], "imag (nddataset attribute)": [[109, "spectrochempy.NDDataset.imag", false]], "include_limits (baseline attribute)": [[95, "spectrochempy.Baseline.include_limits", false]], "info_() (in module spectrochempy)": [[188, "spectrochempy.info_", false]], "init (nmf attribute)": [[112, "spectrochempy.NMF.init", false]], "init_concentrations (actionmasskinetics attribute)": [[94, "spectrochempy.ActionMassKinetics.init_concentrations", false]], "integrate() (actionmasskinetics method)": [[94, "spectrochempy.ActionMassKinetics.integrate", false]], "interactive (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.interactive", false]], "intercept (lstsq attribute)": [[107, "spectrochempy.LSTSQ.intercept", false]], "intercept (nnls attribute)": [[113, "spectrochempy.NNLS.intercept", false]], "interpolate() (in module spectrochempy)": [[189, "spectrochempy.interpolate", false]], "inverse_transform() (efa method)": [[99, "spectrochempy.EFA.inverse_transform", false]], "inverse_transform() (fastica method)": [[100, "spectrochempy.FastICA.inverse_transform", false]], "inverse_transform() (iris method)": [[105, "spectrochempy.IRIS.inverse_transform", false]], "inverse_transform() (mcrals method)": [[108, "spectrochempy.MCRALS.inverse_transform", false]], "inverse_transform() (nmf method)": [[112, "spectrochempy.NMF.inverse_transform", false]], "inverse_transform() (optimize method)": [[114, "spectrochempy.Optimize.inverse_transform", false]], "inverse_transform() (pca method)": [[115, "spectrochempy.PCA.inverse_transform", false]], "inverse_transform() (plsregression method)": [[117, "spectrochempy.PLSRegression.inverse_transform", false]], "inverse_transform() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.inverse_transform", false]], "inverse_transform() (svd method)": [[123, "spectrochempy.SVD.inverse_transform", false]], "ir (in module spectrochempy)": [[104, "spectrochempy.IR", false]], "ir (nddataset attribute)": [[109, "spectrochempy.NDDataset.IR", false]], "iris (class in spectrochempy)": [[105, "spectrochempy.IRIS", false]], "iriskernel (class in spectrochempy)": [[106, "spectrochempy.IrisKernel", false]], "is_1d (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_1d", false]], "is_compatible_with() (quantity method)": [[119, "spectrochempy.Quantity.is_compatible_with", false]], "is_compatible_with() (unit method)": [[125, "spectrochempy.Unit.is_compatible_with", false]], "is_complex (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_complex", false]], "is_empty (coord attribute)": [[97, "spectrochempy.Coord.is_empty", false]], "is_empty (coordset attribute)": [[98, "spectrochempy.CoordSet.is_empty", false]], "is_empty (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_empty", false]], "is_float (coord attribute)": [[97, "spectrochempy.Coord.is_float", false]], "is_float (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_float", false]], "is_integer (coord attribute)": [[97, "spectrochempy.Coord.is_integer", false]], "is_integer (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_integer", false]], "is_interleaved (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_interleaved", false]], "is_labeled (coord attribute)": [[97, "spectrochempy.Coord.is_labeled", false]], "is_labeled (coordset attribute)": [[98, "spectrochempy.CoordSet.is_labeled", false]], "is_labeled (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_labeled", false]], "is_masked (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_masked", false]], "is_quaternion (nddataset attribute)": [[109, "spectrochempy.NDDataset.is_quaternion", false]], "is_same_dim (coordset attribute)": [[98, "spectrochempy.CoordSet.is_same_dim", false]], "is_units_compatible() (coord method)": [[97, "spectrochempy.Coord.is_units_compatible", false]], "is_units_compatible() (in module spectrochempy)": [[190, "spectrochempy.is_units_compatible", false]], "is_units_compatible() (nddataset method)": [[109, "spectrochempy.NDDataset.is_units_compatible", false]], "iterated_power (pca attribute)": [[115, "spectrochempy.PCA.iterated_power", false]], "ito() (coord method)": [[97, "spectrochempy.Coord.ito", false]], "ito() (in module spectrochempy)": [[191, "spectrochempy.ito", false]], "ito() (nddataset method)": [[109, "spectrochempy.NDDataset.ito", false]], "ito() (quantity method)": [[119, "spectrochempy.Quantity.ito", false]], "ito_base_units() (coord method)": [[97, "spectrochempy.Coord.ito_base_units", false]], "ito_base_units() (in module spectrochempy)": [[192, "spectrochempy.ito_base_units", false]], "ito_base_units() (nddataset method)": [[109, "spectrochempy.NDDataset.ito_base_units", false]], "ito_base_units() (quantity method)": [[119, "spectrochempy.Quantity.ito_base_units", false]], "ito_preferred() (quantity method)": [[119, "spectrochempy.Quantity.ito_preferred", false]], "ito_reduced_units() (coord method)": [[97, "spectrochempy.Coord.ito_reduced_units", false]], "ito_reduced_units() (in module spectrochempy)": [[193, "spectrochempy.ito_reduced_units", false]], "ito_reduced_units() (nddataset method)": [[109, "spectrochempy.NDDataset.ito_reduced_units", false]], "ito_reduced_units() (quantity method)": [[119, "spectrochempy.Quantity.ito_reduced_units", false]], "ito_root_units() (quantity method)": [[119, "spectrochempy.Quantity.ito_root_units", false]], "keys() (coordset method)": [[98, "spectrochempy.CoordSet.keys", false]], "kwargsgetconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.kwargsGetConc", false]], "kwargsgetspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.kwargsGetSpec", false]], "l1_ratio (nmf attribute)": [[112, "spectrochempy.NMF.l1_ratio", false]], "labels (coord attribute)": [[97, "spectrochempy.Coord.labels", false]], "labels (coordset attribute)": [[98, "spectrochempy.CoordSet.labels", false]], "labels (nddataset attribute)": [[109, "spectrochempy.NDDataset.labels", false]], "lamb (baseline attribute)": [[95, "spectrochempy.Baseline.lamb", false]], "lamb (filter attribute)": [[102, "spectrochempy.Filter.lamb", false]], "larmor (coord attribute)": [[97, "spectrochempy.Coord.larmor", false]], "laser_frequency (coord attribute)": [[97, "spectrochempy.Coord.laser_frequency", false]], "limits (coord attribute)": [[97, "spectrochempy.Coord.limits", false]], "limits (nddataset attribute)": [[109, "spectrochempy.NDDataset.limits", false]], "linear (coord attribute)": [[97, "spectrochempy.Coord.linear", false]], "linearize() (coord method)": [[97, "spectrochempy.Coord.linearize", false]], "linspace() (coord method)": [[97, "spectrochempy.Coord.linspace", false]], "linspace() (in module spectrochempy)": [[194, "spectrochempy.linspace", false]], "linspace() (nddataset method)": [[109, "spectrochempy.NDDataset.linspace", false]], "lls (baseline attribute)": [[95, "spectrochempy.Baseline.lls", false]], "load() (in module spectrochempy)": [[195, "spectrochempy.load", false]], "load() (nddataset class method)": [[109, "spectrochempy.NDDataset.load", false]], "load() (project class method)": [[118, "spectrochempy.Project.load", false]], "load_iris() (in module spectrochempy)": [[196, "spectrochempy.load_iris", false]], "load_iris() (nddataset method)": [[109, "spectrochempy.NDDataset.load_iris", false]], "loading": [[314, "term-loading", true]], "loadings": [[314, "term-loadings", true]], "loadings (pca attribute)": [[115, "spectrochempy.PCA.loadings", false]], "loads() (nddataset class method)": [[109, "spectrochempy.NDDataset.loads", false]], "loads() (project class method)": [[118, "spectrochempy.Project.loads", false]], "loc2index() (coord method)": [[97, "spectrochempy.Coord.loc2index", false]], "local_timezone (nddataset attribute)": [[109, "spectrochempy.NDDataset.local_timezone", false]], "log (baseline attribute)": [[95, "spectrochempy.Baseline.log", false]], "log (efa attribute)": [[99, "spectrochempy.EFA.log", false]], "log (fastica attribute)": [[100, "spectrochempy.FastICA.log", false]], "log (filter attribute)": [[102, "spectrochempy.Filter.log", false]], "log (iris attribute)": [[105, "spectrochempy.IRIS.log", false]], "log (lstsq attribute)": [[107, "spectrochempy.LSTSQ.log", false]], "log (mcrals attribute)": [[108, "spectrochempy.MCRALS.log", false]], "log (nmf attribute)": [[112, "spectrochempy.NMF.log", false]], "log (nnls attribute)": [[113, "spectrochempy.NNLS.log", false]], "log (optimize attribute)": [[114, "spectrochempy.Optimize.log", false]], "log (pca attribute)": [[115, "spectrochempy.PCA.log", false]], "log (plsregression attribute)": [[117, "spectrochempy.PLSRegression.log", false]], "log (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.log", false]], "log (svd attribute)": [[123, "spectrochempy.SVD.log", false]], "logspace() (coord method)": [[97, "spectrochempy.Coord.logspace", false]], "logspace() (in module spectrochempy)": [[197, "spectrochempy.logspace", false]], "logspace() (nddataset method)": [[109, "spectrochempy.NDDataset.logspace", false]], "lorentzianmodel (class in spectrochempy)": [[198, "spectrochempy.lorentzianmodel", false]], "ls() (in module spectrochempy)": [[199, "spectrochempy.ls", false]], "ls() (nddataset method)": [[109, "spectrochempy.NDDataset.ls", false]], "lstsq (class in spectrochempy)": [[107, "spectrochempy.LSTSQ", false]], "m (coord attribute)": [[97, "spectrochempy.Coord.m", false]], "m (nddataset attribute)": [[109, "spectrochempy.NDDataset.m", false]], "m (quantity attribute)": [[119, "spectrochempy.Quantity.m", false]], "m_as() (quantity method)": [[119, "spectrochempy.Quantity.m_as", false]], "m_from() (unit method)": [[125, "spectrochempy.Unit.m_from", false]], "magnitude (coord attribute)": [[97, "spectrochempy.Coord.magnitude", false]], "magnitude (nddataset attribute)": [[109, "spectrochempy.NDDataset.magnitude", false]], "magnitude (quantity attribute)": [[119, "spectrochempy.Quantity.magnitude", false]], "mask (nddataset attribute)": [[109, "spectrochempy.NDDataset.mask", false]], "masked_data (nddataset attribute)": [[109, "spectrochempy.NDDataset.masked_data", false]], "max() (coord method)": [[97, "spectrochempy.Coord.max", false]], "max() (in module spectrochempy)": [[200, "spectrochempy.max", false]], "max() (nddataset method)": [[109, "spectrochempy.NDDataset.max", false]], "max_fun_calls (optimize attribute)": [[114, "spectrochempy.Optimize.max_fun_calls", false]], "max_iter (baseline attribute)": [[95, "spectrochempy.Baseline.max_iter", false]], "max_iter (fastica attribute)": [[100, "spectrochempy.FastICA.max_iter", false]], "max_iter (mcrals attribute)": [[108, "spectrochempy.MCRALS.max_iter", false]], "max_iter (nmf attribute)": [[112, "spectrochempy.NMF.max_iter", false]], "max_iter (optimize attribute)": [[114, "spectrochempy.Optimize.max_iter", false]], "max_iter (plsregression attribute)": [[117, "spectrochempy.PLSRegression.max_iter", false]], "maxdiv (mcrals attribute)": [[108, "spectrochempy.MCRALS.maxdiv", false]], "mc() (in module spectrochempy)": [[201, "spectrochempy.mc", false]], "mc() (nddataset method)": [[109, "spectrochempy.NDDataset.mc", false]], "mcr-als": [[314, "term-MCR-ALS", true]], "mcrals (class in spectrochempy)": [[108, "spectrochempy.MCRALS", false]], "mean (fastica attribute)": [[100, "spectrochempy.FastICA.mean", false]], "mean() (in module spectrochempy)": [[202, "spectrochempy.mean", false]], "mean() (nddataset method)": [[109, "spectrochempy.NDDataset.mean", false]], "meta (coord attribute)": [[97, "spectrochempy.Coord.meta", false]], "meta (nddataset attribute)": [[109, "spectrochempy.NDDataset.meta", false]], "meta (project attribute)": [[118, "spectrochempy.Project.meta", false]], "method (filter attribute)": [[102, "spectrochempy.Filter.method", false]], "method (optimize attribute)": [[114, "spectrochempy.Optimize.method", false]], "min() (coord method)": [[97, "spectrochempy.Coord.min", false]], "min() (in module spectrochempy)": [[203, "spectrochempy.min", false]], "min() (nddataset method)": [[109, "spectrochempy.NDDataset.min", false]], "mixing (fastica attribute)": [[100, "spectrochempy.FastICA.mixing", false]], "mode (filter attribute)": [[102, "spectrochempy.Filter.mode", false]], "model (baseline attribute)": [[95, "spectrochempy.Baseline.model", false]], "modeldata (nddataset attribute)": [[109, "spectrochempy.NDDataset.modeldata", false]], "modeldata (optimize attribute)": [[114, "spectrochempy.Optimize.modeldata", false]], "modified (nddataset attribute)": [[109, "spectrochempy.NDDataset.modified", false]], "monodecconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.monoDecConc", false]], "monodectol (mcrals attribute)": [[108, "spectrochempy.MCRALS.monoDecTol", false]], "monoincconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.monoIncConc", false]], "monoinctol (mcrals attribute)": [[108, "spectrochempy.MCRALS.monoIncTol", false]], "multiplot() (in module spectrochempy)": [[204, "spectrochempy.multiplot", false]], "multiplot_image() (in module spectrochempy)": [[205, "spectrochempy.multiplot_image", false]], "multiplot_lines() (in module spectrochempy)": [[206, "spectrochempy.multiplot_lines", false]], "multiplot_map() (in module spectrochempy)": [[207, "spectrochempy.multiplot_map", false]], "multiplot_scatter() (in module spectrochempy)": [[208, "spectrochempy.multiplot_scatter", false]], "multiplot_stack() (in module spectrochempy)": [[209, "spectrochempy.multiplot_stack", false]], "multiplot_with_transposed() (in module spectrochempy)": [[210, "spectrochempy.multiplot_with_transposed", false]], "multivariate (baseline attribute)": [[95, "spectrochempy.Baseline.multivariate", false]], "n_components": [[314, "term-n_components", true]], "n_components (baseline attribute)": [[95, "spectrochempy.Baseline.n_components", false]], "n_components (efa attribute)": [[99, "spectrochempy.EFA.n_components", false]], "n_components (fastica attribute)": [[100, "spectrochempy.FastICA.n_components", false]], "n_components (iris attribute)": [[105, "spectrochempy.IRIS.n_components", false]], "n_components (mcrals attribute)": [[108, "spectrochempy.MCRALS.n_components", false]], "n_components (nmf attribute)": [[112, "spectrochempy.NMF.n_components", false]], "n_components (optimize attribute)": [[114, "spectrochempy.Optimize.n_components", false]], "n_components (pca attribute)": [[115, "spectrochempy.PCA.n_components", false]], "n_components (plsregression attribute)": [[117, "spectrochempy.PLSRegression.n_components", false]], "n_components (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.n_components", false]], "n_components (svd attribute)": [[123, "spectrochempy.SVD.n_components", false]], "n_features": [[314, "term-n_features", true]], "n_iter (fastica attribute)": [[100, "spectrochempy.FastICA.n_iter", false]], "n_observations": [[314, "term-n_observations", true]], "n_oversamples (pca attribute)": [[115, "spectrochempy.PCA.n_oversamples", false]], "n_reactions (actionmasskinetics attribute)": [[94, "spectrochempy.ActionMassKinetics.n_reactions", false]], "n_species (actionmasskinetics attribute)": [[94, "spectrochempy.ActionMassKinetics.n_species", false]], "n_targets": [[314, "term-n_targets", true]], "name (baseline attribute)": [[95, "spectrochempy.Baseline.name", false]], "name (coord attribute)": [[97, "spectrochempy.Coord.name", false]], "name (efa attribute)": [[99, "spectrochempy.EFA.name", false]], "name (fastica attribute)": [[100, "spectrochempy.FastICA.name", false]], "name (filter attribute)": [[102, "spectrochempy.Filter.name", false]], "name (iris attribute)": [[105, "spectrochempy.IRIS.name", false]], "name (lstsq attribute)": [[107, "spectrochempy.LSTSQ.name", false]], "name (mcrals attribute)": [[108, "spectrochempy.MCRALS.name", false]], "name (nddataset attribute)": [[109, "spectrochempy.NDDataset.name", false]], "name (nmf attribute)": [[112, "spectrochempy.NMF.name", false]], "name (nnls attribute)": [[113, "spectrochempy.NNLS.name", false]], "name (optimize attribute)": [[114, "spectrochempy.Optimize.name", false]], "name (pca attribute)": [[115, "spectrochempy.PCA.name", false]], "name (plsregression attribute)": [[117, "spectrochempy.PLSRegression.name", false]], "name (project attribute)": [[118, "spectrochempy.Project.name", false]], "name (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.name", false]], "name (svd attribute)": [[123, "spectrochempy.SVD.name", false]], "names (coordset attribute)": [[98, "spectrochempy.CoordSet.names", false]], "ndaxes (nddataset attribute)": [[109, "spectrochempy.NDDataset.ndaxes", false]], "nddataset (class in spectrochempy)": [[109, "spectrochempy.NDDataset", false]], "ndim (nddataset attribute)": [[109, "spectrochempy.NDDataset.ndim", false]], "nmf": [[314, "term-NMF", true]], "nmf (class in spectrochempy)": [[112, "spectrochempy.NMF", false]], "nnls (class in spectrochempy)": [[113, "spectrochempy.NNLS", false]], "noise (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.noise", false]], "nonnegconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.nonnegConc", false]], "nonnegspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.nonnegSpec", false]], "normspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.normSpec", false]], "ones() (in module spectrochempy)": [[211, "spectrochempy.ones", false]], "ones() (nddataset method)": [[109, "spectrochempy.NDDataset.ones", false]], "ones_like() (in module spectrochempy)": [[212, "spectrochempy.ones_like", false]], "ones_like() (nddataset method)": [[109, "spectrochempy.NDDataset.ones_like", false]], "optimize (class in spectrochempy)": [[114, "spectrochempy.Optimize", false]], "order (baseline attribute)": [[95, "spectrochempy.Baseline.order", false]], "order (filter attribute)": [[102, "spectrochempy.Filter.order", false]], "origin (nddataset attribute)": [[109, "spectrochempy.NDDataset.origin", false]], "original (baselinecorrector attribute)": [[96, "spectrochempy.BaselineCorrector.original", false]], "parameters() (baseline method)": [[95, "spectrochempy.Baseline.parameters", false]], "parameters() (efa method)": [[99, "spectrochempy.EFA.parameters", false]], "parameters() (fastica method)": [[100, "spectrochempy.FastICA.parameters", false]], "parameters() (filter method)": [[102, "spectrochempy.Filter.parameters", false]], "parameters() (iris method)": [[105, "spectrochempy.IRIS.parameters", false]], "parameters() (lstsq method)": [[107, "spectrochempy.LSTSQ.parameters", false]], "parameters() (mcrals method)": [[108, "spectrochempy.MCRALS.parameters", false]], "parameters() (nmf method)": [[112, "spectrochempy.NMF.parameters", false]], "parameters() (nnls method)": [[113, "spectrochempy.NNLS.parameters", false]], "parameters() (optimize method)": [[114, "spectrochempy.Optimize.parameters", false]], "parameters() (pca method)": [[115, "spectrochempy.PCA.parameters", false]], "parameters() (plsregression method)": [[117, "spectrochempy.PLSRegression.parameters", false]], "parameters() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.parameters", false]], "parameters() (svd method)": [[123, "spectrochempy.SVD.parameters", false]], "params() (baseline method)": [[95, "spectrochempy.Baseline.params", false]], "params() (efa method)": [[99, "spectrochempy.EFA.params", false]], "params() (fastica method)": [[100, "spectrochempy.FastICA.params", false]], "params() (filter method)": [[102, "spectrochempy.Filter.params", false]], "params() (iris method)": [[105, "spectrochempy.IRIS.params", false]], "params() (lstsq method)": [[107, "spectrochempy.LSTSQ.params", false]], "params() (mcrals method)": [[108, "spectrochempy.MCRALS.params", false]], "params() (nmf method)": [[112, "spectrochempy.NMF.params", false]], "params() (nnls method)": [[113, "spectrochempy.NNLS.params", false]], "params() (optimize method)": [[114, "spectrochempy.Optimize.params", false]], "params() (pca method)": [[115, "spectrochempy.PCA.params", false]], "params() (plsregression method)": [[117, "spectrochempy.PLSRegression.params", false]], "params() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.params", false]], "params() (svd method)": [[123, "spectrochempy.SVD.params", false]], "parent (nddataset attribute)": [[109, "spectrochempy.NDDataset.parent", false]], "parent (project attribute)": [[118, "spectrochempy.Project.parent", false]], "parityplot() (plsregression method)": [[117, "spectrochempy.PLSRegression.parityplot", false]], "pathclean() (in module spectrochempy)": [[213, "spectrochempy.pathclean", false]], "pca": [[314, "term-PCA", true]], "pca (class in spectrochempy)": [[115, "spectrochempy.PCA", false]], "persist() (quantity method)": [[119, "spectrochempy.Quantity.persist", false]], "pfr (class in spectrochempy)": [[116, "spectrochempy.PFR", false]], "pipe() (in module spectrochempy)": [[214, "spectrochempy.pipe", false]], "pipe() (nddataset method)": [[109, "spectrochempy.NDDataset.pipe", false]], "pk() (in module spectrochempy)": [[215, "spectrochempy.pk", false]], "pk() (nddataset method)": [[109, "spectrochempy.NDDataset.pk", false]], "pk_exp() (in module spectrochempy)": [[216, "spectrochempy.pk_exp", false]], "pk_exp() (nddataset method)": [[109, "spectrochempy.NDDataset.pk_exp", false]], "plot() (baseline method)": [[95, "spectrochempy.Baseline.plot", false]], "plot() (in module spectrochempy)": [[217, "spectrochempy.plot", false]], "plot() (nddataset method)": [[109, "spectrochempy.NDDataset.plot", false]], "plot_1d() (in module spectrochempy)": [[218, "spectrochempy.plot_1D", false]], "plot_1d() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_1D", false]], "plot_2d() (in module spectrochempy)": [[219, "spectrochempy.plot_2D", false]], "plot_2d() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_2D", false]], "plot_3d() (in module spectrochempy)": [[220, "spectrochempy.plot_3D", false]], "plot_3d() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_3D", false]], "plot_bar() (in module spectrochempy)": [[221, "spectrochempy.plot_bar", false]], "plot_bar() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_bar", false]], "plot_image() (in module spectrochempy)": [[222, "spectrochempy.plot_image", false]], "plot_image() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_image", false]], "plot_map() (in module spectrochempy)": [[223, "spectrochempy.plot_map", false]], "plot_map() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_map", false]], "plot_multiple() (in module spectrochempy)": [[224, "spectrochempy.plot_multiple", false]], "plot_multiple() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_multiple", false]], "plot_pen() (in module spectrochempy)": [[225, "spectrochempy.plot_pen", false]], "plot_pen() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_pen", false]], "plot_scatter() (in module spectrochempy)": [[226, "spectrochempy.plot_scatter", false]], "plot_scatter() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_scatter", false]], "plot_scatter_pen() (in module spectrochempy)": [[227, "spectrochempy.plot_scatter_pen", false]], "plot_scatter_pen() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_scatter_pen", false]], "plot_stack() (in module spectrochempy)": [[228, "spectrochempy.plot_stack", false]], "plot_stack() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_stack", false]], "plot_surface() (in module spectrochempy)": [[229, "spectrochempy.plot_surface", false]], "plot_surface() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_surface", false]], "plot_waterfall() (in module spectrochempy)": [[230, "spectrochempy.plot_waterfall", false]], "plot_waterfall() (nddataset method)": [[109, "spectrochempy.NDDataset.plot_waterfall", false]], "plot_with_transposed() (in module spectrochempy)": [[231, "spectrochempy.plot_with_transposed", false]], "plotdistribution() (iris method)": [[105, "spectrochempy.IRIS.plotdistribution", false]], "plotlcurve() (iris method)": [[105, "spectrochempy.IRIS.plotlcurve", false]], "plotmerit() (efa method)": [[99, "spectrochempy.EFA.plotmerit", false]], "plotmerit() (fastica method)": [[100, "spectrochempy.FastICA.plotmerit", false]], "plotmerit() (iris method)": [[105, "spectrochempy.IRIS.plotmerit", false]], "plotmerit() (mcrals method)": [[108, "spectrochempy.MCRALS.plotmerit", false]], "plotmerit() (nmf method)": [[112, "spectrochempy.NMF.plotmerit", false]], "plotmerit() (optimize method)": [[114, "spectrochempy.Optimize.plotmerit", false]], "plotmerit() (pca method)": [[115, "spectrochempy.PCA.plotmerit", false]], "plotmerit() (plsregression method)": [[117, "spectrochempy.PLSRegression.plotmerit", false]], "plotmerit() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.plotmerit", false]], "plotmerit() (svd method)": [[123, "spectrochempy.SVD.plotmerit", false]], "pls": [[314, "term-PLS", true]], "plsregression (class in spectrochempy)": [[117, "spectrochempy.PLSRegression", false]], "polynomialbaseline (class in spectrochempy)": [[232, "spectrochempy.polynomialbaseline", false]], "positive (lstsq attribute)": [[107, "spectrochempy.LSTSQ.positive", false]], "positive (nnls attribute)": [[113, "spectrochempy.NNLS.positive", false]], "power_iteration_normalizer (pca attribute)": [[115, "spectrochempy.PCA.power_iteration_normalizer", false]], "predict() (lstsq method)": [[107, "spectrochempy.LSTSQ.predict", false]], "predict() (nnls method)": [[113, "spectrochempy.NNLS.predict", false]], "predict() (optimize method)": [[114, "spectrochempy.Optimize.predict", false]], "predict() (plsregression method)": [[117, "spectrochempy.PLSRegression.predict", false]], "preferences (nddataset attribute)": [[109, "spectrochempy.NDDataset.preferences", false]], "printev() (pca method)": [[115, "spectrochempy.PCA.printev", false]], "prod() (quantity method)": [[119, "spectrochempy.Quantity.prod", false]], "project (class in spectrochempy)": [[118, "spectrochempy.Project", false]], "projects (project attribute)": [[118, "spectrochempy.Project.projects", false]], "projects_names (project attribute)": [[118, "spectrochempy.Project.projects_names", false]], "ps() (in module spectrochempy)": [[233, "spectrochempy.ps", false]], "ps() (nddataset method)": [[109, "spectrochempy.NDDataset.ps", false]], "pt (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.Pt", false]], "ptp() (coord method)": [[97, "spectrochempy.Coord.ptp", false]], "ptp() (in module spectrochempy)": [[234, "spectrochempy.ptp", false]], "ptp() (nddataset method)": [[109, "spectrochempy.NDDataset.ptp", false]], "qpsolver (iris attribute)": [[105, "spectrochempy.IRIS.qpsolver", false]], "qsin() (in module spectrochempy)": [[235, "spectrochempy.qsin", false]], "qsin() (nddataset method)": [[109, "spectrochempy.NDDataset.qsin", false]], "quantity (class in spectrochempy)": [[119, "spectrochempy.Quantity", false]], "random() (in module spectrochempy)": [[236, "spectrochempy.random", false]], "random() (nddataset method)": [[109, "spectrochempy.NDDataset.random", false]], "random_state (fastica attribute)": [[100, "spectrochempy.FastICA.random_state", false]], "random_state (nmf attribute)": [[112, "spectrochempy.NMF.random_state", false]], "random_state (pca attribute)": [[115, "spectrochempy.PCA.random_state", false]], "ranges (baseline attribute)": [[95, "spectrochempy.Baseline.ranges", false]], "rank": [[314, "term-rank", true]], "read() (in module spectrochempy)": [[237, "spectrochempy.read", false]], "read() (nddataset method)": [[109, "spectrochempy.NDDataset.read", false]], "read_carroucell() (in module spectrochempy)": [[238, "spectrochempy.read_carroucell", false]], "read_carroucell() (nddataset method)": [[109, "spectrochempy.NDDataset.read_carroucell", false]], "read_csv() (in module spectrochempy)": [[239, "spectrochempy.read_csv", false]], "read_csv() (nddataset method)": [[109, "spectrochempy.NDDataset.read_csv", false]], "read_ddr() (in module spectrochempy)": [[240, "spectrochempy.read_ddr", false]], "read_ddr() (nddataset method)": [[109, "spectrochempy.NDDataset.read_ddr", false]], "read_dir() (in module spectrochempy)": [[241, "spectrochempy.read_dir", false]], "read_dir() (nddataset method)": [[109, "spectrochempy.NDDataset.read_dir", false]], "read_hdr() (in module spectrochempy)": [[242, "spectrochempy.read_hdr", false]], "read_hdr() (nddataset method)": [[109, "spectrochempy.NDDataset.read_hdr", false]], "read_jcamp() (in module spectrochempy)": [[243, "spectrochempy.read_jcamp", false]], "read_jcamp() (nddataset method)": [[109, "spectrochempy.NDDataset.read_jcamp", false]], "read_labspec() (in module spectrochempy)": [[244, "spectrochempy.read_labspec", false]], "read_labspec() (nddataset method)": [[109, "spectrochempy.NDDataset.read_labspec", false]], "read_mat() (in module spectrochempy)": [[245, "spectrochempy.read_mat", false]], "read_mat() (nddataset method)": [[109, "spectrochempy.NDDataset.read_mat", false]], "read_matlab() (in module spectrochempy)": [[246, "spectrochempy.read_matlab", false]], "read_matlab() (nddataset method)": [[109, "spectrochempy.NDDataset.read_matlab", false]], "read_omnic() (in module spectrochempy)": [[247, "spectrochempy.read_omnic", false]], "read_omnic() (nddataset method)": [[109, "spectrochempy.NDDataset.read_omnic", false]], "read_opus() (in module spectrochempy)": [[248, "spectrochempy.read_opus", false]], "read_opus() (nddataset method)": [[109, "spectrochempy.NDDataset.read_opus", false]], "read_quadera() (in module spectrochempy)": [[249, "spectrochempy.read_quadera", false]], "read_quadera() (nddataset method)": [[109, "spectrochempy.NDDataset.read_quadera", false]], "read_sdr() (in module spectrochempy)": [[250, "spectrochempy.read_sdr", false]], "read_sdr() (nddataset method)": [[109, "spectrochempy.NDDataset.read_sdr", false]], "read_soc() (in module spectrochempy)": [[251, "spectrochempy.read_soc", false]], "read_soc() (nddataset method)": [[109, "spectrochempy.NDDataset.read_soc", false]], "read_spa() (in module spectrochempy)": [[252, "spectrochempy.read_spa", false]], "read_spa() (nddataset method)": [[109, "spectrochempy.NDDataset.read_spa", false]], "read_spc() (in module spectrochempy)": [[253, "spectrochempy.read_spc", false]], "read_spc() (nddataset method)": [[109, "spectrochempy.NDDataset.read_spc", false]], "read_spg() (in module spectrochempy)": [[254, "spectrochempy.read_spg", false]], "read_spg() (nddataset method)": [[109, "spectrochempy.NDDataset.read_spg", false]], "read_srs() (in module spectrochempy)": [[255, "spectrochempy.read_srs", false]], "read_srs() (nddataset method)": [[109, "spectrochempy.NDDataset.read_srs", false]], "read_topspin() (in module spectrochempy)": [[256, "spectrochempy.read_topspin", false]], "read_topspin() (nddataset method)": [[109, "spectrochempy.NDDataset.read_topspin", false]], "read_wdf() (in module spectrochempy)": [[257, "spectrochempy.read_wdf", false]], "read_wdf() (nddataset method)": [[109, "spectrochempy.NDDataset.read_wdf", false]], "read_wire() (in module spectrochempy)": [[258, "spectrochempy.read_wire", false]], "read_wire() (nddataset method)": [[109, "spectrochempy.NDDataset.read_wire", false]], "read_zip() (in module spectrochempy)": [[259, "spectrochempy.read_zip", false]], "read_zip() (nddataset method)": [[109, "spectrochempy.NDDataset.read_zip", false]], "real (in module spectrochempy)": [[260, "spectrochempy.real", false]], "real (nddataset attribute)": [[109, "spectrochempy.NDDataset.real", false]], "reconstruct() (efa method)": [[99, "spectrochempy.EFA.reconstruct", false]], "reconstruct() (fastica method)": [[100, "spectrochempy.FastICA.reconstruct", false]], "reconstruct() (iris method)": [[105, "spectrochempy.IRIS.reconstruct", false]], "reconstruct() (mcrals method)": [[108, "spectrochempy.MCRALS.reconstruct", false]], "reconstruct() (nmf method)": [[112, "spectrochempy.NMF.reconstruct", false]], "reconstruct() (optimize method)": [[114, "spectrochempy.Optimize.reconstruct", false]], "reconstruct() (pca method)": [[115, "spectrochempy.PCA.reconstruct", false]], "reconstruct() (plsregression method)": [[117, "spectrochempy.PLSRegression.reconstruct", false]], "reconstruct() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.reconstruct", false]], "reconstruct() (svd method)": [[123, "spectrochempy.SVD.reconstruct", false]], "reduce() (efa method)": [[99, "spectrochempy.EFA.reduce", false]], "reduce() (fastica method)": [[100, "spectrochempy.FastICA.reduce", false]], "reduce() (iris method)": [[105, "spectrochempy.IRIS.reduce", false]], "reduce() (mcrals method)": [[108, "spectrochempy.MCRALS.reduce", false]], "reduce() (nmf method)": [[112, "spectrochempy.NMF.reduce", false]], "reduce() (optimize method)": [[114, "spectrochempy.Optimize.reduce", false]], "reduce() (pca method)": [[115, "spectrochempy.PCA.reduce", false]], "reduce() (plsregression method)": [[117, "spectrochempy.PLSRegression.reduce", false]], "reduce() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.reduce", false]], "reduce() (svd method)": [[123, "spectrochempy.SVD.reduce", false]], "reg_par (iris attribute)": [[105, "spectrochempy.IRIS.reg_par", false]], "regularization": [[314, "term-regularization", true]], "remove_all_dataset() (project method)": [[118, "spectrochempy.Project.remove_all_dataset", false]], "remove_all_project() (project method)": [[118, "spectrochempy.Project.remove_all_project", false]], "remove_dataset() (project method)": [[118, "spectrochempy.Project.remove_dataset", false]], "remove_masks() (in module spectrochempy)": [[261, "spectrochempy.remove_masks", false]], "remove_masks() (nddataset method)": [[109, "spectrochempy.NDDataset.remove_masks", false]], "remove_project() (project method)": [[118, "spectrochempy.Project.remove_project", false]], "reset() (baseline method)": [[95, "spectrochempy.Baseline.reset", false]], "reset() (efa method)": [[99, "spectrochempy.EFA.reset", false]], "reset() (fastica method)": [[100, "spectrochempy.FastICA.reset", false]], "reset() (filter method)": [[102, "spectrochempy.Filter.reset", false]], "reset() (iris method)": [[105, "spectrochempy.IRIS.reset", false]], "reset() (lstsq method)": [[107, "spectrochempy.LSTSQ.reset", false]], "reset() (mcrals method)": [[108, "spectrochempy.MCRALS.reset", false]], "reset() (nmf method)": [[112, "spectrochempy.NMF.reset", false]], "reset() (nnls method)": [[113, "spectrochempy.NNLS.reset", false]], "reset() (optimize method)": [[114, "spectrochempy.Optimize.reset", false]], "reset() (pca method)": [[115, "spectrochempy.PCA.reset", false]], "reset() (plsregression method)": [[117, "spectrochempy.PLSRegression.reset", false]], "reset() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.reset", false]], "reset() (svd method)": [[123, "spectrochempy.SVD.reset", false]], "reversed (coord attribute)": [[97, "spectrochempy.Coord.reversed", false]], "ri (in module spectrochempy)": [[120, "spectrochempy.RI", false]], "ri (nddataset attribute)": [[109, "spectrochempy.NDDataset.RI", false]], "roi (coord attribute)": [[97, "spectrochempy.Coord.roi", false]], "roi (nddataset attribute)": [[109, "spectrochempy.NDDataset.roi", false]], "roll() (in module spectrochempy)": [[262, "spectrochempy.roll", false]], "roll() (nddataset method)": [[109, "spectrochempy.NDDataset.roll", false]], "round() (coord method)": [[97, "spectrochempy.Coord.round", false]], "round() (in module spectrochempy)": [[263, "spectrochempy.round", false]], "round() (nddataset method)": [[109, "spectrochempy.NDDataset.round", false]], "round_() (coord method)": [[97, "spectrochempy.Coord.round_", false]], "round_() (nddataset method)": [[109, "spectrochempy.NDDataset.round_", false]], "rr (in module spectrochempy)": [[121, "spectrochempy.RR", false]], "rr (nddataset attribute)": [[109, "spectrochempy.NDDataset.RR", false]], "rs() (in module spectrochempy)": [[264, "spectrochempy.rs", false]], "rs() (nddataset method)": [[109, "spectrochempy.NDDataset.rs", false]], "rubberband() (nddataset method)": [[109, "spectrochempy.NDDataset.rubberband", false]], "run_all_scripts() (in module spectrochempy)": [[265, "spectrochempy.run_all_scripts", false]], "run_script() (in module spectrochempy)": [[266, "spectrochempy.run_script", false]], "s (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.s", false]], "s (svd attribute)": [[123, "spectrochempy.SVD.s", false]], "s_soft (mcrals attribute)": [[108, "spectrochempy.MCRALS.S_soft", false]], "save() (nddataset method)": [[109, "spectrochempy.NDDataset.save", false]], "save() (project method)": [[118, "spectrochempy.Project.save", false]], "save_as() (nddataset method)": [[109, "spectrochempy.NDDataset.save_as", false]], "save_as() (project method)": [[118, "spectrochempy.Project.save_as", false]], "savgol() (in module spectrochempy)": [[267, "spectrochempy.savgol", false]], "savgol() (nddataset method)": [[109, "spectrochempy.NDDataset.savgol", false]], "savgol_filter() (nddataset method)": [[109, "spectrochempy.NDDataset.savgol_filter", false]], "scale (plsregression attribute)": [[117, "spectrochempy.PLSRegression.scale", false]], "scaled (pca attribute)": [[115, "spectrochempy.PCA.scaled", false]], "score": [[314, "term-score", true]], "score() (lstsq method)": [[107, "spectrochempy.LSTSQ.score", false]], "score() (nnls method)": [[113, "spectrochempy.NNLS.score", false]], "score() (plsregression method)": [[117, "spectrochempy.PLSRegression.score", false]], "scoreplot() (pca method)": [[115, "spectrochempy.PCA.scoreplot", false]], "scores": [[314, "term-scores", true]], "scores (pca attribute)": [[115, "spectrochempy.PCA.scores", false]], "screeplot() (pca method)": [[115, "spectrochempy.PCA.screeplot", false]], "script (asymmetricvoigtmodel attribute)": [[138, "spectrochempy.asymmetricvoigtmodel.script", false]], "script (class in spectrochempy)": [[124, "spectrochempy.Script", false]], "script (gaussianmodel attribute)": [[176, "spectrochempy.gaussianmodel.script", false]], "script (lorentzianmodel attribute)": [[198, "spectrochempy.lorentzianmodel.script", false]], "script (optimize attribute)": [[114, "spectrochempy.Optimize.script", false]], "script (polynomialbaseline attribute)": [[232, "spectrochempy.polynomialbaseline.script", false]], "script (sigmoidmodel attribute)": [[275, "spectrochempy.sigmoidmodel.script", false]], "script (voigtmodel attribute)": [[298, "spectrochempy.voigtmodel.script", false]], "scripts (project attribute)": [[118, "spectrochempy.Project.scripts", false]], "scripts_names (project attribute)": [[118, "spectrochempy.Project.scripts_names", false]], "select() (coordset method)": [[98, "spectrochempy.CoordSet.select", false]], "set() (coordset method)": [[98, "spectrochempy.CoordSet.set", false]], "set_complex() (in module spectrochempy)": [[268, "spectrochempy.set_complex", false]], "set_complex() (nddataset method)": [[109, "spectrochempy.NDDataset.set_complex", false]], "set_coordset() (nddataset method)": [[109, "spectrochempy.NDDataset.set_coordset", false]], "set_coordtitles() (nddataset method)": [[109, "spectrochempy.NDDataset.set_coordtitles", false]], "set_coordunits() (nddataset method)": [[109, "spectrochempy.NDDataset.set_coordunits", false]], "set_hypercomplex() (in module spectrochempy)": [[269, "spectrochempy.set_hypercomplex", false]], "set_hypercomplex() (nddataset method)": [[109, "spectrochempy.NDDataset.set_hypercomplex", false]], "set_laser_frequency() (coord method)": [[97, "spectrochempy.Coord.set_laser_frequency", false]], "set_loglevel() (in module spectrochempy)": [[270, "spectrochempy.set_loglevel", false]], "set_nmr_context() (in module spectrochempy)": [[271, "spectrochempy.set_nmr_context", false]], "set_quaternion() (in module spectrochempy)": [[272, "spectrochempy.set_quaternion", false]], "set_quaternion() (nddataset method)": [[109, "spectrochempy.NDDataset.set_quaternion", false]], "set_titles() (coordset method)": [[98, "spectrochempy.CoordSet.set_titles", false]], "set_units() (coordset method)": [[98, "spectrochempy.CoordSet.set_units", false]], "shape (coord attribute)": [[97, "spectrochempy.Coord.shape", false]], "shape (nddataset attribute)": [[109, "spectrochempy.NDDataset.shape", false]], "show() (in module spectrochempy)": [[273, "spectrochempy.show", false]], "show_datapoints (coord attribute)": [[97, "spectrochempy.Coord.show_datapoints", false]], "show_versions() (in module spectrochempy)": [[274, "spectrochempy.show_versions", false]], "shuffle (nmf attribute)": [[112, "spectrochempy.NMF.shuffle", false]], "sigdigits (coord attribute)": [[97, "spectrochempy.Coord.sigdigits", false]], "sigmoidmodel (class in spectrochempy)": [[275, "spectrochempy.sigmoidmodel", false]], "simplisma (class in spectrochempy)": [[122, "spectrochempy.SIMPLISMA", false]], "simps() (nddataset method)": [[109, "spectrochempy.NDDataset.simps", false]], "simpson() (in module spectrochempy)": [[276, "spectrochempy.simpson", false]], "simpson() (nddataset method)": [[109, "spectrochempy.NDDataset.simpson", false]], "sine() (in module spectrochempy)": [[277, "spectrochempy.sine", false]], "sine() (nddataset method)": [[109, "spectrochempy.NDDataset.sine", false]], "singular_values (svd attribute)": [[123, "spectrochempy.SVD.singular_values", false]], "sinm() (in module spectrochempy)": [[278, "spectrochempy.sinm", false]], "sinm() (nddataset method)": [[109, "spectrochempy.NDDataset.sinm", false]], "size (coord attribute)": [[97, "spectrochempy.Coord.size", false]], "size (coordset attribute)": [[98, "spectrochempy.CoordSet.size", false]], "size (filter attribute)": [[102, "spectrochempy.Filter.size", false]], "size (nddataset attribute)": [[109, "spectrochempy.NDDataset.size", false]], "sizes (coordset attribute)": [[98, "spectrochempy.CoordSet.sizes", false]], "smooth() (in module spectrochempy)": [[279, "spectrochempy.smooth", false]], "smooth() (nddataset method)": [[109, "spectrochempy.NDDataset.smooth", false]], "snip() (in module spectrochempy)": [[280, "spectrochempy.snip", false]], "snip() (nddataset method)": [[109, "spectrochempy.NDDataset.snip", false]], "snip_width (baseline attribute)": [[95, "spectrochempy.Baseline.snip_width", false]], "solver (nmf attribute)": [[112, "spectrochempy.NMF.solver", false]], "solverconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.solverConc", false]], "solverspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.solverSpec", false]], "sort() (in module spectrochempy)": [[281, "spectrochempy.sort", false]], "sort() (nddataset method)": [[109, "spectrochempy.NDDataset.sort", false]], "sp() (in module spectrochempy)": [[282, "spectrochempy.sp", false]], "sp() (nddataset method)": [[109, "spectrochempy.NDDataset.sp", false]], "spacing (coord attribute)": [[97, "spectrochempy.Coord.spacing", false]], "species (actionmasskinetics attribute)": [[94, "spectrochempy.ActionMassKinetics.species", false]], "squeeze() (in module spectrochempy)": [[283, "spectrochempy.squeeze", false]], "squeeze() (nddataset method)": [[109, "spectrochempy.NDDataset.squeeze", false]], "st (fastica attribute)": [[100, "spectrochempy.FastICA.St", false]], "st (mcrals attribute)": [[108, "spectrochempy.MCRALS.St", false]], "st (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.St", false]], "st_constrained_list (mcrals attribute)": [[108, "spectrochempy.MCRALS.St_constrained_list", false]], "st_ls (mcrals attribute)": [[108, "spectrochempy.MCRALS.St_ls", false]], "st_ls_list (mcrals attribute)": [[108, "spectrochempy.MCRALS.St_ls_list", false]], "st_unconstrained (mcrals attribute)": [[108, "spectrochempy.MCRALS.St_unconstrained", false]], "stack() (in module spectrochempy)": [[284, "spectrochempy.stack", false]], "stack() (nddataset method)": [[109, "spectrochempy.NDDataset.stack", false]], "standardized (pca attribute)": [[115, "spectrochempy.PCA.standardized", false]], "std() (in module spectrochempy)": [[285, "spectrochempy.std", false]], "std() (nddataset method)": [[109, "spectrochempy.NDDataset.std", false]], "storeiterations (mcrals attribute)": [[108, "spectrochempy.MCRALS.storeIterations", false]], "suffix (nddataset attribute)": [[109, "spectrochempy.NDDataset.suffix", false]], "suffix (project attribute)": [[118, "spectrochempy.Project.suffix", false]], "sum() (in module spectrochempy)": [[286, "spectrochempy.sum", false]], "sum() (nddataset method)": [[109, "spectrochempy.NDDataset.sum", false]], "sv (svd attribute)": [[123, "spectrochempy.SVD.sv", false]], "svd": [[314, "term-SVD", true]], "svd (class in spectrochempy)": [[123, "spectrochempy.SVD", false]], "svd_solver (pca attribute)": [[115, "spectrochempy.PCA.svd_solver", false]], "swapaxes() (nddataset method)": [[109, "spectrochempy.NDDataset.swapaxes", false]], "swapdims() (in module spectrochempy)": [[287, "spectrochempy.swapdims", false]], "swapdims() (nddataset method)": [[109, "spectrochempy.NDDataset.swapdims", false]], "t (nddataset attribute)": [[109, "spectrochempy.NDDataset.T", false]], "take() (in module spectrochempy)": [[288, "spectrochempy.take", false]], "take() (nddataset method)": [[109, "spectrochempy.NDDataset.take", false]], "timezone (nddataset attribute)": [[109, "spectrochempy.NDDataset.timezone", false]], "title (coord attribute)": [[97, "spectrochempy.Coord.title", false]], "title (nddataset attribute)": [[109, "spectrochempy.NDDataset.title", false]], "titles (coordset attribute)": [[98, "spectrochempy.CoordSet.titles", false]], "to() (coord method)": [[97, "spectrochempy.Coord.to", false]], "to() (in module spectrochempy)": [[289, "spectrochempy.to", false]], "to() (nddataset method)": [[109, "spectrochempy.NDDataset.to", false]], "to() (quantity method)": [[119, "spectrochempy.Quantity.to", false]], "to_array() (in module spectrochempy)": [[290, "spectrochempy.to_array", false]], "to_array() (nddataset method)": [[109, "spectrochempy.NDDataset.to_array", false]], "to_base_units() (coord method)": [[97, "spectrochempy.Coord.to_base_units", false]], "to_base_units() (in module spectrochempy)": [[291, "spectrochempy.to_base_units", false]], "to_base_units() (nddataset method)": [[109, "spectrochempy.NDDataset.to_base_units", false]], "to_base_units() (quantity method)": [[119, "spectrochempy.Quantity.to_base_units", false]], "to_compact() (quantity method)": [[119, "spectrochempy.Quantity.to_compact", false]], "to_dict() (baseline method)": [[95, "spectrochempy.Baseline.to_dict", false]], "to_dict() (coordset method)": [[98, "spectrochempy.CoordSet.to_dict", false]], "to_dict() (efa method)": [[99, "spectrochempy.EFA.to_dict", false]], "to_dict() (fastica method)": [[100, "spectrochempy.FastICA.to_dict", false]], "to_dict() (filter method)": [[102, "spectrochempy.Filter.to_dict", false]], "to_dict() (iris method)": [[105, "spectrochempy.IRIS.to_dict", false]], "to_dict() (lstsq method)": [[107, "spectrochempy.LSTSQ.to_dict", false]], "to_dict() (mcrals method)": [[108, "spectrochempy.MCRALS.to_dict", false]], "to_dict() (nmf method)": [[112, "spectrochempy.NMF.to_dict", false]], "to_dict() (nnls method)": [[113, "spectrochempy.NNLS.to_dict", false]], "to_dict() (optimize method)": [[114, "spectrochempy.Optimize.to_dict", false]], "to_dict() (pca method)": [[115, "spectrochempy.PCA.to_dict", false]], "to_dict() (plsregression method)": [[117, "spectrochempy.PLSRegression.to_dict", false]], "to_dict() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.to_dict", false]], "to_dict() (svd method)": [[123, "spectrochempy.SVD.to_dict", false]], "to_preferred() (quantity method)": [[119, "spectrochempy.Quantity.to_preferred", false]], "to_reduced_units() (coord method)": [[97, "spectrochempy.Coord.to_reduced_units", false]], "to_reduced_units() (in module spectrochempy)": [[292, "spectrochempy.to_reduced_units", false]], "to_reduced_units() (nddataset method)": [[109, "spectrochempy.NDDataset.to_reduced_units", false]], "to_reduced_units() (quantity method)": [[119, "spectrochempy.Quantity.to_reduced_units", false]], "to_root_units() (quantity method)": [[119, "spectrochempy.Quantity.to_root_units", false]], "to_xarray() (in module spectrochempy)": [[293, "spectrochempy.to_xarray", false]], "to_xarray() (nddataset method)": [[109, "spectrochempy.NDDataset.to_xarray", false]], "tol (baseline attribute)": [[95, "spectrochempy.Baseline.tol", false]], "tol (fastica attribute)": [[100, "spectrochempy.FastICA.tol", false]], "tol (mcrals attribute)": [[108, "spectrochempy.MCRALS.tol", false]], "tol (nmf attribute)": [[112, "spectrochempy.NMF.tol", false]], "tol (pca attribute)": [[115, "spectrochempy.PCA.tol", false]], "tol (plsregression attribute)": [[117, "spectrochempy.PLSRegression.tol", false]], "tol (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.tol", false]], "transform() (baseline method)": [[95, "spectrochempy.Baseline.transform", false]], "transform() (efa method)": [[99, "spectrochempy.EFA.transform", false]], "transform() (fastica method)": [[100, "spectrochempy.FastICA.transform", false]], "transform() (filter method)": [[102, "spectrochempy.Filter.transform", false]], "transform() (iris method)": [[105, "spectrochempy.IRIS.transform", false]], "transform() (mcrals method)": [[108, "spectrochempy.MCRALS.transform", false]], "transform() (nmf method)": [[112, "spectrochempy.NMF.transform", false]], "transform() (optimize method)": [[114, "spectrochempy.Optimize.transform", false]], "transform() (pca method)": [[115, "spectrochempy.PCA.transform", false]], "transform() (plsregression method)": [[117, "spectrochempy.PLSRegression.transform", false]], "transform() (simplisma method)": [[122, "spectrochempy.SIMPLISMA.transform", false]], "transform() (svd method)": [[123, "spectrochempy.SVD.transform", false]], "transpose() (in module spectrochempy)": [[294, "spectrochempy.transpose", false]], "transpose() (nddataset method)": [[109, "spectrochempy.NDDataset.transpose", false]], "trapezoid() (in module spectrochempy)": [[295, "spectrochempy.trapezoid", false]], "trapezoid() (nddataset method)": [[109, "spectrochempy.NDDataset.trapezoid", false]], "trapz() (nddataset method)": [[109, "spectrochempy.NDDataset.trapz", false]], "triang() (in module spectrochempy)": [[296, "spectrochempy.triang", false]], "triang() (nddataset method)": [[109, "spectrochempy.NDDataset.triang", false]], "type (asymmetricvoigtmodel attribute)": [[138, "spectrochempy.asymmetricvoigtmodel.type", false]], "type (gaussianmodel attribute)": [[176, "spectrochempy.gaussianmodel.type", false]], "type (lorentzianmodel attribute)": [[198, "spectrochempy.lorentzianmodel.type", false]], "type (polynomialbaseline attribute)": [[232, "spectrochempy.polynomialbaseline.type", false]], "type (sigmoidmodel attribute)": [[275, "spectrochempy.sigmoidmodel.type", false]], "type (voigtmodel attribute)": [[298, "spectrochempy.voigtmodel.type", false]], "u (quantity attribute)": [[119, "spectrochempy.Quantity.u", false]], "u (svd attribute)": [[123, "spectrochempy.SVD.U", false]], "umasked_data (coord attribute)": [[97, "spectrochempy.Coord.umasked_data", false]], "umasked_data (nddataset attribute)": [[109, "spectrochempy.NDDataset.umasked_data", false]], "unimodality": [[314, "term-unimodality", true]], "unimodconc (mcrals attribute)": [[108, "spectrochempy.MCRALS.unimodConc", false]], "unimodconcmod (mcrals attribute)": [[108, "spectrochempy.MCRALS.unimodConcMod", false]], "unimodconctol (mcrals attribute)": [[108, "spectrochempy.MCRALS.unimodConcTol", false]], "unimodspec (mcrals attribute)": [[108, "spectrochempy.MCRALS.unimodSpec", false]], "unimodspecmod (mcrals attribute)": [[108, "spectrochempy.MCRALS.unimodSpecMod", false]], "unimodspectol (mcrals attribute)": [[108, "spectrochempy.MCRALS.unimodSpecTol", false]], "unit (class in spectrochempy)": [[125, "spectrochempy.Unit", false]], "unit_items() (quantity method)": [[119, "spectrochempy.Quantity.unit_items", false]], "unitless (coord attribute)": [[97, "spectrochempy.Coord.unitless", false]], "unitless (nddataset attribute)": [[109, "spectrochempy.NDDataset.unitless", false]], "unitless (quantity attribute)": [[119, "spectrochempy.Quantity.unitless", false]], "units (coord attribute)": [[97, "spectrochempy.Coord.units", false]], "units (coordset attribute)": [[98, "spectrochempy.CoordSet.units", false]], "units (nddataset attribute)": [[109, "spectrochempy.NDDataset.units", false]], "units (quantity attribute)": [[119, "spectrochempy.Quantity.units", false]], "update() (coordset method)": [[98, "spectrochempy.CoordSet.update", false]], "used_ranges (baseline attribute)": [[95, "spectrochempy.Baseline.used_ranges", false]], "usermodels (optimize attribute)": [[114, "spectrochempy.Optimize.usermodels", false]], "value (coord attribute)": [[97, "spectrochempy.Coord.value", false]], "value (nddataset attribute)": [[109, "spectrochempy.NDDataset.value", false]], "values (coord attribute)": [[97, "spectrochempy.Coord.values", false]], "values (nddataset attribute)": [[109, "spectrochempy.NDDataset.values", false]], "var() (in module spectrochempy)": [[297, "spectrochempy.var", false]], "var() (nddataset method)": [[109, "spectrochempy.NDDataset.var", false]], "visualize() (quantity method)": [[119, "spectrochempy.Quantity.visualize", false]], "voigtmodel (class in spectrochempy)": [[298, "spectrochempy.voigtmodel", false]], "vt (svd attribute)": [[123, "spectrochempy.SVD.VT", false]], "w_init (fastica attribute)": [[100, "spectrochempy.FastICA.w_init", false]], "warning_() (in module spectrochempy)": [[299, "spectrochempy.warning_", false]], "whiten (fastica attribute)": [[100, "spectrochempy.FastICA.whiten", false]], "whiten (pca attribute)": [[115, "spectrochempy.PCA.whiten", false]], "whiten_solver (fastica attribute)": [[100, "spectrochempy.FastICA.whiten_solver", false]], "whitening (fastica attribute)": [[100, "spectrochempy.FastICA.whitening", false]], "whittaker() (in module spectrochempy)": [[300, "spectrochempy.whittaker", false]], "whittaker() (nddataset method)": [[109, "spectrochempy.NDDataset.whittaker", false]], "write() (in module spectrochempy)": [[301, "spectrochempy.write", false]], "write() (nddataset method)": [[109, "spectrochempy.NDDataset.write", false]], "write_csv() (in module spectrochempy)": [[302, "spectrochempy.write_csv", false]], "write_csv() (nddataset method)": [[109, "spectrochempy.NDDataset.write_csv", false]], "write_excel() (in module spectrochempy)": [[303, "spectrochempy.write_excel", false]], "write_excel() (nddataset method)": [[109, "spectrochempy.NDDataset.write_excel", false]], "write_jcamp() (in module spectrochempy)": [[304, "spectrochempy.write_jcamp", false]], "write_jcamp() (nddataset method)": [[109, "spectrochempy.NDDataset.write_jcamp", false]], "write_mat() (in module spectrochempy)": [[305, "spectrochempy.write_mat", false]], "write_mat() (nddataset method)": [[109, "spectrochempy.NDDataset.write_mat", false]], "write_matlab() (in module spectrochempy)": [[306, "spectrochempy.write_matlab", false]], "write_matlab() (nddataset method)": [[109, "spectrochempy.NDDataset.write_matlab", false]], "write_xls() (in module spectrochempy)": [[307, "spectrochempy.write_xls", false]], "write_xls() (nddataset method)": [[109, "spectrochempy.NDDataset.write_xls", false]], "x (baseline attribute)": [[95, "spectrochempy.Baseline.X", false]], "x (efa attribute)": [[99, "spectrochempy.EFA.X", false]], "x (fastica attribute)": [[100, "spectrochempy.FastICA.X", false]], "x (iris attribute)": [[105, "spectrochempy.IRIS.X", false]], "x (lstsq attribute)": [[107, "spectrochempy.LSTSQ.X", false]], "x (mcrals attribute)": [[108, "spectrochempy.MCRALS.X", false]], "x (nmf attribute)": [[112, "spectrochempy.NMF.X", false]], "x (nnls attribute)": [[113, "spectrochempy.NNLS.X", false]], "x (optimize attribute)": [[114, "spectrochempy.Optimize.X", false]], "x (pca attribute)": [[115, "spectrochempy.PCA.X", false]], "x (plsregression attribute)": [[117, "spectrochempy.PLSRegression.X", false]], "x (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.X", false]], "x (svd attribute)": [[123, "spectrochempy.SVD.X", false]], "y (efa attribute)": [[99, "spectrochempy.EFA.Y", false]], "y (fastica attribute)": [[100, "spectrochempy.FastICA.Y", false]], "y (iris attribute)": [[105, "spectrochempy.IRIS.Y", false]], "y (lstsq attribute)": [[107, "spectrochempy.LSTSQ.Y", false]], "y (mcrals attribute)": [[108, "spectrochempy.MCRALS.Y", false]], "y (nmf attribute)": [[112, "spectrochempy.NMF.Y", false]], "y (nnls attribute)": [[113, "spectrochempy.NNLS.Y", false]], "y (optimize attribute)": [[114, "spectrochempy.Optimize.Y", false]], "y (pca attribute)": [[115, "spectrochempy.PCA.Y", false]], "y (plsregression attribute)": [[117, "spectrochempy.PLSRegression.Y", false]], "y (simplisma attribute)": [[122, "spectrochempy.SIMPLISMA.Y", false]], "y (svd attribute)": [[123, "spectrochempy.SVD.Y", false]], "zeros() (in module spectrochempy)": [[308, "spectrochempy.zeros", false]], "zeros() (nddataset method)": [[109, "spectrochempy.NDDataset.zeros", false]], "zeros_like() (in module spectrochempy)": [[309, "spectrochempy.zeros_like", false]], "zeros_like() (nddataset method)": [[109, "spectrochempy.NDDataset.zeros_like", false]], "zf() (in module spectrochempy)": [[310, "spectrochempy.zf", false]], "zf() (nddataset method)": [[109, "spectrochempy.NDDataset.zf", false]], "zf_auto() (in module spectrochempy)": [[311, "spectrochempy.zf_auto", false]], "zf_auto() (nddataset method)": [[109, "spectrochempy.NDDataset.zf_auto", false]], "zf_double() (in module spectrochempy)": [[312, "spectrochempy.zf_double", false]], "zf_double() (nddataset method)": [[109, "spectrochempy.NDDataset.zf_double", false]], "zf_size() (in module spectrochempy)": [[313, "spectrochempy.zf_size", false]], "zf_size() (nddataset method)": [[109, "spectrochempy.NDDataset.zf_size", false]]}, "objects": {"spectrochempy": [[94, 0, 1, "", "ActionMassKinetics"], [95, 0, 1, "", "Baseline"], [96, 0, 1, "", "BaselineCorrector"], [97, 0, 1, "", "Coord"], [98, 0, 1, "", "CoordSet"], [99, 0, 1, "", "EFA"], [100, 0, 1, "", "FastICA"], [101, 0, 1, "", "FileSelector"], [102, 0, 1, "", "Filter"], [103, 3, 1, "", "II"], [104, 3, 1, "", "IR"], [105, 0, 1, "", "IRIS"], [106, 0, 1, "", "IrisKernel"], [107, 0, 1, "", "LSTSQ"], [108, 0, 1, "", "MCRALS"], [109, 0, 1, "", "NDDataset"], [112, 0, 1, "", "NMF"], [113, 0, 1, "", "NNLS"], [114, 0, 1, "", "Optimize"], [115, 0, 1, "", "PCA"], [116, 0, 1, "", "PFR"], [117, 0, 1, "", "PLSRegression"], [118, 0, 1, "", "Project"], [119, 0, 1, "", "Quantity"], [120, 3, 1, "", "RI"], [121, 3, 1, "", "RR"], [122, 0, 1, "", "SIMPLISMA"], [123, 0, 1, "", "SVD"], [124, 0, 1, "", "Script"], [125, 0, 1, "", "Unit"], [126, 4, 1, "", "abs"], [127, 4, 1, "", "absolute"], [128, 4, 1, "", "align"], [129, 4, 1, "", "all"], [130, 4, 1, "", "amax"], [131, 4, 1, "", "amin"], [132, 4, 1, "", "any"], [133, 4, 1, "", "arange"], [134, 4, 1, "", "argmax"], [135, 4, 1, "", "argmin"], [136, 4, 1, "", "around"], [137, 4, 1, "", "asls"], [138, 0, 1, "", "asymmetricvoigtmodel"], [139, 4, 1, "", "autosub"], [140, 4, 1, "", "average"], [141, 4, 1, "", "bartlett"], [142, 4, 1, "", "basc"], [143, 4, 1, "", "blackmanharris"], [144, 4, 1, "", "clip"], [145, 4, 1, "", "component"], [146, 4, 1, "", "concatenate"], [147, 4, 1, "", "conj"], [148, 4, 1, "", "conjugate"], [149, 4, 1, "", "coordmax"], [150, 4, 1, "", "coordmin"], [151, 4, 1, "", "copy"], [152, 4, 1, "", "cs"], [153, 4, 1, "", "cumsum"], [154, 4, 1, "", "dc"], [155, 4, 1, "", "debug_"], [156, 4, 1, "", "denoise"], [157, 4, 1, "", "despike"], [158, 4, 1, "", "detrend"], [159, 4, 1, "", "diag"], [160, 4, 1, "", "diagonal"], [161, 4, 1, "", "dot"], [162, 4, 1, "", "download_nist_ir"], [163, 4, 1, "", "em"], [164, 4, 1, "", "empty"], [165, 4, 1, "", "empty_like"], [166, 4, 1, "", "error_"], [167, 4, 1, "", "eye"], [168, 4, 1, "", "fft"], [169, 4, 1, "", "find_peaks"], [170, 4, 1, "", "fromfunction"], [171, 4, 1, "", "fromiter"], [172, 4, 1, "", "fsh"], [173, 4, 1, "", "fsh2"], [174, 4, 1, "", "full"], [175, 4, 1, "", "full_like"], [176, 0, 1, "", "gaussianmodel"], [177, 4, 1, "", "general_hamming"], [178, 4, 1, "", "geomspace"], [179, 4, 1, "", "get_baseline"], [180, 4, 1, "", "get_loglevel"], [181, 4, 1, "", "gm"], [182, 4, 1, "", "hamming"], [183, 4, 1, "", "hann"], [184, 4, 1, "", "ht"], [185, 4, 1, "", "identity"], [186, 4, 1, "", "ifft"], [187, 3, 1, "", "imag"], [188, 4, 1, "", "info_"], [189, 4, 1, "", "interpolate"], [190, 4, 1, "", "is_units_compatible"], [191, 4, 1, "", "ito"], [192, 4, 1, "", "ito_base_units"], [193, 4, 1, "", "ito_reduced_units"], [194, 4, 1, "", "linspace"], [195, 4, 1, "", "load"], [196, 4, 1, "", "load_iris"], [197, 4, 1, "", "logspace"], [198, 0, 1, "", "lorentzianmodel"], [199, 4, 1, "", "ls"], [200, 4, 1, "", "max"], [201, 4, 1, "", "mc"], [202, 4, 1, "", "mean"], [203, 4, 1, "", "min"], [204, 4, 1, "", "multiplot"], [205, 4, 1, "", "multiplot_image"], [206, 4, 1, "", "multiplot_lines"], [207, 4, 1, "", "multiplot_map"], [208, 4, 1, "", "multiplot_scatter"], [209, 4, 1, "", "multiplot_stack"], [210, 4, 1, "", "multiplot_with_transposed"], [211, 4, 1, "", "ones"], [212, 4, 1, "", "ones_like"], [213, 4, 1, "", "pathclean"], [214, 4, 1, "", "pipe"], [215, 4, 1, "", "pk"], [216, 4, 1, "", "pk_exp"], [217, 4, 1, "", "plot"], [218, 4, 1, "", "plot_1D"], [219, 4, 1, "", "plot_2D"], [220, 4, 1, "", "plot_3D"], [221, 4, 1, "", "plot_bar"], [222, 4, 1, "", "plot_image"], [223, 4, 1, "", "plot_map"], [224, 4, 1, "", "plot_multiple"], [225, 4, 1, "", "plot_pen"], [226, 4, 1, "", "plot_scatter"], [227, 4, 1, "", "plot_scatter_pen"], [228, 4, 1, "", "plot_stack"], [229, 4, 1, "", "plot_surface"], [230, 4, 1, "", "plot_waterfall"], [231, 4, 1, "", "plot_with_transposed"], [232, 0, 1, "", "polynomialbaseline"], [233, 4, 1, "", "ps"], [234, 4, 1, "", "ptp"], [235, 4, 1, "", "qsin"], [236, 4, 1, "", "random"], [237, 4, 1, "", "read"], [238, 4, 1, "", "read_carroucell"], [239, 4, 1, "", "read_csv"], [240, 4, 1, "", "read_ddr"], [241, 4, 1, "", "read_dir"], [242, 4, 1, "", "read_hdr"], [243, 4, 1, "", "read_jcamp"], [244, 4, 1, "", "read_labspec"], [245, 4, 1, "", "read_mat"], [246, 4, 1, "", "read_matlab"], [247, 4, 1, "", "read_omnic"], [248, 4, 1, "", "read_opus"], [249, 4, 1, "", "read_quadera"], [250, 4, 1, "", "read_sdr"], [251, 4, 1, "", "read_soc"], [252, 4, 1, "", "read_spa"], [253, 4, 1, "", "read_spc"], [254, 4, 1, "", "read_spg"], [255, 4, 1, "", "read_srs"], [256, 4, 1, "", "read_topspin"], [257, 4, 1, "", "read_wdf"], [258, 4, 1, "", "read_wire"], [259, 4, 1, "", "read_zip"], [260, 3, 1, "", "real"], [261, 4, 1, "", "remove_masks"], [262, 4, 1, "", "roll"], [263, 4, 1, "", "round"], [264, 4, 1, "", "rs"], [265, 4, 1, "", "run_all_scripts"], [266, 4, 1, "", "run_script"], [267, 4, 1, "", "savgol"], [268, 4, 1, "", "set_complex"], [269, 4, 1, "", "set_hypercomplex"], [270, 4, 1, "", "set_loglevel"], [271, 4, 1, "", "set_nmr_context"], [272, 4, 1, "", "set_quaternion"], [273, 4, 1, "", "show"], [274, 4, 1, "", "show_versions"], [275, 0, 1, "", "sigmoidmodel"], [276, 4, 1, "", "simpson"], [277, 4, 1, "", "sine"], [278, 4, 1, "", "sinm"], [279, 4, 1, "", "smooth"], [280, 4, 1, "", "snip"], [281, 4, 1, "", "sort"], [282, 4, 1, "", "sp"], [283, 4, 1, "", "squeeze"], [284, 4, 1, "", "stack"], [285, 4, 1, "", "std"], [286, 4, 1, "", "sum"], [287, 4, 1, "", "swapdims"], [288, 4, 1, "", "take"], [289, 4, 1, "", "to"], [290, 4, 1, "", "to_array"], [291, 4, 1, "", "to_base_units"], [292, 4, 1, "", "to_reduced_units"], [293, 4, 1, "", "to_xarray"], [294, 4, 1, "", "transpose"], [295, 4, 1, "", "trapezoid"], [296, 4, 1, "", "triang"], [297, 4, 1, "", "var"], [298, 0, 1, "", "voigtmodel"], [299, 4, 1, "", "warning_"], [300, 4, 1, "", "whittaker"], [301, 4, 1, "", "write"], [302, 4, 1, "", "write_csv"], [303, 4, 1, "", "write_excel"], [304, 4, 1, "", "write_jcamp"], [305, 4, 1, "", "write_mat"], [306, 4, 1, "", "write_matlab"], [307, 4, 1, "", "write_xls"], [308, 4, 1, "", "zeros"], [309, 4, 1, "", "zeros_like"], [310, 4, 1, "", "zf"], [311, 4, 1, "", "zf_auto"], [312, 4, 1, "", "zf_double"], [313, 4, 1, "", "zf_size"]], "spectrochempy.ActionMassKinetics": [[94, 1, 1, "", "A"], [94, 1, 1, "", "B"], [94, 2, 1, "", "fit_to_concentrations"], [94, 1, 1, "", "init_concentrations"], [94, 2, 1, "", "integrate"], [94, 1, 1, "", "n_reactions"], [94, 1, 1, "", "n_species"], [94, 1, 1, "", "species"]], "spectrochempy.Baseline": [[95, 1, 1, "", "X"], [95, 1, 1, "", "asymmetry"], [95, 1, 1, "", "baseline"], [95, 1, 1, "", "breakpoints"], [95, 1, 1, "", "config"], [95, 1, 1, "", "corrected"], [95, 2, 1, "", "fit"], [95, 1, 1, "", "include_limits"], [95, 1, 1, "", "lamb"], [95, 1, 1, "", "lls"], [95, 1, 1, "", "log"], [95, 1, 1, "", "max_iter"], [95, 1, 1, "", "model"], [95, 1, 1, "", "multivariate"], [95, 1, 1, "", "n_components"], [95, 1, 1, "", "name"], [95, 1, 1, "", "order"], [95, 2, 1, "", "parameters"], [95, 2, 1, "", "params"], [95, 2, 1, "", "plot"], [95, 1, 1, "", "ranges"], [95, 2, 1, "", "reset"], [95, 1, 1, "", "snip_width"], [95, 2, 1, "", "to_dict"], [95, 1, 1, "", "tol"], [95, 2, 1, "", "transform"], [95, 1, 1, "", "used_ranges"]], "spectrochempy.BaselineCorrector": [[96, 1, 1, "", "baseline"], [96, 1, 1, "", "corrected"], [96, 1, 1, "", "original"]], "spectrochempy.Coord": [[97, 2, 1, "", "amax"], [97, 2, 1, "", "amin"], [97, 2, 1, "", "arange"], [97, 2, 1, "", "around"], [97, 2, 1, "", "astype"], [97, 2, 1, "", "copy"], [97, 1, 1, "", "data"], [97, 1, 1, "", "dimensionless"], [97, 1, 1, "", "dtype"], [97, 1, 1, "", "filename"], [97, 2, 1, "", "fromfunction"], [97, 2, 1, "", "fromiter"], [97, 2, 1, "", "geomspace"], [97, 2, 1, "", "get_labels"], [97, 1, 1, "", "has_data"], [97, 1, 1, "", "has_defined_name"], [97, 1, 1, "", "has_units"], [97, 1, 1, "", "id"], [97, 1, 1, "", "is_empty"], [97, 1, 1, "", "is_float"], [97, 1, 1, "", "is_integer"], [97, 1, 1, "", "is_labeled"], [97, 2, 1, "", "is_units_compatible"], [97, 2, 1, "", "ito"], [97, 2, 1, "", "ito_base_units"], [97, 2, 1, "", "ito_reduced_units"], [97, 1, 1, "", "labels"], [97, 1, 1, "", "larmor"], [97, 1, 1, "", "laser_frequency"], [97, 1, 1, "", "limits"], [97, 1, 1, "", "linear"], [97, 2, 1, "", "linearize"], [97, 2, 1, "", "linspace"], [97, 2, 1, "", "loc2index"], [97, 2, 1, "", "logspace"], [97, 1, 1, "", "m"], [97, 1, 1, "", "magnitude"], [97, 2, 1, "", "max"], [97, 1, 1, "", "meta"], [97, 2, 1, "", "min"], [97, 1, 1, "", "name"], [97, 2, 1, "", "ptp"], [97, 1, 1, "", "reversed"], [97, 1, 1, "", "roi"], [97, 2, 1, "", "round"], [97, 2, 1, "", "round_"], [97, 2, 1, "", "set_laser_frequency"], [97, 1, 1, "", "shape"], [97, 1, 1, "", "show_datapoints"], [97, 1, 1, "", "sigdigits"], [97, 1, 1, "", "size"], [97, 1, 1, "", "spacing"], [97, 1, 1, "", "title"], [97, 2, 1, "", "to"], [97, 2, 1, "", "to_base_units"], [97, 2, 1, "", "to_reduced_units"], [97, 1, 1, "", "umasked_data"], [97, 1, 1, "", "unitless"], [97, 1, 1, "", "units"], [97, 1, 1, "", "value"], [97, 1, 1, "", "values"]], "spectrochempy.CoordSet": [[98, 1, 1, "", "available_names"], [98, 1, 1, "", "coords"], [98, 2, 1, "", "copy"], [98, 1, 1, "", "default"], [98, 1, 1, "", "has_defined_name"], [98, 1, 1, "", "id"], [98, 1, 1, "", "is_empty"], [98, 1, 1, "", "is_labeled"], [98, 1, 1, "", "is_same_dim"], [98, 2, 1, "", "keys"], [98, 1, 1, "", "labels"], [98, 1, 1, "", "names"], [98, 2, 1, "", "select"], [98, 2, 1, "", "set"], [98, 2, 1, "", "set_titles"], [98, 2, 1, "", "set_units"], [98, 1, 1, "", "size"], [98, 1, 1, "", "sizes"], [98, 1, 1, "", "titles"], [98, 2, 1, "", "to_dict"], [98, 1, 1, "", "units"], [98, 2, 1, "", "update"]], "spectrochempy.EFA": [[99, 1, 1, "", "X"], [99, 1, 1, "", "Y"], [99, 1, 1, "", "b_ev"], [99, 1, 1, "", "components"], [99, 1, 1, "", "config"], [99, 1, 1, "", "cutoff"], [99, 1, 1, "", "f_ev"], [99, 2, 1, "", "fit"], [99, 2, 1, "", "fit_transform"], [99, 2, 1, "", "get_components"], [99, 2, 1, "", "inverse_transform"], [99, 1, 1, "", "log"], [99, 1, 1, "", "n_components"], [99, 1, 1, "", "name"], [99, 2, 1, "", "parameters"], [99, 2, 1, "", "params"], [99, 2, 1, "", "plotmerit"], [99, 2, 1, "", "reconstruct"], [99, 2, 1, "", "reduce"], [99, 2, 1, "", "reset"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "transform"]], "spectrochempy.FastICA": [[100, 1, 1, "", "A"], [100, 1, 1, "", "St"], [100, 1, 1, "", "X"], [100, 1, 1, "", "Y"], [100, 1, 1, "", "algorithm"], [100, 1, 1, "", "components"], [100, 1, 1, "", "config"], [100, 2, 1, "", "fit"], [100, 2, 1, "", "fit_transform"], [100, 1, 1, "", "fun"], [100, 1, 1, "", "fun_args"], [100, 2, 1, "", "get_components"], [100, 2, 1, "", "inverse_transform"], [100, 1, 1, "", "log"], [100, 1, 1, "", "max_iter"], [100, 1, 1, "", "mean"], [100, 1, 1, "", "mixing"], [100, 1, 1, "", "n_components"], [100, 1, 1, "", "n_iter"], [100, 1, 1, "", "name"], [100, 2, 1, "", "parameters"], [100, 2, 1, "", "params"], [100, 2, 1, "", "plotmerit"], [100, 1, 1, "", "random_state"], [100, 2, 1, "", "reconstruct"], [100, 2, 1, "", "reduce"], [100, 2, 1, "", "reset"], [100, 2, 1, "", "to_dict"], [100, 1, 1, "", "tol"], [100, 2, 1, "", "transform"], [100, 1, 1, "", "w_init"], [100, 1, 1, "", "whiten"], [100, 1, 1, "", "whiten_solver"], [100, 1, 1, "", "whitening"]], "spectrochempy.Filter": [[102, 1, 1, "", "config"], [102, 1, 1, "", "cval"], [102, 1, 1, "", "delta"], [102, 1, 1, "", "deriv"], [102, 1, 1, "", "lamb"], [102, 1, 1, "", "log"], [102, 1, 1, "", "method"], [102, 1, 1, "", "mode"], [102, 1, 1, "", "name"], [102, 1, 1, "", "order"], [102, 2, 1, "", "parameters"], [102, 2, 1, "", "params"], [102, 2, 1, "", "reset"], [102, 1, 1, "", "size"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "transform"]], "spectrochempy.IRIS": [[105, 1, 1, "", "X"], [105, 1, 1, "", "Y"], [105, 1, 1, "", "components"], [105, 1, 1, "", "config"], [105, 2, 1, "", "fit"], [105, 2, 1, "", "fit_transform"], [105, 2, 1, "", "get_components"], [105, 2, 1, "", "inverse_transform"], [105, 1, 1, "", "log"], [105, 1, 1, "", "n_components"], [105, 1, 1, "", "name"], [105, 2, 1, "", "parameters"], [105, 2, 1, "", "params"], [105, 2, 1, "", "plotdistribution"], [105, 2, 1, "", "plotlcurve"], [105, 2, 1, "", "plotmerit"], [105, 1, 1, "", "qpsolver"], [105, 2, 1, "", "reconstruct"], [105, 2, 1, "", "reduce"], [105, 1, 1, "", "reg_par"], [105, 2, 1, "", "reset"], [105, 2, 1, "", "to_dict"], [105, 2, 1, "", "transform"]], "spectrochempy.LSTSQ": [[107, 1, 1, "", "X"], [107, 1, 1, "", "Y"], [107, 1, 1, "", "coef"], [107, 1, 1, "", "config"], [107, 1, 1, "", "description"], [107, 2, 1, "", "fit"], [107, 1, 1, "", "fit_intercept"], [107, 1, 1, "", "intercept"], [107, 1, 1, "", "log"], [107, 1, 1, "", "name"], [107, 2, 1, "", "parameters"], [107, 2, 1, "", "params"], [107, 1, 1, "", "positive"], [107, 2, 1, "", "predict"], [107, 2, 1, "", "reset"], [107, 2, 1, "", "score"], [107, 2, 1, "", "to_dict"]], "spectrochempy.MCRALS": [[108, 1, 1, "", "C"], [108, 1, 1, "", "C_constrained"], [108, 1, 1, "", "C_constrained_list"], [108, 1, 1, "", "C_ls_list"], [108, 1, 1, "", "S_soft"], [108, 1, 1, "", "St"], [108, 1, 1, "", "St_constrained_list"], [108, 1, 1, "", "St_ls"], [108, 1, 1, "", "St_ls_list"], [108, 1, 1, "", "St_unconstrained"], [108, 1, 1, "", "X"], [108, 1, 1, "", "Y"], [108, 1, 1, "", "argsGetConc"], [108, 1, 1, "", "argsGetSpec"], [108, 1, 1, "", "closureConc"], [108, 1, 1, "", "closureMethod"], [108, 1, 1, "", "closureTarget"], [108, 1, 1, "", "components"], [108, 1, 1, "", "config"], [108, 1, 1, "", "extraOutputGetConc"], [108, 1, 1, "", "extraOutputGetSpec"], [108, 2, 1, "", "fit"], [108, 2, 1, "", "fit_transform"], [108, 1, 1, "", "getC_to_C_idx"], [108, 1, 1, "", "getConc"], [108, 1, 1, "", "getSpec"], [108, 1, 1, "", "getSt_to_St_idx"], [108, 2, 1, "", "get_components"], [108, 1, 1, "", "hardConc"], [108, 1, 1, "", "hardSpec"], [108, 2, 1, "", "inverse_transform"], [108, 1, 1, "", "kwargsGetConc"], [108, 1, 1, "", "kwargsGetSpec"], [108, 1, 1, "", "log"], [108, 1, 1, "", "max_iter"], [108, 1, 1, "", "maxdiv"], [108, 1, 1, "", "monoDecConc"], [108, 1, 1, "", "monoDecTol"], [108, 1, 1, "", "monoIncConc"], [108, 1, 1, "", "monoIncTol"], [108, 1, 1, "", "n_components"], [108, 1, 1, "", "name"], [108, 1, 1, "", "nonnegConc"], [108, 1, 1, "", "nonnegSpec"], [108, 1, 1, "", "normSpec"], [108, 2, 1, "", "parameters"], [108, 2, 1, "", "params"], [108, 2, 1, "", "plotmerit"], [108, 2, 1, "", "reconstruct"], [108, 2, 1, "", "reduce"], [108, 2, 1, "", "reset"], [108, 1, 1, "", "solverConc"], [108, 1, 1, "", "solverSpec"], [108, 1, 1, "", "storeIterations"], [108, 2, 1, "", "to_dict"], [108, 1, 1, "", "tol"], [108, 2, 1, "", "transform"], [108, 1, 1, "", "unimodConc"], [108, 1, 1, "", "unimodConcMod"], [108, 1, 1, "", "unimodConcTol"], [108, 1, 1, "", "unimodSpec"], [108, 1, 1, "", "unimodSpecMod"], [108, 1, 1, "", "unimodSpecTol"]], "spectrochempy.NDDataset": [[109, 1, 1, "", "II"], [109, 1, 1, "", "IR"], [109, 1, 1, "", "RI"], [109, 1, 1, "", "RR"], [109, 1, 1, "", "T"], [109, 2, 1, "", "abs"], [109, 2, 1, "", "absolute"], [109, 1, 1, "", "acquisition_date"], [109, 2, 1, "", "add_coordset"], [109, 2, 1, "", "align"], [109, 2, 1, "", "all"], [109, 2, 1, "", "amax"], [109, 2, 1, "", "amin"], [109, 2, 1, "", "any"], [109, 2, 1, "", "arange"], [109, 2, 1, "", "argmax"], [109, 2, 1, "", "argmin"], [109, 2, 1, "", "around"], [109, 2, 1, "", "asfortranarray"], [109, 2, 1, "", "asls"], [109, 2, 1, "", "astype"], [109, 2, 1, "", "atleast_2d"], [109, 1, 1, "", "author"], [109, 2, 1, "", "autosub"], [109, 2, 1, "", "average"], [109, 1, 1, "", "ax"], [109, 1, 1, "", "axT"], [109, 1, 1, "", "axec"], [109, 1, 1, "", "axecT"], [109, 1, 1, "", "axex"], [109, 1, 1, "", "axey"], [109, 2, 1, "", "bartlett"], [109, 2, 1, "", "basc"], [109, 2, 1, "", "blackmanharris"], [109, 2, 1, "", "clip"], [109, 2, 1, "", "close_figure"], [109, 1, 1, "", "comment"], [109, 2, 1, "", "component"], [109, 2, 1, "", "concatenate"], [109, 2, 1, "", "conj"], [109, 2, 1, "", "conjugate"], [109, 2, 1, "", "coord"], [109, 2, 1, "", "coordmax"], [109, 2, 1, "", "coordmin"], [109, 1, 1, "", "coordnames"], [109, 1, 1, "", "coordset"], [109, 1, 1, "", "coordtitles"], [109, 1, 1, "", "coordunits"], [109, 2, 1, "", "copy"], [109, 1, 1, "", "created"], [109, 2, 1, "", "cs"], [109, 2, 1, "", "cumsum"], [109, 1, 1, "", "data"], [109, 2, 1, "", "dc"], [109, 2, 1, "", "delete_coordset"], [109, 2, 1, "", "denoise"], [109, 1, 1, "", "description"], [109, 2, 1, "", "despike"], [109, 2, 1, "", "detrend"], [109, 2, 1, "", "diag"], [109, 2, 1, "", "diagonal"], [109, 1, 1, "", "dimensionless"], [109, 1, 1, "", "dims"], [109, 1, 1, "", "directory"], [109, 1, 1, "", "divider"], [109, 2, 1, "", "dot"], [109, 2, 1, "", "download_nist_ir"], [109, 1, 1, "", "dtype"], [109, 2, 1, "", "dump"], [109, 2, 1, "", "em"], [109, 2, 1, "", "empty"], [109, 2, 1, "", "empty_like"], [109, 2, 1, "", "eye"], [109, 2, 1, "", "fft"], [109, 1, 1, "", "fig"], [109, 1, 1, "", "fignum"], [109, 1, 1, "", "filename"], [109, 1, 1, "", "filetype"], [109, 2, 1, "", "find_peaks"], [109, 2, 1, "", "fromfunction"], [109, 2, 1, "", "fromiter"], [109, 2, 1, "", "fsh"], [109, 2, 1, "", "fsh2"], [109, 2, 1, "", "full"], [109, 2, 1, "", "full_like"], [109, 2, 1, "", "general_hamming"], [109, 2, 1, "", "geomspace"], [109, 2, 1, "", "get_axis"], [109, 2, 1, "", "get_baseline"], [109, 2, 1, "", "get_labels"], [109, 2, 1, "", "gm"], [109, 2, 1, "", "hamming"], [109, 2, 1, "", "hann"], [109, 1, 1, "", "has_complex_dims"], [109, 1, 1, "", "has_data"], [109, 1, 1, "", "has_defined_name"], [109, 1, 1, "", "has_units"], [109, 1, 1, "", "history"], [109, 2, 1, "", "ht"], [109, 1, 1, "", "id"], [109, 2, 1, "", "identity"], [109, 2, 1, "", "ifft"], [109, 1, 1, "", "imag"], [109, 1, 1, "", "is_1d"], [109, 1, 1, "", "is_complex"], [109, 1, 1, "", "is_empty"], [109, 1, 1, "", "is_float"], [109, 1, 1, "", "is_integer"], [109, 1, 1, "", "is_interleaved"], [109, 1, 1, "", "is_labeled"], [109, 1, 1, "", "is_masked"], [109, 1, 1, "", "is_quaternion"], [109, 2, 1, "", "is_units_compatible"], [109, 2, 1, "", "ito"], [109, 2, 1, "", "ito_base_units"], [109, 2, 1, "", "ito_reduced_units"], [109, 1, 1, "", "labels"], [109, 1, 1, "", "limits"], [109, 2, 1, "", "linspace"], [109, 2, 1, "", "load"], [109, 2, 1, "", "load_iris"], [109, 2, 1, "", "loads"], [109, 1, 1, "", "local_timezone"], [109, 2, 1, "", "logspace"], [109, 2, 1, "", "ls"], [109, 1, 1, "", "m"], [109, 1, 1, "", "magnitude"], [109, 1, 1, "", "mask"], [109, 1, 1, "", "masked_data"], [109, 2, 1, "", "max"], [109, 2, 1, "", "mc"], [109, 2, 1, "", "mean"], [109, 1, 1, "", "meta"], [109, 2, 1, "", "min"], [109, 1, 1, "", "modeldata"], [109, 1, 1, "", "modified"], [109, 1, 1, "", "name"], [109, 1, 1, "", "ndaxes"], [109, 1, 1, "", "ndim"], [109, 2, 1, "", "ones"], [109, 2, 1, "", "ones_like"], [109, 1, 1, "", "origin"], [109, 1, 1, "", "parent"], [109, 2, 1, "", "pipe"], [109, 2, 1, "", "pk"], [109, 2, 1, "", "pk_exp"], [109, 2, 1, "", "plot"], [109, 2, 1, "", "plot_1D"], [109, 2, 1, "", "plot_2D"], [109, 2, 1, "", "plot_3D"], [109, 2, 1, "", "plot_bar"], [109, 2, 1, "", "plot_image"], [109, 2, 1, "", "plot_map"], [109, 2, 1, "", "plot_multiple"], [109, 2, 1, "", "plot_pen"], [109, 2, 1, "", "plot_scatter"], [109, 2, 1, "", "plot_scatter_pen"], [109, 2, 1, "", "plot_stack"], [109, 2, 1, "", "plot_surface"], [109, 2, 1, "", "plot_waterfall"], [109, 1, 1, "", "preferences"], [109, 2, 1, "", "ps"], [109, 2, 1, "", "ptp"], [109, 2, 1, "", "qsin"], [109, 2, 1, "", "random"], [109, 2, 1, "", "read"], [109, 2, 1, "", "read_carroucell"], [109, 2, 1, "", "read_csv"], [109, 2, 1, "", "read_ddr"], [109, 2, 1, "", "read_dir"], [109, 2, 1, "", "read_hdr"], [109, 2, 1, "", "read_jcamp"], [109, 2, 1, "", "read_labspec"], [109, 2, 1, "", "read_mat"], [109, 2, 1, "", "read_matlab"], [109, 2, 1, "", "read_omnic"], [109, 2, 1, "", "read_opus"], [109, 2, 1, "", "read_quadera"], [109, 2, 1, "", "read_sdr"], [109, 2, 1, "", "read_soc"], [109, 2, 1, "", "read_spa"], [109, 2, 1, "", "read_spc"], [109, 2, 1, "", "read_spg"], [109, 2, 1, "", "read_srs"], [109, 2, 1, "", "read_topspin"], [109, 2, 1, "", "read_wdf"], [109, 2, 1, "", "read_wire"], [109, 2, 1, "", "read_zip"], [109, 1, 1, "", "real"], [109, 2, 1, "", "remove_masks"], [109, 1, 1, "", "roi"], [109, 2, 1, "", "roll"], [109, 2, 1, "", "round"], [109, 2, 1, "", "round_"], [109, 2, 1, "", "rs"], [109, 2, 1, "", "rubberband"], [109, 2, 1, "", "save"], [109, 2, 1, "", "save_as"], [109, 2, 1, "", "savgol"], [109, 2, 1, "", "savgol_filter"], [109, 2, 1, "", "set_complex"], [109, 2, 1, "", "set_coordset"], [109, 2, 1, "", "set_coordtitles"], [109, 2, 1, "", "set_coordunits"], [109, 2, 1, "", "set_hypercomplex"], [109, 2, 1, "", "set_quaternion"], [109, 1, 1, "", "shape"], [109, 2, 1, "", "simps"], [109, 2, 1, "", "simpson"], [109, 2, 1, "", "sine"], [109, 2, 1, "", "sinm"], [109, 1, 1, "", "size"], [109, 2, 1, "", "smooth"], [109, 2, 1, "", "snip"], [109, 2, 1, "", "sort"], [109, 2, 1, "", "sp"], [109, 2, 1, "", "squeeze"], [109, 2, 1, "", "stack"], [109, 2, 1, "", "std"], [109, 1, 1, "", "suffix"], [109, 2, 1, "", "sum"], [109, 2, 1, "", "swapaxes"], [109, 2, 1, "", "swapdims"], [109, 2, 1, "", "take"], [109, 1, 1, "", "timezone"], [109, 1, 1, "", "title"], [109, 2, 1, "", "to"], [109, 2, 1, "", "to_array"], [109, 2, 1, "", "to_base_units"], [109, 2, 1, "", "to_reduced_units"], [109, 2, 1, "", "to_xarray"], [109, 2, 1, "", "transpose"], [109, 2, 1, "", "trapezoid"], [109, 2, 1, "", "trapz"], [109, 2, 1, "", "triang"], [109, 1, 1, "", "umasked_data"], [109, 1, 1, "", "unitless"], [109, 1, 1, "", "units"], [109, 1, 1, "", "value"], [109, 1, 1, "", "values"], [109, 2, 1, "", "var"], [109, 2, 1, "", "whittaker"], [109, 2, 1, "", "write"], [109, 2, 1, "", "write_csv"], [109, 2, 1, "", "write_excel"], [109, 2, 1, "", "write_jcamp"], [109, 2, 1, "", "write_mat"], [109, 2, 1, "", "write_matlab"], [109, 2, 1, "", "write_xls"], [109, 2, 1, "", "zeros"], [109, 2, 1, "", "zeros_like"], [109, 2, 1, "", "zf"], [109, 2, 1, "", "zf_auto"], [109, 2, 1, "", "zf_double"], [109, 2, 1, "", "zf_size"]], "spectrochempy.NMF": [[112, 1, 1, "", "X"], [112, 1, 1, "", "Y"], [112, 1, 1, "", "alpha_H"], [112, 1, 1, "", "alpha_W"], [112, 1, 1, "", "beta_loss"], [112, 1, 1, "", "components"], [112, 1, 1, "", "config"], [112, 2, 1, "", "fit"], [112, 2, 1, "", "fit_transform"], [112, 2, 1, "", "get_components"], [112, 1, 1, "", "init"], [112, 2, 1, "", "inverse_transform"], [112, 1, 1, "", "l1_ratio"], [112, 1, 1, "", "log"], [112, 1, 1, "", "max_iter"], [112, 1, 1, "", "n_components"], [112, 1, 1, "", "name"], [112, 2, 1, "", "parameters"], [112, 2, 1, "", "params"], [112, 2, 1, "", "plotmerit"], [112, 1, 1, "", "random_state"], [112, 2, 1, "", "reconstruct"], [112, 2, 1, "", "reduce"], [112, 2, 1, "", "reset"], [112, 1, 1, "", "shuffle"], [112, 1, 1, "", "solver"], [112, 2, 1, "", "to_dict"], [112, 1, 1, "", "tol"], [112, 2, 1, "", "transform"]], "spectrochempy.NNLS": [[113, 1, 1, "", "X"], [113, 1, 1, "", "Y"], [113, 1, 1, "", "coef"], [113, 1, 1, "", "config"], [113, 1, 1, "", "description"], [113, 2, 1, "", "fit"], [113, 1, 1, "", "fit_intercept"], [113, 1, 1, "", "intercept"], [113, 1, 1, "", "log"], [113, 1, 1, "", "name"], [113, 2, 1, "", "parameters"], [113, 2, 1, "", "params"], [113, 1, 1, "", "positive"], [113, 2, 1, "", "predict"], [113, 2, 1, "", "reset"], [113, 2, 1, "", "score"], [113, 2, 1, "", "to_dict"]], "spectrochempy.Optimize": [[114, 1, 1, "", "X"], [114, 1, 1, "", "Y"], [114, 1, 1, "", "amplitude_mode"], [114, 1, 1, "", "autoampl"], [114, 1, 1, "", "autobase"], [114, 1, 1, "", "callback_every"], [114, 1, 1, "", "components"], [114, 1, 1, "", "config"], [114, 1, 1, "", "constraints"], [114, 1, 1, "", "dry"], [114, 2, 1, "", "fit"], [114, 2, 1, "", "fit_transform"], [114, 1, 1, "", "fp"], [114, 2, 1, "", "get_components"], [114, 2, 1, "", "inverse_transform"], [114, 1, 1, "", "log"], [114, 1, 1, "", "max_fun_calls"], [114, 1, 1, "", "max_iter"], [114, 1, 1, "", "method"], [114, 1, 1, "", "modeldata"], [114, 1, 1, "", "n_components"], [114, 1, 1, "", "name"], [114, 2, 1, "", "parameters"], [114, 2, 1, "", "params"], [114, 2, 1, "", "plotmerit"], [114, 2, 1, "", "predict"], [114, 2, 1, "", "reconstruct"], [114, 2, 1, "", "reduce"], [114, 2, 1, "", "reset"], [114, 1, 1, "", "script"], [114, 2, 1, "", "to_dict"], [114, 2, 1, "", "transform"], [114, 1, 1, "", "usermodels"]], "spectrochempy.PCA": [[115, 1, 1, "", "X"], [115, 1, 1, "", "Y"], [115, 1, 1, "", "components"], [115, 1, 1, "", "config"], [115, 2, 1, "", "fit"], [115, 2, 1, "", "fit_transform"], [115, 2, 1, "", "get_components"], [115, 2, 1, "", "inverse_transform"], [115, 1, 1, "", "iterated_power"], [115, 1, 1, "", "loadings"], [115, 1, 1, "", "log"], [115, 1, 1, "", "n_components"], [115, 1, 1, "", "n_oversamples"], [115, 1, 1, "", "name"], [115, 2, 1, "", "parameters"], [115, 2, 1, "", "params"], [115, 2, 1, "", "plotmerit"], [115, 1, 1, "", "power_iteration_normalizer"], [115, 2, 1, "", "printev"], [115, 1, 1, "", "random_state"], [115, 2, 1, "", "reconstruct"], [115, 2, 1, "", "reduce"], [115, 2, 1, "", "reset"], [115, 1, 1, "", "scaled"], [115, 2, 1, "", "scoreplot"], [115, 1, 1, "", "scores"], [115, 2, 1, "", "screeplot"], [115, 1, 1, "", "standardized"], [115, 1, 1, "", "svd_solver"], [115, 2, 1, "", "to_dict"], [115, 1, 1, "", "tol"], [115, 2, 1, "", "transform"], [115, 1, 1, "", "whiten"]], "spectrochempy.PFR": [[116, 2, 1, "", "fit_to_gas_concentrations"]], "spectrochempy.PLSRegression": [[117, 1, 1, "", "X"], [117, 1, 1, "", "Y"], [117, 1, 1, "", "components"], [117, 1, 1, "", "config"], [117, 2, 1, "", "fit"], [117, 2, 1, "", "fit_transform"], [117, 2, 1, "", "get_components"], [117, 2, 1, "", "inverse_transform"], [117, 1, 1, "", "log"], [117, 1, 1, "", "max_iter"], [117, 1, 1, "", "n_components"], [117, 1, 1, "", "name"], [117, 2, 1, "", "parameters"], [117, 2, 1, "", "params"], [117, 2, 1, "", "parityplot"], [117, 2, 1, "", "plotmerit"], [117, 2, 1, "", "predict"], [117, 2, 1, "", "reconstruct"], [117, 2, 1, "", "reduce"], [117, 2, 1, "", "reset"], [117, 1, 1, "", "scale"], [117, 2, 1, "", "score"], [117, 2, 1, "", "to_dict"], [117, 1, 1, "", "tol"], [117, 2, 1, "", "transform"]], "spectrochempy.Project": [[118, 2, 1, "", "add_dataset"], [118, 2, 1, "", "add_datasets"], [118, 2, 1, "", "add_project"], [118, 2, 1, "", "add_projects"], [118, 2, 1, "", "add_script"], [118, 2, 1, "", "add_scripts"], [118, 1, 1, "", "allitems"], [118, 1, 1, "", "allnames"], [118, 2, 1, "", "copy"], [118, 1, 1, "", "datasets"], [118, 1, 1, "", "datasets_names"], [118, 2, 1, "", "dump"], [118, 1, 1, "", "filename"], [118, 1, 1, "", "filetype"], [118, 1, 1, "", "id"], [118, 2, 1, "", "load"], [118, 2, 1, "", "loads"], [118, 1, 1, "", "meta"], [118, 1, 1, "", "name"], [118, 1, 1, "", "parent"], [118, 1, 1, "", "projects"], [118, 1, 1, "", "projects_names"], [118, 2, 1, "", "remove_all_dataset"], [118, 2, 1, "", "remove_all_project"], [118, 2, 1, "", "remove_dataset"], [118, 2, 1, "", "remove_project"], [118, 2, 1, "", "save"], [118, 2, 1, "", "save_as"], [118, 1, 1, "", "scripts"], [118, 1, 1, "", "scripts_names"], [118, 1, 1, "", "suffix"]], "spectrochempy.Quantity": [[119, 2, 1, "", "check"], [119, 2, 1, "", "compute"], [119, 1, 1, "", "default_format"], [119, 1, 1, "", "dimensionality"], [119, 1, 1, "", "dimensionless"], [119, 2, 1, "", "dot"], [119, 2, 1, "", "from_list"], [119, 2, 1, "", "from_sequence"], [119, 2, 1, "", "is_compatible_with"], [119, 2, 1, "", "ito"], [119, 2, 1, "", "ito_base_units"], [119, 2, 1, "", "ito_preferred"], [119, 2, 1, "", "ito_reduced_units"], [119, 2, 1, "", "ito_root_units"], [119, 1, 1, "", "m"], [119, 2, 1, "", "m_as"], [119, 1, 1, "", "magnitude"], [119, 2, 1, "", "persist"], [119, 2, 1, "", "prod"], [119, 2, 1, "", "to"], [119, 2, 1, "", "to_base_units"], [119, 2, 1, "", "to_compact"], [119, 2, 1, "", "to_preferred"], [119, 2, 1, "", "to_reduced_units"], [119, 2, 1, "", "to_root_units"], [119, 1, 1, "", "u"], [119, 2, 1, "", "unit_items"], [119, 1, 1, "", "unitless"], [119, 1, 1, "", "units"], [119, 2, 1, "", "visualize"]], "spectrochempy.SIMPLISMA": [[122, 1, 1, "", "C"], [122, 1, 1, "", "Pt"], [122, 1, 1, "", "St"], [122, 1, 1, "", "X"], [122, 1, 1, "", "Y"], [122, 1, 1, "", "components"], [122, 1, 1, "", "config"], [122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_transform"], [122, 2, 1, "", "get_components"], [122, 1, 1, "", "interactive"], [122, 2, 1, "", "inverse_transform"], [122, 1, 1, "", "log"], [122, 1, 1, "", "n_components"], [122, 1, 1, "", "name"], [122, 1, 1, "", "noise"], [122, 2, 1, "", "parameters"], [122, 2, 1, "", "params"], [122, 2, 1, "", "plotmerit"], [122, 2, 1, "", "reconstruct"], [122, 2, 1, "", "reduce"], [122, 2, 1, "", "reset"], [122, 1, 1, "", "s"], [122, 2, 1, "", "to_dict"], [122, 1, 1, "", "tol"], [122, 2, 1, "", "transform"]], "spectrochempy.SVD": [[123, 1, 1, "", "U"], [123, 1, 1, "", "VT"], [123, 1, 1, "", "X"], [123, 1, 1, "", "Y"], [123, 1, 1, "", "components"], [123, 1, 1, "", "compute_uv"], [123, 1, 1, "", "config"], [123, 1, 1, "", "cumulative_explained_variance"], [123, 1, 1, "", "ev"], [123, 1, 1, "", "ev_cum"], [123, 1, 1, "", "ev_ratio"], [123, 1, 1, "", "explained_variance"], [123, 1, 1, "", "explained_variance_ratio"], [123, 2, 1, "", "fit"], [123, 2, 1, "", "fit_transform"], [123, 1, 1, "", "full_matrices"], [123, 2, 1, "", "get_components"], [123, 2, 1, "", "inverse_transform"], [123, 1, 1, "", "log"], [123, 1, 1, "", "n_components"], [123, 1, 1, "", "name"], [123, 2, 1, "", "parameters"], [123, 2, 1, "", "params"], [123, 2, 1, "", "plotmerit"], [123, 2, 1, "", "reconstruct"], [123, 2, 1, "", "reduce"], [123, 2, 1, "", "reset"], [123, 1, 1, "", "s"], [123, 1, 1, "", "singular_values"], [123, 1, 1, "", "sv"], [123, 2, 1, "", "to_dict"], [123, 2, 1, "", "transform"]], "spectrochempy.Unit": [[125, 1, 1, "", "default_format"], [125, 1, 1, "", "dimensionality"], [125, 1, 1, "", "dimensionless"], [125, 2, 1, "", "from_"], [125, 2, 1, "", "is_compatible_with"], [125, 2, 1, "", "m_from"]], "spectrochempy.asymmetricvoigtmodel": [[138, 1, 1, "", "args"], [138, 1, 1, "", "script"], [138, 1, 1, "", "type"]], "spectrochempy.gaussianmodel": [[176, 1, 1, "", "args"], [176, 1, 1, "", "script"], [176, 1, 1, "", "type"]], "spectrochempy.lorentzianmodel": [[198, 1, 1, "", "args"], [198, 1, 1, "", "script"], [198, 1, 1, "", "type"]], "spectrochempy.polynomialbaseline": [[232, 1, 1, "", "args"], [232, 1, 1, "", "script"], [232, 1, 1, "", "type"]], "spectrochempy.sigmoidmodel": [[275, 1, 1, "", "args"], [275, 1, 1, "", "script"], [275, 1, 1, "", "type"]], "spectrochempy.voigtmodel": [[298, 1, 1, "", "args"], [298, 1, 1, "", "script"], [298, 1, 1, "", "type"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:data", "4": "py:function"}, "terms": {"": [2, 4, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 36, 37, 38, 41, 50, 53, 66, 69, 73, 74, 75, 78, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 133, 139, 146, 160, 162, 164, 193, 195, 212, 213, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 276, 289, 292, 295, 309, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 350], "0": [0, 2, 6, 8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 80, 84, 86, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 133, 136, 137, 138, 139, 140, 144, 146, 147, 148, 152, 158, 159, 160, 161, 163, 167, 169, 170, 171, 174, 175, 176, 177, 181, 182, 183, 185, 189, 190, 197, 198, 199, 204, 215, 216, 219, 220, 222, 223, 224, 228, 229, 230, 232, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 267, 275, 279, 282, 285, 297, 298, 300, 302, 308, 309, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "00": [18, 22, 23, 25, 28, 31, 32, 34, 37, 39, 41, 47, 51, 54, 56, 60, 62, 63, 67, 70, 73, 74, 75, 76, 79, 80, 89, 92, 317, 320, 321, 323, 327, 331, 333, 335, 338, 341, 344, 345, 348], "000": [34, 56, 80, 271], "0000": [30, 43, 109, 237, 248, 318, 327], "000000": 20, "0001": [43, 97, 100, 109, 112, 133, 237, 248, 327], "000116": [327, 345], "00011600926518440247": 327, "00012439075792814138": [], "00012439075792819763": 21, "0001341": 320, "0001386702060699463": 327, "0001387": [327, 345], "00015827733519296075": [], "00015827733519298292": 21, "0001980997622013092": 327, "0001981": [327, 345], "00019825804790405947": [], "00019825804790408563": 21, "0002": [43, 109, 237, 248, 327], "00020397296743805037": 62, "00024636638593840925": [], "0002463663859384165": 21, "0002631": [320, 321], "0003": 43, "000302683562040329": 327, "0003027": [327, 345], "00030325790844269935": [], "00030325790844274825": 21, "0003036": 338, "0003089": [327, 345], "0003089122474193573": 327, "0003178": [320, 321], "0003702011951281": 92, "000370203321558236": 92, "0003702884428734": [92, 327], "0003744959831237793": 327, "0003745": [327, 345], "000374872354798985": [], "0003748723547989991": 21, "00040794593487610074": 62, "000427": 320, "000428": 320, "000429": 320, "000433": [19, 320], "000442": [19, 320], "0004636286240955444": [], "00046362862409554987": 21, "00047": 92, "000489637645652821": 21, "0004896376456532188": [], "0004904596528540332": [], "0004904596528540437": 21, "0004912871202792274": 21, "0004912871202792492": [], "0004921226355843399": 21, "0004921226355845649": [], "0004929673596844324": [], "0004929673596847029": 21, "0004938210437304266": [], "0004938210437305147": 21, "0004946901218457414": [], "000494690121845788": 21, "0004955753197879971": [], "0004955753197881855": 21, "0004964417296739696": 21, "0004964417296742335": [], "0004973147318187785": 21, "0004973147318192055": [], "0004981962000748052": [], "000498196200074918": 21, "0004990872395194935": [], "0004990872395197527": 21, "000499997496249006": 21, "000499997496249076": [], "000500922442379782": [], "0005009224423800709": 21, "0005018650428479306": 21, "0005018650428480293": [], "0005028222129277887": 21, "0005028222129278638": [], "0005037958933647272": [], "0005037958933649873": 21, "0005047767175615728": [], "0005047767175616306": 21, "0005057740763558537": 21, "0005057740763559156": [], "0005067909112021299": 21, "0005067909112024911": [], "0005078236610580253": 21, "000507823661058205": [], "0005088753613789447": 21, "0005088753613791863": [], "0005099447315067134": [], "0005099447315067428": 21, "0005110364330891371": 21, "0005110364330893436": [], "0005121515266401457": [], "0005121515266405646": 21, "0005132891688187567": 21, "0005132891688194182": [], "0005144616554310531": 21, "0005144616554313264": [], "000515660868027159": [], "0005156608680273234": 21, "000516884675273485": 21, "0005168846752735814": [], "0005181813428110956": [], "0005181813428110996": 21, "0005195265168843106": [], "0005195265168844873": 21, "0005208942964238287": 21, "0005208942964239247": [], "0005221": [327, 345], "0005221068859100342": 327, "000522295557066662": [], "0005222955570668208": 21, "000523731810759214": 21, "0005237318107593569": [], "000525186071889416": 21, "0005251860718895342": [], "0005266549474161524": [], "0005266549474162002": 21, "0005281469649349842": 21, "0005281469649350073": [], "0005296374901746844": 21, "0005296374901747182": [], "0005311700256181624": [], "0005311700256182077": 21, "0005327134944358023": [], "0005327134944358865": 21, "0005342566446344845": [], "0005342566446345362": 21, "0005358628850810231": [], "0005358628850811231": 21, "0005376381718606247": 21, "0005376381718609505": [], "000539632958222082": 21, "0005396329582221217": [], "0005416726314724233": [], "0005416726314726879": 21, "000543757085396793": 21, "0005437570853969035": [], "0005458976082890408": [], "0005458976082894234": 21, "0005480875748007045": [], "0005480875748009801": 21, "000550323786351097": [], "0005503237863511132": 21, "0005526263090687608": [], "0005526263090688865": 21, "0005549930907511896": [], "0005549930907513535": 21, "000557420810271828": 21, "0005574208102720259": [], "0005599281471045237": [], "0005599281471046915": 21, "00056244805843684": 21, "000562448058437207": [], "0005650176785167832": 21, "0005650176785170556": [], "0005654506385326385": 327, "0005655": [327, 345], "0005676053787179388": 21, "0005676053787183586": [], "0005699768662452698": 327, "00057": [327, 345], "0005702968600983431": [], "0005702968600985343": 21, "0005706218431926453": [], "0005706218431926852": 21, "0005730546137309185": 21, "0005730546137309432": [], "0005759087479595604": [], "0005759087479597221": 21, "0005778": 18, "0005788624242480211": 21, "0005788624242480249": [], "0005819472966804894": [], "0005819472966805581": 21, "0005851626197892928": 21, "0005851626197893941": [], "0005884735105283992": 21, "0005884735105286336": [], "0005919356405961392": [], "0005919356405963285": 21, "0005955122189366325": 21, "0005955122189368707": [], "0005992255771886373": [], "0005992255771886657": 21, "000603093852087474": [], "0006030938520875035": 21, "000607125173613408": 21, "000607125173613733": [], "00061": 92, "0006113918151771796": 21, "0006113918151773234": [], "0006119189023141512": 62, "0006161518203755229": [], "0006161518203756283": 21, "0006215236000710833": 21, "0006215236000711161": [], "0006273957420688358": [], "000627395742069023": 21, "000630699098110199": 327, "0006307": [327, 345], "0006335488650770439": 21, "0006335488650773443": [], "00063997626154747": 21, "000639976261547621": [], "0006466641120996571": [], "0006466641120997198": 21, "0006536091296352177": 21, "0006536091296354381": [], "0006606893398229962": 21, "0006606893398232108": [], "0006679795936491594": 21, "0006679795936492818": [], "0006754181243927066": 21, "0006754181243929264": [], "000682": [320, 321], "0006830298779799374": 21, "0006830298779800944": [], "0006907733550823759": [], "000690773355082485": 21, "0006987637535246896": [], "0006987637535248863": 21, "0006991377766200121": [], "0006991377766201039": 21, "0007069372346703253": [], "000706937234670494": 21, "0007125": [320, 321], "0007151920055395021": [], "0007151920055398561": 21, "0007235915691683487": 21, "0007235915691684034": [], "0007322966170538466": 21, "0007322966170539897": [], "0007412456856970828": 21, "0007412456856972441": [], "0007504652538893678": 21, "0007504652538893864": [], "0007597179067852979": [], "0007597179067854802": 21, "0007683": 18, "0007691414390015888": 21, "0007691414390018068": [], "0007791326607912125": 21, "0007791326607916446": [], "0007893350738953409": [], "0007893350738953455": 21, "0007904": 73, "0007997522484733252": [], "0007997522484734985": 21, "000803191214799881": 327, "0008032": [327, 345], "0008104269807762843": 21, "0008104269807765957": [], "0008158918697522015": 62, "0008208847158799012": [], "0008208847158799816": 21, "0008315536804370462": [], "0008315536804371222": 21, "0008356980979442596": 327, "0008357": [327, 345], "0008428706003286477": 21, "0008428706003289052": [], "000845": 320, "0008543517499939793": 21, "0008543517499939973": [], "0008573236692761631": [], "0008573236692762356": 21, "0008660457470918998": [], "0008660457470920491": 21, "0008780499311869208": [], "0008780499311869565": 21, "0008902182357105853": [], "0008902182357107867": 21, "0009015875006376667": [], "0009015875006377341": 21, "000914026217259882": 21, "0009140262172601002": [], "00092665991681462": 21, "0009266599168146646": [], "0009396363331384531": 21, "0009396363331387075": [], "0009545966012007114": [], "0009545966012009507": 21, "000969992296087672": [], "0009699922960876742": 21, "000975": 123, "0009841318528816519": [], "0009841318528819594": 21, "0009988201809295939": [], "0009988201809299616": 21, "001": [95, 109, 137, 320, 322, 339, 391], "0010150792321231051": 21, "001015079232123549": [], "001019864837190252": 62, "0010318244102606963": 21, "001031824410260848": [], "0010438675111377146": [], "0010438675111377777": 21, "0010491933694699838": 21, "0010491933694702416": [], "001066136369230252": 21, "0010661363692305004": [], "001083277704027545": 21, "0010832777040281538": [], "001089": 123, "0011006754884537097": 21, "0011006754884538526": [], "001119912492936025": [], "0011199124929361984": 21, "001121": [327, 345], "001121222972869873": 327, "001138941592363041": 21, "0011389415923631874": [], "0011582609085415184": 21, "0011582609085416548": [], "0011698119342327118": 327, "00117": [73, 327, 345], "0011775622624512867": 21, "0011775622624514447": [], "0011992116544500284": 21, "0011992116544500932": [], "0012190114699549698": 21, "0012190114699550403": [], "0012238378046283023": 62, "0012238378046283025": 62, "0012363658727397597": [], "0012363658727399572": 21, "0012488601974044253": [], "0012488601974044826": 21, "0012569657401119995": [], "0012569657401121748": 21, "0012813357494810852": 21, "0012813357494811507": [], "0013065923988233306": 21, "0013065923988234399": [], "001332": 18, "001332846482400301": [], "00133284648240033": 21, "001341": [320, 321], "0013601582805156066": [], "0013601582805156526": 21, "0013907597658087089": 21, "0013907597658089465": [], "0014262081321619567": [], "0014262081321620103": 21, "0014278107720663525": 62, "0014278107720663528": 62, "001427810772066353": 62, "0014629272012159653": [], "001462927201216079": 21, "001492571627285677": [], "001492571627285738": 21, "001501438543131316": 21, "0015014385431315496": [], "001535": 335, "0015418960309271955": 21, "0015418960309272526": [], "0015839173329699743": 21, "0015839173329701304": [], "001627495035146835": 21, "0016274950351471056": [], "001631783739504403": 62, "0016317837395044032": 62, "0016731692686995506": 21, "001673169268699626": [], "001699": 320, "0017204657491189743": 21, "001720465749119251": [], "001769274901286509": 21, "0017692749012867698": [], "0017697484695161686": [], "0017697484695162462": 21, "00177": 18, "0018195678200695175": 21, "001819567820069733": [], "0018357567069424532": 62, "0018357567069424536": 62, "0018713261632058056": [], "0018713261632058162": 21, "001875": 73, "0019243270194358867": [], "0019243270194360192": 21, "0019806643593506686": [], "0019806643593508087": 21, "002": [62, 339], "002012": 73, "002039729674380504": 62, "002043667805247806": [], "0020436678052481103": 21, "002085162862784": [], "0020851628627841057": 21, "002108409449092549": 21, "0021084094490926813": [], "0021751169925786117": [], "0021751169925787487": 21, "0022437026418185542": 62, "002243736743480967": [], "002243736743481225": 21, "002262": 22, "002313303909478483": [], "0023133039094788807": 21, "0023842026907909706": 21, "002384202690791266": [], "002386505694046983": [], "002386505694047089": 21, "0024476756092566047": 62, "002447675609256605": 62, "002458740363437859": [], "0024587403634382383": 21, "002508": 73, "002535164470211983": 21, "0025351644702120164": [], "0026129548289074937": [], "002612954828907802": 21, "002651648576694655": 62, "0026927116687368376": 21, "002692711668736899": [], "002714": 73, "002727253739146786": [], "0027272537391468342": 21, "0027738912186803643": 21, "002773891218680413": [], "002804": 320, "002805": [19, 320], "002807": [19, 320], "002810": 20, "002813": 20, "002855621544132705": 62, "0028556215441327055": 62, "0028561158500455984": [], "0028561158500456938": 21, "002867": 20, "0029389646390339226": 21, "0029389646390341295": [], "003": [18, 37, 75, 92], "00300": [37, 89], "003022167403549724": [], "0030221674035500246": 21, "0030323190347558656": [], "0030323190347560235": 21, "0030595945115707555": 62, "003059594511570756": 62, "003104947029333301": [], "0031049470293336282": 21, "003153": 73, "0031941648132722206": 21, "003194164813272342": [], "003263567479008806": 62, "003292520557980568": [], "00329252055798068": 21, "003312": 335, "0033965138303581263": 21, "0033965138303582317": [], "003414": 335, "0034289628116608174": [], "003428962811660933": 21, "0034675404464468563": 62, "0034675404464468568": 62, "003514710166154446": 21, "003514710166154473": [], "003521": 73, "003604": 320, "003612": 73, "003637": 73, "003637514821862894": 21, "003637514821863035": [], "0036715134138849063": 62, "003671513413884907": 62, "003700": 320, "0037443026036687627": [], "0037443026036689505": 21, "0037652602700427042": 21, "0037652602700427537": [], "003875486381322957": 62, "003891465351926787": 21, "003891465351926836": [], "003973": 320, "003torr_lt_aft": [18, 37, 327, 345], "004": [18, 37], "00400": [37, 89], "004007": 20, "004012755928138771": 21, "004012755928138774": [], "004053115751123294": [], "004053115751123465": 21, "004079459348761008": 62, "004092": 73, "004133928133016143": [], "004133928133016348": 21, "004219": 73, "004267124138925702": 21, "004267124138925948": [], "004283432316199058": 62, "0042834323161990585": 62, "004296": [320, 321], "004302": 73, "004393717477174862": 21, "00439371747717504": [], "004421": 320, "0044874052836371085": 62, "004490757479656367": [], "0044907574796566405": 21, "004527642308383116": 21, "00452764230838313": [], "004657040705272545": [], "004657040705272572": 21, "0046913782510751584": 62, "004691378251075159": 62, "004778610916794548": 21, "004778610916794895": [], "004867": 75, "004889401944567395": 21, "004889401944567413": [], "0048953512185132084": 62, "004895351218513209": 62, "00489535121851321": 62, "004torr_lt_aft": [18, 37, 327, 345], "005004969613317496": [], "005004969613317556": 21, "005099324185951259": 62, "00509932418595126": 62, "005110269931845348": [], "005110269931845401": 21, "005124394633029901": [], "005124394633030237": 21, "00516": 335, "005203284939611447": [], "005203284939611698": 21, "005205": 320, "005288054442075059": 21, "005288054442075116": [], "00530329715338931": 62, "005303297153389311": 62, "005375194673451666": [], "005375194673451759": 21, "005460760674075957": 21, "005460760674076024": [], "00550727012082736": 62, "005529135183167083": 21, "005529135183167105": [], "005587736630048236": [], "0055877366300484494": 21, "005607": 73, "005667827078790895": [], "005667827078790984": 21, "005700606624644865": 21, "005700606624645126": [], "00571124308826541": 62, "005711243088265411": 62, "005733332889918805": 21, "00573333288991891": [], "005756947971777873": [], "005756947971778068": 21, "005772367658830006": [], "005772367658830075": 21, "005802918028533959": 21, "0058029180285340785": [], "005861": 20, "005863": 20, "005868357891308785": [], "0058683578913088594": 21, "005886": 20, "00591521605570346": 62, "005915216055703461": 62, "005915216055703462": 62, "006": [74, 76, 317], "00600077780633942": [], "006000777806339455": 21, "006057238974457592": 21, "006057238974457633": [], "00611918902314151": 62, "006119189023141511": 62, "006191": 73, "0061911151252820535": 21, "006191115125282274": [], "0062386161148279395": [], "006238616114828434": 21, "006323161990579561": 62, "006323161990579562": 62, "006457414370355037": [], "0064574143703552645": 21, "006515": 335, "006527134958017611": 62, "006527134958017612": 62, "006566": 335, "006731107925455662": 62, "006731107925455663": 62, "006776": 23, "006849": 73, "006935080892893713": 62, "0069350808928937135": 62, "006957471610159089": 21, "006957471610159208": [], "007": 92, "007001": [320, 321], "007104": 73, "007139053860331762": 62, "0071390538603317635": 62, "007139053860331764": 62, "007194": 320, "0072": 24, "007200": 336, "007262": [109, 297], "007299": [109, 297], "0072b2": 336, "007331": [320, 321], "007343026827769813": 62, "0075469997952078635": 62, "007546999795207864": 62, "007750972762645915": 62, "007770502529914596": [], "007770502529914627": 21, "007919": 73, "007954945730083965": 62, "007954945730083967": 62, "008016534827385288": [], "008016534827385784": 21, "008121": [320, 321], "008158918697522015": 62, "008362891664960065": 62, "008362891664960067": 62, "008566864632398115": 62, "008682": 320, "008770837599836167": 62, "008843": 73, "008974810567274217": 62, "009": [18, 92], "00900": [37, 89], "009178783534712267": 62, "009201": 73, "009261179153190122": 21, "009261179153190241": [], "009276": 74, "009586729469588367": 62, "009790702437026419": 62, "009994675404464467": 62, "009994675404464469": 62, "009e73": 336, "01": [18, 25, 32, 37, 51, 60, 62, 73, 78, 317, 318, 320, 321, 322, 323, 327, 331, 333, 335, 345, 350], "010": 73, "0100": 24, "010198648371902519": 62, "010402621339340569": 62, "0105": 92, "01060659430677862": 62, "010606594306778622": 62, "010676123451468051": [], "010676123451468475": 21, "010810567274216669": 62, "01081056727421667": 62, "01094": 335, "011014540241654722": 62, "01139": [320, 321], "011422486176530822": 62, "011626459143968872": 62, "011732197722809758": 21, "01173219772281001": [], "01183": 74, "011830432111406922": 62, "012": [41, 89, 323, 348], "012238378046283024": 62, "012442351013721074": 62, "012646323981159122": 62, "012646323981159124": 62, "01285": [320, 321], "012850296948597174": 62, "012850296948597175": 62, "0129": 75, "012e": 320, "013": [1, 41, 89, 323, 348], "013054269916035224": 62, "013258242883473277": 62, "013462215850911324": 62, "013666188818349375": 62, "013870161785787427": 62, "014": 18, "01400": [37, 89], "01425": 74, "014278107720663527": 62, "014282427091627397": [], "014282427091627888": 21, "0144": [320, 321], "014686053655539629": 62, "0147": 30, "014890026622977677": 62, "015": 73, "01501": 75, "01525": [320, 321], "015297972557853779": 62, "015501945525291825": 62, "015501945525291829": 62, "015705918492729877": 62, "01611386442760598": 62, "01617": [320, 321], "016289564836607293": 21, "01628956483660752": [], "01631783739504403": 62, "016521810362482077": 62, "01652181036248208": 62, "01672578332992013": 62, "0168": 92, "0168583x88900638": 92, "01713372926479623": 62, "01733770223223428": 62, "01754167519967233": 62, "017541675199672334": 62, "01774564816711038": 62, "017745648167110387": 62, "01794962113454843": 62, "017949621134548434": 62, "018": [92, 316, 322], "01835756706942453": 62, "018357567069424534": 62, "01868": 73, "01870505431885474": [], "018705054318855174": 21, "018765513004300634": 62, "018765513004300637": 62, "01885": 73, "01917345893917673": 62, "019377431906614787": 62, "01969": [320, 321], "019989350808928937": 62, "02": [18, 22, 23, 25, 37, 39, 41, 47, 51, 67, 73, 74, 75, 89, 92, 316, 317, 320, 321, 322, 323, 325, 327, 331, 333, 335, 338, 341, 344, 345, 346, 348, 350], "020": 60, "020193323776366987": 62, "020397296743805037": 62, "02039729674380504": 62, "02067": 335, "020846": 20, "021": 18, "02100": [37, 89], "021009215646119187": 62, "02100921564611919": 62, "02111": 73, "02121318861355724": 62, "021417161580995294": 62, "02162113454843334": 62, "021torr_lt_aft": 345, "022": 318, "022012": 320, "022029080483309437": 62, "02243702641818554": 62, "022640999385623594": 62, "02284497235306164": 62, "022844972353061644": 62, "023155912689776872": 21, "02315591268977699": [], "02345689125537579": 62, "023456891255375794": 62, "02366086422281384": 62, "023660864222813844": 62, "023864837190251897": 62, "024": [92, 316], "02400007799856888": [], "024000077998569312": 21, "024476756092566044": 62, "024884702027442147": 62, "025004": 92, "025088674994880197": 62, "025292647962318247": 62, "025496620929756297": 62, "02556": 73, "026": 18, "02600": [37, 89], "02603": 75, "0263": 24, "02654": 335, "0267204587343846": 62, "02692443170182265": 62, "027128404669260704": 62, "02719": 73, "02733237763669875": 62, "027740323571574854": 62, "02791": 22, "02799": 74, "028": 73, "0282": 335, "028556215441327054": 62, "02896416137620315": 62, "02949": 335, "029576080278517308": 62, "029984026213393408": 62, "03": [18, 23, 37, 39, 41, 47, 62, 73, 76, 89, 92, 317, 323, 327, 333, 335, 341, 344, 345, 348, 350], "030324671559647503": [], "030324671559647905": 21, "03049": 74, "030595945115707558": 62, "03068": 335, "03083": 74, "031003891050583657": 62, "03161580995289781": 62, "03181978292033586": 62, "03181978292033587": 62, "03222772885521196": 62, "03262": 335, "03283964775752612": 62, "033": [41, 65, 67, 89, 317, 323, 327, 348], "03365553962727831": 62, "03406348556215441": 62, "03426745852959247": 62, "03438": 74, "03447143149703052": 62, "03467540446446856": 62, "03477774452872515": 21, "034777744528725334": [], "03487937743190662": 62, "03528732336678271": 62, "03528732336678272": 62, "03569526930165882": 62, "036": 18, "03600": [37, 89], "03651116117141102": 62, "036715134138849075": 62, "03691910710628712": 62, "036919107106287125": 62, "037": [41, 89, 323, 348], "03712308007372517": 62, "037123080073725175": 62, "037327053041163225": 62, "037531026008601275": 62, "03773499897603932": 62, "03776270101072334": [], "03776270101072369": 21, "03793897194347737": 62, "03804": 23, "038142944910915424": 62, "03814294491091543": 62, "038550890845791524": 62, "038754863813229574": 62, "039366782715543724": 62, "039570755682981774": 62, "03977472865041982": 62, "039774728650419824": 62, "039978701617857874": 62, "03j": 335, "04": [18, 23, 41, 62, 73, 75, 79, 89, 123, 317, 323, 333, 335, 338, 341, 343, 348, 350], "040": [], "04018267458529593": 62, "040386647552733974": 62, "04044": 74, "04077817": [92, 316], "04079459348761008": 62, "04099856645504813": 62, "04113": 333, "041202539422486174": 62, "04120253942248618": 62, "041406512389924224": 62, "04140651238992423": 62, "041814458324800324": 62, "042018431292238374": 62, "04222240425967643": 62, "04242637722711448": 62, "042630350194552524": 62, "04283432316199059": 62, "043242269096866674": 62, "04324226909686668": 62, "04344624206430473": 62, "04385418799918083": 62, "04405816096661888": 62, "04405816096661889": 62, "044452701": 92, "04446610690149498": 62, "0446": 22, "04467007986893304": 62, "04476": 73, "04528199877124719": 62, "04565": 335, "04568994470612329": 62, "04589391767356134": 62, "04616": 74, "046397106968950136": [], "04639710696895023": 21, "04650583657587549": 62, "046709809543313545": 62, "04691378251075158": 62, "047117755478189645": 62, "04772967438050378": 62, "04772967438050379": 62, "047729674380503795": 62, "04854556625025599": 62, "048763": [19, 320], "048953512185132095": 62, "049565431087446245": 62, "04_mo_al2o3_calc_0": [18, 37, 327, 345], "04_mo_al2o3_calc_1": [18, 37, 327, 345], "04e": 335, "05": [2, 20, 21, 23, 47, 74, 95, 109, 116, 137, 317, 318, 320, 322, 327, 333, 336, 338, 345, 350], "050": [], "050177349989760395": 62, "05061": 322, "05078": 18, "0509932418595126": 62, "051": 18, "05100": [37, 89], "05134": 335, "051605160761826745": 62, "052013106696702845": 62, "05201310669670285": 62, "05227": 18, "05242": 74, "05273": [335, 341], "0527j": 335, "05323694450133115": 62, "05339": 74, "05341": 74, "053644890436207245": 62, "05364489043620726": 62, "05405283637108335": 62, "05486872824083556": 62, "05609256604546385": 62, "0563": 335, "056704484947778015": 62, "05685": 335, "057": [41, 89, 323, 348], "057263048836390586": 21, "0572630488363906": [], "058": 322, "05831": 335, "05854024165472045": 62, "058744214622158515": 62, "059": 123, "05957": 73, "05969": 335, "05994": 335, "06": [18, 23, 37, 41, 89, 92, 117, 123, 323, 327, 345, 348, 393], "06006": 74, "06098791726397707": 62, "061": [41, 89, 323, 348], "061191890231415115": 62, "06158195065493249": 21, "06158195065493296": [], "062007782101167315": 62, "06200778210116732": 62, "06203": [335, 341], "06219": [74, 335], "06241572803604341": 62, "06261970100348146": 62, "06282367397091952": 62, "06298": [109, 297], "062j": 335, "06343559287323366": 62, "06344": 74, "06363956584067172": 62, "06366": 74, "06389": 74, "064": 322, "06404751177554782": 62, "06424": 18, "06425148474298586": 62, "06438": [109, 297], "06445545771042394": 62, "06486340364530002": 62, "06506737661273808": 62, "06527134958017612": 62, "06547532254761418": 62, "0659": 18, "06608724144992832": 62, "06629121441736636": 62, "06649518738480444": 62, "06669916035224248": 62, "06717": 335, "06731107925455662": 62, "06793": 74, "068": [], "06812697112430882": 62, "06853491705918492": 62, "0689": 322, "0689001083": 322, "069": [73, 322], "0690": 322, "06914683596149908": 62, "06948": 74, "06996272783125128": 62, "07": [18, 22, 23, 41, 63, 73, 74, 75, 89, 317, 323, 327, 348, 350], "07037067376612738": 62, "07098259266844155": 62, "07123": 74, "0714": 18, "0717021": 92, "0732": 74, "07322629531026009": 62, "07383821421257424": 62, "07386553913526352": 21, "07386553913526411": [], "07434": 74, "07485807904976449": 62, "07546999795207865": 62, "07548": [22, 74], "07624": 22, "07648986278926889": 62, "07666": 94, "07669383575670694": 62, "07689780872414499": 62, "07779": 74, "07791767356133524": 62, "07812164652877329": 62, "0785295924636494": 62, "07914151136596355": 62, "0793454843334016": 62, "07951": 74, "07955": 74, "0797534302682777": 62, "08": [89, 320, 321, 322, 323, 327, 331, 333, 335, 338, 341, 344, 345, 348], "0805693221380299": 62, "08058": 335, "08065": 74, "08087": 333, "081": 322, "08118124104034405": 62, "0817931599426582": 62, "08239": 335, "08240507884497236": 62, "0826090518124104": 62, "08260905181241042": 62, "08281302477984845": 62, "083": 322, "08362891664960066": 62, "08434": 73, "08437": 75, "08444480851935286": 62, "08452": 22, "08463": 74, "0847": 74, "08521": [109, 285], "08543": [109, 285], "08574": 74, "08668851116117142": 62, "08693": 75, "087": [], "08752": 335, "08770837599836166": 62, "08804": 74, "08905": 74, "08995207864018022": 62, "08e": 335, "09": [2, 18, 23, 37, 41, 89, 323, 327, 348, 350], "090": 322, "091": 327, "0913": 74, "092": 73, "09219578128199876": 62, "09235": 75, "093": 18, "09300": [37, 89], "09386": 74, "094": [17, 25, 317], "09448": 74, "09539": 74, "09555": 74, "09588": 74, "09689398092857912": 21, "0968939809285795": [], "09699": 74, "098": [], "099": 75, "09903": 22, "09e": 18, "0e3": 94, "0e8": 94, "0f": 322, "0j": [6, 344], "0k": 94, "0px": 335, "0x7f5d296ac3d0": [], "0x7f5d32c644c0": [], "0x7f5d55ba39a0": [], "0x7f5d56001ea0": [], "0x7f5d562978e0": [], "0x7f5d56329f90": [], "0x7f5d5658c7f0": [], "0x7f87df3f8280": [], "0x7f87df3f9f00": [], "0x7fa2723f17b0": 321, "0x7fa2723f1ab0": 321, "0x7faca7b026e0": 320, "0x7facaad44310": 320, "0x7facaf27a500": 320, "0x7facaf4e6b60": 320, "0x7fc77e6e3ee0": 16, "0x7fc7826a6560": 20, "0x7fc782793df0": 23, "0x7fc7a5756950": 31, "0x7fc7a5971990": 18, "0x7fc7a597fa00": 24, "0x7fc7a7190730": 22, "0x7fdb94807a30": [], "0x7fdb94934df0": [], "0x7fdb95b9d2a0": [], "0x7fdb9a2c4700": [], "1": [0, 2, 6, 7, 8, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 28, 30, 31, 36, 37, 38, 41, 44, 45, 46, 49, 50, 53, 54, 58, 59, 62, 63, 65, 66, 69, 70, 73, 74, 75, 78, 79, 85, 86, 88, 92, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 130, 131, 133, 137, 138, 140, 141, 144, 146, 151, 153, 158, 159, 160, 163, 164, 167, 169, 171, 175, 177, 178, 181, 182, 183, 185, 190, 194, 197, 200, 202, 203, 204, 211, 212, 218, 221, 224, 225, 226, 227, 232, 235, 236, 237, 239, 247, 248, 252, 253, 267, 275, 276, 278, 279, 281, 282, 283, 285, 286, 295, 296, 297, 298, 300, 302, 308, 309, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 384, 393, 398, 399], "10": [0, 1, 2, 6, 18, 20, 21, 22, 24, 25, 31, 37, 38, 41, 50, 62, 69, 73, 74, 75, 76, 78, 83, 86, 88, 89, 92, 94, 97, 98, 105, 109, 114, 115, 119, 146, 169, 170, 174, 197, 219, 220, 222, 223, 228, 229, 230, 232, 249, 271, 308, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 327, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 350, 376, 401], "100": [6, 22, 36, 50, 58, 73, 74, 75, 96, 98, 109, 115, 123, 153, 247, 252, 271, 286, 314, 318, 320, 321, 323, 327, 333, 336, 337, 341, 346, 347], "1000": [30, 36, 38, 49, 75, 98, 318, 333, 336, 338, 345, 346], "10000": [58, 73, 271, 336], "100000": [95, 336], "1000000000": 339, "1001": [18, 37, 74, 327, 345], "1002": 92, "10031": 73, "1007": 1, "1008": [335, 341], "100_pd_101": 327, "100_pd_102": 327, "100_pd_103": 327, "100_pd_104": 327, "101": [24, 92, 318, 320, 321, 335], "1012": 74, "1014": 341, "1016": [92, 316], "102": [74, 335], "1021": [44, 92, 316], "1024": [44, 74, 333, 335, 341, 346, 347], "103": [73, 335], "1031": [73, 341], "1037": [335, 341], "1038": [92, 316], "1039": [92, 316], "104": [271, 335], "105": 2, "1055": 74, "1056": 18, "106": 322, "1068": 74, "107": 335, "1071": 92, "1075": [74, 346], "1076": 92, "1078": [335, 341], "1079": 341, "108": 335, "1083": 333, "1084": 18, "1088": 92, "1091": 74, "1092": 74, "1093": 341, "1094": 74, "10x10": 345, "11": [2, 16, 23, 62, 66, 73, 89, 92, 318, 320, 321, 322, 324, 327, 333, 335, 336, 337, 338, 339, 340, 341, 344, 345, 346, 348, 350, 399], "110": [24, 73, 92, 320, 321, 335], "1100": [346, 348], "1106": 73, "1108": 74, "1109": 92, "11098": [109, 146, 238], "111111111111": 336, "1112355f": 327, "1114": 74, "1116": 74, "1117": 74, "112": 335, "1134": 74, "1137": 92, "114": 335, "11463": 73, "115": 75, "1152": 75, "1155": 74, "116": 335, "1161": [74, 322], "1165": 74, "1166": 22, "117": 333, "1174": 335, "118": [73, 74], "1188": 74, "1194": 74, "119699": [92, 316], "12": [2, 16, 18, 25, 37, 62, 89, 92, 97, 317, 318, 320, 321, 322, 324, 327, 333, 335, 336, 337, 338, 339, 341, 344, 345, 346, 348, 350, 357, 399], "120": 327, "1200": [333, 336], "1201353750": 346, "1206": 74, "1210271017": 92, "1229": 74, "1230": 15, "1234": [6, 339], "12345": [97, 109, 289], "12381159123489659": 62, "12411": [335, 338, 341], "12487289": 322, "125": 73, "1250": [109, 276, 295, 323, 339], "12544337497440097": 62, "1259": 74, "126": 341, "12638124502857226": 21, "12638124502857231": [], "1265": 18, "1266672127790293": 62, "1269": 74, "12707515871390537": 62, "12727913168134342": 62, "1274831046487815": 62, "128": [343, 346], "1280": [21, 23], "1281": 23, "1287": 74, "129": 73, "1290": [336, 344, 348], "1291": 62, "1292": 74, "1295": 92, "129522834323162": 62, "12972680729060004": 62, "1299307802580381": 62, "13": [2, 6, 18, 37, 41, 47, 62, 73, 76, 83, 89, 92, 318, 320, 321, 322, 323, 324, 327, 333, 335, 336, 337, 338, 339, 341, 344, 345, 346, 348, 350, 401], "1300": [109, 169, 323, 333, 339], "13013475322547613": 62, "1303": 18, "13033872619291417": 62, "1305": [74, 339], "13095064509522836": 62, "131": 327, "13135859103010444": 62, "132": [322, 345], "13217448289985662": 62, "13217448289985664": 62, "1323784558672947": 62, "133": [271, 327], "1337": 333, "134": [97, 109, 170], "1340102396067991": 62, "13401023960679911": 62, "13421421257423713": 62, "1344": 335, "1344181855416752": 62, "1347": 318, "13484": 92, "135": 322, "13505": 92, "13523407741142743": 62, "13543805037886547": 62, "1357": 92, "1359924945": 73, "1359949976": 73, "135e": 338, "1360100375": 73, "1360112954": 73, "13625394224861764": 62, "1366": [92, 327], "1368658611509318": 62, "137": [75, 327, 345], "13706983411836987": 62, "13747778005324596": 62, "1380": 74, "13808969895556011": 62, "13870161785787424": 62, "13890559082531231": 62, "139": 327, "14": [23, 41, 62, 73, 75, 89, 92, 318, 320, 321, 322, 323, 327, 333, 335, 336, 337, 338, 339, 341, 344, 345, 346, 348, 350], "140": [75, 92, 320, 321], "14017421024502014": 21, "1401742102450209": [], "14074134753225476": 62, "14094532049969283": 62, "1413532664345689": 62, "14155723940200696": 62, "14155723940200698": 62, "14176121236944503": 62, "14196518533688307": 62, "14237313127175916": 62, "14237313127175918": 62, "1428": 18, "1429850501740733": 62, "143": [18, 21, 25, 317], "14359696907638747": 62, "144": 322, "14441286094613967": 62, "1454327257833299": 62, "14563669875076798": 62, "14570219": 92, "14658624": 92, "14665656358795823": 62, "1467": 335, "147": [44, 333, 335], "1470645095228343": 62, "1476798575": 327, "1476798846": 327, "1476806493": 327, "1476806797": 327, "149": 346, "14e": 18, "15": [16, 17, 18, 23, 37, 62, 73, 74, 75, 84, 92, 122, 318, 320, 321, 322, 327, 333, 335, 336, 337, 338, 339, 341, 344, 345, 346, 348, 350], "150": [18, 22, 27], "1500": [75, 109, 139], "15000": [37, 58, 59, 89, 338, 341], "151": [92, 327], "152": [6, 32], "1529": 46, "1529cm": 46, "155": 22, "1550": [96, 323, 339], "1555": [96, 339], "1556": [62, 75, 345], "1568": [24, 62], "1570": 323, "15798": [97, 343], "16": [2, 18, 23, 37, 62, 73, 75, 92, 97, 109, 171, 317, 318, 320, 321, 322, 327, 333, 335, 336, 337, 339, 341, 344, 345, 346, 350], "1600": [109, 139, 333], "16000": 73, "1600437": 322, "161": [], "162": [45, 47, 73, 92, 317, 327, 333], "1622": 73, "1623": 335, "16365897573754884": [], "16365897573754962": 21, "16384": 341, "1644": 97, "165": [109, 146], "1662": 335, "167": 322, "16975": [109, 249], "17": [18, 20, 23, 37, 41, 89, 92, 318, 320, 321, 322, 323, 327, 333, 335, 336, 337, 339, 341, 344, 345, 346, 348, 350], "171": 73, "1734": 22, "174": 73, "1740": 323, "1742": 21, "175": [23, 333], "1750": 333, "177": [22, 73], "1775": [], "178": [18, 25, 317], "179": [22, 92], "1793": [], "1795": 62, "18": [18, 37, 92, 318, 320, 322, 327, 333, 335, 336, 337, 339, 341, 344, 345, 346, 350, 376], "180": 345, "1800": [109, 169, 276, 295, 323], "181": 92, "182": [], "1842": [4, 109, 253], "1856": 339, "185e": 123, "186": 73, "1868": 326, "187": 341, "1879": 94, "188": 22, "1899": 322, "19": [18, 23, 37, 41, 73, 89, 92, 318, 320, 322, 323, 327, 333, 335, 336, 337, 339, 344, 345, 346, 348, 350, 381], "190": 46, "1900": [322, 345], "1909": 346, "191216": 45, "1936": 22, "19403": 92, "19417": 92, "1947": 73, "195": 333, "1950": [18, 37, 89], "1956": 62, "196": [73, 346], "196608": [44, 333, 335], "1970": 327, "1978": [], "198": [41, 89, 323, 348, 363], "1980": 92, "1982": 75, "1985": 335, "1986": [92, 99, 314], "1988": [92, 95, 109, 243, 280, 327], "199": [322, 368], "1992": [16, 92, 99], "199456453": 322, "1995": 322, "1997": [92, 122], "1999": 93, "19e": 327, "1d": [4, 6, 29, 32, 33, 40, 47, 49, 55, 95, 97, 102, 106, 107, 109, 113, 114, 138, 139, 140, 160, 169, 170, 176, 188, 198, 204, 206, 208, 217, 221, 224, 225, 226, 227, 232, 239, 241, 256, 275, 298, 302, 314, 317, 318, 329, 334, 342, 345, 346, 353, 360, 368, 370, 397], "1e": [73, 94, 109, 116, 117, 119, 137, 344], "1e4": 73, "1e5": [109, 137], "1e9": [95, 109, 137], "1f": [73, 74], "1j": 6, "1mm": 327, "1r": 73, "1st": [106, 108, 322, 327, 345], "2": [0, 2, 6, 7, 15, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 36, 37, 41, 46, 49, 51, 53, 58, 59, 60, 62, 65, 66, 67, 69, 73, 74, 75, 78, 84, 92, 94, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 122, 126, 127, 141, 146, 151, 157, 158, 159, 160, 161, 164, 167, 174, 176, 177, 181, 182, 183, 185, 190, 193, 198, 201, 204, 211, 212, 232, 233, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 276, 279, 282, 284, 285, 292, 297, 300, 302, 308, 309, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 372, 395], "20": [24, 50, 58, 74, 75, 78, 92, 97, 98, 109, 133, 169, 245, 246, 247, 252, 318, 320, 322, 323, 325, 327, 333, 335, 336, 337, 339, 341, 344, 346, 350, 384], "200": [21, 36, 37, 39, 62, 73, 100, 112, 119, 317, 318, 333, 336, 338, 339, 345], "2000": [89, 93, 96, 318, 333, 337, 338, 339], "20000": 336, "2001": [20, 92], "2003": [92, 109, 157, 300, 340, 346], "2004": 92, "2005": [14, 17, 20, 24, 25, 33, 62, 92, 95, 108, 109, 137, 237, 317, 320, 321], "2006": 2, "2008": [138, 318], "2009": [92, 94, 314], "200e": 119, "2013": [1, 92, 105], "2014": [86, 88, 89, 92, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "2015": [19, 92, 320, 321, 339], "2016": [18, 23, 37, 41, 89, 323, 327, 345, 348], "2017": [109, 300], "2018": [92, 108, 109, 157, 327, 340], "2019": [41, 393], "2020": [92, 105, 314, 316], "2021": [92, 350], "2022": [92, 350], "2023": [92, 350], "2024": 92, "2025": [0, 18, 22, 23, 41, 73, 74, 75, 86, 88, 89, 92, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "203": 18, "20300": [37, 89], "204": [19, 24, 320, 321], "2048": 74, "205": [23, 346], "207": [], "2072": 322, "2073": 322, "2074": [93, 322], "2075": 322, "2079": 92, "209": 16, "2090": 322, "2093": 322, "21": [23, 41, 66, 74, 89, 92, 320, 322, 323, 327, 333, 335, 336, 339, 340, 344, 346, 348, 350], "2100": 339, "2105": 22, "2110383927344193": [], "21103839273442063": 21, "2115": 322, "2124": 333, "2129": 73, "2140": 322, "2142": 322, "2144": 337, "215": 346, "2152": 322, "2157": 322, "216": [23, 341], "2162": 322, "2166": 322, "2173": 322, "2178": 333, "2179": 322, "2180": 322, "2186": 322, "2191": 322, "2192": 94, "21e": 333, "22": [20, 74, 92, 109, 140, 320, 322, 327, 333, 335, 336, 339, 344, 350, 384], "2200": [335, 338, 341], "222": [75, 109, 140], "2220": 322, "222e": 333, "2238": 335, "224": 16, "225": [73, 333], "2250": [18, 37, 89], "2266": 322, "227": [], "2283": 338, "2284": [335, 341], "229": 341, "2299": 322, "23": [12, 20, 23, 73, 74, 92, 320, 322, 326, 327, 333, 336, 339, 344, 350], "230": 322, "2300": [89, 322, 345], "2310": 322, "232": 322, "234": 335, "2342": [335, 341], "23482": 73, "236": 94, "23660864222813846": 62, "23742453409789066": 62, "238": [41, 89, 92, 323, 348, 355], "239": 355, "24": [25, 41, 73, 74, 89, 92, 109, 304, 320, 323, 327, 333, 336, 339, 344, 348, 392], "240": 322, "24089207454433748": 62, "24130002047921362": 62, "242": 73, "24211591234896584": 62, "24293180421871802": 62, "243": 73, "24354372312103217": 62, "2441556420233463": 62, "2447675609256604": 62, "24497153389309853": 62, "24517550686053655": 62, "24599139873028875": 62, "246": [92, 341], "24619537169772682": 62, "2465": 322, "246501869": 322, "24660331763260296": 62, "2467": 75, "247": 322, "2472": 75, "24741920950235513": 62, "248": [47, 322, 358], "248123825": 322, "24884702027442143": 62, "2490509932418595": 62, "2498668851116117": 62, "24e": 348, "25": [2, 18, 22, 23, 41, 73, 74, 75, 89, 92, 98, 109, 154, 320, 321, 322, 323, 325, 327, 331, 333, 335, 336, 338, 339, 341, 343, 344, 345, 348, 350], "250": 333, "2500": 333, "25000": 338, "25027483104648784": 62, "25085858": [109, 140, 202], "251": [109, 285], "25109072291624": 62, "2512946958836781": 62, "2517026418185541": 62, "2519066147859922": 62, "25211058775343026": 62, "25251853368830635": 62, "2527225066557444": 62, "2529264796231825": 62, "253": 341, "25313045259062056": 62, "25353839852549664": 62, "2537": [109, 285], "25394634446037273": 62, "2541503174278108": 62, "255": 358, "25517018226500104": 62, "2553741552324391": 62, "2555781281998771": 62, "256": 336, "2565979930370674": 62, "2567": [43, 109, 237, 248, 327], "257": 322, "2574138849068196": 62, "25843374974400984": 62, "25863772271144786": 62, "259045668646324": 62, "25924964161376207": 62, "2594": [], "2596575875486381": 62, "259765625": 343, "26": [23, 62, 73, 92, 97, 320, 322, 327, 333, 336, 339, 343, 344], "26006553348351424": 62, "26026950645095226": 62, "2602695064509523": 62, "2604734794183903": 62, "26067745238582835": 62, "261": 92, "26169731722301864": 62, "2633": 92, "26434": [92, 316], "2663": 333, "2670": 92, "267e": 75, "268": [62, 63, 317], "268e": 75, "27": [20, 74, 92, 320, 327, 333, 336, 339, 344, 346], "271": 327, "2717": 73, "27170": 92, "27180": 92, "272": [], "2725078844972353": 62, "274": [49, 51, 92, 317], "27811881011285083": [], "2781188101128527": 21, "28": [6, 74, 92, 320, 327, 333, 336, 344], "2827": [22, 74], "284": [31, 32, 92, 317], "284101": 20, "2843": [109, 259], "285": [], "287": 92, "28e": 335, "29": [24, 73, 92, 320, 327, 333, 336, 344, 350], "2907": 73, "291": 92, "293919": 20, "296": 374, "2975": 92, "298": [94, 116], "299": [18, 22, 23, 41, 73, 74, 75, 89, 320, 321, 323, 327, 331, 333, 335, 338, 341, 344, 345, 348], "2a": 94, "2d": [4, 14, 22, 25, 33, 36, 44, 49, 62, 64, 67, 71, 92, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 120, 121, 122, 123, 145, 156, 160, 169, 204, 205, 207, 209, 210, 219, 220, 222, 223, 228, 229, 230, 231, 237, 241, 256, 270, 314, 317, 318, 323, 333, 336, 339, 341, 342, 344, 346, 353, 369, 390, 397, 399], "2e": 335, "2f": 31, "2fp": 322, "2j": [6, 344], "2nd": 108, "2rr": 74, "3": [2, 6, 7, 15, 18, 19, 20, 22, 23, 24, 27, 31, 36, 37, 38, 39, 41, 45, 53, 73, 74, 75, 76, 83, 86, 88, 89, 92, 94, 95, 97, 99, 100, 105, 106, 108, 109, 112, 114, 115, 117, 118, 122, 123, 137, 146, 151, 167, 169, 174, 175, 185, 190, 211, 212, 218, 221, 225, 226, 227, 237, 247, 248, 271, 289, 302, 308, 309, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 361, 368, 376, 380, 384, 387, 399, 401], "30": [2, 23, 58, 62, 92, 108, 320, 322, 325, 327, 333, 335, 336, 337, 344], "300": [18, 20, 36, 336, 338], "3000": 96, "30000": [37, 89], "302": 75, "303": [16, 25, 317], "3037": 345, "3039": 345, "304": [73, 76, 317], "3077": 346, "308": [74, 94], "31": [18, 74, 92, 320, 333, 336, 344, 350], "310": [78, 79, 317, 362], "3106": 74, "3112": [18, 37, 41, 327, 345], "312": [18, 37], "3132": 346, "3155": 22, "316": 361, "317": 92, "3194": 22, "3197": 22, "32": [74, 92, 320, 333, 336, 341, 344, 345], "322": [92, 361], "323": 318, "3247": [109, 239], "325": 333, "3250": 333, "32768": 341, "33": [18, 23, 37, 73, 92, 320, 327, 333, 336, 344, 345], "3300": [30, 318], "3314": [], "333": [271, 333], "3336": 346, "334": [], "335": 326, "336": [], "3390": [92, 316], "34": [73, 92, 333, 335, 336, 344, 346], "3400": 30, "342312": [92, 316], "345": 73, "3458": 30, "346": 73, "35": [18, 20, 37, 73, 317, 322, 327, 333, 336, 344, 345], "3500": [30, 339], "3505": 30, "3519": 346, "3520": 318, "3536": 30, "3537": 318, "3540": 30, "3541": 318, "3548": [176, 318], "3549": 337, "355": [1, 318], "3560": 318, "3579": 346, "358": [20, 25, 317], "3583": 22, "36": [38, 74, 92, 333, 336, 344], "360": 374, "3600": 336, "3610": 318, "3614": 22, "362": 346, "3620": 30, "3622": 318, "3623": 30, "3624": 318, "3629": 22, "3631": [92, 346], "3636": [92, 346], "3640": 318, "3641": 73, "367": 1, "3678": 318, "368": 346, "369": [53, 54, 317], "3693": 318, "37": [18, 23, 37, 327, 333, 336, 344, 345], "3700": [30, 109, 139, 318], "372": 322, "3734": [109, 255], "3735": [], "3736": 41, "375": 374, "3750": 339, "3766": 62, "3780": 339, "379": 73, "38": [23, 41, 73, 74, 89, 323, 327, 333, 336, 344, 348], "380": [43, 47, 317], "3800": [30, 89], "3805": 345, "3807": 345, "381755": [109, 153, 286], "3823841": 0, "383064516033j": 338, "3833": [], "385": 92, "3868": 74, "3873": 73, "3886": 333, "38e": 327, "39": [22, 23, 318, 321, 322, 323, 324, 325, 326, 327, 333, 335, 336, 337, 339, 341, 344, 346, 348], "3900": [89, 109, 139], "390168": 20, "3915": 62, "396": 92, "3999": [18, 37, 327, 343, 345], "3c02592": [92, 316], "3d": [22, 23, 36, 98, 109, 115, 219, 220, 222, 223, 228, 229, 230, 333, 336], "3d_dataset": 333, "3e": 348, "3f": [31, 73, 138, 176, 198, 271, 275, 298, 318, 322], "3fp": 322, "3g": [232, 327], "3gb": 83, "3j": [6, 344], "3rd": [108, 327], "4": [2, 6, 7, 17, 19, 20, 21, 22, 23, 24, 27, 31, 41, 43, 49, 53, 66, 69, 73, 74, 75, 78, 89, 92, 94, 97, 98, 109, 118, 119, 143, 171, 218, 221, 225, 226, 227, 237, 241, 247, 248, 252, 309, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "40": [23, 74, 325, 327, 333, 336, 344], "400": [333, 336, 343, 345, 346], "4000": [18, 36, 37, 89, 327, 333, 336, 337, 339, 343, 344, 345], "400mb": 83, "402": [92, 375], "403": 92, "403400": 20, "403e": [333, 338], "404": [18, 75, 335], "40400": [37, 89], "4044": 30, "4046": 119, "405": 335, "406": 335, "407": 335, "4070": 337, "4071": 337, "408": [73, 335], "4096": 73, "41": [18, 23, 37, 41, 89, 323, 327, 333, 336, 344, 345, 348], "412": [], "4124": 333, "414": 344, "4146": [], "4160": 343, "417": [322, 378], "42": [18, 21, 37, 92, 327, 333, 336, 344, 345], "4223": 75, "4230": 339, "4253": 75, "426": [109, 245, 246], "4262": 73, "4284": 75, "43": [20, 23, 30, 333, 344], "433": 73, "4330": 339, "437": [75, 333, 346], "43836": 341, "4394": 30, "4399": 333, "44": [74, 320, 331, 333, 338, 344], "440": 73, "441": 73, "4413": [], "4446": 73, "445": [], "446": 322, "44822162": 119, "449": [344, 346], "45": [20, 73, 109, 146, 333, 337, 344, 345], "4500": 339, "4517": 97, "4550": 339, "4559": [], "456": 23, "4574": 62, "458": 73, "46": [18, 23, 37, 73, 327, 333, 344, 345], "4616": 62, "462": 382, "4644": 333, "468": 382, "468e": [23, 41, 89, 323], "47": [73, 138, 318, 322, 333, 344, 345], "471": 75, "4717": 338, "472": 333, "474": 322, "4755": 333, "477": 333, "477e": [18, 37, 327], "47878161267252": 22, "4798": 22, "48": [92, 318, 333, 335, 344, 345], "481": [59, 60, 317], "481e": 333, "483": [], "4835": [], "484": [50, 51, 317], "4888": 30, "49": [18, 22, 37, 327, 333, 344, 345], "490": 384, "4913": 74, "49133114889": 62, "49194306778": 62, "49337087855": 62, "49357485153": 62, "49398279747": 62, "49439074339": 62, "49581855418": 62, "496": 75, "49602252714": 62, "49622650011": 62, "49643047307": 62, "496838419": 62, "49765431088": 62, "4980": 62, "49847020274": 62, "49867417572": 62, "4991": 92, "49928609462": 62, "4998": 62, "4c72b0": 336, "4f": 322, "4fq4v": [92, 316], "4th": [15, 19, 27, 320, 321, 332], "4x96": 19, "5": [2, 7, 15, 16, 19, 20, 22, 23, 24, 27, 30, 31, 46, 49, 62, 66, 69, 73, 74, 75, 84, 89, 92, 94, 95, 96, 97, 98, 102, 108, 109, 117, 118, 123, 146, 160, 169, 171, 177, 183, 211, 267, 279, 308, 309, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 361, 384], "50": [18, 23, 30, 50, 62, 73, 75, 89, 94, 95, 97, 100, 108, 109, 124, 137, 169, 178, 194, 197, 252, 259, 280, 320, 322, 325, 333, 336, 339, 341, 344], "500": [20, 114, 117, 336], "5000": [73, 74, 338, 341, 344], "50010198649": 62, "500x500": 115, "50152979726": 62, "502": [], "50234568912": 62, "503": 18, "50300": [37, 89], "50356952693": 62, "504": 25, "50724104035": 62, "50785295924": 62, "50887282408": 62, "5096153847107": 338, "50968871596": 62, "51": [18, 19, 23, 24, 37, 89, 320, 321, 327, 333, 344, 345], "51009666189": 62, "51030063485": 62, "51132049969": 62, "5119324186": 62, "513": 75, "5133": 333, "51376817531": 62, "51397214826": 62, "51397214828": 62, "5143800942": 62, "51478804015": 62, "51560393201": 62, "51580790499": 62, "516": 73, "51601187795": 62, "51621585092": 62, "51662379685": 62, "517": [327, 345], "51723571574": 62, "51784763465": 62, "51805160762": 62, "51825558058": 62, "51907147246": 62, "51927544542": 62, "51968339135": 62, "51x96": 19, "52": [62, 74, 92, 94, 333, 341, 344], "52049928323": 62, "52090722916": 62, "52090722918": 62, "52111120212": 62, "52437476961": 62, "52498668851": 62, "52539463446": 62, "5281": [0, 92, 316], "5282": 73, "528x336": [320, 321], "53": [23, 50, 93, 333, 336, 344], "532nm": 45, "533e": 338, "534": [23, 25, 317, 346], "5342": 73, "53572": [92, 316], "537": [], "538": [58, 60, 317], "54": [18, 20, 30, 37, 109, 123, 177, 182, 327, 333, 344, 345], "5400": [96, 339], "541e": 335, "543": [327, 390], "5437": 62, "544": 327, "5448": 94, "544e": 327, "545": 346, "5458": 22, "546e": 335, "5474": 318, "549": 346, "55": [1, 41, 74, 78, 89, 92, 109, 123, 139, 140, 146, 153, 202, 247, 254, 276, 284, 285, 286, 295, 297, 323, 326, 333, 337, 344, 348], "5522": 75, "55339": [92, 316], "5538": [], "5549": [23, 38, 41, 89, 109, 123, 139, 140, 146, 153, 202, 237, 247, 252, 254, 284, 285, 286, 297, 318, 323, 326, 327, 337, 348], "556": [42, 47, 317, 339], "5566": 23, "5582": 337, "56": [23, 73, 321, 333, 344], "562": [73, 322], "563": 322, "564": [22, 25, 317], "5669": 318, "567": [], "569": 73, "56b4e9": 336, "57": [27, 73, 92, 109, 146, 247, 324, 327, 333], "571": 322, "572": [], "575": 73, "5772": 333, "579": 73, "58": [18, 37, 41, 327, 333, 335, 345], "582": 22, "582j": 341, "583x": 92, "588": 335, "589": 335, "59": [18, 22, 23, 73, 74, 75, 333], "590": 335, "5900": [96, 339], "591": 335, "592": 335, "593": 335, "594": 335, "5949": 74, "596": 335, "597": 335, "5979": 22, "598": 335, "599": 335, "5993": 15, "5994": 62, "5995": 30, "5997": [15, 339], "5999": [41, 62, 89, 323, 327, 337, 339, 348], "5e": 73, "5j": [6, 344], "5px": 335, "5th": [27, 62], "6": [2, 6, 16, 19, 23, 47, 73, 74, 75, 84, 86, 88, 89, 92, 94, 97, 98, 99, 100, 105, 108, 109, 112, 114, 115, 117, 118, 122, 123, 170, 175, 181, 212, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 308, 309, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 376], "60": [20, 36, 49, 65, 75, 78, 92, 97, 109, 170, 190, 318, 333, 345], "600": [333, 335, 336, 348], "6000": [41, 89, 323, 327, 337, 348], "601": 335, "602": 18, "60200": [37, 89], "603": [75, 335, 346], "606": 73, "6066": [], "6069": [], "6077": 23, "607943654060364e": 327, "6082": [], "608e": [327, 345], "61": [75, 318, 333, 341], "610": [75, 76, 317], "611089606617058e": [], "611089606617643e": 21, "614": [], "62": 333, "622": 322, "6227": 333, "623": [53, 75], "624": 318, "6245": [], "627": 339, "63": 333, "634": 123, "6369": 318, "637": [44, 47, 317], "64": [73, 333, 341], "643": [109, 255, 395], "647": 395, "649": [41, 89, 323, 327, 337, 339, 348], "6497": 75, "64th": 343, "65": 333, "650": [41, 89, 323, 327, 336, 337, 348], "6500": 340, "651": 339, "652818786": [109, 297], "65536": 341, "6566": 22, "657": [], "659": [], "66": [138, 318, 333], "661": [69, 70, 317], "663": 396, "6632": [], "664": 396, "667": 333, "6676": 92, "668": 396, "6686": 92, "67": 333, "674": 333, "6764": 333, "678": 346, "68": [318, 333], "6837": 333, "684": 22, "685": [], "687": 397, "687e": 123, "688": 397, "69": [75, 138, 318, 333], "693": 318, "694": 23, "695": 75, "6956": 335, "696": [351, 402], "697": [46, 47, 317], "698": [19, 25, 317], "7": [0, 2, 6, 18, 22, 37, 38, 41, 62, 69, 74, 75, 89, 92, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 153, 218, 221, 225, 226, 227, 286, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 353, 387, 393], "70": [62, 66, 73, 333, 340], "700": [41, 324, 333, 336, 339], "702": 18, "70200": [37, 89], "7030": 335, "706": 399, "708": [24, 25, 317, 333], "71": [23, 333], "713": [], "7139": 74, "714": [22, 399], "7153": 74, "716": 399, "72": [117, 333], "721": [], "7233": 22, "726": 75, "73": [109, 153, 286, 333], "7302": 22, "732": 344, "733": 75, "734": 322, "7355": 94, "739": 346, "74": [109, 153, 286, 333, 335], "7407": [], "741e": 333, "7439": 92, "746": 322, "747926": [19, 320], "7494": 318, "749519": 320, "749798": 320, "749865": 20, "75": [22, 62, 92, 271, 322, 333, 336, 346], "750": 346, "75015": 2, "753": [], "7537": 22, "755": [], "757": 92, "75794": 2, "758": 400, "7584": 74, "759": [51, 66, 67, 317], "76": [24, 73, 92, 320, 321, 333], "760": [], "763": 73, "7637": [], "765": [73, 392], "769": 392, "77": [92, 318, 333], "7709": 333, "7716": 30, "7725": 75, "7742": 73, "777": 401, "778": 346, "779e": 123, "78": [92, 333], "78153": 2, "782": 317, "7828": [], "783": [73, 109, 153, 286], "784": 392, "787875175476074e": 327, "7883": 23, "788e": [327, 345], "789": [109, 140], "79": [30, 74, 333], "791": [41, 89, 323, 348], "7918": 327, "792": 67, "7921117": [92, 316], "793": [38, 39, 317], "793j": 341, "794": [41, 89, 323, 348], "7942": [], "796": 73, "7_cz0": [109, 247, 252, 327], "8": [2, 6, 16, 18, 23, 30, 49, 59, 65, 66, 69, 73, 74, 78, 89, 92, 94, 109, 118, 123, 156, 315, 318, 320, 321, 322, 323, 324, 325, 327, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 350, 392], "80": [27, 41, 73, 115, 324, 333, 339, 345, 346], "800": [73, 333, 336, 339], "8000": 30, "801": 18, "80100": [37, 89], "8044": 333, "805": 322, "8059": [], "807972021": [109, 285], "807e": 333, "8080601692199707": 348, "81": [62, 73, 333], "812": 333, "8121": [], "813": 341, "815": [41, 89, 323, 348], "816": [41, 89, 323, 348], "817": [41, 47, 317], "82": [24, 73, 92, 333], "821": 333, "8222": 327, "824e": 73, "826e": 73, "827": [351, 402], "829": [], "8292": 333, "83": [73, 92, 333], "831": [], "832": 339, "8366": 341, "837": [27, 28, 317], "8386": [], "84": [73, 92, 333], "840": [318, 339], "846": [], "85": [73, 333, 336], "850": 339, "85248": 92, "856": 335, "8567": 22, "857": [18, 73, 318, 335], "86": [73, 333, 346], "868": [30, 32, 317], "87": [23, 73, 92, 333], "87261": 119, "873": 333, "8757": 74, "876": [], "877": 271, "8798": [], "88": [16, 73, 92, 333], "881": 322, "882": [21, 23], "8842": 318, "8854": 333, "88615": 322, "8869": [], "89": [73, 333], "890": [344, 348], "891": [73, 339], "895": 318, "8h": 327, "8pfk5": [92, 316], "9": [2, 6, 18, 21, 23, 31, 37, 41, 62, 73, 74, 75, 89, 92, 97, 109, 118, 119, 157, 171, 238, 315, 318, 320, 321, 322, 323, 324, 325, 327, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 350, 376, 401], "90": [65, 73, 74, 75, 322, 333, 336, 340], "900": [333, 336], "9001": 30, "90063": 92, "901": 22, "904": 339, "905": [18, 37], "90500": [37, 89], "9059": 318, "905torr_lt_aft": [18, 37, 327, 345], "91": [73, 333], "911": [41, 89, 323, 348], "913": [41, 89, 323, 348], "9187": 333, "92": [73, 340], "920": [15, 76, 336], "922": [], "924": [15, 25, 317], "93": 73, "9327": [], "932926": 92, "9335": 92, "9342": 92, "94": [73, 123], "943": 346, "944": [39, 333], "945": 73, "9456": 92, "948": 335, "9499999999999995": 31, "95": [31, 65, 271, 320, 336], "950": [36, 39, 317], "956": 347, "959": 75, "9598": 333, "96": [19, 24, 74, 92, 320, 321, 335, 336, 339], "964e": [335, 338, 341], "9664": 332, "967": 327, "968": [322, 324], "96e": 338, "97": [19, 92, 320], "9718": 1, "9733": 333, "975": 322, "9755": 24, "976": 73, "98": [78, 109, 153, 286, 336], "982": 73, "984": 324, "9856": [], "99": [20, 22, 23, 65, 73, 75, 109, 123, 156, 336, 340], "990": 31, "9900990099009901": 31, "9964": 24, "997": [], "9977": 30, "998": 318, "9981": 24, "999": [18, 22, 23, 37, 327, 345], "99999": 62, "999999": [109, 211], "9999999999999997": 31, "A": [1, 2, 6, 8, 11, 17, 20, 22, 34, 37, 45, 49, 56, 66, 78, 80, 82, 86, 88, 89, 92, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 129, 132, 139, 141, 146, 153, 198, 202, 219, 222, 223, 228, 234, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 275, 284, 285, 286, 288, 291, 292, 293, 297, 298, 301, 302, 304, 314, 315, 316, 318, 321, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 358, 377, 397, 398], "AND": [2, 109, 129], "And": [66, 325, 336, 340], "As": [8, 17, 19, 21, 23, 36, 49, 62, 69, 78, 109, 157, 160, 232, 314, 318, 320, 321, 322, 323, 324, 325, 327, 333, 335, 336, 338, 339, 344, 345, 346, 348], "At": [109, 320, 326, 327], "Be": [9, 109, 267], "But": [36, 62, 78, 93, 109, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 315, 322, 327, 331, 333, 334, 336, 337, 339], "By": [18, 37, 41, 85, 89, 93, 95, 97, 99, 100, 102, 105, 108, 109, 112, 114, 115, 117, 122, 123, 130, 131, 140, 153, 154, 160, 168, 170, 200, 203, 218, 221, 225, 226, 227, 237, 267, 279, 281, 285, 286, 289, 294, 297, 300, 301, 302, 318, 326, 327, 331, 336, 343], "For": [2, 4, 5, 6, 8, 10, 18, 19, 20, 21, 37, 49, 62, 65, 66, 74, 78, 82, 83, 84, 85, 87, 89, 91, 94, 95, 97, 108, 109, 112, 117, 126, 127, 130, 133, 141, 142, 143, 144, 145, 146, 152, 153, 163, 168, 169, 172, 173, 177, 179, 182, 183, 186, 199, 200, 202, 215, 216, 218, 262, 264, 282, 284, 285, 286, 296, 297, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348, 350, 391], "If": [2, 3, 6, 10, 12, 13, 41, 81, 84, 85, 86, 88, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 136, 139, 140, 141, 142, 143, 144, 145, 151, 152, 156, 157, 158, 159, 162, 163, 164, 165, 167, 168, 170, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 186, 191, 194, 197, 199, 200, 202, 203, 204, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 271, 276, 279, 281, 282, 283, 285, 286, 289, 291, 292, 295, 296, 297, 300, 301, 302, 304, 308, 309, 320, 322, 325, 326, 331, 332, 333, 335, 336, 338, 339, 343, 348, 387, 395], "In": [2, 6, 15, 16, 18, 19, 20, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 44, 49, 53, 58, 59, 62, 65, 66, 69, 73, 86, 88, 90, 92, 93, 94, 95, 96, 97, 100, 102, 105, 108, 109, 112, 114, 115, 117, 122, 123, 139, 157, 161, 178, 194, 197, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 285, 297, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 334, 339, 341, 344, 346, 347, 390], "It": [22, 36, 38, 89, 91, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 133, 137, 165, 169, 170, 171, 196, 213, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 279, 300, 314, 318, 320, 321, 322, 323, 325, 326, 327, 330, 331, 333, 335, 336, 338, 339, 340, 343, 346, 356, 390, 397, 399], "Its": [90, 91, 123, 314, 322, 377], "NOT": [85, 109, 249, 267, 326, 344], "No": [2, 8, 109, 117, 144, 218, 219, 221, 222, 223, 225, 226, 227, 228], "Not": [99, 109, 115, 129, 144, 281, 325, 332, 337], "OF": [2, 336], "OR": [83, 109, 132], "Of": [338, 339], "On": [83, 85, 93, 109, 164, 320, 322, 332], "One": [2, 97, 109, 329, 333, 339, 342, 343, 348, 401], "Or": [6, 17, 321], "Such": 2, "THAT": 325, "THE": 2, "TO": [2, 336], "That": 344, "The": [2, 6, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 66, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 146, 154, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 171, 174, 175, 177, 178, 179, 181, 182, 183, 185, 186, 187, 190, 194, 195, 196, 197, 200, 202, 203, 204, 211, 212, 213, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 266, 267, 271, 276, 279, 280, 282, 283, 284, 285, 290, 296, 297, 300, 304, 308, 309, 314, 318, 319, 321, 322, 323, 324, 325, 326, 331, 332, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 347, 351, 362, 393, 395, 397, 399, 402], "Then": [19, 27, 85, 318, 322, 324, 326, 327, 330, 337, 339], "There": [10, 82, 97, 109, 194, 327, 333, 341], "These": [2, 22, 90, 318, 321, 322, 326, 331, 333, 336, 340, 346, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "Theses": 92, "To": [5, 18, 20, 22, 36, 37, 38, 41, 49, 73, 74, 83, 85, 94, 109, 119, 168, 186, 218, 236, 315, 318, 323, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 343, 344, 346, 348], "WILL": 336, "WITH": 2, "Will": [107, 113], "With": [97, 109, 129, 130, 131, 132, 200, 202, 203, 234, 285, 286, 297, 315, 318, 320, 326, 327, 331, 339], "_": [15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 89, 99, 314, 318, 320, 321, 322, 324, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348], "_1": [18, 37, 73, 98, 314, 333], "_2": [18, 37, 73, 98, 333], "_3": 73, "_4": 336, "__": 332, "__all__": 4, "__call__": 335, "__dataset_methods__": 4, "__init__": [325, 346], "__string___": 332, "_active_ctx": [119, 125], "_arg": 346, "_ax": [15, 16, 24, 31, 36, 49, 59, 109, 217, 318, 321, 323, 324], "_callback": 346, "_classic_test_patch": 336, "_context": 346, "_creat": 335, "_cstr": 335, "_dtype": 6, "_html_output": 335, "_i": 314, "_importer_method": 4, "_j": 314, "_modifi": 335, "_mpl": 336, "_nmf": 21, "_novalu": 119, "_optim": 75, "_plot1d_doc": [109, 218], "_plot2d_doc": [109, 219], "_plot3d_doc": [109, 220], "_prod_dispatch": 119, "_pseudo_sync_runn": 346, "_read_spc": 4, "_registri": [119, 125], "_repr_html_": 335, "_run": 346, "_run_cel": 346, "_run_cod": 346, "_run_module_as_main": 346, "_run_onc": 346, "_string_": 332, "_subplot": 345, "_text_width": 335, "a1": 339, "a2": 339, "a3": 339, "a350": 53, "a5": 6, "a6": 6, "a_1": 94, "a_decomposit": [16, 25, 317], "a_max": [109, 144], "a_min": [109, 144], "a_n": 94, "a_nddataset": [39, 317, 333], "aa": 339, "ab": [92, 94, 109, 127, 248, 285, 297, 327, 333, 339, 397], "abad0d": 92, "abc": [109, 139, 318, 397], "abcdef": 97, "abdelhafid": 92, "abdollahi": 92, "abil": 327, "abl": [12, 109, 237, 314, 339], "about": [1, 5, 82, 102, 109, 267, 279, 315, 324, 329, 334, 336, 339, 353, 377], "abov": [15, 23, 45, 85, 109, 159, 169, 315, 320, 321, 322, 326, 327, 330, 332, 333, 336, 337, 339, 340, 344, 346], "abscissa": [109, 157, 320], "absent": [109, 240, 242, 250, 251, 343], "absolut": [94, 109, 126, 285, 297, 320, 326, 327, 336], "absorb": [4, 15, 17, 24, 36, 38, 41, 89, 109, 140, 153, 202, 247, 248, 285, 286, 297, 308, 318, 320, 321, 322, 323, 324, 327, 333, 336, 339, 344, 345, 346, 348, 376, 378], "absorpt": [4, 92], "abstract": [16, 99], "ac": 92, "ac034173t": 92, "aca": [92, 316], "acc": 327, "acceler": 318, "accent": 332, "accept": [2, 109, 117, 125, 353, 363, 390, 392, 393, 397, 398], "access": [2, 13, 53, 85, 93, 109, 315, 327, 331, 333], "accompani": 2, "accord": [2, 98, 105, 109, 140, 241, 294, 314, 324, 325, 336, 377], "accordingli": [97, 109, 363], "account": [5, 10, 12, 109, 142, 154, 168, 179, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 320, 321, 353], "accumul": [109, 285, 297], "accur": 112, "accuraci": [94, 97, 109, 115, 285, 297, 327], "aceto": 92, "achiev": [94, 109, 128, 333, 337], "acid": [92, 316], "acknowledg": [2, 91], "acquir": [2, 333], "acquisit": [15, 18, 20, 23, 37, 41, 42, 59, 73, 75, 89, 109, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 282, 322, 323, 335, 338, 339, 341, 345], "acquisition_d": [4, 109], "acqus_fil": 73, "acr": 119, "acronym": [97, 109, 234], "across": [100, 112, 115], "acscat": [92, 316], "act": 2, "acta": [92, 339], "action": [6, 92, 94, 109, 360], "actionmasskinet": [20, 395, 399], "activ": [2, 5, 9, 12, 15, 21, 23, 30, 41, 42, 45, 50, 62, 78, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 96, 97, 99, 109, 118, 123, 139, 140, 146, 153, 169, 195, 202, 244, 247, 254, 276, 284, 285, 286, 295, 297, 302, 316, 318, 323, 333, 336, 337, 339, 344, 348], "activation_pca": 23, "actual": [6, 18, 19, 27, 66, 82, 95, 97, 109, 318, 320, 321, 322, 324, 326, 333, 337, 339, 345], "actul": 15, "ad": [2, 6, 7, 11, 18, 20, 84, 85, 90, 91, 95, 109, 118, 165, 169, 175, 212, 226, 239, 304, 309, 314, 329, 334, 339, 353, 359, 360, 367, 368, 369, 370, 373, 393, 397, 398], "adam": 94, "adapt": [2, 11, 12, 14, 25, 33, 108, 109, 111, 118, 122, 195, 237, 317, 332], "adata": 6, "add": [1, 3, 5, 6, 7, 10, 18, 20, 23, 24, 27, 37, 53, 73, 74, 75, 83, 86, 109, 118, 236, 318, 320, 321, 322, 324, 327, 332, 333, 335, 336, 337, 339, 343, 345, 346, 353, 361, 374, 375, 381, 382, 392, 394, 395, 399, 401], "add_coordset": 109, "add_dataset": [118, 335], "add_project": [118, 335], "add_script": 118, "addit": [2, 4, 6, 8, 36, 49, 90, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 141, 143, 154, 160, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 239, 276, 295, 314, 315, 322, 333, 334, 337, 344, 346, 351, 353, 368, 390, 402], "addition": [6, 232, 326, 333, 344], "address": [2, 109, 345], "adjac": [97, 109, 133], "adjust": [78, 109, 139, 239, 336], "adob": 336, "adopt": 83, "adrian": 92, "adsorb": 92, "adsorpt": [18, 89, 92, 316, 322, 327, 345], "advanc": [5, 90, 92, 109, 169, 316, 322, 326, 331, 342, 345], "advis": [3, 30, 109, 142, 179], "affect": [37, 90, 97, 109, 133, 169, 320, 322, 333, 336, 339, 342, 353, 377], "affn": [109, 243, 327], "after": [2, 6, 8, 10, 24, 62, 94, 108, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 310, 313, 314, 318, 322, 324, 326, 327, 336, 339, 340, 341, 345, 346, 348, 360, 375], "afterward": [115, 340], "ag": 92, "again": [22, 62, 109, 237, 247, 248, 320, 327, 336], "against": [2, 97, 109, 129, 130, 131, 132, 200, 202, 203, 234, 285, 286, 297], "agg": 336, "agg_path_chunks": 336, "aggreg": 334, "agir": 92, "agirdata": [109, 239, 259], "agre": 2, "agreement": 2, "ahap": [107, 113], "ahead": 6, "aim": 213, "ait": [92, 316, 325], "aka": 112, "akbari": 92, "al": [14, 17, 24, 25, 33, 74, 91, 92, 94, 95, 97, 99, 100, 105, 108, 109, 112, 115, 122, 123, 237, 280, 314, 316, 317, 319, 321, 329, 331, 339, 360, 392, 398], "al2o3": 327, "alberto": 92, "alchem0x2a": 46, "alert": 332, "alessandro": 92, "alexandr": 92, "algorithm": [62, 66, 73, 89, 90, 92, 94, 95, 99, 100, 105, 108, 109, 112, 115, 117, 122, 123, 137, 142, 158, 179, 267, 279, 280, 300, 314, 320, 322, 339, 346, 360, 397], "alia": [4, 89, 95, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 168, 205, 206, 207, 208, 209, 210, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 252, 254, 255, 267, 269, 272, 276, 279, 295, 300, 303, 305, 306, 307, 338, 397, 398], "align": [91, 109, 329, 336, 342, 356, 358], "alinaghi": 92, "all": [2, 6, 9, 12, 13, 21, 23, 31, 45, 46, 49, 73, 74, 82, 84, 85, 89, 90, 91, 95, 97, 98, 99, 100, 101, 105, 108, 109, 112, 114, 115, 117, 118, 122, 123, 128, 130, 131, 132, 140, 145, 146, 162, 164, 167, 169, 171, 178, 185, 194, 197, 200, 203, 204, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 265, 282, 283, 284, 314, 315, 317, 318, 319, 320, 322, 325, 326, 330, 331, 332, 333, 336, 338, 339, 344, 345, 346, 354, 358, 386, 401], "alladio": 92, "allevi": [109, 285, 297], "allitem": 118, "allnam": 118, "alloc": [97, 109, 171], "allow": [2, 3, 6, 10, 12, 22, 36, 85, 90, 94, 96, 97, 98, 99, 109, 139, 171, 239, 281, 318, 320, 324, 326, 327, 330, 333, 334, 335, 337, 338, 339, 344, 348, 375, 377, 392, 397, 399], "allows_non": 109, "almost": [95, 109, 137, 185, 323, 333], "alon": [12, 327], "along": [41, 73, 74, 75, 91, 95, 97, 100, 102, 108, 109, 128, 129, 130, 131, 132, 134, 135, 137, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 153, 157, 158, 163, 177, 179, 181, 182, 183, 200, 202, 203, 204, 234, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 268, 276, 279, 280, 281, 282, 284, 285, 286, 295, 296, 297, 300, 327, 336, 339, 342, 345, 346, 358], "alpha": [100, 109, 117, 177, 182, 183], "alpha_h": 112, "alpha_w": 112, "alphabet": 98, "alreadi": [5, 12, 13, 15, 23, 87, 98, 100, 109, 315, 318, 326, 327, 330, 331, 344, 374, 395], "als2004dataset": [17, 19, 24, 320, 321], "also": [6, 8, 13, 17, 19, 22, 27, 38, 41, 49, 59, 62, 66, 73, 85, 90, 91, 93, 94, 97, 99, 100, 108, 109, 112, 114, 115, 117, 122, 123, 128, 133, 158, 170, 198, 224, 237, 247, 315, 318, 320, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 342, 343, 346, 390, 393, 396, 397], "alt": 332, "alter": [2, 336], "altern": [19, 69, 78, 92, 108, 109, 112, 118, 195, 214, 314, 316, 320, 331, 333, 336, 341, 346], "although": 90, "alwai": [4, 6, 8, 90, 94, 95, 96, 97, 107, 109, 113, 117, 232, 285, 297, 315, 318, 321, 325, 326, 331, 333, 336], "amax": [97, 109, 131, 200, 203], "ambigu": 333, "amend": 2, "amic": 2, "amin": [97, 109, 130, 200, 203], "among": [78, 91, 94, 95, 97, 98, 105, 106, 109, 158, 204, 218, 219, 220, 222, 223, 224, 228, 229, 230, 281, 314, 322], "amount": [6, 22, 109, 115, 156, 163, 181, 204, 314, 336, 340], "amp": 325, "ampl": [30, 74, 138, 176, 198, 232, 275, 298, 318], "amplitud": [114, 318, 336], "amplitude_mod": 114, "amsterdam": 20, "an": [1, 2, 6, 8, 9, 18, 19, 20, 30, 36, 40, 43, 46, 47, 55, 73, 74, 75, 78, 84, 85, 89, 90, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 156, 157, 158, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 179, 181, 182, 183, 186, 188, 199, 200, 203, 204, 211, 212, 215, 216, 222, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 267, 276, 279, 280, 282, 283, 285, 288, 289, 291, 292, 293, 295, 296, 297, 300, 303, 305, 306, 307, 308, 309, 314, 316, 317, 318, 319, 320, 321, 323, 325, 326, 327, 331, 332, 333, 334, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 393, 395, 398, 399], "ana": 92, "anaconda": [83, 368], "anal": 346, "analys": [90, 91, 320, 325], "analysi": [1, 14, 15, 20, 22, 24, 25, 71, 72, 76, 81, 83, 91, 92, 97, 98, 99, 100, 105, 106, 108, 109, 112, 114, 115, 122, 123, 163, 168, 169, 215, 237, 247, 256, 280, 314, 316, 317, 318, 320, 324, 329, 331, 339, 361, 391, 395, 397, 398, 399], "analyt": 92, "analytica": [92, 339], "analyticalsciencejourn": 92, "analyz": [0, 89, 109, 169, 331], "anamysi": 115, "andrea": 92, "ang": 2, "angle3": 322, "ani": [2, 5, 6, 10, 12, 49, 82, 85, 86, 88, 90, 91, 93, 95, 97, 99, 100, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 129, 130, 131, 133, 139, 146, 158, 200, 203, 215, 219, 222, 223, 228, 266, 267, 276, 279, 284, 300, 314, 320, 322, 326, 327, 330, 331, 332, 336, 337, 339, 393], "anim": 336, "anna": 92, "annal": 22, "annemi": 92, "annex": 2, "annot": [73, 74, 115, 322, 329], "anomal": [109, 157], "anoth": [53, 65, 66, 97, 109, 160, 190, 321, 324, 327, 328, 333, 336, 339, 345, 348], "answer": [339, 345], "antialias": 336, "anyio": 6, "anymor": 392, "anyth": 336, "anytim": 336, "apcatb": [92, 316], "api": [10, 12, 17, 19, 21, 22, 23, 24, 27, 41, 46, 78, 81, 82, 86, 88, 89, 90, 91, 97, 109, 175, 314, 318, 320, 321, 322, 323, 324, 326, 327, 329, 333, 335, 337, 338, 340, 341, 342, 343, 344, 345, 347, 348, 353, 361, 366, 373, 386], "apod": [58, 59, 60, 81, 91, 109, 141, 143, 163, 168, 177, 181, 182, 183, 186, 235, 278, 282, 296, 317, 329, 341, 342, 343, 382], "apod_arr": [109, 141, 143, 163, 177, 181, 182, 183, 282, 296], "app": 346, "appar": [65, 340], "appear": [41, 73, 78, 109, 161, 314, 327, 337], "append": [4, 73, 109, 111, 118, 333, 346], "appl": [327, 336], "appli": [2, 6, 8, 23, 38, 58, 59, 69, 74, 78, 89, 92, 95, 98, 99, 100, 102, 105, 108, 109, 112, 114, 115, 117, 122, 123, 141, 143, 146, 147, 148, 152, 156, 157, 163, 168, 172, 173, 177, 181, 182, 183, 186, 199, 214, 215, 216, 262, 264, 267, 268, 279, 282, 284, 296, 300, 316, 320, 322, 331, 333, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 397], "applic": [2, 75, 90, 92, 93, 97, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 314, 315, 320, 331, 333, 334, 339, 346, 353], "approach": [62, 90, 92, 95, 316, 342], "appropri": [6, 82, 85, 109, 169, 333], "approxim": [20, 94, 100, 107, 109, 112, 113, 276, 295, 322], "apt": [5, 83, 87, 327], "aq": [109, 282, 338], "ar": [0, 2, 3, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 38, 45, 49, 53, 58, 66, 73, 74, 75, 78, 81, 82, 85, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 136, 139, 140, 142, 144, 157, 158, 159, 161, 167, 168, 169, 170, 171, 177, 178, 179, 190, 194, 197, 200, 202, 203, 204, 214, 218, 219, 222, 223, 228, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 267, 268, 276, 279, 281, 282, 285, 286, 290, 297, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 327, 330, 331, 333, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "arang": [16, 94, 97, 109, 140, 170, 175, 178, 197, 212, 309, 321, 333, 344, 345], "arbitrari": [94, 100, 109, 164, 232, 318, 337, 399], "arbitrarili": [107, 113, 117], "arc3": 336, "archiv": [27, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "area": [46, 73, 75, 108, 109, 114, 116, 218, 221, 225, 226, 227, 323], "arg": [4, 98, 108, 109, 115, 118, 122, 125, 138, 155, 166, 176, 188, 198, 214, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 275, 276, 277, 298, 299, 302, 303, 304, 305, 306, 307, 346], "argmax": [97, 109, 130, 131, 200, 203, 314, 324], "argmin": [97, 109, 130, 131, 200, 203], "argnam": 118, "argsgetconc": [20, 108], "argsgetspec": 108, "argument": [6, 17, 19, 21, 31, 41, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 122, 123, 126, 127, 128, 133, 146, 161, 178, 194, 197, 205, 206, 207, 208, 209, 210, 214, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 318, 324, 325, 326, 327, 333, 336, 344, 346, 353, 363, 390, 397], "ari": 92, "aris": [2, 329, 333], "arithmet": [97, 109, 140, 178, 202, 285, 286, 297, 333], "armin": 92, "arnaud": [0, 92], "around": [6, 91, 97, 102, 109, 157, 263, 267, 279, 331, 333, 336, 340, 343, 348], "arpack": 115, "arr": 6, "arrai": [6, 8, 16, 20, 23, 31, 36, 41, 73, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 133, 140, 141, 143, 144, 145, 147, 148, 153, 154, 159, 160, 161, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 181, 182, 183, 184, 185, 187, 194, 197, 200, 202, 203, 204, 211, 212, 214, 219, 220, 236, 238, 239, 241, 245, 246, 260, 261, 267, 268, 279, 282, 283, 285, 286, 288, 290, 291, 292, 296, 297, 300, 308, 309, 311, 312, 314, 315, 327, 333, 335, 337, 342, 343, 345, 353, 395, 398], "arrang": [2, 204, 345], "array_lik": [94, 97, 109, 129, 130, 131, 132, 140, 144, 147, 148, 153, 158, 159, 194, 197, 200, 202, 203, 285, 286, 297], "arrheniu": 94, "arrowprop": [322, 336], "arrowstyl": [322, 336], "art": 2, "articl": [2, 92, 316, 336], "artifact": [89, 336, 347], "artifici": 344, "arxiv": 92, "asc": [109, 249, 354], "ascend": 345, "asfortranarrai": 109, "asi": 346, "ask": 82, "asl": [8, 62, 78, 95, 109, 142, 158, 179, 280, 314, 339, 397], "aspect": 329, "assert": [4, 6, 15, 31, 53, 109, 111, 118], "assert_array_equ": 6, "assert_dataset_equ": 6, "assess": 322, "assign": [27, 109, 238, 326, 333, 345], "assist": 2, "associ": [2, 98, 109, 118, 140, 314, 322], "assum": [15, 46, 53, 73, 94, 95, 98, 109, 140, 163, 181, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 271, 321, 326, 331, 333, 337, 344], "assumpt": 115, "assymetri": 62, "asterisk": 332, "astyp": [6, 97, 109, 341], "asym": [30, 138, 275, 318], "asymmetr": [62, 92, 95, 109, 137, 138, 142, 158, 179, 280, 314, 318, 339], "asymmetri": [62, 78, 95, 109, 137, 339], "asymmetricvoigtmodel": [30, 318], "async_": 346, "async_help": 346, "asyncio": 346, "asyncio_loop": 346, "atleast_2d": 109, "atmospher": [92, 316], "atol": 94, "atom": 92, "atomiqu": 2, "atr": [92, 316], "attach": [2, 10, 332], "attack": 2, "attempt": [109, 161, 237, 247, 326, 331, 333], "attent": 2, "attribut": [2, 15, 18, 22, 23, 37, 38, 53, 62, 78, 90, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 125, 138, 176, 198, 232, 267, 275, 279, 290, 298, 300, 320, 321, 322, 324, 327, 334, 335, 336, 337, 339, 343, 377, 382, 391, 393], "aug": 92, "augment": 319, "authent": 2, "author": [0, 2, 6, 18, 20, 22, 23, 36, 41, 73, 74, 75, 89, 109, 320, 321, 323, 325, 327, 331, 333, 335, 338, 341, 344, 345, 348], "auto": [6, 109, 115, 128, 218, 221, 224, 225, 226, 227, 336], "auto_examples_analysi": [25, 28, 32, 34], "auto_examples_cor": [39, 47, 51, 54, 56, 333], "auto_examples_process": [60, 63, 67, 70, 76, 79, 80], "autoampl": 114, "autobas": [30, 114, 318], "autohint": 336, "autolayout": [109, 219, 220, 222, 223, 228, 229, 230, 320, 321, 336], "autom": [6, 18, 319], "automat": [2, 6, 22, 24, 41, 90, 91, 94, 95, 97, 105, 109, 114, 118, 128, 137, 139, 142, 156, 158, 169, 179, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 280, 284, 304, 318, 322, 333, 335, 336, 339, 341, 343, 360, 377, 379, 386, 393, 395], "automatiqu": 2, "automobil": [92, 316], "autoposit": 336, "autoscal": [30, 74, 318], "autosub": [95, 109, 137, 142, 158, 179, 280], "avail": [2, 4, 27, 30, 49, 66, 73, 74, 102, 109, 117, 162, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 293, 304, 326, 333, 336, 339, 340, 393, 397, 399], "available_nam": 98, "available_styl": [109, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 336], "avant": 336, "averag": [100, 102, 109, 112, 157, 202, 204, 276, 279, 285, 297, 336, 342], "avers": 90, "avg": [102, 109, 140, 276, 279, 346], "avoid": [6, 41, 74, 82, 98, 108, 322, 325, 326, 333, 336, 338, 344, 345, 362, 390], "await": 346, "awar": [109, 169, 267, 315, 333, 334, 335, 337, 377], "ax": [4, 18, 21, 22, 27, 30, 50, 62, 69, 73, 74, 95, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 129, 130, 132, 200, 204, 210, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 318, 320, 321, 322, 324, 327, 333, 336, 339, 341, 343, 344, 345, 346, 348, 363], "ax1": 336, "axe21": 339, "axec": 109, "axect": 109, "axei": 109, "axes3d_grid": 336, "axes_autolimit_mod": 336, "axes_axisbelow": 336, "axes_edgecolor": 336, "axes_facecolor": 336, "axes_formatter_limit": 336, "axes_formatter_offset_threshold": 336, "axes_formatter_use_local": 336, "axes_formatter_use_mathtext": 336, "axes_formatter_useoffset": 336, "axes_grid": 336, "axes_grid_axi": 336, "axes_grid_which": 336, "axes_labelcolor": 336, "axes_labelpad": 336, "axes_labels": 336, "axes_labelweight": 336, "axes_linewidth": 336, "axes_prop_cycl": 336, "axes_spines_bottom": 336, "axes_spines_left": 336, "axes_spines_right": 336, "axes_spines_top": 336, "axes_titlei": 336, "axes_titlepad": 336, "axes_titles": 336, "axes_titleweight": 336, "axes_unicode_minu": 336, "axes_xmargin": 336, "axes_ymargin": 336, "axessubplot": 345, "axex": 109, "axhlin": 322, "axi": [4, 8, 15, 19, 20, 30, 36, 42, 46, 74, 96, 97, 98, 100, 102, 109, 115, 119, 128, 129, 132, 134, 135, 139, 140, 141, 143, 146, 149, 150, 152, 153, 156, 163, 168, 172, 173, 177, 181, 182, 183, 186, 189, 199, 202, 204, 215, 216, 218, 221, 225, 226, 227, 262, 264, 267, 276, 279, 281, 282, 284, 285, 286, 287, 295, 296, 297, 300, 318, 320, 321, 336, 339, 343, 344, 345, 348, 355, 399], "axrrai": [109, 293], "axt": 109, "axvlin": [73, 322], "az1721": [], "az1774": [18, 22, 23, 41, 73, 74, 75, 89, 320, 321, 323, 327, 331, 333, 335, 338, 341, 344, 345, 348], "azzolina": 92, "b": [0, 2, 5, 15, 20, 45, 49, 58, 59, 69, 78, 90, 92, 94, 97, 109, 119, 126, 127, 138, 139, 146, 161, 236, 239, 241, 284, 318, 325, 328, 332, 333, 336, 338, 346], "b1": [2, 49], "b2": [16, 49], "b3": 49, "b350": 53, "b4": 49, "b978": 92, "b9780444527011000478": 92, "b_1": 94, "b_crossdecomposit": [28, 317], "b_ev": [15, 16, 99], "b_n": 94, "ba": 78, "back": [97, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 170, 325, 332, 336, 338], "backend": [96, 336, 375], "background": [92, 109, 238, 240, 242, 250, 251, 255, 327, 336, 375], "backgroung": [109, 240, 242, 250, 251], "backslash": 326, "backtick": 8, "backward": [15, 16, 94, 99, 109, 327, 336, 345, 397], "bad": [117, 395], "badli": [66, 340], "bai": 322, "balan": 92, "balanc": 346, "band": 343, "bar": [13, 17, 100, 109, 115, 218, 221, 326, 336, 374], "bare": 6, "barrier": [92, 316], "bartlett": [102, 109, 163, 177, 181, 235, 277, 278, 279, 282, 296, 346], "basc": [62, 95, 109, 137, 158, 179, 280, 318, 342, 359, 397], "base": [1, 2, 3, 16, 62, 73, 84, 85, 92, 94, 95, 97, 99, 109, 115, 137, 157, 169, 178, 192, 197, 213, 217, 237, 267, 279, 291, 300, 316, 321, 322, 324, 326, 327, 331, 336, 339, 340, 341, 344, 346, 354, 397, 398, 399], "base64": [100, 108], "base_ev": 346, "baseconfigur": [95, 99, 100, 102, 105, 107, 108, 112, 113, 115, 117, 122, 123], "basefileselector": 392, "baseformatt": 335, "baselin": [8, 63, 66, 72, 73, 76, 81, 90, 91, 92, 96, 109, 114, 137, 139, 142, 154, 158, 169, 179, 218, 221, 225, 226, 227, 232, 256, 280, 314, 317, 323, 329, 331, 340, 342, 353, 356, 358, 359, 360, 397], "baselinecorrect": [96, 397], "baselinecorrector": 375, "baseobject": 335, "bash": 83, "basi": [2, 6, 109, 218, 221, 225, 226, 227, 314], "basic": [4, 5, 49, 62, 65, 89, 90, 109, 169, 325, 329, 331, 333, 336, 339, 342], "basinhop": 114, "bastl": 92, "bat": 88, "batch": 88, "bazin": 92, "bbox": [322, 336], "bd": 78, "bdf": 94, "beam": [92, 327], "beata": 92, "becaus": [90, 107, 109, 113, 117, 129, 322, 326, 327, 330, 333, 336, 337, 345, 346], "becom": [2, 109, 144, 344], "been": [2, 11, 12, 18, 41, 46, 73, 96, 97, 98, 109, 160, 184, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 320, 322, 326, 327, 331, 333, 335, 336, 338, 339, 341, 343, 344, 345, 348, 355, 373, 377, 393, 395, 397, 398, 399], "beequal": 333, "befor": [6, 8, 12, 78, 82, 84, 90, 95, 97, 100, 108, 109, 112, 117, 130, 131, 140, 141, 143, 163, 177, 181, 182, 183, 200, 203, 268, 282, 285, 296, 297, 320, 324, 327, 331, 332, 336, 338, 339, 341, 343, 345, 346, 347, 356, 391], "begin": [73, 318], "beginn": 331, "behav": [318, 326, 333, 335], "behavior": [12, 19, 97, 109, 151, 325, 353, 366, 377, 387, 395], "behaviour": [109, 282, 325, 333, 338, 372, 399], "behind": 2, "being": [2, 31, 109, 283, 322], "belarra": 92, "bell": [57, 60, 71, 109, 235, 256, 278, 282, 317, 338, 346], "belong": [95, 339], "below": [30, 74, 97, 109, 159, 197, 232, 282, 285, 297, 315, 318, 320, 322, 323, 325, 326, 327, 330, 333, 336, 338, 339, 344, 346, 401], "benefici": 94, "benefit": 90, "benzen": [4, 109, 253], "bernstein": 92, "bert": 92, "besid": [2, 325, 346], "best": [2, 49, 50, 59, 62, 69, 73, 85, 107, 109, 113, 117, 158, 318, 321, 323, 336, 346], "beta": 112, "beta_loss": 112, "better": [12, 20, 22, 49, 62, 73, 78, 84, 95, 109, 112, 137, 322, 324, 334, 336, 339, 340, 346, 353, 401], "between": [2, 22, 23, 66, 89, 94, 95, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 123, 128, 133, 137, 157, 169, 194, 197, 204, 224, 238, 320, 322, 323, 334, 336, 345, 346, 347, 350], "bevel": 336, "bewar": 336, "beyond": [327, 345, 346], "beyramysoltan": 92, "bhat": 92, "bibliographi": 91, "bibtex": 0, "bidimension": 115, "big": [44, 333], "bijlsma": [20, 92], "bilinear": 336, "billion": 327, "bin": [5, 83, 86, 87, 336], "binari": [2, 109, 118, 195, 315, 327, 333, 334, 337, 338, 341, 342], "bind": 2, "biomol": 1, "biosystem": 20, "black": [31, 49, 73, 74, 318, 322, 336], "blackman": [102, 109, 143, 279, 346], "blackmanharri": [109, 163, 177, 181, 235, 277, 278, 282, 296], "blake": [36, 333], "blal": [92, 316, 325], "blank": [8, 46, 204, 332, 336], "blc": [62, 78, 89, 323, 339], "blend": 117, "blob": 46, "block": [30, 74, 90, 318, 327, 332], "blue": [49, 320, 322, 332, 336], "bm": [327, 336], "bmh": 336, "bodi": 346, "boelen": [62, 92, 95, 109, 137], "bogaert": 92, "bokeh": 3, "bokhoven": 92, "bold": [332, 336], "bolder": 336, "bole": 92, "bookman": 336, "bool": [8, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 125, 128, 129, 130, 131, 132, 139, 141, 143, 151, 152, 161, 163, 168, 169, 172, 173, 177, 178, 181, 182, 183, 186, 191, 194, 197, 199, 200, 202, 203, 204, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 268, 281, 282, 283, 285, 286, 287, 289, 291, 292, 294, 296, 297, 310, 311, 312, 313, 345], "boolean": [95, 100, 109, 125, 129, 132, 344], "border": [322, 336], "both": [2, 5, 16, 19, 27, 95, 96, 98, 108, 109, 117, 121, 168, 177, 218, 221, 225, 226, 227, 314, 320, 321, 323, 324, 327, 333, 336, 337, 339, 340, 341, 346, 396], "bottom": [78, 81, 204, 335, 336], "bound": 395, "boundari": [117, 336, 346], "boussard": 92, "box": [109, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 322, 328, 336], "boxstyl": 322, "bp": [2, 339], "br": 332, "brace": 8, "bracket": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 333], "braga": 92, "braket": [109, 247], "branch": [5, 108], "braun": [138, 318], "breach": 2, "break": [6, 339, 350, 372], "breakag": 6, "breakpoint": [95, 109, 158, 339], "brew": [5, 83, 87], "brian": 326, "brief": [322, 336], "bright": 336, "broad": 2, "broadcast": [97, 109, 129, 130, 131, 132, 144, 200, 202, 203, 234, 285, 286, 297, 337, 344], "broaden": [58, 109, 163, 181, 340, 342], "broken": 360, "brought": 2, "brown": 92, "browser": [85, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "bruker": [40, 44, 47, 55, 58, 59, 73, 74, 75, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 282, 317, 326, 328, 333, 335, 338, 341, 347, 353], "brukeropusread": [1, 327], "bsd": 90, "bsd3": [109, 184], "bug": [5, 12, 82, 90, 91, 325, 327, 345, 350, 373], "build": [5, 6, 11, 18, 360, 367, 386, 389], "builder": 9, "built": [8, 12, 73, 75, 89], "builtin": 346, "bunch": 94, "busi": 2, "buten": [92, 316], "butt": 336, "button": [13, 96, 101], "byte": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "b\u00f6r": 92, "c": [1, 2, 16, 19, 20, 21, 24, 27, 31, 49, 59, 66, 73, 78, 83, 84, 86, 88, 89, 92, 93, 94, 97, 98, 99, 100, 105, 108, 109, 112, 115, 117, 122, 123, 146, 161, 172, 173, 218, 221, 225, 226, 227, 262, 284, 314, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 353, 391, 392], "c0": [20, 36, 97, 320, 333], "c1": [15, 36, 97, 333], "c2": [15, 36], "c3": 15, "c3cp51146d": 92, "c_": [20, 108], "c_0": 320, "c_10": 232, "c_2": [232, 318], "c_3": [232, 318], "c_4": [232, 318], "c_5": 232, "c_6": 232, "c_7": 232, "c_8": 232, "c_9": 232, "c_constrain": [20, 108], "c_constrained_list": 108, "c_curvefit": [32, 317], "c_exp": 94, "c_i": [232, 318], "c_import": [47, 317], "c_l": 108, "c_ls_list": 108, "c_name": 94, "c_pressur": [18, 37], "c_t": 108, "c_time": [18, 37], "c_wavelength": 37, "c_wavenumb": 37, "ca": [106, 109, 162, 339], "cadmium": 347, "calc": 322, "calcul": [16, 31, 38, 78, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 126, 127, 140, 141, 143, 153, 157, 163, 168, 169, 177, 179, 181, 182, 194, 201, 232, 233, 282, 285, 286, 296, 297, 318, 322, 333, 342, 343, 344, 345], "calibr": [27, 324], "call": [2, 6, 22, 88, 95, 97, 99, 100, 101, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 170, 175, 195, 237, 247, 248, 289, 314, 321, 324, 326, 327, 331, 332, 335, 339, 343, 344, 346, 385, 391], "callabl": [94, 97, 100, 106, 108, 109, 170, 214], "callback": 114, "callback_everi": 114, "callegaro": 92, "can": [2, 6, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 82, 84, 85, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 129, 130, 131, 132, 140, 144, 146, 147, 148, 157, 158, 160, 162, 165, 169, 175, 194, 195, 200, 203, 212, 218, 219, 226, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 267, 271, 279, 284, 285, 289, 297, 300, 309, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 358, 359, 363, 379, 384, 385, 399, 401], "cancel": [2, 326], "cannot": [22, 38, 44, 90, 97, 109, 112, 118, 119, 289, 320, 322, 325, 327, 332, 333, 335, 336, 337, 344, 347, 348], "cantera": [6, 360, 367, 401], "cap": 336, "capabl": [89, 91, 109, 315, 333, 334, 336, 339], "capit": 2, "caption": 332, "captur": [92, 314, 316], "care": [6, 66, 97, 109, 133, 340], "carefulli": [73, 332], "cargil": 27, "carlson": 92, "carmen": 92, "carolin": 92, "carri": [2, 122, 314, 320, 333], "carriag": 332, "carrier": 92, "carroucel": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 314], "carroucell_samp": [109, 238], "casali": 92, "case": [2, 4, 6, 22, 36, 41, 73, 74, 90, 94, 95, 97, 99, 100, 102, 105, 108, 109, 112, 114, 115, 117, 122, 123, 129, 132, 133, 139, 140, 177, 178, 194, 197, 236, 267, 314, 318, 322, 323, 325, 327, 330, 331, 333, 339, 340, 341, 343, 346, 348, 396], "cast": [6, 97, 107, 109, 113, 344], "castillejo": 92, "catal": 92, "catalysi": [92, 316], "catalyst": [18, 92, 316, 322], "catalyt": [92, 316], "catch": [109, 139, 322, 325], "categor": 325, "categori": [82, 319], "catherin": 92, "cauchi": [198, 318], "caught": 325, "caus": [2, 6, 109, 285, 297, 325, 336], "caution": [109, 164], "cc79a7": 336, "ccount": [320, 321, 336], "ccurr": 108, "cd": [5, 87, 88, 93, 112, 330], "cdot": [100, 108, 314, 323, 392], "ce": 2, "cea": 2, "cecil": [0, 2, 90, 325], "cedex": 2, "ceil": [97, 109, 136, 263], "cell": [18, 37, 85, 92, 314, 316, 325, 326, 330, 332, 336, 339], "cell_nam": 346, "cem": 92, "center": [15, 16, 18, 24, 31, 107, 113, 318, 321, 322, 336, 361], "centerednorm": 336, "centimet": 322, "centr": [2, 92], "central": [336, 346], "centuri": 336, "certain": 336, "certainli": [326, 331], "cexp": 94, "cfbruker": [109, 282, 338], "chain": [109, 214, 320], "chanc": 346, "chanceri": 336, "chang": [11, 15, 18, 19, 20, 37, 38, 42, 53, 62, 73, 89, 90, 91, 93, 94, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 191, 194, 218, 219, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 279, 289, 300, 320, 322, 325, 326, 327, 329, 333, 335, 339, 342, 344, 346, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 394, 396, 397, 398, 400, 402], "changelog": [4, 6, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "channel": [18, 82, 86, 109, 249, 368], "char": [97, 98, 318], "charact": [326, 332, 335], "character_cod": 336, "characterist": [2, 78, 331], "charg": 2, "charlott": 92, "charter": 336, "check": [6, 17, 21, 50, 62, 82, 83, 84, 86, 88, 89, 90, 91, 97, 109, 111, 114, 118, 119, 125, 144, 190, 249, 267, 281, 314, 322, 326, 331, 333, 335, 339, 368, 369, 377, 380, 389], "check_upd": 372, "checkout": 5, "chellaboina": [92, 94], "chem": [91, 92, 346], "chemic": [84, 90, 92, 94, 105, 106, 316], "chemistri": [0, 92, 325], "chemolab": [92, 320, 321], "chemometr": [16, 24, 92, 331], "chemrxiv": [92, 316], "chen": 92, "chesnai": 2, "chevali": 92, "chimica": [92, 339], "chn": 327, "choic": [3, 8, 62, 94, 321], "choos": [2, 69, 82, 85, 109, 217, 322, 330, 331, 339, 346], "chosen": [66, 83, 106, 109, 156, 218, 221, 224, 225, 226, 227, 314, 326, 340], "christian": [0, 92], "chromatograph": 92, "chromatographi": 92, "chrome": 85, "ci": 360, "circular": [109, 152, 332], "circumcircl": 105, "circumst": 2, "citat": 90, "cite": [91, 105, 340, 360], "ckin": 20, "cl": [97, 109, 119, 170, 194, 197], "claim": [2, 331], "clariti": [320, 321, 339], "class": [8, 9, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 129, 132, 137, 138, 142, 158, 176, 179, 195, 198, 232, 237, 247, 248, 275, 280, 298, 315, 319, 320, 332, 333, 339, 395, 397, 399], "classic": [22, 50, 97, 109, 196, 320, 326, 336, 339, 345], "classif": 22, "classmethod": [109, 118, 119, 175, 237, 247, 248], "clayton": 92, "clean": [9, 95, 213, 353, 388], "clear": [9, 20, 27, 30, 31, 58, 59, 62, 66, 69, 73, 74, 78, 109, 117, 218, 219, 221, 222, 223, 225, 226, 227, 228, 318, 320, 322, 324, 336, 338, 339, 340, 341, 343, 346, 348], "clearli": [6, 320, 321, 339, 340, 346], "click": [6, 13, 82, 90, 101, 330], "client": 5, "climat": 362, "clip": 109, "clock": [109, 238], "clone": [5, 6, 13, 85, 87], "close": [8, 30, 94, 97, 109, 194, 314, 322, 323, 339, 343, 346, 397], "close_figur": 109, "closer": [109, 169, 339], "closest": [93, 109, 168, 186, 345], "closur": [92, 108, 314], "closureconc": 108, "closuremethod": 108, "closuretarget": 108, "cloud": [85, 368], "cm": [15, 17, 18, 20, 23, 36, 37, 38, 41, 49, 73, 89, 97, 109, 140, 202, 247, 276, 295, 318, 322, 323, 327, 333, 336, 339, 343, 345, 346, 348], "cmap": [20, 27, 49, 117, 320, 324, 336, 339, 384, 390], "cmd": 88, "cnr": 2, "co": [18, 37, 89, 92, 109, 177, 182, 183, 316, 322, 327, 345], "co2": 92, "cobalt": [92, 316], "coca": [92, 316], "code": [2, 4, 5, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 82, 85, 90, 315, 330, 332, 333, 342, 346, 362, 386, 388], "code_ast": 346, "code_obj": 346, "codeclim": [360, 365], "coef": [31, 107, 109, 113, 139, 318], "coeffici": [92, 107, 109, 113, 117, 139, 177, 346], "coerc": 344, "coher": 2, "col": 204, "colab": [83, 354, 360, 380, 392, 401], "colaboratori": [83, 369, 380], "cold": [36, 333], "collect": [6, 98, 109, 247, 314, 382], "collection_length": 382, "collis": 336, "colomap": 336, "colon": [335, 345], "color": [31, 49, 58, 59, 62, 69, 73, 74, 78, 95, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 204, 218, 221, 224, 225, 226, 227, 318, 320, 322, 336, 338, 339, 346, 353, 390], "color_map": [22, 115], "colorbar": [18, 37, 45, 73, 89, 109, 204, 219, 220, 222, 223, 228, 229, 230, 322, 323, 336, 337, 344, 348], "colorblind": [95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 336], "colorblind10": 336, "colormap": [17, 21, 49, 73, 89, 95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 322, 323, 336, 337, 339, 344, 348, 399], "colorscal": 353, "colorspec": 336, "column": [15, 19, 20, 21, 23, 46, 74, 94, 109, 115, 161, 167, 185, 204, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 314, 320, 321, 336, 345, 348], "columnwis": 320, "com": [5, 27, 41, 46, 83, 85, 87, 92, 320, 324, 332, 339, 346, 393], "combin": [92, 112, 316, 326, 336], "come": [2, 97, 109, 234, 318, 325, 326, 327], "comfort": 330, "comma": [335, 336, 345], "command": [15, 36, 82, 83, 85, 88, 90, 93, 109, 218, 221, 225, 226, 227, 325, 326, 330, 336, 339, 347, 401], "commenc": 2, "comment": [6, 12, 17, 30, 73, 74, 75, 78, 109, 318, 333], "commerci": [2, 90], "commissariat": 2, "commit": [2, 5, 11, 350], "common": [6, 30, 74, 89, 109, 177, 218, 221, 225, 226, 227, 318, 327, 333, 337], "commonli": [123, 298, 318], "commonratio": 74, "commonwidth": 74, "commun": [2, 12, 82, 90, 92], "como": [322, 327], "compact": 119, "compani": 90, "compar": [6, 15, 19, 20, 27, 97, 109, 157, 190, 320, 324, 336, 339, 341, 343, 346, 361], "comparison": [6, 62, 65, 321, 337, 340, 342, 353, 356, 359], "compart": 327, "comparti": 327, "compat": [2, 41, 90, 97, 98, 106, 109, 119, 125, 128, 146, 190, 213, 215, 237, 241, 247, 248, 284, 315, 320, 327, 333, 334, 336, 337, 348, 353, 360, 361, 368, 369, 376, 380, 381, 384, 387, 392, 397, 399, 401], "compens": 2, "compil": 2, "complet": [4, 8, 82, 90, 91, 97, 108, 109, 114, 117, 170, 327, 333, 339, 386], "complex": [6, 73, 74, 75, 97, 109, 126, 127, 130, 136, 145, 168, 169, 200, 218, 221, 225, 226, 227, 263, 268, 285, 297, 318, 333, 334, 335, 338, 341, 342, 398], "complex128": [6, 97, 109, 151, 190, 341], "complex64": 341, "complexwarn": 6, "compli": 2, "complianc": 2, "complic": 2, "compon": [2, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 62, 74, 83, 90, 94, 95, 99, 100, 103, 104, 105, 108, 109, 112, 114, 115, 117, 120, 121, 122, 123, 156, 184, 187, 218, 221, 225, 226, 227, 260, 314, 318, 319, 320, 324, 326, 329, 339], "components_": 115, "compos": [73, 119, 327], "composit": [109, 116, 153, 276, 286, 295, 314, 336], "compound": [16, 92, 97, 109, 119, 122, 162, 193, 292, 316], "comprehens": [92, 329], "compress": [41, 95, 109, 118, 393], "compris": [2, 322], "compui": [99, 100, 108, 112, 114, 115, 117, 122, 123], "comput": [2, 18, 19, 20, 22, 83, 85, 92, 94, 95, 96, 99, 100, 102, 108, 109, 112, 114, 115, 117, 119, 122, 123, 137, 140, 142, 153, 158, 161, 169, 179, 202, 267, 280, 285, 286, 297, 320, 321, 322, 326, 333, 336, 339, 344, 346], "compute_uv": 123, "concaten": [16, 73, 91, 109, 284, 326, 327, 331, 378, 399], "concent": 314, "concentr": [15, 16, 19, 20, 21, 24, 94, 99, 105, 108, 116, 122, 314, 360], "concept": [322, 345], "concern": [2, 90], "concis": [8, 9], "conda": [82, 86, 87, 354, 360, 379, 382], "condid": 339, "condit": [2, 20, 94, 109, 112, 115, 161, 325, 398, 399], "config": [86, 93, 95, 99, 100, 102, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 346, 387], "configfil": 6, "configur": [2, 4, 84, 89, 95, 99, 100, 102, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 329, 353, 360, 380, 387, 397], "confirm": [22, 327, 374], "conflict": [2, 98], "conform": 2, "confus": [109, 322, 327], "conj": [109, 148, 344], "conjug": [109, 147, 344], "connect": [2, 6, 85, 372, 393], "connectionstyl": [322, 336], "consecut": [97, 109, 157, 344], "consequenti": 2, "consid": [6, 16, 94, 100, 105, 108, 109, 161, 169, 320, 322, 339, 340, 346], "consider": [2, 90], "consist": [6, 9, 27, 95, 97, 102, 109, 194, 320, 324, 326, 336, 339, 399], "consol": 387, "constant": [20, 73, 78, 92, 94, 95, 97, 102, 107, 109, 112, 113, 117, 158, 178, 215, 216, 267, 270, 279], "constantli": 331, "constantsum": 108, "constitu": 2, "constitut": 2, "constrain": [108, 109, 254, 255], "constraint": [14, 25, 33, 92, 94, 97, 99, 108, 109, 114, 140, 237, 314, 317, 319, 320, 381, 392], "construct": [6, 97, 109, 159, 160, 170, 171, 298, 318], "constructor": [17, 21, 97, 109, 160, 167, 170, 171, 185, 315, 334, 363], "contact": 73, "contain": [2, 6, 8, 19, 20, 27, 41, 44, 53, 90, 94, 95, 97, 98, 100, 106, 109, 112, 115, 116, 118, 123, 124, 136, 140, 153, 157, 158, 169, 202, 213, 217, 219, 222, 223, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 285, 286, 297, 318, 320, 321, 322, 324, 327, 330, 333, 335, 338, 339, 359, 393, 400], "conten": [109, 146], "content": [11, 27, 41, 109, 118, 124, 195, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 320, 321, 324, 330, 333, 345, 393], "content1": [109, 247], "content2": [109, 247], "context": [8, 92, 97, 119, 125, 266, 271, 314, 316, 326, 330], "contextlib": 325, "contigu": [109, 161], "continu": [11, 30, 92, 109, 236, 316, 318, 320], "contour": [36, 109, 204, 223, 322, 336], "contour_alpha": 336, "contour_corner_mask": 336, "contour_negative_linestyl": 336, "contour_start": 336, "contrain": [109, 252], "contrast": 315, "contribut": [2, 11, 12, 87, 105, 109, 140], "contributor": [2, 6, 109, 325], "control": [62, 78, 92, 94, 109, 204, 276, 336], "conveni": [6, 19, 20, 36, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 320, 321, 327, 333], "convenin": 339, "convent": [5, 8, 36, 89, 95, 109, 213, 325, 326, 333, 346], "converg": [19, 20, 21, 62, 100, 108, 117, 122, 320], "convergencewarn": 21, "convers": [38, 93, 94, 97, 109, 289, 327, 333, 342, 343, 395], "convert": [95, 97, 109, 119, 125, 126, 127, 129, 130, 131, 132, 144, 147, 148, 200, 203, 289, 293, 344, 346, 348, 395], "convert_to_html": 335, "convex": [92, 109, 157], "convolut": [102, 109, 279, 298, 318, 342], "coord": [4, 8, 16, 18, 20, 31, 36, 37, 38, 53, 74, 89, 93, 98, 106, 109, 116, 128, 139, 140, 170, 202, 249, 281, 315, 318, 321, 322, 327, 333, 334, 345, 353, 355, 395], "coord0": [36, 98, 333], "coord1": [36, 98, 333], "coord1b": [98, 333], "coord2": [36, 98, 333], "coord_pc": 24, "coordin": [3, 4, 15, 16, 19, 20, 21, 23, 31, 35, 38, 39, 41, 49, 55, 73, 74, 75, 78, 89, 91, 95, 96, 97, 98, 109, 112, 128, 130, 131, 149, 158, 160, 164, 165, 169, 170, 171, 174, 175, 200, 203, 211, 212, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 256, 267, 281, 308, 309, 317, 318, 320, 321, 322, 323, 327, 334, 335, 336, 337, 338, 339, 341, 342, 348, 353, 356, 358, 361, 368, 396, 398, 399], "coordinated_universal_tim": 333, "coordmax": 109, "coordmin": 109, "coordnam": 109, "coordrang": 366, "coordset": [18, 31, 36, 37, 73, 97, 109, 164, 165, 167, 170, 174, 175, 185, 211, 212, 308, 309, 315, 318, 333, 399], "coordtitl": 109, "coordunit": 109, "coordx": 333, "copi": [2, 6, 11, 18, 37, 58, 73, 78, 97, 98, 109, 118, 128, 147, 148, 159, 164, 165, 174, 175, 184, 211, 212, 268, 308, 309, 320, 332, 334, 338, 344, 393], "copyright": [10, 20, 86, 88, 89, 109, 300, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 353], "core": [4, 6, 46, 53, 73, 81, 89, 91, 109, 118, 271, 317, 329, 331, 335, 338, 343, 346, 401], "corn": [27, 41, 324, 339, 393], "corner": [92, 360], "coro": 346, "corp": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 381], "corr": 78, "correct": [2, 6, 8, 61, 63, 66, 71, 72, 73, 76, 90, 91, 92, 94, 95, 96, 108, 109, 114, 122, 137, 139, 142, 154, 158, 172, 173, 179, 215, 216, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 280, 301, 302, 304, 314, 317, 322, 323, 327, 329, 340, 342, 353, 354, 355, 356, 358, 359, 360, 382, 389, 397, 398], "correctli": [73, 97, 109, 118, 129, 130, 131, 132, 200, 202, 203, 234, 285, 286, 297, 321, 331, 332, 358, 376, 378, 390, 396, 398], "correl": 339, "correspond": [6, 13, 15, 16, 18, 19, 21, 37, 59, 73, 93, 94, 97, 98, 108, 109, 115, 116, 117, 123, 128, 146, 162, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 314, 320, 321, 322, 324, 325, 327, 336, 337, 345, 346, 348], "cosin": [59, 109, 282, 338, 344], "cosmic": [64, 65, 67, 71, 109, 157, 237, 317, 342], "cost": 2, "coudrai": 92, "could": [3, 6, 66, 73, 100, 320, 321, 322, 325, 333, 337, 340], "count": [49, 97, 109, 129, 132, 171, 345], "coupard": 92, "courier": 336, "cours": [10, 30, 38, 49, 85, 326, 338, 339], "court": 2, "cousen": 92, "cov": [314, 324], "covari": [314, 324], "cover": [5, 86, 88, 89, 91, 117, 331], "coverag": [18, 360], "cp": [71, 72, 76, 97, 98, 109, 114, 163, 168, 215, 256, 280, 317, 399], "cp_model": 73, "cplex": 44, "cpure": [19, 24, 320, 321], "crack": [92, 316], "crash": [91, 325], "creat": [5, 7, 10, 12, 18, 22, 23, 27, 30, 36, 41, 53, 73, 74, 75, 81, 82, 85, 86, 87, 89, 97, 98, 100, 102, 108, 109, 119, 133, 146, 170, 171, 178, 194, 197, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 244, 257, 258, 267, 279, 284, 318, 320, 321, 323, 324, 327, 329, 331, 332, 334, 335, 338, 339, 341, 344, 345, 346, 348, 377, 399], "creation": [2, 35, 39, 52, 54, 55, 97, 109, 118, 124, 228, 266, 317, 320, 327, 333, 334, 353, 366], "creator": [109, 327], "credit": 2, "criteria": [109, 117, 169, 336], "criterion": [108, 122, 320, 322], "critic": [90, 325], "crop": 78, "cross": [81, 90, 91, 101, 314], "cross_decomposit": 117, "crucial": [9, 66, 340], "csel_matrix": [19, 24, 320, 321], "cstr": 116, "csv": [91, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 326, 327], "csv_delimit": [109, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301], "cti": 116, "cti_fil": 116, "ctx_kwarg": [119, 125], "cube": [100, 344], "cubic": [62, 78, 92, 95, 109, 158, 339], "cuccioloni": 92, "cultrera": [92, 105], "cultrera_callegaro": 105, "cumsum": 109, "cumul": [22, 109, 115, 123, 153], "cumulative_explained_vari": [22, 123, 321], "curl": 83, "curli": 8, "current": [2, 6, 12, 18, 20, 37, 41, 81, 90, 91, 95, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 122, 123, 146, 151, 180, 191, 192, 193, 195, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 271, 284, 289, 301, 302, 304, 325, 326, 327, 330, 336], "cursiv": 336, "curv": [16, 18, 19, 62, 90, 91, 92, 105, 108, 114, 314, 316, 320, 321, 338, 360, 399], "curvatur": [18, 105], "curve1": [58, 59], "curve2": [58, 59], "curve3": 59, "curve4": 59, "curve5": 59, "curvefit": 81, "custom": [2, 13, 49, 106, 109, 112, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 336, 363, 380], "cut": [15, 16, 99, 318], "cutoff": [15, 16, 99], "cval": [102, 109, 267, 279], "cwd": 326, "cycl": [6, 336], "cycler": 336, "cyclohexan": [92, 316], "c\u00e9dric": 92, "d": [2, 6, 8, 19, 20, 24, 31, 36, 38, 49, 75, 78, 89, 92, 94, 97, 109, 118, 138, 140, 146, 159, 161, 167, 170, 171, 176, 185, 198, 232, 275, 298, 302, 316, 318, 322, 323, 332, 333, 336, 348, 384], "d0": [31, 318], "d1d": [333, 336], "d2": 318, "d2cy00311b": [92, 316], "d2d": 344, "d3cp01585h": [92, 316], "d3d": 333, "d3d_copi": 333, "d3dduplic": 333, "d3mr00013c": [92, 316], "d4nj03440f": [92, 316], "d55e00": 336, "d_0": 318, "d_baselin": [63, 317], "d_plot": [51, 317], "da": 344, "daatset": [109, 154], "dac": 344, "dad": [19, 320, 321], "dael": [92, 316], "dai": [2, 326, 380], "damag": 2, "dan": [92, 316], "danger": 332, "daniel": 92, "daq": 344, "dario": 92, "dark": 336, "dark2": [322, 323, 348], "dark_background": 336, "darkgrid": 336, "darren": 92, "darwin": 6, "dash": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 330, 336, 390], "dash_capstyl": 336, "dash_joinstyl": 336, "dashdot_pattern": 336, "dashed_pattern": 336, "dask": 119, "data": [0, 1, 2, 3, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 27, 31, 38, 40, 41, 46, 47, 49, 53, 55, 58, 59, 62, 65, 66, 73, 74, 78, 83, 90, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 140, 141, 143, 146, 149, 150, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 200, 202, 203, 204, 211, 212, 217, 218, 221, 225, 226, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 267, 268, 279, 280, 282, 284, 285, 286, 289, 290, 296, 297, 300, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 340, 341, 342, 343, 345, 346, 353, 354, 363, 369, 379, 395, 398, 399], "data_keyword": [109, 214], "data_onli": [59, 73, 74, 109, 218, 219, 221, 222, 223, 225, 226, 227, 228, 318, 322, 338], "dataarrai": [109, 293], "datadir": [4, 15, 19, 20, 41, 42, 44, 45, 50, 58, 59, 62, 73, 74, 75, 78, 85, 93, 109, 237, 247, 248, 301, 320, 321, 327, 328, 333, 335, 341, 347, 379, 393], "datafil": [326, 327], "datain": 102, "datapoint": 97, "datas": [109, 143], "dataset": [3, 4, 6, 8, 14, 15, 20, 23, 24, 25, 27, 29, 31, 32, 33, 40, 42, 44, 46, 47, 50, 51, 53, 58, 59, 62, 65, 66, 73, 75, 78, 81, 85, 89, 91, 92, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 165, 168, 169, 170, 172, 173, 175, 177, 179, 181, 182, 183, 184, 186, 187, 188, 189, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 267, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 295, 296, 297, 300, 301, 302, 304, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 323, 326, 327, 329, 331, 334, 335, 338, 339, 340, 341, 342, 346, 347, 348, 353, 357, 359, 360, 361, 366, 368, 370, 374, 377, 391, 392, 396, 397, 398, 399], "dataset1d": [58, 59], "dataset2": 344, "dataset_1": 118, "dataset_list": 41, "dataset_pca": 22, "datasets_nam": 118, "datastet": 314, "datatyp": 344, "date": [2, 6, 41, 89, 109, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 323, 334, 345, 348, 377, 384], "date_autoformatter_dai": 336, "date_autoformatter_hour": 336, "date_autoformatter_microsecond": 336, "date_autoformatter_minut": 336, "date_autoformatter_month": 336, "date_autoformatter_second": 336, "date_autoformatter_year": 336, "datetim": [97, 109, 315, 333, 334, 335], "dattaset": 27, "daturi": 92, "david": 92, "dc": [109, 343, 347], "dc_corrected_fid": 347, "dc_corrected_fid2": 347, "dcolor": 58, "ddof": [109, 285, 297], "ddr": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "de": [2, 18, 37, 92, 314, 316, 327, 345], "deal": [95, 314, 327], "debian": [83, 87], "debug": [95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 155, 267, 270, 279, 300, 325, 331], "debug_": 325, "decai": [109, 215, 216, 341], "decemb": 92, "decid": 2, "decim": [94, 97, 109, 136, 263, 332, 336, 345, 395], "declar": 114, "decompos": 314, "decomposit": [16, 18, 20, 21, 22, 23, 24, 81, 94, 95, 99, 100, 105, 108, 112, 115, 122, 123, 314, 320, 321, 324, 339, 393], "decompositionanalysi": 320, "deconvolut": 73, "decor": 6, "decreas": [108, 343], "dedic": [83, 90, 326, 341], "deduc": [109, 219, 222, 223, 228, 327], "deem": 2, "deep": [97, 109, 151, 336], "deepcopi": [97, 109, 151], "def": [4, 6, 8, 73, 74, 75, 78, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 141, 143, 163, 177, 181, 218, 219, 220, 282, 296, 318, 327, 333, 335, 346], "default": [8, 18, 36, 37, 41, 44, 50, 58, 65, 69, 73, 74, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 143, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 181, 182, 183, 185, 186, 191, 194, 197, 199, 200, 202, 203, 204, 211, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 267, 268, 274, 276, 279, 280, 281, 282, 283, 285, 286, 287, 289, 294, 295, 296, 297, 300, 301, 302, 308, 318, 320, 321, 325, 327, 328, 329, 330, 333, 337, 338, 339, 340, 343, 345, 346, 356, 358, 360, 375, 379, 392, 397, 399], "default_dim_nam": 98, "default_format": [119, 125], "defect": 2, "defens": 2, "defin": [2, 6, 17, 20, 21, 23, 30, 31, 38, 41, 45, 62, 73, 74, 75, 78, 89, 94, 95, 97, 98, 106, 107, 108, 109, 113, 114, 117, 118, 128, 141, 146, 158, 218, 221, 225, 226, 227, 238, 239, 267, 279, 281, 284, 288, 300, 318, 320, 322, 323, 326, 333, 336, 339, 346, 396, 397, 399], "definit": [2, 30, 74, 109, 218, 221, 224, 225, 226, 227, 276, 282, 295, 326, 327, 344, 399], "deflat": 100, "deg": 75, "degener": 100, "degrad": [92, 316], "degre": [62, 78, 95, 102, 109, 158, 215, 216, 232, 267, 279, 285, 297, 318, 339, 344], "dehydr": [21, 89], "dehydrogen": [92, 316], "dejavu": 336, "dejavusan": 336, "dejavuserif": 336, "delai": 2, "delet": [109, 387], "delete_coordset": 109, "delic": 321, "delimit": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302], "delimiteur": [109, 239], "deliv": 325, "delphin": 92, "delta": [66, 73, 74, 102, 109, 157, 267, 285, 297, 340, 341], "delta_": [18, 314], "delta_clock": [109, 238], "demand": [97, 109, 171], "demonstr": [49, 73, 78, 82, 323, 336, 337, 339, 340, 341, 344, 346], "denni": 92, "denois": [67, 81, 109, 237, 270, 317, 329, 342, 397], "denot": [98, 318], "dense_output": 94, "dep": 87, "depend": [5, 11, 83, 86, 95, 97, 100, 105, 109, 112, 114, 115, 122, 123, 147, 148, 158, 159, 169, 194, 241, 268, 274, 285, 297, 314, 318, 324, 326, 327, 336, 337, 340, 345, 350, 353, 375, 392, 393, 399], "deprec": [6, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 276, 343, 350, 353, 381, 384, 390], "deprecationwarn": 343, "depth": [2, 46, 85, 336], "der": 92, "deriv": [2, 69, 90, 92, 94, 100, 102, 109, 267, 314, 316, 320, 322, 346], "desc": 109, "descend": [109, 281, 314, 345], "descent": 112, "describ": [2, 4, 98, 109, 118, 157, 314, 321, 327, 331, 332, 333, 336, 339, 346], "descript": [4, 5, 6, 8, 36, 41, 73, 75, 82, 89, 91, 94, 107, 109, 113, 114, 125, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 323, 325, 327, 333, 335, 345, 348], "descriptor": [92, 316], "deseri": [109, 118], "design": [2, 89, 91, 319, 331, 336], "desir": [6, 12, 15, 66, 94, 97, 109, 112, 164, 174, 202, 211, 236, 297, 308, 321, 322, 326, 336, 340], "desktop": 5, "despik": [65, 66, 92, 109, 342, 392, 397], "despit": 331, "destin": [97, 109, 119, 191, 289], "destroi": 37, "detail": [4, 8, 9, 18, 20, 41, 62, 66, 82, 83, 84, 89, 90, 91, 96, 102, 109, 114, 115, 117, 142, 159, 179, 267, 279, 314, 322, 326, 327, 331, 339, 348, 350, 397], "detect": [2, 66, 90, 94, 95, 109, 137, 142, 157, 158, 169, 179, 280, 322, 336, 339, 340], "determin": [2, 15, 22, 92, 95, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 128, 170, 219, 220, 238, 280, 314, 321, 322, 323, 332, 333, 339, 343, 346], "detrend": [8, 49, 65, 95, 109, 137, 142, 179, 280, 324, 342], "dev": [5, 84, 86, 88, 327, 401], "develop": [2, 4, 9, 10, 84, 85, 86, 87, 88, 90, 91, 99, 105, 315, 325, 327, 330, 331, 352, 401], "developp": [351, 402], "deviat": [66, 108, 109, 115, 122, 153, 157, 202, 285, 286, 297, 314, 320, 331], "devot": 85, "df": 333, "dfit": 318, "diag": [108, 109, 123, 160, 167, 185, 333], "diagnos": 325, "diagon": [109, 159, 167, 185, 314], "dialog": [45, 109, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 301, 302, 304, 327, 328, 336, 363, 374, 376], "dic": [73, 109, 118], "dict": [6, 8, 94, 95, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 154, 169, 266], "dict_param_to_optim": 94, "dictionari": [94, 95, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 322, 327, 333, 335, 336], "did": [2, 326, 335, 339], "dielectr": [92, 316], "diff": [6, 69, 109, 153, 323, 327, 345, 346], "differ": [15, 20, 27, 41, 45, 49, 65, 66, 69, 78, 86, 88, 94, 95, 97, 102, 109, 110, 111, 112, 116, 118, 119, 128, 139, 153, 157, 158, 169, 191, 192, 193, 238, 289, 300, 322, 323, 324, 327, 330, 333, 334, 336, 337, 339, 341, 343, 344, 346, 347, 356, 368, 376, 397], "differenti": [94, 102, 109, 267, 360], "difficult": [90, 320, 321], "diffract": [92, 316], "diffus": [92, 106, 316, 360], "digit": [1, 94, 97, 327, 336, 395], "dilig": 2, "dill": [100, 108], "dim": [6, 15, 17, 20, 46, 69, 73, 75, 97, 98, 102, 109, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 143, 146, 147, 148, 149, 150, 152, 153, 156, 160, 163, 168, 170, 172, 173, 177, 181, 182, 183, 186, 199, 200, 202, 203, 215, 216, 234, 262, 264, 267, 276, 279, 281, 282, 283, 285, 286, 294, 295, 296, 297, 300, 323, 324, 327, 333, 337, 346, 366, 378], "dim1": [109, 287], "dim2": [109, 287], "dimens": [6, 16, 18, 22, 23, 37, 41, 73, 74, 75, 89, 91, 95, 96, 97, 98, 100, 102, 105, 109, 115, 119, 121, 128, 129, 130, 131, 132, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 152, 153, 156, 158, 160, 163, 168, 170, 172, 173, 177, 179, 181, 182, 183, 186, 193, 199, 200, 202, 203, 215, 216, 218, 221, 225, 226, 227, 234, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 267, 268, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 294, 295, 296, 297, 300, 302, 320, 321, 322, 323, 324, 326, 327, 334, 335, 338, 339, 341, 342, 344, 345, 348, 353, 358, 362, 398], "dimension": [22, 23, 24, 89, 92, 95, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 119, 122, 123, 125, 171, 217, 218, 268, 283, 314, 315, 321, 329, 333, 339, 342, 344], "dimensionalityerror": [38, 97, 109, 119, 125, 289, 344, 348], "dimensionless": [36, 97, 109, 119, 125, 141, 143, 177, 182, 183, 296, 342, 348], "dir": 370, "direct": [2, 6, 8, 85, 109, 186, 271, 281, 320, 326, 327, 336, 339], "directli": [2, 6, 31, 97, 100, 108, 109, 170, 178, 197, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 314, 318, 320, 321, 327, 331, 332, 333, 336, 339, 346], "directori": [2, 4, 6, 9, 19, 41, 43, 44, 45, 46, 73, 78, 93, 109, 111, 118, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 327, 328, 333, 336, 393], "disabl": 336, "disagr": 2, "disappear": 314, "disast": 2, "discard": [6, 78, 97], "discardbg": [109, 238], "discharg": [92, 316], "disclaim": 2, "disclos": 90, "disconnect": [97, 98, 109, 151], "discourag": [315, 331], "discov": 12, "discret": [109, 153], "discrimin": [92, 316], "discuss": [2, 10, 81, 331, 373], "disk": 53, "dispatch": 346, "dispatch_queu": 346, "dispatch_shel": 346, "displai": [2, 18, 22, 23, 24, 36, 37, 49, 89, 95, 97, 98, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 204, 218, 221, 225, 226, 227, 273, 320, 321, 325, 326, 327, 330, 331, 332, 333, 335, 336, 338, 339, 343, 345, 346, 348, 363, 370, 371, 377, 386, 393, 399], "disput": [2, 90], "disregard": [107, 113, 117], "distanc": [31, 74, 97, 98, 109, 112, 133, 169, 318, 322, 333, 336], "distance_fit": 31, "distance_fitted2": 31, "distance_fitted3": 31, "distinct": [109, 241], "distinguish": 22, "distort": 346, "distribut": [2, 83, 97, 100, 105, 109, 197, 198, 236, 285, 297, 318], "disturb": 2, "div": 332, "diverg": [94, 112, 320], "divid": [109, 115, 202, 331, 343], "divis": 344, "divisor": [109, 285, 297], "dlabel": [97, 109], "dnf": 83, "do": [2, 6, 10, 12, 13, 15, 20, 22, 23, 37, 38, 50, 53, 62, 78, 85, 90, 93, 109, 115, 139, 165, 238, 314, 320, 321, 322, 323, 326, 327, 329, 330, 333, 336, 348, 374], "do_execut": 346, "doc": [5, 6, 9, 82, 114, 318, 327, 335, 360, 363, 373, 377, 386, 397, 401], "docker": 367, "docstr": [4, 9], "doctest": 8, "doctestplu": 6, "document": [2, 5, 7, 11, 31, 41, 66, 84, 90, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 138, 159, 176, 198, 232, 267, 275, 298, 322, 330, 331, 334, 336, 360, 361, 362, 366, 367, 381, 385, 386, 389, 393, 401], "doe": [2, 19, 23, 24, 90, 91, 96, 97, 108, 109, 118, 129, 132, 133, 141, 164, 165, 320, 321, 325, 326, 327, 331, 332, 339, 344], "doesn": [333, 344], "doi": [0, 1, 92, 316, 327], "dollar": 332, "domain": [2, 58, 59, 109, 141, 143, 154, 163, 168, 177, 182, 183, 186, 296, 329, 338, 342], "domenico": 92, "domin": 94, "dominguez": 92, "don": [5, 9, 62, 73, 74, 81, 90, 318, 322, 330, 331, 332, 336], "done": [6, 18, 37, 97, 109, 139, 218, 219, 221, 222, 223, 225, 226, 227, 228, 289, 291, 292, 321, 326, 333, 336, 339, 340, 356, 366, 391, 395, 396], "done_callback": 101, "donn": [92, 316], "dop853": 94, "dorresteijn": 92, "dot": [16, 17, 109, 112, 119, 204, 219, 220, 222, 223, 228, 229, 230, 321, 335, 336], "dotted_pattern": 336, "doubl": [8, 109, 112, 312, 326], "down": 353, "download": [2, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 83, 84, 86, 87, 88, 109, 237, 320, 347, 375, 379, 393], "download_nist_ir": [109, 375], "download_onli": [109, 237], "downlod": 20, "downstream": 115, "dpi": [109, 204, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 337, 339], "dq": 105, "dr": 92, "draft": 2, "drag": [90, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 332], "draw": [109, 204, 218, 224, 336], "drawn": [2, 100, 109, 117, 218, 236], "drift": [49, 109, 158, 339], "drive": 326, "driven": [4, 11], "drop": [90, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 332, 401], "dropdown": [96, 326, 330], "dry": [30, 92, 114, 316], "ds1": [118, 336], "ds2": [118, 336], "ds3": 118, "ds_correct": 8, "ds_list": 27, "dsc": 16, "dsint": 75, "dso": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "dss": 16, "dtc": 327, "dtype": [6, 16, 23, 97, 107, 109, 113, 119, 126, 127, 133, 153, 160, 161, 164, 165, 167, 170, 171, 174, 175, 178, 185, 194, 197, 202, 211, 212, 236, 285, 286, 297, 308, 309, 333, 341, 344, 353], "due": [2, 16, 62, 109, 139, 322, 337, 347, 348, 395], "duli": 2, "dump": [109, 118, 382], "duplic": [2, 82, 333, 362], "durat": 2, "dure": [2, 6, 9, 17, 21, 95, 97, 107, 109, 113, 116, 289, 315, 318, 320, 325, 333, 334, 336, 346, 353, 395], "dusan": 92, "dx": [91, 92, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 304, 326, 328, 344], "dynam": [73, 92, 95, 117, 316], "dz": 333, "e": [2, 5, 6, 18, 19, 20, 37, 38, 49, 65, 82, 87, 90, 92, 95, 96, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 125, 138, 146, 163, 168, 174, 181, 186, 193, 204, 211, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 285, 292, 297, 308, 314, 315, 316, 318, 320, 321, 322, 325, 326, 327, 330, 332, 333, 334, 335, 336, 337, 339, 340, 343, 344, 345, 346, 348, 390, 399, 401], "e2975": 92, "e402": 327, "e501": 6, "e_i": [314, 324], "e_project": [53, 54, 317], "e_x": [314, 324], "ea": 94, "ea_1": 94, "ea_n": 94, "each": [2, 6, 8, 18, 23, 27, 37, 73, 78, 81, 85, 94, 95, 96, 97, 98, 100, 105, 107, 108, 109, 113, 114, 115, 118, 126, 127, 140, 145, 157, 170, 171, 178, 204, 238, 314, 315, 318, 320, 321, 322, 323, 324, 326, 327, 332, 333, 334, 339, 340, 344, 345, 346, 350, 392], "earthquak": 2, "eas": 330, "easi": [90, 326, 327, 330], "easier": [65, 331, 340, 380], "easiest": [6, 336], "easili": [2, 6, 24, 53, 89, 90, 318, 320, 322, 326, 331, 333, 335, 344, 345], "echantillon": 327, "econom": 2, "edg": [102, 109, 117, 144, 204, 267, 279, 336], "edgecolor": [117, 204, 336], "edit": [6, 90, 93, 401], "editor": [6, 92], "eelco": 92, "efa": [14, 20, 25, 33, 91, 97, 100, 105, 108, 109, 112, 115, 122, 123, 146, 161, 247, 314, 317, 321, 331, 360, 388, 393], "efa1": 15, "efa2": 15, "effect": [2, 65, 92, 109, 168, 237, 247, 248, 282, 316, 319, 320, 333, 336, 338, 340, 346], "effici": [92, 100, 115, 316, 326], "effort": 2, "eibar": 92, "eigenvalu": [99, 115], "eigenvector": [27, 41, 109, 245, 246, 324, 339, 393], "eigh": 100, "eignenvector": 339, "eiler": [62, 68, 70, 71, 92, 95, 102, 109, 137, 237, 267, 279, 300, 317, 342], "eingenvector": 326, "either": [2, 6, 18, 19, 41, 78, 90, 94, 95, 97, 100, 109, 117, 139, 140, 247, 268, 314, 320, 321, 326, 333, 336], "elaps": [98, 327, 333], "elect": 2, "electr": 2, "electrolyt": [92, 316], "element": [2, 97, 109, 112, 119, 126, 127, 129, 130, 131, 132, 144, 153, 167, 185, 197, 200, 202, 203, 285, 286, 288, 297, 314, 327, 332, 334, 336, 343, 344, 345], "elementari": 94, "elementwis": 112, "elimin": [65, 340], "elizabeth": 92, "elnaz": 92, "els": [6, 41, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 145, 237, 247, 248, 322, 335, 336, 344], "elsevi": 92, "elsewher": [109, 167], "elut": [17, 24, 320, 321], "el\u017cbieta": 92, "em": [58, 73, 75, 109, 181, 235, 277, 278, 282, 338, 341], "emb": 91, "embrac": 6, "emerg": 2, "emit": [336, 346], "emmerl": 92, "emphas": [95, 332], "emploi": [109, 157], "empti": [97, 100, 109, 119, 165, 174, 175, 211, 212, 308, 309, 322, 331, 333, 335, 336], "empty_lik": [109, 164, 174, 175, 211, 212, 308, 309], "emptylik": [109, 165], "en": [2, 6, 322, 336], "enabl": [2, 30, 74, 109, 115, 300, 318, 331, 380], "enclos": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259], "encod": [109, 243, 327], "encount": [2, 84, 86, 88, 339, 343, 344], "encourag": [2, 5, 6], "end": [8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 94, 95, 96, 97, 101, 102, 109, 133, 141, 154, 194, 197, 267, 279, 322, 327, 336, 339, 345, 346], "endeavor": 2, "endpoint": [97, 109, 133, 178, 194, 197], "energi": [2, 38, 314, 333], "enforc": [2, 108], "engin": 327, "english": 2, "enh": 5, "enhanc": [5, 6, 12, 327], "enough": [321, 345], "ensicaen": 331, "ensur": [2, 5, 6, 100, 109, 115, 144, 343, 397], "enter": [96, 330, 332, 339], "entir": [2, 6, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "entireti": 2, "entiti": 2, "entitl": 2, "entri": [0, 6, 9, 96, 109, 118, 164, 283, 332, 336, 346, 377], "entropi": 100, "enum": [109, 128, 282], "enumer": [73, 119, 346], "env": [86, 87, 353], "environ": [9, 82, 85, 87, 92, 93, 96, 316, 330], "environment": 92, "eq": 346, "equal": [23, 95, 97, 108, 109, 129, 140, 167, 168, 178, 194, 197, 204, 224, 232, 282, 314, 318, 320, 321, 333, 336, 338, 344], "equat": [29, 30, 32, 33, 94, 97, 100, 105, 106, 107, 108, 109, 314, 317, 319, 320, 321, 324], "equip": [2, 331], "equiv": [20, 314], "equival": [17, 22, 59, 69, 85, 87, 95, 102, 108, 109, 121, 141, 143, 152, 156, 161, 163, 167, 168, 172, 173, 177, 181, 182, 183, 185, 186, 199, 204, 215, 216, 235, 262, 264, 267, 276, 277, 278, 279, 282, 290, 295, 296, 300, 315, 325, 326, 333, 336, 338, 339, 344, 345, 346], "eras": 333, "ermit": 339, "error": [2, 6, 73, 82, 90, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 140, 141, 143, 163, 166, 168, 177, 182, 183, 186, 241, 247, 248, 267, 279, 283, 289, 296, 300, 314, 320, 321, 324, 326, 327, 333, 336, 337, 343, 344, 345, 346, 347, 348, 353, 377, 387, 390, 399, 400], "error_": [38, 325, 333, 337, 344, 348], "errorbar_caps": 336, "esc": 330, "escap": 326, "especi": [109, 285, 297, 314, 331, 336], "essenti": [90, 327, 331], "est": 333, "establish": [2, 314], "estim": [20, 78, 94, 95, 107, 109, 113, 115, 157, 285, 297, 314, 322, 324, 340], "et": [2, 14, 17, 20, 24, 25, 33, 94, 95, 105, 108, 109, 115, 237, 280, 314, 316, 317, 320, 321, 339], "etc": [2, 36, 73, 74, 90, 98, 108, 109, 117, 128, 232, 236, 241, 270, 314, 315, 318, 321, 322, 326, 331, 333, 334, 335, 336], "etienn": 92, "euclid": [108, 320], "euclidean": 320, "eugen": 22, "eugenio": 92, "euler": 336, "europ": 336, "ev": [16, 38, 123, 333], "ev_cum": 123, "ev_ratio": 123, "evalu": [20, 94, 95, 102, 109, 129, 132, 266, 267, 279], "even": [4, 20, 94, 97, 109, 191, 267, 268, 276, 285, 289, 326, 327, 333, 348, 378], "evenli": [97, 105, 109, 133, 136, 178, 194, 197, 263, 395], "event": [2, 24, 94, 346], "eventu": [95, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 248, 323], "everi": [115, 380], "everybodi": 2, "everyon": 9, "everyth": 320, "everytim": [97, 395], "evid": 2, "evol": 322, "evolut": [15, 314, 322, 360], "evolv": [15, 92, 99, 100, 105, 108, 112, 115, 122, 123, 314, 320], "ev\u00b2": 333, "ev\u2070": 333, "ex": [30, 318], "exact": [93, 97, 98, 109, 115, 118, 151, 161, 314, 322], "exactli": [19, 318, 327, 339, 348], "exagger": 322, "examin": [314, 320, 321, 322, 339, 346], "exampl": [4, 6, 9, 14, 20, 25, 26, 28, 30, 31, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 80, 82, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 133, 138, 139, 140, 144, 151, 153, 160, 164, 167, 169, 170, 171, 174, 175, 176, 185, 190, 195, 198, 202, 211, 212, 232, 238, 239, 241, 245, 249, 252, 253, 254, 255, 259, 271, 275, 276, 284, 285, 286, 289, 290, 295, 297, 298, 301, 302, 304, 308, 309, 315, 317, 318, 319, 320, 322, 327, 331, 332, 333, 335, 336, 338, 340, 342, 344, 345, 347, 348, 354, 360, 388, 391, 393, 397, 398, 399], "exce": 2, "excel": [1, 85, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304], "exceot": 339, "except": [38, 94, 97, 109, 118, 119, 125, 129, 132, 133, 145, 146, 161, 167, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 281, 322, 325, 331, 333, 336, 337, 339, 344, 348, 356, 363, 374], "exchang": [92, 327, 348], "exclud": [97, 109, 118, 157, 194], "exclus": 2, "excus": 2, "exec": 346, "execut": [2, 19, 25, 28, 32, 34, 39, 47, 51, 53, 54, 56, 60, 63, 67, 70, 76, 79, 80, 85, 94, 97, 109, 118, 124, 170, 171, 218, 221, 225, 226, 227, 265, 266, 317, 325, 326, 392, 401], "execute_request": 346, "exemplifi": 322, "exercis": [2, 339], "exhaust": [6, 315], "exist": [2, 4, 6, 12, 82, 93, 95, 99, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 122, 123, 128, 237, 321, 325, 327, 330, 334, 339, 374], "exp": [19, 20, 36, 73, 75, 100, 109, 163, 176, 181, 275, 318, 320], "exp_conc": 116, "exp_idx": 116, "expand": 109, "expandus": 326, "expans": 341, "expect": [6, 12, 30, 74, 82, 101, 107, 109, 113, 117, 214, 238, 318, 320, 322, 323, 324, 325, 327, 337, 339, 345, 356, 401], "experi": [37, 91, 99, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 333, 401], "experienc": [2, 331], "experiment": [19, 20, 38, 40, 43, 47, 55, 91, 94, 97, 99, 105, 106, 109, 116, 162, 196, 217, 237, 244, 247, 256, 281, 315, 317, 319, 320, 321, 327, 333, 337, 338, 344, 353, 357, 399], "expert": 9, "explain": [8, 12, 15, 22, 23, 96, 109, 115, 123, 156, 314, 318, 321, 327, 331], "explained_vari": 123, "explained_variance_ratio": [123, 321], "explan": 347, "explanatori": [314, 324], "explicit": [2, 94, 97, 98, 109, 117, 328], "explicitli": [6, 97, 109, 322, 326, 336], "exploit": 2, "explor": [91, 322], "exploratori": 91, "explos": 2, "expno": [44, 58, 59, 73, 74, 75, 109, 256, 333, 335, 338, 341, 347], "expon": [94, 109, 282, 338], "exponenti": [57, 60, 71, 73, 94, 109, 163, 181, 215, 216, 256, 317, 341, 342, 344], "export": [81, 91, 109, 110, 111, 118, 326, 329, 331, 353], "expos": [92, 315, 316, 331], "express": [2, 15, 38, 78, 105, 109, 119, 163, 181, 204, 219, 220, 222, 223, 228, 229, 230, 324, 336, 344], "expressli": 2, "exptc": [109, 215, 216, 341], "extend": [8, 84, 109, 169, 322, 327, 345], "extens": [6, 19, 41, 46, 90, 101, 102, 109, 219, 222, 223, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 279, 301, 302, 304, 322, 326, 327], "extent": 314, "extern": [2, 44, 92, 94, 99, 100, 105, 106, 108, 112, 114, 115, 117, 122, 123, 316, 334, 346, 354, 360], "extra": [6, 108, 115, 318, 333, 401], "extract": [46, 74, 84, 100, 109, 112, 115, 159, 160, 248, 314, 319, 322, 327, 331, 339, 343, 375], "extraoutputgetconc": 108, "extraoutputgetspec": 108, "extrem": [6, 109, 296, 320, 323, 346], "extrema": 339, "ey": [109, 185], "f": [4, 15, 19, 30, 31, 41, 44, 69, 73, 74, 87, 92, 94, 97, 105, 109, 118, 176, 195, 198, 232, 275, 301, 318, 320, 321, 322, 324, 325, 327, 333, 335, 336, 346], "f0e442": 336, "f0f0f0": 336, "f1": [30, 59, 73, 74, 109, 302, 318, 335, 338, 341], "f2": [16, 75, 109, 302, 335], "f401": 325, "f403": 331, "f405": 331, "f_ev": [15, 16, 99], "f_expno": 73, "fabrizia": 92, "face": [117, 348], "facecolor": [117, 204, 336], "fact": [2, 62, 320, 331], "factor": [15, 92, 94, 95, 99, 100, 105, 108, 112, 115, 122, 123, 314, 336, 344], "factoris": 321, "fail": [2, 6, 94, 337, 339, 361], "failur": [2, 336], "faith": 2, "fall": 336, "fals": [6, 20, 24, 27, 30, 31, 41, 53, 58, 59, 62, 66, 69, 73, 74, 78, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 125, 128, 129, 130, 131, 132, 139, 140, 141, 143, 151, 152, 161, 163, 168, 172, 173, 177, 178, 181, 182, 183, 186, 190, 191, 194, 197, 199, 200, 202, 203, 204, 211, 215, 216, 218, 219, 221, 222, 223, 225, 226, 227, 228, 234, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 268, 269, 272, 281, 282, 283, 285, 286, 287, 289, 291, 292, 294, 296, 297, 310, 311, 312, 313, 318, 320, 321, 322, 324, 327, 333, 336, 338, 339, 340, 341, 343, 344, 346, 395], "famili": [94, 336], "familiar": 336, "fanci": [73, 336, 396, 399], "fantasi": 336, "far": 94, "farid": 92, "fashion": 344, "fast": [6, 66, 83, 99, 100, 105, 108, 109, 112, 115, 122, 123, 168, 186, 327, 330, 336, 341, 399], "faster": [78, 86, 94, 100, 109, 112, 164, 165, 399], "fastest": 318, "fastica": [14, 25, 33, 99, 105, 108, 109, 112, 115, 122, 123, 161, 237, 317, 395, 399], "fault": 2, "favor": 397, "favorit": [330, 331], "fc": 322, "feasibl": 92, "featur": [4, 5, 6, 12, 21, 22, 82, 84, 89, 90, 91, 92, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 142, 161, 169, 179, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 279, 300, 314, 319, 321, 327, 331, 333, 336, 344, 348, 350], "federico": 92, "fedora": 83, "fee": 2, "felipa": 336, "fer": [92, 316], "fern": 92, "fernandez": [0, 86, 88, 89, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "ferrihydrit": [92, 316], "ferrit": [92, 316], "fetch": 5, "few": [19, 27, 49, 109, 117, 249, 320, 324, 333], "ff": 87, "ffmpeg": 336, "ffmpeg_fil": 336, "fft": [73, 75, 109, 186, 331, 342, 343, 347], "fftbin": 346, "fhz": 271, "fi": 341, "fibr": [92, 316], "fibroin": [92, 316], "fid": [73, 338, 341, 347], "fid2": [341, 347], "fid3": 341, "field": [2, 90, 94, 96, 98, 109, 248, 326, 333], "fifo": [16, 99], "fig": [8, 109, 336], "fignum": 109, "figsiz": [18, 37, 38, 49, 66, 69, 73, 109, 204, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 318, 320, 321, 323, 333, 336, 337, 339, 340, 341, 343, 344, 346, 347, 348], "figur": [16, 18, 22, 37, 38, 48, 51, 55, 66, 69, 73, 74, 90, 109, 115, 158, 204, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 273, 317, 318, 320, 321, 322, 323, 329, 337, 339, 340, 341, 343, 344, 346, 347, 348], "figure_autolayout": 336, "figure_dpi": 336, "figure_edgecolor": 336, "figure_facecolor": 336, "figure_figs": 336, "figure_frameon": 336, "figure_max_open_warn": 336, "figure_subplot_bottom": 336, "figure_subplot_hspac": 336, "figure_subplot_left": 336, "figure_subplot_right": 336, "figure_subplot_top": 336, "figure_subplot_wspac": 336, "figure_titles": 336, "figure_titleweight": 336, "file": [1, 2, 5, 6, 7, 9, 10, 19, 20, 25, 28, 32, 34, 39, 40, 47, 51, 54, 55, 56, 60, 63, 67, 69, 70, 73, 76, 79, 80, 88, 89, 92, 96, 97, 101, 109, 110, 111, 116, 118, 195, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 274, 301, 302, 304, 317, 320, 321, 323, 324, 328, 332, 335, 336, 343, 345, 346, 348, 353, 354, 361, 370, 372, 374, 379, 386, 387, 393, 395, 396, 398, 399], "filenam": [4, 41, 89, 97, 109, 110, 111, 118, 195, 219, 222, 223, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 323, 326, 327, 348, 361, 374, 399], "filename1": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259], "filename2": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259], "fileselector": 392, "filetyp": [4, 109, 118, 392], "fill": [102, 109, 112, 117, 152, 164, 165, 174, 175, 199, 211, 212, 264, 267, 279, 308, 309, 310, 311, 312, 313, 336, 342, 343, 345], "fill_valu": [109, 165, 174, 175, 211, 309, 333, 344], "filter": [1, 8, 46, 66, 69, 70, 81, 101, 109, 169, 267, 279, 300, 317, 329, 341, 342, 397], "final": [17, 19, 20, 23, 27, 31, 46, 49, 53, 62, 90, 91, 97, 108, 109, 170, 171, 178, 197, 314, 318, 320, 322, 325, 326, 327, 331, 333, 334, 336, 339, 346], "financi": 2, "find": [15, 21, 30, 31, 41, 91, 92, 95, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 149, 150, 169, 234, 319, 323, 326, 329, 331, 333, 337, 344, 346, 347, 398], "find_peak": [73, 74, 109, 318, 319], "findfont": 336, "fine": [322, 346], "finit": 344, "fire": 2, "first": [2, 6, 8, 15, 18, 19, 20, 22, 27, 37, 41, 46, 49, 50, 69, 78, 83, 89, 94, 95, 97, 98, 100, 105, 106, 108, 109, 112, 114, 115, 117, 119, 122, 123, 128, 129, 132, 139, 157, 204, 215, 234, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268, 271, 276, 287, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 335, 336, 339, 340, 341, 342, 344, 345, 346, 393], "firstli": 2, "fisher": 22, "fist": 322, "fit": [15, 16, 18, 20, 22, 23, 24, 27, 29, 31, 32, 33, 62, 71, 72, 73, 76, 78, 89, 90, 91, 94, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 123, 137, 158, 188, 232, 256, 267, 279, 298, 314, 317, 319, 320, 321, 322, 323, 324, 329, 331, 336, 339, 346, 353, 372, 391, 399], "fit_intercept": [107, 113], "fit_reduc": [99, 100, 105, 108, 112, 114, 115, 117, 122, 123], "fit_to_concentr": [20, 94], "fit_to_exp_idx": 116, "fit_to_gas_concentr": 116, "fit_transform": [15, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123], "fitter": [73, 75], "fivethirtyeight": 336, "fivo": 92, "fix": [5, 6, 12, 30, 49, 74, 97, 109, 116, 136, 263, 314, 318, 320, 340, 344, 350], "fixtur": 6, "flag": [97, 109, 147, 148, 224, 268, 281, 283, 287, 289, 294], "flake8": 6, "flat": [109, 169, 279, 322, 346], "flatten": [97, 109, 130, 131, 140, 153, 200, 202, 203, 285, 286, 297, 346], "flavor": 12, "flexibl": [109, 142, 161, 179, 315, 320, 330, 333, 334, 339], "float": [8, 15, 21, 23, 49, 62, 74, 94, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 128, 133, 136, 137, 153, 154, 156, 157, 163, 167, 169, 170, 171, 172, 173, 177, 181, 185, 194, 197, 202, 204, 212, 215, 216, 218, 221, 224, 225, 226, 227, 236, 263, 267, 271, 279, 282, 285, 286, 297, 300, 322, 323, 333, 339, 345, 348], "float32": [6, 109, 236, 285, 297], "float64": [6, 16, 18, 23, 31, 36, 37, 38, 41, 43, 53, 89, 97, 98, 109, 133, 139, 140, 153, 160, 167, 170, 171, 174, 175, 202, 211, 212, 236, 237, 238, 239, 245, 246, 247, 248, 249, 252, 253, 254, 255, 259, 276, 284, 285, 286, 289, 295, 297, 308, 309, 326, 327, 333, 339, 344, 345], "floor": [97, 109, 136, 263], "flore": 92, "flow": [92, 316], "fm": 92, "fmax": [97, 109, 130, 131, 200, 203], "fmin": [97, 109, 130, 131, 200, 203], "fmt": 346, "fn": [97, 109, 170], "focu": 346, "focus": [5, 90], "folder": [6, 9, 13, 45, 73, 74, 75, 78, 109, 118, 237, 241, 247, 248, 326, 330, 333, 386], "follow": [2, 4, 5, 6, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 66, 73, 74, 75, 78, 85, 90, 93, 94, 95, 96, 105, 108, 109, 117, 146, 241, 265, 271, 281, 284, 315, 318, 320, 321, 322, 325, 326, 327, 330, 331, 332, 333, 335, 336, 339, 346], "fonction": 21, "font": [109, 219, 220, 222, 223, 228, 229, 230, 336, 367], "font_famili": 336, "font_siz": 336, "font_styl": 336, "font_vari": 336, "font_weight": 336, "fontsiz": [69, 109, 219, 220, 222, 223, 228, 229, 230, 322, 336, 346], "fopr": 321, "forbidden": [30, 74, 318], "forc": [2, 6, 97, 98, 107, 109, 113, 190, 191, 273, 289, 332, 336, 348], "force_pound": 119, "force_stack": 378, "forego": 2, "foreground": 326, "forg": [86, 87], "forget": [15, 323, 331], "forgotten": 353, "fork": 5, "form": [2, 92, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 163, 177, 181, 182, 183, 232, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 268, 282, 314, 320, 326, 327, 333, 336, 338, 346], "formal": [314, 339], "formaldehyd": [92, 316], "format": [2, 6, 7, 12, 21, 24, 41, 44, 46, 50, 69, 91, 96, 109, 110, 111, 117, 118, 155, 166, 188, 219, 222, 223, 228, 237, 238, 271, 299, 301, 302, 304, 328, 330, 332, 333, 336, 346, 353, 377, 382, 384, 398], "formatt": [6, 335, 336], "former": [327, 399], "formula": 94, "forth": 2, "fortran": 109, "fortun": [326, 345], "fortunelli": 92, "forum": [10, 327, 331], "forward": [15, 16, 99, 100, 105, 108, 112, 115, 122, 123], "found": [2, 6, 20, 22, 41, 50, 81, 94, 98, 318, 322, 326, 333, 336, 341, 346], "four": [320, 337, 345], "fourier": [73, 89, 109, 168, 172, 173, 184, 186, 327, 329, 338, 342, 343], "fourth": [109, 157], "fp": 114, "fppm": 271, "fr": [0, 92, 325, 327, 331, 341], "fr_fr": 336, "frac": [107, 109, 113, 117, 141, 176, 177, 182, 183, 198, 275, 282, 314, 318, 338], "fraction": [204, 322, 336], "frame": [204, 336], "frameon": 204, "framework": [0, 3, 91, 92, 316, 325], "fran": 92, "franc": 2, "francesco": 92, "francisco": 92, "frantz": [92, 316], "franziska": 92, "freder": 92, "fredholm": 106, "free": [2, 12, 85, 99, 339, 341], "freedom": [2, 109, 285, 297], "freeli": [2, 90], "freetyp": 336, "freita": 92, "french": 2, "frequenc": [38, 97, 109, 168, 172, 173, 186, 271, 314, 343], "frequent": 333, "friendli": [92, 95, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 118, 122, 123, 326], "fritsch": 92, "frobeniu": 112, "from": [2, 4, 5, 6, 11, 12, 13, 14, 17, 20, 22, 25, 27, 28, 32, 33, 34, 36, 38, 39, 46, 47, 49, 51, 53, 54, 56, 60, 63, 64, 65, 67, 70, 71, 73, 75, 76, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 132, 133, 137, 142, 146, 157, 158, 160, 162, 164, 165, 167, 168, 170, 171, 174, 175, 178, 179, 184, 185, 186, 194, 195, 196, 197, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 271, 279, 280, 283, 284, 285, 288, 289, 290, 297, 301, 302, 304, 308, 309, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 334, 336, 338, 339, 342, 343, 344, 345, 346, 347, 348, 353, 372, 375, 379, 386, 390, 395, 397, 398, 399, 401], "from_": 125, "from_list": 119, "from_sequ": 119, "fromfunct": [97, 109, 171, 318, 333], "fromit": [97, 109, 170], "fsh": [109, 262], "fsh2": [109, 172, 262], "fssl": 83, "ftir": [21, 89, 92, 99, 109, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 259, 314, 316, 329, 339, 342, 369], "fulfil": 2, "full": [2, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 83, 90, 95, 109, 115, 160, 164, 165, 175, 211, 212, 308, 309, 322, 323, 326, 327, 333, 336, 339, 340, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "full_lik": [109, 164, 165, 174, 211, 212, 308, 309, 333], "full_matric": 123, "fulli": [90, 326, 339, 340, 346, 399], "fulllik": [109, 175], "fullscal": 321, "fun": 100, "fun_arg": 100, "func": [8, 101, 109, 214, 318, 333], "func1": [97, 109, 170], "function": [2, 4, 6, 19, 20, 21, 36, 59, 69, 73, 74, 78, 81, 82, 84, 94, 97, 100, 101, 102, 105, 106, 108, 109, 112, 114, 115, 116, 126, 127, 139, 141, 142, 143, 152, 159, 161, 163, 165, 167, 168, 169, 170, 171, 172, 173, 176, 177, 179, 181, 182, 183, 185, 186, 198, 199, 214, 215, 216, 224, 232, 234, 237, 247, 248, 262, 264, 267, 268, 275, 282, 285, 296, 300, 301, 314, 318, 322, 325, 326, 327, 331, 334, 335, 336, 342, 343, 346, 348, 353, 359, 360, 366, 385, 391, 399], "further": [2, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 322], "futur": [2, 326, 327, 330, 331, 336, 343, 395], "fv": [18, 22, 23, 41, 73, 74, 75, 89, 320, 321, 323, 327, 331, 333, 335, 338, 341, 344, 345, 348], "fwhm": 78, "g": [6, 18, 31, 38, 59, 78, 82, 90, 92, 96, 97, 98, 99, 109, 119, 125, 174, 181, 193, 211, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 292, 308, 314, 315, 318, 320, 322, 326, 327, 330, 332, 333, 334, 335, 336, 338, 339, 340, 343, 344, 346, 348, 390, 399], "ga": [92, 116], "galact": [4, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 372], "galacticdata": [109, 253], "galleri": [25, 28, 32, 34, 39, 47, 51, 54, 56, 60, 63, 67, 70, 76, 79, 80, 89, 90, 91, 317, 319, 331, 333, 336, 397], "gappi": 336, "garcia": 92, "gard": 336, "gargallo": 92, "gasym": 318, "gather": 327, "gauss": [109, 181], "gaussian": [109, 176, 181, 318], "gaussianmodel": [298, 318], "gb": [109, 181, 338], "gc": [99, 392], "ge": [109, 282, 338], "gener": [2, 4, 6, 11, 19, 27, 36, 38, 41, 50, 69, 74, 82, 90, 94, 97, 100, 108, 109, 112, 117, 118, 133, 177, 178, 182, 194, 197, 204, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 289, 301, 314, 315, 320, 321, 322, 324, 326, 327, 329, 331, 333, 336, 338, 344, 345, 346, 348, 378, 392], "general_ham": [109, 182, 183], "generalprefer": 93, "genzel": [109, 182, 343], "geometr": [97, 109, 178], "geometri": 336, "geomspac": [97, 109, 197], "geoscienc": 92, "gervilli\u00e9": 92, "get": [6, 11, 13, 15, 16, 18, 19, 20, 21, 22, 30, 41, 66, 73, 74, 84, 86, 88, 97, 99, 107, 108, 109, 113, 117, 119, 180, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 318, 322, 323, 327, 329, 330, 333, 334, 336, 337, 339, 340, 345, 348], "get_axi": 109, "get_baselin": [95, 109, 137, 142, 158, 280], "get_compon": [15, 22, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123], "get_label": [97, 109], "get_loglevel": 325, "get_real_method": 335, "get_scale_nam": 117, "get_spectra": 4, "get_timestamp": 4, "get_user_and_nod": 6, "get_wavelength": 4, "get_window": 346, "getc": 108, "getc_to_c_idx": 108, "getconc": [20, 108], "getcwd": 326, "getmessag": 346, "getspec": 108, "getst_to_st_idx": 108, "gettingstart": [25, 28, 32, 34, 39, 47, 51, 54, 56, 60, 63, 67, 70, 76, 79, 80, 333, 375], "ggplot": 336, "ghaffari": 92, "gif": 332, "gilson": 92, "giovannetti": 92, "git": [5, 6, 10, 13, 351, 402], "github": [5, 6, 12, 46, 84, 85, 87, 332, 346, 360, 373, 379, 393], "githubusercont": 83, "gitpython": 5, "give": [2, 78, 89, 91, 94, 95, 97, 109, 118, 137, 282, 322, 323, 324, 327, 331, 332, 333, 335, 336, 338, 339, 346], "given": [2, 18, 23, 31, 37, 46, 73, 90, 91, 94, 96, 97, 98, 99, 100, 102, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 136, 140, 144, 146, 153, 162, 164, 165, 174, 175, 178, 185, 194, 197, 200, 203, 211, 212, 219, 236, 238, 239, 241, 256, 263, 266, 267, 271, 274, 276, 279, 281, 284, 286, 294, 295, 308, 309, 310, 313, 314, 318, 319, 320, 321, 322, 326, 327, 333, 339, 344, 345, 346, 395], "glob": 73, "glossari": 91, "gm": [109, 163, 177, 235, 277, 278, 282, 296, 338, 341], "gmt": [15, 18, 23, 37, 41, 89, 323, 327, 345, 348], "go": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 85, 327, 329, 330, 338, 341], "god": 2, "goe": [314, 325], "golai": [66, 68, 70, 71, 102, 109, 237, 267, 279, 300, 317, 342], "golden": 105, "gonzalez": 92, "good": [2, 3, 6, 19, 30, 69, 73, 78, 94, 324, 327, 328, 336, 346], "googl": [83, 380, 392, 401], "govern": 2, "gradient": 318, "grai": 336, "gram": [4, 38, 109, 253, 372], "grant": 2, "graph": [109, 115, 119, 218, 336], "graphen": [92, 316], "graphic": [3, 22, 23, 90, 92, 96, 330, 336], "graphicx": 336, "graphviz": 119, "gratio": [30, 318], "grave": 332, "gravimetr": [92, 316], "grayscal": 336, "greater": [23, 66, 109, 115, 156, 168, 186, 232, 282, 283, 318, 332, 338, 346], "greatli": [315, 331], "green": [6, 49, 62, 73, 74, 322, 332, 343], "grei": 322, "grepioni": 92, "grid": [46, 94, 204, 336], "grid_alpha": 336, "grid_axi": 336, "grid_color": 336, "grid_linestyl": 336, "grid_linewidth": 336, "gridlin": 336, "griffin": 92, "group": [20, 53, 109, 238, 247, 248, 254, 315, 322, 327, 333, 336, 345, 348, 401], "gt": [318, 320, 321, 322, 323, 324, 333, 335, 336, 343, 346], "guarante": [90, 94], "guaranti": 376, "guess": [19, 109, 115, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 314, 318, 319, 345, 391], "gui": [3, 5, 90, 92, 96, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 336], "guid": [2, 4, 5, 10, 82, 87, 89, 90, 96, 315, 332, 350], "guidelin": [5, 7, 87], "guilhau": [92, 99], "guillaum": 92, "guinea": 92, "gustavo": 92, "gu\u00e9rin": 325, "gwidth": [30, 318], "h": [31, 38, 92, 109, 112, 219, 220, 222, 223, 228, 229, 230, 300, 314, 318, 333, 336, 339, 341, 346], "h2o": 343, "h3po4": 347, "ha": [2, 11, 12, 18, 19, 23, 37, 46, 62, 65, 73, 85, 90, 96, 97, 98, 100, 105, 107, 109, 113, 115, 118, 123, 145, 160, 168, 170, 184, 219, 222, 223, 228, 237, 247, 248, 285, 297, 314, 320, 321, 322, 326, 327, 331, 333, 335, 336, 338, 339, 340, 341, 343, 344, 345, 355, 373, 393, 395, 397, 398, 399], "habit": 6, "haddad": 92, "hal": [92, 316], "half": [97, 109, 133, 194, 236, 322, 336], "halko": 115, "ham": [102, 109, 163, 177, 181, 183, 235, 277, 278, 279, 282, 296, 343, 346], "hamid": 92, "han": [89, 92, 102, 109, 279, 346], "hand": [85, 94, 109, 164, 320, 321, 322, 324], "handl": [4, 24, 38, 73, 89, 97, 109, 118, 133, 169, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 276, 327, 333, 336, 337, 339, 344, 345, 346, 366, 368, 376, 378, 382, 384, 390, 393, 398], "hann": [109, 177, 182], "hannemos": 92, "happ": [109, 182, 343], "happen": 318, "hard": [20, 108, 115, 314, 320], "hardc": 108, "hardconc": [20, 108], "hardspec": 108, "hardst": 108, "harri": [109, 143], "has_complex_dim": [109, 268], "has_data": [97, 109, 333], "has_defined_nam": [97, 98, 109], "has_rais": 346, "has_unit": [97, 109], "hasattr": 119, "hat": [17, 19, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 314, 321], "hatch_color": 336, "hatch_linewidth": 336, "have": [2, 6, 10, 12, 13, 16, 18, 19, 30, 31, 37, 41, 49, 53, 62, 73, 74, 81, 94, 97, 98, 100, 109, 112, 123, 128, 140, 146, 156, 161, 165, 175, 204, 212, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 282, 309, 315, 318, 320, 322, 323, 325, 326, 327, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 345, 346, 348, 356, 377, 387, 397], "haven": 5, "hay": [92, 109, 157], "hc": 92, "hdr": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "head": 83, "header": [109, 239, 361], "health": 90, "heart": [90, 314], "height": [73, 74, 109, 114, 169, 204, 322, 336], "heigth": 73, "heli": [92, 316], "hello": 124, "helmu": 1, "help": [6, 9, 12, 84, 86, 88, 91, 325, 331, 336, 338, 339, 340, 373], "helper": 6, "helvet": 336, "helvetica": 336, "henc": [18, 37, 108, 115, 314, 320, 321, 326, 327, 345, 346], "henrik": 92, "her": 348, "here": [6, 13, 17, 18, 19, 21, 22, 23, 31, 36, 37, 38, 42, 43, 45, 46, 49, 62, 69, 73, 74, 82, 89, 94, 100, 108, 109, 237, 247, 248, 315, 318, 319, 320, 321, 322, 324, 325, 326, 327, 330, 333, 335, 336, 339, 341, 343, 345, 346, 347, 348], "herebi": 2, "herefrom": 2, "hereinabov": 2, "hereinaft": 2, "hereof": 2, "hereund": 2, "hermit": [62, 95, 339], "hesit": [81, 331], "hex": [332, 336], "hidden": [93, 326], "high": [9, 94, 109, 300, 399], "high_bound": [30, 73, 74, 75, 318], "higher": [83, 109, 128, 285, 297, 322, 339], "highest": [117, 322], "highli": [92, 315, 316, 331], "highlight": 332, "hilbert": [109, 184], "hilvert": [109, 184], "hint": 336, "hist_bin": 336, "histogram": 336, "histori": [4, 6, 22, 23, 41, 73, 75, 89, 90, 109, 247, 320, 321, 323, 327, 334, 338, 341, 344, 345, 348, 377], "hold": [97, 109, 218, 221, 225, 226, 227, 234, 331], "holder": [2, 109, 238], "home": [16, 21, 24, 41, 44, 46, 53, 73, 89, 93, 323, 325, 326, 327, 330, 335, 336, 345, 346, 348, 387], "homebrew": [5, 83], "homepag": [19, 320, 321], "homogen": 363, "honour": 92, "hook": 6, "hope": [315, 333, 334], "hopefulli": [90, 326, 333, 366, 373], "horizont": [109, 218, 221, 225, 226, 227, 322, 336], "host": [12, 332], "hostedtoolcach": 346, "hot": [36, 333], "hotfix": 371, "hour": [17, 24, 31, 38, 42, 97, 98, 109, 170, 318, 333, 348], "how": [6, 8, 22, 37, 38, 46, 81, 109, 276, 314, 315, 321, 322, 323, 324, 326, 329, 333, 336, 342, 345, 346, 347], "howev": [2, 6, 18, 41, 65, 73, 97, 109, 129, 132, 232, 285, 289, 297, 315, 318, 320, 321, 326, 327, 330, 333, 335, 336, 340, 346], "hpf": 327, "hpl": 19, "hplc": [19, 320, 321], "hr": [38, 46, 98, 318], "hspace": 204, "ht": 109, "html": [6, 9, 109, 304, 327, 332, 333], "http": [0, 5, 6, 27, 38, 41, 46, 83, 85, 87, 92, 109, 304, 320, 324, 325, 327, 331, 332, 336, 339, 346, 393], "hua": 92, "human": [94, 119], "hydrodesulfur": [92, 316], "hydrogel": [92, 316], "hyperbol": 342, "hypercomplex": [97, 103, 104, 109, 120, 121, 130, 145, 200, 342], "hyphen": [332, 336], "hypothet": [109, 297], "hz": [38, 58, 75, 97, 109, 163, 181, 271, 338, 341], "h\u2070": 333, "i": [1, 2, 4, 5, 6, 9, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 27, 30, 36, 37, 38, 41, 46, 49, 53, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 83, 84, 85, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 185, 186, 191, 194, 196, 197, 199, 200, 202, 203, 204, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 267, 268, 271, 276, 279, 281, 282, 283, 284, 285, 286, 289, 291, 292, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 348, 350, 351, 354, 363, 372, 374, 376, 379, 386, 390, 391, 393, 395, 396, 397, 398, 399, 402], "i0": [73, 75], "i2iexp": 94, "iadd": 333, "iana": 336, "ib": [109, 126, 127], "ibr": 2, "ica": [17, 100, 314], "icon": [13, 330], "id": [97, 98, 109, 118, 138, 176, 198, 232, 275, 298, 331, 333], "idea": [2, 12, 82], "ident": [2, 50, 109, 118, 167, 346], "identif": [92, 316], "identifi": [2, 49, 97, 98, 109, 118, 157, 169, 318, 333], "ie": 31, "iecewis": 339, "ieee": 92, "iexp": 94, "ifft": [109, 168, 341], "ignor": [6, 97, 109, 117, 123, 128, 130, 131, 170, 200, 203, 215, 241, 244, 326, 374], "igrf": 327, "igsm": 327, "ii": [2, 74, 109, 147, 148, 320, 321, 335, 339, 344], "iia": 94, "iii": [2, 320, 321, 339], "ij": 314, "ill": 92, "illustr": [6, 322, 326, 336, 345, 346], "im": 341, "imag": [6, 36, 46, 109, 117, 147, 148, 201, 204, 205, 218, 219, 221, 222, 223, 225, 226, 227, 228, 233, 326, 332, 336, 338, 341, 367, 399], "image_aspect": 336, "image_cmap": 336, "image_composite_imag": 336, "image_interpol": 336, "image_lut": 336, "image_origin": 336, "image_resampl": 336, "imagin": 326, "imaginari": [6, 97, 103, 104, 109, 120, 136, 145, 184, 187, 218, 221, 225, 226, 227, 263, 341, 342, 344, 347], "img": 332, "immedi": 8, "immeubl": 2, "impact": [322, 339, 395], "implement": [4, 8, 94, 99, 109, 129, 132, 157, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 300, 302, 314, 320, 321, 322, 324, 327, 331, 333, 337, 339, 345, 346], "implicit": 94, "import": [4, 6, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 109, 118, 119, 125, 162, 195, 237, 247, 248, 271, 318, 320, 321, 322, 323, 324, 325, 329, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 366, 398], "import_optional_depend": 6, "importerror": [6, 84, 325], "importexport": 327, "impos": 20, "improp": 336, "improv": [6, 9, 21, 81, 82, 97, 109, 115, 171, 319, 320, 331, 336, 338, 340, 353, 362, 366, 368, 369, 370, 373, 375, 377, 381, 385, 390, 392, 399, 401], "imshow": 336, "imul": 341, "ina": 92, "inaccur": [109, 285, 297], "inch": [109, 204, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 336], "includ": [1, 2, 4, 6, 9, 12, 27, 82, 83, 84, 86, 88, 89, 94, 95, 97, 98, 109, 118, 133, 169, 178, 194, 197, 319, 326, 327, 331, 332, 336, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "include_limit": [95, 339], "incompat": [38, 97, 109, 191, 248, 289, 336], "inconsist": [109, 247], "incorpor": [2, 109, 247], "incorrect": 21, "increas": [21, 65, 94, 95, 108, 109, 137, 318, 326, 327, 336, 339, 340, 346, 380, 398, 401], "increment": [97, 345], "incur": 2, "inde": 320, "independ": [24, 99, 100, 105, 107, 108, 109, 112, 113, 115, 122, 123, 204, 247, 314, 320, 336, 341], "index": [9, 21, 36, 37, 73, 74, 94, 96, 97, 98, 105, 108, 109, 115, 116, 134, 135, 139, 147, 148, 162, 167, 239, 267, 281, 294, 318, 320, 321, 327, 339, 342, 348, 363, 386, 396, 398, 399], "index_pc": 24, "indic": [2, 17, 22, 49, 73, 95, 97, 105, 108, 109, 115, 125, 130, 131, 145, 158, 169, 200, 203, 214, 281, 288, 314, 320, 321, 324, 326, 327, 339, 343, 344, 345, 360], "indiffer": 338, "indirect": [109, 256], "indirectli": 2, "individu": [2, 6, 37, 41, 62, 107, 109, 113, 128, 218, 221, 225, 226, 227, 315, 318, 322, 333, 336, 337, 379], "induct": 341, "industri": 2, "ineffect": 2, "inf": [6, 109, 117, 174], "infer": [19, 97, 109, 126, 127, 133, 178, 194, 197, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 322], "infin": [109, 115, 129, 344], "infinit": [109, 285, 297], "info": [17, 18, 19, 20, 21, 24, 30, 53, 62, 65, 73, 74, 75, 78, 89, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 124, 188, 267, 279, 300, 318, 320, 322, 325, 332, 346, 360, 377, 391], "info_": [30, 53, 89, 94, 124, 325, 346], "inform": [5, 6, 18, 19, 27, 30, 31, 65, 82, 89, 97, 109, 115, 117, 142, 179, 239, 314, 315, 319, 321, 322, 324, 326, 327, 329, 330, 333, 336, 343, 346, 377, 393], "informatiqu": 2, "infra": [92, 316], "infrar": [18, 37, 89, 92, 93, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 327, 336], "infring": 2, "inherit": 336, "ini": 6, "init": [99, 109, 112, 391], "init_concentr": 94, "init_x": 116, "initalis": 339, "initi": [2, 6, 19, 20, 73, 90, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 122, 123, 160, 164, 165, 319, 327, 331, 333, 336, 339, 346, 352, 353], "initial_ind": 335, "initial_rang": 96, "initial_rt": [45, 69, 78, 346], "initialis": [109, 112, 395], "inlet_f": 116, "inlet_x": 116, "inlin": 336, "inner": [109, 128, 342], "innov": 2, "inplac": [38, 58, 59, 97, 109, 119, 139, 141, 143, 147, 148, 152, 163, 168, 172, 173, 177, 181, 182, 183, 186, 191, 192, 193, 199, 215, 216, 262, 264, 268, 269, 272, 281, 282, 283, 287, 289, 291, 292, 294, 296, 327, 333, 338, 341, 343, 348], "input": [16, 19, 31, 95, 96, 97, 99, 100, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 126, 127, 129, 130, 131, 132, 133, 136, 137, 140, 141, 143, 144, 146, 147, 148, 153, 156, 157, 158, 160, 161, 163, 164, 165, 169, 174, 175, 177, 178, 182, 183, 194, 197, 200, 202, 203, 211, 212, 215, 216, 234, 263, 267, 279, 280, 283, 284, 285, 286, 288, 296, 297, 300, 308, 309, 310, 313, 320, 326, 342, 363, 398], "inquir": 336, "inria": 2, "insensit": 95, "insert": [85, 332], "insid": [6, 332, 336], "insight": [92, 316, 334], "inspac": [97, 109, 133], "inspect": [66, 89, 319, 340], "inspir": 6, "instal": [5, 6, 84, 91, 105, 331, 336, 350, 351, 354, 362, 367, 375, 379, 382, 383, 392, 401, 402], "instanc": [36, 37, 38, 49, 93, 94, 95, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 124, 142, 145, 164, 165, 170, 174, 175, 179, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 265, 266, 289, 293, 308, 309, 315, 318, 320, 321, 322, 324, 325, 326, 327, 333, 336, 339, 341, 344, 345, 346, 348], "instanti": 117, "instead": [6, 12, 23, 31, 37, 38, 62, 73, 97, 98, 102, 109, 117, 118, 130, 131, 140, 142, 161, 165, 168, 169, 171, 178, 179, 197, 200, 203, 218, 219, 221, 222, 223, 225, 226, 227, 228, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 279, 285, 297, 315, 331, 332, 333, 336, 339, 344, 345, 346, 353, 385, 391, 393, 395, 399], "institut": 2, "instruct": [2, 82, 83, 325, 350, 367], "instrument": [2, 27, 92, 324, 327], "int": [8, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 124, 128, 129, 130, 131, 132, 136, 137, 139, 140, 141, 143, 146, 147, 148, 152, 153, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 194, 197, 199, 200, 202, 203, 204, 211, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 236, 238, 256, 262, 263, 264, 267, 270, 276, 279, 280, 281, 282, 283, 285, 286, 287, 295, 296, 297, 300, 308, 310, 312, 313, 333, 336, 339], "int64": [109, 164, 174, 211, 308], "int8": [109, 174, 211, 308], "int_": 105, "integ": [21, 23, 62, 78, 95, 97, 102, 109, 128, 133, 139, 141, 143, 152, 153, 156, 163, 168, 172, 173, 177, 181, 182, 183, 186, 199, 202, 215, 216, 232, 262, 264, 267, 276, 279, 282, 285, 286, 295, 296, 297, 300, 339, 344, 345], "integr": [2, 11, 20, 73, 75, 90, 94, 99, 100, 105, 106, 108, 109, 112, 115, 122, 123, 153, 276, 286, 295, 319, 329, 331, 346, 353, 362, 399], "intel": 24, "intellectu": 2, "intellig": [16, 92, 326], "intend": 2, "intens": [16, 36, 73, 74, 75, 89, 109, 122, 157, 204, 247, 320, 322, 333, 335, 338, 340, 341], "intention": 119, "interact": [62, 82, 84, 86, 88, 92, 99, 100, 105, 108, 112, 115, 122, 123, 336, 353], "interactiveanalysi": 122, "interactiveshel": 346, "intercept": [31, 107, 113, 318], "interchang": [109, 287, 294], "interest": [2, 3, 18, 19, 27, 37, 49, 62, 73, 74, 90, 97, 109, 320, 321, 324, 326, 327, 333, 339, 341, 344, 345, 346], "interfac": [2, 90, 92, 101, 314, 330, 331, 336, 346], "interfero": 343, "interferogram": [109, 240, 242, 250, 251, 329, 342, 369, 370, 375, 382], "interlac": 344, "interleav": 109, "intermedi": [114, 339], "intern": [2, 4, 90, 95, 99, 100, 105, 106, 108, 112, 114, 115, 117, 118, 122, 123, 327, 331, 333, 377], "internet": 393, "interp": [102, 109, 267, 279], "interphas": [92, 316], "interpol": [62, 92, 95, 96, 109, 128, 169, 249, 322, 337, 339, 346], "interpolate_method": [109, 128], "interpolate_sampl": [109, 128], "interpret": [2, 109, 115, 118, 169, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "interrupt": 2, "intersect": [109, 128, 322, 337], "interv": [96, 97, 109, 115, 128, 133, 144, 178, 194, 197, 204, 236, 276, 322], "intervent": 2, "intialis": 395, "introduc": 391, "introduct": [48, 51, 55, 91, 109, 224, 317, 319, 329, 342], "intsimp": 323, "inttrapz": 323, "intuit": [3, 89, 92, 316], "inv": [109, 141, 143, 163, 168, 177, 181, 182, 183, 215, 216, 282, 296], "invalid": [2, 344], "invers": [89, 92, 95, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 141, 143, 163, 168, 177, 181, 182, 183, 186, 215, 216, 282, 296, 316, 327, 344], "inverse_transform": [17, 30, 74, 75, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 318, 391], "investig": [20, 92, 316], "invis": 336, "invok": 2, "involv": 105, "io": 38, "io_loop": 346, "ion": [92, 316], "ion_curr": [109, 249], "iop": 92, "ip": 322, "ipkernel": 346, "ipykernel": 346, "ipykernel_16675": [], "ipykernel_16689": 346, "ipykernel_launch": 346, "ipynb": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 326, 327], "ipython": [86, 88, 96, 335, 346], "ipython3": 327, "ipywidget": [101, 390], "ir": [30, 40, 41, 47, 53, 55, 74, 92, 97, 109, 147, 148, 162, 239, 247, 304, 316, 317, 318, 322, 323, 326, 328, 329, 331, 333, 335, 336, 339, 343, 344, 345, 348, 375], "ir4": [109, 304], "ird": 343, "irdata": [15, 18, 21, 23, 30, 37, 41, 42, 43, 50, 62, 85, 89, 93, 96, 97, 99, 109, 118, 123, 139, 140, 146, 153, 169, 195, 202, 237, 238, 239, 241, 247, 248, 252, 254, 255, 276, 284, 285, 286, 295, 297, 301, 302, 318, 322, 323, 326, 327, 333, 336, 337, 339, 343, 344, 345, 348], "irdh": 343, "iri": [14, 25, 33, 92, 97, 98, 99, 100, 106, 108, 109, 112, 115, 122, 123, 196, 237, 316, 317, 353, 360, 374, 375, 399], "iris1": 18, "iris2": 18, "iris3": 18, "iriskernel": [18, 89], "irt": 343, "irth": 343, "is_1d": 109, "is_compatible_with": [119, 125], "is_complex": [109, 147, 148, 268], "is_empti": [97, 98, 109, 333], "is_fil": [109, 111, 118], "is_float": [97, 109], "is_integ": [97, 109], "is_interleav": 109, "is_label": [97, 98, 109], "is_mask": 109, "is_quaternion": [109, 268], "is_same_dim": 98, "is_units_compat": [97, 109], "isfloat": 44, "isinst": [4, 119, 125, 270], "isn": 9, "isobutanol": [92, 316], "isoformat": 109, "isol": 85, "isotherm": 94, "isotop": 353, "isp_matrix": [19, 24, 320, 321], "issu": [2, 5, 6, 84, 86, 88, 91, 92, 109, 128, 285, 297, 325, 326, 327, 344, 353, 358, 361, 362, 363, 365, 374, 375, 378, 382, 384, 390, 392, 395, 396, 397, 399, 400], "istri": 91, "itakura": 112, "ital": [332, 336], "item": [6, 97, 109, 118, 119, 171, 327, 332, 345], "item_to_attr": [109, 118], "iter": [19, 20, 21, 24, 30, 62, 89, 94, 95, 97, 98, 100, 106, 108, 109, 112, 114, 115, 117, 137, 142, 158, 170, 171, 179, 280, 320, 339, 392], "iterabbl": 115, "iterated_pow": 115, "iterdir": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "ith": [53, 327], "ito": [38, 97, 109, 119, 190, 192, 193, 289, 323, 327, 336, 348, 358], "ito_base_unit": [97, 109, 119, 191, 193, 289], "ito_pref": 119, "ito_reduced_unit": [97, 109, 119, 191, 192, 289], "ito_root_unit": 119, "its": [2, 66, 90, 91, 94, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 140, 159, 161, 185, 210, 218, 221, 225, 226, 227, 231, 245, 246, 274, 318, 320, 321, 322, 327, 332, 333, 335, 336, 345, 346, 380, 395, 397], "itself": [2, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 267, 279, 326], "ivp_solver_kwarg": [20, 94], "j": [1, 92, 97, 108, 109, 118, 119, 151, 190, 193, 211, 212, 292, 316, 327, 333], "jaap": 92, "jacobian": 94, "jafari": 92, "jaggi": 336, "jamil": 92, "jan": [92, 327], "jaroniec": 1, "jaroslava": 92, "jaumot": [14, 17, 24, 25, 33, 92, 108, 109, 237, 317, 320, 321], "ja\u0161\u00edk": 92, "jcamp": [91, 92, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 326, 328], "jcat": [92, 316], "jdx": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 327], "jean": 92, "jendrlin": 92, "jeroen": 92, "jet": [73, 336], "jianjun": 92, "jo": 92, "joanna": 92, "joaquim": 92, "job": 90, "john": 326, "join": [15, 30, 59, 73, 322, 326], "joint": 2, "joran": 92, "joren": 92, "joul": [109, 211], "journal": 92, "jpeg": 336, "jr": 92, "json": [109, 118, 353], "jth": 327, "juan": [92, 314], "jul": [23, 41, 89, 323, 348], "jupyt": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 84, 85, 86, 88, 90, 96, 314, 331, 332, 336, 392], "jupyterlab": 330, "juraj": 92, "juri": 92, "jurisdict": 2, "just": [18, 31, 41, 46, 62, 100, 335, 337, 343, 344, 348], "k": [6, 15, 16, 18, 20, 21, 22, 23, 36, 53, 58, 59, 88, 89, 92, 94, 98, 105, 106, 109, 116, 123, 159, 167, 204, 236, 314, 324, 333, 336, 341], "k0": 20, "k_1": 94, "k_dt": 94, "k_exp": 94, "k_n": 94, "kadam": [92, 316], "kalb\u00e1\u010d": 92, "karimvand": 92, "karol\u00edna": 92, "katsumo": 340, "katsumoto": [92, 109, 157, 340, 392], "kbr": 327, "kee": 92, "keep": [5, 18, 20, 62, 66, 73, 74, 78, 94, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 151, 160, 318, 322, 336, 342], "keep_row": 46, "keepdim": [97, 109, 119, 129, 130, 131, 132, 140, 153, 200, 202, 203, 234, 285, 286, 297], "keepnam": [97, 98, 109, 151], "kei": [4, 73, 94, 98, 320, 322, 327, 361], "keller": [14, 25, 33, 97, 99, 109, 146, 161, 317], "kelvin": 94, "kept": [108, 109, 115, 219, 222, 223, 228, 327, 395], "kernel": [18, 105, 106, 109, 279, 336, 346, 360, 399], "kernelapp": 346, "kernelbas": 346, "kevin": 92, "keyerror": 333, "keyword": [45, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 133, 141, 142, 143, 146, 152, 156, 160, 163, 164, 165, 168, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 186, 194, 195, 197, 199, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 267, 276, 279, 282, 285, 295, 296, 297, 300, 301, 308, 309, 318, 322, 327, 339, 378, 397], "kg": [97, 109, 119, 193, 292], "khodadadi": 92, "khz": 271, "kilogram": 333, "kilomet": [31, 109, 167, 211, 318], "kin": 20, "kin_exp": 94, "kin_param_to_set": 116, "kind": [5, 97, 105, 106, 109, 161, 315, 318, 326, 333, 334, 347], "kindli": 0, "kinet": [14, 25, 33, 84, 92, 94, 97, 99, 108, 109, 116, 237, 316, 317, 392], "klass": 114, "kleibert": 92, "km": [31, 38, 97, 109, 167, 170, 171, 175, 211, 318], "know": [38, 90, 99, 100, 105, 112, 115, 122, 123, 314, 318, 327, 339], "knowledg": [2, 90, 327], "known": [12, 109, 198, 239, 318, 320, 346], "kubelka": [109, 247], "kubi\u010dka": 92, "kullback": 112, "kutta": 94, "kv\u00edtek": 92, "kwarg": [4, 8, 94, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 128, 130, 131, 133, 141, 142, 143, 144, 146, 151, 152, 154, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 185, 186, 188, 194, 195, 197, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 267, 276, 277, 278, 279, 281, 282, 288, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 344, 346], "kwargsgetconc": [20, 108], "kwargsgetspec": 108, "l": [2, 18, 49, 59, 62, 66, 69, 73, 74, 75, 92, 105, 109, 172, 173, 218, 221, 224, 225, 226, 227, 262, 314, 318, 321, 322, 324, 338, 339, 340, 341, 346, 360, 390], "l1": 112, "l1_ratio": 112, "l2": [109, 112, 247], "l3": [109, 247], "l_1": 321, "l_x": [314, 324], "l_y": [314, 324], "la": [2, 92, 316], "lab": [23, 24, 96, 314, 331, 336, 392], "label": [4, 15, 16, 18, 21, 22, 23, 27, 31, 36, 37, 41, 49, 50, 53, 58, 59, 69, 73, 74, 84, 86, 88, 89, 97, 98, 109, 115, 204, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 238, 281, 315, 318, 321, 322, 323, 324, 327, 334, 336, 339, 341, 343, 345, 346, 348, 361, 390], "labelcolor": 336, "labels_column": [23, 115], "labels_everi": [115, 321], "labor": 2, "laboratori": [16, 92], "labspec": [45, 49, 65, 66, 69, 78, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 340, 346, 353, 374], "labspec6": 326, "lack": 320, "laetitia": 92, "laid": 109, "lakeh": 92, "lamb": [69, 78, 95, 102, 109, 137, 300, 339, 346], "lambda": [97, 105, 106, 109, 170, 198, 275, 314, 318, 332], "langmuir": [18, 89, 106], "languag": [2, 13, 83, 331], "laod": 22, "lapack": 115, "larg": [11, 15, 73, 109, 122, 169, 300, 315, 322, 336, 339, 346, 366], "larger": [62, 78, 95, 102, 108, 109, 115, 137, 144, 157, 169, 300, 302, 320, 321, 325, 336, 346], "largest": [18, 109, 311, 344, 346], "larmor": [97, 271], "laser": [97, 343], "laser_frequ": [97, 343, 382], "last": [6, 18, 19, 74, 89, 97, 100, 102, 108, 109, 128, 129, 132, 141, 143, 145, 146, 152, 160, 163, 168, 172, 173, 177, 178, 181, 182, 183, 186, 194, 197, 199, 215, 216, 238, 262, 264, 267, 276, 279, 281, 282, 289, 295, 296, 300, 318, 321, 322, 326, 327, 335, 336, 338, 339, 340, 342, 345, 346, 393, 401], "latent": [314, 324], "later": [37, 74, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 267, 279, 300, 336, 399], "latest": [9, 83, 401], "latex": 336, "latex_preambl": 336, "latter": [65, 327, 346], "launch": [88, 96, 320, 330], "launch_inst": 346, "launch_new_inst": 346, "laura": 92, "law": 2, "layout": [109, 219, 220, 222, 223, 228, 229, 230], "lb": [58, 73, 75, 109, 163, 181, 338, 341], "lc": [86, 88, 89, 90, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "le": [2, 92, 109, 237, 247, 248, 316], "lead": [21, 112, 322, 325, 336, 339, 346], "learn": [22, 85, 92, 95, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 196, 316, 321, 324, 330, 331, 336], "least": [2, 30, 31, 62, 92, 95, 102, 107, 108, 109, 113, 114, 117, 137, 142, 158, 179, 280, 300, 314, 316, 319, 320, 329, 336, 339, 393, 395, 399], "least_squar": [114, 399], "leastsq": [73, 75, 114], "leau": [92, 316], "leav": 336, "leblanc": 2, "left": [13, 73, 85, 94, 97, 108, 109, 115, 117, 123, 129, 130, 131, 132, 136, 172, 173, 177, 199, 200, 202, 203, 204, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 263, 285, 286, 297, 314, 320, 322, 336, 339, 346], "left_bas": [73, 322], "left_ip": [73, 322], "left_op": 94, "leftarrow": 108, "legaci": 336, "legal": 2, "legend": [15, 16, 21, 23, 27, 31, 49, 50, 59, 69, 73, 109, 224, 318, 322, 323, 324, 336, 339, 341, 343, 346], "legend_borderaxespad": 336, "legend_borderpad": 336, "legend_columnspac": 336, "legend_edgecolor": 336, "legend_facecolor": 336, "legend_fancybox": 336, "legend_fonts": 336, "legend_framealpha": 336, "legend_frameon": 336, "legend_handleheight": 336, "legend_handlelength": 336, "legend_handletextpad": 336, "legend_labelspac": 336, "legend_loc": 336, "legend_markerscal": 336, "legend_numpoint": 336, "legend_scatterpoint": 336, "legend_shadow": 336, "legisl": 2, "leibler": 112, "leiden": 92, "len": [6, 73, 108, 109, 119, 154, 169, 237, 241, 247, 248, 285, 297, 318, 322, 336], "len_seq": 119, "length": [38, 94, 97, 107, 109, 113, 117, 118, 119, 125, 133, 140, 169, 178, 197, 224, 283, 289, 302, 314, 320, 322, 333, 336, 345, 346, 348], "leq": [109, 177, 182, 183, 314], "less": [74, 94, 98, 102, 109, 112, 115, 117, 267, 318, 333, 336], "let": [5, 18, 20, 23, 27, 30, 31, 37, 38, 50, 53, 66, 73, 78, 89, 109, 139, 318, 320, 321, 322, 323, 324, 325, 326, 327, 333, 335, 337, 339, 340, 341, 344, 345, 346, 348], "letter": [2, 105, 333, 336], "level": [9, 92, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 156, 180, 204, 267, 270, 279, 300, 316, 320, 325, 332, 336, 343, 391], "liabil": 2, "liabl": 2, "lib": [21, 24, 335, 346], "libor": 92, "librairi": [48, 51, 55, 109, 224, 317], "librari": [3, 6, 31, 36, 62, 85, 89, 90, 100, 108, 109, 119, 293, 330, 331, 333, 336, 346, 390], "licenc": [109, 184], "licens": [0, 46, 90, 91, 109, 300, 325], "license": 2, "licensor": 2, "life": 326, "light": [97, 336], "lighter": 336, "lign": 333, "like": [5, 6, 8, 13, 31, 36, 73, 74, 94, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 123, 126, 127, 156, 157, 160, 165, 169, 175, 212, 238, 267, 274, 279, 300, 309, 314, 318, 321, 322, 326, 327, 330, 334, 336, 344, 401], "likelihood": [109, 285, 297], "lim": 341, "limit": [2, 21, 49, 78, 81, 95, 97, 109, 142, 144, 179, 218, 221, 225, 226, 227, 232, 239, 243, 247, 318, 319, 321, 322, 323, 327, 331, 333, 336, 339, 345, 346], "linalg": [31, 115], "line": [2, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 66, 73, 74, 75, 78, 90, 93, 95, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 138, 158, 163, 176, 198, 204, 206, 218, 221, 224, 225, 226, 227, 275, 298, 314, 318, 320, 321, 322, 327, 333, 335, 336, 342, 346, 390, 391], "line_1": [30, 74, 318], "line_2": [30, 74, 318], "line_3": 74, "line_4": 74, "line_5": 74, "linear": [8, 29, 30, 32, 33, 62, 78, 95, 96, 97, 100, 107, 109, 113, 114, 117, 128, 158, 197, 215, 216, 232, 314, 317, 319, 353, 368, 395, 396, 398], "linear_model": [107, 113], "linearcoord": [356, 395], "linearize_below": 97, "linearli": 314, "linearregress": [107, 113], "linebreak": 332, "linei": 318, "lines_antialias": 336, "lines_color": 336, "lines_dash_capstyl": 336, "lines_dash_joinstyl": 336, "lines_dashdot_pattern": 336, "lines_dashed_pattern": 336, "lines_dotted_pattern": 336, "lines_linestyl": 336, "lines_linewidth": 336, "lines_mark": 336, "lines_markeredgecolor": 336, "lines_markeredgewidth": 336, "lines_markerfacecolor": 336, "lines_markers": 336, "lines_scale_dash": 336, "lines_solid_capstyl": 336, "lines_solid_joinstyl": 336, "linestyl": [20, 73, 74, 78, 109, 218, 221, 225, 226, 227, 322, 336, 338, 343], "linetyp": 206, "linewidth": [109, 117, 204, 218, 221, 225, 226, 227, 320, 321, 336], "linex": 318, "linez": 318, "link": [8, 9, 81, 331, 360], "linspac": [36, 97, 98, 109, 133, 178, 197, 318, 333], "linter": 6, "linux": [5, 83, 87, 91, 93, 326, 338, 367, 376], "lisa": 92, "list": [4, 8, 31, 37, 49, 65, 82, 84, 94, 95, 96, 97, 98, 101, 105, 108, 109, 114, 115, 117, 118, 119, 128, 162, 164, 165, 174, 175, 204, 211, 212, 213, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 308, 309, 314, 315, 318, 320, 321, 322, 324, 326, 327, 333, 336, 339, 342, 345, 350, 360, 363, 398], "list_fil": 327, "list_of_tz_database_time_zon": 333, "listdir": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "listnd": [109, 247], "liter": 326, "literatur": 320, "littl": [23, 62, 348], "live": 9, "ll": [6, 89, 95, 105, 319, 339], "ln": [97, 109, 197, 327], "lnd": 24, "load": [2, 4, 15, 22, 23, 24, 36, 38, 40, 47, 49, 53, 55, 62, 65, 66, 73, 89, 96, 97, 109, 115, 118, 123, 217, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 314, 317, 318, 319, 320, 326, 329, 333, 334, 339, 340, 344, 382, 390, 392], "load_iri": [22, 109], "lob": 318, "loc": [27, 69, 97, 324, 339, 341, 346], "loc2index": [93, 97], "local": [4, 46, 85, 94, 109, 169, 266, 333, 336], "local_timezon": [109, 333], "localvar": 266, "localvr": 266, "locat": [6, 9, 49, 50, 84, 85, 93, 95, 97, 109, 118, 158, 241, 314, 322, 326, 336, 339, 343, 346, 354, 355, 399], "log": [11, 15, 16, 19, 20, 85, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 156, 178, 180, 197, 247, 267, 270, 279, 300, 320, 331, 336, 346, 350, 374, 382, 387, 391, 395], "log10": 336, "log_bas": [97, 109, 197], "log_level": [17, 18, 19, 20, 21, 24, 30, 62, 73, 74, 75, 78, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 156, 267, 279, 300, 318, 320, 325, 391], "logarithm": 344, "logcosh": 100, "logfil": 116, "logger": 387, "logic": [109, 129, 132], "logit": 117, "loglevel": [18, 329], "lognorm": 336, "logspac": [97, 109, 178], "long": [23, 78, 119, 333, 336, 344], "longer": [2, 385], "look": [3, 6, 16, 41, 45, 62, 73, 74, 89, 320, 321, 322, 326, 327, 330, 333, 336, 339, 345], "lookup": 336, "loop": [108, 314], "lopez": [92, 316], "lorentz": [109, 181], "lorentzian": [198, 318], "lorentzianmodel": [298, 318], "loss": 2, "lost": [109, 290, 398], "lot": [6, 315, 333, 334], "louwen": 92, "low": [94, 122, 320, 339], "low_bound": [30, 73, 74, 75, 318], "lower": [22, 23, 24, 27, 108, 109, 115, 144, 167, 320, 321, 322, 324, 325, 336, 341], "lowest": [117, 322], "lpf": 327, "lsdoa": 94, "lsoda": 94, "lst": [318, 393], "lstq": 318, "lstsq": [29, 32, 33, 97, 108, 109, 317, 319], "lt": [15, 318, 320, 321, 322, 323, 324, 333, 335, 346], "lu": [94, 115], "luca": 92, "lucia": 92, "lw": [30, 49, 69, 73, 74, 109, 218, 221, 224, 225, 226, 227, 318, 346], "lyu": 92, "m": [5, 21, 38, 59, 73, 74, 83, 86, 87, 88, 92, 94, 97, 98, 99, 109, 119, 123, 140, 141, 153, 167, 177, 182, 183, 190, 193, 202, 218, 221, 225, 226, 227, 236, 285, 286, 289, 292, 297, 300, 314, 322, 323, 324, 325, 330, 333, 336, 338, 341, 344, 348, 370, 384], "m1": [19, 24, 320, 321], "m5nb": [41, 324], "m5spec": [27, 41, 324], "m_a": [53, 119], "m_b": 53, "m_from": 125, "m_p": 53, "ma": [109, 140, 161, 290, 399], "mac": [83, 93], "macchietti": [92, 316], "machin": [109, 196, 327], "machinenam": 327, "maco": [5, 83, 86, 87], "made": [2, 49, 97, 98, 105, 109, 157, 234, 247, 249, 314, 322, 324, 326, 327, 345, 373], "maeder": [92, 99, 314], "magazin": 92, "maghemit": [92, 316], "magic": [96, 336], "magma": [89, 336, 344], "magma_r": 339, "magnet": [98, 333], "magnitud": [15, 97, 109, 119, 125, 318, 320, 322, 327, 333, 342, 346], "magnitudet": 119, "mahdi": 92, "mahdiyeh": 92, "mahsa": 92, "mai": [1, 2, 3, 38, 53, 62, 65, 66, 73, 84, 92, 95, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 129, 132, 144, 164, 165, 168, 169, 197, 213, 241, 315, 318, 327, 331, 333, 334, 336, 339, 340, 346, 356, 372, 376, 387, 393], "mail": 336, "mail\u00e4nder": 325, "main": [2, 4, 6, 53, 84, 89, 91, 93, 97, 98, 109, 118, 159, 160, 167, 185, 315, 321, 327, 329, 331, 332, 333, 334, 339, 346, 353], "main_glob": 346, "mainimum": [109, 150], "mainli": [16, 90, 114, 331], "maint": 5, "maintain": 6, "mainten": [2, 5], "majeur": 2, "major": [46, 91, 98, 318, 332, 333, 336, 346, 401], "make": [2, 6, 9, 12, 21, 36, 37, 38, 62, 74, 84, 89, 90, 93, 94, 95, 97, 98, 109, 115, 118, 119, 124, 137, 141, 143, 151, 152, 158, 163, 168, 170, 172, 173, 177, 179, 181, 182, 183, 186, 199, 215, 216, 256, 262, 264, 280, 282, 296, 315, 318, 320, 322, 332, 333, 334, 336, 339, 343, 344, 346, 348, 375, 380], "makestyl": [336, 353], "mamba": [83, 84, 86, 87, 88], "mambaforg": [86, 87, 88], "manag": [81, 82, 85, 91, 118, 334], "mandatori": 336, "mani": [6, 38, 81, 90, 94, 109, 315, 320, 322, 325, 326, 331, 333, 386, 388], "manipul": [3, 35, 39, 55, 84, 91, 97, 109, 119, 166, 237, 317, 327], "manner": 2, "manual": [6, 84, 90, 109, 137, 139, 142, 158, 164, 179, 215, 216, 280, 282, 319, 338], "map": [46, 100, 109, 115, 117, 204, 207, 219, 222, 223, 228, 320, 333, 336, 399], "marcel": 92, "marco": 92, "margarita": 92, "margin": [109, 164, 165, 336], "mari": 92, "mark": [6, 109, 224, 318, 322, 332], "markdown": [12, 322], "marker": [73, 74, 75, 109, 117, 218, 221, 224, 225, 226, 227, 318, 322, 324, 336, 399], "markeredgecolor": [109, 218, 221, 225, 226, 227, 336], "markeredgewidth": [109, 218, 221, 225, 226, 227, 336], "markerfacecolor": [109, 218, 221, 225, 226, 227, 336], "markermarkerstyl": 117, "markers": [30, 31, 109, 117, 218, 221, 225, 226, 227, 318, 336], "markers_fillstyl": 336, "market": 2, "markeveri": [30, 109, 218, 221, 225, 226, 227], "markup": 9, "martin": 92, "mask": [6, 15, 21, 23, 30, 97, 109, 123, 128, 136, 161, 167, 185, 211, 218, 221, 225, 226, 227, 261, 263, 289, 290, 333, 334, 336, 337, 339, 342, 344, 382, 390], "masked_arrai": [109, 161, 211, 344], "masked_array_lik": [109, 161], "masked_data": [109, 290], "maskedarrai": 109, "masoumeh": 92, "mass": [6, 92, 94, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "massart": [14, 25, 33, 97, 99, 109, 146, 161, 317], "massimiliano": 92, "massiv": [92, 316], "master": [5, 6, 46, 87, 314, 324, 330, 353], "mat": [17, 19, 20, 24, 27, 41, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 320, 321, 324, 326, 327, 339], "mat_": [41, 393], "match": [94, 109, 119, 139, 144, 146, 169, 344], "materi": [92, 316], "math": [21, 99, 100, 108, 109, 112, 114, 115, 117, 122, 123, 177, 182, 321, 332, 334, 336, 353, 368], "mathbf": 314, "mathemat": [109, 329, 331, 333, 334, 337, 342, 356, 366], "mathrm": [15, 16, 24, 31, 36, 49, 53, 59, 109, 236, 318, 321, 323, 324], "mathtext": 336, "mathtext_bf": 336, "mathtext_c": 336, "mathtext_default": 336, "mathtext_fallback_to_cm": 336, "mathtext_fontset": 336, "mathtext_it": 336, "mathtext_rm": 336, "mathtext_sf": 336, "mathtext_tt": 336, "matlab": [19, 24, 41, 92, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 326], "matlabdata": [17, 19, 20, 24, 109, 245, 246, 320, 321], "matplotlib": [3, 31, 49, 84, 89, 90, 95, 96, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 273, 322, 329, 331, 345, 361, 363, 367, 375, 384, 387, 399], "matplotlibrc": [109, 219, 220, 222, 223, 228, 229, 230], "matric": [17, 19, 94, 109, 112, 245, 246, 300, 314, 320, 321, 324], "matrix": [18, 19, 20, 21, 24, 94, 95, 99, 100, 105, 106, 107, 108, 112, 113, 115, 122, 123, 314, 320, 321, 324, 333, 360], "matter": 321, "matur": 90, "maug": 92, "mauri": 92, "maurin": 92, "max": [15, 16, 20, 58, 59, 73, 92, 94, 97, 105, 108, 109, 115, 169, 232, 238, 318, 320, 322, 327, 338, 341, 344, 348], "max_error": 327, "max_fun_cal": 114, "max_it": [30, 74, 95, 100, 108, 109, 112, 114, 117, 137, 318, 320, 339], "max_lines_in_stack": 336, "max_rel_error": 327, "max_relative_error": 327, "maxdiv": [108, 320], "maxim": [95, 99, 100, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 322], "maxima": [97, 109, 130, 131, 169, 200, 203, 319, 323, 329], "maximis": [314, 324], "maximum": [21, 30, 73, 95, 97, 100, 108, 109, 112, 114, 117, 122, 130, 131, 134, 137, 144, 149, 169, 200, 203, 234, 285, 296, 297, 314, 318, 320, 322, 336, 339, 341, 343, 348], "mayb": [36, 327], "mb": [25, 28, 32, 34, 39, 47, 51, 54, 56, 60, 63, 67, 70, 76, 79, 80, 317], "mc": [92, 109, 320, 341], "mcdonald": [92, 109, 243, 327], "mcr": [14, 25, 33, 91, 92, 94, 97, 99, 100, 105, 108, 109, 112, 115, 122, 123, 237, 314, 316, 317, 319, 321, 329, 331, 360, 391, 392, 398], "mcr1": 320, "mcr2": 320, "mcr3": 320, "mcr4": 320, "mcr5": 320, "mcr_1": 20, "mcr_2": 20, "mcral": [19, 20, 99, 100, 105, 112, 115, 122, 123, 381, 382, 391, 392, 394], "mct": 327, "md": 386, "mdpi": 92, "me": 336, "mean": [2, 17, 21, 46, 62, 95, 97, 98, 100, 102, 107, 109, 112, 113, 117, 128, 140, 158, 161, 171, 193, 267, 268, 285, 286, 292, 297, 324, 331, 337, 339, 345, 361], "measur": [2, 20, 22, 27, 46, 71, 72, 76, 92, 109, 112, 114, 117, 256, 285, 297, 314, 317, 322, 324, 333, 339], "mec": [31, 109, 218, 221, 225, 226, 227, 318, 322], "mechan": 345, "mechanochem": [92, 316], "median": [102, 342], "medic": 92, "medium": [2, 336], "meet": 2, "mem": [25, 28, 32, 34, 39, 47, 51, 54, 56, 60, 63, 67, 70, 76, 79, 80, 317], "member": 53, "memorandum": 2, "memori": [100, 109, 128], "menger": 105, "menghao": 92, "mention": [2, 10, 322, 326, 327], "menu": [85, 330], "merg": [5, 6, 24, 41, 65, 73, 109, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 268], "merit": [22, 24, 115, 318, 321], "messag": [5, 6, 82, 94, 155, 166, 188, 299, 325, 332, 333, 346], "met": [6, 109, 161, 336], "meta": [6, 94, 97, 109, 118, 333, 343, 359, 382], "metadata": [4, 6, 24, 31, 36, 73, 89, 91, 97, 109, 118, 241, 247, 327, 333, 336, 341, 359], "metal": [92, 316], "meter": [38, 97, 109, 119, 190, 289, 333, 348], "meth": 8, "methan": [92, 316], "method": [6, 8, 9, 15, 17, 19, 22, 23, 30, 36, 38, 41, 49, 50, 62, 65, 66, 69, 73, 74, 75, 78, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 128, 129, 132, 136, 137, 139, 141, 143, 147, 148, 152, 156, 157, 163, 168, 172, 173, 175, 177, 181, 182, 183, 186, 195, 199, 204, 205, 206, 207, 208, 209, 210, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 247, 252, 254, 255, 262, 263, 264, 267, 268, 279, 281, 282, 283, 287, 289, 294, 296, 300, 303, 305, 306, 307, 314, 316, 319, 320, 321, 323, 324, 325, 326, 327, 331, 332, 334, 335, 336, 338, 342, 343, 344, 353, 356, 358, 359, 361, 362, 363, 368, 373, 378, 381, 384, 391, 392, 393, 397, 398, 399], "method_1d": [109, 218, 322, 336], "method_2d": [109, 219, 322, 336], "method_3d": 336, "meting9": 20, "mew": [109, 218, 221, 225, 226, 227], "mezzetti": 92, "mfc": [31, 109, 218, 221, 225, 226, 227, 318, 322], "mhvwert": 346, "mhz": 271, "michael": 92, "michel": 2, "micromamba": 83, "micromet": [109, 247], "microsecond": 58, "microsoft": 83, "mid": [109, 310, 311, 312, 313], "middl": [109, 310, 311, 312, 313, 347], "might": [90, 94, 97, 109, 133, 325, 327, 341], "milagro": 92, "millinewton": 119, "millitesla": [98, 333], "mimic": [109, 282, 315, 338, 339], "min": [21, 36, 62, 78, 94, 97, 105, 109, 112, 115, 117, 123, 169, 170, 238, 314, 321, 322, 323, 327, 344, 345], "miniconda": 83, "miniforg": 87, "minim": [82, 83, 94, 107, 109, 112, 113, 116, 139, 314, 319, 321, 322, 333, 346], "minima": 322, "minimis": [109, 139], "minimum": [2, 6, 21, 97, 109, 115, 130, 131, 135, 140, 143, 144, 169, 200, 203, 234, 314, 318, 322, 336, 341, 401], "minka": 115, "minor": [336, 372], "minoux": 92, "minu": 336, "minut": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 97, 109, 190, 322, 327, 336, 345, 393], "mir": 327, "mirror": [102, 109, 267, 279, 346], "miscellan": 2, "mismatch": 337, "miss": [84, 90, 109, 128, 169, 337, 339, 367, 398], "mit": 46, "miter": 336, "mix": [59, 90, 100, 109, 112, 282, 338], "mixing_": 100, "mixtur": [20, 92, 99, 100, 105, 108, 112, 115, 122, 123, 314, 316, 320], "mle": [22, 115], "mm": 327, "mo_al2o3": [18, 37, 89, 322, 327, 345], "mo_al2o3_0": 327, "mo_al2o3_bas": 327, "mode": [5, 102, 109, 114, 267, 279, 336, 346, 401], "model": [0, 15, 17, 18, 20, 22, 23, 24, 27, 30, 31, 62, 73, 74, 78, 89, 92, 94, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 123, 138, 176, 198, 218, 221, 225, 226, 227, 232, 275, 298, 314, 319, 321, 323, 324, 325, 342, 372, 391], "modeldata": [109, 114], "modellinestyl": [109, 218, 221, 225, 226, 227], "modern": 336, "modif": [2, 109, 333, 360], "modifi": [2, 5, 46, 90, 93, 95, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 160, 199, 277, 278, 289, 310, 313, 327, 333, 335, 336, 344, 348, 377, 395], "modl": [109, 218, 221, 225, 226, 227], "modul": [2, 6, 7, 85, 327, 328, 339, 346, 366, 395], "modulu": [109, 201], "mohammad": 92, "moistur": [27, 324], "molar": 92, "molecular": [92, 316], "moment": [78, 109, 161, 330], "monodecconc": 108, "monodectol": 108, "monoincconc": 108, "monoinctol": 108, "monospac": 336, "monoton": [92, 108], "month": [0, 2], "more": [2, 6, 8, 10, 12, 19, 22, 36, 53, 62, 78, 82, 83, 89, 90, 91, 94, 98, 100, 102, 109, 115, 116, 117, 142, 144, 159, 169, 179, 267, 279, 314, 315, 318, 319, 326, 330, 331, 334, 336, 339, 346, 348, 351, 355, 361, 377, 402], "moreov": 346, "morin": 92, "mortim": [36, 333], "mor\u00e1vkov\u00e1": 92, "most": [6, 83, 85, 92, 97, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 289, 314, 316, 321, 322, 331, 333, 335, 336, 338, 346], "mostli": [15, 333], "mount": 85, "mouravieff": 92, "mous": 322, "move": [102, 109, 157, 279, 336, 342], "mp": 341, "mp5nb": [41, 324], "mp5spec": [41, 324], "mp6nb": [41, 324], "mp6spec": [41, 324], "mpl": [109, 219, 222, 223, 228, 336], "mpl_event": 204, "mplstyle": 353, "msdata": [109, 249], "msg": [155, 188, 299, 346], "mt": [333, 336], "mu": [62, 112], "much": [22, 78, 90, 322, 327, 333, 346, 399], "multi": [89, 94, 398, 399], "multicoordin": [351, 362, 382, 390, 402], "multidimension": [1, 109, 141, 143, 152, 163, 168, 172, 173, 177, 182, 183, 186, 199, 215, 216, 262, 264, 281, 282, 296, 345, 356], "multimod": 108, "multipl": [6, 8, 18, 22, 50, 57, 60, 71, 73, 89, 91, 95, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 130, 131, 140, 163, 169, 178, 181, 200, 203, 204, 235, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 278, 282, 312, 317, 333, 341, 342, 353, 358, 397], "multipli": [94, 109, 112, 115, 236], "multiplot": [109, 205, 206, 207, 208, 209, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 339], "multiplot_map": 337, "multisampl": 314, "multivari": [19, 62, 89, 92, 95, 105, 108, 314, 316, 320, 321, 342], "munk": [109, 247], "muschi": 92, "must": [41, 73, 85, 94, 97, 98, 99, 100, 102, 106, 108, 109, 112, 114, 115, 116, 117, 118, 122, 123, 133, 140, 141, 143, 145, 146, 156, 160, 161, 163, 168, 169, 177, 182, 183, 186, 194, 204, 215, 224, 232, 237, 239, 247, 248, 267, 268, 279, 284, 293, 296, 315, 318, 324, 331, 332, 333, 339, 346, 348], "mute": 336, "mutivari": 356, "my": [5, 53, 85], "my_g": 100, "mycoord": [97, 109, 133], "mydatadir": 93, "mydataset": [36, 318, 333], "mydefault": 336, "myfil": [8, 109, 302, 304], "mykhailo": 92, "mylabel": 97, "mynmrdata": 335, "myproj": 118, "myscript": 124, "m\u00e9gane": 92, "n": [4, 20, 24, 34, 56, 62, 80, 83, 86, 87, 92, 97, 99, 105, 109, 117, 119, 123, 138, 141, 153, 158, 167, 170, 176, 177, 182, 183, 184, 185, 198, 204, 232, 236, 275, 276, 285, 297, 298, 312, 314, 316, 322, 324, 335, 336, 346], "n1": 333, "n_compon": [15, 16, 17, 20, 21, 22, 23, 24, 27, 30, 62, 89, 95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 314, 320, 321, 324, 339, 393], "n_cstr": 116, "n_featur": [22, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 267, 279, 300, 314], "n_iter": 100, "n_observ": [22, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 267, 279, 300, 314], "n_oversampl": 115, "n_pc": [16, 115], "n_reaction": 94, "n_sampl": [112, 117], "n_score": 115, "n_speci": 94, "n_target": [107, 108, 113, 117, 314], "n_time": 94, "na": 6, "naiv": 335, "nalidix": [92, 316], "name": [2, 5, 6, 9, 15, 18, 19, 20, 22, 23, 24, 27, 30, 36, 37, 41, 46, 53, 73, 74, 75, 88, 89, 93, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 130, 131, 133, 140, 147, 148, 151, 153, 160, 178, 194, 195, 197, 200, 202, 203, 218, 221, 225, 226, 227, 234, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 281, 282, 285, 286, 294, 297, 301, 302, 304, 318, 320, 321, 323, 324, 325, 326, 327, 331, 332, 333, 335, 336, 337, 338, 339, 341, 344, 345, 348, 391], "nameerror": 336, "namespac": [315, 326, 331], "nan": [6, 97, 109, 117, 129, 130, 131, 200, 203, 344, 382], "nano": 93, "nano15010057": [92, 316], "nanohybrid": [92, 316], "nanomateri": 92, "nanomet": [37, 38], "nanoparticl": [92, 316], "nanosecond": 119, "narrow": [109, 169, 343], "nat": 92, "nation": 2, "nativ": [109, 110, 118, 326, 336], "natur": [2, 92, 316, 327, 344], "navig": [9, 330], "nb": 322, "nb_trace": [17, 19, 20, 24, 62, 95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 321], "nblue": [95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123], "nbsp": [89, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "nbsphinx": [321, 332], "ncol": [204, 337, 339], "nd": [6, 12, 30, 41, 62, 65, 98, 109, 111, 118, 140, 153, 160, 202, 211, 237, 247, 248, 268, 285, 286, 297, 301, 302, 308, 309, 314, 315, 318, 331, 338, 340, 344, 390], "nd1": [65, 73, 97, 109, 118, 151, 190, 195, 335, 337, 340], "nd1a": 337, "nd2": [65, 73, 97, 109, 118, 151, 190, 195, 333, 335, 337, 340], "nd2a": 337, "nd3": [65, 73, 97, 109, 151, 337, 340], "nd4": [65, 73, 337, 340], "nd4a": 337, "nd5": 340, "nd5b": 340, "nd6": 340, "nd7": 340, "nd8": 340, "nd_data": 36, "ndadd": 337, "ndarrai": [8, 94, 95, 97, 98, 99, 100, 105, 106, 108, 109, 112, 114, 115, 117, 122, 123, 129, 132, 139, 151, 156, 157, 161, 172, 173, 181, 184, 190, 194, 276, 289, 290, 295, 311, 312, 314, 315, 327, 333, 334, 335, 344, 353, 363, 400], "ndarrat": [109, 184], "ndata": [109, 184, 311, 312], "ndataset": [109, 312], "ndax": 109, "ndcomplex": 6, "ndd": [44, 97, 109, 289], "nddataset": [4, 6, 8, 12, 16, 18, 19, 21, 23, 27, 30, 31, 38, 39, 41, 43, 50, 53, 61, 63, 73, 74, 75, 81, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 126, 127, 128, 133, 136, 137, 139, 140, 141, 142, 143, 146, 147, 148, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 182, 183, 185, 186, 190, 195, 199, 202, 204, 211, 212, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 293, 294, 295, 296, 297, 300, 301, 302, 308, 309, 310, 313, 317, 319, 320, 321, 322, 323, 324, 326, 327, 329, 331, 335, 342, 343, 353, 385, 393], "nddataset_01de26c1": 344, "nddataset_06b1b11": 344, "nddataset_06b1b11a": 344, "nddataset_06b1b11d": 344, "nddataset_06b1b121": 344, "nddataset_18766b0f": [], "nddataset_1d0da2b2": [], "nddataset_1d0da2b5": [], "nddataset_1d0da2b6": [], "nddataset_1d0da2b9": [], "nddataset_607d948": 73, "nddataset_7824fc98": [], "nddataset_c11c954a": 331, "nddataset_c406cdeb": 333, "nddataset_c4764df2": 333, "nddataset_c4764e16": 333, "nddataset_d706eac2": [], "nddataset_da07a917": [], "nddataset_da768932": [], "nddataset_da768956": [], "ndez": 92, "ndim": [97, 109, 130, 131, 200, 203, 333, 343], "ndlb": 338, "ndlg": 338, "ndmath": [353, 366], "ndoh": [30, 318], "ndohcorr": 318, "ndp": 62, "ndpanel": 353, "nearest": [102, 109, 267, 279, 336, 344], "necessari": [2, 23, 73, 85, 107, 109, 113, 128, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 284, 315, 320, 325, 330, 333, 337, 338, 339, 379, 387], "necessarili": 326, "need": [6, 9, 12, 13, 19, 22, 31, 41, 46, 49, 62, 66, 73, 74, 78, 84, 85, 90, 93, 97, 100, 108, 109, 115, 139, 156, 239, 318, 321, 322, 331, 333, 336, 340, 343, 346, 351, 402], "neg": [24, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 115, 117, 122, 123, 129, 132, 136, 152, 158, 160, 167, 172, 173, 194, 262, 263, 267, 314, 319, 320, 327, 345, 398], "negat": [109, 152, 262], "negative_axi": 109, "neglig": [314, 320], "neighbor": [109, 169, 322, 346], "neighbour": 322, "neither": [2, 90, 117, 325], "nematollah": 92, "nesterenko": 92, "network": [2, 6, 92, 94, 316], "neural": [92, 316], "neuroinflammatori": [92, 316], "never": [6, 336], "nevertheless": 2, "new": [2, 5, 6, 12, 31, 36, 44, 62, 73, 78, 82, 85, 86, 90, 92, 95, 96, 97, 98, 99, 100, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 122, 123, 129, 132, 141, 143, 146, 152, 153, 157, 163, 164, 165, 168, 171, 172, 173, 174, 175, 177, 181, 182, 183, 186, 199, 202, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 239, 262, 264, 268, 281, 282, 283, 284, 285, 286, 287, 289, 294, 296, 297, 308, 309, 314, 320, 324, 325, 326, 331, 332, 333, 335, 336, 338, 339, 341, 348, 350], "new1": [58, 59], "new2": [58, 59], "new3": 59, "new4": 59, "new5": 59, "new_func": 6, "new_wodg": [109, 111, 118], "newargsgetconc": 108, "newargsgetspec": 108, "newcom": 10, "newer": [86, 88], "newest": 360, "newfid": 341, "newproj": 53, "news0": 327, "next": [73, 74, 108, 109, 311, 318, 321, 322, 325, 329, 332, 333, 336], "nfev": 94, "ngreen": [95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123], "nh": 336, "nh4_y": 15, "nh4y": [15, 21, 23, 30, 41, 42, 50, 62, 85, 89, 96, 97, 99, 109, 118, 123, 139, 140, 146, 153, 169, 195, 202, 247, 254, 276, 284, 285, 286, 295, 297, 302, 318, 323, 333, 336, 337, 339, 344, 348], "nice": 10, "nicer": 24, "nicola": 92, "nicolet": [109, 247, 252, 254, 255], "nieto": 92, "nikolai": 92, "nipal": 117, "nir": [27, 324, 339], "nist": [109, 162, 375], "njev": 94, "nl": 318, "nlu": 94, "nm": [4, 16, 24, 27, 37, 38, 109, 247, 324, 339], "nmd": 341, "nmf": [14, 25, 33, 95, 99, 100, 105, 108, 109, 115, 122, 123, 247, 314, 317, 339], "nmr": [1, 40, 47, 55, 58, 59, 76, 81, 90, 93, 97, 98, 109, 114, 163, 168, 172, 173, 184, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 271, 280, 311, 312, 317, 326, 329, 331, 333, 335, 338, 342, 344, 368, 369, 371, 398, 399], "nmr_1d": 335, "nmr_2d": 335, "nmrdata": [44, 58, 59, 73, 74, 75, 333, 335, 338, 341, 347], "nmrdir": [73, 74, 75], "nmrglue": [1, 6, 44, 109, 184, 375], "nndsvd": 112, "nndsvda": 112, "nndsvdar": 112, "nnl": [107, 108, 319, 394], "nnmf": [362, 393], "nogrid": 336, "noinspect": 335, "nois": [15, 16, 24, 65, 66, 89, 92, 109, 122, 157, 169, 338, 339, 340, 346], "noisi": [31, 109, 169, 318, 339], "nomask": [6, 109], "nominal_valu": 119, "non": [2, 94, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 129, 132, 137, 142, 146, 158, 179, 194, 241, 244, 267, 280, 296, 314, 319, 320, 326, 336, 339, 341, 344, 351, 353, 374, 395, 398, 402], "none": [6, 8, 16, 17, 20, 21, 24, 27, 30, 36, 49, 73, 74, 75, 94, 95, 96, 97, 99, 100, 101, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 140, 144, 149, 150, 153, 158, 160, 161, 164, 165, 167, 168, 169, 170, 174, 175, 176, 177, 178, 184, 185, 186, 189, 194, 197, 198, 200, 202, 203, 204, 211, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 238, 240, 241, 242, 244, 250, 251, 266, 270, 275, 282, 283, 285, 286, 297, 298, 301, 308, 309, 310, 313, 318, 320, 322, 324, 326, 333, 335, 336, 339, 346, 382, 384, 390], "nonfinit": 117, "nonneg": [109, 112, 285, 297, 339], "nonnegconc": 108, "nonnegspec": [108, 382], "nonrandom": [320, 321], "nonzero": 327, "noqa": [6, 325, 327, 331], "nor": [2, 90, 109, 117, 119, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 325], "norm": [112, 117, 320, 336, 399], "normal": [16, 36, 58, 59, 99, 100, 101, 108, 109, 115, 117, 176, 285, 296, 297, 315, 318, 320, 336, 338, 341, 346, 353, 399], "normaldistribut": 100, "normandi": 92, "normspec": [108, 320], "notabl": 2, "notat": [336, 341], "note": [6, 8, 15, 21, 22, 23, 36, 41, 45, 49, 62, 69, 73, 74, 81, 94, 96, 97, 98, 99, 100, 105, 108, 109, 111, 112, 114, 115, 117, 118, 122, 123, 129, 130, 142, 164, 165, 169, 171, 179, 194, 195, 197, 200, 202, 214, 237, 238, 247, 248, 249, 252, 254, 255, 267, 282, 285, 297, 318, 320, 322, 326, 327, 333, 336, 337, 338, 339, 343, 344, 345, 346, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "notebook": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 85, 90, 96, 109, 219, 220, 222, 223, 228, 229, 230, 314, 326, 332, 336, 341], "noth": [90, 326, 327, 333, 395], "notic": [2, 62], "notifi": 380, "notimplementederror": 333, "nouar": 92, "novel": [92, 316], "now": [6, 18, 20, 23, 30, 31, 36, 37, 44, 46, 49, 53, 62, 66, 73, 74, 78, 98, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 271, 304, 318, 319, 320, 321, 322, 323, 325, 326, 330, 332, 333, 335, 337, 339, 341, 343, 345, 346, 347, 348, 353, 354, 355, 356, 358, 362, 363, 368, 373, 374, 376, 378, 381, 382, 383, 386, 391, 392, 393, 395, 396, 397, 398, 399, 401], "np": [6, 16, 20, 31, 36, 46, 73, 75, 94, 97, 108, 109, 119, 140, 171, 174, 175, 211, 212, 236, 289, 290, 308, 309, 315, 318, 333, 339, 344, 345, 346, 385], "nr": 2, "nred": [95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123], "nria": 2, "nrow": [204, 337, 339], "nshape": [138, 176, 198, 232, 275, 298], "nspec": 336, "nterpol": 339, "nth": [95, 109, 158], "nuclear": 92, "nucleu": [97, 271], "null": [109, 296, 314], "num": [97, 105, 109, 178, 194, 197, 333], "number": [2, 6, 15, 17, 21, 22, 23, 30, 49, 62, 78, 81, 94, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 128, 129, 133, 136, 137, 139, 141, 142, 146, 152, 156, 162, 167, 168, 169, 171, 172, 173, 177, 178, 179, 182, 183, 184, 185, 194, 197, 199, 202, 204, 218, 221, 224, 225, 226, 227, 238, 245, 246, 247, 256, 262, 263, 264, 267, 268, 276, 279, 284, 285, 297, 300, 312, 314, 321, 322, 323, 333, 336, 339, 342, 343, 346, 372, 395], "number_of_contour": 336, "number_of_x_label": 336, "number_of_y_label": 336, "number_of_z_label": 336, "numbr": 344, "numer": [89, 92, 95, 97, 100, 109, 112, 125, 281, 325, 327, 333, 334, 344], "numpi": [4, 6, 8, 9, 16, 20, 31, 36, 46, 73, 75, 90, 97, 98, 102, 108, 109, 111, 118, 119, 136, 140, 141, 143, 152, 156, 159, 161, 163, 168, 172, 173, 177, 181, 182, 183, 186, 195, 199, 211, 215, 216, 262, 263, 264, 267, 276, 279, 282, 290, 295, 296, 300, 308, 315, 318, 327, 334, 336, 339, 342, 343, 345, 346, 384, 385, 390], "numpydoc": 8, "n\u00e9lieu": 92, "o": [15, 30, 31, 59, 73, 82, 91, 95, 109, 117, 224, 324, 327, 328, 336], "obei": 20, "obj": [109, 118, 335], "object": [2, 6, 16, 18, 20, 22, 23, 24, 27, 30, 31, 36, 41, 62, 73, 74, 75, 91, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 143, 144, 146, 147, 148, 151, 156, 157, 160, 163, 164, 165, 167, 168, 170, 171, 174, 175, 177, 178, 181, 182, 183, 185, 186, 187, 190, 191, 192, 193, 194, 195, 197, 200, 203, 211, 212, 214, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 268, 274, 281, 282, 283, 284, 287, 289, 293, 294, 296, 301, 302, 304, 308, 309, 314, 318, 320, 321, 323, 324, 325, 326, 327, 329, 331, 335, 336, 342, 345, 360, 391, 395], "oblig": 2, "obliqu": 336, "observ": [2, 18, 92, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 267, 279, 300, 314, 316, 321, 324, 348], "obtain": [17, 20, 21, 23, 74, 93, 94, 95, 99, 108, 314, 318, 320, 321, 322, 324, 325, 327, 340, 341, 344, 345, 399], "obviou": [16, 322], "obvious": [38, 49, 318, 339, 344], "occas": 2, "occur": [94, 125, 399], "occurr": 2, "od": [94, 97, 109], "odd": [102, 109, 169, 267, 276, 279, 346], "odesolut": 94, "odesolv": 94, "off": [15, 97, 99, 109, 133, 327], "offer": [2, 31, 315, 330, 331, 333, 334, 336], "offici": 83, "offlin": 377, "offset": [24, 49, 62, 73, 74, 78, 95, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 159, 160, 218, 221, 225, 226, 227, 318, 321, 322, 323, 335, 336, 337, 344, 347, 353], "often": [6, 22, 90, 100, 314, 315, 321, 324, 326, 337, 341], "ogiciel": 2, "oh": [30, 318, 336], "oil": [27, 324], "ois": 92, "ok": [62, 78, 101], "old_func": 6, "older": 376, "oliviero": [92, 316], "olsz\u00f3wka": 92, "olynomi": 339, "om": 92, "omidikia": [92, 108], "omnic": [21, 40, 41, 47, 55, 89, 97, 109, 111, 118, 139, 146, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 284, 317, 323, 326, 328, 333, 336, 342, 348, 361], "omnic_seri": [109, 255], "omnnic": 50, "onc": [6, 13, 41, 73, 98, 109, 312, 320, 322, 324, 336], "one": [2, 6, 8, 18, 19, 20, 22, 31, 36, 37, 38, 50, 66, 83, 93, 94, 97, 98, 99, 100, 101, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 129, 130, 131, 132, 140, 144, 145, 146, 165, 167, 174, 175, 185, 193, 200, 202, 203, 212, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 283, 285, 286, 292, 297, 301, 302, 309, 315, 318, 319, 320, 321, 322, 324, 325, 326, 327, 331, 332, 333, 335, 336, 337, 339, 340, 344, 345, 346, 355, 378, 391], "ones": [27, 108, 109, 118, 164, 165, 167, 174, 175, 185, 212, 308, 309, 321, 324, 330, 333, 336], "ones_lik": [109, 164, 165, 174, 175, 211, 308, 309], "oneslik": [109, 212], "ongo": 6, "onli": [2, 6, 12, 16, 23, 30, 49, 62, 66, 73, 74, 84, 87, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 125, 128, 139, 140, 141, 143, 145, 156, 161, 163, 170, 177, 181, 182, 183, 194, 204, 218, 219, 221, 222, 223, 225, 226, 227, 228, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 282, 296, 302, 304, 318, 320, 321, 322, 323, 325, 326, 327, 331, 333, 335, 336, 337, 339, 340, 342, 346, 348, 361, 380, 383, 398], "onlinelibrari": 92, "only_first": 109, "onto": [92, 100, 115, 316, 321], "oop": 325, "oordin": [109, 150], "op": [333, 341], "opaqu": 117, "open": [1, 2, 12, 13, 45, 83, 88, 93, 97, 109, 118, 133, 194, 195, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 326, 327, 330, 336, 341, 374], "oper": [2, 10, 21, 37, 38, 82, 97, 100, 105, 109, 130, 131, 140, 146, 153, 200, 202, 203, 234, 284, 285, 286, 297, 318, 327, 329, 331, 334, 337, 338, 339, 342, 343, 345, 348, 353, 356, 368, 399], "operand": 337, "operando": [92, 99, 316], "opf": 327, "opinion": 90, "opportun": 2, "opposit": 271, "opt": 346, "optic": [90, 92, 97, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 316, 343, 381], "optical_veloc": 382, "optik": 327, "optim": [19, 20, 30, 73, 74, 75, 78, 91, 94, 108, 116, 318, 319, 339, 388, 395, 399], "optimis": [19, 20, 319, 320], "optimizer_kwarg": 94, "optimum": [105, 321, 346], "option": [2, 4, 5, 8, 11, 19, 49, 83, 86, 88, 94, 95, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 185, 186, 191, 194, 195, 197, 199, 200, 202, 203, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 274, 276, 279, 280, 281, 282, 283, 285, 286, 287, 289, 294, 295, 296, 297, 300, 301, 302, 304, 308, 309, 318, 320, 325, 327, 333, 336, 338, 339, 367, 399, 401], "opu": [1, 40, 47, 55, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 317, 326, 328, 361, 396], "opusfil": 327, "oral": 2, "orang": 3, "order": [2, 62, 66, 69, 73, 78, 89, 92, 94, 95, 97, 98, 102, 106, 109, 112, 158, 164, 215, 216, 232, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 268, 279, 281, 300, 314, 318, 320, 323, 326, 333, 339, 340, 343, 345, 346, 348, 362, 363, 367, 380, 391], "ordin": [109, 157, 320], "ordinari": [107, 108, 113], "ored": 339, "org": [6, 83, 92, 109, 304, 336], "organ": [92, 109, 316], "organis": 326, "orgin": [109, 118, 195], "origin": [2, 5, 6, 10, 14, 15, 18, 19, 20, 24, 25, 27, 31, 33, 37, 42, 46, 53, 65, 66, 69, 87, 95, 96, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 128, 146, 157, 161, 163, 181, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 289, 312, 314, 317, 318, 320, 321, 326, 327, 333, 336, 337, 339, 340, 341, 342, 343, 346, 348], "orphan": 90, "orthonorm": 314, "oserror": 326, "osqp": [105, 399], "osx": [83, 93, 326], "ot": 94, "other": [1, 10, 12, 19, 22, 49, 62, 73, 74, 82, 90, 93, 94, 95, 97, 98, 99, 100, 105, 108, 109, 111, 112, 114, 115, 117, 118, 119, 122, 123, 125, 126, 127, 128, 133, 141, 143, 146, 152, 154, 156, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 181, 182, 183, 185, 186, 190, 191, 194, 195, 197, 199, 211, 212, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 267, 268, 276, 279, 282, 289, 290, 295, 296, 300, 301, 308, 309, 314, 315, 318, 320, 321, 322, 324, 326, 327, 330, 331, 332, 333, 334, 335, 336, 337, 341, 342, 344, 346, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "otherwis": [97, 109, 112, 115, 117, 123, 125, 141, 143, 169, 177, 178, 182, 183, 194, 197, 202, 285, 294, 296, 297], "oto": 24, "ouput": 19, "our": [6, 23, 82, 97, 320, 324, 327, 330, 333, 336, 343], "out": [2, 20, 89, 91, 96, 97, 98, 100, 109, 112, 119, 122, 129, 133, 139, 146, 161, 168, 169, 186, 266, 268, 284, 302, 304, 314, 320, 322, 326, 331, 333, 335, 336, 344, 345, 346], "outer": [109, 128, 337], "outil": [92, 316], "outlet": 116, "outlier": 66, "output": [17, 18, 21, 31, 73, 74, 78, 94, 95, 96, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 126, 127, 133, 139, 161, 164, 167, 170, 171, 178, 185, 197, 218, 219, 221, 222, 223, 225, 226, 227, 228, 236, 266, 267, 279, 301, 304, 315, 318, 320, 322, 325, 326, 329, 339, 344, 387], "output_path": [109, 301], "outsid": [2, 109, 144, 327], "over": [2, 78, 97, 100, 109, 119, 129, 130, 131, 132, 140, 170, 171, 178, 194, 197, 200, 202, 203, 236, 285, 286, 297, 314, 339, 346], "overal": 314, "overestim": 322, "overfit": 339, "overlap": [92, 99, 337], "overrid": [109, 114, 165, 175, 212, 309], "overview": [9, 91, 329, 331, 332, 342, 375], "overwrit": [98, 315, 331], "overwrite_data": 53, "own": [0, 2, 81, 90, 100, 329, 332], "owner": 2, "oxford": 92, "oxid": [92, 316], "ozaki": [92, 109, 157], "p": [1, 59, 73, 74, 92, 105, 106, 109, 116, 216, 237, 247, 248, 314, 322, 336, 339, 341, 344, 346], "p15": 73, "p350": [53, 109, 239, 259], "paavo": 92, "pack": 45, "packag": [1, 6, 17, 19, 21, 22, 23, 24, 27, 41, 46, 82, 84, 85, 87, 90, 97, 109, 196, 331, 333, 335, 336, 346, 354, 360, 372, 379, 398, 401], "pad": [102, 109, 267, 279, 322, 335, 336], "page": [5, 6, 12, 82, 92, 319, 347, 386], "pair": [20, 95, 109, 139, 142, 179, 339], "palatino": 336, "palett": 336, "panda": [3, 11, 353], "pane": 85, "panetso": 92, "paper": [19, 41, 42, 91, 336, 346, 360], "par": 335, "parabol": [232, 318], "paragraph": 2, "parallel": 100, "paralysi": 2, "param": [6, 95, 99, 100, 102, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 339, 397], "param_to_optim": [20, 116], "param_to_set": 116, "paramet": [4, 6, 18, 30, 41, 46, 49, 59, 62, 65, 66, 73, 74, 75, 78, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 190, 191, 194, 195, 197, 199, 200, 202, 203, 204, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 274, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 295, 296, 297, 300, 301, 302, 304, 308, 309, 310, 311, 312, 313, 314, 321, 322, 326, 327, 329, 333, 338, 339, 340, 341, 346, 353, 381, 390, 392, 393, 395, 397, 399], "parameter": 94, "parameter_nam": 8, "parametr": 6, "parent": [109, 118, 124, 346], "parenthes": 332, "pari": [2, 336], "pariti": [27, 324], "parityplot": [27, 117, 324], "part": [1, 2, 6, 11, 12, 15, 21, 62, 74, 97, 109, 130, 136, 147, 148, 200, 263, 314, 319, 331, 336, 341, 344, 348, 398], "parti": [2, 327], "partial": [2, 117, 314, 319, 329, 333, 393], "particular": [2, 90, 109, 117, 119, 161, 315, 318, 322, 339, 340, 345], "particularli": [83, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 333, 338], "pass": [5, 6, 8, 15, 18, 31, 41, 46, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 122, 123, 129, 132, 160, 167, 168, 170, 171, 185, 214, 217, 224, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 318, 322, 324, 325, 326, 333, 336, 339, 399], "passant": 322, "past": [102, 109, 267, 279], "pastel": 336, "patch": [117, 204, 336], "patch_antialias": 336, "patch_edgecolor": 336, "patch_facecolor": 336, "patch_force_edgecolor": 336, "patch_linewidth": 336, "patent": 2, "path": [4, 6, 9, 15, 30, 41, 44, 58, 59, 83, 84, 85, 97, 101, 109, 110, 118, 213, 219, 222, 223, 228, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 327, 328, 332, 333, 335, 336, 338, 341, 343, 347], "path1": 326, "path2": 326, "path3": 326, "path_a": [109, 139], "path_simplifi": 336, "path_simplify_threshold": 336, "path_sketch": 336, "path_snap": 336, "pathclean": [335, 338, 353], "pathlib": [41, 97, 109, 110, 111, 118, 195, 213, 237, 241, 247, 248, 301, 302, 304, 328, 335], "pathnam": [327, 328], "pattern": [6, 73, 92, 316], "paul": [92, 109, 243, 327], "pawel": 92, "pc": [22, 23, 115, 320, 321], "pca": [14, 15, 19, 20, 24, 25, 33, 91, 99, 100, 105, 108, 109, 112, 122, 123, 156, 196, 247, 314, 317, 319, 331, 339, 361, 381, 390, 393, 397], "pchip": [62, 89, 95, 109, 128, 339], "pchipinterpol": [95, 339], "pd_101": [109, 247, 327], "pd_104": 327, "pd_21": [109, 252], "pdata": 74, "pdf": [92, 336], "peak": [65, 66, 71, 72, 73, 76, 78, 90, 92, 95, 97, 99, 109, 114, 137, 139, 142, 157, 158, 169, 179, 234, 256, 280, 314, 316, 317, 319, 329, 331, 339, 340, 346, 398], "peak_find": 318, "peak_height": [73, 322], "peak_posit": [73, 322], "peakslist": 322, "pecuniari": 2, "pellegrino": 92, "pen": [49, 109, 218, 224, 225, 227, 322, 336, 346], "penal": [102, 109, 300], "penalti": 112, "pengbo": 92, "per": [6, 97, 109, 119, 123, 193, 204, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 285, 292, 336], "percent": [95, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 154, 320, 323], "percentag": [109, 115, 156], "percet": 321, "perf": 5, "perfect": [62, 92, 340, 346], "perform": [2, 5, 15, 16, 18, 19, 20, 22, 23, 24, 27, 30, 37, 38, 58, 62, 73, 75, 89, 92, 95, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 128, 129, 132, 137, 139, 141, 142, 143, 144, 151, 152, 158, 161, 163, 168, 169, 171, 172, 173, 177, 179, 182, 183, 186, 199, 218, 221, 225, 226, 227, 237, 262, 264, 276, 280, 282, 295, 296, 316, 318, 320, 323, 327, 330, 333, 336, 337, 338, 339, 340, 341, 343, 395, 397, 399], "perhap": [62, 330, 331], "period": [2, 8], "perman": [2, 326, 336], "permut": [109, 294], "perpendicular": 336, "persist": 119, "person": 2, "petal_length": 22, "petal_width": 22, "petr": 92, "petroff10": 336, "pfeiffer": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 370], "pfr": 360, "pgn": 327, "phase": [73, 109, 116, 172, 173, 215, 216], "phc0": [73, 75, 109, 215, 216, 341], "phc1": [75, 109, 215, 341], "phi": [109, 282, 338], "philipp": 92, "photoacoust": [109, 247], "photovolta": 327, "phsm": 327, "phy": 92, "physic": [2, 92, 119], "physico": [105, 106], "pi": [36, 109, 163, 176, 177, 181, 182, 183, 198, 282, 318, 332, 338], "pick": [71, 72, 76, 101, 109, 114, 256, 317, 339], "piecewis": [62, 92, 95, 109, 158, 339], "pierr": 92, "pii": 92, "pin": 390, "pint": [38, 97, 109, 119, 125, 289, 376, 381, 384, 392], "pip": [5, 6, 82, 83, 84, 85, 86, 87, 88, 362, 375, 401], "pipe": [109, 336], "pivot": [109, 215, 216, 341], "pix": 92, "pixel": [109, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 336], "pk": [73, 74, 75, 109, 216, 318, 322, 341], "pk_exp": 109, "pl": [26, 28, 33, 109, 117, 237, 314, 317, 324, 331], "place": [2, 6, 49, 94, 97, 109, 119, 136, 139, 193, 263, 291, 292, 339], "plai": [326, 346], "plain": 119, "plainquant": [119, 125], "plainunit": [119, 125], "plane": 36, "plant": 90, "plasma": [92, 316], "plateau": [109, 169], "plateau_s": [109, 169, 322], "platform": [6, 12, 83, 90, 91, 346, 376], "pleas": [5, 6, 10, 12, 81, 90, 91, 331, 336], "plot": [3, 8, 15, 16, 18, 20, 22, 23, 24, 27, 30, 31, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 51, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 84, 89, 91, 95, 96, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 158, 204, 205, 206, 207, 208, 209, 210, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 317, 318, 319, 320, 321, 323, 324, 329, 331, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 374, 375, 384, 390, 391, 393, 397, 399], "plot1d": [109, 224], "plot2d": [353, 355, 390], "plot_1d": [109, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 344], "plot_2d": [109, 210, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231], "plot_3d": [109, 221, 222, 223, 225, 226, 227, 228, 229, 230], "plot_a_create_dataset": [36, 39, 317], "plot_b_coordin": [37, 39, 317], "plot_bar": [109, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230], "plot_bar_pen": [109, 226], "plot_baseline_correct": [62, 63, 317], "plot_c_unit": [38, 39, 317, 333], "plot_denois": [65, 67, 317], "plot_despik": [66, 67, 317], "plot_efa": [15, 25, 317], "plot_efa_keller_massart": [16, 25, 317], "plot_fast_ica": [17, 25, 317], "plot_filt": [69, 70, 317], "plot_fit": [30, 32, 317], "plot_generic_read": [41, 47, 317], "plot_imag": [46, 109, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 336], "plot_iri": [18, 25, 317], "plot_lstsq_single_equ": [31, 32, 317], "plot_map": [18, 37, 45, 74, 109, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 336, 337], "plot_mcrals_chrom1": [19, 25, 317], "plot_mcrals_kinet": [20, 25, 317], "plot_model": [109, 218, 221, 225, 226, 227], "plot_multipl": [48, 50, 51, 55, 109, 158, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 317, 323, 336, 346, 364, 397], "plot_nmf": [21, 25, 317], "plot_pca_iri": [22, 25, 317], "plot_pca_spec": [23, 25, 317], "plot_pen": [31, 109, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 318, 322], "plot_pl": [27, 28, 317], "plot_plot": [50, 51, 317], "plot_plot_multipl": [49, 51, 317], "plot_proc_em": [58, 60, 317], "plot_proc_sp": [59, 60, 317], "plot_processing_cp_nmr": [73, 76, 317], "plot_processing_nmr": [74, 76, 317], "plot_processing_nmr_relax": [75, 76, 317], "plot_processing_raman": [78, 79, 317], "plot_project": [53, 54, 317], "plot_read_ir_from_omn": [42, 47, 317], "plot_read_ir_from_opu": [43, 47, 317], "plot_read_nmr_from_bruk": [44, 47, 317], "plot_read_raman_from_labspec": [45, 47, 317], "plot_read_renishaw": [46, 47, 317], "plot_result": 78, "plot_scatt": [31, 53, 73, 74, 109, 218, 224, 318, 322], "plot_scatter_pen": [109, 218, 220, 221, 222, 223, 224, 225, 228, 229, 230], "plot_simplisma": [24, 25, 317], "plot_stack": [15, 36, 42, 109, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 336, 348], "plot_surfac": [109, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 320, 321, 336], "plot_waterfal": [109, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 336], "plot_with_pp": 74, "plotdistribut": [18, 89, 105], "plotlcurv": [18, 105], "plotli": [109, 218, 219, 221, 222, 223, 225, 226, 227, 228, 336], "plotmerit": [17, 18, 19, 20, 24, 30, 73, 74, 75, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 318, 321, 381], "plotnonfinit": 117, "plotter": [109, 219, 220], "plottitl": [109, 218, 221, 225, 226, 227], "plsregress": [27, 319, 329, 393], "plt": 31, "plu": 336, "pluggi": 6, "plugin": 6, "plural": 2, "plus_and_minus_sign": 336, "pl\u00e9del": 92, "pmid": 92, "png": 336, "pnnl": [108, 394], "po": [30, 74, 109, 138, 176, 198, 275, 281, 298, 318, 322, 327], "point": [20, 21, 62, 73, 74, 78, 89, 94, 97, 100, 108, 109, 115, 117, 128, 133, 136, 141, 152, 157, 168, 169, 172, 173, 177, 182, 183, 199, 202, 226, 247, 262, 263, 264, 285, 297, 318, 320, 322, 326, 331, 332, 336, 337, 339, 341, 343, 345, 346, 393], "polar": 336, "polaraxes_grid": 336, "polici": 115, "pollut": [92, 316], "polyfit": [8, 339], "polynom": [95, 232, 318], "polynomi": [8, 62, 78, 89, 95, 102, 109, 137, 142, 158, 179, 232, 267, 279, 280, 318, 323, 346], "polynomialbaselin": 318, "polyolefin": [92, 316], "ponant": 2, "pool": 94, "poor": [65, 340], "pop": 326, "popul": [109, 285, 297], "popular": [90, 320, 321], "pose": 92, "poshb": [138, 176, 198, 275, 298], "posit": [18, 21, 62, 73, 74, 78, 97, 102, 107, 108, 109, 113, 129, 133, 136, 146, 160, 167, 169, 172, 173, 214, 263, 267, 279, 318, 322, 327, 344], "positiveoddinteg": [102, 109, 267, 279], "posixpath": [41, 53, 326, 327, 335], "poslb": [138, 176, 198, 275, 298], "possess": 333, "possibl": [2, 6, 8, 10, 22, 30, 31, 36, 95, 97, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 128, 175, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 302, 304, 315, 320, 321, 322, 325, 327, 333, 335, 336, 337, 339, 340, 346, 362, 363, 379, 395, 399], "possibli": [2, 97, 109, 322], "post": [12, 327, 331], "poster": 336, "postprocess": 115, "postscript": 336, "potenti": [6, 95, 109, 137], "pow": [59, 109, 235, 278, 282, 333, 338], "powder": [92, 316], "power": [97, 109, 115, 117, 168, 186, 197, 233, 311, 320, 342], "power_iteration_norm": 115, "pp": [22, 73, 74, 75, 320, 321, 335, 338, 341], "ppm": [73, 74, 75, 93, 109, 168, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 271, 341], "practic": [9, 92, 109, 285, 297, 327, 328], "pre": [11, 94, 97, 100, 106, 109, 171, 336], "preambl": [2, 336], "preced": [318, 326], "preceed": 333, "precis": [94, 109, 285, 297, 322], "predefin": [95, 106], "predict": [27, 31, 73, 75, 107, 108, 113, 114, 115, 117, 314, 318, 324], "predmin": 314, "pref": [18, 37, 38, 49, 66, 69, 73, 109, 239, 318, 322, 323, 335, 336, 337, 339, 340, 341, 343, 344, 346, 347, 348], "prefer": [4, 15, 18, 19, 37, 38, 41, 42, 44, 45, 49, 50, 58, 59, 62, 66, 69, 73, 74, 75, 78, 84, 85, 109, 119, 145, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 239, 241, 247, 301, 302, 318, 322, 323, 326, 330, 331, 333, 335, 337, 339, 340, 341, 343, 344, 346, 347, 348, 353, 379, 393], "preferebl": [97, 109, 133], "preferred_unit": 119, "prefix": [5, 30, 74, 315, 331], "prepar": [89, 329, 331], "prepend": 326, "preprocess": [15, 78, 91, 109, 169, 326, 338, 342], "prerequisit": [322, 323, 327, 339, 345], "presenc": [2, 45, 90, 322, 333], "present": [6, 19, 20, 73, 87, 97, 109, 115, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 315, 320, 321, 322, 327, 331, 336, 340, 344, 378, 379, 382], "preserv": [89, 340], "press": [326, 332], "pressur": [18, 37, 89, 92, 105, 316], "pretermin": 339, "pretti": 322, "prevail": 2, "prevent": [5, 90, 93, 336, 372], "previou": [2, 23, 37, 73, 74, 95, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 178, 318, 320, 322, 333, 336, 339, 341, 346, 356, 372, 397], "previous": [18, 31, 66, 96, 109, 219, 222, 223, 228, 261, 320, 336, 339, 340], "primer": 9, "princip": [2, 95, 99, 100, 105, 108, 112, 115, 122, 123, 314, 319, 329, 339], "principl": [2, 11, 93, 109, 128, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230], "print": [12, 18, 19, 20, 23, 24, 31, 36, 37, 38, 41, 43, 53, 73, 74, 75, 82, 87, 97, 109, 114, 115, 118, 123, 259, 271, 274, 284, 289, 318, 320, 321, 322, 324, 325, 326, 327, 333, 335, 336, 337, 341, 343, 345], "print_hello_info": 124, "print_info": 53, "print_method": 335, "printabl": 326, "printev": [22, 115, 320, 321], "prior": [2, 321, 343], "prioriti": [109, 124, 128, 168, 265], "privat": 6, "probabl": [73, 90, 322, 326, 333, 336, 339, 345], "probe": 92, "problem": [12, 22, 82, 92, 94, 100, 107, 113, 325, 326, 337, 339, 340, 348, 357, 363, 366, 367, 369, 370, 382, 386, 387, 397], "problemat": 90, "proce": [86, 88], "procedur": [66, 90, 112, 318, 320, 326, 331, 340], "proceed": 2, "process": [0, 6, 18, 19, 73, 76, 79, 81, 84, 90, 95, 96, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 156, 157, 244, 256, 282, 300, 317, 318, 320, 325, 327, 329, 331, 334, 336, 337, 338, 341, 347, 356, 366, 368, 369, 398, 399, 401], "process_on": 346, "processor": [62, 69, 78, 95, 102, 109, 137, 142, 158, 179, 280, 314, 342, 397], "processs": 331, "procno": [73, 74, 75, 109, 256, 338, 341], "procs_fil": 73, "prod": 119, "produc": [6, 22, 92, 109, 119, 279, 316, 344, 390, 398], "product": [2, 90, 94, 106, 109, 112, 119, 161, 321, 339], "profession": 2, "profil": [16, 19, 20, 24, 94, 99, 100, 108, 116, 314], "profit": 2, "program": [1, 2, 73, 82, 83, 90, 91, 105, 314, 330, 331, 347, 393], "programmat": 333, "progress": [97, 109, 178, 330, 360, 374], "proj": [53, 118, 335], "proj2": 335, "project": [6, 12, 13, 54, 81, 82, 85, 90, 91, 100, 109, 115, 124, 195, 219, 222, 223, 228, 265, 266, 314, 317, 321, 324, 326, 329, 331, 336, 353, 359], "project_1": [53, 118], "project_c94b923": 335, "project_df55c2a2": [], "projects_nam": [53, 118], "promin": [73, 92, 109, 169, 316], "prompt": [83, 88], "prone": [98, 333], "prop": [109, 169], "prop_cycl": 336, "propag": [97, 109, 130, 131, 161, 200, 203], "proper": [4, 115, 320, 321], "properli": [2, 96, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 361, 395], "properti": [2, 12, 27, 73, 92, 97, 98, 103, 104, 109, 118, 120, 121, 169, 187, 204, 260, 314, 316, 319, 320, 324, 331, 333, 339, 353], "proport": [109, 154, 318], "propos": [12, 82, 109, 157, 326, 339], "proprietari": 327, "propval": [27, 41, 324], "protect": 2, "protein": [27, 324], "protocol": [4, 109, 139, 146, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 284, 301, 302, 304, 314], "provid": [2, 4, 9, 85, 89, 90, 94, 95, 97, 99, 100, 105, 106, 108, 109, 112, 114, 115, 117, 118, 122, 123, 128, 142, 164, 165, 169, 170, 171, 174, 175, 179, 211, 212, 224, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 276, 285, 295, 297, 301, 302, 304, 308, 309, 319, 320, 327, 331, 332, 333, 336, 346, 347, 399], "provis": 2, "ps_exp": [109, 215], "pscp": [53, 109, 118, 195, 335], "pseudo": [100, 109, 256, 399], "pssnf": 336, "pt": [109, 122, 152, 172, 173, 199, 262, 264], "pth": 338, "ptp": [21, 78, 97, 109], "public": [2, 91, 331, 336, 386], "publicli": 315, "publish": [0, 2, 109, 304, 360], "pull": [5, 6, 10, 12, 81, 82, 87, 373], "puls": [73, 347], "pure": [19, 20, 24, 108, 109, 122, 282, 314, 318, 338], "purest": 122, "puriti": 122, "purpl": 322, "purpos": [2, 22, 85, 90, 321, 327, 331, 333, 345], "pursuant": 2, "push": [5, 6], "put": [6, 331, 336], "py": [4, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 91, 93, 317, 325, 335, 346, 353], "py3": 353, "py_wdf_read": 398, "pycharm": 330, "pypep8": 335, "pyplot": [31, 336], "pyqt": [84, 367], "pyqt5": 84, "pyrazol": [92, 316], "pyridin": 92, "python": [0, 1, 5, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 82, 84, 85, 86, 87, 88, 100, 108, 109, 114, 213, 237, 241, 247, 248, 315, 325, 326, 327, 330, 331, 336, 345, 346, 368, 376, 399, 401], "python3": [5, 21, 24, 83, 335, 346], "q": [18, 82, 89, 105, 106, 333], "qed": 327, "qin": 92, "qp": 399, "qpsolver": 105, "qquad": [109, 177, 182, 183], "qr": 115, "qsin": [59, 109, 163, 177, 181, 277, 278, 282, 296, 338], "qt": [336, 363, 364], "quadera": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 370], "quadprog": [105, 374, 399], "quadrat": [78, 95, 109, 158, 169, 318, 339], "qualiti": [17, 62, 336, 393], "quant_list": 119, "quantit": 92, "quantiti": [94, 97, 109, 125, 140, 153, 163, 167, 170, 181, 191, 193, 202, 211, 215, 216, 271, 285, 286, 289, 297, 309, 314, 322, 327, 363, 368], "quaternion": [335, 344], "quatrat": 105, "question": [82, 109, 159, 329], "quick": [89, 91, 331, 332], "quickli": [91, 314, 331], "quickstart": 333, "quit": [16, 81, 326, 330, 339], "quot": 8, "quotat": 332, "r": [17, 24, 31, 53, 58, 59, 66, 69, 73, 75, 78, 92, 107, 109, 113, 117, 145, 172, 173, 247, 262, 314, 318, 324, 326, 327, 331, 335, 336, 338, 339, 340, 341, 344, 346], "r1": [92, 339], "r2": 339, "rad": [333, 336], "radau": 94, "radian": [333, 342, 348], "rai": [64, 65, 67, 71, 92, 109, 157, 237, 316, 317, 342], "raimundo": 92, "rais": [6, 84, 97, 109, 118, 119, 128, 129, 132, 140, 141, 143, 161, 163, 168, 177, 182, 183, 186, 283, 296, 333, 345], "rajk": 92, "raman": [40, 46, 47, 49, 55, 64, 67, 68, 70, 79, 81, 92, 95, 102, 109, 156, 157, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 316, 317, 331, 342, 346], "ramandata": [45, 46, 49, 65, 66, 69, 78, 109, 244, 340, 346, 353], "ramandir": [45, 78], "ramirez": 92, "ramo": 92, "rand": [318, 333, 345], "random": [16, 97, 109, 112, 115, 289, 315, 318, 321, 333, 336, 345, 346], "random_st": [100, 112, 115], "randomized_svd": 115, "randomli": 336, "randomst": [100, 112, 115], "rang": [16, 18, 21, 37, 49, 62, 73, 89, 95, 96, 97, 108, 109, 115, 117, 123, 137, 139, 142, 169, 171, 179, 234, 318, 321, 322, 323, 327, 333, 336, 339, 345, 353, 359], "rank": [97, 109, 170, 314], "rapid": 391, "rapid_scan_reprocess": [109, 255], "rare": [90, 340], "rate": [20, 92, 94, 116], "rather": [315, 318, 336], "ratio": [30, 65, 74, 78, 109, 138, 156, 298, 318, 339, 340], "raw": [83, 90, 91, 323, 326, 333], "rc": [109, 204, 219, 222, 223, 228, 336], "rcount": 336, "rcparam": 117, "rdx": 327, "re": [24, 327, 331, 339, 341, 346], "reach": [21, 62, 94, 320, 322, 323], "reactant": [94, 106], "reaction": [20, 92, 94, 316], "reactiv": 116, "reactor": [94, 116], "read": [1, 2, 4, 8, 12, 17, 18, 19, 20, 27, 37, 38, 40, 47, 49, 50, 55, 65, 66, 69, 73, 78, 85, 89, 93, 96, 97, 98, 99, 109, 111, 118, 123, 139, 140, 146, 153, 162, 169, 171, 195, 196, 202, 219, 220, 222, 223, 228, 229, 230, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 276, 284, 285, 286, 290, 295, 297, 302, 317, 318, 320, 321, 322, 323, 324, 326, 327, 333, 335, 336, 338, 339, 340, 341, 345, 346, 347, 357, 374, 393, 398, 399], "read_binari": 44, "read_bruker_nmr": 353, "read_byt": [109, 247], "read_carroucel": [109, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 369], "read_csv": [109, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 327], "read_ddr": 109, "read_dir": [109, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 374], "read_dso": 369, "read_fid": 73, "read_fil": 327, "read_galact": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "read_hdr": 109, "read_jcamp": [109, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 327], "read_labspec": [45, 69, 78, 109, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 346, 374], "read_mat": 109, "read_matlab": [19, 24, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 320, 321, 326, 327], "read_omn": [15, 21, 23, 30, 42, 50, 62, 89, 96, 109, 111, 118, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 323, 326, 327, 333, 337, 344, 345, 348, 382], "read_onli": [109, 237], "read_opu": [43, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 301, 326, 327, 384], "read_quadera": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 354, 370], "read_remot": 393, "read_sdr": 109, "read_soc": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259], "read_spa": [109, 247, 254, 343, 375], "read_spc": [4, 109], "read_spg": [109, 247], "read_sr": [109, 247, 254, 369, 375, 382, 392], "read_topspin": [44, 58, 59, 73, 74, 75, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 326, 333, 335, 338, 341, 347, 353, 399], "read_wdf": [46, 109, 398], "read_wir": [46, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 398], "read_zip": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 353], "readabl": [92, 94, 109, 119, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 322, 326, 327, 374], "readeabl": 393, "reader": [7, 11, 46, 73, 109, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 327, 339, 346, 353, 360, 361, 372, 381, 398], "reader_spc": 4, "reader_xxx": 4, "readi": [18, 336], "readonli": [97, 98, 103, 104, 109, 118, 120, 121, 187, 260, 336], "readquadera": 370, "readthedoc": 38, "real": [6, 58, 59, 74, 75, 97, 104, 109, 120, 121, 130, 136, 145, 147, 148, 200, 201, 218, 221, 225, 226, 227, 233, 263, 285, 297, 329, 342, 343, 344, 398], "realign": 337, "realiz": [109, 157, 330], "realli": [16, 331, 336], "reason": [2, 90, 94, 321, 348], "rebuild": 9, "receiv": [73, 74, 318, 322], "recent": [97, 109, 289, 314, 335, 346], "recherch": 2, "recogn": [109, 245, 246, 359], "recognis": 326, "recognit": 382, "recombin": 341, "recommend": [82, 84, 86, 87, 88, 94, 97, 98, 109, 315, 326, 330, 331, 336], "recomput": [108, 320], "reconstrict": 17, "reconstruct": [19, 20, 24, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 156, 184, 314, 320, 321, 391], "record": [18, 20, 21, 27, 37, 41, 46, 314, 327, 345, 346], "recov": [95, 100], "rectangl": 336, "rectilinear": 336, "recurs": [109, 237], "red": [6, 27, 31, 49, 62, 73, 74, 92, 316, 318, 320, 321, 322, 324, 332, 336, 339, 341, 343, 390], "redefin": 62, "redistribut": 2, "redraw": [73, 74, 318, 322], "reduc": [22, 58, 59, 84, 89, 92, 95, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 119, 122, 123, 129, 130, 131, 132, 160, 191, 192, 193, 200, 202, 203, 234, 285, 286, 289, 292, 297, 314, 322, 336, 361, 391], "reduced_unit": [97, 109, 289], "reduct": [22, 23, 24, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 129, 132, 157, 314, 321, 322, 339], "redunc": [97, 109, 192], "ref": [16, 109, 139, 327], "refactor": [353, 372, 375, 387, 391, 395, 397], "refer": [2, 5, 9, 10, 30, 74, 82, 89, 95, 97, 98, 109, 128, 129, 137, 139, 142, 158, 167, 179, 280, 314, 318, 322, 327, 331, 332, 333, 336, 337, 339, 346, 373, 386], "reference_numb": 332, "refin": [109, 169], "reflect": [6, 27, 102, 109, 247, 267, 279, 386], "reform": [92, 316], "reg": 322, "reg_par": [18, 89, 105], "regard": [2, 371], "regex": 335, "regex_matching_test_nam": 6, "region": [23, 30, 49, 62, 65, 66, 74, 75, 78, 89, 95, 96, 97, 109, 142, 179, 314, 318, 322, 323, 336, 337, 339, 340, 343, 344, 345, 346, 348, 359], "regist": [7, 12, 117], "registri": [38, 75, 333], "regress": [26, 28, 31, 33, 62, 92, 107, 109, 113, 117, 237, 314, 316, 317, 318, 319, 329, 393], "regroup": 314, "regular": [89, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 300, 314, 336], "regularis": [62, 92], "regularli": [5, 97, 380], "reindex": [109, 128], "reinit": 50, "reinstal": 87, "reject": 322, "rejman": [92, 316], "rel": [9, 89, 94, 109, 115, 128, 169, 237, 247, 248, 249, 271, 301, 320, 322, 327, 328, 336], "rel_height": [109, 169, 322], "relat": [2, 5, 9, 97, 109, 169, 289, 314, 327, 336, 363, 387, 392, 396], "relationship": 345, "relax": [71, 72, 73, 76, 109, 114, 256, 317, 399], "releas": [6, 84, 325, 326, 327, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "release_d": 325, "relev": [2, 4, 73, 82, 108, 115, 314], "reli": [6, 90, 320], "reliabl": [12, 90], "reload": 53, "reltim": 20, "rem": 88, "remain": [2, 6, 20, 27, 97, 109, 136, 158, 263, 314, 321, 324, 338], "rememb": [15, 23, 333, 339], "remot": [2, 5], "remov": [1, 2, 6, 8, 49, 62, 64, 65, 67, 71, 73, 74, 75, 78, 89, 92, 94, 95, 99, 100, 102, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 122, 123, 137, 142, 157, 158, 179, 237, 261, 280, 283, 316, 317, 318, 322, 323, 334, 336, 337, 339, 342, 344, 346, 353, 375, 390, 392, 393, 395, 397], "remove_all_dataset": 118, "remove_all_project": 118, "remove_dataset": [118, 335], "remove_digital_filt": [44, 58, 59, 333, 335, 338], "remove_limit": 95, "remove_mask": [109, 348], "remove_project": 118, "renam": [94, 330, 397], "render": [332, 336], "renishaw": [40, 47, 55, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 317, 398], "reorder": 327, "reorgan": 91, "repeat": [66, 85, 102, 109, 267, 279, 340, 346], "repeatedli": [95, 99, 100, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123], "repetit": [6, 333], "rephas": 341, "replac": [2, 6, 23, 37, 93, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 144, 157, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 315, 332, 333, 334, 336, 360, 363, 382, 386, 393, 395], "replace_exist": [109, 237], "replace_whitespac": 335, "reply_cont": 346, "report": [5, 6, 82, 90, 91, 92, 114, 320, 327, 373], "repositori": [5, 6, 13, 87, 379, 393], "repres": [2, 31, 73, 97, 109, 285, 297, 314, 315, 318, 326, 341], "represent": [62, 119], "reproduc": [2, 12, 82, 90, 100, 112, 115, 330], "reproduct": 2, "request": [0, 5, 6, 10, 12, 81, 82, 109, 279, 327, 336, 373], "requir": [2, 6, 22, 66, 78, 83, 84, 85, 90, 108, 109, 115, 119, 164, 169, 276, 320, 322, 326, 331, 337, 339, 340, 342, 353, 376, 401], "rescal": [97, 100, 109, 119, 191, 192, 193, 284, 289, 291, 292], "research": [2, 92], "reserv": [2, 204, 315, 336], "reset": [30, 95, 96, 99, 100, 102, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 321, 325, 333, 336, 337], "reshap": [109, 212, 309, 344], "residu": [18, 19, 20, 99, 100, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 314, 320, 321, 324, 344], "resist": [92, 316], "resitua": 321, "resiz": [97, 109, 171], "resolut": [19, 78, 92, 94, 99, 108, 109, 219, 220, 222, 223, 228, 229, 230, 314, 316, 320, 321], "resolv": [86, 108, 314, 320], "resourc": 90, "respect": [2, 105, 106, 108, 109, 115, 123, 177, 314, 320, 321, 324, 326, 327, 333, 335, 336, 345], "respons": [2, 90, 117], "rest": [9, 325], "restart": [13, 326], "restor": 336, "restrict": [2, 109, 324, 332], "restructuredtext": 9, "result": [2, 6, 15, 18, 20, 22, 23, 30, 31, 62, 66, 69, 73, 74, 75, 78, 82, 90, 94, 97, 100, 109, 112, 114, 115, 129, 130, 131, 132, 136, 157, 159, 165, 170, 175, 190, 200, 202, 203, 212, 234, 236, 263, 276, 285, 286, 297, 309, 318, 320, 321, 323, 326, 331, 333, 337, 339, 340, 341, 343, 344, 346, 348], "retain": 314, "retapod": [58, 59, 109, 141, 143, 163, 177, 181, 182, 183, 282, 296, 338], "retriev": [95, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123, 326, 333], "retstep": [97, 109, 194], "return": [4, 8, 19, 31, 73, 75, 90, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 194, 196, 197, 199, 200, 202, 203, 211, 212, 213, 214, 215, 216, 217, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 304, 308, 309, 310, 311, 312, 313, 318, 320, 321, 322, 324, 326, 327, 331, 332, 333, 335, 336, 342, 345, 346, 348, 353, 360], "return_bg": [109, 255], "return_coef": [109, 139], "return_error": 97, "return_ifg": [109, 240, 242, 250, 251], "return_meta": 94, "return_nddataset": [20, 94], "reus": [74, 95, 99, 100, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 320], "rev": [109, 141, 143, 163, 177, 181, 182, 183, 282, 296], "reverdi": 92, "revers": [93, 97, 99, 100, 105, 108, 109, 112, 115, 122, 123, 141, 143, 163, 168, 177, 181, 182, 183, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 281, 282, 294, 296, 327], "review": [319, 332], "revis": [10, 350], "revisit": [353, 366], "rewrit": 353, "rez": 92, "rf": [85, 327], "rgb": 117, "rgba": 117, "ri": [74, 109, 147, 148, 335, 344], "ric": 92, "rich": 18, "rieg": 92, "rieger": [92, 316], "right": [2, 12, 27, 73, 94, 108, 109, 115, 161, 172, 173, 177, 199, 204, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 264, 314, 320, 322, 324, 327, 335, 336, 341], "right_bas": [73, 322], "right_ip": [73, 322], "rigid": 62, "rigueiro": 92, "rint": [97, 109, 136, 263], "rir": [109, 145], "risk": [2, 90, 315, 331], "rita": 92, "rk23": 94, "rk45": 94, "rm": 85, "roach": [92, 99], "robert": 92, "robust": [109, 140, 399], "rocio": 92, "rocquencourt": 2, "roi": [97, 109, 353], "rojo": 92, "role": [326, 339, 346], "roll": [109, 152, 172, 173, 199, 264], "rom": 92, "roman": 336, "ronald": 22, "root": [6, 109, 115, 119, 285, 326, 344], "rootdir": 6, "rossi": [92, 316], "rotat": [49, 73, 74, 322, 336, 374], "roughli": [20, 318], "round": [69, 97, 109, 133, 136, 336, 344, 346, 395], "round4": 322, "round_": [97, 109], "round_numb": 336, "rounded_arrai": [97, 109, 136, 263], "routin": 366, "row": [19, 37, 74, 95, 98, 102, 109, 117, 139, 161, 167, 185, 204, 268, 281, 320, 321, 322, 323, 327, 336, 340, 344], "row10": 37, "rr": [74, 109, 147, 148, 335, 344], "rri": [109, 145], "rrr": [109, 145], "rsc": 92, "rse": [19, 20, 320], "rsquar": 31, "rst": [4, 6, 9, 109, 300, 386], "rt": [18, 333], "rtol": 94, "rubberband": [8, 95, 109, 137, 142, 158, 179, 280, 342, 397], "ruberband": 339, "rudiment": 330, "rue": 2, "rule": [2, 6, 109, 153, 241, 276, 286, 295, 323, 325, 327, 353], "run": [2, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 83, 85, 88, 91, 94, 95, 96, 100, 109, 114, 115, 137, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 319, 320, 325, 326, 330, 331, 332, 339, 346, 393], "run_ast_nod": 346, "run_cel": 346, "run_cell_async": 346, "run_cod": 346, "run_forev": 346, "run_glob": 346, "run_script": [53, 124], "rung": 94, "runnabl": 8, "runner": [16, 18, 21, 22, 23, 24, 41, 44, 46, 53, 73, 74, 75, 89, 320, 321, 323, 325, 326, 327, 331, 333, 335, 336, 338, 341, 344, 345, 346, 348], "runpi": 346, "runtim": 390, "runtimewarn": [343, 344], "ryan": [92, 95, 109, 280], "r\u00e9sultat": [18, 37, 327, 345], "s0": [327, 333], "s0003": 92, "s0003267000852484": 92, "s0003267024001132": 92, "s0021951720300865": 92, "s0021951721000798": 92, "s0169": 92, "s0169743904002874": 92, "s0169743914002111": 92, "s0169743918301758": 92, "s0169743996000615": 92, "s0926337320311164": 92, "s1": [50, 74, 333, 336], "s10": [50, 336], "s10858": 1, "s2": [74, 333], "s20": [50, 336], "s3": 74, "s4": 74, "s41467": [92, 316], "s4p": 74, "s50": [50, 336], "s53": [50, 336], "s_0": 320, "s_1": 321, "s_copi": 326, "s_soft": 108, "s_x": [314, 324], "s_y": [314, 324], "sa": 74, "sabina": 92, "sadovnik": [92, 316], "safe": 2, "safer": 333, "safeti": 90, "sai": [97, 109, 268, 281, 283, 287, 289, 294, 318], "said": 2, "saito": 112, "sake": [73, 336, 337], "same": [2, 18, 19, 20, 22, 27, 31, 37, 41, 48, 51, 53, 55, 74, 78, 94, 95, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 122, 123, 128, 137, 140, 146, 147, 148, 151, 153, 158, 165, 175, 191, 202, 212, 224, 237, 238, 268, 282, 285, 286, 297, 309, 317, 318, 320, 323, 326, 327, 329, 331, 333, 338, 339, 341, 343, 344, 345, 346, 348], "samevalu": 112, "samira": 92, "sampl": [7, 22, 27, 50, 53, 69, 97, 102, 107, 109, 113, 115, 117, 128, 178, 194, 197, 236, 238, 240, 242, 250, 251, 267, 276, 322, 324, 327, 336, 339, 346, 375], "sample_weight": [107, 113, 117], "san": [50, 336], "sand": 336, "sandov": 92, "sanjai": 92, "sansmath": 336, "satisfi": 90, "satur": [21, 23, 336, 339, 344, 348], "save": [53, 88, 95, 96, 99, 100, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 122, 123, 195, 218, 221, 225, 226, 227, 237, 301, 302, 304, 327, 333, 334, 336, 376], "save_a": [109, 110, 118, 335], "save_dialog": 364, "savefig": [109, 219, 220, 222, 223, 228, 229, 230, 336], "savefig_bbox": 336, "savefig_directori": 336, "savefig_dpi": 336, "savefig_edgecolor": 336, "savefig_facecolor": 336, "savefig_format": 336, "savefig_jpeg_qu": 336, "savefig_pad_inch": 336, "savefig_transpar": 336, "savez": [109, 111, 118], "savgol": [69, 102, 109, 279, 300, 340, 342, 397], "savgol_filt": [102, 109, 267, 279, 300, 346, 397], "savitki": [68, 70, 71, 102, 109, 237, 317], "savitski": [66, 346], "savitzki": [69, 102, 109, 267, 279, 300, 342], "sazama": 92, "sb": 74, "sbb": [109, 282, 338], "sc": 74, "scalar": [6, 97, 109, 117, 130, 131, 144, 174, 175, 200, 203, 219, 220, 222, 223, 228, 229, 230, 336, 339, 343, 344], "scale": [94, 97, 105, 108, 109, 112, 115, 117, 119, 168, 178, 191, 193, 197, 232, 279, 292, 324, 336, 343, 346, 368, 370, 371], "scale_dash": 336, "scan": 46, "scatter": [30, 50, 53, 73, 75, 109, 115, 117, 204, 208, 218, 221, 224, 225, 226, 227, 318, 322, 323, 336], "scatter_mark": 336, "scatter_pen": [109, 227], "scheme": 90, "schoolbook": 336, "schuh": [92, 316], "sci": 92, "scienc": 92, "sciencedirect": 92, "scientif": [2, 12, 83, 90, 109, 253, 327, 336], "scientifiqu": 2, "scikit": [22, 100, 109, 196, 321, 324], "scikitlearn": 399, "scinot": 92, "scipi": [90, 95, 102, 109, 114, 115, 116, 169, 267, 279, 322, 339, 346, 399], "scm": [5, 87], "scope": 2, "scopic": 91, "score": [15, 22, 23, 31, 107, 113, 115, 117, 314, 318, 320, 321, 324, 339, 390], "scoreplot": [22, 23, 115, 321], "scp": [4, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 85, 89, 94, 96, 97, 99, 109, 110, 111, 118, 123, 124, 133, 139, 140, 146, 151, 153, 160, 164, 167, 169, 170, 171, 174, 175, 185, 190, 195, 202, 211, 212, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 276, 284, 285, 286, 289, 290, 295, 297, 301, 302, 304, 308, 309, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 353, 382, 385, 391, 393, 401], "scp_config_hom": 93, "scpy": [13, 17, 83, 86, 87, 88, 94, 109, 218, 221, 225, 226, 227, 267, 276, 295, 320, 321, 322, 324, 326, 327, 329, 336], "scratch": [36, 53, 333], "scree": [115, 321], "screeplot": [22, 23, 115, 320, 321], "scrf": 327, "script": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 83, 85, 87, 88, 90, 109, 114, 118, 138, 176, 198, 232, 265, 266, 275, 298, 325, 326, 329, 330, 336, 399, 401], "script_sourc": 53, "script_source_2": 53, "scripts_nam": 118, "scsm": 327, "sdr": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "se": [109, 285], "seaborn": [3, 336], "seamlessli": [18, 37], "search": [12, 82, 83, 105, 318, 322, 328, 360], "sebastian": 92, "second": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 92, 93, 97, 98, 108, 109, 119, 157, 190, 210, 231, 238, 249, 287, 289, 309, 314, 315, 320, 321, 322, 326, 327, 331, 333, 335, 336, 340, 341, 344, 345], "secondli": 2, "sect": 348, "section": [9, 10, 36, 73, 91, 92, 105, 331, 332, 333, 336], "secur": 2, "see": [4, 5, 6, 8, 9, 10, 12, 46, 49, 65, 66, 78, 82, 84, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 102, 105, 108, 109, 111, 112, 114, 115, 116, 117, 118, 122, 123, 140, 141, 142, 143, 146, 156, 159, 164, 165, 168, 174, 175, 177, 179, 182, 183, 186, 195, 197, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 276, 279, 280, 282, 285, 295, 296, 297, 300, 301, 304, 308, 309, 314, 315, 318, 320, 321, 322, 323, 325, 326, 327, 332, 333, 336, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "seed": [97, 109, 289], "seek": 2, "seem": [15, 53, 62, 94, 326], "seen": [23, 65, 320, 325, 333, 344], "segment": [95, 109, 158], "seitsonen": 92, "select": [13, 18, 27, 30, 37, 49, 62, 65, 66, 73, 74, 92, 95, 97, 98, 99, 100, 101, 102, 105, 108, 109, 112, 114, 115, 117, 122, 123, 130, 131, 140, 145, 156, 162, 200, 203, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 267, 279, 283, 301, 302, 304, 316, 318, 322, 323, 324, 326, 327, 329, 339, 340, 344, 345, 346, 358, 376], "self": [6, 8, 92, 94, 95, 96, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 122, 123, 125, 214, 217, 322, 327, 335, 346], "send": [100, 346], "sens": [90, 109, 158, 339, 348], "sensit": [90, 92], "sensor": [92, 316], "sent": 2, "sepal": 22, "sepal_length": 22, "separ": [2, 49, 94, 95, 97, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 136, 158, 169, 213, 263, 314, 322, 326, 336, 345, 354], "seq": 119, "seq_i": 119, "sequenc": [95, 97, 98, 109, 117, 119, 174, 178, 194, 197, 211, 294, 308, 322, 327, 333, 339], "sequenti": [62, 95, 108, 115, 339, 340, 356], "ser": 75, "sergei": 92, "seri": [46, 66, 73, 96, 97, 109, 115, 116, 118, 213, 224, 244, 247, 254, 255, 257, 258, 284, 323, 339, 340, 399], "serial": [100, 108, 400], "serialis": 353, "serie190214": [45, 49, 65, 66, 340], "serif": 336, "serr": 92, "serra": 92, "server": [2, 41], "servic": [2, 85], "session": [6, 85], "set": [2, 4, 6, 9, 16, 17, 19, 21, 27, 30, 41, 49, 73, 74, 78, 90, 93, 94, 95, 97, 98, 100, 105, 107, 108, 109, 112, 113, 114, 115, 118, 129, 130, 131, 132, 139, 156, 157, 161, 162, 164, 165, 174, 175, 185, 194, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 268, 270, 271, 285, 286, 297, 301, 302, 308, 309, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 327, 334, 336, 339, 340, 343, 344, 345, 346, 348, 353, 356, 363, 374, 377, 395, 399], "set_bad": 117, "set_color": 336, "set_complex": [109, 147, 148, 344], "set_coord": 109, "set_coordset": [17, 24, 109, 320, 334], "set_coordtitl": [109, 320], "set_coordunit": 109, "set_fonts": 336, "set_fontstyl": 336, "set_hypercomplex": [109, 344], "set_laser_frequ": [97, 343], "set_log_level": [95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 267, 279, 300], "set_loglevel": [53, 65, 89, 124, 325, 391], "set_quaternion": [109, 268, 269, 344], "set_titl": [69, 98, 336], "set_unit": 98, "set_xlim": [73, 322, 343, 346], "set_xscal": 353, "set_ylim": [73, 322, 339, 343], "set_ytick": 21, "setosa": 22, "setup": [4, 87], "sever": [6, 37, 48, 51, 55, 73, 78, 82, 94, 95, 97, 108, 109, 115, 118, 157, 158, 224, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 317, 320, 327, 329, 331, 334, 335, 338, 342, 344, 345, 346, 358, 360, 368, 393, 399, 401], "sg": 69, "sh": 83, "shadow": 336, "shall": 2, "shape": [4, 6, 18, 19, 21, 22, 23, 24, 30, 36, 41, 43, 44, 73, 74, 75, 89, 94, 95, 97, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 139, 140, 144, 146, 153, 160, 164, 165, 167, 170, 174, 175, 185, 202, 211, 212, 236, 237, 238, 239, 245, 246, 247, 248, 249, 252, 253, 254, 255, 259, 267, 279, 283, 284, 285, 286, 289, 297, 300, 308, 309, 318, 320, 321, 322, 323, 324, 326, 327, 333, 335, 337, 344, 345, 346, 347, 348], "share": [82, 109, 128, 204, 327, 334], "sharei": [204, 337], "sharex": [204, 337, 339], "sharez": 204, "sharp": 18, "shashik": 92, "sheet": 329, "shell": 346, "shift": [49, 58, 59, 109, 152, 158, 163, 172, 173, 181, 199, 218, 221, 224, 225, 226, 227, 247, 262, 264, 321, 322, 327, 330, 339, 341, 346], "short": [6, 8, 12, 23, 75, 85, 119, 333, 344], "shortcut": 338, "shorter": [109, 168, 186, 339], "shorthand": [109, 117, 126, 127], "should": [2, 6, 8, 12, 13, 30, 50, 65, 74, 86, 88, 90, 91, 93, 94, 95, 96, 97, 100, 105, 108, 109, 116, 117, 124, 137, 147, 148, 157, 164, 218, 219, 221, 222, 223, 225, 226, 227, 228, 249, 315, 318, 320, 321, 322, 326, 330, 331, 336, 345, 346, 356, 386], "shoulder": 322, "show": [8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 73, 74, 75, 78, 82, 89, 97, 99, 101, 109, 115, 157, 218, 221, 225, 226, 227, 318, 321, 322, 323, 324, 326, 327, 331, 336, 338, 339, 341, 345, 346, 347, 348, 360, 399], "show_complex": [109, 218, 221, 225, 226, 227, 341, 344, 347], "show_datapoint": [97, 343], "show_label": [23, 115, 321], "show_mask": [109, 218, 221, 225, 226, 227, 344], "show_project": 336, "show_projection_i": 336, "show_projection_x": 336, "show_region": [62, 339], "show_vers": [82, 373, 383, 401], "show_yaxi": 73, "show_z": [109, 218, 221, 225, 226, 227], "show_zero": [109, 218, 221, 225, 226, 227], "shown": [115, 232, 322, 325, 326, 327, 339, 346], "shrinkb": 336, "shuffl": 112, "si": [73, 109, 168, 186, 341], "si_200mu": 45, "siam": 92, "side": [85, 94, 96, 204, 332, 336], "sidebar": 330, "sie": 92, "sigdigit": [97, 395], "sigma": [115, 123, 176, 314, 318], "sigma_1": 314, "sigma_i": 314, "sigmoid": 275, "sign": [2, 12, 109, 172, 173, 330, 332], "signal": [58, 59, 65, 95, 102, 109, 115, 169, 267, 279, 314, 322, 338, 339, 340, 346], "signatur": [6, 101, 335], "signif": 333, "signific": [2, 16, 74, 97, 109, 169, 320, 321, 336, 340, 395], "significantli": [86, 112, 322], "sigular": 314, "silent": 327, "silk": [92, 316], "silver": [92, 316], "similar": [31, 90, 97, 109, 178, 197, 321, 322, 324, 327, 336, 339], "similarli": [2, 204, 326, 345, 346], "simkovi\u010dov\u00e1": 92, "simon": 92, "simp": [109, 276, 370], "simpl": [24, 30, 31, 73, 75, 92, 94, 95, 99, 100, 105, 108, 109, 112, 115, 122, 123, 137, 142, 158, 179, 280, 318, 330, 331, 333, 336, 339, 345, 346, 347, 399], "simpler": [38, 53, 326, 339], "simplest": [37, 346], "simplex": 114, "simpli": [85, 330, 336, 339, 340, 346, 348], "simplic": 332, "simplif": 336, "simplifi": [315, 331, 336, 346, 353], "simplisma": [14, 25, 33, 92, 99, 100, 105, 108, 109, 112, 115, 123, 246, 317, 320, 353, 381], "simpson": [73, 75, 109, 295, 323, 353], "simul": 339, "simultan": [98, 109, 218, 345], "sin": [36, 109, 282, 338], "sinc": [20, 31, 90, 327, 333], "sine": [57, 60, 71, 109, 163, 177, 181, 235, 256, 278, 282, 296, 317, 344], "singl": [9, 16, 19, 30, 31, 37, 46, 53, 73, 74, 78, 91, 95, 97, 98, 102, 105, 109, 117, 118, 130, 131, 132, 140, 162, 169, 200, 203, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 283, 314, 318, 322, 327, 332, 334, 335, 336, 339, 343, 353, 362, 390], "single_spectrum": [109, 302], "singlehplc": [320, 321], "singleton": 109, "singular": [2, 95, 99, 100, 105, 108, 112, 115, 117, 122, 123, 314], "singular_valu": 123, "sinm": [59, 109, 163, 177, 181, 235, 277, 282, 296, 338], "sirotin": 92, "sisetup": 336, "site": [21, 24, 92, 316, 332, 335, 346], "situ": [92, 316], "situat": 343, "siunitx": 336, "size": [6, 18, 22, 23, 31, 36, 37, 38, 41, 53, 66, 69, 73, 74, 75, 84, 89, 97, 98, 100, 102, 108, 109, 117, 129, 130, 131, 132, 133, 139, 140, 151, 153, 157, 160, 168, 169, 170, 171, 174, 175, 178, 186, 189, 190, 194, 197, 200, 202, 203, 211, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 236, 267, 276, 279, 285, 286, 295, 297, 308, 310, 312, 313, 314, 318, 320, 321, 322, 323, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 348, 378], "sizeff": [109, 168], "skip": [6, 362], "sklearn": [17, 21, 100, 107, 112, 113, 115, 117, 391], "slash": 326, "sleep": 353, "slice": [15, 23, 36, 62, 71, 72, 76, 89, 96, 109, 114, 256, 315, 317, 318, 322, 323, 329, 331, 333, 334, 336, 342, 346, 348, 363, 390, 398], "slightli": [94, 324, 336, 395], "slow": [78, 353, 357], "slower": 112, "sma": 24, "small": [5, 73, 74, 90, 112, 318, 322, 336, 339], "smaller": [94, 95, 109, 137, 144, 168, 282, 322, 336, 338, 344, 346], "smallest": 115, "smc1": [45, 69, 78, 346], "smild": 92, "smooth": [8, 62, 66, 68, 70, 71, 91, 92, 95, 102, 108, 109, 137, 142, 158, 169, 179, 237, 267, 280, 300, 314, 317, 329, 339, 342, 397], "smoother": [62, 69, 78, 92, 102, 109, 169, 267, 279, 300, 314, 346], "snap": 336, "snip": [62, 66, 73, 74, 78, 92, 95, 109, 137, 142, 158, 179, 339, 340, 397], "snip_width": [62, 73, 74, 78, 95, 109, 280, 339], "snippet": [8, 12, 342], "so": [2, 6, 16, 19, 20, 23, 66, 78, 90, 94, 97, 108, 109, 115, 194, 237, 285, 289, 297, 314, 320, 321, 322, 325, 326, 327, 331, 332, 333, 336, 339, 340, 341, 343, 344, 346, 348, 356], "soft": [20, 108, 314, 320, 336, 360], "softwar": [0, 1, 2, 12, 82, 90, 91, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 282, 327, 338, 398], "sol": 94, "solarize_light2": 336, "sole": [2, 90], "solid": [49, 92, 109, 218, 225, 227, 316, 336, 343], "solid_capstyl": 336, "solid_joinstyl": 336, "solut": [2, 30, 31, 85, 93, 94, 318], "solv": [18, 29, 32, 33, 94, 97, 105, 107, 108, 109, 317, 319, 357, 367], "solve_ivp": 94, "solver": [89, 94, 99, 100, 105, 108, 112, 115, 122, 123, 394, 399], "solverconc": 108, "solverspec": 108, "som": [30, 74, 75, 318], "somaiyeh": 92, "some": [6, 8, 16, 20, 21, 23, 24, 30, 31, 38, 49, 62, 74, 89, 90, 94, 97, 98, 109, 111, 115, 118, 133, 239, 314, 315, 318, 319, 320, 321, 322, 323, 324, 326, 330, 331, 333, 335, 336, 337, 339, 341, 343, 344, 346, 347, 348, 353, 356, 362, 366, 388, 390, 396], "some_unit": 327, "someon": 333, "someth": [9, 13, 325, 326, 331, 344, 348, 353], "sometim": [66, 90, 109, 115, 239, 332, 333, 340, 361, 398], "son": 327, "sore": 115, "sort": [41, 89, 109, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 323, 327, 333, 334, 345, 348, 399], "sortbyd": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 327], "sourc": [1, 2, 5, 11, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 83, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 327, 333, 335], "sourcetre": 5, "soustract": [18, 37, 327, 345], "sp": [46, 59, 109, 163, 177, 181, 235, 277, 278, 296, 338, 341], "spa": [23, 41, 89, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 323, 326, 328, 343, 348, 361], "space": [2, 24, 97, 99, 100, 102, 105, 108, 109, 112, 114, 115, 117, 122, 123, 133, 178, 194, 197, 204, 267, 314, 322, 324, 327, 332, 335, 336, 345, 395, 398], "span": [115, 314, 321, 324], "spars": [109, 112, 115, 300], "sparsiti": 112, "spc": [4, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 372], "spc_data": 4, "speak": [78, 331], "spec": [16, 327, 336, 341, 347], "spec2": [341, 347], "spec3": 341, "speci": [22, 73, 92, 94, 108, 314, 316], "special": [92, 109, 177, 332, 335, 336, 339], "specialis": 336, "speciat": 92, "species_concentr": [20, 94], "specif": [2, 4, 6, 8, 11, 19, 78, 83, 84, 89, 98, 109, 145, 168, 169, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 315, 321, 324, 326, 327, 336, 339, 344, 346], "specifi": [2, 8, 22, 46, 49, 95, 97, 99, 100, 102, 105, 108, 109, 111, 112, 114, 115, 117, 118, 119, 122, 123, 128, 129, 133, 136, 140, 141, 143, 144, 145, 146, 147, 148, 152, 156, 158, 160, 163, 167, 168, 169, 171, 172, 173, 177, 178, 181, 182, 183, 185, 186, 194, 197, 199, 202, 215, 216, 217, 218, 221, 225, 226, 227, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 262, 263, 264, 267, 279, 282, 285, 286, 296, 297, 300, 301, 302, 304, 326, 327, 332, 333, 335, 336, 345, 348, 374, 401], "specta": [27, 324], "spectr": 343, "spectra": [4, 15, 19, 20, 21, 23, 24, 27, 41, 45, 46, 49, 62, 65, 66, 71, 72, 76, 77, 79, 89, 92, 95, 96, 97, 98, 99, 100, 108, 109, 114, 122, 156, 157, 162, 163, 168, 215, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 280, 314, 316, 317, 318, 320, 321, 322, 323, 324, 333, 336, 338, 339, 342, 343, 345, 346, 347, 348, 369, 375, 381, 397, 398, 399], "spectral": [4, 18, 19, 37, 46, 92, 100, 108, 109, 169, 298, 314, 318, 339], "spectro": 91, "spectrocat": [83, 84, 86, 88, 368], "spectrochempi": [1, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 82, 84, 85, 91, 93, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "spectrochempy_2025": 0, "spectrochempy_cfg": 93, "spectrochempy_data": [4, 50, 84, 354, 355, 379, 393], "spectromet": [27, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 324, 339], "spectrometri": 92, "spectroscop": [0, 3, 4, 89, 90, 99, 100, 105, 108, 109, 112, 115, 122, 123, 169, 241, 314, 325, 330, 331, 333, 334], "spectroscopi": [3, 20, 89, 90, 92, 97, 109, 138, 169, 316, 318, 321, 327], "spectroscopist": [90, 345], "spectrum": [18, 20, 30, 46, 49, 64, 67, 68, 70, 71, 73, 74, 78, 89, 92, 95, 102, 109, 115, 157, 162, 172, 173, 233, 237, 238, 244, 257, 258, 270, 314, 317, 318, 321, 322, 327, 339, 342, 345, 346, 347, 348, 375], "speed": [31, 97, 109, 169, 300, 318, 336, 388, 392, 399], "spg": [8, 15, 18, 21, 23, 30, 37, 38, 40, 41, 47, 50, 55, 62, 85, 89, 96, 97, 99, 109, 111, 118, 123, 139, 140, 146, 153, 169, 195, 202, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 276, 284, 285, 286, 290, 295, 297, 302, 317, 318, 322, 323, 326, 328, 333, 336, 337, 339, 344, 345, 348], "sphinx": [6, 9], "sphinx_gallery_thumbnail_numb": [15, 36], "spike": [64, 67, 71, 92, 109, 157, 237, 316, 317, 322, 342, 347, 397], "spline": 339, "split": [91, 109, 128, 336, 337], "splitlin": 335, "spread": [109, 285, 297], "spred": 73, "spure": [19, 24, 320, 321], "spyder": 330, "sqrt": [109, 112, 126, 127, 176, 201, 285, 318, 331, 332, 333], "squar": [30, 31, 57, 60, 62, 71, 92, 95, 102, 107, 108, 109, 113, 114, 115, 117, 137, 139, 142, 158, 179, 185, 233, 235, 256, 278, 280, 282, 285, 297, 300, 314, 316, 317, 319, 320, 322, 329, 333, 338, 339, 393, 399], "squeez": [20, 37, 74, 109, 318, 322, 344], "sr": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259], "src": [16, 44, 46, 53, 73, 317, 325, 327, 332, 335, 336, 346], "ssb": [59, 109, 235, 278, 282, 338], "ssdiff": [109, 139], "st": [15, 17, 19, 20, 21, 24, 100, 108, 122, 314, 320, 322, 391, 392], "st0": 320, "st_constrained_list": 108, "st_l": 108, "st_ls_list": 108, "st_unconstrain": 108, "stabl": [6, 12, 84, 85, 86, 100], "stack": [36, 42, 73, 109, 146, 204, 209, 210, 219, 220, 222, 223, 228, 231, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 322, 336, 346, 378, 384, 390], "stackoverflow": 331, "staff": [2, 90], "stai": 348, "stancik": [138, 318], "stand": [2, 12, 38, 314, 320, 321, 322, 324, 339], "standalon": 81, "standard": [9, 11, 66, 92, 98, 108, 109, 115, 122, 153, 198, 202, 285, 286, 297, 318, 320, 324, 325, 327, 331, 336, 344], "stanislav": 92, "starch": [27, 324], "start": [4, 6, 8, 11, 20, 30, 36, 62, 78, 86, 88, 95, 96, 97, 105, 109, 114, 133, 178, 194, 197, 232, 318, 320, 322, 327, 329, 333, 336, 339, 345, 346], "startswith": 6, "startup": [95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 267, 279, 300, 336], "starzyk": 92, "state": [2, 6, 109, 236], "statement": [333, 336, 353], "statist": [92, 109, 285, 297, 314, 324, 331], "statu": [2, 94, 109, 282, 338, 339], "stcurr": 108, "std": [24, 69, 109, 202, 297, 324, 346], "stdout": 274, "stefania": 92, "stejskal": 399, "stelmachowski": [92, 105], "step": [7, 19, 94, 96, 97, 108, 109, 133, 157, 178, 194, 197, 330, 336, 339, 345, 391], "steven": 92, "sthe": 124, "stiff": 94, "stiffer": [95, 109, 137], "stijn": 92, "still": [91, 331, 333, 336, 366, 376, 379, 387, 397, 399], "stix": 336, "stixsan": 336, "stoichiometri": 94, "stop": [96, 97, 105, 109, 112, 117, 133, 178, 194, 197, 314, 320, 325, 333, 345], "storag": 2, "store": [2, 46, 62, 78, 83, 94, 101, 108, 109, 239, 241, 320, 321, 324, 330, 333, 335, 338, 343, 344, 359, 377, 382, 392], "storeiter": [108, 392], "stosic": 92, "str": [4, 8, 20, 24, 41, 53, 94, 97, 98, 101, 102, 105, 106, 109, 111, 114, 115, 116, 117, 118, 119, 124, 125, 128, 129, 139, 141, 143, 145, 146, 147, 148, 152, 156, 157, 158, 160, 162, 163, 164, 165, 168, 170, 172, 173, 174, 175, 177, 181, 182, 183, 186, 191, 195, 199, 204, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 267, 270, 276, 279, 281, 282, 289, 295, 296, 300, 301, 302, 304, 308, 309, 321, 337], "straight": [109, 158], "straightforward": [31, 345, 348], "strang": 387, "strategi": 100, "stream": [36, 336, 346], "streamlin": 46, "strength": 346, "stress": 322, "strict": [108, 109, 125, 161], "stricter": 320, "strictli": [78, 109, 115, 277, 338, 346], "strike": 2, "string": [12, 78, 94, 95, 97, 98, 100, 101, 105, 108, 109, 117, 118, 145, 195, 214, 219, 222, 223, 228, 247, 256, 315, 326, 327, 332, 333, 334, 336, 346, 399], "strip": 335, "strong": [2, 90], "stronger": 346, "strongli": [6, 86, 315], "structur": [4, 6, 11, 89, 90, 109, 165, 175, 212, 309, 314, 320, 321, 325, 334, 335], "studi": [2, 92, 314, 316], "style": [4, 5, 6, 41, 42, 49, 50, 109, 117, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 329, 335, 338, 353, 390, 397], "stylesheet": [109, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 336], "stylist": 6, "sub": [53, 109, 118, 124, 129, 132, 288, 332, 335], "subclass": [97, 98, 109, 114, 117, 363], "subcompon": 314, "subdir": [45, 109, 247, 252, 326, 327, 353], "subfold": [109, 237], "subhead": 332, "subject": [2, 90, 91, 108, 109, 314, 315, 327, 333, 334], "submatric": 314, "submit": [2, 6, 82], "subplot": [95, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 204, 218, 221, 225, 226, 227, 336, 345], "subproject": [53, 118], "subscrib": 2, "subsequ": [2, 95, 99, 100, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 332, 336], "subsequent_ind": 335, "subset": [6, 109, 283], "substep": 332, "subtitl": 204, "subtrack": [109, 139], "subtract": [62, 89, 90, 91, 95, 109, 137, 139, 142, 158, 179, 280, 315, 322, 327, 333, 334, 335, 337, 339, 351, 402], "subtrat": 21, "succes": [109, 268], "success": [2, 94, 108, 109, 110, 118, 314, 320, 326, 332, 346], "successfulli": [20, 94], "sudden": 6, "sudo": [5, 83, 87], "suffer": [2, 336], "suffici": 73, "suffix": [109, 118, 326], "suggest": [6, 81, 82, 90], "suit": [11, 83], "suitabl": [2, 99, 117, 336], "sulf_oct": [18, 37, 327, 345], "sulfid": [18, 92, 316], "sum": [46, 107, 108, 109, 113, 117, 139, 140, 153, 202, 285, 297, 314, 323, 337, 346], "sum_": [232, 314, 318], "summ": 46, "summari": [6, 8, 74, 75, 89, 94, 95, 97, 98, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 138, 176, 198, 232, 275, 298, 320, 334], "super": 346, "superpos": 341, "supplement": [2, 319], "supplementari": [2, 108, 327], "suppli": [2, 41, 117], "support": [13, 86, 88, 89, 90, 92, 109, 169, 236, 316, 322, 328, 336, 344, 354, 399, 401], "supposedli": 326, "suppress": [204, 325, 336, 353, 377], "supress": 78, "suptitl": [204, 336], "suptitle_color": 204, "sure": [21, 84, 94], "surf": [320, 321], "surfac": [92, 109, 116, 219, 220, 222, 223, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 316, 320, 321, 336, 381, 399], "surround": [109, 169, 322, 332], "sust": 327, "sv": 123, "svd": [91, 95, 99, 100, 105, 108, 112, 115, 122, 314, 339], "svd_solver": 115, "svg": 336, "swapax": 109, "swapdim": [109, 268, 294], "swape": [109, 287], "switch": 94, "sy": 274, "sylvi": 92, "symbol": [94, 333, 336], "symlog": 117, "synchron": 85, "syntax": [6, 9, 30, 36, 53, 74, 108, 109, 315, 331, 332, 334, 335, 336, 346], "synthes": [92, 316], "system": [2, 10, 16, 82, 92, 93, 94, 100, 109, 169, 213, 325, 326, 353], "systemat": [314, 322], "t": [5, 9, 15, 16, 17, 19, 20, 21, 22, 24, 27, 31, 36, 62, 73, 74, 75, 81, 90, 92, 94, 97, 98, 99, 100, 105, 108, 109, 112, 115, 116, 117, 122, 123, 163, 170, 181, 238, 282, 314, 318, 320, 321, 322, 324, 326, 330, 331, 332, 333, 335, 336, 338, 340, 344, 348, 391], "t0": [109, 181], "t1": 75, "t1_model": 75, "t1irho": 73, "t1rho": 73, "t_0": [109, 163, 320], "t_dataset": 348, "t_event": 94, "t_point": 94, "tab": 332, "tabl": [90, 109, 139, 336], "table_po": [73, 322], "table_properti": [73, 322], "tableau": 336, "tacit": 2, "tacitli": 2, "tag": [82, 331, 332, 333], "taht": [15, 21], "take": [2, 6, 10, 30, 31, 37, 49, 90, 97, 100, 109, 112, 145, 154, 161, 168, 285, 333, 337, 340, 344, 345, 393], "taken": [6, 27, 46, 73, 74, 75, 96, 97, 100, 109, 142, 168, 179, 202, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 297, 320, 321, 353], "talk": [336, 339], "tangent": 344, "tanner": 399, "tarascon": 92, "target": [107, 113, 117, 314], "tarr": 97, "task": [326, 330], "tauler": 92, "tavakkoli": 92, "taxonom": 22, "tc_0": 320, "td": [335, 341], "tdd": 6, "tdeff": [109, 168], "technic": [2, 90], "techniqu": [314, 331, 340], "technol": 92, "technolog": 2, "tej": 92, "tel": [92, 316], "telecommun": 2, "telephon": 109, "tell": [82, 109, 139, 224], "temperatur": [36, 94, 98, 105, 109, 238, 333], "templat": [82, 109, 239, 333, 373], "temporari": [2, 336, 353], "temporarili": 336, "terahertz": 38, "term": [2, 100, 107, 108, 109, 112, 113, 119, 143, 314, 320, 324], "termin": [2, 20, 83, 93, 94, 330, 363, 401], "terrain": 336, "tesdata": 326, "test": [2, 5, 7, 9, 11, 19, 27, 43, 44, 58, 59, 73, 74, 75, 83, 107, 109, 113, 117, 129, 132, 237, 248, 324, 327, 333, 335, 338, 341, 344, 347, 353, 354, 359, 360, 369, 370, 372, 376, 379, 393, 401], "test_": 6, "test_1d_nddataset": 6, "test_cor": 4, "test_d": 6, "test_dataset": 6, "test_method": 6, "test_nddataset_real_imag": 6, "test_read": 4, "test_read_spc": 4, "test_sh": 362, "test_xxx": 4, "testclass": 6, "testdata": [4, 41, 89, 323, 326, 327, 333, 345, 348], "text": [2, 30, 69, 74, 90, 93, 109, 117, 282, 327, 330, 332, 336, 338], "text_antialias": 336, "text_color": 336, "text_hint": 336, "text_hinting_factor": 336, "text_usetex": 336, "textbox": 96, "textcomp": 336, "textcoord": [73, 74, 322, 336], "textil": 336, "textrm": [108, 314, 324], "textwrap": 335, "textwrapp": 335, "tf": 327, "tg": [53, 109, 239], "tga": [109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 392], "tgscatter": 53, "th": [62, 109, 153, 159, 167, 314, 326], "than": [2, 10, 24, 66, 94, 102, 108, 109, 115, 116, 117, 144, 156, 157, 165, 168, 169, 186, 267, 282, 283, 302, 320, 322, 324, 325, 326, 330, 332, 333, 336, 338, 344, 346, 355, 398], "thank": 38, "thei": [2, 6, 10, 90, 98, 100, 109, 118, 237, 247, 248, 315, 320, 321, 322, 323, 326, 327, 331, 333, 336, 337, 340, 344, 346, 354, 377, 392, 395], "them": [5, 6, 16, 17, 19, 23, 37, 38, 45, 81, 90, 109, 248, 314, 320, 324, 326, 327, 331, 332, 333, 336, 337, 341, 359, 397], "themselv": [98, 327, 336], "theprocessor": 339, "therefor": [2, 6, 73, 97, 109, 161, 164, 170, 315, 331], "thereof": 2, "thermo": [4, 109, 247, 252, 253, 254, 255, 327, 372, 399], "thermocoupl": [109, 238], "thermodynam": 84, "theses": 92, "thet": [109, 237, 247, 248], "thi": [0, 1, 2, 4, 5, 6, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 85, 86, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 139, 140, 146, 156, 157, 159, 161, 163, 165, 168, 169, 170, 175, 178, 181, 186, 193, 195, 200, 202, 203, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 267, 268, 276, 279, 282, 284, 285, 286, 292, 297, 300, 303, 305, 306, 307, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 363, 372, 377, 391, 395, 396, 397, 398], "thibault": 92, "thid": 22, "thing": [53, 73, 74, 318, 322, 339, 344], "think": 6, "third": [2, 16, 23, 108, 109, 157, 204, 314, 320, 324, 333], "thirti": 2, "thon": 91, "those": [2, 20, 94, 97, 98, 99, 108, 109, 116, 118, 128, 144, 157, 321, 330, 336, 339, 344, 348], "though": [20, 336], "three": [20, 22, 53, 73, 95, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 144, 318, 322, 332, 333, 345, 397], "threshold": [66, 109, 157, 169, 322, 336, 340], "through": [4, 6, 85, 109, 129, 132, 169, 318, 322, 326, 327, 331, 333, 336], "throughout": [2, 6, 322, 327], "thse": 23, "thu": [6, 12, 19, 23, 41, 89, 95, 97, 98, 314, 318, 320, 321, 323, 324, 326, 336, 339, 346, 348], "ti": 73, "tia": 92, "tick": [101, 109, 204, 218, 221, 225, 226, 227, 336], "tight": 336, "time": [2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 89, 94, 95, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 122, 123, 125, 137, 141, 143, 154, 163, 168, 170, 177, 181, 182, 183, 186, 249, 289, 296, 312, 314, 318, 320, 321, 322, 323, 324, 326, 327, 329, 330, 334, 335, 336, 337, 338, 339, 342, 345, 348, 390, 393], "timedelta": 333, "timepoint": 20, "timeshift": [109, 249], "timestamp": [4, 15, 18, 23, 37, 41, 73, 89, 109, 249, 323, 327, 345], "timezon": [109, 333, 336, 377], "timl": 94, "tip": [11, 326, 332], "titl": [0, 4, 6, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 31, 36, 37, 41, 42, 53, 65, 73, 74, 75, 89, 91, 97, 98, 99, 105, 109, 128, 133, 139, 160, 178, 194, 197, 204, 218, 221, 225, 226, 227, 236, 318, 320, 321, 322, 323, 324, 327, 329, 331, 332, 333, 335, 337, 338, 339, 341, 344, 345, 348, 392], "tk": [336, 363], "tmp": 346, "to_arrai": 109, "to_base_unit": [97, 109, 119, 191, 192, 193, 289], "to_compact": 119, "to_dict": [95, 98, 99, 100, 102, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123], "to_pref": 119, "to_reduced_unit": [97, 109, 119, 191, 192, 193, 289], "to_root_unit": 119, "to_xarrai": 109, "todo": [78, 109, 114, 139, 239, 249, 318, 322, 327, 333, 345], "togeth": [3, 27, 62, 97, 109, 117, 214, 314, 321, 324, 327, 337], "tol": [24, 95, 100, 108, 109, 112, 115, 117, 122, 137, 320, 339, 391], "toler": [94, 95, 100, 108, 109, 112, 115, 117, 137], "too": [15, 23, 36, 62, 73, 74, 97, 318, 322, 336, 339, 344, 357], "tool": [6, 13, 90, 92, 331, 341], "top": [92, 109, 169, 204, 322, 335, 336], "topic": [5, 112], "topspin": [1, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 282, 326, 338, 353], "topspin_1d": [44, 58, 59, 335, 338, 341], "topspin_2d": [44, 74, 333, 335], "tornado": 346, "torr": [18, 37, 89], "tort": 2, "toshift": [109, 152, 262], "total": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 80, 97, 107, 108, 109, 113, 117, 314, 317, 324], "toto": [118, 325], "touch": [109, 141], "toward": [2, 348], "tqdm": 374, "tr": 335, "trace": [49, 90], "traceback": [97, 109, 289, 325, 335, 346, 399], "track": [92, 316], "tracker": [12, 91], "trademark": 2, "train": [27, 95, 99, 100, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 324], "trait": [114, 344], "traitement": [92, 316], "traitlet": [24, 95, 99, 100, 102, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123, 336, 346], "transfer": 2, "transfere": 2, "transform": [15, 16, 17, 20, 21, 22, 23, 38, 41, 73, 78, 89, 95, 99, 100, 102, 105, 108, 109, 112, 114, 115, 117, 119, 122, 123, 125, 141, 143, 152, 163, 168, 172, 173, 177, 181, 182, 183, 184, 186, 199, 215, 216, 262, 264, 282, 296, 314, 320, 321, 327, 329, 331, 338, 339, 342, 343, 344, 346, 391], "transit": 391, "translat": [2, 90], "transmiss": 2, "transmit": 2, "transmitt": [38, 109, 247, 347, 376, 378], "transpar": [117, 333, 336, 339, 351, 402], "transport": 84, "transpos": [21, 73, 74, 99, 100, 109, 123, 219, 222, 223, 228, 268, 287, 320, 344, 348, 398], "transposit": [210, 231, 327, 342], "transpositon": 321, "trapezoid": [109, 153, 276, 286, 323], "trapz": [109, 286, 295, 323, 353, 370], "travel": [31, 318], "travert": [0, 86, 88, 89, 92, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348], "travi": 360, "treat": [94, 119, 125, 322, 327, 346], "treatment": [92, 320, 321], "trend": [8, 78, 95, 109, 137, 142, 158, 179, 280], "triang": [109, 141, 163, 177, 181, 235, 277, 278, 282], "triangular": [109, 141, 296, 346], "trigger": [96, 105, 325, 339], "trigonometr": 342, "trim": 95, "tripl": 8, "true": [2, 18, 23, 30, 31, 37, 44, 45, 58, 59, 62, 73, 74, 78, 89, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 125, 128, 129, 130, 131, 132, 139, 141, 143, 146, 151, 152, 153, 161, 163, 168, 169, 172, 173, 177, 178, 181, 182, 183, 186, 190, 191, 194, 197, 199, 200, 202, 203, 204, 211, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 268, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 294, 296, 297, 310, 311, 312, 313, 318, 320, 321, 322, 323, 327, 333, 335, 336, 337, 338, 339, 341, 343, 344, 347, 348, 374], "true_divid": 344, "truediv": [333, 338], "truli": 322, "trunc": [97, 109, 136, 263], "truncat": [115, 344], "trust": 90, "truth": [6, 344], "try": [6, 18, 38, 41, 62, 78, 82, 85, 94, 109, 119, 125, 164, 165, 174, 175, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 308, 309, 318, 325, 326, 331, 333, 336, 337, 339, 344, 346, 348, 395], "tspan": 94, "tune": [66, 73, 109, 314, 325, 340, 346], "tupl": [94, 95, 97, 98, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 128, 130, 131, 132, 140, 142, 162, 164, 169, 170, 179, 200, 203, 204, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 236, 245, 246, 283, 314, 333, 336, 400], "turnhout": [92, 316], "tutori": [36, 82, 86, 88, 89, 90, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 336, 339, 341, 345, 346, 353, 397], "twin": [109, 218, 221, 225, 226, 227], "twinx": [109, 218, 219, 221, 222, 223, 225, 226, 227, 228], "two": [2, 10, 16, 18, 23, 37, 53, 62, 66, 73, 74, 92, 97, 98, 105, 109, 112, 115, 119, 130, 131, 133, 156, 161, 168, 186, 200, 203, 239, 268, 276, 287, 294, 311, 314, 315, 318, 320, 321, 322, 325, 326, 327, 332, 333, 336, 339, 340, 344, 345, 391], "txt": [45, 49, 65, 66, 69, 78, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 326, 340, 346, 353, 374], "type": [2, 6, 8, 18, 19, 38, 46, 73, 78, 93, 94, 96, 97, 102, 107, 109, 113, 115, 117, 118, 125, 126, 127, 130, 133, 138, 140, 153, 160, 161, 164, 165, 167, 170, 171, 174, 175, 176, 178, 185, 194, 197, 198, 200, 202, 204, 205, 207, 208, 209, 211, 212, 214, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 237, 247, 248, 252, 254, 255, 267, 275, 279, 285, 286, 297, 298, 301, 308, 309, 322, 325, 326, 327, 329, 330, 331, 332, 333, 339, 341, 344, 346], "type1cm": 336, "typecod": [97, 109], "typeerror": [109, 118, 140, 335, 346], "typewrit": 336, "typic": [6, 8, 90, 93, 95, 109, 137, 249, 282, 314, 322, 338, 339], "typograph": 117, "tz": 333, "tzinfo": 109, "u": [12, 15, 23, 24, 36, 38, 41, 43, 58, 73, 75, 89, 97, 98, 107, 109, 113, 117, 119, 123, 139, 140, 153, 163, 181, 202, 215, 216, 237, 238, 247, 248, 252, 253, 254, 255, 259, 276, 284, 285, 286, 295, 297, 308, 314, 318, 322, 323, 326, 327, 331, 333, 336, 338, 339, 345, 348], "u_": 117, "u_i": 117, "ub": 73, "ubic": 339, "ubuntu": [83, 87], "ufunc": [333, 342, 385], "umasked_data": [97, 109], "un": [100, 344], "unalign": 337, "unamed_script": 124, "unari": 342, "unavoid": 6, "unbias": [109, 285, 297], "unchang": [97, 109, 136, 263, 338], "uncom": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 93, 335], "unconstrain": [95, 109, 137], "uncorrel": 115, "undefin": [333, 336], "under": [2, 90, 91, 93, 319, 362], "underli": [97, 100, 109, 314, 322, 339], "underscor": [73, 75, 318, 332, 335, 336], "understand": [2, 92, 316, 331, 391], "understood": 2, "undertak": 2, "undesir": 348, "unexplain": [24, 122], "unicod": [100, 108, 336], "unidimension": 334, "uniform": [97, 109, 197, 236, 346], "uniformli": [97, 109, 197], "unimod": [108, 314, 320, 381], "unimodconc": [108, 320], "unimodconcmod": 108, "unimodconctol": 108, "unimodmod": 381, "unimodspec": 108, "unimodspecmod": 108, "unimodspectol": 108, "unimodtol": [108, 381], "uniniti": [109, 164, 165, 174, 175, 211, 212, 308, 309], "union": [109, 128, 270, 337], "uniqu": [109, 124, 241, 333], "unit": [4, 16, 17, 18, 24, 27, 31, 35, 36, 37, 39, 42, 55, 58, 73, 75, 89, 91, 93, 94, 97, 98, 100, 107, 109, 113, 115, 119, 128, 133, 146, 160, 163, 164, 165, 166, 167, 169, 170, 171, 174, 175, 178, 181, 185, 190, 191, 192, 193, 194, 197, 211, 212, 215, 236, 237, 247, 271, 284, 289, 291, 292, 308, 309, 317, 318, 320, 321, 323, 324, 327, 334, 336, 338, 339, 341, 342, 343, 363, 376, 378, 399], "unit_item": 119, "unitari": 123, "unitless": [41, 53, 97, 109, 119, 151, 167, 174, 175, 211, 239, 245, 246, 308, 333, 342], "unitregistri": 119, "unitsa": 327, "unitscm": [318, 322], "unitscontain": 119, "unitsmin": 327, "unitss": 327, "univari": 105, "univers": [20, 92, 109, 342], "universit": 92, "universiteit": 20, "unix": [109, 213, 237, 247, 248, 326, 327], "unless": [2, 95, 97, 109, 129, 132, 178, 194, 197, 236, 395], "unlik": [109, 164, 333], "unlink": [109, 111, 118], "unmask": 348, "unmodifi": 2, "unread": 326, "unresolv": 331, "unrest": 2, "until": [109, 218, 221, 225, 226, 227, 322, 332, 390], "untitl": 6, "unusu": 94, "unwant": 348, "unweight": 346, "up": [4, 6, 9, 12, 83, 90, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 304, 318, 325, 326, 336], "upb": 318, "updat": [2, 4, 5, 6, 83, 84, 86, 98, 108, 109, 112, 118, 271, 350, 353, 360, 369, 372, 377, 380, 389, 392], "upgrad": [5, 84, 86, 88, 350], "upload": [15, 41, 85, 96, 109, 162, 196, 393], "upon": 2, "upper": [109, 144, 167, 336, 339, 346], "upstream": [5, 6], "ur": [38, 58, 75, 97, 109, 164, 165, 174, 175, 211, 212, 271, 308, 309, 318, 333, 338, 343], "ureg": 119, "url": [0, 41, 92, 109, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 325, 332, 393], "us": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 32, 33, 36, 37, 38, 41, 46, 48, 51, 53, 59, 62, 65, 66, 69, 73, 74, 75, 78, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 128, 130, 131, 133, 137, 138, 139, 140, 142, 153, 159, 164, 165, 169, 176, 178, 179, 181, 186, 194, 197, 198, 200, 202, 203, 204, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 232, 236, 238, 239, 240, 242, 243, 245, 249, 250, 251, 252, 253, 254, 255, 259, 267, 271, 275, 276, 279, 281, 285, 286, 295, 297, 298, 300, 301, 302, 304, 314, 316, 317, 319, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 334, 335, 337, 340, 341, 342, 343, 344, 345, 347, 348, 353, 360, 367, 384, 385, 391, 393, 395, 397, 399, 401], "usabl": 90, "usag": [8, 82, 84, 326, 333, 342, 351, 402], "use_coord": [109, 169], "use_jac": 94, "use_list": [75, 109, 256], "use_plotli": [109, 218, 219, 221, 222, 223, 225, 226, 227, 228, 336], "used_compon": 393, "used_rang": [95, 339], "uselabel_x": [109, 218, 221, 225, 226, 227], "useless": [37, 322], "useoffset": 336, "usepackag": 336, "user": [2, 5, 6, 10, 19, 20, 82, 86, 88, 89, 90, 92, 93, 96, 97, 106, 109, 114, 118, 164, 167, 185, 249, 315, 320, 321, 322, 323, 326, 327, 330, 333, 334, 336, 339, 345, 346, 377, 383, 399, 401], "user_global_n": 346, "user_n": 346, "userguid": [9, 318, 327, 335, 399], "usermodel": [73, 75, 114], "usernam": 327, "userwarn": [16, 24, 44, 46, 73, 327, 333, 335, 344, 347], "usetex": 336, "usual": [19, 36, 49, 62, 78, 85, 90, 96, 102, 109, 141, 143, 152, 156, 163, 168, 172, 173, 177, 181, 182, 183, 186, 199, 215, 216, 262, 264, 267, 279, 282, 296, 300, 320, 321, 322, 325, 333, 335, 336], "utc": [109, 247, 327, 333, 336, 377], "utf": 332, "util": [6, 335, 360, 383], "uv": [19, 20, 92, 320, 321], "v": [19, 20, 31, 38, 73, 74, 82, 86, 88, 89, 92, 94, 97, 98, 107, 109, 113, 117, 123, 159, 170, 300, 314, 318, 320, 321, 322, 323, 324, 325, 326, 327, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 357], "v0_8": 336, "v_1": [98, 333], "vacuum": [109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 370], "vaidulych": 92, "vajda": 92, "val": [98, 318, 327], "valentin": 92, "valid": [2, 17, 27, 66, 90, 96, 98, 109, 112, 114, 146, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 284, 324, 340, 397], "valtchev": 92, "valtera": 92, "valu": [2, 6, 15, 16, 18, 20, 21, 22, 23, 24, 27, 30, 41, 49, 58, 59, 66, 69, 73, 74, 75, 89, 93, 94, 95, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 119, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 139, 140, 144, 153, 157, 158, 161, 164, 165, 167, 169, 170, 172, 173, 174, 175, 178, 190, 194, 197, 200, 202, 203, 211, 212, 218, 219, 220, 222, 223, 228, 229, 230, 234, 236, 240, 242, 250, 251, 255, 263, 267, 279, 281, 282, 285, 286, 294, 296, 297, 308, 309, 314, 318, 320, 321, 322, 323, 324, 325, 326, 327, 331, 333, 335, 336, 337, 338, 339, 341, 344, 345, 346, 348, 353, 382, 395, 398, 399], "valueerror": [109, 119, 128, 283, 333], "van": [20, 92, 316], "var": [109, 202, 285, 318], "vardiff": [109, 139], "variabl": [30, 73, 74, 75, 93, 94, 100, 105, 106, 108, 109, 117, 122, 142, 179, 285, 297, 314, 315, 318, 324, 325, 326, 331, 336], "varianc": [22, 23, 24, 100, 109, 115, 122, 123, 139, 156, 202, 285, 297, 314, 321, 340, 399], "variat": [62, 97, 318, 339, 398], "variou": [4, 74, 78, 89, 91, 95, 102, 109, 118, 128, 169, 195, 237, 267, 279, 300, 314, 322, 325, 326, 331, 333, 335, 339, 346, 397], "vast": 346, "vdlist": [75, 109, 256, 399], "vector": [74, 95, 108, 109, 115, 117, 123, 158, 300, 314, 321, 336, 339, 344], "vegg": 92, "vei": 73, "vel": 327, "velopp": [92, 316], "venv": [5, 21, 24, 83, 86, 87, 88, 335, 346], "verbos": [17, 19, 21, 381], "veri": [6, 12, 20, 78, 90, 318, 319, 320, 322, 327, 336, 339, 343, 348], "verifi": [2, 6, 83, 84], "versicolor": 22, "version": [0, 2, 6, 10, 12, 46, 75, 82, 83, 84, 85, 86, 87, 88, 90, 99, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 140, 159, 233, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 274, 325, 330, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "versu": [6, 31, 318], "vertic": [49, 109, 204, 218, 221, 224, 225, 226, 227, 322, 336, 339], "vi": [2, 20], "via": [5, 87, 92, 109, 115, 184, 316], "vibrat": [138, 318], "view": [9, 44, 49, 109, 119, 159, 314, 333, 336, 346], "view_init": 22, "viginica": 22, "vijaysekhar": 92, "vilmin": 339, "vimont": 92, "vincent": 92, "violat": 21, "violet": [49, 74], "virginica": 22, "viridi": [115, 117, 336, 337], "virtual": [5, 88, 326, 331], "viru": 2, "visibl": [92, 204, 336, 337], "visit": 82, "visual": [21, 91, 119, 321, 323, 324, 348], "vladimir": 92, "vmax": [117, 336], "vmin": [117, 336], "vogt": 92, "voic": 9, "void": 322, "voigt": [138, 298, 318], "voigtmodel": [74, 138, 318], "vollmer": 92, "volt": [38, 109, 247], "voluceau": 2, "volum": 116, "vscode": 13, "vshift": [109, 218, 221, 225, 226, 227], "vt": 123, "vz0466": [23, 41, 89, 323, 348], "vz0467": [41, 89, 323, 348], "vz0471": 23, "vz0512": 23, "vz0517": 23, "vz0520": [41, 89, 323, 348], "vz0521": [41, 89, 323, 348], "w": [16, 73, 92, 97, 107, 109, 112, 113, 117, 119, 141, 177, 182, 183, 219, 220, 222, 223, 228, 229, 230, 314, 322, 325, 335], "w1": [107, 113], "w_init": 100, "wa": [2, 20, 37, 90, 94, 98, 109, 161, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 320, 325, 327, 331, 348, 353, 356, 357, 361, 391, 395, 396, 398, 399], "waal": 92, "wai": [0, 6, 10, 37, 53, 82, 89, 91, 92, 98, 109, 175, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 315, 325, 330, 331, 333, 336, 339, 340, 348, 377, 397], "waiver": 2, "walczak": 92, "wang": 92, "want": [6, 27, 36, 37, 69, 85, 86, 88, 90, 93, 95, 97, 109, 117, 128, 139, 158, 181, 190, 282, 289, 318, 323, 327, 330, 331, 332, 333, 336, 337, 338, 339, 340, 346, 348], "war": 2, "warg": 98, "warm": 114, "warm_start": [95, 99, 100, 105, 107, 108, 112, 113, 114, 115, 117, 122, 123], "warn": [6, 21, 22, 41, 73, 78, 95, 99, 100, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 156, 267, 270, 279, 293, 299, 300, 320, 325, 326, 327, 332, 333, 335, 336, 338, 339, 343, 344, 345, 347, 356, 362, 384, 389, 390], "warning_": 46, "warrant": [2, 322], "warranti": 2, "wassim": 92, "water": 2, "waterfal": [109, 220, 229, 230, 336, 353], "watt": 119, "wavelength": [4, 16, 17, 19, 20, 24, 27, 37, 38, 93, 109, 247, 314, 320, 321, 324, 339], "wavenumb": [15, 18, 36, 37, 38, 41, 46, 62, 89, 93, 96, 97, 109, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 247, 318, 322, 323, 327, 333, 336, 339, 345, 346, 348], "wdf": [46, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 398], "we": [3, 5, 6, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 78, 81, 82, 83, 86, 89, 90, 97, 109, 128, 139, 141, 143, 145, 152, 160, 163, 168, 172, 173, 177, 181, 182, 183, 186, 190, 199, 215, 216, 218, 219, 221, 222, 223, 225, 226, 227, 228, 237, 247, 248, 262, 264, 268, 271, 282, 289, 296, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 346, 347, 348, 372], "web": [90, 332, 336], "webbook": [109, 162, 375], "websit": [2, 20, 41, 85], "weckhuysen": 92, "wed": [23, 41, 89, 323, 348], "weight": [62, 107, 108, 109, 113, 117, 140, 202, 314, 336, 346], "welcom": [5, 10, 12, 82, 89], "weleas": 326, "well": [2, 12, 19, 42, 109, 117, 169, 320, 321, 326, 336], "were": [2, 31, 105, 108, 109, 114, 123, 318, 327, 336, 347, 361, 396, 398], "wert": [109, 300, 346], "wh": 112, "whan": 314, "what": [3, 12, 49, 74, 109, 159, 315, 318, 327, 329, 339, 342, 348, 350], "whatev": [93, 109, 331], "whatsnew": [4, 6, 386], "whatsoev": 2, "when": [0, 2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 66, 73, 74, 75, 78, 82, 84, 94, 95, 97, 99, 100, 101, 102, 105, 107, 108, 109, 112, 113, 114, 115, 117, 118, 122, 123, 128, 133, 140, 157, 158, 169, 170, 178, 194, 197, 204, 214, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 268, 279, 282, 314, 318, 320, 322, 325, 326, 327, 332, 333, 336, 338, 339, 341, 345, 346, 348, 355, 359, 363, 377, 382, 384, 391, 393, 398, 399], "whenev": [109, 117, 128, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 337], "where": [2, 6, 9, 13, 45, 46, 62, 73, 74, 75, 78, 96, 97, 98, 99, 100, 102, 105, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 122, 123, 133, 141, 142, 144, 163, 167, 170, 176, 177, 179, 181, 182, 183, 194, 198, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 279, 282, 285, 297, 300, 301, 302, 304, 314, 315, 318, 323, 326, 329, 333, 334, 336, 338, 339, 343, 344, 347], "wherebi": 320, "whether": [2, 94, 95, 97, 98, 105, 107, 108, 109, 113, 114, 117, 123, 129, 132, 159, 161, 169, 194, 249, 256, 320, 321, 336, 345], "which": [2, 10, 15, 20, 22, 38, 53, 59, 62, 73, 74, 78, 85, 90, 91, 93, 94, 95, 97, 98, 99, 100, 102, 105, 108, 109, 112, 113, 114, 115, 116, 117, 118, 122, 123, 128, 129, 130, 131, 132, 139, 140, 141, 143, 145, 146, 147, 148, 151, 152, 153, 156, 160, 163, 165, 168, 170, 171, 172, 173, 175, 177, 178, 181, 182, 183, 184, 186, 190, 197, 199, 200, 202, 203, 212, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 234, 236, 262, 264, 265, 267, 276, 279, 281, 282, 285, 286, 295, 296, 297, 300, 309, 314, 315, 318, 320, 321, 322, 324, 326, 327, 330, 331, 333, 336, 337, 339, 340, 344, 345, 346, 348, 372, 393, 395, 396, 397], "while": [5, 22, 89, 90, 94, 107, 108, 113, 314, 320, 321, 324, 326, 327, 336, 339, 346], "whitak": [66, 92, 109, 157, 340, 392], "white": [204, 336], "whitegrid": 336, "whiten": [100, 115, 399], "whiten_solv": 100, "whitespac": 336, "whittak": [68, 70, 71, 102, 109, 237, 267, 279, 317, 342, 397], "whnever": [109, 301, 302, 304], "who": [2, 330], "whole": [2, 41, 74, 109, 161, 318, 322, 339], "whose": [2, 100, 105, 108, 109, 112, 114, 115, 117, 122, 123, 167, 202, 297], "why": [6, 12, 91, 318, 372], "wich": [21, 22], "wide": [83, 90], "widget": [85, 96, 336, 375, 380, 392], "width": [22, 30, 49, 73, 74, 78, 92, 95, 109, 138, 169, 176, 181, 198, 204, 218, 221, 224, 225, 226, 227, 280, 298, 316, 318, 335, 336], "width_height": [73, 322], "wiggl": 336, "wiki": [6, 336], "wikipedia": [336, 346], "wild": 331, "wilei": 92, "wilk": [92, 109, 243, 327], "wilson": 92, "windig": [92, 122], "window": [5, 57, 60, 71, 78, 83, 85, 87, 89, 91, 95, 102, 109, 141, 157, 163, 169, 177, 181, 182, 183, 213, 235, 237, 247, 248, 256, 267, 278, 279, 280, 282, 300, 301, 317, 322, 326, 327, 329, 330, 340, 342, 343, 362, 367, 376], "window_length": [102, 109, 169, 267, 279], "wire": [40, 47, 55, 109, 115, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 317, 398], "wise": [97, 109, 115, 126, 127, 130, 131, 200, 203, 344], "wish": [109, 159, 330], "with_transpos": [204, 210, 231], "within": [2, 9, 97, 109, 133, 249, 320, 322, 331, 332], "without": [2, 6, 45, 85, 96, 102, 109, 152, 164, 168, 186, 199, 237, 239, 247, 248, 264, 267, 314, 315, 320, 322, 325, 331, 336, 337, 339, 345, 372], "wittaker_smooth_licens": [109, 300], "wl": 322, "wlen": [73, 109, 169, 322], "wodger": [38, 109, 111, 118, 247, 290, 326], "won": [22, 322], "word": [2, 100, 105, 108, 112, 114, 115, 117, 122, 123, 332], "wordpress": 320, "work": [0, 1, 2, 6, 16, 18, 21, 24, 37, 41, 44, 46, 53, 62, 73, 74, 81, 82, 84, 90, 95, 109, 114, 137, 156, 161, 218, 221, 225, 226, 227, 300, 319, 325, 326, 327, 330, 331, 333, 335, 336, 342, 346, 351, 353, 355, 356, 358, 363, 366, 372, 376, 377, 383, 390, 395, 398, 399, 401, 402], "workflow": [91, 360, 365], "workspac": 330, "worldwid": 2, "wors": [107, 113, 117], "worth": [6, 322, 327, 336], "worthwhil": 331, "would": [6, 18, 21, 31, 37, 62, 69, 100, 105, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 161, 320, 322, 339, 345, 346, 391], "wp": [41, 107, 113, 393], "wr": 322, "wrap": [102, 109, 117, 119, 267, 279], "wrapper": [96, 100, 109, 267, 276, 295, 327, 344, 346], "wrapper1": 335, "write": [2, 4, 8, 11, 90, 109, 110, 111, 118, 159, 302, 304, 318, 326, 327, 330, 338, 339, 344, 374, 391], "write_csv": [109, 370, 399], "write_excel": [109, 307], "write_jcamp": [109, 327], "write_jdx": 327, "write_mat": 109, "write_matlab": [109, 305], "write_xl": 109, "writer": [327, 336, 353], "written": [2, 8, 9, 123, 327, 331], "wrong": [12, 325, 387], "wrongli": [356, 396], "wrt": [107, 113, 325], "wspace": 204, "www": [0, 27, 41, 92, 109, 304, 324, 325, 327, 331, 339], "x": [1, 6, 16, 17, 18, 19, 20, 22, 23, 24, 27, 31, 36, 37, 38, 41, 43, 49, 66, 69, 73, 74, 75, 78, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 117, 122, 123, 128, 139, 140, 141, 143, 146, 147, 148, 152, 153, 156, 160, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 183, 185, 186, 198, 199, 202, 204, 212, 215, 216, 218, 221, 225, 226, 227, 232, 237, 238, 239, 245, 246, 247, 248, 249, 252, 253, 254, 255, 259, 262, 264, 275, 276, 282, 284, 285, 286, 289, 295, 296, 297, 304, 308, 309, 314, 315, 316, 318, 320, 321, 322, 323, 324, 326, 327, 333, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 370, 371, 391, 398], "x1": [66, 339, 344], "x2": [66, 320, 327, 339, 344], "x3": [66, 339], "x4": [66, 339], "x5": 339, "x6": 339, "x64": 346, "x7": 339, "x8": 339, "x9b": 20, "x_": [18, 37, 324], "x_bckg_yyybg": [109, 238], "x_coord": 4, "x_data": 4, "x_hat": [20, 99, 100, 105, 108, 112, 114, 115, 117, 122, 123], "x_hat_a": 17, "x_hat_b": 17, "x_load": 324, "x_origin": [100, 105, 108, 112, 114, 115, 117, 122, 123], "x_revers": [109, 219, 220, 222, 223, 228, 229, 230], "x_samplename_yyi": [109, 238], "x_score": [117, 324], "x_test": [27, 324], "x_train": [27, 324], "x_transform": [100, 105, 108, 112, 114, 115, 117, 122, 123], "xand": 112, "xarrai": [3, 109, 293], "xavier": 92, "xaxi": [109, 247, 396], "xc": [78, 339], "xcm": 78, "xcode": [5, 87], "xcorr": 323, "xcp": 78, "xfail": 6, "xhan": 346, "xiang": 92, "xl": 91, "xlabel": [15, 16, 18, 24, 31, 36, 49, 59, 109, 218, 221, 225, 226, 227, 318, 321, 323, 324], "xlim": [73, 75, 109, 218, 221, 225, 226, 227, 338, 341, 343, 346, 347], "xm": [69, 346], "xn": 346, "xsg": 346, "xsm": 346, "xsm2": 346, "xtick_bottom": 336, "xtick_color": 336, "xtick_direct": 336, "xtick_labels": 336, "xtick_major_bottom": 336, "xtick_major_pad": 336, "xtick_major_s": 336, "xtick_major_top": 336, "xtick_major_width": 336, "xtick_minor_bottom": 336, "xtick_minor_pad": 336, "xtick_minor_s": 336, "xtick_minor_top": 336, "xtick_minor_vis": 336, "xtick_minor_width": 336, "xtick_top": 336, "xw": 346, "xwhit": 346, "xx": [109, 162, 336], "xxx_data": 4, "xxxx": [109, 162], "xxxxxxx": [109, 162], "xy": [46, 73, 74, 322, 336], "xytext": [73, 74, 322, 336], "y": [15, 17, 18, 20, 22, 23, 24, 27, 30, 31, 36, 37, 41, 42, 43, 73, 74, 75, 89, 92, 94, 96, 97, 98, 99, 100, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 123, 139, 140, 153, 160, 164, 167, 169, 170, 174, 202, 204, 212, 237, 238, 239, 245, 246, 247, 248, 249, 252, 253, 254, 255, 259, 284, 285, 286, 289, 297, 308, 309, 314, 316, 318, 320, 321, 322, 323, 324, 326, 333, 335, 336, 337, 344, 345, 346, 348, 355, 384, 399], "y_coord": 4, "y_data": 4, "y_event": 94, "y_hat": 117, "y_load": 324, "y_pred": [107, 113, 117], "y_revers": [109, 220, 229, 230, 336], "y_score": [117, 324], "y_std": 324, "y_test": [27, 324], "y_test_hat": 324, "y_train": [27, 324], "y_transform": [108, 117], "y_true": [107, 113, 117], "year": 0, "yellow": 332, "yet": [13, 109, 281, 327, 330, 331, 333, 337], "yield": [6, 8, 322, 325], "ylabel": [15, 16, 18, 24, 31, 36, 49, 59, 109, 218, 221, 225, 226, 227, 318, 321, 323, 324], "ylim": [73, 74, 109, 115, 218, 221, 225, 226, 227, 318, 322, 346], "yml": [87, 353], "yonesi": [92, 316], "you": [0, 3, 5, 6, 9, 10, 12, 13, 38, 41, 81, 82, 84, 85, 86, 88, 89, 90, 91, 93, 94, 95, 97, 100, 109, 117, 158, 159, 315, 318, 319, 323, 326, 327, 330, 331, 332, 333, 336, 343, 345, 347, 348, 356, 387], "your": [0, 4, 6, 13, 81, 82, 83, 84, 85, 90, 91, 93, 94, 100, 109, 268, 326, 327, 329, 330, 331, 332, 333, 339, 343], "yourmambaforgefold": 88, "yourself": 6, "yourworkingfold": 88, "yscale": [15, 16], "ytick_color": 336, "ytick_direct": 336, "ytick_labels": 336, "ytick_left": 336, "ytick_major_left": 336, "ytick_major_pad": 336, "ytick_major_right": 336, "ytick_major_s": 336, "ytick_major_width": 336, "ytick_minor_left": 336, "ytick_minor_pad": 336, "ytick_minor_right": 336, "ytick_minor_s": 336, "ytick_minor_vis": 336, "ytick_minor_width": 336, "ytick_right": 336, "yu": 92, "yukihiro": 92, "yukiteru": 92, "yyi": [109, 238], "z": [36, 43, 46, 92, 97, 98, 109, 170, 204, 284, 316, 327, 333, 336, 344], "z2": 327, "z3": 327, "zapf": 336, "zden\u011bk": 92, "zenodo": [0, 92, 316], "zeolit": [21, 92, 316], "zeorslik": [109, 309], "zero": [16, 109, 112, 129, 140, 141, 152, 164, 165, 167, 174, 175, 199, 211, 212, 215, 216, 218, 221, 225, 226, 227, 264, 285, 297, 309, 310, 311, 312, 313, 323, 333, 342, 343], "zerodivisionerror": [109, 140], "zeros_lik": [109, 164, 165, 174, 175, 211, 212, 308], "zeroto": 112, "zeynep": 92, "zf": [109, 343], "zf_auto": 109, "zf_doubl": 109, "zf_size": [109, 341], "zhang": 92, "zholobenko": [92, 314], "zip": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 53, 58, 59, 62, 65, 66, 69, 73, 74, 75, 78, 109, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 353, 393], "zlabel": [109, 218, 221, 225, 226, 227], "zlim": [58, 59, 109, 218, 221, 225, 226, 227, 336, 338], "zmqshell": 346, "zoom": [73, 322, 336, 343, 346], "zo\u00e9": 92, "zpd": 343, "zscore": [109, 157], "zuberbuehl": [92, 99, 314], "\u00b5": [59, 73, 75, 335, 338, 341], "\u00b9": [18, 37, 41, 73, 89, 109, 140, 202, 322, 323, 327, 333, 343, 345, 348], "\u00e0": 92, "\u00e1": 92, "\u00e7": 92, "\u00e9": 92, "\u00e9chantillon": 327, "\u00ecncrement": 97, "\u00f3": 92, "\u00f8": 92, "\u0161tefan": 92, "\u03bb": 346, "\u2075": 333}, "titles": ["Citing SpectroChemPy", "Acknowledgments", "SpectroChempy License", "See also", "Adding a Reader", "Contributing to SpectroChemPy", "Contributing to the code", "Contributing to specific parts of the code", "SpectroChemPy Docstring Guide", "Contributing to Documentation", "Adding your examples to the gallery", "Developer\u2019s Guide", "Reporting Issues", "Editors", "Decomposition", "EFA example", "EFA (Keller and Massart original example)", "FastICA example", "2D-IRIS analysis example", "MCR-ALS example (adapted from Jaumot et al. 2005)", "MCR-ALS with kinetic constraints", "NMF analysis example", "PCA example (iris dataset)", "PCA analysis example", "SIMPLISMA example", "Computation times", "Cross-decomposition", "PLS regression example", "Computation times", "Curvefitting", "Fitting 1D dataset", "Solve a linear equation using LSTSQ", "Computation times", "Analysis NDDataset", "Computation times", "How to use NDDataset", "NDDataset creation and plotting example", "NDDataset coordinates example", "Units manipulation examples", "Computation times", "Import / Export", "Reading datasets", "Loading an IR (omnic SPG) experimental file", "Loading Bruker OPUS files", "Loading of experimental 1D NMR data", "Loading RAMAN experimental file", "Reading Renishaw WiRE files", "Computation times", "Plotting datasets", "Using <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plot_multiple</span></code> to plot several datasets on the same figure", "Introduction to the plotting librairie", "Computation times", "Project Management", "Project creation", "Computation times", "Core functionalities", "Computation times", "Apodization", "Exponential window multiplication", "Sine bell and squared Sine bell window multiplication", "Computation times", "Baseline", "NDDataset baseline correction", "Computation times", "Denoising", "Denoising a 2D Raman spectrum", "Removing cosmic ray spikes from a Raman spectrum", "Computation times", "filtering", "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum", "Computation times", "Processing NDDataset", "Processing NMR datasets", "Analysis CP NMR spectra", "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)", "Processing Relaxation measurement", "Computation times", "Processing Raman datasets", "Processing RAMAN spectra", "Computation times", "Computation times", "Example\u2019s gallery", "Getting Help", "Installation Guide", "Optional Dependencies", "Install in Google Colaboratory (Colab)", "Installation Guide for Mac OSX and Linux", "Installation from Sources", "Installation Guide for Windows", "SpectroChemPy Overview", "Why SpectroChemPy?", "Processing, analyzing and modeling spectroscopic data", "Bibliography", "Frequently asked questions (FAQ)", "spectrochempy.ActionMassKinetics", "spectrochempy.Baseline", "spectrochempy.BaselineCorrector", "spectrochempy.Coord", "spectrochempy.CoordSet", "spectrochempy.EFA", "spectrochempy.FastICA", "spectrochempy.FileSelector", "spectrochempy.Filter", "spectrochempy.II", "spectrochempy.IR", "spectrochempy.IRIS", "spectrochempy.IrisKernel", "spectrochempy.LSTSQ", "spectrochempy.MCRALS", "spectrochempy.NDDataset", "spectrochempy.NDDataset.save", "spectrochempy.NDDataset.save_as", "spectrochempy.NMF", "spectrochempy.NNLS", "spectrochempy.Optimize", "spectrochempy.PCA", "spectrochempy.PFR", "spectrochempy.PLSRegression", "spectrochempy.Project", "spectrochempy.Quantity", "spectrochempy.RI", "spectrochempy.RR", "spectrochempy.SIMPLISMA", "spectrochempy.SVD", "spectrochempy.Script", "spectrochempy.Unit", "spectrochempy.abs", "spectrochempy.absolute", "spectrochempy.align", "spectrochempy.all", "spectrochempy.amax", "spectrochempy.amin", "spectrochempy.any", "spectrochempy.arange", "spectrochempy.argmax", "spectrochempy.argmin", "spectrochempy.around", "spectrochempy.asls", "spectrochempy.asymmetricvoigtmodel", "spectrochempy.autosub", "spectrochempy.average", "spectrochempy.bartlett", "spectrochempy.basc", "spectrochempy.blackmanharris", "spectrochempy.clip", "spectrochempy.component", "spectrochempy.concatenate", "spectrochempy.conj", "spectrochempy.conjugate", "spectrochempy.coordmax", "spectrochempy.coordmin", "spectrochempy.copy", "spectrochempy.cs", "spectrochempy.cumsum", "spectrochempy.dc", "spectrochempy.debug_", "spectrochempy.denoise", "spectrochempy.despike", "spectrochempy.detrend", "spectrochempy.diag", "spectrochempy.diagonal", "spectrochempy.dot", "spectrochempy.download_nist_ir", "spectrochempy.em", "spectrochempy.empty", "spectrochempy.empty_like", "spectrochempy.error_", "spectrochempy.eye", "spectrochempy.fft", "spectrochempy.find_peaks", "spectrochempy.fromfunction", "spectrochempy.fromiter", "spectrochempy.fsh", "spectrochempy.fsh2", "spectrochempy.full", "spectrochempy.full_like", "spectrochempy.gaussianmodel", "spectrochempy.general_hamming", "spectrochempy.geomspace", "spectrochempy.get_baseline", "spectrochempy.get_loglevel", "spectrochempy.gm", "spectrochempy.hamming", "spectrochempy.hann", "spectrochempy.ht", "spectrochempy.identity", "spectrochempy.ifft", "spectrochempy.imag", "spectrochempy.info_", "spectrochempy.interpolate", "spectrochempy.is_units_compatible", "spectrochempy.ito", "spectrochempy.ito_base_units", "spectrochempy.ito_reduced_units", "spectrochempy.linspace", "spectrochempy.load", "spectrochempy.load_iris", "spectrochempy.logspace", "spectrochempy.lorentzianmodel", "spectrochempy.ls", "spectrochempy.max", "spectrochempy.mc", "spectrochempy.mean", "spectrochempy.min", "spectrochempy.multiplot", "spectrochempy.multiplot_image", "spectrochempy.multiplot_lines", "spectrochempy.multiplot_map", "spectrochempy.multiplot_scatter", "spectrochempy.multiplot_stack", "spectrochempy.multiplot_with_transposed", "spectrochempy.ones", "spectrochempy.ones_like", "spectrochempy.pathclean", "spectrochempy.pipe", "spectrochempy.pk", "spectrochempy.pk_exp", "spectrochempy.plot", "spectrochempy.plot_1D", "spectrochempy.plot_2D", "spectrochempy.plot_3D", "spectrochempy.plot_bar", "spectrochempy.plot_image", "spectrochempy.plot_map", "spectrochempy.plot_multiple", "spectrochempy.plot_pen", "spectrochempy.plot_scatter", "spectrochempy.plot_scatter_pen", "spectrochempy.plot_stack", "spectrochempy.plot_surface", "spectrochempy.plot_waterfall", "spectrochempy.plot_with_transposed", "spectrochempy.polynomialbaseline", "spectrochempy.ps", "spectrochempy.ptp", "spectrochempy.qsin", "spectrochempy.random", "spectrochempy.read", "spectrochempy.read_carroucell", "spectrochempy.read_csv", "spectrochempy.read_ddr", "spectrochempy.read_dir", "spectrochempy.read_hdr", "spectrochempy.read_jcamp", "spectrochempy.read_labspec", "spectrochempy.read_mat", "spectrochempy.read_matlab", "spectrochempy.read_omnic", "spectrochempy.read_opus", "spectrochempy.read_quadera", "spectrochempy.read_sdr", "spectrochempy.read_soc", "spectrochempy.read_spa", "spectrochempy.read_spc", "spectrochempy.read_spg", "spectrochempy.read_srs", "spectrochempy.read_topspin", "spectrochempy.read_wdf", "spectrochempy.read_wire", "spectrochempy.read_zip", "spectrochempy.real", "spectrochempy.remove_masks", "spectrochempy.roll", "spectrochempy.round", "spectrochempy.rs", "spectrochempy.run_all_scripts", "spectrochempy.run_script", "spectrochempy.savgol", "spectrochempy.set_complex", "spectrochempy.set_hypercomplex", "spectrochempy.set_loglevel", "spectrochempy.set_nmr_context", "spectrochempy.set_quaternion", "spectrochempy.show", "spectrochempy.show_versions", "spectrochempy.sigmoidmodel", "spectrochempy.simpson", "spectrochempy.sine", "spectrochempy.sinm", "spectrochempy.smooth", "spectrochempy.snip", "spectrochempy.sort", "spectrochempy.sp", "spectrochempy.squeeze", "spectrochempy.stack", "spectrochempy.std", "spectrochempy.sum", "spectrochempy.swapdims", "spectrochempy.take", "spectrochempy.to", "spectrochempy.to_array", "spectrochempy.to_base_units", "spectrochempy.to_reduced_units", "spectrochempy.to_xarray", "spectrochempy.transpose", "spectrochempy.trapezoid", "spectrochempy.triang", "spectrochempy.var", "spectrochempy.voigtmodel", "spectrochempy.warning_", "spectrochempy.whittaker", "spectrochempy.write", "spectrochempy.write_csv", "spectrochempy.write_excel", "spectrochempy.write_jcamp", "spectrochempy.write_mat", "spectrochempy.write_matlab", "spectrochempy.write_xls", "spectrochempy.zeros", "spectrochempy.zeros_like", "spectrochempy.zf", "spectrochempy.zf_auto", "spectrochempy.zf_double", "spectrochempy.zf_size", "Glossary", "Public API reference", "Papers citing <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Computation times", "Fitting", "Analysis", "MCR ALS", "Principal Component Analysis", "Peak Maxima Finding", "Peak Integration", "Partial Least Squares Regression (PLSRegression)", "API Configuration", "Import Data in SpectroChemPy", "Import IR Data", "Import &amp; Export", "User Guide and Tutorials", "Starting Jupyter lab", "Introduction", "Markdown Cheat Sheet", "The NDDataset object", "Core objects", "Project management", "Plotting", "Alignment of datasets", "Apodization", "Baseline corrections", "Denoising", "One-dimensional (1D) Fourier transformation", "Processing", "FTIR interferogram processing", "Mathematical operations", "Slicing NDDatasets", "Filtering, Smoothing and Denoising", "Time domain baseline correction (NMR)", "Basic transformations", "What\u2019s new in revision", "Release notes", "What\u2019s new in revision 0.7.1", "Revisions 0.1.0 to 0.1.19", "What\u2019s new in revision 0.2.0", "What\u2019s new in revision 0.2.10 [2021-02-14]", "What\u2019s new in revision 0.2.11 [2021-02-17]", "What\u2019s new in revision 0.2.12 [2021-02-23]", "What\u2019s new in revision 0.2.13 [2021-02-23]", "What\u2019s new in revision 0.2.14 [2021-02-25]", "What\u2019s new in revision 0.2.15 [2021-03-29]", "What\u2019s new in revision 0.2.16 [2021-11-11]", "What\u2019s new in revision 0.2.17 [2021-11-29]", "What\u2019s new in revision 0.2.18 [2022-01-05]", "What\u2019s new in revision 0.2.21 [2022-01-09]", "What\u2019s new in revision 0.2.22 [2022-01-10]", "What\u2019s new in revision 0.2.23 [2022-01-16]", "What\u2019s new in revision 0.2.4", "What\u2019s new in revision 0.2.5", "What\u2019s new in revision 0.2.6", "What\u2019s new in revision 0.2.7", "What\u2019s new in revision 0.2.8", "What\u2019s new in revision 0.2.9 [2021-11-29]", "What\u2019s new in revision 0.3.0 [2022-01-20]", "What\u2019s new in revision 0.3.1 [2022-01-21]", "What\u2019s new in revision 0.3.2 [2022-01-31]", "What\u2019s new in revision 0.3.3 [2022-03-9]", "What\u2019s new in revision 0.4.1 [2022-03-14]", "What\u2019s new in revision 0.4.10 [2023-01-07]", "What\u2019s new in revision 0.4.2 [2022-03-16]", "What\u2019s new in revision 0.4.3 [2022-03-20]", "What\u2019s new in revision 0.4.4 [2022-03-22]", "What\u2019s new in revision 0.4.5 [2022-04-09]", "What\u2019s new in revision 0.4.6 [2022-05-16]", "What\u2019s new in revision 0.4.7 [2022-05-16]", "What\u2019s new in revision 0.4.9 [2023-01-05]", "What\u2019s new in revision 0.5.0 [2023-01-11]", "What\u2019s new in revision 0.5.1", "What\u2019s new in revision 0.5.2", "What\u2019s new in revision 0.5.3", "What\u2019s new in revision 0.5.4", "What\u2019s new in revision 0.5.5", "What\u2019s new in revision 0.6.1", "What\u2019s new in revision 0.6.10", "What\u2019s new in revision 0.6.2", "What\u2019s new in revision 0.6.3", "What\u2019s new in revision 0.6.4", "What\u2019s new in revision 0.6.5", "What\u2019s new in revision 0.6.6", "What\u2019s new in revision 0.6.7", "What\u2019s new in revision 0.6.8", "What\u2019s new in revision 0.6.9", "What\u2019s new in revision 0.7.0", "What\u2019s new in revision 0.7.1"], "titleterms": {"": [11, 81, 91, 93, 331, 335, 344, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "0": [350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "01": [362, 363, 364, 365, 372, 373, 374, 377, 384, 385], "02": [354, 355, 356, 357, 358], "03": [359, 375, 376, 378, 379, 380], "04": 381, "05": [362, 382, 383, 384], "07": 377, "09": [363, 381], "1": [4, 16, 89, 333, 350, 351, 352, 373, 376, 386, 391, 402], "10": [354, 364, 377, 392], "11": [355, 360, 361, 371, 385], "12": 356, "13": 357, "14": [354, 358, 376], "15": 359, "16": [360, 365, 378, 382, 383], "17": [355, 361], "18": 362, "19": 352, "1d": [30, 44, 78, 333, 336, 341], "2": [4, 16, 89, 333, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 378, 387, 393], "20": [372, 379], "2005": 19, "2021": [316, 354, 355, 356, 357, 358, 359, 360, 361, 371], "2022": [316, 362, 363, 364, 365, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383], "2023": [316, 377, 384, 385], "2024": 316, "2025": 316, "21": [363, 373], "22": [364, 380], "23": [356, 357, 365], "25": 358, "29": [359, 361, 371], "2d": [18, 65, 74, 75, 78, 340], "3": [4, 16, 350, 372, 373, 374, 375, 379, 388, 394], "31": 374, "4": [4, 16, 350, 366, 376, 377, 378, 379, 380, 381, 382, 383, 384, 389, 395], "5": [4, 350, 367, 381, 385, 386, 387, 388, 389, 390, 396], "6": [350, 368, 382, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "7": [350, 351, 369, 383, 398, 401, 402], "8": [370, 399], "9": [371, 375, 384, 400], "A": [320, 322, 326], "NOT": 90, "One": 341, "The": [315, 320, 327, 333, 339, 346], "To": 320, "With": 18, "ab": [126, 344], "about": [320, 331, 333], "abscissa": 93, "absolut": [127, 344], "absorpt": 16, "acknowledg": 1, "acquisit": 327, "actionmasskinet": 94, "ad": [4, 10, 333, 336], "adapt": 19, "add": [4, 344], "addit": [83, 88], "advanc": [89, 339], "affect": 344, "al": [19, 20, 320], "algebra": 315, "alia": 344, "align": [128, 315, 337], "all": 129, "along": 337, "also": [3, 344], "altern": [83, 315], "amax": 130, "ambigu": 320, "amin": 131, "an": [42, 322, 335], "analys": [74, 75], "analysi": [16, 18, 21, 23, 33, 73, 89, 90, 315, 319, 321], "analyz": 91, "angl": 344, "ani": 132, "annot": 336, "anoth": 326, "api": [9, 73, 74, 75, 315, 325, 331, 336, 339, 346], "apod": [57, 71, 315, 338], "applic": 330, "approach": 339, "ar": 93, "arang": 133, "arcco": 344, "arccosh": 344, "arcsin": 344, "arcsinh": 344, "arctan": 344, "arctanh": 344, "argmax": 134, "argmin": 135, "aris": 331, "arithmet": 344, "around": 136, "arrai": 344, "ascend": 93, "ask": 93, "asl": 137, "aspect": 336, "assess": 320, "asymmetr": 78, "asymmetricvoigtmodel": 138, "attribut": 333, "augment": 320, "autom": 322, "automat": 18, "autosub": 139, "averag": [140, 346], "axi": 327, "b": 327, "backend": 84, "backward": 6, "bartlett": 141, "basc": [142, 339], "baselin": [61, 62, 71, 74, 78, 89, 95, 315, 318, 339, 341, 347], "baselinecorrector": 96, "basic": [8, 315, 320, 348], "behaviour": 322, "bell": 59, "between": [38, 333], "bibliographi": 92, "binari": 344, "blackmanharri": 143, "box": [326, 332], "break": [332, 349, 376, 385, 391, 392, 393, 395, 399, 401], "broaden": 341, "browser": 330, "bruker": [43, 327], "bug": [349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402], "build": 9, "bullet": 332, "c": 152, "calcul": 341, "cantera": 84, "case": 320, "cbrt": 344, "ceil": 344, "chang": [5, 6, 315, 336, 348, 349, 376, 385, 391, 392, 393, 395, 399, 401], "cheat": [330, 332], "chromatogram": 16, "cite": [0, 316], "clip": [144, 315], "co": 344, "code": [6, 7, 87, 93, 322, 339], "colab": 85, "colaboratori": 85, "color": 332, "commit": 6, "comparison": 343, "compat": 6, "complex": [315, 344], "compon": [145, 315, 321], "comput": [25, 28, 32, 34, 39, 47, 51, 54, 56, 60, 63, 67, 70, 76, 79, 80, 84, 317], "concaten": 146, "concentr": 320, "conda": 83, "configur": [13, 320, 325, 336], "conj": 147, "conjug": 148, "constant": 339, "constraint": [20, 318], "constructor": 333, "content": [4, 5, 6, 8, 9, 83, 85, 86, 87, 88, 90, 93, 315, 329], "continu": 6, "contribut": [5, 6, 7, 9, 82, 91], "control": [5, 13], "convers": 344, "convert": 38, "convolut": 346, "coord": 97, "coordin": [18, 36, 37, 93, 315, 333, 345], "coordmax": 149, "coordmin": 150, "coordset": 98, "copi": [151, 333], "core": [55, 334], "correct": [62, 74, 78, 89, 315, 318, 339, 341, 347], "cosh": 344, "cosmic": [66, 340], "cp": 73, "creat": [4, 17, 19, 21, 38, 83, 88, 315, 330, 333, 336], "creation": [36, 53, 315, 335], "credit": 91, "cross": [26, 33], "cumsum": 153, "curv": 315, "curvefit": [29, 33], "data": [4, 16, 36, 44, 75, 84, 85, 89, 91, 315, 326, 327, 336, 338, 339, 344, 348], "datadir": 326, "dataset": [16, 17, 18, 19, 21, 22, 30, 36, 37, 38, 41, 48, 49, 55, 71, 72, 74, 77, 315, 320, 321, 322, 324, 333, 336, 337, 344], "date": [327, 333], "dc": 154, "debug_": 155, "decomposit": [14, 26, 33, 315], "default": [322, 326, 336], "definit": 318, "deg2rad": 344, "denois": [64, 65, 71, 78, 156, 315, 340, 346], "depend": [6, 84, 349, 401], "deprec": [349, 378, 382, 391, 392, 393, 395, 397], "descend": 93, "design": 90, "despik": [157, 340], "determin": 320, "detrend": [78, 158, 339], "develop": [5, 6, 11], "diag": 159, "diagon": 160, "dialog": 326, "differ": [315, 320], "dimens": [315, 333, 337], "dimension": 341, "dimensionless": 344, "directli": 85, "directori": 326, "discuss": 82, "displai": 322, "divid": 344, "do": 331, "docstr": 8, "document": [4, 6, 8, 9, 82], "domain": [315, 341, 347], "dot": 161, "download_nist_ir": 162, "drive": 85, "driven": 6, "dx": 327, "edit": 13, "editor": 13, "efa": [15, 16, 99, 320], "eiler": [69, 346], "element": 335, "em": 163, "emphasi": 332, "empti": 164, "empty_lik": 165, "environ": [5, 83, 86, 88], "equat": [31, 318], "error": 325, "error_": 166, "estim": 320, "et": 19, "evolv": [16, 315], "exampl": [8, 10, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 36, 37, 38, 81, 84, 85, 146, 156, 157, 158, 161, 163, 166, 168, 188, 196, 215, 217, 224, 228, 235, 237, 244, 246, 247, 248, 256, 257, 258, 266, 270, 278, 280, 282, 337, 339], "execut": 331, "exist": [315, 333], "exp": 344, "exp2": 344, "experiment": [42, 44, 45, 322], "explicit": 326, "explor": [85, 89], "expm1": 344, "exponenti": [58, 338], "export": [40, 55, 315, 327, 328], "extens": 84, "extern": [315, 332, 333], "ey": 167, "fab": 344, "factor": [16, 21, 315], "faq": 93, "fastica": [17, 100], "featur": [349, 353, 354, 358, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 397, 398, 399, 401], "fft": [168, 341], "figur": [49, 336], "file": [4, 41, 42, 43, 45, 46, 85, 93, 315, 326, 327], "fileselector": 101, "fill": [315, 341], "filter": [68, 71, 102, 315, 340, 346], "find": [315, 318, 322], "find_peak": [169, 322], "first": 337, "fit": [17, 19, 21, 30, 74, 75, 315, 318], "fix": [349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402], "float": 344, "floor": 344, "floor_divid": 344, "font": 332, "format": [4, 8, 327], "fourier": [315, 341], "free": 90, "frequent": 93, "from": [19, 41, 66, 87, 93, 315, 333, 335, 340], "fromfunct": 170, "fromit": 171, "fsh": 172, "fsh2": 173, "ftir": 343, "full": 174, "full_lik": 175, "function": [55, 315, 332, 333, 338, 344], "galleri": [10, 81], "gaussian": 338, "gaussianmodel": 176, "gener": [5, 16, 93, 325], "general_ham": 177, "geometr": 332, "geomspac": 178, "get": [5, 17, 82, 87, 89, 91, 93, 320, 331, 335], "get_baselin": 179, "get_loglevel": 180, "git": [85, 87], "github": 82, "glossari": 314, "gm": 181, "go": 331, "golai": [69, 346], "good": 326, "googl": 85, "graphic": 332, "guess": 320, "gui": 84, "guid": [8, 9, 11, 83, 86, 88, 91, 329, 331], "guidelin": 4, "ham": 182, "handl": 325, "hann": 183, "head": 332, "help": [82, 320], "histori": 333, "horizont": 332, "how": [35, 55, 93, 331, 339], "ht": 184, "hyperbol": 344, "hypercomplex": 344, "i": 345, "ident": 185, "ifft": 186, "ii": 103, "illustr": 320, "imag": 187, "imaginari": 338, "import": [40, 41, 55, 73, 74, 75, 78, 315, 326, 327, 328, 333], "indent": 332, "independ": [315, 339], "index": [93, 315, 345], "influenc": 346, "info_": 188, "inform": [320, 325], "initi": 320, "inner": 337, "input": 344, "insight": 333, "inspect": 322, "instal": [13, 83, 85, 86, 87, 88], "instanc": 89, "integ": 315, "integr": [6, 315, 323], "interact": 315, "interferogram": 343, "intern": 332, "interpol": [189, 315], "introduct": [50, 85, 320, 321, 324, 331, 338], "invers": 315, "ir": [42, 104, 327], "iri": [18, 22, 89, 105], "iriskernel": 106, "is_units_compat": 190, "isfinit": 344, "isinf": 344, "isnan": 344, "issu": [12, 82], "ito": 191, "ito_base_unit": 192, "ito_reduced_unit": 193, "jaumot": 19, "jcamp": 327, "join": 315, "jupyt": 330, "keep": 344, "keller": 16, "kinet": [20, 315], "l": 199, "lab": 330, "label": 333, "last": 337, "least": [78, 315, 318, 324], "librairi": 50, "licens": [1, 2], "like": [315, 333], "line": [332, 341], "linear": [31, 315, 318, 339], "lineshap": 315, "link": 332, "linspac": 194, "linux": 86, "list": [332, 344], "load": [17, 19, 20, 42, 43, 44, 45, 85, 195, 315, 321, 322, 324, 331, 335, 336], "load_iri": 196, "local": 41, "log": [6, 315, 344], "log10": 344, "log1p": 344, "log2": 344, "logic": 315, "logical_not": 344, "loglevel": 325, "logspac": 197, "lorentzian": 338, "lorentzianmodel": 198, "lstsq": [31, 107, 318], "mac": 86, "magnitud": [341, 344], "main": 336, "maintain": 5, "make": 5, "manag": [52, 55, 83, 315, 335], "manipul": [38, 89, 315], "manual": [18, 322], "markdown": [330, 332], "mask": [315, 348], "massart": 16, "math": 333, "mathemat": [89, 315, 332, 344], "matplotlib": 336, "matrix": [16, 315], "max": 200, "maxima": 322, "maximum": 315, "mc": 201, "mcr": [19, 20, 320], "mcral": [108, 320], "mean": 202, "measur": 75, "median": 340, "method": [83, 87, 315, 318, 322, 333, 337, 339, 340, 346], "min": 203, "minim": 320, "minimum": 315, "misc": 315, "miscellan": 315, "mix": 17, "mixtur": 315, "model": [19, 21, 75, 91, 315, 318, 339], "modul": [4, 326], "monospac": 332, "more": [320, 322, 333], "move": 346, "multidimension": 333, "multipl": [58, 59, 338], "multipli": 344, "multiplot": 204, "multiplot_imag": 205, "multiplot_lin": 206, "multiplot_map": 207, "multiplot_scatt": 208, "multiplot_stack": 209, "multiplot_with_transpos": 210, "multivari": [315, 339], "nd": [36, 333], "ndataset": 315, "nddataset": [20, 33, 35, 36, 37, 55, 62, 71, 89, 109, 110, 111, 315, 318, 333, 334, 336, 339, 344, 345, 346], "neg": [315, 318, 344], "new": [18, 37, 330, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "next": [86, 88, 331], "nmd": 74, "nmf": [21, 112], "nmr": [44, 71, 72, 73, 74, 75, 341, 347], "nnl": [113, 318], "non": [315, 318], "note": [332, 350], "notebook": 330, "number": [315, 320, 332, 344], "numer": 315, "numpi": [333, 344], "o": 326, "object": [17, 19, 21, 89, 315, 333, 334, 344], "offset": 315, "omnic": [42, 327, 343], "ones": 211, "ones_lik": 212, "onli": 344, "open": 90, "oper": [89, 315, 333, 344], "optim": [114, 315, 320], "optimis": 318, "option": [6, 9, 84, 322], "opu": [43, 327], "order": [93, 327], "origin": [16, 338], "osx": 86, "other": [2, 338, 339], "output": 336, "overflow": 82, "overview": [84, 89, 336, 339], "own": 336, "p": 233, "packag": 83, "paper": 316, "paramet": [8, 318, 320, 336], "part": 7, "parti": 1, "partial": [315, 324], "path": 326, "pathclean": 213, "pathlib": 326, "pathnam": 326, "pca": [22, 23, 115, 320, 321], "peak": [74, 315, 318, 322, 323], "pep8": 6, "perman": 88, "pfr": 116, "phase": 315, "pick": 74, "pipe": 214, "pk": 215, "pk_exp": 216, "pl": 27, "plot": [17, 19, 21, 36, 48, 49, 50, 55, 93, 217, 315, 322, 336, 338], "plot_1d": 218, "plot_2d": 219, "plot_3d": 220, "plot_bar": 221, "plot_imag": 222, "plot_map": 223, "plot_multipl": [49, 224], "plot_pen": 225, "plot_scatt": 226, "plot_scatter_pen": 227, "plot_stack": 228, "plot_surfac": 229, "plot_waterfal": 230, "plot_with_transpos": 231, "plsregress": [117, 324], "polynomi": 339, "polynomialbaselin": 232, "power": [90, 341], "pr": 5, "practic": 326, "pre": 6, "prefer": [93, 336], "prepar": [17, 21, 336], "preprocess": 341, "prerequisit": [83, 87], "princip": [315, 321], "principl": 5, "process": [71, 72, 74, 75, 77, 78, 89, 91, 315, 332, 342, 343], "processor": [339, 346], "profil": [17, 320], "project": [52, 53, 55, 118, 315, 334, 335], "promin": 322, "properti": 322, "pseudo": 75, "ptp": 234, "public": 315, "pure": 320, "pytest": 6, "python": [6, 83, 90], "qsin": 235, "qt": 84, "quantiti": [38, 119], "question": [93, 331], "quick": [9, 85], "r": 264, "rad2deg": 344, "radian": 344, "rai": [66, 340], "raman": [45, 65, 66, 69, 71, 77, 78, 340], "random": 236, "rang": 315, "read": [41, 46, 237], "read_carroucel": 238, "read_csv": 239, "read_ddr": 240, "read_dir": 241, "read_hdr": 242, "read_jcamp": 243, "read_labspec": 244, "read_mat": 245, "read_matlab": 246, "read_omn": 247, "read_opu": 248, "read_quadera": 249, "read_sdr": 250, "read_soc": 251, "read_spa": 252, "read_spc": 253, "read_spg": 254, "read_sr": 255, "read_topspin": 256, "read_wdf": 257, "read_wir": 258, "read_zip": 259, "reader": 4, "real": [260, 338, 341], "reciproc": 344, "recommend": 83, "reconstruct": 17, "refer": [91, 315], "regist": 4, "regress": [27, 315, 324], "regular": 18, "rel": 326, "relat": 315, "relax": 75, "releas": 350, "remot": 41, "remov": [66, 335, 340], "remove_mask": 261, "renishaw": 46, "report": 12, "repositori": 85, "requir": [86, 88, 344], "resolut": 315, "resourc": 83, "result": [19, 21], "return": 344, "revis": [349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "ri": 120, "rint": 344, "roll": [262, 315], "rotat": 320, "round": [263, 315], "rr": 121, "rubberband": 339, "ruff": 6, "rule": 8, "run": [6, 321, 324], "run_all_script": 265, "run_script": 266, "same": [49, 336], "sampl": 4, "save": [93, 110, 335], "save_a": 111, "savgol": [267, 346], "savitki": 69, "savitzki": 346, "scienc": 90, "scientif": 84, "script": [124, 315, 318, 331, 334], "search": [18, 326], "section": 8, "see": 3, "segment": 339, "select": [89, 315, 336], "self": 315, "seri": 78, "set": [5, 18, 37, 333], "set_complex": 268, "set_coordset": 333, "set_hypercomplex": 269, "set_loglevel": 270, "set_nmr_context": 271, "set_quaternion": 272, "setup": [5, 86, 88], "sever": [49, 333, 336, 337, 339], "shape": 332, "share": 333, "sheet": [330, 332, 336], "shift": 338, "shortcut": 88, "show": 273, "show_vers": 274, "sigmoidmodel": 275, "sign": 344, "signbit": 344, "simpl": 315, "simplisma": [24, 122], "simpson": 276, "simul": 16, "sin": 344, "sine": [59, 277, 338], "singl": 333, "singular": 315, "sinh": 344, "sinm": 278, "size": 346, "slice": [74, 345], "smooth": [69, 78, 89, 279, 315, 346], "snip": 280, "snippet": [322, 339], "solut": 320, "solv": [31, 318], "solver": 315, "sort": [281, 315], "sourc": [9, 13, 17, 87, 90, 315], "sp": 282, "spa": 327, "speci": 320, "specif": 7, "specifi": 93, "spectra": [16, 73, 74, 75, 78, 327, 340, 341], "spectral": [17, 89, 320], "spectrochempi": [0, 2, 5, 8, 83, 86, 87, 88, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 326, 331], "spectroscop": [91, 315], "spectrum": [65, 66, 69, 341], "spg": [42, 327], "spike": [66, 340], "split": 315, "sqrt": 344, "squar": [59, 78, 315, 318, 324, 344], "squeez": 283, "stack": [82, 284], "standard": 6, "start": [5, 9, 13, 85, 89, 91, 330, 331], "statist": 315, "std": 285, "step": [4, 83, 86, 88], "structur": [8, 9], "studio": 13, "style": 336, "subtract": 344, "success": 5, "suit": 6, "sum": [286, 315], "summari": 333, "support": [84, 327], "svd": 123, "swapdim": 287, "symbol": 332, "syntax": [318, 333], "system": 17, "tabl": [5, 6, 83, 85, 86, 88, 93, 315], "take": 288, "tan": 344, "tanh": 344, "techniqu": 89, "test": [4, 6, 16, 84], "thi": 331, "third": 1, "time": [25, 28, 32, 34, 39, 47, 51, 54, 56, 60, 63, 67, 70, 76, 79, 80, 315, 317, 333, 341, 347], "tip": [5, 9, 88], "titl": 336, "to_arrai": 290, "to_base_unit": 291, "to_reduced_unit": 292, "to_xarrai": 293, "todo": [1, 334], "transform": [315, 341, 348], "transpos": [294, 315], "transposit": 348, "trapezoid": 295, "trend": 339, "triang": 296, "trigonometr": 344, "troubleshoot": 84, "trunc": 344, "tutori": [9, 91, 329], "type": [315, 336], "ufunc": 344, "unari": 344, "unidimension": 333, "unit": [38, 125, 315, 333, 344, 348], "unitless": 344, "univers": 344, "up": 5, "updat": [87, 349, 401], "upload": [18, 37], "us": [6, 31, 35, 49, 55, 85, 146, 156, 157, 158, 161, 163, 166, 168, 188, 196, 215, 217, 224, 228, 235, 237, 244, 246, 247, 248, 256, 257, 258, 266, 270, 278, 280, 282, 315, 318, 320, 326, 330, 333, 336, 338, 339, 346], "usag": [93, 344], "user": [91, 329, 331], "util": 315, "valu": 315, "var": 297, "verifi": [86, 87, 88], "version": [5, 350], "visual": [13, 89], "voigtmodel": 298, "warning_": 299, "web": 330, "what": [331, 345, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402], "where": [93, 331], "whittak": [69, 300, 346], "why": 90, "width": 322, "window": [58, 59, 88, 336, 338, 346], "wire": 46, "without": 18, "work": [85, 89, 339, 344], "write": [6, 9, 301, 331], "write_csv": 302, "write_excel": 303, "write_jcamp": 304, "write_mat": 305, "write_matlab": 306, "write_xl": 307, "y": 327, "your": [5, 10, 89, 336], "zero": [308, 315, 341], "zeros_lik": 309, "zf": 310, "zf_auto": 311, "zf_doubl": 312, "zf_size": 313}})