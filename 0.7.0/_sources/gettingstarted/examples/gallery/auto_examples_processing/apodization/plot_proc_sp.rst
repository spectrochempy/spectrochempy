
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_processing_apodization_plot_proc_sp.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_apodization_plot_proc_sp.py:


Sine bell and squared Sine bell window multiplication
=====================================================

In this example, we use sine bell or squared sine bell window multiplication to apodize a NMR signal in the time domain.

.. GENERATED FROM PYTHON SOURCE LINES 15-25

.. code-block:: Python


    import os

    import spectrochempy as scp

    path = os.path.join(
        scp.preferences.datadir, "nmrdata", "bruker", "tests", "nmr", "topspin_1d"
    )
    dataset1D = scp.read_topspin(path, expno=1, remove_digital_filter=True)








.. GENERATED FROM PYTHON SOURCE LINES 26-27

Normalize the dataset values and reduce the time domain

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: Python


    dataset1D /= dataset1D.real.data.max()  # normalize
    dataset1D = dataset1D[0.0:15000.0]








.. GENERATED FROM PYTHON SOURCE LINES 32-33

Apply Sine bell window apodization with parameter ssb=2, which correspond to a cosine function

.. GENERATED FROM PYTHON SOURCE LINES 33-36

.. code-block:: Python


    new1, curve1 = scp.sinm(dataset1D, ssb=2, retapod=True, inplace=False)








.. GENERATED FROM PYTHON SOURCE LINES 37-38

this is equivalent to

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: Python

    _ = dataset1D.sinm(ssb=2, retapod=True, inplace=False)








.. GENERATED FROM PYTHON SOURCE LINES 41-42

or also

.. GENERATED FROM PYTHON SOURCE LINES 42-44

.. code-block:: Python

    _ = scp.sp(dataset1D, ssb=2, pow=1, retapod=True, inplace=False)








.. GENERATED FROM PYTHON SOURCE LINES 45-46

Apply Sine bell window apodization with parameter ssb=2, which correspond to a sine function

.. GENERATED FROM PYTHON SOURCE LINES 46-49

.. code-block:: Python


    new2, curve2 = dataset1D.sinm(ssb=1, retapod=True, inplace=False)








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Apply Squared Sine bell window apodization with parameter ssb=1 and ssb=2

.. GENERATED FROM PYTHON SOURCE LINES 51-56

.. code-block:: Python


    new3, curve3 = scp.qsin(dataset1D, ssb=2, retapod=True, inplace=False)

    new4, curve4 = dataset1D.qsin(ssb=1, retapod=True, inplace=False)








.. GENERATED FROM PYTHON SOURCE LINES 57-58

Apply shifted Sine bell window apodization with parameter ssb=8 (mixed sine/cosine window)

.. GENERATED FROM PYTHON SOURCE LINES 58-61

.. code-block:: Python


    new5, curve5 = dataset1D.sinm(ssb=8, retapod=True, inplace=False)








.. GENERATED FROM PYTHON SOURCE LINES 62-63

Plotting

.. GENERATED FROM PYTHON SOURCE LINES 63-92

.. code-block:: Python


    p = dataset1D.plot(zlim=(-2, 2), color="k")

    curve1.plot(color="r", clear=False)
    new1.plot(
        data_only=True, color="r", clear=False, label=" sinm with ssb= 2 (cosine window)"
    )

    curve2.plot(color="b", clear=False)
    new2.plot(
        data_only=True, color="b", clear=False, label=" sinm with ssb= 1 (sine window)"
    )

    curve3.plot(color="m", clear=False)
    new3.plot(data_only=True, color="m", clear=False, label=" qsin with ssb= 2")

    curve4.plot(color="g", clear=False)
    new4.plot(data_only=True, color="g", clear=False, label=" qsin with ssb= 1")

    curve5.plot(color="c", ls="--", clear=False)
    new5.plot(
        data_only=True,
        color="c",
        ls="--",
        clear=False,
        label=" sinm with ssb= 8",
        legend="best",
    )




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/apodization/images/sphx_glr_plot_proc_sp_001.png
   :alt: plot proc sp
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/apodization/images/sphx_glr_plot_proc_sp_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <_Axes: xlabel='F1 acquisition time $\\mathrm{/\\ \\mathrm{Âµs}}$', ylabel='values $\\mathrm{}$'>



.. GENERATED FROM PYTHON SOURCE LINES 93-95

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 95-98

.. code-block:: Python


    # scp.show()









.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.478 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_processing_apodization_plot_proc_sp.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_proc_sp.ipynb <plot_proc_sp.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_proc_sp.py <plot_proc_sp.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_proc_sp.zip <plot_proc_sp.zip>`
