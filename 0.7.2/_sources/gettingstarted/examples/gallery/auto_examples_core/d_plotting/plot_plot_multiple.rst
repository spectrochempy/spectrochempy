
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_d_plotting_plot_plot_multiple.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_core_d_plotting_plot_plot_multiple.py:


Using `plot_multiple` to plot several datasets on the same figure
=================================================================
In this example, we will display several Raman datasets on the same figure
using the `plot_multiple` method. Several options are available to customize
the display.

.. GENERATED FROM PYTHON SOURCE LINES 16-17

Import spectrochempy as usual

.. GENERATED FROM PYTHON SOURCE LINES 17-19

.. code-block:: Python

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Load the data (here 2D spectrum made from a list of 1D spectra):

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: Python

    B1 = scp.read("ramandata/labspec/serie190214-1.txt")








.. GENERATED FROM PYTHON SOURCE LINES 24-28

First we show the basic plot (note here the use of the `cmap=None` option to
display the spectra with rotating colors. cmap can be of course set to any other
available matplotlib colormap. The second parameter `lw` is used to set the line
width. In addition, we fix the figsize to have a better view of the spectra.

.. GENERATED FROM PYTHON SOURCE LINES 28-31

.. code-block:: Python

    prefs = B1.preferences
    prefs.figure.figsize = (8, 4)
    B1.plot(cmap=None, lw=1)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_001.png
   :alt: plot plot multiple
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_001.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 32-34

We will limit the x range to the region of interest
note the float number to specify that we use coordinates and not indices

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    B2 = B1[:, 60.0:]








.. GENERATED FROM PYTHON SOURCE LINES 37-38

As there is obviously a drift in these spectra, we will use detrend to remove it.

.. GENERATED FROM PYTHON SOURCE LINES 38-40

.. code-block:: Python

    B3 = scp.detrend(B2)
    B3.plot(cmap=None)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_002.png
   :alt: plot plot multiple
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_002.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 41-43

To demonstrate the use of `plot_multiple` we will take only a few spectra.
For instance the 5 first spectra:

.. GENERATED FROM PYTHON SOURCE LINES 43-45

.. code-block:: Python

    B4 = B3[:5]








.. GENERATED FROM PYTHON SOURCE LINES 46-47

plot it to see what we have selected

.. GENERATED FROM PYTHON SOURCE LINES 47-48

.. code-block:: Python

    B4.plot(cmap=None)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_003.png
   :alt: plot plot multiple
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_003.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 49-54

Now we will use `plot_multiple` to plot all the spectra of the dataset B4.
we need to use `offset` to separate the traces and we set some labels to identify
these traces on the final plot. different colors and line width are also used.
Note that we can use the `legend` option to place the legend at the best location.
We can also use the `shift` option to shift the traces vertically.

.. GENERATED FROM PYTHON SOURCE LINES 54-66

.. code-block:: Python

    datasets = list(B4)
    scp.plot_multiple(
        datasets,
        method="pen",
        legend="best",
        labels=["A", "B", "C", "D", "E"],
        color=["black", "red", "green", "blue", "violet"],
        lw=[1, 2.5, 1, 1, 1],  # line width (we use here different values)
        ls="-",  # solid line style
        shift=1000,  # vertical shift
    )




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_004.png
   :alt: plot plot multiple
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/d_plotting/images/sphx_glr_plot_plot_multiple_004.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 67-69

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 69-71

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.285 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_d_plotting_plot_plot_multiple.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_plot_multiple.ipynb <plot_plot_multiple.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_plot_multiple.py <plot_plot_multiple.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_plot_multiple.zip <plot_plot_multiple.zip>`
