name: Tests

on:
  push:
    branches:
      - master
      - develop
      - feature/*

  schedule:
    - cron: '00 0 * * *'

  pull_request:

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-package:

    # prevent cron jobs from running on forks or release
    if: |
      (github.event_name == 'schedule'
       && github.repository == 'spectrochempy/spectrochempy'
       && !startsWith(github.ref, 'refs/release/')) || (
       github.event_name != 'schedule'
       && !startsWith(github.ref, 'refs/release/'))

    name: Test using ${{ matrix.os }} and python ${{ matrix.pythonVersion }}

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash {0}
        # do not use -l flag (do not work with macos when bash is se in login mode)

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        include:
        - os: ubuntu-latest
          path: ~/.venv
          pythonVersion: "3.10"
        - os: ubuntu-latest
          path: ~/.venv
          pythonVersion: "3.8"
        - os: macos-latest
          path: ~/.venv
          pythonVersion: "3.10"
        - os: windows-latest
          path: $HOME\.venv
          pythonVersion: "3.10"

    steps:
      - name: Checkout spectrochempy repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.pythonVersion }}
        id: setup_python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.pythonVersion }}

      - name: cache virtualenv
        # Cache virtual environment to avoid installing dependencies at each runs
        uses: actions/cache@v3
        id: cache-venv
        with:
          path: ${{ matrix.path }}
          key: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-${{ hashFiles('requirements/requirements.txt') }}
          restore-keys: ${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-venv-

      - name: Install dependencies for testing
        # Run only if dependencies have changed
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          python -m venv ${{ matrix.path }}
          source ./.venv/bin/activate
          python --version
          python -m pip install -r requirements/requirements.txt
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install pytest pytest-doctestplus pytest-flake8 pytest-mock
          python -m pip install pyfakefs
          python -m pip install cffconvert
          python -m pip install coverage
          python -m pip install numpydoc>=1.2
          python -m pip install xarray

      - name: Activate virtual environment on posix
        if : ${{ matrix.os != 'window-latest' }}
        run: |
          source ${{ matrix.path }}/bin/activate
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Activate virtual environment on Windows
        if : ${{ matrix.os == 'window-latest' }}
        run: |
          ${{ matrix.path }}\Scripts\activate.bat
          echo PATH=$PATH >> $GITHUB_ENV

      - name: Install spectrochempy
        run: |
          python -m pip install --no-deps .
          python -m pip list

      - name: Test with coverage
        run: |
          coverage run -m pytest tests

      - name: Coverage report to xml
        if: ${{ github.event_name == 'push' && matrix.pythonVersion == '3.10' && matrix.os == 'ubuntu-latest' }}
        run: |
          coverage xml

      - name: Code Climate reporting
        if: ${{ github.event_name == 'push' && matrix.pythonVersion == '3.10' && matrix.os == 'ubuntu-latest' }}
        uses: paambaati/codeclimate-action@v3.2.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
