name: Tests

on:
  push:
    branches:
      - master
      - develop
      - feature/*
    # paths-ignore:
    #   - "docs/**"
    #   - "**/*.rst"
    #   - "**/*.md"
    #   - "**/*.ipynb"
    #   - "**/*.yml"
    #   - "**/*.toml"

  schedule:
    - cron: "00 0 * * *"

  pull_request:
    # paths-ignore:
    #   - "docs/**"
    #   - "**/*.rst"
    #   - "**/*.md"
    #   - "**/*.ipynb"
    #   - "**/*.yml"
    #   - "**/*.toml"

  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-package:
    # prevent cron jobs from running on forks or release
    if: |
      (github.event_name == 'schedule'
       && github.repository == 'spectrochempy/spectrochempy'
       && !startsWith(github.ref, 'refs/release/')) || (
       github.event_name != 'schedule'
       && !startsWith(github.ref, 'refs/release/'))

    name: Test using ${{ matrix.os }} and python ${{ matrix.pythonVersion }}

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash {0}
        # do not use -l flag (do not work with macos when bash is se in login mode)

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        pythonVersion: ["3.10", "3.12"]
        # when adding a new python version, do not forget to update the matrix in the codeclimate step.max-parallel
        # also go to github settings to modify the required actions to succeed for PR (branches/protectionrules: edit "master")
        exclude:
          - os: macos-latest
            pythonVersion: 3.10
          - os: windows-latest
            pythonVersion: 3.10
    steps:
      - name: info
        run: |
          echo "Environment Act: ${{ env.ACT }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "Event: ${{ toJSON(github.event) }}"
          echo "pythonVersion: ${{ matrix.pythonVersion }}"
          echo "os: ${{ matrix.os }}"

      - name: Checkout spectrochempy repository
        if: ${{ !(env.ACT && matrix.pythonVersion == '3.12') }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.pythonVersion }}
        if: ${{ !(env.ACT && matrix.pythonVersion == '3.12') }}
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.pythonVersion }}
          cache: "pip"

      - name: Install spectrochempy
        if: ${{ !(env.ACT && matrix.pythonVersion == '3.12') }}
        run: |
          python -m pip install ".[test]"
          # check the MPL setup
          python src/spectrochempy/data/setup.py

      - name: Test with coverage
        if: ${{ !(env.ACT && matrix.pythonVersion == '3.12') }}
        run: |
          coverage run -m pytest tests -s --durations=10

      - name: Coverage report to xml
        if: ${{ !env.ACT &&  github.event_name == 'push' && matrix.pythonVersion == '3.12' && matrix.os == 'ubuntu-latest' }}
        run: |
          coverage xml

      - name: Code Climate reporting
        if: ${{ !env.ACT &&  github.event_name == 'push' && matrix.pythonVersion == '3.12' && matrix.os == 'ubuntu-latest' }}
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: ${{secrets.CC_TEST_REPORTER_ID}}
