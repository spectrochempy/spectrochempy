# This workflow builds and publishes SpectrochemPy packages to:
# - PyPI (Python Package Index)
# - Anaconda Cloud
# It runs after successful completion of the test workflow

name: Build and publish packages ðŸ“¦

on:
  push:
    branches:
      - master
      - fix/*

  pull_request:

  release:
    types: [published]

  workflow_dispatch:  # Allow manual trigger

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Job 1: Build and publish to PyPI
  # ---------------------------------
  build-and-publish_pypi:
    name: Build and publish distribution to PyPI
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Step 3: Install pypa/build
      - name: Install pypa/build
        run: |
          python -m pip install build --user

      # Step 4: Build a binary wheel and a source tarball
      - name: Build a binary wheel and a source tarball
        run: |
          python -m build --sdist --wheel --outdir dist/ .

      # Step 5: Upload PyPI build artifacts
      - name: Upload PyPI build artifacts
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: pypi-package
          path: |
            dist/*.whl
            dist/*.tar.gz
          retention-days: 5

      # Step 6: Publish package to Test PyPI
      - name: Publish package to Test PyPI
        if: (github.event_name == 'push' && github.repository == 'spectrochempy/spectrochempy')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

      # Step 7: Publish package to PyPI
      - name: Publish package to PyPI
        if: (github.event_name == 'release' && github.event.action == 'published' && github.repository == 'spectrochempy/spectrochempy')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  # Job 2: Build and publish to Anaconda
  # -------------------------------------
  build_and_publish_conda_package:
    name: Build and publish conda package to Anaconda.org
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash -l {0}

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Install Conda environment with Micromamba
      - name: Install Conda environment with Micromamba
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-file: environments/environment_build.yml
          environment-name: scpy_build
          create-args: >-
            python=3.11
          cache-environment: true

      # Step 3: Generate conda recipe (with the correct information on version, etc...)
      - name: Generate conda recipe
        run: |
          python3 .github/workflows/scripts/generate_conda_recipe.py
          cat recipe/meta.yaml

      # Step 4: Build conda package
      - name: Build conda package
        uses: prefix-dev/rattler-build-action@v0.2.31
        env:
          CONDA_BLD_PATH: ../output
        with:
          recipe-path: recipe/meta.yaml
          upload-artifact: false
          build-args: "-c conda-forge -c spectrocat"
      - run: mv ../output .

      # Step 5: Upload build artifacts
      - name: Upload build artifacts
        if: ${{ !env.ACT }}
        uses: actions/upload-artifact@v4
        with:
          name: conda-package
          path: |
            output/**/*.conda
            output/**/*.tar.bz2
          retention-days: 5

      # Step 6: Publish packages to Anaconda.org
      - name: Upload to Anaconda.org
        # to xecute this on a fork this line should be commented
        if: |
          github.repository == 'spectrochempy/spectrochempy' &&
          (github.event_name == 'release' || github.event_name == 'push')
        env:
          ANACONDA_API_TOKEN: ${{ secrets.ANACONDA_API_TOKEN }}
        run: |

          # Function to upload package with specific label
          upload_package() {
            local label=$1
            for package in output/**/*.tar.bz2 output/**/*.conda; do
              if [ -f "$package" ]; then
                echo "Uploading $package with label: $label"
                anaconda upload --force -l $label "$package" || echo "Failed to upload $package"
              fi
            done
          }

          # Upload with appropriate label based on event type
          if [ "${{ github.event_name }}" = "release" ]; then
            # For releases, upload as main/stable version
            upload_package "main"
          else
            # For pushes to master/fix branches, upload as dev version
            upload_package "dev"
          fi
