
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa_keller_massart.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa_keller_massart.py:


EFA (Keller and Massart original example)
=========================================

In this example, we perform the Evolving Factor Analysis of a TEST dataset
(ref. Keller and Massart, Chemometrics and Intelligent Laboratory Systems,
12 (1992) 209-224 )

.. GENERATED FROM PYTHON SOURCE LINES 18-23

.. code-block:: Python

    import numpy as np

    import spectrochempy as scp









.. GENERATED FROM PYTHON SOURCE LINES 25-29

Generate a test dataset
-----------------------
1) simulated chromatogram
*************************

.. GENERATED FROM PYTHON SOURCE LINES 29-39

.. code-block:: Python


    t = scp.Coord(np.arange(15), units="minutes", title="time")  # time coordinates
    c = scp.Coord(range(2), title="components")  # component coordinates

    data = np.zeros((2, 15), dtype=np.float64)
    data[0, 3:8] = [1, 3, 6, 3, 1]  # compound 1
    data[1, 5:11] = [1, 3, 5, 3, 1, 0.5]  # compound 2

    dsc = scp.NDDataset(data=data, coords=[c, t])
    dsc.plot(title="concentration")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_001.png
   :alt: concentration
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_001.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 40-42

2) absorption spectra
**********************

.. GENERATED FROM PYTHON SOURCE LINES 42-48

.. code-block:: Python


    spec = np.array([[2.0, 3.0, 4.0, 2.0], [3.0, 4.0, 2.0, 1.0]])
    w = scp.Coord(np.arange(1, 5, 1), units="nm", title="wavelength")

    dss = scp.NDDataset(data=spec, coords=[c, w])
    dss.plot(title="spectra")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_002.png
   :alt: spectra
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_002.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 49-51

3) simulated data matrix
************************

.. GENERATED FROM PYTHON SOURCE LINES 51-57

.. code-block:: Python


    dataset = scp.dot(dsc.T, dss)
    dataset.data = np.random.normal(dataset.data, 0.1)
    dataset.title = "intensity"

    dataset.plot(title="calculated dataset")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_003.png
   :alt: calculated dataset
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_003.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 58-60

4) evolving factor analysis (EFA)
*********************************

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: Python

    efa = scp.EFA()
    efa.fit(dataset)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <spectrochempy.analysis.decomposition.efa.EFA object at 0x7fb4e1fb8910>



.. GENERATED FROM PYTHON SOURCE LINES 64-66

Plots of the log(EV) for the forward and backward analysis


.. GENERATED FROM PYTHON SOURCE LINES 66-67

.. code-block:: Python

    efa.f_ev.T.plot(yscale="log", legend=efa.f_ev.k.labels)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_004.png
   :alt: plot efa keller massart
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_004.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 68-69

.. code-block:: Python

    efa.b_ev.T.plot(yscale="log", legend=efa.b_ev.k.labels)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_005.png
   :alt: plot efa keller massart
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_005.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 70-75

Looking at these EFA curves, it is quite obvious that only two components
are really significant, and this corresponds to the data that we have in
input.
We can consider that the third EFA components is mainly due to the noise,
and so we can use it to set a cut of values

.. GENERATED FROM PYTHON SOURCE LINES 75-81

.. code-block:: Python

    n_pc = efa.n_components = 2

    efa.cutoff = np.max(efa.f_ev[:, n_pc].data)
    f2 = efa.f_ev[:, :n_pc]
    b2 = efa.b_ev[:, :n_pc]








.. GENERATED FROM PYTHON SOURCE LINES 82-83

we concatenate the datasets to plot them in a single figure

.. GENERATED FROM PYTHON SOURCE LINES 83-85

.. code-block:: Python

    both = scp.concatenate(f2, b2)
    both.T.plot(yscale="log")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_006.png
   :alt: plot efa keller massart
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/spectrochempy/spectrochempy/src/spectrochempy/examples/analysis/a_decomposition/plot_efa_keller_massart.py:83: UserWarning: Some dataset(s) coordinates in the k dimension are None.
      both = scp.concatenate(f2, b2)


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-88

Get the abstract concentration profile based on the FIFO EFA analysis


.. GENERATED FROM PYTHON SOURCE LINES 88-91

.. code-block:: Python

    C = efa.transform()
    C.T.plot(title="EFA concentration")




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_007.png
   :alt: EFA concentration
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_keller_massart_007.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 92-94

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 94-96

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.592 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa_keller_massart.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_efa_keller_massart.ipynb <plot_efa_keller_massart.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_efa_keller_massart.py <plot_efa_keller_massart.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_efa_keller_massart.zip <plot_efa_keller_massart.zip>`
