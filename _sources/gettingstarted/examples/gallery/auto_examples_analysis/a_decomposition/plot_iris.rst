
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_iris.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_iris.py:


2D-IRIS analysis example
=========================

In this example, we perform the 2D IRIS analysis of CO adsorption on a sulfide catalyst.

.. GENERATED FROM PYTHON SOURCE LINES 15-17

.. code-block:: Python

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 18-20

Uploading dataset
-----------------

.. GENERATED FROM PYTHON SOURCE LINES 20-22

.. code-block:: Python

    X = scp.read("irdata/CO@Mo_Al2O3.SPG")








.. GENERATED FROM PYTHON SOURCE LINES 23-26

`X` has two coordinates:
* `wavenumbers` named "x"
* and `timestamps` (*i.e.,* the time of recording) named "y".

.. GENERATED FROM PYTHON SOURCE LINES 26-29

.. code-block:: Python


    print(X.coordset)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    CoordSet: [x:wavenumbers, y:acquisition timestamp (GMT)]




.. GENERATED FROM PYTHON SOURCE LINES 30-38

Setting new coordinates
-----------------------

The `y` coordinates of the dataset is the acquisition timestamp.
However, each spectrum has been recorded with a given pressure of CO
in the infrared cell.

Hence, it would be interesting to add pressure coordinates to the `y` dimension:

.. GENERATED FROM PYTHON SOURCE LINES 38-63

.. code-block:: Python


    pressures = [
        0.003,
        0.004,
        0.009,
        0.014,
        0.021,
        0.026,
        0.036,
        0.051,
        0.093,
        0.150,
        0.203,
        0.300,
        0.404,
        0.503,
        0.602,
        0.702,
        0.801,
        0.905,
        1.004,
    ]

    c_pressures = scp.Coord(pressures, title="pressure", units="torr")








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Now we can set multiple coordinates:

.. GENERATED FROM PYTHON SOURCE LINES 65-70

.. code-block:: Python


    c_times = X.y.copy()  # the original coordinate
    X.y = [c_times, c_pressures]
    print(X.y)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    CoordSet: [_1:acquisition timestamp (GMT), _2:pressure]




.. GENERATED FROM PYTHON SOURCE LINES 71-73

To get a detailed
a rich display of these coordinates. In a jupyter notebook, just type:

.. GENERATED FROM PYTHON SOURCE LINES 73-76

.. code-block:: Python


    X.coordset






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div class='scp-output'><details><summary>CoordSet: [x:wavenumbers, y:[_1:acquisition timestamp (GMT), _2:pressure]][CoordSet_4717d420]</summary><div class="scp-output section"><details><summary>     Dimension `x`</summary>
    <div class="scp-output section"><div class="attr-name">         size</div><div>:</div><div class="attr-value"> 3112</div></div>
    <div class="scp-output section"><div class="attr-name">        title</div><div>:</div><div class="attr-value"> wavenumbers</div></div>
    <div class="scp-output section"><div class="attr-name">  coordinates</div><div>:</div><div class="attr-value"> <div class='numeric'>[    4000     3999 ...     1001    999.9] cm⁻¹</div></div></div></details></div>
    <div class="scp-output section"><details><summary>     Dimension `y`</summary>
    <div class="scp-output section"><div class="attr-name">         size</div><div>:</div><div class="attr-value"> 19</div></div>
    <span>          (_1)</span>
    <div class="scp-output section"><div class="attr-name">        title</div><div>:</div><div class="attr-value"> acquisition timestamp (GMT)</div></div>
    <div class="scp-output section"><div class="attr-name">  coordinates</div><div>:</div><div class="attr-value"> <div class='numeric'>[1.477e+09 1.477e+09 ... 1.477e+09 1.477e+09] s</div></div></div>
    <div class="scp-output section"><div class="attr-name">       labels</div><div>:</div><div class="attr-value"> ... </div></div>
    <div class='label'>         [[  2016-10-18 13:49:35+00:00   2016-10-18 13:54:06+00:00 ...   2016-10-18 16:01:33+00:00   2016-10-18 16:06:37+00:00]<br/>          [  *Résultat de Soustraction:04_Mo_Al2O3_calc_0.003torr_LT_after sulf_Oct 18 15:46:42 2016 (GMT+02:00)<br/>             *Résultat de Soustraction:04_Mo_Al2O3_calc_0.004torr_LT_after sulf_Oct 18 15:51:12 2016 (GMT+02:00) ...<br/>             *Résultat de Soustraction:04_Mo_Al2O3_calc_0.905torr_LT_after sulf_Oct 18 17:58:42 2016 (GMT+02:00)<br/>             *Résultat de Soustraction:04_Mo_Al2O3_calc_1.004torr_LT_after sulf_Oct 18 18:03:41 2016 (GMT+02:00)]]</div>
    <span>          (_2)</span>
    <div class="scp-output section"><div class="attr-name">        title</div><div>:</div><div class="attr-value"> pressure</div></div>
    <div class="scp-output section"><div class="attr-name">  coordinates</div><div>:</div><div class="attr-value"> <div class='numeric'>[   0.003    0.004 ...    0.905    1.004] torr</div></div></div></details></div></details></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 77-80

By default, the current coordinate is the first one (here `c_times` ).
For example, it will be used by default for
plotting:

.. GENERATED FROM PYTHON SOURCE LINES 80-85

.. code-block:: Python


    prefs = scp.preferences
    prefs.figure.figsize = (7, 3)
    X.plot(colorbar=True)
    X.plot_map(colorbar=True)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_001.png
         :alt: plot iris
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_002.png
         :alt: plot iris
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_002.png
         :class: sphx-glr-multi-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 86-88

To seamlessly work with the second coordinates (pressures), we can change the default
coordinate:

.. GENERATED FROM PYTHON SOURCE LINES 88-92

.. code-block:: Python


    X.y.select(2)  # to select coordinate `_2`
    X.y.default






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div class='scp-output'><details><summary>Coord: [float64] torr (size: 19)[_2]</summary><div class="scp-output section"><details><summary>Summary</summary>
    <div class="scp-output section"><div class="attr-name">         size</div><div>:</div><div class="attr-value"> 19</div></div>
    <div class="scp-output section"><div class="attr-name">        title</div><div>:</div><div class="attr-value"> pressure</div></div>
    <div class="scp-output section"><div class="attr-name">  coordinates</div><div>:</div><div class="attr-value"> <div class='numeric'>[   0.003    0.004 ...    0.905    1.004] torr</div></div></div></details></div></details></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 93-94

Let's now plot the spectral range of interest. The default coordinate is now used:

.. GENERATED FROM PYTHON SOURCE LINES 94-98

.. code-block:: Python

    X_ = X[:, 2250.0:1950.0]
    print(X_.y.default)
    X_.plot()
    X_.plot_map()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_003.png
         :alt: plot iris
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_004.png
         :alt: plot iris
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coord: [float64] torr (size: 19)


.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 99-103

IRIS analysis without regularization
------------------------------------
Perform IRIS without regularization (the loglevel can be set to `INFO` to have
information on the running process)

.. GENERATED FROM PYTHON SOURCE LINES 103-105

.. code-block:: Python

    iris1 = scp.IRIS(log_level="INFO")








.. GENERATED FROM PYTHON SOURCE LINES 106-107

first we compute the kernel object

.. GENERATED FROM PYTHON SOURCE LINES 107-109

.. code-block:: Python

    K = scp.IrisKernel(X_, "langmuir", q=[-8, -1, 50])





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     Creating Kernel...
     Kernel now ready as IrisKernel().kernel!




.. GENERATED FROM PYTHON SOURCE LINES 110-111

The actual kernel is given by the `kernel` attribute

.. GENERATED FROM PYTHON SOURCE LINES 111-114

.. code-block:: Python

    kernel = K.kernel
    kernel






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div class='scp-output'><details><summary>NDDataset: [float64] unitless (shape: (y:19, x:50))[langmuir kernel matrix]</summary><div class="scp-output section"><details><summary>Summary</summary>
    <div class="scp-output section"><div class="attr-name">         name</div><div>:</div><div class="attr-value"> langmuir kernel matrix</div></div>
    <div class="scp-output section"><div class="attr-name">       author</div><div>:</div><div class="attr-value"> runner@runnervm3ublj</div></div>
    <div class="scp-output section"><div class="attr-name">      created</div><div>:</div><div class="attr-value"> 2025-09-26 11:38:12+00:00</div></div></details></div>
    <div class="scp-output section"><details><summary>          Data </summary>
    <div class="scp-output section"><div class="attr-name">        title</div><div>:</div><div class="attr-value"> coverage</div></div>
    <div class="scp-output section"><div class="attr-name">       values</div><div>:</div><div class="attr-value"> ... </div></div>
    <div class='numeric'>         [[ 0.06424   0.1265 ... 0.001332 0.0005778]<br/>          [  0.0659   0.1303 ...  0.00177 0.0007683]<br/>          ...<br/>          [  0.0714   0.1428 ...   0.1056  0.05078]<br/>          [  0.0714   0.1428 ...   0.1084  0.05227]]</div>
    <div class="scp-output section"><div class="attr-name">        shape</div><div>:</div><div class="attr-value"> (y:19, x:50)</div></div></details></div>
    <div class="scp-output section"><details><summary>     Dimension `x`</summary>
    <div class="scp-output section"><div class="attr-name">         size</div><div>:</div><div class="attr-value"> 50</div></div>
    <div class="scp-output section"><div class="attr-name">        title</div><div>:</div><div class="attr-value"> $\Delta_{ads}G^{0}/RT$</div></div>
    <div class="scp-output section"><div class="attr-name">  coordinates</div><div>:</div><div class="attr-value"> <div class='numeric'>[      -8   -7.857 ...   -1.143       -1]</div></div></div></details></div>
    <div class="scp-output section"><details><summary>     Dimension `y`</summary>
    <div class="scp-output section"><div class="attr-name">         size</div><div>:</div><div class="attr-value"> 19</div></div>
    <div class="scp-output section"><div class="attr-name">        title</div><div>:</div><div class="attr-value"> pressure</div></div>
    <div class="scp-output section"><div class="attr-name">  coordinates</div><div>:</div><div class="attr-value"> <div class='numeric'>[   0.003    0.004 ...    0.905    1.004] torr</div></div></div></details></div></details></div>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 115-116

Now we fit the model - we can pass either the Kernel object or the kernel NDDataset

.. GENERATED FROM PYTHON SOURCE LINES 116-118

.. code-block:: Python

    iris1.fit(X_, K)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     Build S matrix (sharpness)
     ... done
     Solving for 312 channels and 19 observations, no regularization
     -->  residuals = 1.09e-01    curvature = 9.14e+04
     Done.

    <spectrochempy.analysis.decomposition.iris.IRIS object at 0x7fb502322a50>



.. GENERATED FROM PYTHON SOURCE LINES 119-120

Plots the results

.. GENERATED FROM PYTHON SOURCE LINES 120-122

.. code-block:: Python

    iris1.plotdistribution()
    iris1.plotmerit()



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_005.png
         :alt: 2D IRIS distribution, $\lambda$ = 0.00e+00
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_006.png
         :alt: 2D IRIS merit plot, $\lambda$ = 0.00e+00
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_006.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<Matplotlib Axes object>]



.. GENERATED FROM PYTHON SOURCE LINES 123-126

With regularization and a manual search
---------------------------------------
Perform  IRIS with regularization, manual search

.. GENERATED FROM PYTHON SOURCE LINES 126-128

.. code-block:: Python

    iris2 = scp.IRIS(reg_par=[-10, 1, 12])








.. GENERATED FROM PYTHON SOURCE LINES 129-130

We keep the same kernel object as previously - performs the fit.

.. GENERATED FROM PYTHON SOURCE LINES 130-132

.. code-block:: Python

    iris2.fit(X_, K)
    iris2.plotlcurve(title="L curve, manual search")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_007.png
   :alt: L curve, manual search
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Axes: title={'center': 'L curve, manual search'}, xlabel='Residuals', ylabel='Curvature'>



.. GENERATED FROM PYTHON SOURCE LINES 133-134

Visually, the best regularization parameter is at index ~ -6, corresponding to lambda = 1e-4

.. GENERATED FROM PYTHON SOURCE LINES 134-137

.. code-block:: Python


    iris2.plotdistribution(-6)
    iris2.plotmerit(-6)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_008.png
         :alt: 2D IRIS distribution, $\lambda$ = 1.00e-04
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_008.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_009.png
         :alt: 2D IRIS merit plot, $\lambda$ = 1.00e-04
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_009.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<Matplotlib Axes object>]



.. GENERATED FROM PYTHON SOURCE LINES 138-142

Automatic search
----------------
%%
Now try an automatic search of the regularization parameter around the best value found manually:

.. GENERATED FROM PYTHON SOURCE LINES 142-146

.. code-block:: Python


    iris3 = scp.IRIS(log_level="INFO", reg_par=[-6, -2])
    iris3.fit(X_, K)
    iris3.plotlcurve(title="L curve, automated search")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_010.png
   :alt: L curve, automated search
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_010.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     Build S matrix (sharpness)
     ... done
     Solving for 312 channel(s) and 19 observations, search optimum regularization parameter in the range: [10**-6, 10**-2]
     Initial Log(lambda) values = [      -6   -4.472   -3.528       -2]
     log10(lambda)=-6.000 -->  residuals = 1.171e-01    regularization constraint  = 1.796e+02
     log10(lambda)=-4.472 -->  residuals = 1.203e-01    regularization constraint  = 2.751e+01
     log10(lambda)=-3.528 -->  residuals = 1.286e-01    regularization constraint  = 5.986e+00
     log10(lambda)=-2.000 -->  residuals = 1.773e-01    regularization constraint  = 5.488e-01
     Curvatures of the inner points: C1 = 0.040 ; C2 = 0.105
     New range of Log(lambda) values: [      -6   -5.056   -4.472   -3.528]
     log10(lambda)=-5.056 -->  residuals = 1.186e-01    regularization constraint  = 6.040e+01
     new curvature: C2 = 0.051
     New range (Log lambda):[  -5.056   -4.472   -4.111   -3.528]
     log10(lambda)=-4.111 -->  residuals = 1.223e-01    regularization constraint  = 1.687e+01
     Curvatures of the inner points: C1 = 0.054 ; C2 = 0.047
     New range of Log(lambda) values: [  -5.056   -4.695   -4.472   -4.111]
     log10(lambda)=-4.695 -->  residuals = 1.197e-01    regularization constraint  = 3.702e+01
     new curvature: C2 = 0.091
     New range (Log lambda):[  -4.695   -4.472   -4.334   -4.111]
     log10(lambda)=-4.334 -->  residuals = 1.207e-01    regularization constraint  = 2.273e+01
     Curvatures of the inner points: C1 = -0.020 ; C2 = 0.272
     New range of Log(lambda) values: [  -4.695   -4.557   -4.472   -4.334]
     log10(lambda)=-4.557 -->  residuals = 1.200e-01    regularization constraint  = 3.087e+01
     new curvature: C2 = -0.042
     New range of Log(lambda) values: [  -4.695    -4.61   -4.557   -4.472]
     log10(lambda)=-4.610 -->  residuals = 1.198e-01    regularization constraint  = 3.330e+01
     new curvature: C2 = -0.275
     New range of Log(lambda) values: [  -4.695   -4.642    -4.61   -4.557]
     log10(lambda)=-4.642 -->  residuals = 1.197e-01    regularization constraint  = 3.480e+01
     new curvature: C2 = 0.234
     New range (Log lambda):[  -4.642    -4.61    -4.59   -4.557]
     log10(lambda)=-4.590 -->  residuals = 1.199e-01    regularization constraint  = 3.241e+01
     Curvatures of the inner points: C1 = 0.092 ; C2 = 0.440
     New range of Log(lambda) values: [  -4.642   -4.622    -4.61    -4.59]
     log10(lambda)=-4.622 -->  residuals = 1.197e-01    regularization constraint  = 3.386e+01
     new curvature: C2 = 0.083
     New range (Log lambda): [  -4.642    -4.63   -4.622    -4.61]
     log10(lambda)=-4.630 -->  residuals = 1.197e-01    regularization constraint  = 3.422e+01
      optimum found: index = 5 ; Log(lambda) = -4.622 ; lambda = 2.38602e-05 ; curvature = 0.092
     Done.

    <Axes: title={'center': 'L curve, automated search'}, xlabel='Residuals', ylabel='Curvature'>



.. GENERATED FROM PYTHON SOURCE LINES 147-149

The data corresponding to the largest curvature of the L-curve
are at index 5 of the output data.

.. GENERATED FROM PYTHON SOURCE LINES 149-154

.. code-block:: Python



    iris3.plotdistribution(5)
    iris3.plotmerit(5)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_011.png
         :alt: 2D IRIS distribution, $\lambda$ = 2.39e-05
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_011.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_012.png
         :alt: 2D IRIS merit plot, $\lambda$ = 2.39e-05
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_iris_012.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    [<Matplotlib Axes object>]



.. GENERATED FROM PYTHON SOURCE LINES 156-158

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 158-160

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.794 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_iris.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_iris.ipynb <plot_iris.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_iris.py <plot_iris.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_iris.zip <plot_iris.zip>`
