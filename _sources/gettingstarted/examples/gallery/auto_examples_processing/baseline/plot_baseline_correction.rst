
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_processing/baseline/plot_baseline_correction.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_processing_baseline_plot_baseline_correction.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_processing_baseline_plot_baseline_correction.py:


NDDataset baseline correction
==============================

In this example, we perform a baseline correction of a 2D NDDataset
interactively, using the ``multivariate`` method and a ``pchip``/``polynomial`` interpolation.

For comparison, we also use the `asls`and `snip` models.

.. GENERATED FROM PYTHON SOURCE LINES 19-21

As usual we start by importing the useful library, and at least the
spectrochempy library.

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: Python

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Load data

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: Python

    datadir = scp.preferences.datadir
    nd = scp.read_omnic(datadir / "irdata" / "nh4y-activation.spg")








.. GENERATED FROM PYTHON SOURCE LINES 29-30

Do some slicing to keep only the interesting region

.. GENERATED FROM PYTHON SOURCE LINES 30-34

.. code-block:: Python

    ndp = nd[:, 1291.0:5999.0]
    # Important:  notice that we use floating point number
    # integer would mean points, not wavenumbers!








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Plot the dataset

.. GENERATED FROM PYTHON SOURCE LINES 36-37

.. code-block:: Python

    ndp.plot()



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_001.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_001.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 38-39

Remove a basic linear baseline using `basc`:

.. GENERATED FROM PYTHON SOURCE LINES 39-41

.. code-block:: Python

    ndp = ndp.basc()








.. GENERATED FROM PYTHON SOURCE LINES 42-43

Make it positive

.. GENERATED FROM PYTHON SOURCE LINES 43-46

.. code-block:: Python

    offset = ndp.min()
    ndp -= offset
    ndp.plot()



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_002.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_002.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 47-52

Define the Baseline object for a multivariate baseline correction model.
The `n_components` parameter is the number of components to use for the
multivariate baseline correction. The `model` parameter is the baseline
correction model to use, here a `pchip` interpolation (piecewise cubic
Hermite interpolation).

.. GENERATED FROM PYTHON SOURCE LINES 52-60

.. code-block:: Python

    blc = scp.Baseline(
        log_level="WARNING",
        multivariate=True,  # use a multivariate baseline correction approach
        model="polynomial",  # use a polynomial model
        order="pchip",  # with a pchip interpolation method
        n_components=5,
    )








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Now we select the regions ( `ranges` ) to use for the baseline correction.

.. GENERATED FROM PYTHON SOURCE LINES 62-72

.. code-block:: Python

    blc.ranges = [
        [1556.30, 1568.26],
        [1795.00, 1956.75],
        [3766.03, 3915.81],
        [4574.26, 4616.04],
        [4980.10, 4998.01],
        [5437.52, 5994.70],
    ]









.. GENERATED FROM PYTHON SOURCE LINES 73-74

We can now fit the baseline correction model to the data:

.. GENERATED FROM PYTHON SOURCE LINES 74-75

.. code-block:: Python

    blc.fit(ndp)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <spectrochempy.processing.baselineprocessing.baselineprocessing.Baseline object at 0x7fb4e1c50550>



.. GENERATED FROM PYTHON SOURCE LINES 76-80

The baseline is now stored in the `baseline` attribute of the processor:
(note that the baseline is a NDDataset too).
The corrected dataset (the dataset after the baseline subtraction) is
stored in the `corrected` attribute of the processor:

.. GENERATED FROM PYTHON SOURCE LINES 80-83

.. code-block:: Python

    baseline = blc.baseline
    corrected = blc.corrected








.. GENERATED FROM PYTHON SOURCE LINES 84-85

Plot the result of the correction

.. GENERATED FROM PYTHON SOURCE LINES 85-86

.. code-block:: Python

    corrected.plot()



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_003.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_003.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 87-88

We can have a more detailed representation using plot

.. GENERATED FROM PYTHON SOURCE LINES 88-91

.. code-block:: Python

    ax = blc.plot(nb_traces=2, offset=50)
    blc.show_regions(ax)




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_004.png
   :alt: Baseline plot
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 92-95

We can also plot the baseline and the corrected dataset together:
for some individual spectra to, for example, check the quality of the
correction:

.. GENERATED FROM PYTHON SOURCE LINES 95-98

.. code-block:: Python

    corrected[0].plot()
    baseline[0].plot(clear=False, color="red", ls="-")
    ndp[0].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_005.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_005.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 99-102

.. code-block:: Python

    corrected[10].plot()
    baseline[10].plot(clear=False, color="red", ls="-")
    ndp[10].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_006.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_006.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 103-112

The baseline correction looks ok in some part of the spectra
but not in others where the variation seems a little to rigid.
This is may be due to the fact that the `pchip` interpolation
is perhaps not the best choice for this dataset. We can try to use a
n-th degree `polynomial` model instead:


We don't need to redefine a new Baseline object, we can just change
the model and the order of the polynomial:

.. GENERATED FROM PYTHON SOURCE LINES 112-115

.. code-block:: Python

    blc.model = "polynomial"
    blc.order = 5  # use a 5th degree polynomial








.. GENERATED FROM PYTHON SOURCE LINES 116-117

and fit again the baseline correction model to the data:

.. GENERATED FROM PYTHON SOURCE LINES 117-125

.. code-block:: Python

    blc.fit(ndp)

    baseline = blc.baseline
    corrected = blc.corrected

    corrected[0].plot()
    baseline[0].plot(clear=False, color="red", ls="-")
    ndp[0].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_007.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_007.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 126-129

.. code-block:: Python

    corrected[10].plot()
    baseline[10].plot(clear=False, color="red", ls="-")
    ndp[10].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_008.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_008.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 130-131

.. code-block:: Python

    corrected.plot()



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_009.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_009.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 132-133

This looks better and smoother. But not perfect.

.. GENERATED FROM PYTHON SOURCE LINES 135-144

We can also try to use a `asls` (Asymmetric Least Squares) model
instead. This model is based on the work of Eilers and Boelens (2005)
and performs a baseline correction by iteratively fitting asymmetrically
weighted least squares regression curves to the data.
The `asls` model has two parameters: `mu` and `assymetry`.
The `mu` parameter is a regularisation parameters which control
the smoothness of the baseline. The larger `mu` is, the smoother
the baseline will be. The `assymetry` parameter is a parameter
which control the assymetry if the AsLS algorithm.

.. GENERATED FROM PYTHON SOURCE LINES 144-149

.. code-block:: Python

    blc.multivariate = False  # use a sequential approach
    blc.model = "asls"
    blc.mu = 10**9
    blc.asymmetry = 0.002
    blc.fit(ndp)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /home/runner/work/spectrochempy/spectrochempy/src/spectrochempy/processing/baselineprocessing/baselineprocessing.py:528: SparseEfficiencyWarning: spsolve requires A be CSC or CSR matrix format
      z = spsolve(C, w * y)

    <spectrochempy.processing.baselineprocessing.baselineprocessing.Baseline object at 0x7fb4e1c50550>



.. GENERATED FROM PYTHON SOURCE LINES 150-153

.. code-block:: Python

    baseline = blc.baseline
    corrected = blc.corrected








.. GENERATED FROM PYTHON SOURCE LINES 154-157

.. code-block:: Python

    corrected[0].plot()
    baseline[0].plot(clear=False, color="red", ls="-")
    ndp[0].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_010.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_010.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 158-161

.. code-block:: Python

    corrected[-1].plot()
    baseline[-1].plot(clear=False, color="red", ls="-")
    ndp[-1].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_011.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_011.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 162-163

.. code-block:: Python

    corrected.plot()



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_012.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_012.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 164-165

Finally, we will use the snip model

.. GENERATED FROM PYTHON SOURCE LINES 165-169

.. code-block:: Python

    blc.multivariate = False  # use a sequential approach
    blc.model = "snip"
    blc.snip_width = 200
    blc.fit(ndp)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <spectrochempy.processing.baselineprocessing.baselineprocessing.Baseline object at 0x7fb4e1c50550>



.. GENERATED FROM PYTHON SOURCE LINES 170-173

.. code-block:: Python

    baseline = blc.baseline
    corrected = blc.corrected








.. GENERATED FROM PYTHON SOURCE LINES 174-177

.. code-block:: Python

    corrected[0].plot()
    baseline[0].plot(clear=False, color="red", ls="-")
    ndp[0].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_013.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_013.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 178-181

.. code-block:: Python

    corrected[-1].plot()
    baseline[-1].plot(clear=False, color="red", ls="-")
    ndp[-1].plot(clear=False, color="green", ls="--")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_014.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_014.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 182-184

.. code-block:: Python

    corrected.plot()




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_015.png
   :alt: plot baseline correction
   :srcset: /gettingstarted/examples/gallery/auto_examples_processing/baseline/images/sphx_glr_plot_baseline_correction_015.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 185-187

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 187-189

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 6.532 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_processing_baseline_plot_baseline_correction.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_baseline_correction.ipynb <plot_baseline_correction.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_baseline_correction.py <plot_baseline_correction.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_baseline_correction.zip <plot_baseline_correction.zip>`
