
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_b_crossdecomposition_plot_pls.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_b_crossdecomposition_plot_pls.py:


PLS regression example
----------------------
In this example, we perform a PLS regression to predict the moisture of corn samples
from their NIR spectra.

.. GENERATED FROM PYTHON SOURCE LINES 16-17

Import the spectrochempy API package

.. GENERATED FROM PYTHON SOURCE LINES 17-19

.. code-block:: default

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 20-21

The data set is available to download from the Eigenvector Archive:

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: default

    ds_list = scp.read("http://www.eigenvector.com/data/Corn/corn.mat")








.. GENERATED FROM PYTHON SOURCE LINES 24-31

This data set, originally taken at Cargil,  consists of 80 samples of corn measured on
3 different NIR spectrometers together with the moisture, oil, protein and starch
values for each of the samples is also included.
The 5th dataset named `'m5spec'`, contains the NIR spectra of 80 corn samples recorded
on the same instrument. Let's assign this NDDataset specta to `X`, add few
informations and plot it:
%%

.. GENERATED FROM PYTHON SOURCE LINES 31-37

.. code-block:: default

    X = ds_list[4]
    X.title = "reflectance"
    X.x.title = "Wavelength"
    X.x.units = "nm"
    _ = X.plot(cmap=None)




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/images/sphx_glr_plot_pls_001.png
   :alt: plot pls
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/images/sphx_glr_plot_pls_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 38-39

The values of the properties we want to predict are in the 4th dattaset named `'propval'` dataset:

.. GENERATED FROM PYTHON SOURCE LINES 39-42

.. code-block:: default

    Y = ds_list[3]
    _ = Y.T.plot(cmap=None, legend=Y.x.labels)




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/images/sphx_glr_plot_pls_002.png
   :alt: plot pls
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/images/sphx_glr_plot_pls_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 43-44

We are interested to predict the moisture content:

.. GENERATED FROM PYTHON SOURCE LINES 44-46

.. code-block:: default

    y = Y[:, "Moisture"]








.. GENERATED FROM PYTHON SOURCE LINES 47-49

First we select 57 first samples (2/3 of the total) to train/calibrate the model and the remaining ones
to test/validate the model:

.. GENERATED FROM PYTHON SOURCE LINES 49-54

.. code-block:: default

    X_train = X[:57]
    X_test = X[57:]
    y_train = y[:57]
    y_test = y[57:]








.. GENERATED FROM PYTHON SOURCE LINES 55-56

Then we create a PLSRegression object and fit the train datasets:

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default

    pls = scp.PLSRegression(n_components=5)
    _ = pls.fit(X_train, y_train)








.. GENERATED FROM PYTHON SOURCE LINES 60-62

Finally we generate a parity plot comparing the predicted and actual values, for
both train set and test set.

.. GENERATED FROM PYTHON SOURCE LINES 62-69

.. code-block:: default


    ax = pls.parityplot(label="calibration", s=150)
    _ = pls.parityplot(
        y_test, pls.predict(X_test), s=150, c="red", label="validation", clear=False
    )
    _ = ax.legend(loc="lower right")




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/images/sphx_glr_plot_pls_003.png
   :alt: plot pls
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/images/sphx_glr_plot_pls_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 71-73

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 73-75

.. code-block:: default


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.266 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_b_crossdecomposition_plot_pls.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_pls.py <plot_pls.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_pls.ipynb <plot_pls.ipynb>`
