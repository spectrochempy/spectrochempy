
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_e_project_plot_project.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_core_e_project_plot_project.py:


Project creation
=======================================

In this example, we create a Project from scratch

.. GENERATED FROM PYTHON SOURCE LINES 16-19

.. code-block:: default


    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 20-21

Let's assume we have three subproject to group in a single project

.. GENERATED FROM PYTHON SOURCE LINES 21-34

.. code-block:: default


    proj = scp.Project(
        # subprojects
        scp.Project(name="P350", label=r"$\mathrm{M_P}\,(623\,K)$"),
        scp.Project(name="A350", label=r"$\mathrm{M_A}\,(623\,K)$"),
        scp.Project(name="B350", label=r"$\mathrm{M_B}\,(623\,K)$"),
        # attributes
        name="project_1",
        label="main project",
    )

    assert proj.projects_names == ["P350", "A350", "B350"]








.. GENERATED FROM PYTHON SOURCE LINES 35-36

Add for example two datasets to the `A350` subproject.

.. GENERATED FROM PYTHON SOURCE LINES 36-44

.. code-block:: default


    ir = scp.NDDataset([1.1, 2.2, 3.3], coords=[[1, 2, 3]])
    print(ir)
    tg = scp.NDDataset([1, 3, 4], coords=[[1, 2, 3]])
    print(tg)
    proj.A350["IR"] = ir
    proj.A350["TG"] = tg





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    NDDataset: [float64] unitless (size: 3)
    NDDataset: [float64] unitless (size: 3)




.. GENERATED FROM PYTHON SOURCE LINES 45-46

Members of the project or attributes are easily accessed:

.. GENERATED FROM PYTHON SOURCE LINES 46-52

.. code-block:: default


    print(proj.A350)
    print(proj)
    print(proj.A350.label)
    print(proj.A350.TG)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Project A350:
        ⤷ IR (dataset)
        ⤷ TG (dataset)
    Project project_1:
        ⤷ P350 (sub-project)    ⤷ A350 (sub-project)
           ⤷ IR (dataset)
           ⤷ TG (dataset)    ⤷ B350 (sub-project)
    $\mathrm{M_A}\,(623\,K)$
    NDDataset: [float64] unitless (size: 3)




.. GENERATED FROM PYTHON SOURCE LINES 53-54

Save this project

.. GENERATED FROM PYTHON SOURCE LINES 54-57

.. code-block:: default


    proj.save()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    PosixPath('/home/runner/work/spectrochempy/tempdirs/scp_deem6uhy/spectrochempy/examples/core/e_project/project_1.pscp')



.. GENERATED FROM PYTHON SOURCE LINES 58-59

RELOAD the project from disk as newproj

.. GENERATED FROM PYTHON SOURCE LINES 59-66

.. code-block:: default


    newproj = scp.Project.load("project_1")
    print(newproj)

    assert str(newproj) == str(proj)
    assert newproj.A350.label == proj.A350.label





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Project project_1:
        ⤷ P350 (sub-project)    ⤷ A350 (sub-project)
           ⤷ IR (dataset)
           ⤷ TG (dataset)    ⤷ B350 (sub-project)




.. GENERATED FROM PYTHON SOURCE LINES 67-68

Now we add a script to the original proj

.. GENERATED FROM PYTHON SOURCE LINES 68-77

.. code-block:: default


    script_source = """
    set_loglevel(INFO)
    info_('samples contained in the project are:%s'%proj.projects_names)
    """

    proj["print_info"] = scp.Script("print_info", script_source)
    print(proj)
    print("*******************************************")




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Project project_1:
        ⤷ P350 (sub-project)    ⤷ A350 (sub-project)
           ⤷ IR (dataset)
           ⤷ TG (dataset)    ⤷ B350 (sub-project)    ⤷ print_info (script)
    *******************************************




.. GENERATED FROM PYTHON SOURCE LINES 78-79

save but do not change the original data

.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: default


    proj.save(overwrite_data=False)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    PosixPath('project_1.pscp')



.. GENERATED FROM PYTHON SOURCE LINES 83-84

RELOAD it

.. GENERATED FROM PYTHON SOURCE LINES 84-88

.. code-block:: default


    newproj = scp.Project.load("project_1")
    print(newproj)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Project project_1:
        ⤷ P350 (sub-project)    ⤷ A350 (sub-project)
           ⤷ IR (dataset)
           ⤷ TG (dataset)    ⤷ B350 (sub-project)    ⤷ print_info (script)




.. GENERATED FROM PYTHON SOURCE LINES 89-90

Execute a script

.. GENERATED FROM PYTHON SOURCE LINES 90-93

.. code-block:: default


    scp.run_script(newproj.print_info)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     samples contained in the project are:['P350', 'A350', 'B350']




.. GENERATED FROM PYTHON SOURCE LINES 94-96

Another way to do the same thing is ith the following syntax (which may
seem simpler

.. GENERATED FROM PYTHON SOURCE LINES 96-99

.. code-block:: default


    newproj.print_info()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     samples contained in the project are:['P350', 'A350', 'B350']




.. GENERATED FROM PYTHON SOURCE LINES 100-101

Finally lets use a more useful script

.. GENERATED FROM PYTHON SOURCE LINES 101-109

.. code-block:: default

    script_source_2 = """
    proj.A350.TG.plot_scatter(title='my scatter plot')
    #show()
    """
    proj["tgscatter"] = scp.Script("tgscatter", script_source_2)

    proj.tgscatter()




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/e_project/images/sphx_glr_plot_project_001.png
   :alt: my scatter plot
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/e_project/images/sphx_glr_plot_project_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 110-112

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 112-114

.. code-block:: default


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.140 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_e_project_plot_project.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_project.py <plot_project.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_project.ipynb <plot_project.ipynb>`
