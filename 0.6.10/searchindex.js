Search.setIndex({"docnames": ["credits/citing", "credits/credits", "credits/license", "credits/seealso", "devguide/code_style", "devguide/codespec_adding_reader", "devguide/contributing", "devguide/contributing_codebase", "devguide/contributing_codespecifics", "devguide/contributing_docstring", "devguide/contributing_documentation", "devguide/docker", "devguide/examples", "devguide/index", "devguide/issues", "devguide/visualcode", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/index", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/plot_baseline_correction", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/index", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/e_project/index", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/index", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/raman/index", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times", "gettingstarted/examples/index", "gettingstarted/install/index", "gettingstarted/install/install_adds", "gettingstarted/install/install_colab", "gettingstarted/install/install_docker", "gettingstarted/install/install_mac", "gettingstarted/install/install_sources", "gettingstarted/install/install_win", "gettingstarted/overview", "gettingstarted/whyscpy", "index", "reference/bibliography", "reference/faq", "reference/generated/spectrochempy.ActionMassKinetics", "reference/generated/spectrochempy.Baseline", "reference/generated/spectrochempy.BaselineCorrector", "reference/generated/spectrochempy.Coord", "reference/generated/spectrochempy.CoordSet", "reference/generated/spectrochempy.EFA", "reference/generated/spectrochempy.FastICA", "reference/generated/spectrochempy.FileSelector", "reference/generated/spectrochempy.Filter", "reference/generated/spectrochempy.II", "reference/generated/spectrochempy.IR", "reference/generated/spectrochempy.IRIS", "reference/generated/spectrochempy.IrisKernel", "reference/generated/spectrochempy.LSTSQ", "reference/generated/spectrochempy.MCRALS", "reference/generated/spectrochempy.NDDataset", "reference/generated/spectrochempy.NDDataset.save", "reference/generated/spectrochempy.NDDataset.save_as", "reference/generated/spectrochempy.NMF", "reference/generated/spectrochempy.NNLS", "reference/generated/spectrochempy.Optimize", "reference/generated/spectrochempy.PCA", "reference/generated/spectrochempy.PFR", "reference/generated/spectrochempy.PLSRegression", "reference/generated/spectrochempy.Project", "reference/generated/spectrochempy.Quantity", "reference/generated/spectrochempy.RI", "reference/generated/spectrochempy.RR", "reference/generated/spectrochempy.SIMPLISMA", "reference/generated/spectrochempy.SVD", "reference/generated/spectrochempy.Script", "reference/generated/spectrochempy.Unit", "reference/generated/spectrochempy.abs", "reference/generated/spectrochempy.absolute", "reference/generated/spectrochempy.align", "reference/generated/spectrochempy.all", "reference/generated/spectrochempy.amax", "reference/generated/spectrochempy.amin", "reference/generated/spectrochempy.any", "reference/generated/spectrochempy.arange", "reference/generated/spectrochempy.argmax", "reference/generated/spectrochempy.argmin", "reference/generated/spectrochempy.around", "reference/generated/spectrochempy.asls", "reference/generated/spectrochempy.asymmetricvoigtmodel", "reference/generated/spectrochempy.autosub", "reference/generated/spectrochempy.average", "reference/generated/spectrochempy.bartlett", "reference/generated/spectrochempy.basc", "reference/generated/spectrochempy.blackmanharris", "reference/generated/spectrochempy.clip", "reference/generated/spectrochempy.component", "reference/generated/spectrochempy.concatenate", "reference/generated/spectrochempy.conj", "reference/generated/spectrochempy.conjugate", "reference/generated/spectrochempy.coordmax", "reference/generated/spectrochempy.coordmin", "reference/generated/spectrochempy.copy", "reference/generated/spectrochempy.cs", "reference/generated/spectrochempy.cumsum", "reference/generated/spectrochempy.dc", "reference/generated/spectrochempy.debug_", "reference/generated/spectrochempy.denoise", "reference/generated/spectrochempy.despike", "reference/generated/spectrochempy.detrend", "reference/generated/spectrochempy.diag", "reference/generated/spectrochempy.diagonal", "reference/generated/spectrochempy.dot", "reference/generated/spectrochempy.download_nist_ir", "reference/generated/spectrochempy.em", "reference/generated/spectrochempy.empty", "reference/generated/spectrochempy.empty_like", "reference/generated/spectrochempy.error_", "reference/generated/spectrochempy.eye", "reference/generated/spectrochempy.fft", "reference/generated/spectrochempy.find_peaks", "reference/generated/spectrochempy.fromfunction", "reference/generated/spectrochempy.fromiter", "reference/generated/spectrochempy.fsh", "reference/generated/spectrochempy.fsh2", "reference/generated/spectrochempy.full", "reference/generated/spectrochempy.full_like", "reference/generated/spectrochempy.gaussianmodel", "reference/generated/spectrochempy.general_hamming", "reference/generated/spectrochempy.geomspace", "reference/generated/spectrochempy.get_baseline", "reference/generated/spectrochempy.get_loglevel", "reference/generated/spectrochempy.gm", "reference/generated/spectrochempy.hamming", "reference/generated/spectrochempy.hann", "reference/generated/spectrochempy.ht", "reference/generated/spectrochempy.identity", "reference/generated/spectrochempy.ifft", "reference/generated/spectrochempy.imag", "reference/generated/spectrochempy.info_", "reference/generated/spectrochempy.interpolate", "reference/generated/spectrochempy.is_units_compatible", "reference/generated/spectrochempy.ito", "reference/generated/spectrochempy.ito_base_units", "reference/generated/spectrochempy.ito_reduced_units", "reference/generated/spectrochempy.linspace", "reference/generated/spectrochempy.load", "reference/generated/spectrochempy.load_iris", "reference/generated/spectrochempy.logspace", "reference/generated/spectrochempy.lorentzianmodel", "reference/generated/spectrochempy.ls", "reference/generated/spectrochempy.max", "reference/generated/spectrochempy.mc", "reference/generated/spectrochempy.mean", "reference/generated/spectrochempy.min", "reference/generated/spectrochempy.multiplot", "reference/generated/spectrochempy.multiplot_image", "reference/generated/spectrochempy.multiplot_lines", "reference/generated/spectrochempy.multiplot_map", "reference/generated/spectrochempy.multiplot_scatter", "reference/generated/spectrochempy.multiplot_stack", "reference/generated/spectrochempy.multiplot_with_transposed", "reference/generated/spectrochempy.ones", "reference/generated/spectrochempy.ones_like", "reference/generated/spectrochempy.pathclean", "reference/generated/spectrochempy.pipe", "reference/generated/spectrochempy.pk", "reference/generated/spectrochempy.pk_exp", "reference/generated/spectrochempy.plot", "reference/generated/spectrochempy.plot_1D", "reference/generated/spectrochempy.plot_2D", "reference/generated/spectrochempy.plot_3D", "reference/generated/spectrochempy.plot_bar", "reference/generated/spectrochempy.plot_image", "reference/generated/spectrochempy.plot_map", "reference/generated/spectrochempy.plot_multiple", "reference/generated/spectrochempy.plot_pen", "reference/generated/spectrochempy.plot_scatter", "reference/generated/spectrochempy.plot_scatter_pen", "reference/generated/spectrochempy.plot_stack", "reference/generated/spectrochempy.plot_surface", "reference/generated/spectrochempy.plot_waterfall", "reference/generated/spectrochempy.plot_with_transposed", "reference/generated/spectrochempy.polynomialbaseline", "reference/generated/spectrochempy.ps", "reference/generated/spectrochempy.ptp", "reference/generated/spectrochempy.qsin", "reference/generated/spectrochempy.random", "reference/generated/spectrochempy.read", "reference/generated/spectrochempy.read_carroucell", "reference/generated/spectrochempy.read_csv", "reference/generated/spectrochempy.read_ddr", "reference/generated/spectrochempy.read_dir", "reference/generated/spectrochempy.read_hdr", "reference/generated/spectrochempy.read_jcamp", "reference/generated/spectrochempy.read_labspec", "reference/generated/spectrochempy.read_mat", "reference/generated/spectrochempy.read_matlab", "reference/generated/spectrochempy.read_omnic", "reference/generated/spectrochempy.read_opus", "reference/generated/spectrochempy.read_quadera", "reference/generated/spectrochempy.read_sdr", "reference/generated/spectrochempy.read_soc", "reference/generated/spectrochempy.read_spa", "reference/generated/spectrochempy.read_spc", "reference/generated/spectrochempy.read_spg", "reference/generated/spectrochempy.read_srs", "reference/generated/spectrochempy.read_topspin", "reference/generated/spectrochempy.read_wdf", "reference/generated/spectrochempy.read_wire", "reference/generated/spectrochempy.read_zip", "reference/generated/spectrochempy.real", "reference/generated/spectrochempy.remove_masks", "reference/generated/spectrochempy.roll", "reference/generated/spectrochempy.round", "reference/generated/spectrochempy.rs", "reference/generated/spectrochempy.run_all_scripts", "reference/generated/spectrochempy.run_script", "reference/generated/spectrochempy.savgol", "reference/generated/spectrochempy.set_complex", "reference/generated/spectrochempy.set_hypercomplex", "reference/generated/spectrochempy.set_loglevel", "reference/generated/spectrochempy.set_nmr_context", "reference/generated/spectrochempy.set_quaternion", "reference/generated/spectrochempy.show", "reference/generated/spectrochempy.show_versions", "reference/generated/spectrochempy.sigmoidmodel", "reference/generated/spectrochempy.simpson", "reference/generated/spectrochempy.sine", "reference/generated/spectrochempy.sinm", "reference/generated/spectrochempy.smooth", "reference/generated/spectrochempy.snip", "reference/generated/spectrochempy.sort", "reference/generated/spectrochempy.sp", "reference/generated/spectrochempy.squeeze", "reference/generated/spectrochempy.stack", "reference/generated/spectrochempy.std", "reference/generated/spectrochempy.sum", "reference/generated/spectrochempy.swapdims", "reference/generated/spectrochempy.take", "reference/generated/spectrochempy.to", "reference/generated/spectrochempy.to_array", "reference/generated/spectrochempy.to_base_units", "reference/generated/spectrochempy.to_reduced_units", "reference/generated/spectrochempy.to_xarray", "reference/generated/spectrochempy.transpose", "reference/generated/spectrochempy.trapezoid", "reference/generated/spectrochempy.triang", "reference/generated/spectrochempy.var", "reference/generated/spectrochempy.voigtmodel", "reference/generated/spectrochempy.warning_", "reference/generated/spectrochempy.whittaker", "reference/generated/spectrochempy.write", "reference/generated/spectrochempy.write_csv", "reference/generated/spectrochempy.write_excel", "reference/generated/spectrochempy.write_jcamp", "reference/generated/spectrochempy.write_mat", "reference/generated/spectrochempy.write_matlab", "reference/generated/spectrochempy.write_xls", "reference/generated/spectrochempy.zeros", "reference/generated/spectrochempy.zeros_like", "reference/generated/spectrochempy.zf", "reference/generated/spectrochempy.zf_auto", "reference/generated/spectrochempy.zf_double", "reference/generated/spectrochempy.zf_size", "reference/glossary", "reference/index", "reference/papers", "userguide/analysis/analysis", "userguide/analysis/baseline", "userguide/analysis/fitting", "userguide/analysis/mcr_als", "userguide/analysis/pca", "userguide/analysis/peak_finding", "userguide/analysis/peak_integration", "userguide/analysis/pls", "userguide/api/api", "userguide/importexport/import", "userguide/importexport/importIR", "userguide/importexport/importexport", "userguide/introduction/interface", "userguide/introduction/introduction", "userguide/introduction/mdcheatsheet", "userguide/objects/dataset/dataset", "userguide/objects/index", "userguide/objects/project/project", "userguide/plotting/plotting", "userguide/processing/alignment", "userguide/processing/apodization", "userguide/processing/denoising", "userguide/processing/fourier", "userguide/processing/interferogram", "userguide/processing/math_operations", "userguide/processing/processing", "userguide/processing/slicing", "userguide/processing/smoothing", "userguide/processing/td_baseline", "userguide/processing/transformations", "whatsnew/changelog", "whatsnew/index", "whatsnew/latest", "whatsnew/v0.1.0", "whatsnew/v0.2.0", "whatsnew/v0.2.10", "whatsnew/v0.2.11", "whatsnew/v0.2.12", "whatsnew/v0.2.13", "whatsnew/v0.2.14", "whatsnew/v0.2.15", "whatsnew/v0.2.16", "whatsnew/v0.2.17", "whatsnew/v0.2.18", "whatsnew/v0.2.21", "whatsnew/v0.2.22", "whatsnew/v0.2.23", "whatsnew/v0.2.4", "whatsnew/v0.2.5", "whatsnew/v0.2.6", "whatsnew/v0.2.7", "whatsnew/v0.2.8", "whatsnew/v0.2.9", "whatsnew/v0.3.0", "whatsnew/v0.3.1", "whatsnew/v0.3.2", "whatsnew/v0.3.3", "whatsnew/v0.4.1", "whatsnew/v0.4.10", "whatsnew/v0.4.2", "whatsnew/v0.4.3", "whatsnew/v0.4.4", "whatsnew/v0.4.5", "whatsnew/v0.4.6", "whatsnew/v0.4.7", "whatsnew/v0.4.9", "whatsnew/v0.5.0", "whatsnew/v0.5.1", "whatsnew/v0.5.2", "whatsnew/v0.5.3", "whatsnew/v0.5.4", "whatsnew/v0.5.5", "whatsnew/v0.6.1", "whatsnew/v0.6.10", "whatsnew/v0.6.2", "whatsnew/v0.6.3", "whatsnew/v0.6.4", "whatsnew/v0.6.5", "whatsnew/v0.6.6", "whatsnew/v0.6.7", "whatsnew/v0.6.8", "whatsnew/v0.6.9"], "filenames": ["credits/citing.rst", "credits/credits.rst", "credits/license.rst", "credits/seealso.rst", "devguide/code_style.rst", "devguide/codespec_adding_reader.rst", "devguide/contributing.rst", "devguide/contributing_codebase.rst", "devguide/contributing_codespecifics.rst", "devguide/contributing_docstring.rst", "devguide/contributing_documentation.rst", "devguide/docker.rst", "devguide/examples.rst", "devguide/index.rst", "devguide/issues.rst", "devguide/visualcode.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/plot_baseline_correction.rst", "gettingstarted/examples/gallery/auto_examples_analysis/d_baseline/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/index.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/index.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times.rst", "gettingstarted/examples/index.rst", "gettingstarted/install/index.rst", "gettingstarted/install/install_adds.rst", "gettingstarted/install/install_colab.rst", "gettingstarted/install/install_docker.rst", "gettingstarted/install/install_mac.rst", "gettingstarted/install/install_sources.rst", "gettingstarted/install/install_win.rst", "gettingstarted/overview.ipynb", "gettingstarted/whyscpy.rst", "index.rst", "reference/bibliography.rst", "reference/faq.rst", "reference/generated/spectrochempy.ActionMassKinetics.rst", "reference/generated/spectrochempy.Baseline.rst", "reference/generated/spectrochempy.BaselineCorrector.rst", "reference/generated/spectrochempy.Coord.rst", "reference/generated/spectrochempy.CoordSet.rst", "reference/generated/spectrochempy.EFA.rst", "reference/generated/spectrochempy.FastICA.rst", "reference/generated/spectrochempy.FileSelector.rst", "reference/generated/spectrochempy.Filter.rst", "reference/generated/spectrochempy.II.rst", "reference/generated/spectrochempy.IR.rst", "reference/generated/spectrochempy.IRIS.rst", "reference/generated/spectrochempy.IrisKernel.rst", "reference/generated/spectrochempy.LSTSQ.rst", "reference/generated/spectrochempy.MCRALS.rst", "reference/generated/spectrochempy.NDDataset.rst", "reference/generated/spectrochempy.NDDataset.save.rst", "reference/generated/spectrochempy.NDDataset.save_as.rst", "reference/generated/spectrochempy.NMF.rst", "reference/generated/spectrochempy.NNLS.rst", "reference/generated/spectrochempy.Optimize.rst", "reference/generated/spectrochempy.PCA.rst", "reference/generated/spectrochempy.PFR.rst", "reference/generated/spectrochempy.PLSRegression.rst", "reference/generated/spectrochempy.Project.rst", "reference/generated/spectrochempy.Quantity.rst", "reference/generated/spectrochempy.RI.rst", "reference/generated/spectrochempy.RR.rst", "reference/generated/spectrochempy.SIMPLISMA.rst", "reference/generated/spectrochempy.SVD.rst", "reference/generated/spectrochempy.Script.rst", "reference/generated/spectrochempy.Unit.rst", "reference/generated/spectrochempy.abs.rst", "reference/generated/spectrochempy.absolute.rst", "reference/generated/spectrochempy.align.rst", "reference/generated/spectrochempy.all.rst", "reference/generated/spectrochempy.amax.rst", "reference/generated/spectrochempy.amin.rst", "reference/generated/spectrochempy.any.rst", "reference/generated/spectrochempy.arange.rst", "reference/generated/spectrochempy.argmax.rst", "reference/generated/spectrochempy.argmin.rst", "reference/generated/spectrochempy.around.rst", "reference/generated/spectrochempy.asls.rst", "reference/generated/spectrochempy.asymmetricvoigtmodel.rst", "reference/generated/spectrochempy.autosub.rst", "reference/generated/spectrochempy.average.rst", "reference/generated/spectrochempy.bartlett.rst", "reference/generated/spectrochempy.basc.rst", "reference/generated/spectrochempy.blackmanharris.rst", "reference/generated/spectrochempy.clip.rst", "reference/generated/spectrochempy.component.rst", "reference/generated/spectrochempy.concatenate.rst", "reference/generated/spectrochempy.conj.rst", "reference/generated/spectrochempy.conjugate.rst", "reference/generated/spectrochempy.coordmax.rst", "reference/generated/spectrochempy.coordmin.rst", "reference/generated/spectrochempy.copy.rst", "reference/generated/spectrochempy.cs.rst", "reference/generated/spectrochempy.cumsum.rst", "reference/generated/spectrochempy.dc.rst", "reference/generated/spectrochempy.debug_.rst", "reference/generated/spectrochempy.denoise.rst", "reference/generated/spectrochempy.despike.rst", "reference/generated/spectrochempy.detrend.rst", "reference/generated/spectrochempy.diag.rst", "reference/generated/spectrochempy.diagonal.rst", "reference/generated/spectrochempy.dot.rst", "reference/generated/spectrochempy.download_nist_ir.rst", "reference/generated/spectrochempy.em.rst", "reference/generated/spectrochempy.empty.rst", "reference/generated/spectrochempy.empty_like.rst", "reference/generated/spectrochempy.error_.rst", "reference/generated/spectrochempy.eye.rst", "reference/generated/spectrochempy.fft.rst", "reference/generated/spectrochempy.find_peaks.rst", "reference/generated/spectrochempy.fromfunction.rst", "reference/generated/spectrochempy.fromiter.rst", "reference/generated/spectrochempy.fsh.rst", "reference/generated/spectrochempy.fsh2.rst", "reference/generated/spectrochempy.full.rst", "reference/generated/spectrochempy.full_like.rst", "reference/generated/spectrochempy.gaussianmodel.rst", "reference/generated/spectrochempy.general_hamming.rst", "reference/generated/spectrochempy.geomspace.rst", "reference/generated/spectrochempy.get_baseline.rst", "reference/generated/spectrochempy.get_loglevel.rst", "reference/generated/spectrochempy.gm.rst", "reference/generated/spectrochempy.hamming.rst", "reference/generated/spectrochempy.hann.rst", "reference/generated/spectrochempy.ht.rst", "reference/generated/spectrochempy.identity.rst", "reference/generated/spectrochempy.ifft.rst", "reference/generated/spectrochempy.imag.rst", "reference/generated/spectrochempy.info_.rst", "reference/generated/spectrochempy.interpolate.rst", "reference/generated/spectrochempy.is_units_compatible.rst", "reference/generated/spectrochempy.ito.rst", "reference/generated/spectrochempy.ito_base_units.rst", "reference/generated/spectrochempy.ito_reduced_units.rst", "reference/generated/spectrochempy.linspace.rst", "reference/generated/spectrochempy.load.rst", "reference/generated/spectrochempy.load_iris.rst", "reference/generated/spectrochempy.logspace.rst", "reference/generated/spectrochempy.lorentzianmodel.rst", "reference/generated/spectrochempy.ls.rst", "reference/generated/spectrochempy.max.rst", "reference/generated/spectrochempy.mc.rst", "reference/generated/spectrochempy.mean.rst", "reference/generated/spectrochempy.min.rst", "reference/generated/spectrochempy.multiplot.rst", "reference/generated/spectrochempy.multiplot_image.rst", "reference/generated/spectrochempy.multiplot_lines.rst", "reference/generated/spectrochempy.multiplot_map.rst", "reference/generated/spectrochempy.multiplot_scatter.rst", "reference/generated/spectrochempy.multiplot_stack.rst", "reference/generated/spectrochempy.multiplot_with_transposed.rst", "reference/generated/spectrochempy.ones.rst", "reference/generated/spectrochempy.ones_like.rst", "reference/generated/spectrochempy.pathclean.rst", "reference/generated/spectrochempy.pipe.rst", "reference/generated/spectrochempy.pk.rst", "reference/generated/spectrochempy.pk_exp.rst", "reference/generated/spectrochempy.plot.rst", "reference/generated/spectrochempy.plot_1D.rst", "reference/generated/spectrochempy.plot_2D.rst", "reference/generated/spectrochempy.plot_3D.rst", "reference/generated/spectrochempy.plot_bar.rst", "reference/generated/spectrochempy.plot_image.rst", "reference/generated/spectrochempy.plot_map.rst", "reference/generated/spectrochempy.plot_multiple.rst", "reference/generated/spectrochempy.plot_pen.rst", "reference/generated/spectrochempy.plot_scatter.rst", "reference/generated/spectrochempy.plot_scatter_pen.rst", "reference/generated/spectrochempy.plot_stack.rst", "reference/generated/spectrochempy.plot_surface.rst", "reference/generated/spectrochempy.plot_waterfall.rst", "reference/generated/spectrochempy.plot_with_transposed.rst", "reference/generated/spectrochempy.polynomialbaseline.rst", "reference/generated/spectrochempy.ps.rst", "reference/generated/spectrochempy.ptp.rst", "reference/generated/spectrochempy.qsin.rst", "reference/generated/spectrochempy.random.rst", "reference/generated/spectrochempy.read.rst", "reference/generated/spectrochempy.read_carroucell.rst", "reference/generated/spectrochempy.read_csv.rst", "reference/generated/spectrochempy.read_ddr.rst", "reference/generated/spectrochempy.read_dir.rst", "reference/generated/spectrochempy.read_hdr.rst", "reference/generated/spectrochempy.read_jcamp.rst", "reference/generated/spectrochempy.read_labspec.rst", "reference/generated/spectrochempy.read_mat.rst", "reference/generated/spectrochempy.read_matlab.rst", "reference/generated/spectrochempy.read_omnic.rst", "reference/generated/spectrochempy.read_opus.rst", "reference/generated/spectrochempy.read_quadera.rst", "reference/generated/spectrochempy.read_sdr.rst", "reference/generated/spectrochempy.read_soc.rst", "reference/generated/spectrochempy.read_spa.rst", "reference/generated/spectrochempy.read_spc.rst", "reference/generated/spectrochempy.read_spg.rst", "reference/generated/spectrochempy.read_srs.rst", "reference/generated/spectrochempy.read_topspin.rst", "reference/generated/spectrochempy.read_wdf.rst", "reference/generated/spectrochempy.read_wire.rst", "reference/generated/spectrochempy.read_zip.rst", "reference/generated/spectrochempy.real.rst", "reference/generated/spectrochempy.remove_masks.rst", "reference/generated/spectrochempy.roll.rst", "reference/generated/spectrochempy.round.rst", "reference/generated/spectrochempy.rs.rst", "reference/generated/spectrochempy.run_all_scripts.rst", "reference/generated/spectrochempy.run_script.rst", "reference/generated/spectrochempy.savgol.rst", "reference/generated/spectrochempy.set_complex.rst", "reference/generated/spectrochempy.set_hypercomplex.rst", "reference/generated/spectrochempy.set_loglevel.rst", "reference/generated/spectrochempy.set_nmr_context.rst", "reference/generated/spectrochempy.set_quaternion.rst", "reference/generated/spectrochempy.show.rst", "reference/generated/spectrochempy.show_versions.rst", "reference/generated/spectrochempy.sigmoidmodel.rst", "reference/generated/spectrochempy.simpson.rst", "reference/generated/spectrochempy.sine.rst", "reference/generated/spectrochempy.sinm.rst", "reference/generated/spectrochempy.smooth.rst", "reference/generated/spectrochempy.snip.rst", "reference/generated/spectrochempy.sort.rst", "reference/generated/spectrochempy.sp.rst", "reference/generated/spectrochempy.squeeze.rst", "reference/generated/spectrochempy.stack.rst", "reference/generated/spectrochempy.std.rst", "reference/generated/spectrochempy.sum.rst", "reference/generated/spectrochempy.swapdims.rst", "reference/generated/spectrochempy.take.rst", "reference/generated/spectrochempy.to.rst", "reference/generated/spectrochempy.to_array.rst", "reference/generated/spectrochempy.to_base_units.rst", "reference/generated/spectrochempy.to_reduced_units.rst", "reference/generated/spectrochempy.to_xarray.rst", "reference/generated/spectrochempy.transpose.rst", "reference/generated/spectrochempy.trapezoid.rst", "reference/generated/spectrochempy.triang.rst", "reference/generated/spectrochempy.var.rst", "reference/generated/spectrochempy.voigtmodel.rst", "reference/generated/spectrochempy.warning_.rst", "reference/generated/spectrochempy.whittaker.rst", "reference/generated/spectrochempy.write.rst", "reference/generated/spectrochempy.write_csv.rst", "reference/generated/spectrochempy.write_excel.rst", "reference/generated/spectrochempy.write_jcamp.rst", "reference/generated/spectrochempy.write_mat.rst", "reference/generated/spectrochempy.write_matlab.rst", "reference/generated/spectrochempy.write_xls.rst", "reference/generated/spectrochempy.zeros.rst", "reference/generated/spectrochempy.zeros_like.rst", "reference/generated/spectrochempy.zf.rst", "reference/generated/spectrochempy.zf_auto.rst", "reference/generated/spectrochempy.zf_double.rst", "reference/generated/spectrochempy.zf_size.rst", "reference/glossary.rst", "reference/index.rst", "reference/papers.rst", "userguide/analysis/analysis.rst", "userguide/analysis/baseline.ipynb", "userguide/analysis/fitting.ipynb", "userguide/analysis/mcr_als.ipynb", "userguide/analysis/pca.ipynb", "userguide/analysis/peak_finding.ipynb", "userguide/analysis/peak_integration.ipynb", "userguide/analysis/pls.ipynb", "userguide/api/api.ipynb", "userguide/importexport/import.ipynb", "userguide/importexport/importIR.ipynb", "userguide/importexport/importexport.rst", "userguide/introduction/interface.ipynb", "userguide/introduction/introduction.ipynb", "userguide/introduction/mdcheatsheet.ipynb", "userguide/objects/dataset/dataset.ipynb", "userguide/objects/index.rst", "userguide/objects/project/project.ipynb", "userguide/plotting/plotting.ipynb", "userguide/processing/alignment.ipynb", "userguide/processing/apodization.ipynb", "userguide/processing/denoising.ipynb", "userguide/processing/fourier.ipynb", "userguide/processing/interferogram.ipynb", "userguide/processing/math_operations.ipynb", "userguide/processing/processing.rst", "userguide/processing/slicing.ipynb", "userguide/processing/smoothing.ipynb", "userguide/processing/td_baseline.ipynb", "userguide/processing/transformations.ipynb", "whatsnew/changelog.rst", "whatsnew/index.rst", "whatsnew/latest.rst", "whatsnew/v0.1.0.rst", "whatsnew/v0.2.0.rst", "whatsnew/v0.2.10.rst", "whatsnew/v0.2.11.rst", "whatsnew/v0.2.12.rst", "whatsnew/v0.2.13.rst", "whatsnew/v0.2.14.rst", "whatsnew/v0.2.15.rst", "whatsnew/v0.2.16.rst", "whatsnew/v0.2.17.rst", "whatsnew/v0.2.18.rst", "whatsnew/v0.2.21.rst", "whatsnew/v0.2.22.rst", "whatsnew/v0.2.23.rst", "whatsnew/v0.2.4.rst", "whatsnew/v0.2.5.rst", "whatsnew/v0.2.6.rst", "whatsnew/v0.2.7.rst", "whatsnew/v0.2.8.rst", "whatsnew/v0.2.9.rst", "whatsnew/v0.3.0.rst", "whatsnew/v0.3.1.rst", "whatsnew/v0.3.2.rst", "whatsnew/v0.3.3.rst", "whatsnew/v0.4.1.rst", "whatsnew/v0.4.10.rst", "whatsnew/v0.4.2.rst", "whatsnew/v0.4.3.rst", "whatsnew/v0.4.4.rst", "whatsnew/v0.4.5.rst", "whatsnew/v0.4.6.rst", "whatsnew/v0.4.7.rst", "whatsnew/v0.4.9.rst", "whatsnew/v0.5.0.rst", "whatsnew/v0.5.1.rst", "whatsnew/v0.5.2.rst", "whatsnew/v0.5.3.rst", "whatsnew/v0.5.4.rst", "whatsnew/v0.5.5.rst", "whatsnew/v0.6.1.rst", "whatsnew/v0.6.10.rst", "whatsnew/v0.6.2.rst", "whatsnew/v0.6.3.rst", "whatsnew/v0.6.4.rst", "whatsnew/v0.6.5.rst", "whatsnew/v0.6.6.rst", "whatsnew/v0.6.7.rst", "whatsnew/v0.6.8.rst", "whatsnew/v0.6.9.rst"], "titles": ["Citing  <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Acknowledgments", "SpectroChempy License", "See also", "SpectroChemPy code style guide", "Adding a Reader", "Contributing to SpectroChemPy", "Contributing to the code", "Contributing to specific parts of the code", "SpectroChemPy Docstring Guide", "Contributing to the documentation", "Building Docker images", "Adding your examples to the gallery", "Developer\u2019s Guide", "Reporting Issues", "Editors", "Decomposition", "EFA example", "EFA (Keller and Massart original example)", "FastICA example", "2D-IRIS analysis example", "MCR-ALS example (adapted from Jaumot et al. 2005)", "MCR-ALS with kinetic constraints", "NMF analysis example", "PCA example (iris dataset)", "PCA analysis example", "SIMPLISMA example", "Computation times", "Cross-decomposition", "PLS regression example", "Computation times", "Curvefitting", "Fitting 1D dataset", "Solve a linear equation using LSTSQ", "Computation times", "Baseline", "NDDataset baseline correction", "Computation times", "Analysis NDDataset", "How to use NDDataset", "NDDataset creation and plotting example", "NDDataset coordinates example", "Units manipulation examples", "Computation times", "Import / Export", "Reading datasets", "Loading an IR (omnic SPG) experimental file", "Loading Bruker OPUS files", "Loading of experimental 1D NMR data", "Loading RAMAN experimental file", "Reading Renishaw WiRE files", "Computation times", "Plotting datasets", "Using <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plot_multiple</span></code> to plot several datasets on the same figure", "Introduction to the plotting librairie", "Computation times", "Project Management", "Project creation", "Computation times", "Core functionalities", "Apodization", "Exponential window multiplication", "Sine bell and squared Sine bell window multiplication", "Computation times", "Denoising", "Denoising a 2D Raman spectrum", "Removing cosmic ray spikes from a Raman spectrum", "Computation times", "filtering", "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum", "Computation times", "Processing NDDataset", "Processing NMR datasets", "Analysis CP NMR spectra", "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)", "Processing Relaxation measurement", "Computation times", "Processing Raman datasets", "Processing RAMAN spectra", "Computation times", "Example\u2019s gallery", "Installation guide", "Install optional dependencies", "Install in Google Colaboratory (Colab)", "Install a Docker container", "Installation Guide for Mac OSX", "Installation from sources (master or develop versions)", "Installation Guide for Windows", "Overview", "Why <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>  ?", "Processing, analyzing and modeling spectroscopic data", "Bibliography", "Frequently asked questions (FAQ)", "spectrochempy.ActionMassKinetics", "spectrochempy.Baseline", "spectrochempy.BaselineCorrector", "spectrochempy.Coord", "spectrochempy.CoordSet", "spectrochempy.EFA", "spectrochempy.FastICA", "spectrochempy.FileSelector", "spectrochempy.Filter", "spectrochempy.II", "spectrochempy.IR", "spectrochempy.IRIS", "spectrochempy.IrisKernel", "spectrochempy.LSTSQ", "spectrochempy.MCRALS", "spectrochempy.NDDataset", "spectrochempy.NDDataset.save", "spectrochempy.NDDataset.save_as", "spectrochempy.NMF", "spectrochempy.NNLS", "spectrochempy.Optimize", "spectrochempy.PCA", "spectrochempy.PFR", "spectrochempy.PLSRegression", "spectrochempy.Project", "spectrochempy.Quantity", "spectrochempy.RI", "spectrochempy.RR", "spectrochempy.SIMPLISMA", "spectrochempy.SVD", "spectrochempy.Script", "spectrochempy.Unit", "spectrochempy.abs", "spectrochempy.absolute", "spectrochempy.align", "spectrochempy.all", "spectrochempy.amax", "spectrochempy.amin", "spectrochempy.any", "spectrochempy.arange", "spectrochempy.argmax", "spectrochempy.argmin", "spectrochempy.around", "spectrochempy.asls", "spectrochempy.asymmetricvoigtmodel", "spectrochempy.autosub", "spectrochempy.average", "spectrochempy.bartlett", "spectrochempy.basc", "spectrochempy.blackmanharris", "spectrochempy.clip", "spectrochempy.component", "spectrochempy.concatenate", "spectrochempy.conj", "spectrochempy.conjugate", "spectrochempy.coordmax", "spectrochempy.coordmin", "spectrochempy.copy", "spectrochempy.cs", "spectrochempy.cumsum", "spectrochempy.dc", "spectrochempy.debug_", "spectrochempy.denoise", "spectrochempy.despike", "spectrochempy.detrend", "spectrochempy.diag", "spectrochempy.diagonal", "spectrochempy.dot", "spectrochempy.download_nist_ir", "spectrochempy.em", "spectrochempy.empty", "spectrochempy.empty_like", "spectrochempy.error_", "spectrochempy.eye", "spectrochempy.fft", "spectrochempy.find_peaks", "spectrochempy.fromfunction", "spectrochempy.fromiter", "spectrochempy.fsh", "spectrochempy.fsh2", "spectrochempy.full", "spectrochempy.full_like", "spectrochempy.gaussianmodel", "spectrochempy.general_hamming", "spectrochempy.geomspace", "spectrochempy.get_baseline", "spectrochempy.get_loglevel", "spectrochempy.gm", "spectrochempy.hamming", "spectrochempy.hann", "spectrochempy.ht", "spectrochempy.identity", "spectrochempy.ifft", "spectrochempy.imag", "spectrochempy.info_", "spectrochempy.interpolate", "spectrochempy.is_units_compatible", "spectrochempy.ito", "spectrochempy.ito_base_units", "spectrochempy.ito_reduced_units", "spectrochempy.linspace", "spectrochempy.load", "spectrochempy.load_iris", "spectrochempy.logspace", "spectrochempy.lorentzianmodel", "spectrochempy.ls", "spectrochempy.max", "spectrochempy.mc", "spectrochempy.mean", "spectrochempy.min", "spectrochempy.multiplot", "spectrochempy.multiplot_image", "spectrochempy.multiplot_lines", "spectrochempy.multiplot_map", "spectrochempy.multiplot_scatter", "spectrochempy.multiplot_stack", "spectrochempy.multiplot_with_transposed", "spectrochempy.ones", "spectrochempy.ones_like", "spectrochempy.pathclean", "spectrochempy.pipe", "spectrochempy.pk", "spectrochempy.pk_exp", "spectrochempy.plot", "spectrochempy.plot_1D", "spectrochempy.plot_2D", "spectrochempy.plot_3D", "spectrochempy.plot_bar", "spectrochempy.plot_image", "spectrochempy.plot_map", "spectrochempy.plot_multiple", "spectrochempy.plot_pen", "spectrochempy.plot_scatter", "spectrochempy.plot_scatter_pen", "spectrochempy.plot_stack", "spectrochempy.plot_surface", "spectrochempy.plot_waterfall", "spectrochempy.plot_with_transposed", "spectrochempy.polynomialbaseline", "spectrochempy.ps", "spectrochempy.ptp", "spectrochempy.qsin", "spectrochempy.random", "spectrochempy.read", "spectrochempy.read_carroucell", "spectrochempy.read_csv", "spectrochempy.read_ddr", "spectrochempy.read_dir", "spectrochempy.read_hdr", "spectrochempy.read_jcamp", "spectrochempy.read_labspec", "spectrochempy.read_mat", "spectrochempy.read_matlab", "spectrochempy.read_omnic", "spectrochempy.read_opus", "spectrochempy.read_quadera", "spectrochempy.read_sdr", "spectrochempy.read_soc", "spectrochempy.read_spa", "spectrochempy.read_spc", "spectrochempy.read_spg", "spectrochempy.read_srs", "spectrochempy.read_topspin", "spectrochempy.read_wdf", "spectrochempy.read_wire", "spectrochempy.read_zip", "spectrochempy.real", "spectrochempy.remove_masks", "spectrochempy.roll", "spectrochempy.round", "spectrochempy.rs", "spectrochempy.run_all_scripts", "spectrochempy.run_script", "spectrochempy.savgol", "spectrochempy.set_complex", "spectrochempy.set_hypercomplex", "spectrochempy.set_loglevel", "spectrochempy.set_nmr_context", "spectrochempy.set_quaternion", "spectrochempy.show", "spectrochempy.show_versions", "spectrochempy.sigmoidmodel", "spectrochempy.simpson", "spectrochempy.sine", "spectrochempy.sinm", "spectrochempy.smooth", "spectrochempy.snip", "spectrochempy.sort", "spectrochempy.sp", "spectrochempy.squeeze", "spectrochempy.stack", "spectrochempy.std", "spectrochempy.sum", "spectrochempy.swapdims", "spectrochempy.take", "spectrochempy.to", "spectrochempy.to_array", "spectrochempy.to_base_units", "spectrochempy.to_reduced_units", "spectrochempy.to_xarray", "spectrochempy.transpose", "spectrochempy.trapezoid", "spectrochempy.triang", "spectrochempy.var", "spectrochempy.voigtmodel", "spectrochempy.warning_", "spectrochempy.whittaker", "spectrochempy.write", "spectrochempy.write_csv", "spectrochempy.write_excel", "spectrochempy.write_jcamp", "spectrochempy.write_mat", "spectrochempy.write_matlab", "spectrochempy.write_xls", "spectrochempy.zeros", "spectrochempy.zeros_like", "spectrochempy.zf", "spectrochempy.zf_auto", "spectrochempy.zf_double", "spectrochempy.zf_size", "Glossary", "Public API reference", "Papers citing <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Analysis", "Baseline corrections", "Fitting", "MCR ALS", "Principal Component Analysis", "Peak Maxima Finding", "Peak integration", "Partial Least Squares Regression (PLSRegression)", "API Configuration", "Import Data", "Import IR Data", "Import &amp; Export", "Starting Jupyter lab", "Introduction", "Markdown Cheat Sheet", "The NDDataset object", "Core objects", "Project management", "Plotting", "Alignment of datasets", "Apodization", "Denoising", "One-dimensional (1D) Fourier transformation", "FTIR interferogram processing", "Mathematical operations", "Processing", "Slicing NDDatasets", "Filtering, Smoothing and Denoising", "Time domain baseline correction (NMR)", "Basic transformations", "What\u2019s new in revision", "Release notes", "What\u2019s new in revision 0.6.10", "Revisions 0.1.0 to 0.1.19", "What\u2019s new in revision 0.2.0", "What\u2019s new in revision 0.2.10 [2021-02-14]", "What\u2019s new in revision 0.2.11 [2021-02-17]", "What\u2019s new in revision 0.2.12 [2021-02-23]", "What\u2019s new in revision 0.2.13 [2021-02-23]", "What\u2019s new in revision 0.2.14 [2021-02-25]", "What\u2019s new in revision 0.2.15 [2021-03-29]", "What\u2019s new in revision 0.2.16 [2021-11-11]", "What\u2019s new in revision 0.2.17 [2021-11-29]", "What\u2019s new in revision 0.2.18 [2022-01-05]", "What\u2019s new in revision 0.2.21 [2022-01-09]", "What\u2019s new in revision 0.2.22 [2022-01-10]", "What\u2019s new in revision 0.2.23 [2022-01-16]", "What\u2019s new in revision 0.2.4", "What\u2019s new in revision 0.2.5", "What\u2019s new in revision 0.2.6", "What\u2019s new in revision 0.2.7", "What\u2019s new in revision 0.2.8", "What\u2019s new in revision 0.2.9 [2021-11-29]", "What\u2019s new in revision 0.3.0 [2022-01-20]", "What\u2019s new in revision 0.3.1 [2022-01-21]", "What\u2019s new in revision 0.3.2 [2022-01-31]", "What\u2019s new in revision 0.3.3 [2022-03-9]", "What\u2019s new in revision 0.4.1 [2022-03-14]", "What\u2019s new in revision 0.4.10 [2023-01-07]", "What\u2019s new in revision 0.4.2 [2022-03-16]", "What\u2019s new in revision 0.4.3 [2022-03-20]", "What\u2019s new in revision 0.4.4 [2022-03-22]", "What\u2019s new in revision 0.4.5 [2022-04-09]", "What\u2019s new in revision 0.4.6 [2022-05-16]", "What\u2019s new in revision 0.4.7 [2022-05-16]", "What\u2019s new in revision 0.4.9 [2023-01-05]", "What\u2019s new in revision 0.5.0 [2023-01-11]", "What\u2019s new in revision 0.5.1", "What\u2019s new in revision 0.5.2", "What\u2019s new in revision 0.5.3", "What\u2019s new in revision 0.5.4", "What\u2019s new in revision 0.5.5", "What\u2019s new in revision 0.6.1", "What\u2019s new in revision 0.6.10", "What\u2019s new in revision 0.6.2", "What\u2019s new in revision 0.6.3", "What\u2019s new in revision 0.6.4", "What\u2019s new in revision 0.6.5", "What\u2019s new in revision 0.6.6", "What\u2019s new in revision 0.6.7", "What\u2019s new in revision 0.6.8", "What\u2019s new in revision 0.6.9"], "terms": {"when": [0, 2, 5, 6, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 66, 73, 74, 75, 78, 81, 82, 84, 93, 94, 96, 98, 99, 100, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 127, 132, 139, 156, 157, 168, 169, 177, 193, 196, 203, 213, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 278, 281, 313, 317, 318, 319, 321, 324, 325, 326, 330, 331, 334, 336, 338, 342, 343, 345, 352, 356, 360, 374, 379, 381, 388, 390, 395, 396], "us": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 36, 38, 40, 41, 42, 45, 50, 52, 55, 57, 62, 65, 66, 69, 73, 74, 75, 78, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 129, 130, 132, 136, 137, 138, 139, 141, 152, 158, 163, 164, 168, 175, 177, 178, 180, 185, 193, 196, 197, 199, 201, 202, 203, 212, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 231, 235, 237, 238, 239, 241, 242, 244, 248, 249, 250, 251, 252, 253, 254, 258, 266, 270, 274, 275, 278, 280, 284, 285, 294, 296, 297, 299, 300, 301, 303, 313, 315, 316, 320, 321, 322, 323, 324, 326, 327, 329, 330, 332, 333, 335, 337, 338, 339, 340, 341, 342, 344, 345, 350, 357, 364, 381, 382, 388, 390, 392, 394, 396], "your": [0, 7, 8, 10, 13, 15, 33, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 99, 108, 267, 317, 318, 325, 326, 328, 329, 330, 331, 339], "own": [0, 2, 6, 9, 80, 89, 99, 330], "work": [0, 1, 2, 7, 11, 13, 18, 20, 23, 26, 33, 36, 41, 45, 48, 50, 57, 73, 74, 80, 81, 83, 84, 85, 87, 89, 94, 108, 113, 136, 155, 160, 216, 217, 220, 224, 225, 226, 299, 316, 324, 325, 326, 328, 329, 331, 333, 334, 341, 343, 350, 352, 353, 355, 360, 363, 369, 373, 374, 380, 387, 392, 395, 396], "you": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 33, 42, 45, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 99, 108, 116, 157, 158, 314, 316, 318, 322, 325, 326, 328, 329, 330, 331, 334, 339, 342, 344, 345, 353, 384], "ar": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 42, 49, 53, 57, 61, 66, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 135, 138, 139, 141, 143, 156, 157, 158, 160, 166, 167, 168, 169, 170, 176, 177, 178, 189, 193, 196, 199, 201, 202, 203, 213, 217, 218, 221, 222, 227, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 262, 266, 267, 275, 278, 280, 281, 284, 285, 289, 296, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 329, 331, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "kindli": 0, "request": [0, 4, 7, 8, 10, 12, 13, 14, 80, 108, 278, 326, 334, 370], "thi": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 92, 93, 94, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 138, 139, 145, 155, 156, 158, 160, 162, 164, 167, 168, 169, 174, 177, 180, 185, 192, 194, 199, 201, 202, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 266, 267, 275, 278, 281, 283, 284, 285, 291, 296, 299, 302, 304, 305, 306, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 360, 369, 374, 388, 392, 393, 394, 395], "wai": [0, 6, 7, 9, 10, 11, 12, 41, 57, 83, 85, 86, 87, 90, 91, 97, 108, 174, 212, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 314, 317, 324, 328, 329, 331, 334, 337, 345, 374, 394], "travert": [0, 85, 87, 88, 91, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "arnaud": [0, 91], "fernandez": [0, 85, 87, 88, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "christian": 0, "2025": [0, 20, 24, 25, 45, 73, 74, 75, 88, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "framework": [0, 3, 90, 324], "process": [0, 6, 7, 10, 11, 18, 20, 21, 73, 76, 79, 82, 83, 89, 94, 95, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 155, 156, 243, 255, 281, 299, 317, 319, 324, 326, 329, 332, 334, 335, 336, 338, 344, 353, 363, 365, 366, 395, 396], "analyz": [0, 329], "model": [0, 17, 19, 20, 22, 24, 25, 26, 29, 32, 33, 36, 73, 74, 78, 88, 91, 93, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 121, 122, 137, 175, 197, 217, 220, 224, 225, 226, 231, 274, 297, 313, 316, 320, 322, 323, 324, 369, 388], "spectroscop": [0, 3, 5, 88, 89, 98, 99, 104, 107, 108, 111, 114, 121, 122, 240, 313, 324, 328, 329, 331, 332], "data": [0, 1, 2, 3, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 29, 33, 36, 42, 44, 45, 50, 51, 53, 57, 59, 61, 62, 65, 66, 73, 74, 78, 84, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 142, 145, 148, 149, 152, 153, 155, 156, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 183, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 199, 201, 202, 203, 210, 211, 216, 217, 220, 224, 225, 226, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 266, 267, 278, 279, 281, 283, 284, 285, 288, 289, 295, 296, 299, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 337, 338, 339, 341, 342, 343, 350, 351, 360, 366, 376, 392, 395, 396], "chemistri": [0, 91, 324], "python": [0, 1, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 80, 81, 83, 84, 85, 86, 87, 88, 99, 107, 108, 113, 212, 236, 240, 246, 247, 314, 324, 325, 326, 328, 329, 334, 342, 365, 373, 396], "version": [0, 2, 7, 10, 12, 14, 26, 50, 75, 81, 82, 84, 85, 87, 88, 89, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 139, 158, 232, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 273, 317, 324, 325, 328, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "0": [0, 2, 5, 7, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 84, 85, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 123, 132, 135, 136, 137, 138, 139, 143, 145, 146, 147, 151, 157, 158, 159, 160, 162, 166, 168, 169, 170, 173, 174, 175, 176, 180, 181, 182, 184, 188, 189, 196, 197, 198, 203, 214, 215, 218, 219, 221, 222, 223, 227, 228, 229, 231, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 266, 274, 278, 281, 284, 296, 297, 299, 301, 307, 308, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "6": [0, 2, 6, 7, 18, 21, 25, 36, 73, 74, 75, 85, 87, 88, 91, 93, 96, 97, 98, 99, 104, 107, 108, 111, 113, 114, 116, 117, 121, 122, 169, 174, 180, 211, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 307, 308, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 373], "10": [0, 1, 2, 7, 9, 20, 22, 23, 24, 33, 36, 41, 42, 45, 54, 69, 73, 74, 75, 76, 78, 81, 87, 88, 91, 93, 96, 97, 104, 108, 113, 114, 118, 145, 169, 173, 196, 218, 219, 221, 222, 227, 228, 229, 231, 248, 270, 307, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347, 373], "zenodo": [0, 91, 315], "doi": [0, 1, 91, 315, 326], "5281": [0, 91, 315], "3823841": 0, "url": [0, 45, 84, 91, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 324, 330, 390], "http": [0, 4, 6, 7, 29, 42, 45, 50, 84, 85, 86, 87, 91, 108, 303, 317, 319, 323, 324, 326, 329, 330, 334, 343, 390], "www": [0, 10, 29, 45, 85, 87, 91, 108, 303, 317, 323, 324, 326, 329], "fr": [0, 10, 85, 87, 91, 324, 326, 329, 338], "bibtex": 0, "field": [0, 2, 89, 93, 95, 97, 108, 247, 317, 325, 331], "softwar": [0, 1, 2, 6, 14, 86, 88, 90, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 281, 326, 336, 395], "spectrochempy_2025": 0, "author": [0, 2, 7, 20, 22, 24, 25, 40, 45, 73, 74, 75, 88, 89, 108, 319, 320, 322, 324, 326, 329, 331, 333, 336, 338, 340, 342, 345], "licens": [0, 50, 89, 90, 108, 299, 324], "cecil": [0, 2, 89, 324], "b": [0, 2, 6, 17, 22, 49, 53, 61, 62, 69, 78, 89, 91, 93, 96, 108, 118, 125, 126, 137, 138, 145, 160, 235, 238, 240, 283, 318, 324, 327, 330, 331, 334, 336, 343], "month": [0, 2], "2": [0, 2, 6, 7, 8, 17, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 45, 50, 53, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 83, 84, 87, 88, 91, 93, 94, 95, 96, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 114, 116, 117, 118, 121, 125, 126, 140, 145, 150, 156, 157, 158, 159, 160, 163, 166, 168, 173, 175, 176, 180, 181, 182, 184, 189, 192, 197, 200, 203, 210, 211, 216, 231, 232, 234, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 275, 278, 281, 283, 284, 291, 296, 299, 301, 307, 308, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 369, 392], "publish": [0, 2, 108, 303, 357], "titl": [0, 5, 7, 9, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 33, 40, 41, 45, 46, 57, 65, 73, 74, 75, 88, 90, 96, 97, 98, 104, 108, 127, 132, 138, 159, 177, 193, 196, 203, 217, 220, 224, 225, 226, 235, 317, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 333, 335, 336, 338, 340, 342, 345, 348, 389], "year": 0, "A": [1, 2, 5, 6, 7, 9, 10, 13, 19, 22, 24, 33, 41, 49, 53, 66, 78, 85, 87, 88, 91, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 128, 131, 138, 140, 145, 152, 168, 197, 201, 218, 221, 222, 227, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 274, 283, 284, 285, 287, 290, 291, 292, 296, 297, 300, 301, 303, 313, 314, 315, 317, 318, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 355, 374, 394, 395], "part": [1, 2, 6, 7, 9, 10, 13, 14, 17, 23, 36, 74, 89, 96, 108, 129, 135, 146, 147, 168, 199, 262, 313, 316, 329, 334, 338, 340, 345, 395], "program": [1, 2, 73, 88, 89, 90, 104, 313, 328, 329, 344, 390], "read": [1, 2, 5, 9, 14, 19, 20, 21, 22, 29, 41, 42, 44, 51, 53, 54, 59, 65, 66, 69, 73, 78, 82, 88, 92, 95, 96, 97, 98, 108, 109, 110, 117, 122, 138, 139, 145, 152, 161, 168, 170, 194, 195, 201, 218, 219, 221, 222, 227, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 275, 283, 284, 285, 289, 294, 296, 301, 317, 318, 319, 320, 321, 322, 323, 325, 326, 331, 333, 334, 336, 337, 338, 342, 343, 344, 354, 371, 390, 395, 396], "topspin": [1, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 281, 325, 336, 350], "nmr": [1, 44, 51, 59, 61, 62, 76, 89, 92, 96, 97, 108, 113, 162, 167, 171, 172, 183, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 270, 279, 310, 311, 325, 329, 331, 333, 336, 340, 341, 365, 366, 368, 395, 396], "file": [1, 2, 6, 7, 8, 9, 10, 12, 21, 22, 27, 30, 34, 37, 43, 44, 51, 55, 58, 59, 63, 67, 69, 70, 73, 76, 79, 84, 85, 87, 88, 91, 95, 96, 100, 108, 109, 110, 115, 117, 194, 212, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 273, 300, 301, 303, 319, 320, 322, 323, 327, 330, 333, 334, 339, 342, 343, 345, 350, 351, 358, 367, 369, 371, 376, 383, 384, 390, 392, 393, 395, 396], "digit": [1, 93, 96, 317, 326, 334, 392], "filter": [1, 50, 66, 69, 100, 108, 168, 266, 278, 299, 325, 338, 341, 394], "remov": [1, 2, 7, 9, 26, 36, 53, 64, 65, 67, 71, 73, 74, 75, 78, 88, 91, 93, 94, 98, 99, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 122, 136, 141, 156, 157, 168, 178, 236, 260, 279, 282, 315, 317, 318, 321, 322, 325, 332, 334, 335, 340, 343, 350, 372, 387, 390, 392, 394], "i": [1, 2, 4, 5, 6, 7, 9, 10, 11, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 50, 53, 57, 62, 65, 66, 69, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 180, 181, 182, 184, 185, 190, 193, 195, 196, 198, 199, 201, 202, 203, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 266, 267, 270, 275, 278, 280, 281, 282, 283, 284, 285, 288, 290, 291, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 347, 351, 360, 369, 371, 373, 376, 383, 387, 388, 390, 392, 393, 394, 395, 396], "base": [1, 2, 3, 6, 9, 18, 36, 73, 82, 84, 85, 86, 87, 91, 93, 94, 96, 98, 108, 114, 136, 156, 168, 177, 191, 196, 212, 236, 266, 278, 290, 299, 315, 317, 320, 321, 323, 325, 326, 329, 334, 337, 338, 340, 343, 351, 394, 395, 396], "excel": [1, 10, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303], "nmrglue": [1, 7, 48, 73, 74, 108, 183, 372], "j": [1, 91, 96, 107, 108, 118, 150, 189, 192, 210, 211, 291, 315, 326, 331], "helmu": 1, "c": [1, 2, 18, 21, 22, 23, 26, 29, 33, 53, 62, 66, 73, 78, 82, 84, 85, 86, 87, 88, 91, 92, 93, 96, 97, 98, 99, 104, 107, 108, 111, 114, 116, 121, 122, 145, 160, 171, 172, 217, 220, 224, 225, 226, 261, 283, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 348, 350, 388, 389], "p": [1, 11, 62, 73, 74, 84, 91, 104, 105, 108, 115, 215, 236, 246, 247, 313, 317, 321, 334, 338, 340, 343], "jaroniec": 1, "an": [1, 2, 5, 6, 7, 9, 10, 11, 20, 21, 22, 32, 33, 40, 44, 47, 50, 51, 59, 73, 74, 75, 78, 82, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 155, 156, 157, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 185, 198, 199, 202, 203, 210, 211, 214, 215, 221, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 266, 275, 278, 279, 281, 282, 284, 287, 288, 290, 291, 292, 294, 295, 296, 299, 302, 304, 305, 306, 307, 308, 313, 315, 316, 317, 318, 319, 320, 324, 325, 326, 329, 330, 331, 332, 334, 335, 336, 339, 340, 342, 343, 344, 345, 390, 392, 395, 396], "open": [1, 2, 5, 6, 9, 10, 11, 14, 15, 49, 84, 85, 86, 87, 92, 96, 108, 117, 132, 168, 193, 194, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 325, 326, 328, 334, 338, 371], "sourc": [1, 2, 5, 6, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 81, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 331], "packag": [1, 6, 7, 9, 19, 21, 23, 24, 25, 26, 29, 45, 50, 81, 82, 83, 84, 85, 87, 88, 89, 96, 108, 195, 325, 329, 331, 333, 334, 351, 357, 369, 376, 395], "analysi": [1, 16, 17, 22, 24, 26, 27, 33, 71, 72, 76, 83, 89, 90, 91, 96, 97, 98, 99, 104, 105, 107, 108, 111, 113, 114, 121, 122, 162, 167, 214, 236, 246, 255, 279, 313, 315, 317, 319, 323, 329, 358, 388, 392, 394, 395, 396], "multidimension": [1, 88, 108, 140, 142, 151, 162, 167, 171, 172, 176, 181, 182, 185, 198, 214, 215, 261, 263, 280, 281, 295, 342, 353], "biomol": 1, "2013": [1, 91, 104], "55": [1, 45, 74, 78, 88, 91, 108, 122, 138, 139, 145, 152, 201, 246, 253, 275, 283, 284, 285, 294, 296, 317, 322, 325, 331, 335, 340, 345], "355": [1, 41, 43, 318], "367": 1, "1007": 1, "s10858": 1, "013": [1, 45, 88, 322, 345], "9718": 1, "x": [1, 5, 7, 18, 19, 20, 21, 22, 24, 25, 26, 29, 33, 40, 41, 42, 45, 47, 53, 66, 69, 73, 74, 75, 78, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 127, 138, 139, 140, 142, 145, 146, 147, 151, 152, 155, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 197, 198, 201, 203, 211, 214, 215, 217, 220, 224, 225, 226, 231, 236, 237, 238, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 261, 263, 274, 275, 281, 283, 284, 285, 288, 294, 295, 296, 303, 307, 308, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 367, 368, 388, 395], "opu": [1, 44, 51, 59, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 325, 327, 358, 393], "brukeropusread": [1, 326], "todo": [1, 78, 108, 113, 138, 238, 248, 318, 321, 326, 331, 342], "add": [1, 3, 6, 7, 8, 9, 12, 20, 22, 25, 26, 29, 41, 57, 73, 74, 75, 85, 86, 87, 108, 117, 235, 317, 318, 319, 320, 321, 323, 326, 330, 331, 333, 334, 335, 339, 342, 343, 348, 350, 358, 371, 372, 378, 379, 389, 391, 392, 396], "about": [1, 6, 7, 13, 85, 101, 108, 266, 278, 314, 317, 323, 332, 334, 350, 374], "other": [1, 6, 7, 9, 10, 12, 14, 21, 24, 36, 53, 73, 74, 81, 85, 86, 89, 92, 93, 94, 96, 97, 98, 99, 104, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 121, 122, 124, 125, 126, 127, 132, 140, 142, 145, 151, 153, 155, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 184, 185, 189, 190, 193, 194, 196, 198, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 266, 267, 275, 278, 281, 288, 289, 294, 295, 299, 300, 307, 308, 313, 314, 318, 319, 320, 321, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 338, 340, 341, 343, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "mai": [1, 2, 3, 6, 7, 9, 14, 36, 42, 57, 65, 66, 73, 82, 84, 85, 86, 91, 94, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 128, 131, 143, 163, 164, 167, 168, 196, 212, 240, 314, 317, 318, 326, 329, 331, 332, 334, 337, 343, 353, 369, 373, 384, 390], "includ": [1, 2, 5, 7, 9, 10, 14, 29, 81, 93, 94, 96, 97, 108, 117, 132, 168, 177, 193, 196, 316, 325, 326, 329, 330, 334, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "spectrochempi": [1, 5, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 80, 82, 85, 87, 88, 90, 92, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "free": [2, 6, 9, 14, 86, 89, 98, 317, 338], "agreement": 2, "notic": [2, 9, 36], "result": [2, 7, 9, 17, 20, 22, 24, 25, 32, 33, 36, 66, 69, 73, 74, 75, 78, 85, 89, 93, 96, 99, 108, 111, 113, 114, 128, 129, 130, 131, 135, 156, 158, 164, 168, 169, 174, 189, 199, 201, 202, 211, 233, 235, 262, 275, 284, 285, 296, 308, 317, 318, 319, 320, 322, 325, 329, 331, 335, 337, 338, 339, 340, 343, 345], "discuss": [2, 6, 9, 12, 80, 329, 370], "between": [2, 6, 9, 24, 25, 66, 93, 94, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 121, 122, 127, 132, 136, 156, 168, 193, 196, 203, 223, 237, 319, 321, 322, 332, 334, 342, 343, 344, 347], "its": [2, 6, 7, 9, 66, 85, 89, 90, 93, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 139, 158, 160, 168, 184, 209, 217, 220, 224, 225, 226, 230, 244, 245, 273, 318, 319, 320, 321, 326, 330, 331, 333, 334, 342, 343, 377, 392, 394], "order": [2, 9, 36, 66, 69, 73, 78, 85, 88, 91, 93, 94, 96, 97, 101, 105, 108, 111, 157, 163, 168, 214, 215, 231, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 278, 280, 299, 313, 317, 318, 319, 322, 325, 331, 337, 339, 342, 343, 345, 359, 360, 364, 377, 388], "ensur": [2, 4, 5, 7, 33, 84, 99, 108, 114, 143, 318, 339, 394], "complianc": 2, "two": [2, 9, 10, 12, 18, 20, 25, 36, 41, 57, 66, 73, 74, 91, 96, 97, 104, 108, 111, 114, 118, 129, 130, 132, 155, 160, 167, 168, 185, 199, 202, 238, 267, 275, 286, 293, 310, 313, 314, 317, 318, 319, 320, 321, 324, 325, 326, 330, 331, 334, 337, 340, 342, 388], "main": [2, 5, 6, 9, 10, 57, 90, 92, 96, 97, 108, 117, 158, 159, 166, 184, 314, 317, 320, 326, 329, 330, 331, 332, 343, 350], "principl": [2, 13, 89, 92, 108, 127, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229], "guid": [2, 6, 7, 10, 12, 86, 88, 89, 95, 314, 330, 347], "draft": 2, "firstli": 2, "govern": 2, "distribut": [2, 6, 9, 81, 84, 86, 87, 96, 99, 104, 108, 196, 197, 235, 284, 296, 318], "access": [2, 15, 57, 83, 84, 87, 92, 108, 168, 314, 326, 329], "code": [2, 9, 10, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 83, 86, 89, 314, 328, 330, 331, 343, 359, 383, 385], "broad": [2, 9], "right": [2, 14, 29, 73, 84, 93, 107, 108, 114, 160, 171, 172, 176, 198, 203, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 263, 313, 319, 321, 323, 326, 333, 334, 338], "grant": 2, "user": [2, 4, 6, 7, 9, 10, 11, 12, 21, 22, 84, 85, 87, 88, 89, 91, 92, 95, 96, 105, 108, 113, 117, 163, 166, 184, 248, 314, 317, 319, 320, 321, 322, 325, 326, 328, 331, 332, 334, 342, 343, 374, 380, 396], "secondli": 2, "elect": 2, "law": 2, "french": 2, "which": [2, 4, 5, 6, 9, 10, 12, 17, 22, 24, 36, 42, 57, 62, 73, 74, 78, 81, 83, 85, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 101, 104, 107, 108, 111, 112, 113, 114, 115, 116, 117, 121, 122, 127, 128, 129, 130, 131, 138, 139, 140, 142, 144, 145, 146, 147, 150, 151, 152, 155, 159, 162, 164, 167, 168, 169, 170, 171, 172, 174, 176, 177, 180, 181, 182, 183, 185, 189, 196, 198, 199, 201, 202, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 235, 261, 263, 264, 266, 275, 278, 280, 281, 284, 285, 294, 295, 296, 299, 308, 313, 314, 317, 318, 319, 320, 321, 323, 325, 326, 328, 329, 331, 334, 335, 337, 340, 342, 343, 345, 369, 390, 392, 393, 394], "conform": 2, "both": [2, 6, 9, 18, 21, 29, 94, 95, 97, 107, 108, 116, 120, 167, 176, 217, 220, 224, 225, 226, 313, 317, 319, 320, 322, 323, 326, 331, 334, 335, 337, 338, 343, 393], "regard": [2, 6, 9, 368], "tort": 2, "intellectu": 2, "properti": [2, 14, 29, 73, 91, 96, 97, 102, 103, 108, 117, 119, 120, 168, 186, 203, 259, 313, 315, 316, 317, 319, 323, 329, 331, 350], "protect": 2, "offer": [2, 33, 314, 328, 329, 331, 332, 334], "holder": [2, 108, 237], "econom": 2, "over": [2, 4, 9, 78, 96, 99, 108, 118, 128, 129, 130, 131, 139, 169, 170, 177, 193, 196, 199, 201, 202, 235, 284, 285, 296, 313, 317, 343], "The": [2, 5, 6, 7, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 66, 73, 74, 75, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 145, 153, 155, 156, 157, 158, 159, 161, 162, 164, 167, 168, 169, 170, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 189, 193, 194, 195, 196, 199, 201, 202, 203, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 264, 265, 266, 270, 275, 278, 279, 281, 282, 283, 284, 289, 295, 296, 299, 303, 307, 308, 313, 316, 318, 320, 321, 322, 323, 324, 325, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 359, 390, 392, 394, 396], "b1": [2, 53], "commissariat": 2, "l": [2, 20, 36, 53, 62, 66, 69, 73, 74, 75, 91, 104, 108, 171, 172, 217, 220, 223, 224, 225, 226, 261, 313, 317, 318, 320, 321, 323, 336, 337, 338, 343, 357, 387], "energi": [2, 42, 313, 331], "atomiqu": 2, "cea": 2, "public": [2, 5, 90, 329, 334, 383], "scientif": [2, 14, 81, 108, 252, 326, 334], "technic": [2, 9, 89], "industri": 2, "research": [2, 89, 91], "establish": [2, 313], "have": [2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 18, 20, 21, 32, 33, 36, 41, 45, 53, 57, 73, 74, 80, 82, 83, 84, 85, 87, 89, 93, 96, 97, 99, 108, 111, 122, 127, 139, 145, 155, 160, 164, 168, 174, 203, 211, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 264, 281, 308, 314, 317, 318, 319, 321, 322, 324, 325, 326, 328, 329, 330, 331, 332, 334, 335, 336, 338, 342, 343, 345, 353, 374, 384, 394], "princip": [2, 94, 98, 99, 104, 107, 111, 114, 121, 122, 313, 316, 317], "place": [2, 6, 7, 9, 53, 87, 93, 96, 108, 118, 135, 138, 192, 262, 290, 291, 317], "busi": 2, "25": [2, 9, 25, 33, 73, 74, 75, 91, 97, 108, 153, 317, 318, 319, 321, 326, 331, 334, 339, 340, 347], "rue": 2, "leblanc": 2, "immeubl": 2, "le": [2, 91, 108, 236, 246, 247, 315], "ponant": 2, "d": [2, 6, 7, 21, 22, 26, 33, 40, 42, 53, 75, 78, 88, 91, 93, 96, 108, 117, 137, 139, 145, 158, 160, 166, 169, 170, 175, 184, 197, 231, 274, 297, 301, 315, 318, 321, 322, 330, 331, 334, 345, 381], "75015": 2, "pari": [2, 334], "franc": 2, "centr": [2, 91], "nation": 2, "de": [2, 20, 41, 91, 313, 315, 326, 342], "la": [2, 91, 315], "recherch": 2, "scientifiqu": 2, "cnr": 2, "technolog": 2, "3": [2, 6, 7, 8, 17, 20, 21, 22, 24, 25, 26, 29, 33, 40, 41, 42, 45, 49, 57, 73, 74, 75, 81, 85, 86, 87, 88, 91, 93, 94, 96, 98, 99, 104, 105, 107, 108, 111, 113, 114, 116, 117, 121, 122, 136, 145, 150, 166, 168, 173, 174, 184, 189, 210, 211, 216, 217, 220, 224, 225, 226, 236, 246, 247, 270, 288, 301, 307, 308, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 358, 365, 373, 377, 381, 384, 396], "michel": 2, "ang": 2, "75794": 2, "cedex": 2, "16": [2, 20, 25, 36, 41, 73, 87, 91, 96, 108, 170, 317, 318, 319, 320, 321, 324, 326, 331, 333, 334, 335, 338, 340, 342, 343, 347], "institut": 2, "en": [2, 4, 7, 321, 334], "informatiqu": 2, "et": [2, 16, 19, 22, 26, 27, 38, 93, 94, 104, 107, 108, 114, 236, 279, 313, 315, 317, 319, 320], "automatiqu": 2, "inria": 2, "domain": [2, 61, 62, 108, 140, 142, 153, 162, 167, 176, 181, 182, 185, 295, 336, 341], "voluceau": 2, "rocquencourt": 2, "bp": [2, 317], "105": [2, 333], "78153": 2, "chesnai": 2, "preambl": [2, 334], "intend": [2, 81, 85], "give": [2, 6, 9, 78, 88, 90, 93, 94, 96, 108, 117, 136, 281, 317, 321, 322, 323, 326, 329, 330, 331, 333, 334, 336, 343], "signific": [2, 18, 74, 96, 319, 320, 334, 337, 392], "freedom": [2, 108, 284, 296], "modifi": [2, 6, 7, 10, 50, 92, 94, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 159, 198, 276, 277, 288, 309, 312, 326, 331, 333, 334, 340, 345, 374, 392], "redistribut": 2, "hereund": 2, "exercis": [2, 317], "condit": [2, 22, 93, 108, 111, 114, 160, 168, 324, 395, 396], "upon": [2, 81], "strong": [2, 89], "oblig": [2, 89], "credit": 2, "everybodi": 2, "incorpor": [2, 89, 108, 246], "rule": [2, 108, 152, 240, 275, 285, 294, 322, 324, 326, 350], "current": [2, 7, 9, 14, 20, 22, 41, 45, 80, 89, 90, 94, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 122, 145, 150, 190, 191, 192, 194, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 270, 283, 288, 300, 301, 303, 324, 325, 326, 328, 334], "so": [2, 4, 6, 7, 9, 10, 18, 21, 22, 25, 66, 78, 81, 84, 85, 87, 89, 93, 96, 107, 108, 114, 193, 236, 284, 288, 296, 313, 317, 319, 320, 321, 324, 325, 326, 329, 330, 331, 334, 337, 338, 339, 340, 343, 345, 353], "all": [2, 6, 7, 9, 10, 11, 14, 15, 23, 25, 33, 49, 50, 53, 73, 74, 83, 84, 85, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 104, 107, 108, 111, 113, 114, 116, 117, 121, 122, 127, 129, 130, 131, 139, 144, 145, 161, 163, 166, 168, 170, 177, 184, 193, 196, 199, 202, 203, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 264, 281, 282, 283, 313, 314, 316, 317, 318, 319, 321, 324, 325, 328, 329, 330, 331, 334, 336, 340, 342, 343, 351, 355, 383], "contribut": [2, 5, 13, 14, 86, 89, 104, 108, 139], "properli": [2, 95, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 358, 392], "identifi": [2, 53, 96, 97, 108, 117, 156, 318, 331], "acknowledg": [2, 90], "In": [2, 5, 6, 7, 9, 10, 17, 18, 20, 21, 22, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 48, 53, 57, 61, 62, 65, 66, 69, 73, 82, 83, 85, 87, 89, 91, 92, 93, 94, 95, 96, 99, 101, 104, 107, 108, 111, 113, 114, 116, 121, 122, 138, 156, 160, 168, 177, 193, 196, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 284, 296, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 338, 340, 343, 344, 387], "consider": [2, 89], "copi": [2, 6, 7, 9, 10, 13, 20, 41, 61, 73, 78, 84, 89, 96, 97, 108, 117, 127, 146, 147, 158, 163, 164, 173, 174, 183, 210, 211, 267, 307, 308, 319, 330, 332, 336, 340, 390], "provid": [2, 9, 10, 82, 88, 89, 93, 94, 96, 98, 99, 104, 105, 107, 108, 111, 113, 114, 116, 117, 121, 122, 127, 141, 163, 164, 168, 169, 170, 173, 174, 178, 210, 211, 223, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 275, 284, 294, 296, 300, 301, 303, 307, 308, 316, 319, 325, 326, 329, 330, 331, 334, 343, 344, 396], "onli": [2, 4, 5, 6, 7, 9, 10, 14, 18, 25, 32, 36, 53, 66, 73, 74, 82, 85, 86, 87, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 124, 127, 138, 139, 140, 142, 144, 155, 160, 162, 168, 169, 176, 180, 181, 182, 193, 203, 217, 218, 220, 221, 222, 224, 225, 226, 227, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 281, 295, 301, 303, 317, 318, 319, 320, 321, 322, 324, 325, 326, 329, 331, 333, 334, 335, 337, 341, 343, 345, 358, 377, 380, 395], "limit": [2, 23, 53, 78, 80, 94, 96, 108, 141, 143, 178, 217, 220, 224, 225, 226, 231, 238, 242, 246, 316, 317, 318, 320, 321, 322, 326, 329, 331, 334, 342, 343], "warranti": 2, "": [2, 5, 6, 9, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 40, 41, 42, 45, 54, 57, 66, 69, 73, 74, 75, 78, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 132, 138, 145, 159, 161, 163, 168, 192, 194, 211, 212, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 275, 288, 291, 294, 308, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347], "success": [2, 13, 93, 107, 313, 319, 325, 330, 343], "licensor": 2, "liabil": 2, "respect": [2, 6, 81, 104, 105, 107, 108, 114, 122, 176, 313, 319, 320, 323, 325, 326, 331, 333, 334, 342], "risk": [2, 89, 314, 329], "associ": [2, 6, 97, 108, 117, 139, 313, 321], "load": [2, 5, 17, 24, 25, 26, 36, 40, 42, 44, 51, 53, 57, 59, 65, 66, 73, 88, 95, 96, 108, 114, 117, 122, 216, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 313, 316, 317, 318, 319, 325, 331, 332, 337, 340, 348, 379, 387, 389], "develop": [2, 5, 10, 11, 12, 81, 82, 85, 87, 89, 90, 98, 104, 314, 324, 326, 328, 329, 349], "reproduc": [2, 14, 89, 99, 111, 114, 328], "brought": 2, "attent": [2, 9], "given": [2, 6, 9, 20, 25, 33, 41, 50, 73, 84, 89, 90, 93, 95, 96, 97, 98, 99, 101, 104, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 135, 139, 143, 145, 152, 161, 163, 164, 168, 173, 174, 177, 184, 193, 196, 199, 202, 210, 211, 218, 235, 237, 238, 240, 255, 262, 265, 266, 270, 273, 275, 278, 280, 283, 285, 293, 294, 307, 308, 309, 312, 313, 316, 317, 318, 319, 320, 321, 325, 326, 331, 340, 342, 343, 392], "statu": [2, 6, 93, 108, 281, 317, 336], "make": [2, 4, 7, 8, 9, 10, 14, 23, 36, 40, 41, 42, 74, 85, 86, 87, 88, 89, 92, 93, 94, 96, 97, 108, 114, 117, 118, 123, 136, 140, 142, 150, 151, 157, 162, 167, 169, 171, 172, 176, 178, 180, 181, 182, 185, 198, 214, 215, 255, 261, 263, 279, 281, 295, 314, 317, 318, 319, 321, 330, 331, 332, 334, 339, 340, 343, 345, 372, 377], "complic": 2, "reserv": [2, 203, 314, 334], "experienc": [2, 9, 329], "profession": 2, "depth": [2, 50, 86, 334], "comput": [2, 20, 21, 22, 24, 83, 89, 91, 93, 94, 95, 98, 99, 101, 107, 108, 111, 113, 114, 116, 118, 121, 122, 139, 141, 152, 157, 160, 178, 201, 266, 284, 285, 296, 317, 319, 320, 321, 325, 331, 334, 340, 343], "knowledg": [2, 89, 326], "therefor": [2, 7, 73, 96, 108, 160, 163, 169, 314, 329], "encourag": [2, 4, 5, 6, 7, 10], "test": [2, 6, 8, 10, 11, 13, 21, 29, 47, 48, 61, 62, 73, 74, 75, 81, 84, 106, 108, 112, 116, 128, 131, 236, 247, 323, 326, 331, 333, 336, 338, 340, 344, 350, 351, 356, 357, 366, 367, 369, 373, 376, 390], "suitabl": [2, 98, 116, 334], "requir": [2, 6, 7, 9, 11, 24, 66, 78, 81, 82, 83, 84, 85, 87, 89, 107, 108, 114, 118, 163, 168, 275, 317, 319, 321, 325, 329, 335, 337, 341, 350, 373], "enabl": [2, 32, 74, 84, 108, 114, 168, 299, 318, 329, 377], "secur": [2, 84], "system": [2, 6, 12, 18, 81, 84, 86, 91, 92, 93, 99, 212, 324, 325, 350], "more": [2, 6, 7, 9, 10, 12, 14, 21, 24, 36, 40, 57, 78, 81, 85, 88, 89, 90, 93, 97, 99, 101, 108, 114, 115, 116, 141, 143, 158, 168, 178, 266, 278, 313, 314, 316, 317, 318, 325, 328, 329, 332, 334, 343, 345, 352, 358, 374], "gener": [2, 7, 8, 10, 11, 13, 21, 29, 40, 42, 45, 54, 69, 74, 84, 89, 93, 96, 99, 107, 108, 111, 116, 117, 132, 176, 177, 181, 193, 196, 203, 216, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 288, 300, 313, 314, 319, 320, 321, 323, 325, 326, 329, 331, 334, 336, 340, 342, 343, 345, 348, 375, 389], "oper": [2, 6, 9, 11, 12, 23, 33, 41, 42, 83, 86, 96, 99, 104, 108, 129, 130, 139, 145, 152, 168, 199, 201, 202, 233, 283, 284, 285, 296, 317, 318, 326, 329, 331, 332, 335, 336, 339, 341, 342, 345, 350, 353, 365, 396], "same": [2, 4, 5, 9, 20, 21, 22, 24, 29, 33, 41, 45, 52, 55, 57, 59, 74, 78, 93, 94, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 127, 136, 139, 145, 146, 147, 150, 152, 157, 164, 174, 190, 201, 211, 223, 236, 237, 267, 281, 284, 285, 296, 308, 317, 318, 319, 322, 325, 326, 329, 331, 336, 338, 339, 340, 342, 343, 345], "freeli": 2, "alter": [2, 334], "provis": 2, "either": [2, 6, 7, 20, 21, 45, 78, 86, 89, 93, 94, 96, 99, 108, 116, 138, 139, 168, 246, 267, 313, 317, 319, 320, 325, 331, 334], "ad": [2, 6, 7, 8, 9, 13, 20, 22, 83, 89, 90, 94, 108, 117, 164, 174, 211, 225, 238, 303, 308, 313, 317, 332, 350, 356, 357, 364, 365, 366, 367, 370, 390, 394, 395], "herefrom": 2, "appli": [2, 7, 25, 42, 61, 62, 69, 74, 78, 91, 94, 97, 98, 99, 101, 104, 107, 108, 111, 113, 114, 116, 121, 122, 140, 142, 145, 146, 147, 151, 155, 156, 162, 167, 168, 171, 172, 176, 180, 181, 182, 185, 198, 213, 214, 215, 216, 261, 263, 266, 267, 278, 281, 283, 295, 299, 317, 319, 321, 329, 331, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 394], "ani": [2, 6, 7, 9, 12, 14, 53, 83, 85, 86, 89, 90, 92, 94, 96, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 128, 129, 130, 132, 138, 145, 157, 168, 199, 202, 214, 216, 218, 221, 222, 227, 265, 266, 275, 278, 283, 299, 313, 317, 319, 321, 325, 326, 328, 329, 330, 334, 335, 390], "decid": [2, 9], "submit": [2, 6, 7], "thereof": 2, "articl": [2, 6, 91, 315, 334], "1": [2, 7, 8, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 83, 84, 85, 87, 88, 91, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 129, 130, 132, 136, 137, 139, 140, 143, 145, 150, 152, 157, 158, 159, 162, 163, 166, 168, 170, 174, 176, 177, 180, 181, 182, 184, 189, 193, 196, 199, 201, 202, 203, 210, 211, 216, 217, 220, 223, 224, 225, 226, 231, 234, 235, 236, 238, 246, 247, 251, 252, 266, 274, 275, 277, 278, 280, 281, 282, 284, 285, 294, 295, 296, 297, 299, 301, 307, 308, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 381, 390, 395, 396], "definit": [2, 9, 32, 74, 85, 86, 87, 108, 217, 220, 223, 224, 225, 226, 275, 281, 294, 325, 326, 340, 396], "For": [2, 4, 5, 6, 7, 9, 11, 12, 20, 21, 22, 23, 36, 41, 53, 65, 66, 74, 78, 81, 82, 84, 86, 88, 90, 93, 94, 96, 107, 108, 111, 116, 125, 126, 129, 132, 140, 141, 142, 143, 144, 145, 151, 152, 162, 167, 168, 171, 172, 176, 178, 181, 182, 185, 198, 199, 201, 214, 215, 216, 217, 261, 263, 281, 283, 284, 285, 295, 296, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340, 342, 343, 345, 347, 388], "purpos": [2, 6, 9, 24, 88, 89, 320, 326, 329, 331, 342], "follow": [2, 4, 5, 6, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 66, 73, 74, 75, 78, 81, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 104, 107, 108, 116, 145, 168, 216, 240, 264, 270, 280, 283, 314, 317, 318, 319, 320, 321, 324, 325, 326, 328, 329, 330, 331, 333, 334, 343], "express": [2, 9, 17, 42, 78, 104, 108, 118, 162, 180, 203, 218, 219, 221, 222, 227, 228, 229, 323, 334, 340], "commenc": 2, "capit": [2, 9], "letter": [2, 6, 9, 104, 331, 334], "thei": [2, 5, 6, 7, 9, 12, 81, 83, 89, 97, 99, 108, 117, 236, 246, 247, 314, 319, 320, 321, 322, 325, 326, 329, 331, 334, 335, 337, 340, 343, 351, 374, 392], "shall": 2, "mean": [2, 9, 10, 19, 23, 36, 50, 94, 96, 97, 99, 101, 106, 108, 111, 112, 116, 127, 139, 157, 160, 170, 192, 266, 267, 284, 285, 291, 296, 317, 323, 329, 335, 342, 358], "possibl": [2, 4, 5, 6, 7, 9, 12, 24, 32, 33, 40, 81, 84, 94, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 127, 174, 216, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 314, 317, 319, 320, 321, 324, 326, 331, 333, 334, 335, 337, 343, 359, 360, 376, 392, 396], "subsequ": [2, 10, 94, 98, 99, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 330, 334], "annex": 2, "object": [2, 5, 7, 9, 18, 20, 22, 24, 25, 26, 29, 32, 33, 36, 40, 45, 73, 74, 75, 90, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 140, 142, 143, 145, 146, 147, 150, 155, 156, 159, 162, 163, 164, 166, 167, 169, 170, 173, 174, 176, 177, 180, 181, 182, 184, 185, 186, 189, 190, 191, 192, 193, 194, 196, 199, 202, 210, 211, 213, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 267, 273, 280, 281, 282, 283, 286, 288, 292, 293, 295, 300, 301, 303, 307, 308, 313, 318, 319, 320, 322, 323, 324, 325, 326, 329, 333, 334, 341, 342, 357, 388, 392], "form": [2, 9, 91, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 162, 176, 180, 181, 182, 231, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 267, 281, 313, 319, 325, 326, 331, 334, 336, 343], "where": [2, 5, 6, 7, 9, 11, 15, 36, 49, 50, 73, 74, 75, 78, 84, 87, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 132, 140, 141, 143, 162, 166, 169, 175, 176, 178, 180, 181, 182, 193, 197, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 278, 281, 284, 296, 299, 300, 301, 303, 313, 314, 317, 318, 322, 325, 331, 332, 334, 336, 339, 340, 344], "applic": [2, 6, 11, 50, 75, 81, 84, 85, 88, 89, 91, 92, 96, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 313, 314, 317, 319, 325, 329, 331, 332, 350], "document": [2, 6, 9, 13, 33, 45, 66, 81, 82, 85, 87, 89, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 137, 158, 168, 175, 197, 231, 266, 274, 297, 321, 328, 329, 332, 334, 357, 358, 359, 363, 364, 378, 382, 383, 386, 390], "license": 2, "accept": [2, 6, 9, 84, 108, 116, 124, 348, 350, 360, 387, 389, 390, 394, 395], "initi": [2, 5, 7, 21, 22, 73, 89, 93, 94, 95, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 159, 163, 164, 316, 317, 326, 329, 331, 334, 343, 349, 350], "possibli": [2, 96, 108, 321], "first": [2, 5, 6, 7, 9, 10, 11, 17, 20, 21, 22, 24, 29, 41, 45, 50, 53, 54, 69, 78, 82, 83, 84, 86, 88, 93, 94, 96, 97, 99, 104, 105, 107, 108, 111, 113, 114, 116, 118, 121, 122, 127, 128, 131, 138, 156, 168, 203, 214, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 267, 270, 275, 286, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 333, 334, 337, 338, 340, 341, 342, 343, 390], "under": [2, 9, 89, 90, 92, 316, 359], "term": [2, 99, 106, 107, 108, 111, 112, 118, 142, 313, 319, 323], "least": [2, 5, 32, 33, 36, 91, 94, 101, 106, 107, 108, 112, 113, 116, 136, 141, 157, 168, 178, 279, 299, 313, 316, 317, 319, 334, 390, 392, 396], "one": [2, 6, 7, 9, 10, 20, 21, 22, 24, 33, 40, 41, 42, 54, 66, 81, 84, 86, 92, 93, 96, 97, 98, 99, 100, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 128, 129, 130, 131, 139, 143, 144, 145, 164, 166, 168, 173, 174, 184, 192, 199, 201, 202, 211, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 282, 284, 285, 291, 296, 300, 301, 308, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 329, 330, 331, 333, 334, 335, 337, 340, 342, 343, 352, 375, 388], "instruct": [2, 6, 10, 81, 83, 86, 324, 347, 364], "line": [2, 6, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 66, 73, 74, 75, 78, 82, 85, 89, 92, 94, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 137, 157, 162, 175, 197, 203, 205, 217, 220, 223, 224, 225, 226, 274, 297, 313, 318, 319, 320, 321, 326, 331, 333, 334, 341, 387, 388], "binari": [2, 108, 117, 194, 314, 326, 331, 332, 335, 336, 338, 341], "origin": [2, 6, 7, 9, 12, 16, 17, 20, 21, 22, 26, 27, 29, 33, 38, 41, 46, 50, 57, 65, 66, 69, 94, 95, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 127, 145, 156, 160, 162, 180, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 288, 311, 313, 317, 318, 319, 320, 325, 326, 331, 334, 335, 337, 338, 339, 341, 343, 345], "from": [2, 5, 6, 7, 9, 10, 13, 14, 15, 16, 19, 22, 24, 27, 29, 33, 38, 40, 50, 53, 57, 64, 65, 67, 71, 73, 75, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 131, 132, 136, 141, 145, 156, 157, 159, 161, 163, 164, 166, 167, 169, 170, 173, 174, 177, 178, 183, 184, 185, 193, 194, 195, 196, 210, 211, 212, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 270, 278, 279, 282, 283, 284, 287, 288, 289, 296, 300, 301, 303, 307, 308, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 332, 334, 336, 339, 340, 342, 343, 344, 345, 350, 369, 372, 376, 383, 387, 392, 394, 395, 396], "compil": 2, "contributor": [2, 5, 7, 108, 324], "made": [2, 5, 6, 53, 85, 96, 97, 104, 108, 156, 233, 246, 248, 313, 321, 323, 325, 326, 342, 370], "individu": [2, 5, 7, 10, 36, 41, 45, 106, 108, 112, 127, 217, 220, 224, 225, 226, 314, 318, 321, 331, 334, 335, 376], "legal": 2, "entiti": 2, "who": [2, 328], "modif": [2, 11, 108, 331, 357], "correct": [2, 4, 6, 7, 10, 35, 37, 38, 66, 71, 72, 73, 76, 85, 87, 89, 90, 91, 93, 94, 95, 107, 108, 113, 121, 136, 138, 141, 153, 157, 171, 172, 178, 214, 215, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 272, 279, 300, 301, 303, 313, 316, 321, 322, 326, 337, 341, 350, 351, 352, 353, 355, 356, 357, 379, 386, 394, 395], "translat": [2, 89], "adapt": [2, 10, 13, 14, 16, 27, 38, 82, 107, 108, 110, 117, 121, 194, 236, 330], "new": [2, 6, 7, 9, 10, 14, 33, 36, 40, 48, 73, 78, 83, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 128, 131, 140, 142, 145, 151, 152, 156, 162, 163, 164, 167, 170, 171, 172, 173, 174, 176, 180, 181, 182, 185, 198, 201, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 238, 261, 263, 267, 280, 281, 282, 283, 284, 285, 286, 288, 293, 295, 296, 307, 308, 313, 317, 319, 323, 324, 325, 329, 330, 333, 334, 336, 338, 345, 347], "function": [2, 5, 7, 9, 10, 21, 22, 23, 40, 62, 69, 73, 74, 78, 82, 85, 87, 93, 96, 99, 100, 101, 104, 105, 107, 108, 111, 113, 114, 115, 125, 126, 138, 140, 141, 142, 151, 158, 160, 162, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 180, 181, 182, 184, 185, 197, 198, 213, 214, 215, 216, 223, 231, 233, 236, 246, 247, 261, 263, 266, 267, 274, 281, 284, 295, 299, 300, 313, 318, 321, 324, 325, 326, 329, 332, 333, 334, 339, 341, 343, 345, 350, 356, 357, 363, 382, 388, 396], "integr": [2, 6, 13, 22, 73, 75, 89, 93, 98, 99, 104, 105, 107, 108, 111, 114, 121, 122, 152, 275, 285, 294, 316, 329, 343, 350, 359, 396], "well": [2, 6, 10, 14, 21, 46, 85, 86, 87, 108, 116, 168, 319, 320, 325, 334], "intern": [2, 84, 89, 94, 98, 99, 104, 105, 107, 111, 113, 114, 116, 117, 121, 122, 326, 329, 331, 374], "modul": [2, 7, 9, 83, 85, 317, 326, 327, 343, 363, 392], "set": [2, 5, 6, 7, 9, 18, 19, 21, 23, 29, 32, 45, 53, 73, 74, 78, 84, 89, 92, 93, 94, 96, 97, 99, 104, 106, 107, 108, 111, 112, 113, 114, 117, 128, 129, 130, 131, 138, 155, 156, 160, 161, 163, 164, 168, 173, 174, 184, 193, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 233, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 267, 270, 284, 285, 296, 300, 301, 307, 308, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 332, 334, 337, 339, 340, 342, 343, 345, 350, 353, 360, 371, 374, 392, 396], "supplementari": [2, 107, 326], "servic": 2, "addit": [2, 6, 7, 9, 40, 53, 82, 89, 93, 96, 97, 108, 114, 116, 122, 140, 142, 153, 159, 168, 217, 218, 220, 221, 222, 224, 225, 226, 227, 238, 275, 294, 313, 314, 321, 331, 332, 335, 340, 343, 350, 365, 387], "those": [2, 7, 9, 22, 84, 93, 96, 97, 98, 107, 108, 115, 117, 127, 143, 156, 168, 317, 320, 328, 334, 340, 345], "extern": [2, 6, 48, 73, 74, 91, 93, 98, 99, 104, 105, 107, 111, 113, 114, 116, 121, 122, 315, 332, 343, 351, 357], "deriv": [2, 69, 83, 91, 93, 99, 101, 108, 266, 313, 315, 319, 321, 343], "run": [2, 4, 6, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 83, 84, 85, 86, 87, 90, 93, 94, 95, 99, 108, 113, 114, 136, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 316, 317, 319, 324, 325, 328, 329, 330, 390], "separ": [2, 6, 9, 53, 82, 84, 93, 94, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 135, 157, 212, 262, 313, 321, 325, 334, 342, 351], "address": [2, 84, 108, 342], "space": [2, 9, 26, 81, 96, 98, 99, 101, 104, 107, 108, 111, 113, 114, 116, 121, 122, 132, 177, 193, 196, 203, 266, 313, 321, 323, 326, 330, 333, 334, 342, 392, 395], "call": [2, 7, 9, 24, 82, 87, 94, 96, 98, 99, 100, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 169, 174, 194, 236, 246, 247, 288, 313, 317, 320, 323, 325, 326, 329, 330, 333, 339, 340, 382, 388], "connect": [2, 6, 7, 83, 86, 369, 390], "execut": [2, 21, 27, 30, 34, 37, 43, 51, 55, 57, 58, 63, 67, 70, 76, 79, 83, 85, 87, 93, 96, 108, 117, 123, 169, 170, 217, 220, 224, 225, 226, 264, 265, 324, 325, 348, 389], "parti": [2, 9, 326], "These": [2, 9, 10, 24, 86, 89, 318, 320, 321, 325, 329, 331, 334, 337, 343, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "singular": [2, 94, 98, 99, 104, 107, 111, 114, 116, 121, 122, 313], "plural": 2, "non": [2, 4, 6, 93, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 128, 131, 136, 141, 145, 157, 178, 193, 240, 243, 266, 279, 295, 313, 316, 317, 319, 325, 334, 338, 340, 350, 371, 392, 395], "exclus": [2, 108, 168], "transfer": 2, "worldwid": 2, "forth": 2, "5": [2, 17, 18, 21, 22, 24, 25, 26, 29, 32, 33, 36, 50, 53, 66, 69, 73, 74, 75, 85, 87, 88, 91, 93, 94, 95, 96, 97, 101, 107, 108, 116, 117, 122, 145, 159, 168, 170, 176, 182, 210, 266, 278, 307, 308, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 358, 381], "hereinaft": 2, "whole": [2, 45, 74, 83, 108, 160, 317, 318, 321], "said": [2, 85], "deem": 2, "occurr": 2, "event": [2, 93], "notabl": 2, "download": [2, 6, 9, 11, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 80, 81, 82, 84, 85, 86, 87, 108, 236, 319, 344, 372, 376, 390], "remot": [2, 6, 86], "server": [2, 9, 11, 45, 83, 84], "physic": [2, 91, 118], "medium": [2, 9, 334], "ii": [2, 74, 108, 146, 147, 317, 319, 320, 333, 340], "time": [2, 5, 6, 7, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 81, 83, 84, 85, 87, 88, 93, 94, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 124, 136, 140, 142, 153, 162, 167, 168, 169, 176, 180, 181, 182, 185, 248, 288, 295, 311, 313, 317, 318, 319, 320, 321, 322, 323, 325, 326, 328, 332, 333, 334, 335, 336, 341, 342, 345, 387, 390], "One": [2, 6, 7, 86, 96, 108, 317, 331, 339, 341, 345], "contain": [2, 5, 6, 7, 21, 22, 29, 45, 48, 57, 81, 88, 89, 93, 94, 96, 97, 99, 105, 108, 111, 114, 115, 117, 122, 123, 135, 139, 152, 156, 157, 168, 201, 212, 218, 221, 222, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 262, 284, 285, 296, 317, 318, 319, 320, 321, 323, 326, 328, 331, 333, 336, 356, 390, 397], "relat": [2, 5, 9, 96, 108, 288, 313, 326, 334, 348, 360, 384, 389, 393], "characterist": [2, 78, 329], "fact": [2, 36, 319, 329], "restrict": [2, 108, 323, 330], "ha": [2, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 36, 41, 50, 65, 73, 81, 85, 87, 89, 95, 96, 97, 99, 104, 106, 108, 112, 114, 117, 122, 144, 159, 167, 168, 169, 183, 216, 218, 221, 222, 227, 236, 246, 247, 284, 296, 313, 317, 319, 320, 321, 325, 326, 329, 330, 331, 333, 334, 336, 337, 338, 339, 340, 342, 352, 370, 390, 392, 394, 395, 396], "been": [2, 5, 6, 10, 11, 13, 14, 20, 45, 50, 73, 81, 84, 85, 87, 89, 95, 96, 97, 108, 159, 183, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 317, 319, 321, 325, 326, 329, 331, 333, 334, 336, 338, 339, 340, 342, 345, 352, 370, 374, 390, 392, 394, 395, 396], "prior": [2, 320, 339], "hereinabov": 2, "herebi": 2, "understood": 2, "4": [2, 7, 8, 19, 21, 22, 23, 24, 25, 26, 29, 33, 45, 47, 53, 57, 66, 69, 73, 74, 75, 78, 85, 87, 88, 91, 93, 96, 97, 108, 117, 118, 142, 170, 217, 220, 224, 225, 226, 236, 240, 246, 247, 251, 308, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "effect": [2, 6, 65, 91, 108, 167, 168, 236, 246, 247, 281, 315, 316, 319, 331, 334, 336, 337, 343], "date": [2, 5, 6, 7, 9, 10, 45, 86, 88, 108, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 322, 332, 342, 345, 374, 381], "AND": [2, 108, 128], "becom": [2, 9, 108, 143, 340], "remain": [2, 7, 10, 22, 29, 96, 108, 135, 157, 168, 262, 313, 320, 323, 336], "forc": [2, 7, 96, 97, 106, 108, 112, 189, 190, 272, 288, 330, 334, 345], "entir": [2, 7, 89, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "scope": 2, "OF": [2, 334], "basi": [2, 7, 108, 217, 220, 224, 225, 226, 313], "besid": [2, 9, 324, 343], "come": [2, 5, 96, 108, 233, 318, 324, 325, 326], "patent": 2, "compon": [2, 9, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 32, 36, 74, 89, 93, 94, 98, 99, 102, 103, 104, 107, 108, 111, 113, 114, 116, 119, 120, 121, 122, 155, 183, 186, 217, 220, 224, 225, 226, 259, 313, 316, 317, 318, 319, 323, 325], "undertak": 2, "enforc": [2, 107], "against": [2, 6, 96, 108, 128, 129, 130, 131, 199, 201, 202, 233, 284, 285, 296], "exploit": 2, "If": [2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 45, 80, 82, 84, 85, 87, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 135, 138, 139, 140, 141, 142, 143, 144, 150, 151, 155, 156, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 190, 193, 196, 198, 199, 201, 202, 203, 210, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 270, 275, 278, 280, 281, 282, 284, 285, 288, 290, 291, 294, 295, 296, 299, 300, 301, 303, 307, 308, 317, 319, 321, 324, 325, 329, 330, 331, 333, 334, 336, 339, 345, 384, 392], "transfere": 2, "subscrib": 2, "paragraph": [2, 9], "without": [2, 7, 9, 49, 83, 89, 95, 101, 108, 151, 163, 167, 168, 185, 198, 236, 238, 246, 247, 263, 266, 313, 314, 317, 319, 321, 324, 329, 334, 335, 342, 369], "being": [2, 4, 7, 9, 11, 33, 84, 89, 108, 282, 321], "specifi": [2, 5, 9, 24, 50, 53, 84, 94, 96, 98, 99, 101, 104, 107, 108, 110, 111, 113, 114, 116, 117, 118, 121, 122, 127, 128, 132, 135, 139, 140, 142, 143, 144, 145, 146, 147, 151, 155, 157, 159, 162, 166, 167, 168, 170, 171, 172, 176, 177, 180, 181, 182, 184, 185, 193, 196, 198, 201, 214, 215, 216, 217, 220, 224, 225, 226, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 261, 262, 263, 266, 278, 281, 284, 285, 295, 296, 299, 300, 301, 303, 325, 326, 330, 331, 333, 334, 342, 345, 371], "compris": [2, 321], "perman": [2, 87, 325, 334], "temporari": [2, 334, 350], "reproduct": 2, "displai": [2, 9, 20, 24, 25, 26, 40, 41, 53, 84, 94, 96, 97, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 203, 217, 220, 224, 225, 226, 272, 317, 319, 320, 324, 325, 326, 328, 329, 330, 331, 333, 334, 336, 339, 342, 343, 345, 360, 367, 368, 374, 383, 390, 396], "store": [2, 6, 36, 50, 78, 93, 100, 107, 108, 238, 240, 319, 320, 323, 328, 331, 333, 336, 339, 340, 348, 356, 374, 379, 389], "entitl": 2, "observ": [2, 20, 91, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 266, 278, 299, 313, 315, 320, 323, 345], "studi": [2, 91, 313, 315], "determin": [2, 5, 17, 24, 91, 94, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 127, 169, 218, 219, 237, 279, 313, 317, 320, 321, 322, 330, 331, 339, 343], "idea": [2, 9, 14], "behind": 2, "constitu": 2, "element": [2, 33, 96, 108, 111, 118, 125, 126, 128, 129, 130, 131, 143, 152, 166, 168, 184, 196, 199, 201, 202, 284, 285, 287, 296, 313, 318, 326, 330, 332, 334, 339, 340, 342], "carri": [2, 121, 313, 319], "out": [2, 6, 22, 90, 95, 96, 97, 99, 108, 111, 118, 121, 128, 132, 138, 145, 160, 167, 185, 265, 267, 283, 301, 303, 313, 317, 319, 321, 325, 329, 333, 334, 340, 342, 343], "transmiss": 2, "storag": 2, "TO": [2, 84, 334], "arrang": [2, 203, 342], "explicit": [2, 93, 96, 97, 108, 116, 327], "indic": [2, 4, 9, 10, 19, 24, 53, 73, 85, 87, 94, 96, 104, 107, 108, 114, 124, 129, 130, 144, 157, 168, 199, 202, 213, 280, 287, 313, 317, 319, 320, 323, 325, 326, 339, 340, 342, 357], "creation": [2, 39, 43, 56, 58, 59, 84, 96, 108, 117, 123, 227, 265, 319, 326, 331, 332, 350, 363], "particular": [2, 89, 108, 116, 118, 160, 314, 317, 318, 321, 337, 342], "transmit": 2, "commun": [2, 6, 14, 89], "market": 2, "fee": 2, "charg": 2, "further": [2, 6, 9, 11, 83, 84, 86, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 321], "unmodifi": 2, "third": [2, 9, 18, 25, 107, 108, 156, 203, 313, 319, 323, 331], "accord": [2, 97, 104, 108, 139, 168, 240, 293, 313, 323, 324, 334, 374], "true": [2, 9, 20, 25, 32, 33, 36, 41, 48, 49, 61, 62, 73, 74, 78, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 124, 127, 128, 129, 130, 131, 138, 140, 142, 145, 150, 151, 152, 160, 162, 167, 168, 171, 172, 176, 177, 180, 181, 182, 185, 189, 190, 193, 196, 198, 199, 201, 202, 203, 210, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 267, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 295, 296, 309, 310, 311, 312, 317, 318, 319, 320, 321, 322, 325, 326, 331, 333, 334, 335, 336, 338, 339, 340, 344, 345, 371], "compli": 2, "accompani": 2, "8": [2, 7, 9, 18, 20, 25, 32, 53, 62, 65, 66, 69, 73, 74, 78, 84, 88, 91, 93, 108, 117, 122, 155, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347], "9": [2, 6, 7, 20, 23, 25, 33, 36, 41, 45, 73, 74, 75, 81, 88, 91, 96, 108, 117, 118, 156, 170, 237, 314, 317, 318, 319, 320, 321, 322, 323, 324, 326, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 345, 347, 373], "allow": [2, 3, 6, 7, 9, 11, 12, 14, 24, 40, 83, 84, 89, 93, 95, 96, 97, 98, 108, 138, 168, 170, 238, 280, 317, 318, 319, 323, 325, 326, 328, 331, 332, 333, 335, 336, 340, 345, 348, 372, 374, 389, 394, 396], "full": [2, 6, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 89, 108, 114, 159, 163, 164, 168, 174, 210, 211, 307, 308, 317, 321, 322, 325, 326, 331, 334, 337, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "minimum": [2, 5, 7, 23, 81, 96, 108, 114, 129, 130, 134, 139, 142, 143, 199, 202, 233, 313, 318, 321, 334, 338], "dure": [2, 4, 7, 10, 19, 23, 84, 94, 96, 106, 108, 112, 115, 168, 288, 314, 318, 319, 324, 331, 332, 334, 350, 392], "period": 2, "cost": [2, 89], "acquir": [2, 331], "exce": 2, "than": [2, 9, 12, 26, 66, 84, 93, 101, 107, 108, 114, 115, 116, 143, 155, 156, 164, 167, 168, 185, 266, 281, 282, 301, 319, 321, 323, 324, 325, 328, 330, 331, 334, 336, 340, 343, 352, 395], "subject": [2, 6, 89, 90, 107, 108, 313, 314, 326, 331, 332], "do": [2, 6, 7, 9, 10, 11, 12, 14, 15, 17, 22, 24, 25, 36, 41, 42, 54, 57, 78, 83, 84, 85, 86, 87, 89, 92, 108, 114, 138, 164, 237, 313, 319, 320, 321, 322, 325, 326, 328, 331, 334, 345, 371], "expressli": 2, "agre": 2, "written": [2, 10, 122, 326, 329], "easili": [2, 7, 9, 26, 57, 86, 87, 89, 318, 319, 321, 325, 329, 331, 333, 340, 342], "format": [2, 4, 7, 8, 9, 10, 14, 23, 26, 45, 48, 50, 54, 69, 90, 95, 108, 109, 110, 116, 117, 154, 165, 187, 218, 221, 222, 227, 237, 270, 298, 300, 301, 303, 317, 318, 327, 328, 330, 331, 333, 334, 343, 350, 374, 379, 381, 395], "interfac": [2, 84, 85, 87, 88, 89, 91, 100, 313, 328, 329, 334, 343], "mention": [2, 5, 12, 321, 325, 326], "websit": [2, 22, 45, 83], "describ": [2, 5, 6, 9, 97, 108, 117, 156, 313, 317, 320, 326, 329, 330, 331, 334, 343], "throughout": [2, 4, 7, 321, 326], "avail": [2, 5, 6, 7, 29, 32, 53, 66, 73, 74, 81, 101, 108, 116, 161, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 292, 303, 317, 325, 331, 334, 337, 390, 394, 396], "best": [2, 6, 36, 53, 54, 62, 69, 73, 83, 106, 108, 112, 116, 157, 318, 320, 322, 334, 343], "effort": 2, "whether": [2, 6, 81, 86, 93, 94, 96, 97, 104, 106, 107, 108, 112, 113, 116, 122, 128, 131, 158, 160, 168, 193, 248, 255, 319, 320, 334, 342], "design": [2, 5, 90, 316, 329, 334], "forego": 2, "compat": [2, 9, 45, 96, 97, 105, 108, 118, 124, 127, 145, 189, 212, 214, 236, 240, 246, 247, 283, 314, 319, 326, 331, 332, 334, 335, 345, 348, 350, 357, 358, 365, 366, 373, 377, 378, 381, 384, 389, 394, 396], "WITH": 2, "THE": 2, "option": [2, 5, 9, 13, 21, 53, 81, 84, 86, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 190, 193, 194, 196, 198, 199, 201, 202, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 273, 275, 278, 279, 280, 281, 282, 284, 285, 286, 288, 293, 294, 295, 296, 299, 300, 301, 303, 307, 308, 317, 318, 319, 324, 326, 331, 334, 336, 364, 396], "case": [2, 5, 6, 7, 9, 24, 40, 45, 73, 74, 82, 84, 89, 93, 94, 96, 98, 99, 101, 104, 107, 108, 111, 113, 114, 116, 121, 122, 128, 131, 132, 138, 139, 168, 176, 177, 193, 196, 235, 266, 313, 317, 318, 321, 322, 324, 325, 326, 328, 329, 331, 337, 338, 339, 343, 345, 393], "durat": 2, "owner": 2, "defin": [2, 6, 7, 9, 19, 22, 23, 25, 32, 33, 36, 42, 45, 49, 73, 74, 75, 78, 93, 94, 96, 97, 105, 106, 107, 108, 112, 113, 116, 117, 127, 140, 145, 157, 168, 216, 217, 220, 224, 225, 226, 237, 238, 266, 278, 280, 283, 287, 299, 317, 318, 319, 321, 322, 325, 331, 334, 343, 393, 394, 396], "choos": [2, 69, 81, 317, 321, 328, 329, 343], "type": [2, 4, 5, 6, 7, 20, 21, 42, 50, 73, 78, 85, 86, 87, 92, 93, 95, 96, 101, 106, 108, 112, 114, 116, 117, 124, 125, 126, 129, 132, 137, 139, 152, 159, 160, 163, 164, 166, 169, 170, 173, 174, 175, 177, 184, 193, 196, 197, 199, 201, 203, 204, 206, 207, 208, 210, 211, 213, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 236, 246, 247, 251, 253, 254, 266, 274, 278, 284, 285, 296, 297, 300, 307, 308, 317, 321, 324, 325, 326, 328, 329, 330, 338, 340, 343], "joint": 2, "manner": [2, 4], "attach": [2, 12, 330], "ident": [2, 54, 108, 117, 166], "directli": [2, 7, 9, 33, 84, 89, 96, 99, 107, 108, 168, 169, 177, 196, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 313, 317, 318, 319, 320, 326, 329, 330, 331, 334, 343], "indirectli": 2, "infring": 2, "take": [2, 6, 7, 10, 12, 32, 33, 41, 53, 83, 84, 85, 87, 89, 96, 99, 108, 111, 144, 153, 160, 167, 168, 284, 331, 335, 337, 340, 342, 390], "vi": [2, 22], "staff": [2, 89], "measur": [2, 22, 24, 29, 50, 71, 72, 76, 91, 108, 111, 113, 116, 168, 255, 284, 296, 313, 317, 321, 323, 331], "7": [2, 7, 20, 22, 24, 26, 41, 42, 45, 69, 74, 75, 88, 91, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 152, 217, 220, 224, 225, 226, 285, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 350, 384, 390], "circumst": 2, "assist": 2, "mainten": 2, "howev": [2, 6, 7, 9, 10, 20, 45, 65, 73, 96, 108, 128, 131, 231, 284, 288, 296, 314, 318, 319, 320, 325, 326, 328, 331, 333, 334, 337, 343], "instrument": [2, 5, 29, 89, 91, 323, 326], "incur": 2, "similarli": [2, 203, 325, 342, 343], "sole": [2, 89], "respons": [2, 89, 116], "bind": [2, 84], "itself": [2, 10, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 266, 278, 325], "financi": [2, 89], "claim": [2, 329], "compens": 2, "direct": [2, 7, 9, 83, 108, 168, 185, 270, 280, 317, 319, 325, 326, 334], "loss": 2, "suffer": [2, 334], "fault": 2, "relev": [2, 5, 6, 9, 10, 73, 107, 114, 313], "evid": 2, "commit": [2, 4, 13, 347], "due": [2, 4, 11, 18, 36, 84, 108, 138, 212, 321, 335, 344, 345, 392], "total": [2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 96, 106, 107, 108, 112, 116, 313, 323], "partial": [2, 116, 313, 316, 331, 390], "failur": [2, 4, 334], "fulfil": [2, 108, 168], "consequenti": 2, "perform": [2, 6, 10, 17, 18, 20, 21, 22, 24, 25, 26, 29, 32, 33, 36, 41, 42, 61, 73, 75, 83, 91, 94, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 127, 128, 131, 136, 138, 140, 141, 142, 143, 150, 151, 157, 160, 162, 167, 170, 171, 172, 176, 178, 181, 182, 185, 198, 216, 217, 220, 224, 225, 226, 236, 261, 263, 275, 279, 281, 294, 295, 315, 317, 318, 319, 322, 326, 328, 331, 334, 335, 336, 337, 338, 339, 392, 394, 396], "iii": [2, 317, 319, 320], "pecuniari": 2, "e": [2, 5, 6, 7, 9, 20, 21, 22, 41, 42, 53, 65, 81, 82, 85, 86, 87, 89, 91, 94, 95, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 124, 137, 145, 162, 167, 168, 173, 180, 185, 192, 203, 210, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 284, 291, 296, 307, 313, 314, 315, 317, 318, 319, 320, 321, 324, 325, 326, 328, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 343, 345, 387, 396], "profit": 2, "custom": [2, 15, 53, 105, 108, 111, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 334, 360, 377], "opportun": 2, "disturb": 2, "activ": [2, 6, 14, 17, 23, 25, 32, 36, 45, 46, 49, 54, 78, 80, 85, 86, 87, 88, 90, 91, 95, 96, 98, 108, 117, 122, 138, 139, 145, 152, 168, 194, 201, 212, 243, 246, 253, 275, 283, 284, 285, 294, 296, 301, 315, 317, 318, 322, 331, 334, 335, 340, 345], "proceed": 2, "constitut": 2, "state": [2, 6, 7, 89, 108, 235], "art": [2, 89], "wa": [2, 6, 22, 41, 89, 93, 97, 108, 160, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 319, 324, 326, 329, 345, 350, 353, 354, 358, 388, 392, 393, 395, 396], "did": [2, 317, 325, 333], "verifi": [2, 4, 7], "nor": [2, 6, 86, 89, 108, 116, 118, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 324], "presenc": [2, 49, 321, 331], "defect": 2, "detect": [2, 66, 84, 89, 93, 94, 108, 136, 141, 156, 157, 178, 279, 317, 321, 334, 337], "drawn": [2, 99, 108, 116, 217, 235], "product": [2, 6, 74, 89, 93, 105, 108, 111, 118, 160, 317, 320], "good": [2, 3, 6, 7, 9, 10, 21, 32, 69, 73, 78, 93, 323, 326, 327, 334, 343], "caus": [2, 7, 108, 284, 296, 324, 334], "damag": 2, "person": [2, 9], "repres": [2, 9, 33, 73, 88, 96, 108, 284, 296, 313, 314, 318, 325, 338], "faith": 2, "suppli": [2, 45, 108, 116, 168], "tacit": 2, "commerci": [2, 89], "valu": [2, 7, 9, 17, 18, 20, 22, 23, 24, 25, 26, 29, 32, 45, 53, 61, 62, 66, 69, 73, 74, 75, 88, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 143, 152, 156, 157, 160, 163, 164, 166, 168, 169, 171, 172, 173, 174, 177, 189, 193, 196, 199, 201, 202, 210, 211, 217, 218, 219, 221, 222, 227, 228, 229, 233, 235, 239, 241, 249, 250, 254, 262, 266, 278, 280, 281, 284, 285, 293, 295, 296, 307, 308, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 338, 340, 342, 343, 345, 350, 379, 392, 395, 396], "safe": [2, 6], "innov": 2, "natur": [2, 91, 315, 326, 340], "specif": [2, 5, 6, 7, 9, 13, 21, 78, 82, 85, 87, 89, 97, 108, 144, 167, 217, 218, 220, 221, 222, 224, 225, 226, 227, 314, 317, 320, 323, 325, 326, 334, 340, 343], "doe": [2, 4, 7, 9, 21, 25, 26, 89, 90, 95, 96, 107, 108, 117, 128, 131, 132, 140, 163, 164, 317, 319, 320, 324, 325, 326, 329, 330, 340], "warrant": [2, 321], "error": [2, 4, 7, 10, 33, 73, 89, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 139, 140, 142, 162, 165, 167, 176, 181, 182, 185, 240, 246, 247, 266, 278, 282, 288, 295, 299, 313, 318, 319, 320, 323, 325, 326, 331, 334, 335, 339, 340, 342, 344, 345, 350, 374, 384, 387, 396, 397], "interrupt": 2, "equip": [2, 329], "configur": [2, 6, 85, 94, 98, 99, 101, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 350, 357, 377, 384, 394], "meet": 2, "tacitli": 2, "disclaim": 2, "toward": [2, 345], "aris": [2, 331], "nevertheless": 2, "should": [2, 5, 6, 7, 9, 11, 14, 15, 32, 54, 65, 74, 85, 86, 87, 89, 90, 92, 93, 94, 95, 96, 99, 104, 107, 108, 115, 116, 123, 136, 146, 147, 156, 163, 168, 212, 217, 218, 220, 221, 222, 224, 225, 226, 227, 248, 314, 318, 319, 320, 321, 325, 328, 329, 334, 342, 343, 353, 383], "defens": 2, "Such": 2, "pursuant": 2, "memorandum": 2, "understand": [2, 9, 10, 11, 91, 315, 329, 388], "name": [2, 4, 5, 6, 7, 9, 11, 17, 20, 21, 22, 24, 25, 26, 29, 32, 40, 41, 45, 50, 57, 73, 74, 75, 84, 85, 86, 87, 88, 92, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 129, 130, 132, 139, 146, 147, 150, 152, 159, 177, 193, 194, 196, 199, 201, 202, 212, 217, 220, 224, 225, 226, 233, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 280, 281, 284, 285, 293, 296, 300, 301, 303, 317, 318, 319, 320, 322, 323, 324, 325, 326, 329, 330, 331, 333, 334, 335, 336, 338, 340, 342, 345, 388], "No": [2, 9, 108, 116, 143, 217, 218, 220, 221, 222, 224, 225, 226, 227], "exist": [2, 5, 6, 7, 9, 14, 85, 86, 87, 92, 94, 98, 99, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 122, 127, 168, 236, 317, 320, 324, 326, 328, 332, 371], "trademark": 2, "termin": [2, 6, 9, 22, 84, 85, 86, 87, 92, 93, 328, 360], "breach": 2, "automat": [2, 4, 7, 9, 10, 24, 26, 45, 89, 90, 93, 94, 96, 104, 108, 113, 117, 127, 136, 138, 141, 155, 157, 178, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 279, 283, 303, 317, 318, 321, 331, 333, 334, 338, 339, 357, 374, 376, 383, 390, 392], "thirti": 2, "30": [2, 25, 36, 61, 91, 107, 319, 321, 324, 326, 331, 333, 334, 335, 340], "dai": [2, 6, 325, 377], "after": [2, 6, 7, 9, 10, 11, 12, 26, 36, 93, 107, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 309, 312, 313, 317, 318, 321, 323, 325, 326, 334, 337, 338, 342, 343, 345, 357, 372], "sent": [2, 6], "ineffect": 2, "whose": [2, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 166, 168, 201, 296], "longer": [2, 6, 7, 382], "valid": [2, 9, 10, 19, 29, 66, 89, 95, 97, 108, 111, 113, 145, 168, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 283, 317, 323, 325, 337, 394], "hereof": 2, "11": [2, 18, 25, 36, 66, 73, 88, 91, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 347, 396], "miscellan": 2, "excus": 2, "neither": [2, 89, 116, 324], "liabl": 2, "delai": 2, "attribut": [2, 5, 17, 20, 24, 25, 26, 36, 41, 42, 57, 78, 88, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 137, 175, 197, 231, 266, 274, 278, 289, 297, 299, 317, 319, 320, 321, 323, 325, 326, 332, 333, 334, 335, 339, 374, 379, 388, 390], "majeur": 2, "act": 2, "god": 2, "outsid": [2, 108, 143, 326], "electr": 2, "telecommun": 2, "network": [2, 7, 91, 93, 315], "paralysi": 2, "viru": 2, "attack": 2, "intervent": 2, "disast": 2, "water": 2, "earthquak": 2, "fire": 2, "explos": 2, "strike": 2, "labor": 2, "unrest": 2, "war": 2, "etc": [2, 5, 9, 10, 40, 73, 74, 89, 97, 107, 108, 116, 127, 231, 235, 240, 313, 314, 318, 320, 321, 325, 329, 331, 332, 333, 334], "occas": [2, 9], "invok": 2, "interpret": [2, 6, 86, 108, 114, 117, 168, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "waiver": 2, "interest": [2, 3, 6, 9, 20, 21, 29, 36, 41, 53, 73, 74, 89, 96, 108, 317, 319, 320, 323, 325, 326, 331, 338, 340, 342, 343], "cancel": [2, 325], "replac": [2, 6, 25, 41, 84, 85, 86, 87, 92, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 143, 156, 168, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 314, 330, 331, 332, 334, 357, 360, 379, 383, 390, 392], "previou": [2, 9, 25, 41, 73, 74, 85, 87, 94, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 177, 317, 318, 319, 321, 331, 334, 338, 343, 353, 369, 394], "oral": 2, "entireti": 2, "concern": [2, 6, 89], "supplement": [2, 316], "unless": [2, 7, 9, 94, 96, 108, 128, 131, 177, 193, 196, 235, 392], "write": [2, 5, 6, 10, 13, 84, 89, 108, 109, 110, 117, 158, 212, 301, 303, 317, 318, 325, 326, 328, 336, 340, 371, 388], "sign": [2, 14, 108, 171, 172, 328, 330], "duli": 2, "were": [2, 6, 33, 104, 107, 108, 113, 122, 168, 318, 326, 334, 344, 358, 393, 395], "conflict": [2, 6, 97], "futur": [2, 7, 33, 317, 318, 325, 326, 328, 329, 334, 339, 392], "legisl": 2, "text": [2, 9, 32, 69, 74, 89, 92, 108, 116, 281, 317, 325, 326, 328, 330, 334, 336], "prevail": 2, "necessari": [2, 6, 25, 73, 83, 84, 106, 108, 112, 127, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 283, 314, 317, 319, 324, 328, 331, 335, 336, 376, 384], "amend": 2, "invalid": [2, 4, 340], "reason": [2, 4, 6, 84, 89, 93, 320, 345], "whatsoev": 2, "languag": [2, 9, 15, 89, 329], "english": [2, 10], "authent": 2, "12": [2, 18, 20, 24, 25, 36, 41, 45, 73, 74, 75, 88, 91, 96, 317, 318, 319, 320, 321, 322, 323, 326, 329, 331, 333, 334, 335, 336, 338, 340, 342, 343, 345, 347, 354, 396], "duplic": [2, 331, 359], "coher": 2, "word": [2, 9, 99, 104, 107, 111, 113, 114, 116, 121, 122, 330], "updat": [2, 7, 13, 84, 85, 87, 97, 107, 108, 111, 117, 270, 348, 350, 357, 366, 369, 374, 377, 386, 389], "each": [2, 7, 9, 20, 25, 29, 41, 73, 78, 80, 83, 93, 94, 95, 96, 97, 99, 104, 106, 107, 108, 112, 113, 114, 117, 125, 126, 139, 144, 156, 168, 169, 170, 177, 203, 237, 313, 314, 317, 318, 319, 320, 321, 322, 323, 325, 326, 330, 331, 332, 337, 340, 342, 343, 347, 348, 389], "number": [2, 7, 9, 11, 17, 19, 23, 24, 25, 32, 36, 53, 78, 80, 85, 87, 93, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 127, 128, 132, 135, 136, 138, 140, 141, 145, 151, 155, 161, 166, 167, 168, 170, 171, 172, 176, 177, 178, 181, 182, 183, 184, 193, 196, 198, 201, 203, 217, 220, 223, 224, 225, 226, 237, 244, 245, 246, 255, 261, 262, 263, 266, 267, 275, 278, 283, 284, 296, 299, 311, 313, 317, 320, 321, 322, 331, 334, 339, 341, 343, 369, 392], "issu": [2, 6, 7, 85, 87, 89, 90, 91, 108, 127, 284, 296, 324, 325, 326, 340, 348, 350, 355, 358, 359, 360, 362, 371, 372, 375, 379, 381, 387, 389, 392, 393, 394, 396, 397], "encount": [2, 6, 317, 339, 340], "13": [2, 7, 20, 27, 36, 41, 45, 73, 88, 91, 317, 318, 319, 320, 321, 322, 323, 326, 331, 333, 334, 335, 336, 338, 340, 342, 343, 345, 347], "jurisdict": 2, "endeavor": 2, "seek": 2, "amic": 2, "solut": [2, 32, 33, 92, 93, 318], "disagr": 2, "disput": [2, 89], "fail": [2, 5, 6, 7, 9, 10, 93, 317, 335, 358], "within": [2, 4, 96, 108, 132, 248, 319, 321, 329, 330], "emerg": 2, "refer": [2, 6, 9, 10, 12, 32, 74, 84, 86, 94, 96, 97, 108, 127, 128, 136, 138, 141, 157, 166, 178, 279, 313, 317, 318, 321, 326, 329, 330, 331, 334, 335, 343, 370, 383], "court": 2, "dilig": 2, "stand": [2, 14, 42, 313, 317, 319, 320, 321, 323], "ce": 2, "nr": 2, "nria": 2, "ogiciel": 2, "ibr": 2, "2006": 2, "09": [2, 20, 25, 41, 45, 88, 322, 326, 345, 347], "05": [2, 22, 23, 25, 51, 94, 108, 115, 136, 318, 319, 321, 326, 331, 334, 336, 342, 347], "can": [2, 5, 6, 7, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 125, 126, 128, 129, 130, 131, 139, 143, 145, 146, 147, 156, 157, 159, 161, 164, 168, 174, 193, 194, 199, 202, 211, 216, 217, 218, 225, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 265, 266, 270, 278, 283, 284, 288, 296, 299, 308, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 355, 356, 360, 376, 381, 382, 396], "found": [2, 7, 9, 22, 24, 45, 54, 80, 93, 97, 318, 321, 325, 331, 334, 338, 343], "directori": [2, 6, 7, 10, 11, 21, 45, 47, 48, 49, 50, 73, 78, 82, 84, 86, 87, 92, 108, 109, 110, 117, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 326, 327, 331, 334, 390], "look": [3, 6, 7, 9, 18, 36, 45, 49, 73, 74, 317, 319, 320, 321, 325, 326, 328, 331, 334, 342], "intuit": [3, 9, 91, 315], "gui": [3, 89, 91, 95, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 334], "orang": 3, "togeth": [3, 10, 29, 36, 96, 108, 116, 213, 313, 320, 323, 326, 335], "spectroscopi": [3, 22, 89, 91, 96, 137, 315, 318, 320, 326], "could": [3, 5, 7, 9, 66, 73, 99, 319, 320, 321, 324, 331, 335, 337], "choic": [3, 9, 36, 82, 86, 93, 320], "librari": [3, 7, 9, 33, 36, 40, 82, 83, 85, 89, 99, 107, 108, 118, 292, 328, 329, 331, 334, 343, 387], "manipul": [3, 39, 43, 59, 90, 96, 108, 118, 165, 236, 326], "dataset": [3, 5, 7, 9, 16, 17, 22, 25, 26, 27, 29, 31, 33, 34, 36, 38, 44, 46, 48, 50, 51, 54, 55, 57, 61, 62, 65, 66, 73, 75, 78, 90, 91, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 167, 168, 169, 171, 172, 174, 176, 178, 180, 181, 182, 183, 185, 186, 187, 188, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 266, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 294, 295, 296, 299, 300, 301, 303, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 322, 325, 326, 329, 332, 333, 336, 337, 338, 341, 343, 344, 345, 348, 350, 354, 356, 357, 358, 363, 365, 367, 371, 374, 388, 389, 393, 394, 395, 396], "coordin": [3, 5, 17, 18, 21, 22, 23, 25, 33, 39, 42, 43, 45, 53, 59, 73, 74, 75, 78, 88, 90, 94, 95, 96, 97, 108, 111, 127, 129, 130, 148, 157, 159, 163, 164, 168, 169, 170, 173, 174, 199, 202, 210, 211, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 255, 266, 280, 307, 308, 317, 318, 319, 320, 321, 322, 326, 332, 333, 334, 335, 336, 338, 341, 345, 350, 353, 355, 358, 365, 393, 395, 396], "we": [3, 4, 5, 6, 7, 9, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 78, 80, 81, 82, 85, 86, 87, 88, 89, 96, 108, 127, 138, 140, 142, 144, 151, 159, 162, 167, 171, 172, 176, 180, 181, 182, 185, 189, 198, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 236, 246, 247, 261, 263, 267, 270, 281, 288, 295, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 369], "advis": [3, 32, 108, 141, 178], "panda": [3, 10, 13, 350], "xarrai": [3, 108, 292], "plot": [3, 17, 18, 20, 22, 24, 25, 26, 29, 32, 33, 36, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 55, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 82, 90, 94, 95, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 157, 203, 204, 205, 206, 207, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 316, 317, 318, 319, 320, 322, 323, 329, 331, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 350, 371, 372, 381, 387, 388, 390, 394, 396], "matplotlib": [3, 9, 33, 53, 82, 89, 94, 95, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 272, 321, 329, 342, 358, 360, 364, 372, 381, 384, 396], "graphic": [3, 24, 25, 89, 91, 95, 328, 334], "seaborn": [3, 334], "bokeh": 3, "what": [3, 6, 9, 10, 14, 53, 74, 85, 88, 108, 158, 314, 317, 318, 326, 341, 345, 347], "pep8": 4, "standard": [4, 10, 13, 66, 91, 97, 107, 108, 114, 121, 152, 197, 201, 284, 285, 296, 318, 319, 323, 324, 326, 329, 334, 340], "black": [4, 6, 33, 53, 73, 74, 318, 321, 334], "flake8": [4, 6, 7], "consist": [4, 5, 7, 10, 29, 94, 96, 101, 108, 193, 317, 319, 323, 325, 334, 396], "project": [4, 6, 7, 9, 10, 14, 15, 58, 82, 86, 89, 90, 99, 108, 109, 114, 123, 194, 218, 221, 222, 227, 264, 265, 313, 320, 323, 325, 329, 334, 350, 356], "pre": [4, 6, 13, 93, 96, 99, 105, 108, 170, 334], "whenev": [4, 5, 108, 116, 127, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 335], "git": [4, 5, 7, 12, 15, 83], "see": [4, 5, 6, 7, 10, 11, 12, 14, 50, 53, 65, 66, 78, 82, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 122, 139, 140, 141, 142, 145, 155, 158, 163, 164, 167, 168, 173, 174, 176, 178, 181, 182, 185, 194, 196, 210, 211, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 275, 278, 279, 281, 284, 294, 295, 296, 299, 300, 303, 307, 308, 313, 314, 317, 318, 319, 320, 321, 322, 324, 325, 326, 330, 331, 334, 336, 338, 339, 343, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "doc": [4, 6, 7, 10, 113, 326, 333, 357, 360, 370, 374, 383, 394], "org": [4, 7, 91, 108, 303, 334], "latest": [4, 6, 10, 11, 84, 85, 87], "skip": [4, 7, 9, 85, 87, 359], "html": [4, 5, 7, 9, 10, 84, 108, 303, 326, 330], "background": [4, 91, 108, 237, 239, 241, 249, 250, 254, 326, 334, 372], "method": [4, 6, 7, 9, 10, 17, 19, 21, 24, 25, 32, 36, 40, 42, 45, 53, 54, 65, 66, 69, 73, 74, 75, 78, 82, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 127, 128, 131, 135, 136, 138, 140, 142, 146, 147, 151, 155, 156, 162, 167, 168, 171, 172, 174, 176, 180, 181, 182, 185, 194, 198, 203, 204, 205, 206, 207, 208, 209, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 236, 246, 251, 253, 254, 261, 262, 263, 266, 267, 272, 278, 280, 281, 282, 286, 288, 293, 295, 299, 302, 304, 305, 306, 313, 315, 316, 319, 320, 322, 323, 324, 325, 326, 329, 330, 332, 333, 334, 336, 339, 340, 341, 348, 350, 353, 355, 356, 358, 359, 360, 365, 370, 375, 378, 381, 388, 389, 390, 394, 395, 396], "It": [4, 5, 6, 9, 10, 11, 24, 40, 42, 84, 89, 90, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 132, 136, 164, 169, 170, 195, 212, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 278, 299, 313, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 331, 333, 334, 336, 337, 339, 343, 353, 387, 394, 396], "behavior": [4, 7, 9, 14, 21, 96, 108, 150, 324, 350, 363, 374, 384, 392], "immedi": [4, 9], "stop": [4, 95, 96, 104, 108, 111, 116, 132, 177, 193, 196, 313, 317, 319, 324, 331, 342], "check": [4, 6, 7, 10, 19, 23, 36, 54, 81, 84, 86, 89, 90, 96, 108, 109, 110, 113, 117, 118, 124, 143, 189, 248, 266, 280, 313, 317, 321, 325, 329, 331, 333, 365, 366, 374, 377, 386], "desir": [4, 7, 14, 17, 66, 93, 96, 108, 111, 163, 173, 201, 210, 235, 296, 307, 320, 321, 325, 334, 337], "instead": [4, 7, 9, 14, 25, 26, 33, 36, 41, 42, 73, 74, 85, 87, 88, 96, 97, 101, 108, 116, 117, 129, 130, 139, 141, 160, 164, 167, 168, 170, 177, 178, 196, 199, 202, 217, 218, 220, 221, 222, 224, 225, 226, 227, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 278, 284, 296, 314, 317, 329, 330, 331, 334, 340, 342, 343, 350, 382, 388, 390, 392, 396], "known": [4, 6, 14, 86, 108, 197, 238, 318, 319, 343], "meant": 4, "captur": [4, 313], "common": [4, 6, 7, 9, 32, 74, 86, 108, 176, 217, 220, 224, 225, 226, 318, 326, 331, 335], "exhibit": 4, "buggi": 4, "implement": [4, 5, 9, 93, 98, 108, 128, 131, 156, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 299, 301, 313, 317, 319, 320, 321, 323, 326, 329, 335, 342, 343], "featur": [4, 5, 6, 7, 14, 23, 24, 84, 89, 90, 91, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 141, 160, 178, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 278, 299, 313, 316, 320, 326, 329, 331, 334, 340, 345, 347], "flaki": 4, "argument": [4, 7, 9, 19, 21, 23, 33, 45, 93, 96, 97, 98, 99, 104, 107, 108, 111, 113, 114, 116, 117, 118, 121, 122, 125, 126, 127, 132, 145, 160, 168, 177, 193, 196, 204, 205, 206, 207, 208, 209, 213, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 235, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 318, 323, 324, 325, 326, 331, 334, 340, 350, 360, 387, 394], "strict": [4, 107, 108, 124, 160], "fals": [4, 5, 7, 22, 26, 29, 32, 33, 36, 45, 57, 61, 62, 66, 69, 73, 74, 78, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 124, 127, 128, 129, 130, 131, 138, 139, 140, 142, 150, 151, 160, 162, 167, 171, 172, 176, 177, 180, 181, 182, 185, 189, 190, 193, 196, 198, 199, 201, 202, 203, 210, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 233, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 267, 268, 271, 280, 281, 282, 284, 285, 286, 288, 290, 291, 293, 295, 296, 309, 310, 311, 312, 317, 318, 319, 320, 321, 323, 326, 331, 334, 336, 337, 338, 339, 340, 343, 392], "happen": [4, 6, 318], "pass": [4, 5, 7, 10, 17, 20, 33, 45, 50, 92, 93, 94, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 128, 131, 159, 166, 167, 169, 170, 184, 213, 216, 223, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 317, 318, 321, 323, 324, 325, 331, 334, 396], "prefer": [4, 5, 6, 9, 17, 20, 21, 36, 41, 42, 45, 46, 48, 49, 53, 54, 61, 62, 66, 69, 73, 74, 75, 78, 85, 86, 87, 108, 118, 144, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 238, 240, 246, 300, 301, 317, 318, 321, 322, 325, 328, 329, 331, 333, 335, 337, 338, 339, 340, 343, 344, 345, 350, 376, 390], "decor": [4, 7, 26], "param": [4, 7, 94, 98, 99, 101, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 317, 394], "usag": [4, 7, 9, 10, 325, 331, 341], "appropri": [4, 5, 6, 7, 108, 168, 331], "collect": [4, 7, 97, 108, 246, 313, 379], "phase": [4, 73, 108, 115, 171, 172, 214, 215], "involv": [4, 82, 104], "multipl": [4, 6, 7, 9, 20, 24, 54, 60, 63, 71, 73, 90, 94, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 129, 130, 139, 162, 177, 180, 199, 202, 203, 234, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 277, 281, 311, 331, 338, 341, 350, 355, 394], "paramet": [4, 5, 7, 20, 22, 32, 36, 45, 50, 53, 62, 65, 66, 73, 74, 75, 78, 84, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 193, 194, 196, 198, 199, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 270, 273, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 293, 294, 295, 296, 299, 300, 301, 303, 307, 308, 309, 310, 311, 312, 313, 317, 320, 321, 325, 326, 331, 336, 337, 338, 343, 348, 350, 378, 387, 389, 390, 392, 394, 396], "fixtur": [4, 7], "combin": [4, 6, 91, 111, 315, 325, 334], "To": [4, 6, 7, 9, 11, 20, 22, 24, 40, 41, 42, 45, 53, 73, 74, 83, 84, 85, 86, 87, 93, 108, 118, 167, 168, 185, 217, 235, 314, 317, 318, 322, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 343, 345], "import": [4, 5, 6, 7, 9, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 81, 83, 85, 86, 87, 88, 89, 90, 96, 97, 108, 117, 118, 124, 161, 194, 212, 236, 246, 247, 270, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 363, 395], "def": [4, 5, 7, 9, 73, 74, 75, 78, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 140, 142, 162, 176, 180, 217, 218, 219, 281, 295, 318, 326, 331, 333, 343], "test_xfail": 4, "rais": [4, 7, 82, 96, 108, 117, 118, 127, 128, 131, 139, 140, 142, 160, 162, 167, 168, 176, 181, 182, 185, 282, 295, 331, 342], "typeerror": [4, 108, 139, 333], "why": [4, 6, 7, 9, 14, 86, 90, 318, 369], "here": [4, 5, 6, 7, 9, 10, 15, 19, 20, 21, 23, 24, 25, 33, 36, 40, 41, 42, 46, 47, 49, 50, 53, 69, 73, 74, 81, 84, 85, 87, 88, 93, 99, 107, 108, 236, 246, 247, 314, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 331, 333, 334, 338, 339, 342, 343, 344, 345], "node": 4, "add_mark": 4, "need": [4, 6, 7, 9, 10, 14, 15, 21, 24, 33, 36, 45, 50, 53, 66, 73, 74, 78, 82, 83, 84, 86, 89, 92, 96, 99, 107, 108, 114, 138, 155, 168, 238, 318, 320, 321, 329, 331, 334, 337, 339, 343], "except": [4, 9, 42, 81, 84, 93, 96, 108, 117, 118, 124, 128, 131, 132, 144, 145, 160, 166, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 280, 317, 321, 324, 329, 331, 334, 335, 340, 345, 353, 360, 371], "messag": [4, 6, 7, 93, 154, 165, 187, 298, 324, 330, 331], "meta": [5, 7, 93, 96, 108, 117, 331, 339, 356, 379], "variou": [5, 74, 78, 81, 90, 94, 101, 108, 117, 127, 194, 266, 278, 299, 313, 317, 321, 324, 325, 329, 331, 333, 343, 394], "kei": [5, 9, 73, 93, 97, 108, 168, 319, 321, 326, 358], "through": [5, 7, 9, 83, 89, 108, 128, 131, 317, 318, 321, 325, 326, 329, 331, 334], "core": [5, 7, 57, 90, 270, 325, 329, 333, 336, 339], "handl": [5, 9, 26, 42, 73, 96, 108, 117, 132, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 275, 317, 326, 331, 334, 335, 340, 342, 363, 365, 373, 375, 379, 381, 387, 390, 395], "search": [5, 14, 104, 108, 168, 318, 321, 327, 357], "locat": [5, 7, 9, 11, 53, 54, 83, 84, 92, 94, 96, 108, 117, 157, 168, 240, 313, 317, 321, 325, 334, 339, 343, 351, 352, 396], "step": [5, 6, 11, 21, 81, 85, 87, 93, 95, 96, 107, 108, 132, 156, 177, 193, 196, 317, 328, 334, 342, 388], "exampl": [5, 6, 7, 10, 16, 22, 27, 28, 30, 32, 33, 36, 38, 39, 43, 45, 46, 47, 48, 49, 50, 53, 54, 57, 59, 61, 62, 65, 66, 69, 73, 74, 75, 78, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 132, 137, 138, 139, 143, 150, 152, 159, 163, 166, 168, 169, 170, 173, 174, 175, 184, 189, 194, 197, 201, 210, 211, 212, 231, 237, 238, 240, 244, 248, 251, 252, 253, 254, 258, 270, 274, 275, 283, 284, 285, 288, 289, 294, 296, 297, 300, 301, 303, 307, 308, 314, 316, 318, 319, 321, 326, 329, 330, 331, 333, 334, 336, 337, 340, 341, 342, 344, 345, 351, 357, 385, 388, 390, 394, 395, 396], "gram": [5, 42, 108, 252, 369], "thermo": [5, 108, 246, 251, 252, 253, 254, 326, 369, 396], "spc": [5, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 369], "embrac": [5, 7], "driven": [5, 13], "tdd": [5, 7], "start": [5, 6, 7, 9, 11, 22, 32, 36, 40, 78, 83, 84, 85, 86, 87, 94, 95, 96, 104, 108, 132, 177, 193, 196, 231, 317, 318, 319, 321, 326, 331, 334, 342], "autom": [5, 7, 20, 316], "produc": [5, 7, 24, 91, 108, 118, 278, 315, 340, 387, 395], "amount": [5, 7, 9, 24, 108, 114, 155, 162, 180, 203, 313, 334, 337], "successfulli": [5, 22, 93], "nddataset": [5, 7, 9, 14, 18, 20, 21, 23, 25, 29, 32, 33, 35, 37, 42, 43, 45, 47, 54, 57, 73, 74, 75, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 105, 106, 107, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 127, 132, 135, 136, 138, 139, 140, 141, 142, 145, 146, 147, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 181, 182, 184, 185, 189, 194, 198, 201, 203, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 266, 272, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 299, 300, 301, 307, 308, 309, 312, 316, 319, 320, 321, 322, 323, 325, 326, 329, 333, 339, 341, 350, 382, 390], "expect": [5, 7, 14, 32, 74, 100, 106, 108, 112, 116, 213, 237, 317, 318, 319, 321, 322, 323, 324, 326, 335, 342, 353], "test_import": 5, "read_spc": [5, 108], "mani": [5, 6, 7, 9, 42, 80, 84, 89, 93, 108, 168, 314, 319, 321, 324, 325, 329, 331, 383, 385], "want": [5, 6, 7, 9, 10, 29, 40, 41, 69, 82, 83, 84, 85, 87, 89, 92, 94, 96, 108, 116, 127, 138, 157, 180, 189, 281, 288, 317, 318, 322, 326, 328, 329, 330, 331, 334, 335, 336, 337, 343, 345], "test_cor": 5, "test_read": 5, "test_xxx": 5, "xxx": 5, "protocol": [5, 108, 138, 145, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 283, 300, 301, 303, 313], "group": [5, 22, 57, 89, 108, 237, 246, 247, 253, 314, 321, 326, 331, 334, 342, 345], "subdirectori": 5, "g": [5, 7, 9, 20, 33, 42, 62, 78, 81, 82, 87, 89, 91, 95, 96, 97, 98, 108, 118, 124, 168, 173, 180, 192, 210, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 291, 307, 313, 314, 317, 318, 319, 321, 325, 326, 328, 330, 331, 332, 333, 334, 336, 337, 339, 340, 343, 345, 387, 396], "galacticdata": [5, 108, 252], "spectrochempy_data": [5, 54, 82, 351, 352, 376, 390], "testdata": [5, 45, 88, 322, 325, 326, 331, 342, 345], "folder": [5, 6, 7, 10, 15, 49, 73, 74, 75, 78, 87, 108, 117, 236, 240, 246, 247, 325, 328, 331, 383], "fork": 5, "repositori": [5, 7, 11, 15, 83, 84, 85, 87, 376, 390], "instanc": [5, 40, 41, 42, 53, 83, 84, 87, 88, 92, 93, 94, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 123, 141, 144, 163, 164, 169, 173, 174, 178, 210, 211, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 264, 265, 288, 292, 307, 308, 314, 317, 318, 319, 320, 321, 323, 324, 325, 326, 331, 334, 338, 340, 342, 343, 345], "test_read_spc": 5, "scp": [5, 6, 7, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 86, 88, 93, 95, 96, 98, 108, 109, 110, 117, 122, 123, 132, 138, 139, 145, 150, 152, 159, 163, 166, 168, 169, 170, 173, 174, 184, 189, 194, 201, 210, 211, 216, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 275, 283, 284, 285, 288, 289, 294, 296, 300, 301, 303, 307, 308, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 350, 379, 382, 388, 390], "benzen": [5, 108, 252], "assert": [5, 7, 17, 33, 57, 108, 109, 110, 117], "shape": [5, 7, 20, 21, 23, 24, 25, 26, 32, 40, 45, 47, 48, 73, 74, 75, 88, 93, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 138, 139, 143, 145, 152, 159, 163, 164, 166, 168, 169, 173, 174, 184, 201, 210, 211, 235, 236, 237, 238, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 266, 278, 282, 283, 284, 285, 288, 296, 299, 307, 308, 317, 318, 319, 320, 321, 322, 323, 325, 326, 331, 333, 335, 340, 342, 343, 344, 345], "1842": [5, 108, 252], "return": [5, 6, 10, 21, 33, 73, 75, 86, 92, 93, 94, 96, 97, 98, 99, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 193, 195, 196, 198, 199, 201, 202, 210, 211, 212, 213, 214, 215, 216, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 265, 266, 267, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 303, 307, 308, 309, 310, 311, 312, 318, 319, 320, 321, 323, 325, 326, 329, 330, 331, 333, 334, 341, 342, 345, 350, 357], "local": [5, 6, 7, 10, 50, 83, 84, 93, 108, 168, 265, 331, 334], "default": [5, 6, 9, 20, 40, 41, 45, 48, 54, 61, 65, 69, 73, 74, 84, 85, 87, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 142, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 180, 181, 182, 184, 185, 190, 193, 196, 198, 199, 201, 202, 203, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 266, 267, 273, 275, 278, 279, 280, 281, 282, 284, 285, 286, 288, 293, 294, 295, 296, 299, 300, 301, 307, 317, 318, 319, 320, 324, 326, 327, 328, 331, 335, 336, 337, 339, 342, 343, 348, 353, 355, 357, 372, 376, 389, 394, 396], "datadir": [5, 17, 21, 22, 36, 45, 46, 48, 49, 54, 61, 62, 73, 74, 75, 78, 92, 108, 236, 246, 247, 300, 319, 320, 326, 327, 331, 333, 338, 344, 376, 390], "correctli": [5, 6, 73, 86, 96, 108, 117, 128, 129, 130, 131, 199, 201, 202, 233, 284, 285, 296, 320, 329, 330, 355, 373, 375, 387, 393, 395], "point": [5, 6, 9, 22, 23, 36, 73, 74, 78, 85, 86, 87, 88, 93, 96, 99, 107, 108, 114, 116, 127, 132, 135, 140, 151, 156, 167, 168, 171, 172, 176, 181, 182, 198, 201, 225, 246, 261, 262, 263, 284, 296, 317, 318, 319, 321, 325, 329, 330, 334, 335, 338, 339, 342, 343, 390], "repo": 5, "pref": [5, 20, 41, 42, 53, 66, 69, 73, 108, 238, 317, 318, 321, 322, 333, 334, 335, 337, 338, 339, 340, 343, 344, 345], "path": [5, 6, 7, 11, 17, 32, 45, 48, 61, 62, 82, 84, 87, 96, 100, 108, 212, 218, 221, 222, 227, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 326, 327, 330, 331, 333, 334, 336, 338, 339, 344], "top": [5, 91, 108, 168, 203, 321, 333, 334], "galact": [5, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 369], "descript": [5, 6, 7, 9, 40, 45, 73, 75, 84, 88, 90, 93, 106, 108, 112, 113, 124, 168, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 322, 324, 326, 329, 331, 333, 342, 345], "must": [5, 6, 9, 10, 45, 73, 84, 85, 87, 88, 93, 96, 97, 98, 99, 101, 105, 107, 108, 111, 113, 114, 115, 116, 117, 121, 122, 132, 139, 140, 142, 144, 145, 155, 159, 160, 162, 167, 168, 176, 181, 182, 185, 193, 203, 212, 214, 223, 231, 236, 238, 246, 247, 266, 267, 278, 283, 292, 295, 314, 317, 318, 323, 325, 329, 330, 331, 343, 345], "privat": [5, 7], "_read_spc": 5, "As": [5, 9, 19, 21, 23, 25, 36, 40, 53, 69, 78, 83, 85, 108, 156, 159, 231, 313, 317, 318, 319, 320, 321, 322, 323, 324, 326, 331, 333, 334, 336, 340, 342, 343, 345], "illustr": [5, 7, 9, 321, 325, 334, 342, 343], "below": [5, 6, 9, 32, 74, 85, 86, 87, 96, 108, 158, 196, 212, 231, 281, 284, 296, 314, 317, 318, 319, 321, 322, 324, 325, 326, 328, 331, 334, 336, 340, 343], "minim": [5, 93, 106, 108, 111, 112, 115, 138, 168, 313, 316, 320, 321, 331, 343], "simplic": [5, 9, 330], "__all__": 5, "__dataset_methods__": 5, "section": [5, 6, 10, 12, 40, 73, 90, 91, 104, 329, 330, 331, 334], "io": [5, 42], "_importer_method": 5, "kwarg": [5, 9, 50, 93, 94, 96, 97, 98, 99, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 127, 129, 130, 132, 140, 141, 142, 143, 145, 150, 151, 153, 154, 155, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 184, 185, 187, 193, 194, 196, 198, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 266, 275, 276, 277, 278, 280, 281, 287, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 325, 340], "list": [5, 9, 33, 41, 53, 65, 86, 93, 94, 95, 96, 97, 100, 104, 107, 108, 113, 114, 116, 117, 118, 127, 161, 163, 164, 173, 174, 203, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 307, 308, 313, 314, 317, 318, 319, 320, 321, 323, 325, 326, 331, 334, 341, 342, 347, 357, 360, 395], "extens": [5, 7, 9, 21, 45, 50, 84, 89, 100, 101, 108, 109, 117, 168, 218, 221, 222, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 278, 300, 301, 303, 321, 325, 326], "str": [5, 9, 22, 26, 45, 48, 57, 93, 96, 97, 100, 101, 104, 105, 108, 110, 113, 114, 115, 116, 117, 118, 123, 124, 127, 128, 138, 140, 142, 144, 145, 146, 147, 151, 155, 156, 157, 159, 161, 162, 163, 164, 167, 169, 171, 172, 173, 174, 176, 180, 181, 182, 185, 190, 194, 198, 203, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 266, 275, 278, 280, 281, 288, 294, 295, 299, 300, 301, 303, 307, 308, 320, 335], "pathlib": [5, 45, 96, 108, 109, 110, 117, 194, 212, 236, 240, 246, 247, 300, 301, 303, 327, 333], "read_xxx": 5, "correspond": [5, 7, 15, 17, 18, 20, 21, 23, 41, 62, 73, 92, 93, 96, 97, 107, 108, 114, 115, 116, 122, 127, 145, 161, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 313, 319, 320, 321, 323, 324, 326, 334, 335, 342, 343, 345], "nnddataset": 5, "float64": [5, 7, 18, 20, 25, 33, 40, 41, 42, 45, 47, 57, 88, 96, 97, 108, 132, 138, 139, 152, 159, 166, 169, 170, 173, 174, 201, 210, 211, 235, 236, 237, 238, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 275, 283, 284, 285, 288, 294, 296, 307, 308, 317, 325, 326, 331, 340, 342], "unitless": [5, 45, 57, 96, 108, 118, 150, 166, 173, 174, 210, 238, 244, 245, 307, 331, 341], "y": [5, 6, 17, 19, 20, 22, 24, 25, 26, 29, 32, 33, 40, 41, 45, 46, 47, 73, 74, 75, 88, 93, 95, 96, 97, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 121, 122, 138, 139, 152, 159, 163, 166, 168, 169, 173, 201, 203, 211, 236, 237, 238, 244, 245, 246, 247, 248, 251, 252, 253, 254, 258, 283, 284, 285, 288, 296, 307, 308, 313, 317, 318, 319, 320, 321, 322, 323, 325, 331, 333, 334, 335, 340, 342, 343, 345, 352, 381, 396], "arg": [5, 9, 50, 97, 107, 108, 114, 117, 121, 124, 137, 154, 165, 175, 187, 197, 213, 220, 221, 222, 224, 225, 226, 227, 228, 229, 231, 274, 275, 276, 297, 298, 301, 302, 303, 304, 305, 306], "filenam": [5, 45, 88, 96, 108, 109, 110, 117, 194, 212, 218, 221, 222, 227, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 322, 325, 326, 345, 358, 371, 396], "get": [5, 6, 7, 10, 15, 17, 18, 20, 21, 22, 23, 24, 32, 45, 66, 73, 74, 81, 86, 87, 96, 98, 106, 107, 108, 112, 116, 118, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 317, 318, 321, 322, 325, 326, 328, 331, 332, 334, 335, 337, 342, 345], "fid": [5, 73, 336, 338, 344], "bytesio": 5, "els": [5, 7, 10, 45, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 118, 121, 122, 144, 236, 246, 247, 321, 333, 334, 340], "rb": 5, "close": [5, 9, 32, 93, 96, 108, 168, 193, 313, 317, 321, 322, 339, 343, 394], "__name__": 5, "__main__": 5, "onc": [5, 6, 7, 15, 45, 73, 84, 86, 97, 108, 311, 319, 321, 323, 334], "bi": 5, "dimension": [5, 24, 25, 26, 91, 94, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 118, 121, 122, 124, 170, 217, 267, 282, 313, 314, 317, 320, 331, 340, 341], "dimens": [5, 7, 18, 20, 24, 25, 41, 45, 73, 74, 75, 88, 90, 94, 95, 96, 97, 99, 101, 104, 108, 114, 118, 120, 127, 128, 129, 130, 131, 136, 138, 139, 140, 141, 142, 144, 145, 146, 147, 151, 152, 155, 157, 159, 162, 167, 169, 171, 172, 176, 178, 180, 181, 182, 185, 192, 198, 199, 201, 202, 214, 215, 217, 220, 224, 225, 226, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 266, 267, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 293, 294, 295, 296, 299, 301, 317, 319, 320, 321, 322, 323, 325, 326, 332, 333, 336, 338, 340, 341, 342, 345, 350, 355, 359, 395], "pertain": 5, "wavelength": [5, 18, 19, 21, 22, 26, 29, 41, 42, 92, 108, 246, 313, 317, 319, 320, 323], "frequenc": [5, 42, 96, 108, 167, 171, 172, 185, 270, 313, 339], "second": [5, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 91, 92, 96, 97, 107, 108, 118, 156, 168, 189, 209, 230, 237, 248, 286, 288, 308, 313, 314, 319, 320, 321, 325, 326, 329, 331, 333, 334, 337, 338, 340, 342], "acquisit": [5, 17, 20, 22, 25, 41, 45, 46, 62, 73, 75, 88, 108, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 281, 317, 321, 322, 333, 336, 338, 342], "axi": [5, 9, 17, 21, 22, 32, 40, 46, 50, 74, 95, 96, 97, 99, 101, 108, 114, 118, 127, 128, 131, 133, 134, 138, 139, 140, 142, 145, 148, 149, 151, 152, 155, 162, 167, 171, 172, 176, 180, 181, 182, 185, 188, 198, 201, 203, 214, 215, 217, 220, 224, 225, 226, 261, 263, 266, 275, 278, 280, 281, 283, 284, 285, 286, 294, 295, 296, 299, 317, 318, 319, 320, 334, 339, 340, 342, 345, 352, 396], "even": [5, 22, 87, 93, 96, 108, 168, 190, 266, 267, 275, 284, 288, 325, 326, 331, 345, 375], "singl": [5, 9, 10, 18, 21, 32, 33, 41, 50, 57, 73, 74, 78, 90, 94, 96, 97, 101, 104, 108, 116, 117, 129, 130, 131, 139, 161, 199, 202, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 282, 313, 317, 318, 321, 326, 330, 332, 333, 334, 339, 350, 359, 387], "1d": [5, 7, 31, 34, 38, 44, 51, 53, 59, 94, 96, 101, 105, 106, 108, 112, 113, 137, 138, 139, 159, 168, 169, 175, 187, 197, 203, 205, 207, 216, 220, 223, 224, 225, 226, 231, 238, 240, 255, 274, 297, 301, 313, 318, 332, 341, 342, 343, 350, 357, 365, 367, 394], "spectrum": [5, 20, 22, 32, 50, 53, 64, 67, 68, 70, 71, 73, 74, 78, 91, 94, 101, 108, 114, 156, 161, 171, 172, 232, 236, 237, 243, 256, 257, 269, 313, 317, 318, 320, 321, 326, 341, 342, 343, 344, 345, 372], "np": [5, 7, 9, 18, 22, 40, 50, 73, 75, 93, 96, 107, 108, 118, 139, 170, 173, 174, 210, 211, 235, 288, 289, 307, 308, 314, 318, 331, 340, 342, 343, 382], "expand_dim": 5, "ndarrai": [5, 9, 93, 94, 96, 97, 98, 99, 104, 105, 107, 108, 111, 113, 114, 116, 121, 122, 128, 131, 138, 150, 155, 156, 160, 168, 171, 172, 180, 183, 189, 193, 275, 288, 289, 294, 310, 311, 313, 314, 326, 331, 332, 333, 340, 350, 360, 397], "2d": [5, 16, 24, 27, 36, 38, 40, 48, 53, 64, 67, 71, 91, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 119, 120, 121, 122, 144, 155, 159, 168, 203, 204, 206, 208, 209, 218, 219, 221, 222, 227, 228, 229, 230, 236, 240, 255, 269, 313, 317, 318, 322, 331, 334, 338, 340, 343, 350, 366, 387, 394, 396], "timestamp": [5, 17, 20, 25, 41, 45, 73, 88, 108, 248, 322, 326, 342], "label": [5, 17, 18, 20, 23, 24, 25, 29, 33, 40, 41, 45, 53, 54, 57, 61, 62, 69, 73, 74, 82, 85, 87, 88, 96, 97, 108, 114, 203, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 237, 280, 314, 317, 318, 320, 321, 322, 323, 326, 332, 334, 338, 339, 342, 343, 345, 358, 387], "datetim": [5, 9, 96, 108, 314, 331, 332, 333], "timezon": [5, 108, 331, 334, 374], "spectra": [5, 17, 21, 22, 23, 25, 26, 29, 36, 45, 49, 50, 53, 65, 66, 71, 72, 76, 77, 79, 88, 91, 94, 95, 96, 97, 98, 99, 107, 108, 113, 121, 155, 156, 161, 162, 167, 214, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 279, 313, 315, 317, 318, 319, 320, 321, 322, 323, 331, 334, 336, 339, 341, 342, 343, 344, 345, 366, 372, 378, 394, 395, 396], "_y": 5, "coord": [5, 9, 18, 20, 22, 33, 40, 41, 42, 57, 74, 88, 92, 97, 105, 108, 115, 127, 138, 139, 168, 169, 201, 248, 280, 314, 318, 320, 321, 326, 331, 332, 342, 350, 352, 392], "gmt": [5, 17, 20, 25, 41, 45, 88, 322, 326, 342, 345], "unit": [5, 9, 18, 19, 20, 26, 29, 33, 39, 40, 41, 43, 46, 59, 61, 73, 75, 88, 90, 92, 93, 96, 97, 99, 106, 108, 112, 114, 118, 127, 132, 145, 159, 162, 163, 164, 165, 166, 168, 169, 170, 173, 174, 177, 180, 184, 189, 190, 191, 192, 193, 196, 210, 211, 214, 235, 236, 246, 270, 283, 288, 290, 291, 307, 308, 317, 318, 319, 320, 322, 323, 326, 332, 334, 336, 338, 339, 341, 360, 373, 375, 396], "acqdat": 5, "userguid": [5, 10, 326, 333, 396], "n": [5, 9, 22, 26, 36, 85, 86, 91, 96, 98, 104, 108, 116, 118, 122, 137, 140, 152, 157, 166, 169, 175, 176, 181, 182, 183, 184, 197, 203, 231, 235, 274, 275, 284, 296, 297, 311, 313, 315, 321, 323, 333, 334, 343], "inform": [5, 6, 7, 10, 20, 21, 29, 32, 33, 65, 84, 96, 108, 114, 116, 141, 178, 238, 313, 314, 316, 320, 321, 323, 325, 326, 328, 331, 334, 339, 343, 374, 390], "rather": [6, 11, 85, 87, 314, 318, 334], "our": [6, 7, 10, 25, 84, 85, 87, 89, 96, 319, 323, 326, 328, 331, 334, 339], "But": [6, 9, 36, 40, 78, 92, 108, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 314, 317, 321, 326, 329, 331, 332, 334, 335], "don": [6, 7, 10, 36, 73, 74, 80, 89, 318, 321, 328, 329, 330, 334], "t": [6, 7, 9, 10, 11, 17, 18, 19, 21, 22, 23, 24, 26, 29, 33, 36, 40, 73, 74, 75, 80, 81, 89, 91, 93, 96, 97, 98, 99, 104, 107, 108, 111, 114, 115, 116, 121, 122, 162, 169, 180, 237, 281, 313, 318, 319, 320, 321, 323, 325, 328, 329, 330, 331, 333, 334, 336, 337, 340, 345, 388], "everyth": [6, 319], "kind": [6, 9, 96, 104, 105, 108, 160, 314, 318, 325, 331, 332, 344], "welcom": [6, 12, 14], "talk": [6, 317, 334], "some": [6, 7, 9, 10, 18, 22, 23, 25, 26, 32, 33, 36, 42, 53, 74, 81, 82, 84, 86, 88, 89, 93, 96, 97, 108, 109, 110, 114, 117, 132, 168, 238, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 331, 333, 334, 335, 338, 339, 340, 343, 344, 345, 350, 353, 359, 363, 385, 387, 393], "basic": [6, 9, 36, 53, 65, 89, 317, 324, 329, 331, 334, 341], "veri": [6, 7, 9, 10, 14, 22, 78, 81, 83, 86, 89, 316, 317, 318, 319, 321, 326, 334, 339, 345], "report": [6, 7, 89, 90, 91, 113, 319, 326, 370], "advanc": [6, 9, 89, 91, 315, 321, 325, 329, 342], "topic": [6, 10, 111], "learn": [6, 24, 91, 94, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 195, 315, 320, 323, 328, 329, 334], "how": [6, 7, 9, 11, 13, 24, 41, 42, 50, 108, 275, 313, 314, 320, 321, 322, 323, 325, 334, 342, 343, 344], "host": [6, 10, 11, 14, 83, 84, 330], "regist": [6, 14, 116], "account": [6, 12, 14, 108, 141, 153, 167, 178, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 319, 320, 350], "actual": [6, 7, 20, 21, 29, 66, 88, 94, 96, 108, 168, 216, 317, 318, 319, 320, 321, 323, 325, 331, 335, 342], "alreadi": [6, 14, 15, 17, 25, 86, 97, 99, 108, 314, 318, 325, 326, 328, 329, 340, 371, 392], "done": [6, 7, 11, 20, 41, 84, 86, 88, 96, 108, 138, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 288, 290, 291, 317, 320, 325, 331, 334, 337, 353, 363, 388, 392, 393], "also": [6, 7, 10, 11, 15, 19, 21, 24, 29, 36, 42, 45, 53, 62, 66, 73, 81, 85, 86, 87, 89, 90, 92, 93, 96, 98, 99, 107, 108, 111, 113, 114, 116, 121, 122, 127, 132, 157, 169, 197, 216, 223, 236, 246, 314, 317, 318, 319, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 341, 343, 387, 390, 393, 394], "almost": [6, 10, 94, 108, 136, 168, 184, 322, 331], "readi": [6, 20, 334], "peopl": [6, 9], "simultan": [6, 97, 108, 217, 342], "unfortun": 6, "easiest": [6, 7, 85, 87, 334], "newcom": [6, 12], "try": [6, 7, 9, 10, 20, 36, 42, 45, 78, 82, 83, 93, 108, 118, 124, 163, 164, 173, 174, 210, 211, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 307, 308, 317, 318, 324, 325, 329, 331, 334, 335, 340, 343, 345, 392], "along": [6, 45, 73, 74, 75, 90, 94, 96, 99, 101, 107, 108, 127, 128, 129, 130, 131, 133, 134, 136, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 152, 156, 157, 162, 168, 176, 178, 180, 181, 182, 199, 201, 202, 203, 233, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 267, 275, 278, 279, 280, 281, 283, 284, 285, 294, 295, 296, 299, 317, 326, 334, 341, 342, 343, 355], "reward": 6, "daili": 6, "help": [6, 7, 9, 10, 11, 14, 90, 317, 324, 325, 329, 334, 336, 337, 370], "page": [6, 7, 10, 14, 81, 84, 86, 88, 91, 316, 344, 383], "numpi": [6, 7, 9, 10, 18, 22, 33, 40, 50, 73, 74, 75, 81, 89, 96, 97, 101, 107, 108, 110, 117, 118, 135, 139, 140, 142, 151, 155, 158, 160, 162, 167, 171, 172, 176, 180, 181, 182, 185, 194, 198, 210, 214, 215, 261, 262, 263, 266, 275, 278, 281, 289, 294, 295, 299, 307, 314, 317, 318, 326, 332, 334, 339, 341, 342, 343, 381, 382, 387], "There": [6, 9, 12, 83, 96, 108, 193, 326, 331, 338], "shortag": 6, "resourc": [6, 89], "web": [6, 10, 89, 330, 334], "tutori": [6, 10, 11, 40, 85, 87, 89, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 334, 338, 342, 343, 350, 394], "essenti": [6, 89, 326, 329], "cours": [6, 12, 32, 42, 53, 83, 85, 86, 87, 317, 325, 336], "difficulti": 6, "hesit": [6, 80, 329], "ask": 6, "solv": [6, 20, 31, 34, 38, 85, 87, 89, 93, 96, 104, 106, 107, 108, 316, 354, 364], "problem": [6, 11, 14, 24, 82, 84, 91, 93, 99, 106, 112, 317, 324, 325, 335, 337, 345, 354, 360, 363, 364, 366, 367, 379, 383, 384, 394], "faster": [6, 11, 78, 93, 99, 108, 111, 163, 164, 168, 396], "u": [6, 7, 10, 14, 17, 25, 26, 40, 42, 45, 47, 61, 73, 75, 88, 89, 96, 97, 106, 108, 112, 116, 118, 122, 138, 139, 152, 162, 180, 201, 214, 215, 236, 237, 246, 247, 251, 252, 253, 254, 258, 275, 283, 284, 285, 294, 296, 307, 313, 317, 318, 321, 322, 325, 326, 329, 331, 334, 336, 342, 345], "improv": [6, 7, 10, 23, 80, 89, 96, 108, 114, 170, 316, 319, 329, 334, 336, 337, 348, 350, 359, 363, 365, 366, 367, 370, 372, 374, 378, 382, 387, 389, 396], "feedback": 6, "complet": [6, 7, 8, 81, 82, 84, 89, 90, 96, 107, 108, 113, 116, 169, 317, 326, 331, 383], "befor": [6, 7, 9, 11, 14, 33, 78, 84, 85, 87, 88, 89, 94, 96, 99, 107, 108, 111, 116, 129, 130, 139, 140, 142, 162, 168, 176, 180, 181, 182, 199, 202, 267, 281, 284, 295, 296, 317, 318, 319, 323, 326, 329, 330, 334, 336, 338, 339, 342, 343, 344, 353, 388], "seamlessli": [6, 20, 41], "bitbucket": [6, 86], "depend": [6, 13, 81, 85, 86, 87, 94, 96, 99, 104, 108, 111, 113, 114, 121, 122, 146, 147, 157, 158, 193, 240, 267, 273, 284, 296, 313, 318, 323, 325, 326, 334, 335, 337, 342, 348, 350, 372, 389, 390, 396], "maco": [6, 7, 86], "trivial": [6, 86], "xcode": [6, 86], "ship": [6, 11, 84, 86], "window": [6, 7, 60, 63, 71, 78, 81, 83, 85, 86, 88, 90, 94, 101, 108, 140, 156, 162, 168, 176, 180, 181, 182, 212, 234, 236, 246, 247, 255, 266, 277, 278, 279, 281, 299, 300, 321, 325, 326, 328, 337, 339, 341, 359, 364, 373], "linux": [6, 81, 84, 85, 86, 90, 92, 325, 336, 364, 373], "unix": [6, 86, 108, 212, 236, 246, 247, 325, 326], "debian": [6, 86], "ubuntu": [6, 86], "simpl": [6, 9, 26, 32, 33, 73, 75, 84, 86, 91, 93, 94, 98, 99, 104, 107, 108, 111, 114, 121, 122, 136, 141, 157, 168, 178, 279, 317, 318, 328, 329, 331, 334, 342, 343, 344, 396], "sudo": [6, 86], "apt": [6, 86, 326], "altern": [6, 21, 69, 78, 82, 86, 107, 108, 111, 117, 194, 213, 313, 319, 329, 330, 331, 334, 338, 343], "miniconda": [6, 81, 86, 87], "anaconda": [6, 81, 86, 87, 365], "conda": [6, 351, 357, 376, 379], "sourcetre": 6, "mac": [6, 81, 92, 212], "consult": [6, 86, 88], "desktop": [6, 84], "stai": [6, 345], "command": [6, 7, 11, 17, 40, 81, 84, 85, 86, 87, 89, 92, 108, 217, 220, 224, 225, 226, 317, 324, 325, 328, 334, 344], "id": [6, 96, 97, 108, 117, 137, 175, 197, 231, 274, 297, 329, 330, 331], "pycharm": [6, 328], "lot": [6, 7, 314, 331, 332], "visual": [6, 9, 23, 89, 90, 118, 320, 322, 323, 345], "go": [6, 7, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 81, 83, 84, 85, 86, 326, 328, 336, 338], "hit": 6, "button": [6, 15, 84, 87, 95, 100, 317], "exact": [6, 9, 85, 92, 96, 97, 108, 114, 117, 150, 160, 313, 321], "Then": [6, 10, 21, 29, 82, 83, 85, 87, 317, 318, 321, 323, 325, 326, 328, 335], "clone": [6, 7, 15, 83], "machin": [6, 7, 84, 86, 108, 195, 326], "fastest": [6, 86, 108, 168, 318], "com": [6, 29, 45, 50, 86, 91, 317, 319, 323, 330, 343, 390], "localfold": 6, "cd": [6, 11, 86, 87, 92, 111, 328], "upstream": [6, 7, 86], "ll": [6, 7, 10, 94, 104, 316, 317], "build": [6, 7, 9, 13, 20, 357, 364, 383, 386], "miniforg": [6, 86], "sure": [6, 10, 23, 86, 93], "up": [6, 7, 9, 10, 14, 81, 86, 89, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 303, 318, 324, 325, 334], "previous": [6, 11, 20, 33, 66, 86, 95, 108, 218, 221, 222, 227, 260, 317, 319, 334, 337], "now": [6, 7, 20, 22, 25, 26, 32, 33, 36, 40, 41, 48, 50, 53, 57, 66, 73, 74, 78, 81, 88, 97, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 270, 303, 316, 317, 318, 319, 320, 321, 322, 324, 325, 328, 331, 333, 335, 338, 339, 342, 343, 344, 345, 348, 350, 351, 352, 353, 355, 359, 360, 365, 370, 371, 373, 375, 378, 379, 380, 383, 388, 389, 390, 392, 393, 394, 395, 396], "mode": [6, 101, 108, 113, 266, 278, 334, 343], "touch": [6, 86, 108, 140], "somewhat": [6, 86], "slow": [6, 78, 85, 86, 87, 350, 354], "mamba": [6, 7, 82, 85, 86, 87], "config": [6, 85, 87, 92, 94, 98, 99, 101, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 384], "channel": [6, 20, 85, 87, 108, 248, 365], "forg": [6, 85, 86, 87], "cantera": [6, 7, 85, 87, 357, 364], "spectrocat": [6, 11, 82, 84, 85, 87, 365], "channel_prior": 6, "flexibl": [6, 108, 141, 160, 178, 314, 317, 319, 328, 331, 332], "jinja2": 6, "un": [6, 99, 340], "just": [6, 9, 10, 20, 33, 36, 45, 50, 81, 85, 87, 88, 99, 333, 335, 339, 340, 345], "script": [6, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 80, 83, 87, 89, 113, 117, 137, 175, 197, 231, 264, 265, 274, 297, 324, 325, 328, 334, 396], "yaml": 6, "ci": [6, 11, 357], "env_creat": 6, "py": [6, 7, 8, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 61, 62, 63, 65, 66, 67, 69, 70, 73, 74, 75, 76, 78, 79, 82, 87, 90, 92, 324, 325, 333, 350, 372], "v": [6, 11, 21, 22, 33, 42, 73, 74, 84, 85, 86, 87, 88, 91, 93, 96, 97, 106, 108, 112, 116, 122, 158, 169, 299, 313, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 354], "dev": [6, 82, 85, 87, 326], "scpy3": 6, "yml": [6, 86, 350], "env": [6, 85, 86, 87, 350], "f": [6, 7, 17, 18, 21, 32, 33, 45, 69, 73, 74, 86, 91, 93, 96, 104, 108, 117, 175, 194, 197, 231, 274, 300, 318, 319, 320, 321, 323, 324, 325, 326, 334, 343], "m": [6, 23, 42, 62, 73, 74, 85, 86, 87, 91, 93, 96, 97, 98, 108, 118, 122, 139, 140, 152, 166, 176, 181, 182, 189, 192, 201, 217, 220, 224, 225, 226, 235, 284, 285, 288, 291, 296, 299, 313, 321, 322, 323, 324, 328, 331, 334, 336, 338, 340, 345, 367, 381], "pip": [6, 7, 86, 359, 372], "At": [6, 85, 86, 87, 108, 319, 325, 326], "abl": [6, 10, 14, 86, 89, 108, 236, 313, 317], "print": [6, 14, 20, 21, 22, 25, 26, 33, 40, 41, 42, 45, 47, 57, 73, 74, 75, 86, 88, 93, 96, 108, 113, 114, 117, 122, 258, 270, 273, 283, 288, 318, 319, 320, 321, 323, 324, 325, 326, 331, 333, 334, 335, 338, 339, 342, 343, 345], "api": [6, 10, 12, 14, 19, 21, 23, 24, 25, 26, 29, 45, 50, 78, 80, 85, 86, 87, 88, 89, 90, 96, 108, 174, 313, 316, 318, 319, 320, 321, 322, 323, 325, 326, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 350, 358, 363, 370, 383], "exit": [6, 85, 86], "abov": [6, 9, 10, 17, 25, 49, 83, 108, 158, 314, 317, 319, 320, 321, 325, 326, 328, 330, 331, 334, 335, 337, 340, 343], "differ": [6, 9, 17, 22, 29, 45, 49, 53, 65, 66, 69, 78, 81, 84, 85, 86, 93, 94, 96, 101, 108, 109, 110, 111, 115, 117, 118, 127, 138, 152, 156, 157, 190, 191, 192, 237, 288, 299, 317, 321, 322, 323, 326, 328, 331, 332, 334, 335, 338, 339, 340, 343, 344, 353, 365, 373, 394], "view": [6, 48, 53, 86, 108, 118, 158, 313, 325, 331, 334, 343], "info": [6, 19, 20, 21, 22, 23, 26, 32, 36, 57, 65, 73, 74, 75, 78, 85, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 123, 187, 266, 278, 299, 318, 319, 321, 324, 330, 357, 374, 388], "root": [6, 7, 108, 114, 118, 284, 325, 340], "deactiv": [6, 86], "master": [6, 7, 50, 81, 313, 323, 328, 350], "reflect": [6, 7, 29, 101, 108, 246, 266, 278, 383], "my_new_featur": 6, "checkout": 6, "simplifi": [6, 85, 314, 329, 334, 343, 350], "my": [6, 57], "keep": [6, 9, 20, 22, 36, 66, 73, 74, 78, 93, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 150, 159, 318, 321, 334, 341], "bug": [6, 14, 89, 90, 324, 326, 342, 347, 370], "clear": [6, 22, 29, 32, 33, 36, 61, 62, 66, 69, 73, 74, 78, 108, 116, 217, 218, 220, 221, 222, 224, 225, 226, 227, 317, 318, 319, 321, 323, 334, 336, 337, 338, 339, 343, 345], "bring": 6, "switch": [6, 85, 87, 93], "them": [6, 7, 9, 18, 19, 21, 25, 41, 42, 49, 80, 82, 89, 108, 247, 313, 319, 323, 325, 326, 329, 330, 331, 334, 335, 338, 356, 394], "ff": [6, 86], "easi": [6, 9, 89, 325, 326, 328], "rememb": [6, 17, 25, 317, 331], "whatev": [6, 11, 84, 85, 87, 92, 108, 329], "style": [6, 7, 9, 45, 46, 53, 54, 108, 116, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 333, 336, 350, 387, 394], "readabl": [6, 91, 93, 108, 118, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 321, 325, 326, 371], "ve": 6, "track": 6, "By": [6, 20, 41, 45, 83, 92, 94, 96, 98, 99, 101, 104, 107, 108, 111, 113, 114, 116, 121, 122, 129, 130, 139, 152, 153, 159, 167, 169, 199, 202, 217, 220, 224, 225, 226, 236, 266, 278, 280, 284, 285, 288, 293, 296, 299, 300, 301, 318, 325, 326, 329, 334, 339], "again": [6, 24, 36, 84, 86, 108, 236, 246, 247, 319, 326, 334], "someth": [6, 9, 10, 15, 324, 325, 329, 340, 345, 350], "like": [6, 7, 9, 10, 11, 15, 33, 40, 73, 74, 82, 85, 87, 93, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 121, 122, 125, 126, 155, 156, 159, 164, 168, 174, 211, 237, 266, 273, 278, 299, 308, 313, 318, 320, 321, 325, 326, 328, 332, 334, 340], "On": [6, 9, 92, 108, 163, 319, 321, 330], "final": [6, 9, 19, 21, 22, 25, 29, 33, 36, 50, 53, 57, 89, 90, 96, 107, 108, 169, 170, 177, 196, 313, 317, 318, 319, 321, 324, 325, 326, 329, 331, 332, 334, 343], "explanatori": [6, 313, 317, 323], "recommend": [6, 9, 11, 81, 85, 87, 93, 96, 97, 108, 314, 325, 328, 329, 334], "convent": [6, 40, 94, 108, 212, 324, 325, 331, 343], "prefix": [6, 9, 32, 74, 212, 314, 329], "present": [6, 7, 9, 10, 21, 22, 73, 85, 86, 87, 96, 108, 114, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 314, 319, 320, 321, 326, 329, 334, 337, 340, 375, 376, 379], "enh": 6, "enhanc": [6, 7, 14, 326], "perf": 6, "maint": 6, "cleanup": 6, "structur": [6, 7, 13, 89, 108, 164, 174, 211, 308, 313, 319, 320, 324, 332, 333], "80": [6, 29, 45, 73, 114, 317, 323, 331, 342], "char": [6, 96, 97, 318], "blank": [6, 9, 50, 203, 330, 334], "bodi": 6, "pleas": [6, 7, 12, 74, 80, 81, 89, 90, 329, 334], "gh1234": 6, "1234": [6, 7, 317], "appear": [6, 45, 73, 78, 85, 87, 108, 160, 313, 326, 335], "publicli": [6, 314], "yournam": 6, "spectrochemp": 6, "fetch": 6, "yet": [6, 15, 84, 86, 89, 108, 280, 326, 328, 329, 331, 335], "guidelin": [6, 8, 9], "navig": [6, 10, 328], "click": [6, 7, 15, 84, 89, 100, 328], "compar": [6, 7, 17, 21, 22, 29, 96, 108, 156, 189, 317, 319, 323, 334, 338, 339, 343, 358], "select": [6, 15, 20, 29, 32, 36, 41, 53, 65, 66, 73, 74, 84, 87, 91, 94, 96, 97, 98, 99, 100, 101, 104, 107, 108, 111, 113, 114, 116, 121, 122, 129, 130, 139, 144, 155, 161, 168, 199, 202, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 266, 278, 282, 300, 301, 303, 315, 317, 318, 321, 322, 323, 325, 326, 337, 340, 342, 343, 355, 373], "eventu": [6, 86, 94, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 247, 322], "next": [6, 9, 10, 73, 74, 85, 87, 107, 108, 310, 318, 320, 321, 324, 330, 331, 334], "releas": [6, 7, 10, 324, 325, 326, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "fine": [6, 321, 343], "last": [6, 7, 9, 20, 21, 74, 85, 88, 96, 99, 101, 107, 108, 127, 128, 131, 140, 142, 144, 145, 151, 159, 162, 167, 171, 172, 176, 177, 180, 181, 182, 185, 193, 196, 198, 214, 215, 237, 261, 263, 266, 275, 278, 280, 281, 288, 294, 295, 299, 317, 318, 320, 321, 325, 326, 333, 334, 336, 337, 341, 342, 390], "preview": 6, "tab": [6, 330], "send": [6, 99], "maintain": [6, 7, 10], "evalu": [6, 22, 93, 94, 101, 108, 128, 131, 168, 265, 266, 278], "probabl": [6, 9, 73, 89, 317, 321, 325, 331, 334, 342], "restart": [6, 15, 84, 325], "continu": [6, 9, 13, 32, 108, 235, 318, 319], "anoth": [6, 9, 57, 65, 66, 84, 85, 96, 108, 159, 189, 317, 320, 323, 326, 327, 331, 334, 342, 345], "might": [6, 9, 89, 93, 96, 108, 132, 168, 324, 326, 338], "resolv": [6, 107, 313, 319], "sinc": [6, 22, 33, 89, 326, 331], "simpli": [6, 9, 83, 317, 328, 334, 337, 343, 345], "save": [6, 57, 84, 85, 87, 94, 95, 98, 99, 104, 106, 107, 108, 110, 111, 112, 113, 114, 116, 117, 121, 122, 194, 217, 220, 224, 225, 226, 236, 300, 301, 303, 317, 326, 331, 332, 334, 373], "explan": [6, 9, 10, 344], "uncommit": 6, "stash": 6, "reappli": 6, "sever": [6, 7, 9, 41, 52, 55, 59, 73, 78, 83, 93, 94, 96, 107, 108, 114, 117, 156, 157, 168, 223, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 319, 326, 329, 332, 333, 336, 340, 341, 342, 343, 355, 357, 365, 390, 396], "scenario": 6, "comment": [6, 9, 10, 14, 19, 32, 73, 74, 75, 78, 108, 168, 318, 331], "action": [6, 7, 91, 93, 108, 357], "trigger": [6, 95, 104, 317, 324], "workflow": [6, 7, 10, 90, 357, 362], "everi": [6, 9, 114, 377], "yourself": [6, 7], "rid": 6, "know": [6, 9, 42, 89, 98, 99, 104, 111, 114, 121, 122, 313, 317, 318, 326], "lowercas": 6, "otherwis": [6, 9, 96, 108, 111, 114, 116, 122, 124, 140, 142, 176, 177, 181, 182, 193, 196, 201, 284, 293, 295, 296], "won": [6, 24, 81, 321], "tell": [6, 108, 138, 223], "hasn": 6, "still": [6, 7, 90, 108, 168, 329, 331, 334, 363, 373, 376, 384, 394, 396], "chanc": [6, 343], "clarifi": 6, "larg": [6, 11, 13, 17, 73, 108, 121, 168, 299, 314, 317, 321, 334, 343, 363], "green": [6, 7, 36, 53, 73, 74, 321, 330, 339], "per": [6, 7, 9, 10, 24, 96, 108, 118, 122, 192, 203, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 284, 291, 319, 334], "few": [6, 21, 29, 53, 88, 108, 116, 248, 319, 323, 331], "tool": [7, 15, 82, 89, 91, 329, 338], "stylist": 7, "warn": [7, 18, 23, 24, 26, 45, 48, 50, 73, 78, 88, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 155, 168, 266, 269, 278, 292, 298, 299, 317, 318, 319, 324, 325, 326, 330, 331, 333, 334, 336, 339, 340, 342, 344, 353, 359, 381, 386, 387], "thu": [7, 14, 21, 25, 45, 83, 84, 88, 94, 96, 97, 108, 168, 313, 317, 318, 319, 320, 322, 323, 325, 334, 343, 345], "sudden": 7, "potenti": [7, 84, 94, 108, 136], "break": [7, 317, 347, 369], "avoid": [7, 9, 11, 45, 74, 84, 97, 107, 108, 168, 321, 324, 325, 331, 334, 336, 340, 342, 359, 387], "mass": [7, 91, 93, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "breakag": 7, "extra": [7, 107, 114, 318, 331], "outlin": 7, "hook": 7, "instal": [7, 10, 90, 104, 325, 329, 334, 347, 348, 351, 359, 364, 372, 376, 379, 380, 389], "manual": [7, 9, 89, 108, 136, 138, 141, 157, 163, 178, 214, 215, 279, 281, 316, 336], "note": [7, 10, 17, 23, 24, 25, 36, 40, 45, 49, 53, 69, 73, 74, 80, 84, 85, 93, 95, 96, 97, 98, 99, 104, 107, 108, 110, 111, 113, 114, 116, 117, 121, 122, 128, 129, 141, 163, 164, 168, 170, 178, 193, 194, 196, 199, 201, 213, 236, 237, 246, 247, 248, 251, 253, 254, 266, 281, 284, 296, 317, 318, 319, 321, 325, 326, 331, 334, 335, 336, 339, 340, 342, 343, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "beforehand": 7, "recent": [7, 85, 96, 108, 288, 313, 325, 333], "ref": [7, 18, 108, 138], "head": [7, 9], "helper": [7, 108], "import_optional_depend": 7, "met": [7, 108, 160, 334], "importerror": [7, 82, 324], "dict": [7, 9, 93, 94, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 153, 168, 265, 321, 334], "diff": [7, 69, 108, 152, 322, 326, 342, 343], "auto": [7, 10, 108, 114, 127, 217, 220, 223, 224, 225, 226, 334], "addition": [7, 81, 231, 325, 331, 340], "editor": [7, 91], "plugin": 7, "edit": [7, 85, 89, 92], "caveat": 7, "catch": [7, 108, 138, 321, 324], "bewar": [7, 334], "delet": [7, 108, 384], "incorrect": [7, 23], "unus": 7, "becaus": [7, 10, 89, 106, 108, 112, 116, 128, 168, 321, 325, 326, 328, 331, 334, 335, 342, 343], "though": [7, 22, 334], "xarg": 7, "r": [7, 19, 26, 33, 57, 61, 62, 66, 69, 73, 75, 78, 85, 87, 91, 106, 108, 112, 116, 144, 171, 172, 212, 246, 261, 313, 317, 318, 323, 325, 326, 329, 333, 334, 336, 337, 338, 340, 343], "flag": [7, 96, 108, 146, 147, 223, 267, 280, 282, 286, 288, 293], "omit": [7, 9], "slightli": [7, 93, 323, 334, 392], "support": [7, 9, 15, 91, 108, 235, 315, 317, 321, 325, 327, 334, 340, 351, 396], "via": [7, 85, 87, 108, 114, 183], "mingw": 7, "toolchain": 7, "imit": 7, "pr": [7, 10], "end": [7, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 84, 85, 93, 94, 95, 96, 100, 101, 108, 132, 140, 153, 193, 196, 266, 278, 317, 321, 326, 334, 342, 343], "analog": 7, "think": [7, 9], "clearli": [7, 317, 319, 320, 337, 343], "pull": [7, 8, 10, 12, 13, 14, 80, 86, 370], "care": [7, 66, 96, 108, 132, 337], "signatur": [7, 9, 100, 333], "deprec": [7, 26, 33, 74, 88, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 275, 318, 339, 347, 350, 378, 381, 387], "sphinx": [7, 9, 10], "util": [7, 26, 212, 333, 357, 380], "old_func": 7, "summari": [7, 74, 75, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 137, 175, 197, 231, 274, 297, 319, 332], "new_func": 7, "github": [7, 10, 14, 50, 82, 83, 85, 86, 87, 330, 343, 357, 370, 376, 390], "consid": [7, 9, 18, 93, 99, 104, 107, 108, 160, 168, 317, 319, 321, 337, 343], "merg": [7, 9, 10, 26, 45, 65, 73, 108, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 267], "red": [7, 29, 33, 36, 53, 73, 74, 317, 318, 319, 320, 321, 323, 330, 334, 338, 339, 387], "strongli": [7, 314], "reli": [7, 89, 319], "repetit": [7, 331], "short": [7, 14, 25, 75, 83, 88, 118, 331, 340], "cycl": [7, 334], "often": [7, 9, 24, 87, 89, 99, 313, 314, 320, 323, 325, 335, 338], "taken": [7, 29, 50, 73, 74, 75, 95, 96, 99, 108, 141, 167, 178, 201, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 296, 319, 320, 350], "alwai": [7, 9, 10, 89, 93, 94, 95, 96, 106, 108, 112, 116, 168, 231, 284, 296, 314, 318, 320, 324, 325, 329, 334], "worth": [7, 10, 14, 321, 326, 334], "most": [7, 9, 11, 81, 88, 89, 91, 96, 108, 168, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 288, 313, 315, 320, 321, 325, 329, 331, 333, 334, 336], "push": [7, 89], "habit": 7, "ahead": 7, "never": [7, 334], "conveni": [7, 21, 22, 40, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 319, 320, 326, 331], "suggest": [7, 80, 89], "inspir": 7, "wiki": [7, 334], "explicitli": [7, 9, 84, 96, 108, 321, 325, 334], "construct": [7, 96, 108, 158, 159, 169, 170, 297, 318], "self": [7, 9, 33, 91, 93, 94, 95, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 118, 121, 122, 124, 213, 317, 321, 325, 326, 333], "test_": 7, "mark": [7, 108, 223, 318, 321, 330], "metadata": [7, 8, 26, 33, 40, 73, 88, 90, 96, 108, 117, 240, 246, 326, 331, 334, 338, 356], "xfail": 7, "parametr": 7, "syntax": [7, 9, 32, 40, 57, 74, 81, 107, 108, 314, 329, 330, 332, 333, 334, 343], "bare": 7, "scalar": [7, 33, 96, 108, 116, 129, 130, 143, 173, 174, 199, 202, 218, 219, 221, 222, 227, 228, 229, 317, 318, 334, 339, 340], "truth": [7, 340], "assert_dataset_equ": 7, "comparison": [7, 36, 65, 108, 168, 320, 335, 337, 341, 350, 353, 356], "typic": [7, 89, 92, 94, 108, 136, 248, 281, 313, 317, 321, 336], "pattern": [7, 73, 91, 315], "versu": [7, 33, 318], "would": [7, 9, 20, 23, 33, 36, 41, 69, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 160, 317, 319, 321, 342, 343, 388], "test_d": 7, "put": [7, 329, 334], "test_dataset": 7, "assert_array_equ": 7, "test_nddataset_real_imag": 7, "na": 7, "arrai": [7, 9, 18, 22, 25, 33, 40, 45, 73, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 139, 140, 142, 143, 144, 146, 147, 152, 153, 158, 159, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 183, 184, 186, 193, 196, 199, 201, 202, 203, 210, 211, 213, 218, 219, 235, 237, 238, 240, 244, 245, 259, 260, 266, 267, 278, 281, 282, 284, 285, 287, 289, 290, 291, 295, 296, 299, 307, 308, 310, 311, 313, 314, 318, 326, 331, 333, 335, 339, 341, 342, 350, 392, 395], "0j": [7, 340], "5j": [7, 340], "2j": [7, 340], "3j": [7, 340], "nd": [7, 14, 32, 36, 45, 65, 97, 108, 109, 110, 117, 139, 152, 159, 201, 210, 216, 236, 246, 247, 267, 284, 285, 296, 300, 301, 307, 308, 313, 314, 318, 329, 336, 337, 340, 387], "real": [7, 61, 62, 74, 75, 96, 103, 108, 119, 120, 129, 135, 144, 146, 147, 199, 200, 217, 220, 224, 225, 226, 232, 262, 284, 296, 339, 340, 341, 395], "imag": [7, 40, 50, 84, 108, 116, 146, 147, 200, 203, 204, 217, 218, 220, 221, 222, 224, 225, 226, 227, 232, 325, 330, 334, 336, 338, 364, 396], "adata": 7, "none": [7, 9, 18, 19, 22, 23, 26, 29, 32, 40, 53, 73, 74, 75, 93, 94, 95, 96, 98, 99, 100, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 139, 143, 148, 149, 152, 159, 160, 163, 164, 166, 167, 168, 169, 173, 174, 175, 176, 177, 183, 184, 185, 188, 193, 196, 197, 199, 201, 202, 203, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 237, 239, 240, 241, 243, 249, 250, 265, 274, 281, 282, 284, 285, 296, 297, 300, 307, 308, 309, 312, 317, 318, 319, 321, 323, 325, 331, 333, 334, 343, 379, 381, 387], "nan": [7, 96, 108, 116, 128, 129, 130, 168, 199, 202, 340, 379], "inf": [7, 108, 116, 173], "1j": 7, "test_1d_nddataset": 7, "arr": [7, 9], "size": [7, 20, 24, 25, 33, 40, 41, 42, 45, 57, 66, 69, 73, 74, 75, 84, 88, 96, 97, 99, 101, 107, 108, 116, 128, 129, 130, 131, 132, 138, 139, 150, 152, 156, 159, 167, 168, 169, 170, 173, 174, 177, 185, 188, 189, 193, 196, 199, 201, 202, 210, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 235, 266, 275, 278, 284, 285, 294, 296, 307, 309, 311, 312, 313, 317, 318, 319, 320, 321, 322, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 345, 375], "len": [7, 73, 107, 108, 118, 153, 168, 236, 240, 246, 247, 284, 296, 318, 321, 334], "dtype": [7, 9, 18, 25, 96, 106, 108, 112, 118, 125, 126, 132, 152, 159, 160, 163, 164, 166, 169, 170, 173, 174, 177, 184, 193, 196, 201, 210, 211, 235, 284, 285, 296, 307, 308, 331, 338, 340, 350], "dim": [7, 17, 18, 19, 22, 50, 69, 73, 75, 96, 97, 101, 108, 127, 128, 129, 130, 131, 133, 134, 138, 139, 140, 142, 145, 146, 147, 148, 149, 151, 152, 155, 159, 162, 167, 169, 171, 172, 176, 180, 181, 182, 185, 198, 199, 201, 202, 214, 215, 233, 261, 263, 266, 275, 278, 280, 281, 282, 284, 285, 293, 294, 295, 296, 299, 322, 323, 326, 331, 335, 343, 363, 375], "complex128": [7, 96, 108, 150, 189, 338], "float32": [7, 108, 235, 284, 296], "untitl": 7, "mask": [7, 17, 23, 25, 32, 96, 108, 122, 127, 135, 160, 166, 184, 210, 217, 220, 224, 225, 226, 260, 262, 288, 289, 317, 331, 332, 334, 335, 340, 341, 379, 387], "nomask": [7, 108], "startswith": 7, "get_user_and_nod": 7, "histori": [7, 24, 25, 45, 73, 75, 88, 89, 108, 246, 319, 320, 322, 326, 332, 336, 338, 340, 342, 345, 374], "yield": [7, 321, 324], "session": [7, 9, 84, 85, 87], "platform": [7, 11, 14, 81, 84, 90, 373], "darwin": 7, "pluggi": 7, "rootdir": 7, "configfil": 7, "ini": 7, "anyio": 7, "doctestplu": 7, "item": [7, 9, 96, 108, 117, 118, 170, 326, 330, 342], "100": [7, 24, 40, 54, 61, 73, 74, 75, 95, 97, 108, 114, 122, 152, 246, 251, 270, 285, 313, 317, 318, 319, 320, 322, 326, 331, 334, 335, 338, 343, 344], "a5": 7, "a6": 7, "ndcomplex": 7, "152": 7, "complexwarn": 7, "cast": [7, 9, 96, 106, 108, 112, 340], "complex": [7, 9, 10, 73, 74, 75, 96, 108, 125, 126, 129, 135, 144, 167, 199, 217, 220, 224, 225, 226, 262, 267, 284, 296, 318, 331, 332, 333, 336, 338, 341, 395], "discard": [7, 78, 96], "imaginari": [7, 96, 102, 103, 108, 119, 135, 144, 183, 186, 217, 220, 224, 225, 226, 262, 338, 340, 341, 344], "astyp": [7, 9, 96, 108, 338], "_dtype": 7, "stabl": [7, 10, 14, 82, 85, 87, 99], "28": [7, 74, 91, 317, 319, 322, 326, 331, 334, 340], "insid": [7, 108, 168, 330, 334], "block": [7, 9, 32, 74, 83, 89, 318, 326, 330], "bash": 7, "exhaust": [7, 314], "minut": [7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 83, 96, 108, 189, 321, 326, 334, 342, 390], "subset": [7, 108, 168, 282], "around": [7, 90, 96, 101, 108, 156, 262, 266, 278, 329, 331, 334, 337, 339, 345], "k": [7, 9, 17, 18, 20, 22, 23, 24, 25, 40, 57, 61, 62, 87, 88, 91, 93, 97, 104, 105, 108, 115, 122, 158, 166, 203, 235, 313, 323, 331, 334, 338], "regex_matching_test_nam": 7, "Or": [7, 19, 84, 320], "testclass": 7, "test_method": 7, "xdist": 7, "speed": [7, 33, 96, 108, 299, 318, 334, 348, 385, 389, 396], "multicor": 7, "significantli": [7, 111, 321], "reduc": [7, 24, 61, 62, 91, 94, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 118, 121, 122, 128, 129, 130, 131, 159, 168, 190, 191, 192, 199, 201, 202, 233, 284, 285, 288, 291, 296, 313, 321, 334, 358, 388], "changelog": [7, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "md": [7, 383], "ongo": 7, "entri": [7, 95, 108, 117, 163, 282, 317, 330, 334, 343, 374], "fix": [7, 9, 14, 32, 53, 74, 96, 108, 115, 135, 262, 313, 318, 319, 337, 340, 347], "unavoid": 7, "reader": [8, 13, 50, 108, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 317, 325, 326, 343, 350, 357, 358, 369, 378, 395], "sampl": [8, 9, 24, 29, 54, 57, 69, 96, 101, 106, 108, 112, 114, 116, 127, 168, 177, 193, 196, 235, 237, 239, 241, 249, 250, 266, 275, 317, 321, 323, 326, 334, 343, 372], "filetyp": [8, 108, 117, 348, 389], "alia": [8, 9, 94, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 167, 204, 205, 206, 207, 208, 209, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 251, 253, 254, 266, 268, 271, 275, 278, 294, 299, 302, 304, 305, 306, 336, 394, 395], "creat": [8, 9, 10, 12, 14, 20, 24, 25, 29, 32, 40, 45, 57, 73, 74, 75, 80, 83, 84, 85, 87, 88, 96, 97, 99, 101, 107, 108, 118, 132, 145, 169, 170, 177, 193, 196, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 243, 256, 257, 266, 278, 283, 317, 318, 319, 320, 322, 323, 326, 329, 330, 332, 333, 336, 338, 340, 342, 343, 345, 374, 396], "reader_xxx": 8, "polish": 8, "string": [9, 14, 78, 84, 93, 94, 96, 97, 99, 100, 104, 107, 108, 116, 117, 144, 194, 212, 213, 218, 221, 222, 227, 246, 255, 314, 325, 326, 330, 331, 332, 334, 396], "class": [9, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 128, 131, 136, 137, 141, 157, 175, 178, 194, 197, 231, 236, 246, 247, 274, 279, 297, 314, 316, 317, 319, 330, 331, 392, 394, 396], "programm": 9, "detail": [9, 10, 20, 22, 36, 45, 66, 88, 89, 90, 95, 101, 108, 113, 114, 116, 141, 158, 178, 266, 278, 313, 317, 321, 325, 326, 329, 345, 347, 394], "practic": [9, 91, 108, 284, 296, 326, 327], "onlin": [9, 84], "serv": 9, "num1": 9, "num2": 9, "integ": [9, 23, 25, 36, 78, 94, 96, 101, 108, 127, 132, 138, 140, 142, 151, 152, 155, 162, 167, 168, 171, 172, 176, 180, 181, 182, 185, 198, 201, 214, 215, 231, 261, 263, 266, 275, 278, 281, 284, 285, 294, 295, 296, 299, 317, 340, 342], "wrap": [9, 101, 108, 116, 118, 266, 278], "anyth": [9, 334], "int": [9, 93, 94, 96, 97, 98, 99, 101, 104, 107, 108, 111, 113, 114, 116, 121, 122, 123, 127, 128, 129, 130, 131, 135, 136, 138, 139, 140, 142, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 182, 183, 184, 185, 193, 196, 198, 199, 201, 202, 203, 210, 214, 215, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 235, 237, 255, 261, 262, 263, 266, 275, 278, 279, 280, 281, 282, 284, 285, 286, 294, 295, 296, 299, 307, 309, 311, 312, 317, 331, 334], "sum": [9, 50, 106, 107, 108, 112, 116, 138, 139, 152, 201, 284, 296, 313, 322, 335, 343], "subtract": [9, 36, 89, 90, 94, 108, 136, 138, 141, 157, 178, 279, 314, 317, 321, 326, 331, 332, 333, 335], "easier": [9, 65, 329, 337, 377], "export": [9, 90, 108, 109, 110, 117, 325, 329, 350], "pdf": [9, 91, 334], "pep": 9, "257": [9, 321], "quit": [9, 10, 18, 80, 317, 325, 328], "explain": [9, 14, 17, 24, 25, 95, 108, 114, 122, 155, 313, 318, 320, 326, 329], "numpydoc": 9, "scipi": [9, 81, 87, 89, 94, 101, 108, 113, 114, 115, 168, 266, 278, 317, 321, 343, 396], "restructuredtext": [9, 10], "rest": [9, 10, 81, 324], "markup": 9, "encod": [9, 108, 242, 326], "plain": [9, 10, 118, 325], "primer": 9, "quick": [9, 88, 90, 329, 330], "summar": 9, "three": [9, 22, 24, 57, 73, 94, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 143, 318, 321, 330, 331, 342, 394], "doubl": [9, 108, 111, 311, 325], "quot": 9, "left": [9, 15, 73, 83, 93, 96, 107, 108, 114, 116, 122, 128, 129, 130, 131, 135, 171, 172, 176, 198, 199, 201, 202, 203, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 233, 262, 284, 285, 296, 313, 317, 319, 321, 334, 343], "sentenc": 9, "rare": [9, 89, 337], "bold": [9, 330, 334], "ital": [9, 330, 334], "inlin": [9, 334], "backtick": 9, "built": [9, 10, 14, 73, 75], "liter": [9, 325], "o": [9, 17, 32, 33, 62, 73, 90, 94, 108, 116, 223, 323, 326, 327, 334], "ab": [9, 91, 93, 108, 126, 247, 284, 296, 317, 326, 331, 394], "meth": 9, "func": [9, 100, 108, 213, 318, 331], "link": [9, 80, 85, 87, 329, 357], "seri": [9, 50, 66, 73, 88, 95, 96, 108, 114, 115, 117, 212, 223, 243, 246, 253, 254, 256, 257, 283, 317, 322, 337, 396], "cross": [9, 89, 90, 100, 313], "referenc": 9, "add_valu": 9, "equival": [9, 19, 24, 62, 69, 83, 94, 101, 107, 108, 120, 140, 142, 151, 155, 160, 162, 166, 167, 171, 172, 176, 180, 181, 182, 184, 185, 198, 203, 214, 215, 216, 234, 261, 263, 266, 275, 276, 277, 278, 281, 289, 294, 295, 299, 314, 317, 324, 325, 331, 334, 336, 340, 342, 343], "bad": [9, 116, 392], "With": [9, 96, 108, 128, 129, 130, 131, 199, 201, 202, 233, 284, 285, 296, 314, 317, 318, 319, 325, 326, 329], "mistak": 9, "foo": 9, "bar": [9, 15, 19, 84, 99, 108, 114, 217, 220, 325, 334, 371], "concis": 9, "dot": [9, 18, 19, 108, 111, 118, 203, 218, 219, 221, 222, 227, 228, 229, 320, 333, 334], "fit": [9, 17, 18, 20, 22, 24, 25, 26, 29, 31, 33, 34, 36, 38, 71, 72, 73, 76, 78, 88, 89, 90, 93, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 121, 122, 136, 157, 168, 187, 231, 255, 266, 278, 297, 313, 316, 317, 319, 320, 321, 322, 323, 329, 334, 343, 350, 369, 388, 396], "infinit": [9, 108, 284, 296], "verb": 9, "miss": [9, 85, 87, 89, 108, 127, 317, 335, 364, 395], "too": [9, 17, 25, 36, 40, 73, 74, 96, 317, 318, 321, 334, 340, 354], "verbos": [9, 19, 21, 23, 378], "doesn": [9, 10, 331, 340], "unstack": 9, "pivot": [9, 108, 214, 215, 338], "row": [9, 21, 41, 74, 94, 97, 101, 108, 116, 138, 160, 166, 184, 203, 267, 280, 319, 320, 321, 322, 326, 334, 337, 340], "index": [9, 10, 23, 40, 41, 73, 74, 93, 95, 96, 97, 104, 107, 108, 114, 115, 133, 134, 138, 146, 147, 161, 166, 168, 238, 266, 280, 293, 316, 317, 318, 319, 320, 326, 341, 345, 360, 383, 393, 395, 396], "column": [9, 17, 21, 22, 23, 25, 50, 74, 93, 108, 114, 160, 166, 184, 203, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 313, 319, 320, 334, 342, 345], "multiindex": 9, "level": [9, 84, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 155, 203, 266, 269, 278, 299, 319, 324, 330, 334, 339, 388], "especi": [9, 108, 284, 296, 313, 329, 334], "subindex": 9, "repeat": [9, 66, 101, 108, 266, 278, 337, 343], "tabl": [9, 89, 108, 138, 334], "hyphen": [9, 330, 334], "colon": [9, 333, 342], "indent": 9, "finish": 9, "keyword": [9, 49, 93, 94, 96, 97, 98, 99, 104, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 121, 122, 132, 140, 141, 142, 145, 151, 155, 159, 162, 163, 164, 167, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 185, 193, 194, 196, 198, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 266, 275, 278, 281, 284, 294, 295, 296, 299, 300, 307, 308, 317, 318, 321, 326, 375, 394], "comma": [9, 333, 334, 342], "cpu": 9, "df": [9, 331], "to_csv": 9, "compress": [9, 45, 94, 108, 117, 390], "color": [9, 33, 36, 53, 61, 62, 69, 73, 74, 78, 94, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 203, 217, 220, 223, 224, 225, 226, 317, 318, 319, 321, 334, 336, 343, 350, 387], "blue": [9, 53, 319, 321, 330, 334], "render": [9, 330, 334], "rgb": [9, 116], "boolean": [9, 94, 99, 108, 124, 128, 131, 340], "float": [9, 17, 23, 25, 33, 36, 53, 74, 93, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 127, 132, 135, 136, 152, 153, 155, 156, 162, 166, 168, 169, 170, 171, 172, 176, 180, 184, 193, 196, 201, 203, 211, 214, 215, 217, 220, 223, 224, 225, 226, 235, 262, 266, 270, 278, 281, 284, 285, 296, 299, 317, 321, 322, 331, 342, 345], "bool": [9, 93, 94, 96, 97, 98, 99, 101, 104, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 121, 122, 124, 127, 128, 129, 130, 131, 138, 140, 142, 150, 151, 160, 162, 167, 168, 171, 172, 176, 177, 180, 181, 182, 185, 190, 193, 196, 198, 199, 201, 202, 203, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 267, 280, 281, 282, 284, 285, 286, 288, 290, 291, 293, 295, 296, 309, 310, 311, 312, 342], "subtyp": 9, "tupl": [9, 93, 94, 96, 97, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 127, 129, 130, 131, 139, 141, 161, 163, 169, 178, 199, 202, 203, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 235, 244, 245, 282, 313, 317, 331, 334, 397], "bracket": [9, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 331], "curli": 9, "normal": [9, 18, 40, 61, 62, 98, 99, 100, 107, 108, 114, 116, 175, 284, 295, 296, 314, 318, 319, 334, 336, 338, 343, 350, 396], "ordin": [9, 108, 156, 319], "low": [9, 93, 121, 317, 319], "high": [9, 93, 108, 299, 396], "cat": 9, "dog": 9, "bird": 9, "decim": [9, 93, 96, 108, 135, 262, 330, 334, 342, 392], "spars": [9, 108, 111, 114, 299], "coo_matrix": 9, "coordset": [9, 20, 33, 40, 41, 73, 96, 108, 163, 164, 166, 169, 173, 174, 184, 210, 211, 307, 308, 314, 318, 331, 396], "iter": [9, 21, 22, 23, 26, 32, 36, 93, 94, 96, 97, 99, 105, 107, 108, 111, 113, 114, 116, 136, 141, 157, 169, 170, 178, 279, 317, 319, 348, 389], "output": [9, 10, 19, 20, 23, 33, 73, 74, 78, 83, 84, 85, 87, 93, 94, 95, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 118, 121, 122, 125, 126, 132, 138, 160, 163, 166, 169, 170, 177, 184, 196, 217, 218, 220, 221, 222, 224, 225, 226, 227, 235, 265, 266, 278, 300, 303, 314, 317, 318, 319, 321, 324, 325, 340, 384], "preced": [9, 318, 325], "similar": [9, 33, 81, 83, 96, 108, 177, 196, 317, 320, 321, 323, 326, 334], "ones": [9, 29, 107, 108, 117, 163, 164, 166, 173, 174, 184, 211, 307, 308, 320, 323, 328, 331, 334], "random": [9, 18, 84, 96, 108, 111, 114, 288, 314, 318, 320, 331, 334, 342, 343], "uniform": [9, 96, 108, 196, 235, 343], "random_lett": 9, "sequenc": [9, 94, 96, 97, 108, 116, 118, 168, 173, 177, 193, 196, 210, 293, 307, 317, 321, 326, 331], "length": [9, 93, 96, 106, 108, 112, 116, 117, 118, 124, 132, 139, 168, 177, 196, 223, 282, 288, 301, 313, 319, 321, 331, 334, 342, 343, 345], "randint": 9, "join": [9, 17, 32, 62, 73, 321, 325], "ascii_lowercas": 9, "rang": [9, 18, 20, 23, 36, 41, 53, 73, 88, 94, 95, 96, 107, 108, 114, 116, 122, 136, 138, 141, 170, 178, 233, 317, 318, 320, 321, 322, 326, 331, 334, 342, 350, 356], "sample_valu": 9, "while": [9, 10, 24, 81, 84, 89, 93, 106, 107, 108, 112, 168, 313, 317, 319, 320, 323, 325, 326, 334, 343], "let": [9, 20, 22, 25, 29, 32, 33, 41, 42, 54, 57, 66, 73, 78, 108, 138, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 331, 333, 335, 337, 338, 340, 342, 343, 345], "obviou": [9, 18, 321], "tail": 9, "datafram": 9, "begin": [9, 73, 318], "loc": [9, 29, 69, 96, 317, 323, 338, 343], "iloc": 9, "posit": [9, 20, 23, 36, 73, 74, 78, 96, 101, 106, 107, 108, 112, 128, 132, 135, 145, 159, 166, 168, 171, 172, 213, 262, 266, 278, 318, 321, 326, 340], "max": [9, 17, 18, 22, 61, 62, 73, 91, 93, 96, 104, 107, 108, 114, 231, 237, 318, 319, 321, 326, 336, 338, 340, 345], "min": [9, 23, 36, 40, 78, 93, 96, 104, 108, 111, 114, 116, 122, 169, 237, 313, 320, 321, 322, 326, 340, 342], "opposit": [9, 270], "iterrow": 9, "itertupl": 9, "vice": 9, "versa": 9, "fillna": 9, "dropna": 9, "read_csv": [9, 108, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 325, 326], "complementari": 9, "to_datetim": 9, "mainli": [9, 11, 18, 81, 89, 113, 329], "sens": [9, 10, 89, 108, 157, 317, 345], "less": [9, 74, 93, 97, 101, 108, 111, 114, 116, 266, 318, 331, 334], "header": [9, 108, 238, 358], "context": [9, 91, 96, 108, 118, 124, 168, 265, 270, 313, 315, 325, 328], "onto": [9, 99, 114, 320], "download_iri": 9, "upload": [9, 17, 45, 83, 95, 108, 161, 195, 317, 390], "classic": [9, 24, 54, 96, 108, 195, 317, 319, 325, 334, 342], "iri": [9, 16, 27, 38, 91, 96, 97, 98, 99, 105, 107, 108, 111, 114, 121, 122, 195, 236, 315, 350, 357, 371, 372, 396], "experiment": [9, 21, 22, 42, 44, 47, 51, 59, 90, 93, 96, 98, 104, 105, 108, 115, 161, 195, 216, 236, 243, 246, 255, 280, 314, 316, 319, 320, 326, 331, 335, 336, 340, 350, 354, 396], "algorithm": [9, 36, 66, 73, 89, 91, 93, 94, 98, 99, 104, 107, 108, 111, 114, 116, 121, 122, 136, 141, 157, 178, 266, 278, 279, 299, 313, 317, 319, 321, 343, 357, 394], "aspect": 9, "feel": 9, "familiar": [9, 334], "discov": [9, 14], "counter": 9, "despit": [9, 329], "concept": [9, 321, 342], "better": [9, 11, 22, 24, 36, 53, 73, 78, 94, 108, 111, 136, 317, 321, 323, 332, 334, 337, 343, 350], "accur": [9, 111], "determinist": [9, 10], "show": [9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 73, 74, 75, 78, 85, 96, 98, 100, 108, 114, 156, 217, 220, 224, 225, 226, 317, 318, 320, 321, 322, 323, 325, 326, 329, 334, 336, 338, 342, 343, 344, 345, 357, 396], "distant": 9, "long": [9, 10, 11, 25, 78, 118, 331, 334, 340], "star": 9, "assum": [9, 17, 50, 57, 73, 85, 87, 93, 94, 97, 108, 139, 162, 180, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 267, 270, 320, 325, 329, 331, 335, 340], "shown": [9, 114, 212, 231, 317, 321, 324, 325, 326, 343], "alias": 9, "excess": 9, "sometim": [9, 66, 89, 108, 114, 238, 330, 331, 337, 358, 395], "tricki": 9, "variabl": [9, 32, 73, 74, 75, 92, 93, 99, 104, 105, 107, 108, 116, 121, 141, 178, 284, 296, 313, 314, 318, 323, 324, 325, 329, 334], "ok": [9, 36, 78, 100], "deal": [9, 85, 87, 94, 313, 326], "meaning": 9, "much": [9, 24, 78, 81, 89, 321, 326, 331, 343, 396], "cumbersom": 9, "seed": [9, 96, 108, 288], "predict": [9, 29, 33, 73, 75, 106, 107, 112, 113, 114, 116, 313, 318, 323], "snippet": [9, 14], "linspac": [9, 40, 96, 97, 108, 132, 177, 196, 318, 331], "20": [9, 26, 54, 61, 74, 75, 78, 91, 96, 97, 108, 132, 244, 245, 246, 251, 317, 318, 319, 320, 321, 322, 324, 326, 329, 331, 333, 334, 335, 338, 340, 343, 347, 381], "temperatur": [9, 40, 93, 97, 104, 108, 237, 331], "small": [9, 73, 74, 89, 111, 317, 318, 321, 334], "vari": 9, "hash": 9, "represent": [9, 36, 118], "axessubplot": [9, 342], "ax": [9, 20, 23, 24, 29, 32, 36, 54, 69, 73, 74, 94, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 128, 129, 131, 199, 203, 209, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 317, 318, 319, 320, 321, 323, 326, 331, 334, 338, 339, 340, 342, 343, 345, 360], "_subplot": [9, 342], "0x7efd0c0b0690": 9, "fig": [9, 108, 334], "expert": 10, "great": 10, "someon": [10, 331], "introduct": [10, 52, 55, 59, 90, 108, 223, 316, 341], "review": [10, 316, 330], "chang": [10, 13, 17, 20, 21, 22, 36, 41, 42, 46, 57, 73, 84, 85, 86, 89, 90, 92, 93, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 168, 190, 193, 217, 218, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 266, 278, 288, 299, 317, 319, 321, 324, 325, 326, 331, 333, 340, 341, 343, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 391, 393, 394, 395, 397], "content": [10, 13, 29, 45, 89, 108, 117, 123, 168, 194, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 319, 320, 323, 328, 331, 342, 390], "overview": [10, 90, 329, 330, 372], "heavi": 10, "jupyt": [10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 81, 83, 84, 89, 95, 313, 317, 325, 329, 330, 334, 348, 389], "notebook": [10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 80, 82, 83, 89, 95, 108, 218, 219, 221, 222, 227, 228, 229, 313, 317, 325, 330, 334, 338], "approach": [10, 36, 89, 91, 94, 315], "hous": 10, "necessarili": [10, 325], "inde": [10, 319], "round": [10, 69, 96, 108, 132, 135, 168, 334, 340, 343, 392], "validate_docstr": 10, "doctest": 10, "blocker": 10, "tip": [10, 13, 325, 330], "trick": 10, "post": [10, 14, 326, 329], "environ": [10, 84, 85, 87, 89, 91, 92, 95, 315, 328], "consol": [10, 384], "find": [10, 17, 23, 32, 33, 45, 89, 90, 91, 94, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 148, 149, 168, 233, 316, 322, 325, 329, 331, 335, 340, 343, 344, 395], "evoc": 10, "clean": [10, 94, 212, 350, 385], "browser": [10, 83, 84, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "And": [10, 66, 324, 334, 337], "unifi": [11, 84], "dockerfil": 11, "achiev": [11, 85, 87, 93, 108, 127, 331, 335], "packeg": 11, "cach": 11, "home": [11, 18, 23, 26, 33, 45, 48, 50, 57, 73, 74, 84, 88, 92, 322, 324, 325, 326, 328, 333, 334, 342, 345, 384], "jovyan": [11, 84], "8888": [11, 84], "scpy": [11, 15, 19, 84, 85, 86, 87, 93, 108, 168, 217, 220, 224, 225, 226, 266, 275, 294, 319, 320, 321, 323, 325, 326, 334], "sh": [11, 84], "lab": [11, 25, 26, 84, 95, 313, 317, 325, 329, 334, 348, 389], "port": [11, 84], "nice": 12, "forum": [12, 326, 329], "revis": [12, 347], "copyright": [12, 22, 85, 87, 88, 108, 299, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345, 350], "Be": [13, 108, 266], "prepar": [13, 329], "suit": [13, 82], "log": [13, 17, 18, 21, 22, 83, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 155, 177, 196, 246, 266, 278, 299, 319, 329, 334, 347, 371, 379, 384, 388, 392], "docstr": 13, "propos": [14, 81, 108, 156, 317, 325], "reliabl": [14, 89], "tracker": [14, 90], "alon": [14, 326], "flavor": 14, "markdown": [14, 321], "23": [14, 20, 22, 24, 25, 45, 73, 74, 75, 88, 91, 317, 319, 320, 321, 322, 325, 326, 329, 331, 333, 334, 336, 338, 340, 342, 345, 347], "wrong": [14, 324, 384], "ishow": 14, "icon": [15, 84, 328], "vscode": 15, "efa": [16, 22, 27, 38, 90, 96, 99, 104, 107, 108, 111, 114, 121, 122, 145, 160, 246, 313, 320, 329, 357, 385, 390], "keller": [16, 27, 38, 96, 98, 108, 145, 160], "massart": [16, 27, 38, 96, 98, 108, 145, 160], "fastica": [16, 27, 38, 98, 104, 107, 108, 111, 114, 121, 122, 160, 236, 392, 396], "mcr": [16, 27, 38, 90, 91, 93, 96, 98, 99, 104, 107, 108, 111, 114, 121, 122, 236, 313, 315, 316, 320, 329, 348, 357, 388, 389, 395], "al": [16, 19, 26, 27, 38, 74, 90, 91, 93, 94, 96, 98, 99, 104, 107, 108, 111, 114, 121, 122, 236, 279, 313, 315, 316, 317, 320, 329, 348, 357, 389, 395], "jaumot": [16, 19, 26, 27, 38, 91, 107, 108, 236, 319, 320], "2005": [16, 19, 22, 26, 27, 36, 38, 91, 94, 107, 108, 136, 236, 319, 320], "kinet": [16, 27, 38, 82, 85, 91, 93, 96, 98, 107, 108, 115, 236, 315, 348, 389], "constraint": [16, 27, 38, 89, 91, 93, 96, 98, 107, 108, 113, 139, 236, 313, 316, 319, 348, 378, 389], "nmf": [16, 27, 38, 94, 98, 99, 104, 107, 108, 114, 121, 122, 246, 317], "pca": [16, 17, 21, 22, 26, 27, 38, 90, 98, 99, 104, 107, 108, 111, 121, 122, 155, 195, 246, 313, 316, 317, 329, 358, 378, 387, 390, 394], "simplisma": [16, 27, 38, 91, 98, 99, 104, 107, 108, 111, 114, 122, 245, 319, 350, 378], "evolv": [17, 91, 98, 99, 104, 107, 111, 114, 121, 122, 313, 319], "factor": [17, 91, 93, 94, 98, 99, 104, 107, 111, 114, 121, 122, 313, 334, 340], "sphinx_gallery_thumbnail_numb": [17, 40], "preprocess": [17, 78, 90, 325, 336, 341], "read_omn": [17, 23, 25, 32, 36, 46, 54, 88, 95, 108, 109, 110, 117, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 317, 322, 325, 326, 331, 335, 340, 342, 345, 379], "irdata": [17, 20, 23, 25, 32, 36, 41, 45, 46, 47, 54, 88, 92, 95, 96, 98, 108, 117, 122, 138, 139, 145, 152, 168, 194, 201, 212, 236, 237, 238, 240, 246, 247, 251, 253, 254, 275, 283, 284, 285, 294, 296, 300, 301, 317, 318, 321, 322, 325, 326, 331, 334, 335, 339, 340, 342, 345], "nh4y": [17, 23, 25, 32, 36, 45, 46, 54, 88, 95, 96, 98, 108, 117, 122, 138, 139, 145, 152, 168, 194, 201, 212, 246, 253, 275, 283, 284, 285, 294, 296, 301, 317, 318, 322, 331, 334, 335, 340, 345], "spg": [17, 20, 23, 25, 32, 36, 41, 42, 44, 45, 51, 54, 59, 88, 95, 96, 98, 108, 109, 110, 117, 122, 138, 139, 145, 152, 168, 194, 201, 212, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 275, 283, 284, 285, 289, 294, 296, 301, 317, 318, 321, 322, 325, 327, 331, 334, 335, 340, 342, 345], "1230": 17, "920": [17, 334], "forget": [17, 322, 329], "slice": [17, 25, 36, 40, 71, 72, 76, 95, 108, 113, 255, 314, 317, 318, 321, 322, 329, 331, 332, 334, 341, 343, 345, 360, 387, 395], "5997": [17, 317], "5993": 17, "plot_stack": [17, 40, 46, 108, 216, 218, 219, 220, 221, 222, 224, 225, 226, 228, 229, 334, 345], "nh4_y": 17, "_ax": [17, 18, 26, 33, 40, 53, 62, 318, 320, 322, 323], "center": [17, 18, 20, 26, 33, 106, 112, 318, 320, 321, 334, 358], "xlabel": [17, 18, 20, 26, 33, 40, 53, 62, 108, 217, 220, 224, 225, 226, 318, 320, 322, 323], "wavenumb": [17, 20, 36, 40, 41, 42, 45, 50, 88, 92, 95, 96, 108, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 246, 317, 318, 321, 322, 326, 331, 334, 342, 343, 345], "mathrm": [17, 18, 26, 33, 40, 53, 57, 62, 108, 235, 318, 320, 322, 323], "cm": [17, 19, 20, 22, 25, 40, 41, 42, 45, 53, 73, 88, 96, 108, 139, 201, 246, 275, 294, 317, 318, 321, 322, 326, 331, 334, 339, 342, 343, 345], "ylabel": [17, 18, 20, 26, 33, 40, 53, 62, 108, 217, 220, 224, 225, 226, 318, 320, 322, 323], "absorb": [17, 19, 26, 40, 42, 45, 88, 108, 139, 152, 168, 201, 246, 247, 284, 285, 296, 307, 317, 318, 319, 320, 321, 322, 323, 326, 331, 334, 340, 342, 343, 345, 373, 375], "efa1": 17, "_": [17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 36, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 61, 62, 65, 66, 69, 73, 74, 75, 78, 88, 98, 108, 216, 313, 317, 318, 319, 320, 321, 323, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345], "forward": [17, 18, 98, 99, 104, 107, 111, 114, 121, 122], "evolut": [17, 313, 321, 357], "f_ev": [17, 18, 98], "yscale": [17, 18], "legend": [17, 18, 23, 25, 29, 33, 53, 54, 62, 69, 73, 108, 223, 317, 318, 321, 322, 323, 334, 338, 339, 343], "taht": [17, 23], "actul": 17, "backward": [17, 18, 93, 98, 108, 326, 334, 342, 394], "b_ev": [17, 18, 98], "seem": [17, 36, 57, 93, 325], "magnitud": [17, 96, 108, 118, 124, 318, 319, 321, 326, 341, 343], "4th": [17, 21, 29, 319, 320, 330], "cut": [17, 18, 98, 318], "off": [17, 96, 98, 108, 132, 168, 326], "mostli": [17, 331], "nois": [17, 18, 26, 65, 66, 91, 108, 121, 156, 168, 317, 336, 337, 343], "n_compon": [17, 18, 19, 22, 23, 24, 25, 26, 29, 32, 36, 88, 94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 313, 317, 319, 320, 323, 390], "cutoff": [17, 18, 98], "concentr": [17, 18, 21, 22, 23, 26, 93, 98, 104, 107, 115, 121, 313, 357], "c1": [17, 40, 96, 331], "transform": [17, 18, 19, 22, 23, 24, 25, 42, 45, 73, 78, 94, 98, 99, 101, 104, 107, 108, 111, 113, 114, 116, 118, 121, 122, 124, 140, 142, 151, 162, 167, 168, 171, 172, 176, 180, 181, 182, 183, 185, 198, 214, 215, 261, 263, 281, 295, 313, 317, 319, 320, 326, 329, 336, 339, 340, 341, 343, 388], "fit_transform": [17, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122], "efa2": 17, "c2": [17, 40], "st": [17, 19, 21, 22, 23, 26, 99, 107, 121, 313, 319, 321, 348, 388, 389], "get_compon": [17, 24, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122], "c3": 17, "score": [17, 24, 25, 33, 106, 112, 114, 116, 313, 317, 318, 319, 320, 323, 387], "lt": [17, 317, 318, 319, 320, 321, 322, 323, 333], "uncom": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 92, 333], "496": [17, 27, 75], "plot_efa": [17, 27], "ipynb": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 36, 40, 41, 42, 45, 46, 47, 48, 49, 50, 53, 54, 57, 61, 62, 65, 66, 69, 73, 74, 75, 78, 325, 331], "chemometr": [18, 26, 91, 329], "intellig": [18, 91, 325], "laboratori": [18, 91], "1992": [18, 91, 98], "209": 18, "224": 18, "arang": [18, 93, 96, 108, 139, 169, 174, 177, 196, 211, 308, 320, 331, 340, 342], "15": [18, 19, 20, 25, 36, 41, 73, 74, 75, 91, 121, 317, 318, 319, 320, 321, 326, 331, 333, 334, 335, 336, 338, 340, 342, 343, 345, 347], "zero": [18, 108, 111, 128, 139, 140, 151, 163, 164, 166, 173, 174, 198, 210, 211, 214, 215, 217, 220, 224, 225, 226, 263, 284, 296, 308, 309, 310, 311, 312, 322, 331, 339, 341], "compound": [18, 91, 96, 108, 118, 121, 161, 192, 291, 315], "dsc": 18, "spec": [18, 326, 334, 338, 344], "w": [18, 73, 91, 96, 106, 108, 111, 112, 116, 118, 140, 176, 181, 182, 218, 219, 221, 222, 227, 228, 229, 321, 324, 333], "nm": [18, 26, 29, 41, 42, 108, 246, 317, 323], "dss": 18, "intens": [18, 40, 73, 74, 75, 108, 121, 156, 203, 246, 319, 321, 331, 333, 336, 337, 338], "calcul": [18, 33, 42, 78, 96, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 125, 126, 139, 140, 142, 152, 156, 162, 167, 168, 176, 178, 180, 181, 193, 200, 231, 232, 281, 284, 285, 295, 296, 318, 321, 331, 339, 340, 341, 342], "decomposit": [18, 20, 22, 23, 24, 25, 26, 93, 94, 98, 99, 104, 107, 111, 114, 121, 122, 313, 317, 319, 320, 323, 390], "0x7fa29ce8e080": 18, "ev": [18, 42, 122, 331], "curv": [18, 20, 21, 36, 89, 90, 91, 104, 107, 113, 313, 319, 320, 336, 357, 396], "realli": [18, 329, 334], "input": [18, 21, 33, 94, 95, 96, 98, 99, 101, 104, 105, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 125, 126, 128, 129, 130, 131, 132, 135, 136, 139, 140, 142, 143, 145, 146, 147, 152, 155, 156, 157, 159, 160, 162, 163, 164, 173, 174, 176, 177, 181, 182, 193, 196, 199, 201, 202, 210, 211, 214, 215, 233, 262, 266, 278, 279, 282, 283, 284, 285, 287, 295, 296, 299, 307, 308, 309, 312, 319, 325, 341, 360, 395], "n_pc": [18, 114], "f2": [18, 75, 108, 301, 333], "b2": [18, 53], "concaten": [18, 73, 90, 108, 283, 325, 326, 329, 375, 396], "figur": [18, 20, 24, 41, 42, 52, 55, 59, 66, 69, 73, 74, 89, 108, 114, 157, 203, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 272, 317, 318, 319, 320, 321, 322, 335, 337, 338, 339, 340, 343, 344, 345], "runner": [18, 20, 23, 24, 25, 26, 33, 45, 48, 50, 57, 73, 74, 75, 88, 319, 320, 322, 324, 325, 326, 329, 331, 333, 334, 336, 338, 340, 342, 345], "tempdir": [18, 26, 33, 48, 50, 57, 73, 74, 324, 325, 326, 333, 334], "scp_deem6uhi": [18, 26, 33, 48, 50, 57, 73, 74, 324, 325, 326, 333, 334], "196": [18, 73], "userwarn": [18, 26, 48, 50, 73, 317, 325, 326, 331, 333, 340, 344], "abstract": [18, 98], "profil": [18, 21, 22, 26, 85, 93, 98, 99, 107, 115, 313], "fifo": [18, 98], "666": [18, 27], "plot_efa_keller_massart": [18, 27], "matlabdata": [19, 21, 22, 26, 108, 244, 245, 319, 320], "als2004dataset": [19, 21, 26, 319, 320], "mat": [19, 21, 22, 26, 29, 45, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 317, 319, 320, 323, 325, 326], "set_coordset": [19, 26, 108, 319, 332], "elut": [19, 26, 319, 320], "hour": [19, 26, 33, 42, 46, 96, 97, 108, 169, 318, 331, 345], "constructor": [19, 23, 96, 108, 159, 166, 169, 170, 184, 314, 332, 360], "log_level": [19, 20, 21, 22, 23, 26, 32, 36, 73, 74, 75, 78, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 155, 266, 278, 299, 318, 319, 324, 388], "obtain": [19, 22, 23, 25, 74, 92, 93, 94, 98, 107, 313, 318, 319, 320, 321, 323, 324, 326, 337, 338, 340, 342, 396], "ica": [19, 99, 313], "sklearn": [19, 23, 99, 106, 111, 112, 114, 116, 388], "colormap": [19, 23, 53, 73, 88, 94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 317, 321, 322, 334, 335, 340, 345, 396], "matric": [19, 21, 93, 108, 111, 244, 245, 299, 313, 319, 320, 323], "x_hat_a": 19, "hat": [19, 21, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 313, 320], "x_hat_b": 19, "inverse_transform": [19, 32, 74, 75, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 318, 388], "qualiti": [19, 36, 334, 390], "reconstrict": 19, "plotmerit": [19, 20, 21, 22, 26, 32, 73, 74, 75, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 318, 320, 378], "nb_trace": [19, 21, 22, 26, 36, 94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 320], "108": [19, 27], "plot_fast_ica": [19, 27], "co": [20, 41, 88, 91, 108, 176, 181, 182, 315, 321, 326, 342], "adsorpt": [20, 321, 326, 342], "sulfid": [20, 91, 315], "catalyst": [20, 91, 315, 321], "mo_al2o3": [20, 41, 88, 321, 326, 342], "record": [20, 22, 23, 29, 41, 45, 50, 313, 326, 342], "pressur": [20, 41, 88, 91, 104, 315], "infrar": [20, 41, 91, 92, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 326, 334], "cell": [20, 41, 83, 91, 313, 315, 317, 324, 325, 328, 330, 334], "henc": [20, 41, 107, 114, 313, 319, 320, 325, 326, 342, 343], "003": [20, 41, 75, 91], "004": [20, 32, 34, 41, 319], "009": [20, 91], "014": 20, "021": 20, "026": 20, "036": 20, "051": 20, "093": 20, "150": [20, 24, 29], "203": 20, "300": [20, 22, 40, 334, 336], "404": [20, 75, 333], "503": 20, "602": [20, 333], "702": 20, "801": 20, "905": [20, 41], "c_pressur": [20, 41], "torr": [20, 41, 88], "c_time": [20, 41], "_1": [20, 41, 73, 97, 313, 331], "_2": [20, 41, 73, 97, 331], "rich": 20, "3112": [20, 41, 45, 326, 342], "4000": [20, 40, 41, 88, 317, 326, 331, 334, 335, 339, 340, 342], "3999": [20, 41, 326, 339, 342], "1001": [20, 41, 74, 326, 342], "999": [20, 24, 25, 41, 326, 342], "\u00b9": [20, 41, 45, 73, 88, 108, 139, 201, 321, 322, 326, 331, 339, 342, 345], "19": [20, 25, 41, 45, 73, 88, 91, 317, 318, 319, 321, 322, 326, 331, 333, 334, 335, 340, 342, 343, 345, 347, 378], "477e": [20, 41, 326], "2016": [20, 25, 41, 45, 88, 322, 326, 342, 345], "18": [20, 24, 25, 41, 88, 91, 317, 318, 319, 321, 326, 331, 333, 334, 335, 338, 340, 342, 343, 347, 373], "49": [20, 41, 326, 331, 340, 342], "35": [20, 22, 24, 41, 73, 321, 326, 331, 334, 340, 342], "00": [20, 22, 24, 25, 27, 30, 33, 34, 36, 37, 41, 43, 45, 51, 55, 58, 63, 67, 70, 73, 74, 75, 76, 79, 88, 91, 319, 320, 322, 326, 329, 331, 333, 336, 338, 340, 342, 345], "54": [20, 22, 32, 41, 108, 122, 176, 181, 326, 331, 340, 342], "06": [20, 25, 37, 41, 45, 88, 91, 116, 122, 322, 326, 342, 345, 390], "01": [20, 24, 27, 30, 34, 36, 41, 43, 55, 63, 78, 318, 319, 320, 321, 324, 326, 331, 342, 347], "33": [20, 25, 41, 73, 319, 326, 331, 334, 340, 342], "37": [20, 25, 41, 326, 331, 334, 340, 342], "r\u00e9sultat": [20, 41, 326, 342], "soustract": [20, 41, 326, 342], "04_mo_al2o3_calc_0": [20, 41, 326, 342], "003torr_lt_aft": [20, 41, 326, 342], "sulf_oct": [20, 41, 326, 342], "46": [20, 25, 41, 73, 326, 331, 340, 342], "42": [20, 23, 41, 73, 91, 326, 331, 334, 340, 342], "02": [20, 24, 25, 27, 41, 45, 55, 67, 73, 74, 75, 88, 91, 315, 319, 320, 321, 322, 326, 329, 331, 333, 336, 338, 340, 342, 343, 345, 347], "004torr_lt_aft": [20, 41, 326, 342], "51": [20, 21, 26, 41, 88, 319, 320, 326, 331, 340, 342], "905torr_lt_aft": [20, 41, 326, 342], "17": [20, 22, 25, 41, 45, 73, 74, 75, 85, 88, 91, 317, 318, 319, 320, 321, 322, 326, 331, 333, 334, 335, 338, 340, 342, 343, 345, 347], "58": [20, 41, 75, 326, 331, 336, 342], "04_mo_al2o3_calc_1": [20, 41, 326, 342], "03": [20, 25, 27, 36, 41, 43, 45, 51, 67, 76, 88, 91, 319, 322, 326, 331, 333, 342, 345, 347], "41": [20, 25, 41, 45, 88, 322, 326, 331, 334, 340, 342, 345], "figsiz": [20, 41, 42, 53, 66, 69, 73, 108, 203, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 317, 318, 319, 320, 322, 331, 334, 335, 337, 338, 339, 340, 343, 344, 345], "colorbar": [20, 41, 49, 73, 88, 108, 203, 218, 219, 221, 222, 227, 228, 229, 321, 322, 334, 335, 340, 345], "plot_map": [20, 41, 49, 74, 108, 216, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 334, 335], "spectral": [20, 21, 41, 50, 91, 99, 107, 297, 313, 317, 318], "x_": [20, 41, 323], "2250": [20, 41, 88], "1950": [20, 41, 88], "loglevel": 20, "iris1": 20, "kernel": [20, 84, 104, 105, 108, 278, 334, 343, 357, 396], "iriskernel": [20, 88], "langmuir": [20, 88, 105], "q": [20, 83, 88, 104, 105, 331], "50": [20, 25, 32, 36, 54, 73, 75, 86, 88, 93, 94, 96, 99, 107, 108, 123, 136, 168, 177, 193, 196, 251, 258, 279, 317, 319, 321, 324, 326, 331, 334, 338, 340], "matrix": [20, 21, 22, 23, 26, 93, 94, 98, 99, 104, 105, 106, 107, 111, 112, 114, 121, 122, 313, 319, 320, 323, 331, 357], "fv": [20, 24, 25, 45, 73, 74, 75, 88, 319, 320, 322, 326, 329, 331, 333, 336, 338, 340, 342, 345], "az1333": [20, 24, 25, 45, 73, 74, 75, 88, 319, 320, 322, 326, 329, 331, 333, 336, 338, 340, 342, 345], "513": [20, 24, 25, 45, 73, 74, 75, 88, 319, 320, 322, 326, 329, 331, 333, 336, 338, 340, 342, 345], "14": [20, 25, 36, 45, 51, 73, 75, 76, 88, 91, 317, 318, 319, 320, 321, 322, 326, 331, 333, 334, 335, 336, 338, 340, 342, 343, 345, 347], "coverag": [20, 357], "06424": 20, "1265": 20, "001332": 20, "0005778": 20, "0659": 20, "1303": 20, "00177": 20, "0007683": 20, "0714": 20, "1428": 20, "1056": 20, "05078": 20, "1084": 20, "05227": 20, "delta_": [20, 313], "rt": [20, 331], "857": [20, 73, 318], "143": 20, "sharp": 20, "312": [20, 41], "residu": [20, 21, 22, 98, 99, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 313, 319, 320, 323, 340], "09e": 20, "curvatur": [20, 104], "14e": 20, "04": [20, 25, 36, 45, 73, 75, 79, 88, 122, 322, 331, 333, 336, 338, 339, 345, 347], "0x7fa29a7cb310": 20, "plotdistribut": [20, 88, 104], "iris2": 20, "reg_par": [20, 88, 104], "plotlcurv": [20, 104], "iris3": 20, "largest": [20, 108, 310, 340, 343], "471": [20, 27, 75], "plot_iri": [20, 27], "optim": [21, 22, 32, 73, 74, 75, 78, 90, 93, 107, 115, 316, 317, 318, 385, 392, 396], "hplc": [21, 319, 320], "dad": [21, 319, 320], "2015": [21, 91, 317, 319, 320], "multivari": [21, 36, 88, 91, 94, 104, 107, 313, 315, 319, 320], "resolut": [21, 78, 91, 93, 98, 107, 108, 218, 219, 221, 222, 227, 228, 229, 313, 319, 320], "homepag": [21, 319, 320], "matlab": [21, 26, 45, 89, 91, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 325], "infer": [21, 96, 108, 125, 126, 132, 177, 193, 196, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 321], "read_matlab": [21, 26, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 319, 320, 325, 326], "exactli": [21, 317, 318, 326, 345], "cpure": [21, 26, 319, 320], "204": [21, 26, 319, 320], "96": [21, 26, 74, 91, 317, 319, 320, 325, 333, 334], "isp_matrix": [21, 26, 319, 320], "spure": [21, 26, 319, 320], "csel_matrix": [21, 26, 319, 320], "m1": [21, 26, 319, 320], "hpl": 21, "51x96": 21, "usual": [21, 36, 40, 53, 78, 83, 89, 95, 101, 108, 140, 142, 151, 155, 162, 167, 171, 172, 176, 180, 181, 182, 185, 198, 214, 215, 261, 263, 266, 278, 281, 295, 299, 317, 319, 320, 321, 324, 331, 333, 334], "uv": [21, 22, 91, 319, 320], "guess": [21, 108, 114, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 313, 316, 318, 342, 388], "pure": [21, 22, 26, 107, 108, 121, 281, 313, 318, 336], "4x96": 21, "ouput": 21, "mcral": [21, 22, 98, 99, 104, 111, 114, 121, 122, 348, 378, 379, 388, 389, 391], "optimis": [21, 22, 316, 319], "rse": [21, 22, 319], "exp": [21, 22, 40, 73, 75, 99, 108, 162, 175, 180, 274, 318, 319], "000442": [21, 319], "002807": [21, 319], "97": [21, 24, 91, 319, 325], "747926": [21, 319], "000433": [21, 319], "002805": [21, 319], "048763": [21, 319], "converg": [21, 22, 23, 36, 99, 107, 116, 121, 319], "reconstruct": [21, 22, 26, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 155, 183, 313, 319, 320, 388], "paper": [21, 45, 46, 90, 334, 343, 357], "891": [21, 27, 73, 317, 333], "plot_mcrals_chrom1": [21, 27], "reaction": [22, 91, 93, 315], "investig": 22, "bijlsma": [22, 91], "2001": [22, 91], "downlod": 22, "biosystem": 22, "univers": [22, 91, 108, 341], "amsterdam": 22, "universiteit": 22, "van": [22, 91, 315], "meting9": 22, "pair": [22, 94, 108, 138, 141, 178, 317], "mixtur": [22, 91, 98, 99, 104, 107, 111, 114, 121, 122, 313, 315, 319], "timepoint": 22, "reltim": 22, "x9b": 22, "squeez": [22, 41, 74, 108, 318, 321, 340], "60": [22, 40, 53, 65, 75, 78, 91, 96, 108, 169, 189, 318, 331, 342], "estim": [22, 78, 93, 94, 106, 108, 112, 114, 156, 284, 296, 313, 321, 323, 337], "500": [22, 113, 116, 334], "c0": [22, 40, 96, 319, 331], "soft": [22, 107, 313, 319, 334, 357], "mcr_1": 22, "002867": 22, "005886": 22, "99": [22, 24, 25, 65, 73, 75, 108, 122, 155, 319, 334, 337], "284101": 22, "002813": 22, "005863": 22, "390168": 22, "002810": 22, "005861": 22, "020846": 22, "impos": [22, 89], "obei": 22, "actionmasskinet": [22, 392, 396], "roughli": [22, 318], "rate": [22, 91, 93, 115], "constant": [22, 73, 78, 91, 93, 94, 96, 101, 106, 108, 111, 112, 116, 157, 177, 214, 215, 266, 278], "species_concentr": [22, 93], "k0": 22, "kin": 22, "approxim": [22, 93, 99, 106, 108, 111, 112, 275, 294, 321], "ckin": 22, "linestyl": [22, 73, 74, 78, 108, 217, 220, 224, 225, 226, 321, 334, 336, 339], "cmap": [22, 29, 53, 116, 317, 319, 323, 334, 381, 387], "hard": [22, 107, 114, 313, 319], "param_to_optim": [22, 115], "mcr_2": 22, "hardconc": [22, 107], "getconc": [22, 107], "fit_to_concentr": [22, 93], "argsgetconc": [22, 107], "kwargsgetconc": [22, 107], "ivp_solver_kwarg": [22, 93], "return_nddataset": [22, 93], "000000": 22, "112232": 22, "032662": 22, "004007": 22, "27": [22, 27, 74, 91, 317, 319, 326, 331, 334, 340, 343], "153319": 22, "3821": 22, "05042": 22, "051183": 22, "293919": 22, "45": [22, 73, 108, 145, 331, 335, 340, 342], "126373": 22, "3388": 22, "05039": 22, "022835": 22, "749865": 22, "22": [22, 74, 91, 108, 139, 317, 318, 319, 321, 326, 331, 333, 334, 338, 340, 342, 347, 381], "43": [22, 25, 32, 331, 340], "119944": 22, "317": [22, 91], "05021": 22, "551980": 22, "403400": 22, "117887": 22, "3029": 22, "04998": 22, "0x7fa29a7f7df0": 22, "equiv": [22, 313], "c_constrain": [22, 107], "x_hat": [22, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122], "646": [22, 27, 48, 51], "plot_mcrals_kinet": [22, 27], "ftir": [23, 88, 91, 98, 108, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 258, 313, 315, 317, 341, 366], "dehydr": 23, "zeolit": [23, 91, 315], "omnic": [23, 44, 45, 51, 59, 88, 96, 108, 109, 110, 117, 138, 145, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 283, 322, 325, 327, 331, 334, 341, 345, 358], "wich": [23, 24], "satur": [23, 25, 317, 334, 340, 345], "lead": [23, 111, 317, 321, 324, 334, 343], "882": [23, 25], "1280": [23, 25], "math": [23, 108, 176, 181, 320, 330, 334, 350, 365], "fonction": 23, "subtrat": 23, "transpos": [23, 73, 74, 98, 99, 108, 122, 218, 221, 222, 227, 267, 286, 319, 340, 345, 395], "violat": 23, "14017421024501886": 23, "0615819506549319": 23, "03477774452872472": 23, "02315591268977657": 23, "016289564836607106": 23, "011732197722809517": 23, "009261179153189952": 23, "007770502529914237": 23, "006957471610159019": 23, "00645741437035496": 23, "006191115125282049": 23, "006057238974457628": 23, "006000777806339407": 23, "005868357891308755": 23, "005802918028533894": 23, "005772367658829779": 23, "005756947971777944": 23, "005733332889918854": 23, "005700606624645001": 23, "0056678270787908595": 23, "005587736630048398": 23, "005529135183167156": 23, "005460760674075917": 23, "0053751946734516415": 23, "005288054442074853": 23, "0052032849396115195": 23, "00511026993184535": 23, "005004969613317448": 23, "004889401944567163": 23, "004778610916794841": 23, "004657040705272594": 23, "0045276423083831846": 23, "004393717477174968": 23, "0042671241389257986": 23, "004133928133016248": 23, "004012755928138818": 23, "0038914653519267514": 23, "0037652602700428764": 23, "0036375148218629775": 23, "0035147101661543944": 23, "0033965138303583627": 23, "0032925205579804324": 23, "003194164813272155": 23, "0031049470293336616": 23, "0030221674035500893": 23, "0029389646390337843": 23, "0028561158500457337": 23, "0027738912186802203": 23, "002692711668736585": 23, "00261295482890814": 23, "002535164470212152": 23, "0024587403634382205": 23, "0023842026907912785": 23, "002313303909478483": 23, "0022437367434813157": 23, "0021751169925787735": 23, "0021084094490923": 23, "0020436678052480157": 23, "001980664359350732": 23, "0019243270194359173": 23, "0018713261632055133": 23, "0018195678200698044": 23, "0017692749012867123": 23, "0017204657491194692": 23, "0016731692686996046": 23, "0016274950351469488": 23, "0015839173329698008": 23, "0015418960309272083": 23, "00150143854313149": 23, "0014629272012162866": 23, "0014262081321619795": 23, "0013907597658089747": 23, "0013601582805159557": 23, "001332846482400409": 23, "0013065923988234153": 23, "0012813357494812078": 23, "0012569657401120928": 23, "0012363658727396127": 23, "0012190114699548074": 23, "0011992116544499902": 23, "001177562262451196": 23, "001158260908541662": 23, "0011389415923630736": 23, "0011199124929360856": 23, "0011006754884539877": 23, "0010832777040280573": 23, "0010661363692306288": 23, "0010491933694702082": 23, "001031824410260974": 23, "0010150792321234978": 23, "0009988201809301477": 23, "0009841318528815849": 23, "0009699922960875246": 23, "000954596601200847": 23, "0009396363331386612": 23, "0009266599168143904": 23, "0009140262172603922": 23, "0009015875006378345": 23, "0008902182357106185": 23, "0008780499311870563": 23, "000866045747091839": 23, "000854351749994179": 23, "000842870600328811": 23, "0008315536804366498": 23, "0008208847158800011": 23, "0008104269807763564": 23, "0007997522484736773": 23, "0007893350738951205": 23, "0007791326607912936": 23, "0007691414390015943": 23, "0007597179067851729": 23, "0007504652538886618": 23, "0007412456856970495": 23, "0007322966170538642": 23, "000723591569168392": 23, "0007151920055396939": 23, "0007069372346701578": 23, "0006987637535250594": 23, "0006907733550825735": 23, "0006830298779799963": 23, "000675418124392526": 23, "0006679795936493782": 23, "000660689339823235": 23, "0006536091296351166": 23, "000646664112099758": 23, "0006399762615476848": 23, "0006335488650775192": 23, "0006273957420687948": 23, "0006215236000713499": 23, "0006161518203756149": 23, "0006113918151773623": 23, "0006071251736135831": 23, "0006030938520872211": 23, "0005992255771889362": 23, "0005955122189365712": 23, "000591935640596235": 23, "0005884735105288073": 23, "0005851626197891781": 23, "0005819472966804132": 23, "0005788624242480904": 23, "0005759087479598292": 23, "0005730546137309889": 23, "0005702968600984374": 23, "0005676053787182234": 23, "0005650176785170945": 23, "000562448058436848": 23, "0005599281471046298": 23, "0005574208102720959": 23, "0005549930907511867": 23, "0005526263090688035": 23, "0005503237863511776": 23, "0005480875748006055": 23, "0005458976082892495": 23, "0005437570853969203": 23, "000541672631472761": 23, "0005396329582222408": 23, "0005376381718607097": 23, "000535862885081079": 23, "0005342566446344014": 23, "0005327134944356552": 23, "0005311700256183186": 23, "0005296374901746779": 23, "0005281469649348017": 23, "0005266549474160384": 23, "0005251860718892028": 23, "0005237318107592292": 23, "0005222955570666149": 23, "0005208942964241354": 23, "0005195265168845111": 23, "0005181813428111846": 23, "0005168846752735461": 23, "0005156608680272509": 23, "0005144616554309252": 23, "0005132891688188495": 23, "000512151526640549": 23, "0005110364330895511": 23, "0005099447315068019": 23, "0005088753613792772": 23, "0005078236610584595": 23, "0005067909112023406": 23, "0005057740763562593": 23, "0005047767175614159": 23, "0005037958933649628": 23, "0005028222129280595": 23, "000501865042848263": 23, "0005009224423798839": 23, "0004999974962490277": 23, "0004990872395196433": 23, "0004981962000752139": 23, "000497314731819179": 23, "0004964417296737531": 23, "0004955753197882701": 23, "0004946901218458794": 23, "0004938210437309183": 23, "0004929673596845667": 23, "0004921226355846732": 23, "0004912871202794128": 23, "0004904596528541337": 23, "0004896376456532125": 23, "venv": [23, 85, 87, 325, 333], "lib": [23, 325, 333], "python3": [23, 325, 333], "site": [23, 89, 91, 315, 325, 330, 333], "_nmf": 23, "1742": 23, "convergencewarn": 23, "maximum": [23, 32, 73, 94, 96, 99, 107, 108, 111, 113, 116, 121, 129, 130, 133, 136, 143, 148, 168, 199, 202, 233, 284, 295, 296, 313, 317, 318, 319, 321, 334, 338, 339, 345], "200": [23, 36, 40, 73, 99, 111, 118, 317, 318, 331, 334, 336, 342], "reach": [23, 36, 93, 319, 321, 322], "increas": [23, 65, 93, 94, 107, 108, 136, 317, 318, 325, 326, 334, 337, 343, 377, 395], "27811881011284917": 23, "21103839273441857": 23, "16365897573754926": 23, "12638124502857317": 23, "09689398092858066": 23, "07386553913526538": 23, "05726304883639191": 23, "04639710696895149": 23, "03776270101072492": 23, "030324671559649123": 23, "02400007799857049": 23, "018705054318856267": 23, "014282427091628837": 23, "010676123451469415": 23, "008016534827386188": 23, "006238616114828591": 23, "005124394633030255": 23, "004490757479656587": 23, "004053115751123353": 23, "0037443026036687943": 23, "003428962811660801": 23, "0030323190347559463": 23, "002727253739146805": 23, "002386505694047081": 23, "0020851628627841044": 23, "0017697484695162594": 23, "0014925716272857904": 23, "0012488601974045346": 23, "0010438675111377911": 23, "0008573236692762737": 23, "0006991377766201068": 23, "0005706218431927553": 23, "0004636286240955712": 23, "00037487235479902604": 23, "0003032579084427323": 23, "0002463663859384274": 23, "00019825804790408831": 23, "0001582773351930114": 23, "00012439075792817556": 23, "611089606619829e": 23, "ptp": [23, 78, 96, 108], "set_ytick": 23, "210": [23, 27], "plot_nmf": [23, 27], "reduct": [24, 25, 26, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 128, 131, 156, 317, 320, 321], "ronald": 24, "fisher": 24, "taxonom": 24, "annal": 24, "eugen": 24, "pp": [24, 73, 74, 75, 319, 320, 333, 336, 338], "179": [24, 91], "188": 24, "1936": 24, "laod": 24, "scikit": [24, 99, 108, 195, 320, 323], "load_iri": [24, 108], "mle": [24, 114], "cannot": [24, 42, 48, 89, 96, 108, 111, 118, 288, 319, 321, 324, 326, 330, 331, 333, 334, 335, 340, 344, 345], "n_observ": [24, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 266, 278, 299, 313], "n_featur": [24, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 266, 278, 299, 313], "0x7fa29a8085e0": 24, "varianc": [24, 25, 26, 99, 108, 114, 121, 122, 138, 155, 201, 284, 296, 313, 319, 320, 337, 396], "cumulative_explained_vari": [24, 122, 320], "47878161267252": 24, "dataset_pca": 24, "3614": 24, "08452": 24, "8567": 24, "3583": 24, "6566": 24, "7302": 24, "1734": 24, "07548": [24, 74], "582": 24, "5979": 24, "07624": 24, "5458": 24, "3155": 24, "3197": 24, "4798": 24, "7537": 24, "sepal_length": 24, "sepal": 24, "width": [24, 32, 53, 73, 74, 78, 91, 94, 108, 137, 168, 175, 180, 197, 203, 217, 220, 223, 224, 225, 226, 279, 297, 315, 318, 333, 334], "petal_length": 24, "petal_width": 24, "lower": [24, 25, 26, 29, 107, 108, 114, 143, 166, 319, 320, 321, 323, 324, 334, 338], "684": 24, "3194": 24, "02791": 24, "002262": 24, "714": [24, 396], "177": [24, 73], "2105": 24, "09903": 24, "901": 24, "1166": 24, "7233": 24, "0446": 24, "39": [24, 25, 317, 318, 320, 321, 322, 323, 324, 325, 326, 331, 333, 334, 335, 338, 340, 345], "2827": [24, 74], "3629": 24, "155": 24, "setosa": 24, "virginica": 24, "merit": [24, 26, 114, 318, 320], "cumul": [24, 108, 114, 122, 152, 319], "confirm": [24, 108, 109, 117, 326, 371], "pc": [24, 25, 114, 319, 320], "printev": [24, 114, 319, 320], "eigenvalu": [24, 98, 114, 319], "cov": [24, 313, 319, 323], "056e": 24, "92": [24, 73, 337], "462": [24, 379], "926e": 24, "307": 24, "769": [24, 348, 389], "797e": 24, "710": 24, "479": 24, "544e": [24, 326], "521": 24, "000": [24, 270], "screeplot": [24, 25, 114, 319, 320], "classif": 24, "distinguish": 24, "speci": [24, 73, 91, 93, 107, 313, 315], "versicolor": 24, "viginica": 24, "scoreplot": [24, 25, 114, 320], "color_map": [24, 114], "3d": [24, 25, 40, 97, 108, 114, 218, 219, 221, 222, 227, 228, 229, 331, 334], "thid": 24, "view_init": 24, "75": [24, 36, 91, 270, 321, 331, 334, 343], "592": [24, 27, 333], "plot_pca_iri": [24, 27], "5549": [25, 42, 45, 88, 108, 122, 138, 139, 145, 152, 201, 236, 246, 251, 253, 283, 284, 285, 296, 317, 318, 322, 325, 326, 335, 345], "greater": [25, 66, 108, 114, 155, 167, 185, 231, 281, 282, 318, 330, 336, 343], "equal": [25, 94, 96, 107, 108, 128, 139, 166, 167, 168, 177, 193, 196, 203, 223, 231, 281, 313, 318, 319, 320, 331, 334, 336, 340], "0x7fa29dca5150": 25, "activation_pca": 25, "36": [25, 42, 74, 91, 331, 334, 340], "71": [25, 331], "56": [25, 73, 319, 331, 340], "87": [25, 73, 91], "006776": 25, "216": [25, 338], "205": 25, "5566": 25, "03804": 25, "26": [25, 36, 73, 91, 96, 317, 319, 321, 326, 331, 334, 339, 340], "694": 25, "1281": 25, "6077": 25, "456": 25, "175": [25, 331], "7883": 25, "468e": [25, 45, 88, 322], "07": [25, 45, 73, 88, 322, 326, 345, 347], "53": [25, 54, 92, 331, 334, 340], "vz0466": [25, 45, 88, 322, 345], "spa": [25, 45, 88, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 322, 325, 327, 339, 345, 358], "wed": [25, 45, 88, 322, 345], "jul": [25, 45, 88, 322, 345], "21": [25, 45, 66, 74, 88, 91, 317, 319, 321, 322, 326, 331, 333, 334, 336, 337, 340, 343, 345, 347], "38": [25, 45, 73, 74, 88, 108, 168, 322, 331, 334, 340, 345], "vz0471": 25, "vz0512": 25, "40": [25, 74, 324, 326, 331, 334, 340], "vz0517": 25, "region": [25, 32, 36, 53, 65, 66, 74, 75, 78, 88, 94, 95, 96, 108, 141, 178, 313, 317, 318, 321, 322, 334, 335, 337, 339, 340, 342, 343, 345, 356], "seen": [25, 65, 319, 324, 331, 340], "littl": [25, 36, 345], "thse": 25, "show_label": [25, 114, 320], "labels_column": [25, 114], "868": [25, 27], "plot_pca_spec": [25, 27], "independ": [26, 98, 99, 104, 106, 107, 108, 111, 112, 114, 121, 122, 203, 246, 313, 319, 334, 338], "intel": 26, "76": [26, 73, 91, 319, 320, 331], "101": [26, 91, 319, 320, 333], "110": [26, 73, 91, 319, 320, 333], "lnd": 26, "nicer": 26, "max_compon": 26, "tol": [26, 94, 99, 107, 108, 111, 114, 116, 121, 136, 317, 319, 388], "86": [26, 73, 331], "deprecationwarn": [26, 33, 74, 88, 318, 339], "190": 26, "neg": [26, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 114, 116, 121, 122, 128, 131, 135, 151, 157, 159, 166, 171, 172, 193, 261, 262, 266, 313, 316, 319, 326, 342, 395], "sma": 26, "index_pc": 26, "coord_pc": 26, "std": [26, 69, 108, 201, 296, 323, 343], "re": [26, 317, 326, 329, 338], "0263": 26, "9755": 26, "82": [26, 73, 91, 331], "0100": 26, "9964": 26, "29": [26, 73, 91, 317, 319, 326, 331, 334, 340, 347], "0072": 26, "9981": 26, "unexplain": [26, 121], "0x7fa29e0e95d0": 26, "oto": 26, "offset": [26, 36, 53, 73, 74, 78, 94, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 158, 159, 217, 220, 224, 225, 226, 318, 320, 321, 322, 333, 334, 335, 340, 344, 350], "795": [26, 27], "plot_simplisma": [26, 27], "742": 27, "gettingstarted_examples_gallery_auto_examples_analysis_a_decomposit": 27, "mb": [27, 30, 34, 37, 43, 51, 55, 58, 63, 67, 70, 76, 79, 81], "pl": [28, 30, 38, 108, 116, 236, 313, 323, 329], "regress": [28, 30, 33, 36, 38, 106, 108, 112, 116, 236, 313, 316, 318, 390], "moistur": [29, 323], "corn": [29, 45, 317, 323, 390], "nir": [29, 317, 323], "eigenvector": [29, 45, 108, 244, 245, 317, 323, 390], "archiv": [29, 82, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "ds_list": 29, "cargil": 29, "spectromet": [29, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 317, 323], "oil": [29, 323], "protein": [29, 323], "starch": [29, 323], "5th": [29, 36], "m5spec": [29, 45, 323], "assign": [29, 108, 237, 325, 331, 342], "specta": [29, 323], "dattaset": 29, "propval": [29, 45, 323], "57": [29, 73, 88, 91, 108, 145, 246, 323, 326, 329, 331], "train": [29, 94, 98, 99, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 323], "calibr": [29, 323], "x_train": [29, 323], "x_test": [29, 323], "y_train": [29, 323], "y_test": [29, 323], "plsregress": [29, 316, 390], "pariti": [29, 323], "parityplot": [29, 116, 323], "266": [29, 30], "plot_pl": [29, 30], "gettingstarted_examples_gallery_auto_examples_analysis_b_crossdecomposit": 30, "linear": [31, 32, 34, 36, 38, 78, 94, 95, 96, 99, 106, 108, 112, 113, 116, 127, 157, 196, 214, 215, 231, 313, 316, 350, 365, 392, 393, 395], "equat": [31, 32, 34, 38, 93, 96, 99, 104, 105, 106, 107, 108, 313, 316, 319, 320, 323], "lstsq": [31, 34, 38, 96, 107, 108, 316], "squar": [32, 33, 36, 60, 63, 71, 91, 94, 101, 106, 107, 108, 112, 113, 114, 116, 136, 138, 141, 157, 178, 184, 232, 234, 255, 277, 279, 281, 284, 296, 299, 313, 316, 317, 319, 321, 331, 336, 390, 396], "ir": [32, 44, 45, 51, 57, 59, 74, 91, 96, 108, 146, 147, 161, 238, 246, 303, 315, 317, 318, 321, 322, 325, 327, 329, 331, 333, 334, 339, 340, 342, 345, 372], "oh": [32, 318, 334], "ndoh": [32, 318], "3800": [32, 88], "3300": [32, 318], "3505": 32, "3500": [32, 317], "low_bound": [32, 73, 74, 75, 318], "high_bound": [32, 73, 74, 75, 318], "forbidden": [32, 74, 318], "ex": [32, 84, 87, 318], "gwidth": [32, 318], "gratio": [32, 318], "line_1": [32, 74, 318], "asymmetricvoigtmodel": [32, 318], "ampl": [32, 74, 137, 175, 197, 231, 274, 297, 318], "po": [32, 74, 108, 137, 175, 197, 274, 280, 297, 318, 321, 326], "3620": 32, "3400": 32, "3700": [32, 108, 138, 318], "ratio": [32, 65, 74, 78, 108, 137, 155, 297, 317, 318, 337], "0147": 32, "asym": [32, 137, 274, 318], "1000": [32, 40, 42, 53, 75, 97, 318, 331, 334, 336, 342, 343], "line_2": [32, 74, 318], "3540": 32, "f1": [32, 62, 73, 74, 108, 301, 318, 333, 336, 338], "dry": [32, 91, 113, 315], "reset": [32, 94, 95, 98, 99, 101, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 320, 324, 331, 334, 335], "autobas": [32, 113, 318], "info_": [32, 57, 123, 324], "autoscal": [32, 74, 318], "0000": [32, 47, 108, 236, 247, 318, 326], "8000": 32, "max_it": [32, 74, 94, 99, 107, 108, 111, 113, 116, 136, 317, 318, 319], "3458": 32, "7716": 32, "3623": 32, "4044": 32, "4394": 32, "5995": 32, "9001": 32, "3536": 32, "9977": 32, "79": [32, 74, 331], "4888": 32, "som": [32, 74, 75, 318], "scatter": [32, 54, 57, 73, 75, 108, 114, 116, 203, 207, 216, 217, 220, 223, 224, 225, 226, 318, 321, 322, 334], "markeveri": [32, 108, 217, 220, 224, 225, 226], "markers": [32, 33, 108, 116, 217, 220, 224, 225, 226, 318, 334], "lw": [32, 53, 69, 73, 74, 108, 217, 220, 223, 224, 225, 226, 318, 343], "plot_fit": [32, 34], "linalg": [33, 114], "noisi": [33, 108, 168, 317, 318], "distanc": [33, 74, 96, 97, 108, 111, 132, 168, 318, 321, 331, 334], "travel": [33, 318], "d0": [33, 318], "coef": [33, 106, 108, 112, 138, 318], "intercept": [33, 106, 112, 318], "rsquar": 33, "_base": 33, "_analysisbas": 33, "1262": 33, "convers": [33, 42, 92, 93, 96, 108, 288, 318, 326, 331, 339, 341, 392], "ndim": [33, 96, 108, 129, 130, 199, 202, 318, 331, 339], "extract": [33, 50, 74, 99, 108, 111, 114, 158, 159, 247, 316, 317, 318, 321, 326, 329, 339, 372], "_linear_regress": 33, "coef_": 33, "9999999999999997": 33, "9499999999999995": 33, "9900990099009901": 33, "pyplot": [33, 334], "plt": 33, "distance_fit": 33, "h": [33, 42, 91, 108, 111, 218, 219, 221, 222, 227, 228, 229, 299, 317, 318, 331, 334, 338, 343], "km": [33, 42, 96, 108, 166, 169, 170, 174, 210, 318], "3f": [33, 73, 137, 175, 197, 270, 274, 297, 318, 321], "0x7fa29d54c1f0": 33, "straightforward": [33, 342, 345], "kilomet": [33, 108, 166, 210, 318], "2f": 33, "95": [33, 65, 270, 319, 325, 334], "990": 33, "distance_fitted2": 33, "ie": 33, "plot_scatt": [33, 57, 73, 74, 108, 216, 217, 223, 318, 321], "mfc": [33, 108, 217, 220, 224, 225, 226, 318, 321], "mec": [33, 108, 217, 220, 224, 225, 226, 318, 321], "distance_fitted3": 33, "plot_pen": [33, 108, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 318, 321], "316": [33, 34, 358], "plot_lstsq_single_equ": [33, 34], "319": 34, "gettingstarted_examples_gallery_auto_examples_analysis_c_curvefit": 34, "interact": [36, 91, 98, 99, 104, 107, 111, 114, 121, 122, 334, 350], "pchip": [36, 88, 94, 108, 127, 317], "polynomi": [36, 78, 88, 94, 101, 108, 136, 141, 157, 178, 231, 266, 278, 279, 318, 322, 343], "interpol": [36, 91, 94, 95, 108, 127, 168, 248, 317, 321, 335, 343], "asl": [36, 78, 94, 108, 141, 157, 178, 279, 313, 317, 394], "snip": [36, 66, 73, 74, 78, 91, 94, 108, 136, 141, 157, 178, 317, 337, 394], "ndp": 36, "1291": 36, "5999": [36, 45, 88, 317, 322, 326, 335, 345], "basc": [36, 94, 108, 136, 157, 178, 279, 318, 356, 394], "piecewis": [36, 91, 94, 108, 157, 317], "cubic": [36, 78, 91, 94, 108, 157, 317], "hermit": [36, 94, 317], "blc": [36, 78, 88, 317, 322], "1556": [36, 75, 342], "1568": 36, "1795": 36, "1956": 36, "3766": 36, "3915": 36, "81": [36, 73, 331], "4574": 36, "4616": 36, "4980": 36, "4998": 36, "5437": 36, "52": [36, 74, 91, 93, 331, 338, 340], "5994": 36, "70": [36, 66, 73, 331, 337], "processor": [36, 69, 78, 94, 101, 108, 136, 141, 157, 178, 279, 313, 316, 341, 394], "show_region": [36, 317], "variat": [36, 96, 317, 318, 395], "rigid": 36, "perhap": [36, 328, 329], "th": [36, 108, 152, 158, 166, 313, 325], "degre": [36, 78, 94, 101, 108, 157, 214, 215, 231, 266, 278, 284, 296, 317, 318, 340], "redefin": 36, "smoother": [36, 69, 78, 91, 101, 108, 266, 278, 299, 313, 343], "perfect": [36, 91, 337, 343], "asymmetr": [36, 91, 94, 108, 136, 137, 141, 157, 178, 279, 313, 317, 318], "eiler": [36, 68, 70, 71, 91, 94, 101, 108, 136, 236, 266, 278, 299, 341], "boelen": [36, 91, 94, 108, 136], "weight": [36, 106, 107, 108, 112, 116, 139, 201, 313, 334, 343], "mu": [36, 111], "assymetri": 36, "regularis": [36, 91], "control": [36, 78, 86, 91, 93, 108, 203, 275, 334], "smooth": [36, 66, 68, 70, 71, 90, 91, 94, 101, 107, 108, 136, 141, 157, 168, 178, 236, 266, 279, 299, 313, 317, 341, 394], "larger": [36, 78, 94, 101, 107, 108, 114, 136, 143, 156, 299, 301, 319, 320, 324, 334, 343], "sequenti": [36, 94, 107, 114, 317, 337, 353], "asymmetri": [36, 78, 94, 108, 136, 317], "002": [36, 317], "99999": 36, "49622650011": 36, "24660331763260296": 36, "14665656358795823": 36, "08444480851935286": 36, "0785295924636494": 36, "038550890845791524": 36, "02162113454843334": 36, "014278107720663527": 36, "012238378046283024": 36, "005915216055703461": 36, "005915216055703462": 36, "003875486381322957": 36, "0034675404464468568": 36, "004079459348761008": 36, "001019864837190252": 36, "49133114889": 36, "2565979930370674": 36, "1413532664345689": 36, "0805693221380299": 36, "06241572803604341": 36, "037531026008601275": 36, "025088674994880197": 36, "006935080892893713": 36, "006119189023141511": 36, "00530329715338931": 36, "00550727012082736": 36, "0024476756092566047": 36, "0012238378046283023": 36, "00040794593487610074": 36, "50234568912": 36, "24599139873028875": 36, "14441286094613967": 36, "0826090518124104": 36, "06282367397091952": 36, "04405816096661888": 36, "020397296743805037": 36, "01631783739504403": 36, "006731107925455663": 36, "008566864632398115": 36, "0034675404464468563": 36, "0028556215441327055": 36, "001427810772066353": 36, "0006119189023141512": 36, "2519066147859922": 36, "14176121236944503": 36, "08668851116117142": 36, "056704484947778015": 36, "04079459348761008": 36, "027128404669260704": 36, "015705918492729877": 36, "008158918697522015": 36, "009178783534712267": 36, "0036715134138849063": 36, "0012238378046283025": 36, "49194306778": 36, "25027483104648784": 36, "13890559082531231": 36, "09219578128199876": 36, "053644890436207245": 36, "03181978292033587": 36, "024884702027442147": 36, "011626459143968872": 36, "010810567274216669": 36, "0069350808928937135": 36, "002039729674380504": 36, "50724104035": 36, "24089207454433748": 36, "13706983411836987": 36, "0817931599426582": 36, "052013106696702845": 36, "03181978292033586": 36, "02100921564611919": 36, "013870161785787427": 36, "010402621339340569": 36, "001631783739504403": 36, "49357485153": 36, "24741920950235513": 36, "13217448289985662": 36, "08281302477984845": 36, "046709809543313545": 36, "029984026213393408": 36, "022029080483309437": 36, "01672578332992013": 36, "011830432111406922": 36, "0044874052836371085": 36, "00020397296743805037": 36, "496838419": 36, "25517018226500104": 36, "13217448289985664": 36, "08240507884497236": 36, "05405283637108335": 36, "02366086422281384": 36, "02039729674380504": 36, "009994675404464469": 36, "004691378251075159": 36, "0008158918697522015": 36, "49928609462": 36, "24619537169772682": 36, "12544337497440097": 36, "07791767356133524": 36, "04854556625025599": 36, "019377431906614787": 36, "021009215646119187": 36, "010198648371902519": 36, "005711243088265411": 36, "007954945730083965": 36, "002651648576694655": 36, "49765431088": 36, "25109072291624": 36, "1274831046487815": 36, "04283432316199059": 36, "021417161580995294": 36, "03365553962727831": 36, "014890026622977677": 36, "006731107925455662": 36, "49398279747": 36, "24293180421871802": 36, "1323784558672947": 36, "07689780872414499": 36, "03977472865041982": 36, "028556215441327054": 36, "006323161990579562": 36, "49581855418": 36, "2441556420233463": 36, "06853491705918492": 36, "03793897194347737": 36, "025292647962318247": 36, "018765513004300637": 36, "0016317837395044032": 36, "49847020274": 36, "23742453409789066": 36, "129522834323162": 36, "0797534302682777": 36, "04344624206430473": 36, "029576080278517308": 36, "013666188818349375": 36, "49337087855": 36, "23660864222813846": 36, "13401023960679911": 36, "07812164652877329": 36, "039570755682981774": 36, "031003891050583657": 36, "49867417572": 36, "24130002047921362": 36, "07914151136596355": 36, "039774728650419824": 36, "030595945115707558": 36, "012442351013721074": 36, "008974810567274217": 36, "0048953512185132084": 36, "24211591234896584": 36, "13135859103010444": 36, "08118124104034405": 36, "047729674380503795": 36, "02692443170182265": 36, "0014278107720663525": 36, "49643047307": 36, "24517550686053655": 36, "13523407741142743": 36, "08260905181241042": 36, "041814458324800324": 36, "0267204587343846": 36, "008362891664960065": 36, "49602252714": 36, "24354372312103217": 36, "13033872619291417": 36, "08995207864018022": 36, "04018267458529593": 36, "012646323981159124": 36, "003671513413884907": 36, "0018357567069424532": 36, "49439074339": 36, "25313045259062056": 36, "1266672127790293": 36, "07322629531026009": 36, "04772967438050378": 36, "013054269916035224": 36, "003059594511570756": 36, "50356952693": 36, "25863772271144786": 36, "12381159123489659": 36, "043242269096866674": 36, "023864837190251897": 36, "009790702437026419": 36, "25251853368830635": 36, "1344181855416752": 36, "06914683596149908": 36, "04385418799918083": 36, "03161580995289781": 36, "015501945525291829": 36, "004895351218513209": 36, "0018357567069424536": 36, "50010198649": 36, "25353839852549664": 36, "13747778005324596": 36, "07648986278926889": 36, "02345689125537579": 36, "012646323981159122": 36, "002447675609256605": 36, "51030063485": 36, "26026950645095226": 36, "12972680729060004": 36, "06812697112430882": 36, "04446610690149498": 36, "02243702641818554": 36, "50152979726": 36, "2555781281998771": 36, "1340102396067991": 36, "06486340364530002": 36, "03712308007372517": 36, "51601187795": 36, "2512946958836781": 36, "06629121441736636": 36, "037123080073725175": 36, "03528732336678271": 36, "013462215850911324": 36, "50887282408": 36, "25843374974400984": 36, "13013475322547613": 36, "04120253942248618": 36, "017541675199672334": 36, "02121318861355724": 36, "02284497235306164": 36, "01081056727421667": 36, "51132049969": 36, "2529264796231825": 36, "1299307802580381": 36, "0793454843334016": 36, "041406512389924224": 36, "040386647552733974": 36, "016521810362482077": 36, "01917345893917673": 36, "002855621544132705": 36, "51009666189": 36, "12727913168134342": 36, "08362891664960066": 36, "049565431087446245": 36, "04772967438050379": 36, "022640999385623594": 36, "01611386442760598": 36, "005099324185951259": 36, "51662379685": 36, "2596575875486381": 36, "12707515871390537": 36, "08770837599836166": 36, "039978701617857874": 36, "03651116117141102": 36, "025496620929756297": 36, "014686053655539629": 36, "51784763465": 36, "06649518738480444": 36, "07098259266844155": 36, "05854024165472045": 36, "03222772885521196": 36, "01733770223223428": 36, "008362891664960067": 36, "007954945730083967": 36, "004283432316199058": 36, "51621585092": 36, "14196518533688307": 36, "05609256604546385": 36, "04324226909686668": 36, "023456891255375794": 36, "017949621134548434": 36, "008770837599836167": 36, "51927544542": 36, "2527225066557444": 36, "062007782101167315": 36, "06200778210116732": 36, "024476756092566044": 36, "01652181036248208": 36, "010606594306778622": 36, "0071390538603317635": 36, "006527134958017612": 36, "0046913782510751584": 36, "51560393201": 36, "24497153389309853": 36, "14094532049969283": 36, "07037067376612738": 36, "05486872824083556": 36, "018357567069424534": 36, "023660864222813844": 36, "013258242883473277": 36, "00489535121851321": 36, "51907147246": 36, "2490509932418595": 36, "13095064509522836": 36, "04222240425967643": 36, "03467540446446856": 36, "005303297153389311": 36, "51580790499": 36, "24884702027442143": 36, "1368658611509318": 36, "06363956584067172": 36, "06098791726397707": 36, "02896416137620315": 36, "019989350808928937": 36, "003263567479008806": 36, "51723571574": 36, "25394634446037273": 36, "13421421257423713": 36, "06547532254761418": 36, "051605160761826745": 36, "038142944910915424": 36, "03528732336678272": 36, "012850296948597175": 36, "007343026827769813": 36, "0075469997952078635": 36, "51376817531": 36, "2604734794183903": 36, "13543805037886547": 36, "06343559287323366": 36, "05201310669670285": 36, "04099856645504813": 36, "01713372926479623": 36, "007546999795207864": 36, "51478804015": 36, "2517026418185541": 36, "13625394224861764": 36, "07669383575670694": 36, "011014540241654722": 36, "006527134958017611": 36, "007139053860331762": 36, "51397214826": 36, "2574138849068196": 36, "14155723940200696": 36, "06261970100348146": 36, "04467007986893304": 36, "058744214622158515": 36, "02733237763669875": 36, "017745648167110387": 36, "009586729469588367": 36, "52539463446": 36, "25211058775343026": 36, "13870161785787424": 36, "06996272783125128": 36, "041202539422486174": 36, "03283964775752612": 36, "015297972557853779": 36, "0022437026418185542": 36, "51397214828": 36, "2553741552324391": 36, "1429850501740733": 36, "06608724144992832": 36, "042018431292238374": 36, "047117755478189645": 36, "036715134138849075": 36, "012850296948597174": 36, "52498668851": 36, "13808969895556011": 36, "06731107925455662": 36, "03406348556215441": 36, "01754167519967233": 36, "006323161990579561": 36, "0030595945115707555": 36, "52090722918": 36, "2498668851116117": 36, "061191890231415115": 36, "048953512185132095": 36, "05364489043620726": 36, "04568994470612329": 36, "01835756706942453": 36, "009994675404464467": 36, "00571124308826541": 36, "50968871596": 36, "26006553348351424": 36, "14237313127175918": 36, "06445545771042394": 36, "042630350194552524": 36, "04528199877124719": 36, "03426745852959247": 36, "2602695064509523": 36, "1454327257833299": 36, "04140651238992423": 36, "05323694450133115": 36, "027740323571574854": 36, "01060659430677862": 36, "0014278107720663528": 36, "52111120212": 36, "2541503174278108": 36, "14359696907638747": 36, "06527134958017612": 36, "04405816096661889": 36, "037327053041163225": 36, "0042834323161990585": 36, "52437476961": 36, "2447675609256604": 36, "14074134753225476": 36, "06404751177554782": 36, "03487937743190662": 36, "51968339135": 36, "14563669875076798": 36, "07485807904976449": 36, "03447143149703052": 36, "018765513004300634": 36, "00509932418595126": 36, "50785295924": 36, "2725078844972353": 36, "14237313127175916": 36, "07546999795207865": 36, "04691378251075158": 36, "03569526930165882": 36, "04242637722711448": 36, "52090722916": 36, "259045668646324": 36, "06425148474298586": 36, "04650583657587549": 36, "04589391767356134": 36, "036919107106287125": 36, "011422486176530822": 36, "007750972762645915": 36, "51805160762": 36, "26067745238582835": 36, "1470645095228343": 36, "07383821421257424": 36, "039366782715543724": 36, "020193323776366987": 36, "52049928323": 36, "26169731722301864": 36, "06506737661273808": 36, "03773499897603932": 36, "03814294491091543": 36, "01774564816711038": 36, "00611918902314151": 36, "51825558058": 36, "06669916035224248": 36, "015501945525291825": 36, "5143800942": 36, "14155723940200698": 36, "050177349989760395": 36, "0509932418595126": 36, "022844972353061644": 36, "007139053860331764": 36, "00591521605570346": 36, "5119324186": 36, "25924964161376207": 36, "038754863813229574": 36, "03691910710628712": 36, "01794962113454843": 36, "snip_width": [36, 73, 74, 78, 94, 108, 279, 317], "821": [36, 37], "plot_baseline_correct": [36, 37], "gettingstarted_examples_gallery_auto_examples_analysis_d_baselin": 37, "baselin": [37, 66, 71, 72, 73, 76, 89, 90, 91, 95, 108, 113, 136, 138, 141, 153, 157, 178, 217, 220, 224, 225, 226, 231, 255, 272, 279, 313, 316, 322, 329, 337, 341, 350, 353, 355, 356, 357, 394], "scratch": [40, 57, 331], "plane": 40, "nd_data": 40, "sin": [40, 108, 281, 336], "pi": [40, 108, 162, 175, 176, 180, 181, 182, 197, 281, 318, 330, 336], "coord0": [40, 97, 331], "cold": [40, 331], "hot": [40, 331], "coord1": [40, 97, 331], "stream": [40, 334], "coord2": [40, 97, 331], "mydataset": [40, 318, 331], "dimensionless": [40, 96, 108, 118, 124, 140, 142, 176, 181, 182, 295, 341, 345], "blake": [40, 331], "mortim": [40, 331], "z": [40, 47, 50, 96, 97, 108, 169, 203, 283, 326, 331, 334, 340], "mayb": [40, 83, 326], "contour": [40, 108, 203, 222, 321, 334], "stack": [40, 46, 73, 108, 145, 203, 208, 209, 218, 219, 221, 222, 227, 230, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 321, 334, 375, 381, 387], "289": [40, 43], "plot_a_create_dataset": [40, 43], "experi": [41, 88, 90, 98, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 325, 331], "useless": [41, 321], "00300": [41, 88], "00400": [41, 88], "00900": [41, 88], "01400": [41, 88], "02100": [41, 88], "02600": [41, 88], "03600": [41, 88], "05100": [41, 88], "09300": [41, 88], "15000": [41, 61, 62, 88, 336, 338], "20300": [41, 88], "30000": [41, 88], "40400": [41, 88], "50300": [41, 88], "60200": [41, 88], "70200": [41, 88], "80100": [41, 88], "90500": [41, 88], "later": [41, 74, 94, 96, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 117, 121, 122, 168, 266, 278, 299, 334, 396], "destroi": 41, "affect": [41, 89, 96, 108, 132, 317, 319, 321, 334, 341, 350, 374], "simplest": [41, 343], "row10": 41, "c_wavenumb": 41, "c_wavelength": 41, "nanomet": [41, 42], "plot_b_coordin": [41, 43], "pint": [42, 96, 108, 118, 124, 288, 348, 373, 378, 381, 389], "readthedoc": 42, "simpler": [42, 57, 317, 325], "ur": [42, 61, 75, 96, 108, 163, 164, 173, 174, 210, 211, 270, 307, 308, 318, 331, 336, 339], "meter": [42, 96, 108, 118, 189, 288, 331, 345], "volt": [42, 108, 246], "registri": [42, 75, 331], "wodger": [42, 108, 109, 110, 117, 246, 289, 325], "hr": [42, 50, 97, 318], "inplac": [42, 61, 62, 96, 108, 118, 138, 140, 142, 146, 147, 151, 162, 167, 171, 172, 176, 180, 181, 182, 185, 190, 191, 192, 198, 214, 215, 261, 263, 267, 268, 271, 280, 281, 282, 286, 288, 290, 291, 293, 295, 326, 331, 336, 338, 339, 345], "ito": [42, 96, 108, 118, 189, 191, 192, 288, 322, 326, 334, 345, 355], "obvious": [42, 53, 317, 318, 340], "incompat": [42, 96, 108, 190, 247, 288, 334], "dimensionalityerror": [42, 96, 108, 118, 124, 288, 340, 345], "error_": [42, 324, 331, 335, 340, 345], "hz": [42, 61, 75, 96, 108, 162, 180, 270, 336, 338], "terahertz": 42, "thank": 42, "transmitt": [42, 108, 246, 344, 373, 375], "883": [42, 43], "plot_c_unit": [42, 43], "527": 43, "gettingstarted_examples_gallery_auto_examples_core_a_nddataset": 43, "bruker": [44, 48, 51, 59, 61, 62, 73, 74, 75, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 281, 325, 327, 331, 333, 336, 338, 344, 350], "raman": [44, 50, 51, 53, 59, 64, 67, 68, 70, 79, 91, 94, 101, 108, 155, 156, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 269, 315, 329, 343], "renishaw": [44, 51, 59, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 395], "wire": [44, 51, 59, 108, 114, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 395], "sort": [45, 88, 108, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 322, 326, 331, 332, 342, 345, 396], "057": [45, 88, 322, 345], "061": [45, 88, 322, 345], "012": [45, 88, 322, 345], "033": [45, 88, 322, 326, 345], "037": [45, 88, 322, 345], "913": [45, 88, 322, 345], "911": [45, 88, 322, 345], "794": [45, 88, 322, 345], "791": [45, 88, 322, 345], "198": [45, 88, 322, 345, 360], "816": [45, 88, 322, 345], "815": [45, 88, 322, 345], "24": [45, 73, 74, 88, 91, 108, 303, 317, 319, 322, 326, 331, 334, 340, 345, 348, 389], "238": [45, 88, 91, 322, 345, 352], "6000": [45, 88, 322, 326, 335, 345], "650": [45, 88, 322, 326, 334, 335, 345], "649": [45, 88, 317, 322, 326, 335, 345], "vz0467": [45, 88, 322, 345], "vz0520": [45, 88, 322, 345], "vz0521": [45, 88, 322, 345], "posixpath": [45, 57, 325, 326, 333], "dataset_list": 45, "3736": 45, "m5nb": [45, 323], "700": [45, 317, 323, 331, 334], "mp5nb": [45, 323], "mp6nb": [45, 323], "mp5spec": [45, 323], "mp6spec": [45, 323], "zip": [45, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 350, 390], "mat_": [45, 390], "wp": [45, 106, 112, 390], "2019": [45, 390], "511": [45, 51], "plot_generic_read": [45, 51], "578": [46, 51], "plot_read_ir_from_omn": [46, 51], "read_opu": [47, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 325, 326, 381], "0001": [47, 96, 99, 108, 111, 132, 236, 247, 326], "0002": [47, 108, 236, 247, 326], "0003": 47, "2567": [47, 108, 236, 247, 326], "416": [47, 51], "plot_read_ir_from_opu": [47, 51], "nmrdata": [48, 61, 62, 73, 74, 75, 331, 333, 336, 338, 344], "topspin_1d": [48, 61, 62, 333, 336, 338], "ndd": [48, 96, 108, 288], "read_topspin": [48, 61, 62, 73, 74, 75, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 325, 331, 333, 336, 338, 344, 350, 396], "expno": [48, 61, 62, 73, 74, 75, 108, 255, 331, 333, 336, 338, 344], "remove_digital_filt": [48, 61, 62, 331, 333, 336], "topspin_2d": [48, 74, 331, 333], "1840": 48, "196608": [48, 331, 333], "147": [48, 331, 333], "1024": [48, 74, 331, 333, 338, 343, 344], "plot_read_nmr_from_bruk": [48, 51], "labspec": [49, 53, 65, 66, 69, 78, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 337, 343, 350, 371], "ramandir": [49, 78], "ramandata": [49, 50, 53, 65, 66, 69, 78, 108, 243, 337, 343, 350], "read_labspec": [49, 69, 78, 108, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 325, 343, 371], "txt": [49, 53, 65, 66, 69, 78, 85, 87, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 325, 337, 343, 350, 371], "532nm": 49, "191216": 49, "si_200mu": 49, "serie190214": [49, 53, 65, 66, 337], "smc1": [49, 69, 78, 343], "initial_rt": [49, 69, 78, 343], "dialog": [49, 108, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 300, 301, 303, 326, 327, 334, 360, 371, 373], "pack": 49, "subdir": [49, 108, 246, 251, 325, 326, 350], "465": [49, 51], "plot_read_raman_from_labspec": [49, 51], "wdf": [50, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 395], "alchem0x2a": 50, "mit": 50, "blob": 50, "read_wir": [50, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 395], "sp": [50, 62, 108, 162, 176, 180, 234, 276, 277, 295, 336, 338], "read_wdf": [50, 108, 395], "scan": 50, "plot_imag": [50, 108, 216, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 334], "keep_row": 50, "streamlin": 50, "grid": [50, 93, 203, 334], "map": [50, 84, 99, 108, 114, 116, 203, 206, 218, 221, 222, 227, 319, 331, 334, 396], "summ": 50, "1529cm": 50, "1529": 50, "782": 50, "area": [50, 73, 75, 107, 108, 113, 115, 217, 220, 224, 225, 226, 322], "xy": [50, 73, 74, 321, 334], "major": [50, 90, 97, 318, 330, 331, 334, 343], "msg": [50, 154, 187, 298], "914": [50, 51], "plot_read_renishaw": [50, 51], "529": 51, "gettingstarted_examples_gallery_auto_examples_core_c_import": 51, "plot_multipl": [52, 54, 55, 59, 108, 157, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 236, 322, 334, 343, 361, 394], "librairi": [52, 55, 59, 108, 223], "rotat": [53, 73, 74, 321, 334, 371], "drift": [53, 108, 157, 317], "detrend": [53, 65, 94, 108, 136, 141, 178, 279, 323], "b3": 53, "demonstr": [53, 73, 78, 317, 322, 334, 335, 337, 338, 340, 343], "b4": 53, "shift": [53, 61, 62, 108, 151, 157, 162, 171, 172, 180, 198, 217, 220, 223, 224, 225, 226, 246, 261, 263, 317, 320, 321, 326, 328, 338, 343], "count": [53, 89, 96, 108, 128, 131, 170, 342], "trace": [53, 89], "vertic": [53, 108, 168, 203, 217, 220, 223, 224, 225, 226, 317, 321, 334], "pen": [53, 108, 217, 223, 224, 226, 321, 334, 343], "violet": [53, 74], "solid": [53, 108, 217, 224, 226, 334, 339], "358": [53, 55], "plot_plot_multipl": [53, 55], "omnnic": 54, "reinit": 54, "s1": [54, 74, 331, 334], "s10": [54, 334], "s20": [54, 334], "s50": [54, 334], "s53": [54, 334], "san": [54, 334], "518": [54, 55], "plot_plot": [54, 55], "876": 55, "gettingstarted_examples_gallery_auto_examples_core_d_plot": 55, "subproject": [57, 117], "proj": [57, 117, 333], "p350": [57, 108, 238, 258], "m_p": 57, "623": [57, 75], "a350": 57, "m_a": [57, 118], "b350": 57, "m_b": 57, "project_1": [57, 117], "projects_nam": [57, 117], "tg": [57, 108, 238], "member": [57, 89], "sub": [57, 108, 117, 123, 128, 131, 287, 330, 333], "e_project": 57, "pscp": [57, 108, 109, 117, 194, 333], "reload": 57, "disk": [57, 81], "newproj": 57, "script_sourc": 57, "set_loglevel": [57, 65, 123, 324, 388], "print_info": 57, "overwrite_data": 57, "run_script": [57, 123], "thing": [57, 73, 74, 317, 318, 321, 340], "ith": [57, 326], "script_source_2": 57, "tgscatter": 57, "140": [57, 58, 75, 91, 319, 320], "plot_project": [57, 58], "gettingstarted_examples_gallery_auto_examples_core_e_project": 58, "exponenti": [60, 63, 71, 73, 93, 108, 162, 180, 214, 215, 255, 338, 340, 341], "sine": [60, 63, 71, 108, 162, 176, 180, 234, 255, 277, 281, 295, 340], "bell": [60, 63, 71, 108, 234, 255, 277, 281, 336, 343], "apod": [61, 62, 90, 108, 140, 142, 162, 167, 176, 180, 181, 182, 185, 234, 277, 281, 295, 338, 339, 341, 379], "signal": [61, 62, 65, 94, 101, 108, 114, 168, 266, 278, 313, 317, 321, 336, 337, 343], "dataset1d": [61, 62], "new1": [61, 62], "curve1": [61, 62], "em": [61, 73, 75, 108, 180, 234, 276, 277, 281, 336, 338], "lb": [61, 73, 75, 108, 162, 180, 336, 338], "retapod": [61, 62, 108, 140, 142, 162, 176, 180, 181, 182, 281, 295, 336], "broaden": [61, 108, 162, 180, 337, 341], "microsecond": 61, "new2": [61, 62], "curve2": [61, 62], "10000": [61, 73, 84, 270, 334], "zlim": [61, 62, 108, 217, 220, 224, 225, 226, 334, 336], "dcolor": 61, "613": [61, 63], "plot_proc_em": [61, 63], "ssb": [62, 108, 234, 277, 281, 336], "cosin": [62, 108, 281, 336, 340], "sinm": [62, 108, 162, 176, 180, 234, 276, 281, 295, 336], "pow": [62, 108, 234, 277, 281, 331, 336], "new3": 62, "curve3": 62, "qsin": [62, 108, 162, 176, 180, 276, 277, 281, 295, 336], "new4": 62, "curve4": 62, "mix": [62, 89, 99, 108, 111, 281, 336], "new5": 62, "curve5": 62, "data_onli": [62, 73, 74, 108, 217, 218, 220, 221, 222, 224, 225, 226, 227, 318, 321, 336], "\u00b5": [62, 73, 75, 333, 336, 338], "543": [62, 63, 326, 387], "plot_proc_sp": [62, 63], "156": 63, "gettingstarted_examples_gallery_auto_examples_processing_apod": 63, "cosmic": [64, 65, 67, 71, 108, 156, 236], "rai": [64, 65, 67, 71, 91, 108, 156, 236, 315], "spike": [64, 67, 71, 91, 108, 156, 236, 315, 321, 344, 394], "nd1": [65, 73, 96, 108, 117, 150, 189, 194, 333, 335, 337], "nd2": [65, 73, 96, 108, 117, 150, 189, 194, 331, 333, 335, 337], "nd3": [65, 73, 96, 108, 150, 335, 337], "nd4": [65, 73, 335, 337], "90": [65, 73, 74, 75, 321, 325, 334, 337], "appar": [65, 337], "poor": [65, 337], "elimin": [65, 337], "peak": [65, 66, 71, 72, 73, 76, 78, 89, 91, 94, 96, 98, 108, 113, 136, 138, 141, 156, 157, 168, 178, 233, 255, 279, 313, 315, 316, 317, 329, 337, 343, 395], "latter": [65, 326, 343], "despik": [65, 66, 91, 108, 348, 389, 394], "299": [65, 67, 73], "plot_denois": [65, 67], "fast": [66, 98, 99, 104, 107, 108, 111, 114, 121, 122, 167, 185, 326, 328, 334, 338, 396], "x1": [66, 317, 340], "tune": [66, 73, 108, 313, 324, 337, 343], "savitski": [66, 343], "golai": [66, 68, 70, 71, 101, 108, 236, 266, 278, 299, 341], "delta": [66, 73, 74, 101, 108, 156, 266, 284, 296, 337, 338], "threshold": [66, 108, 156, 168, 321, 334, 337], "outlier": 66, "deviat": [66, 107, 108, 114, 121, 152, 156, 201, 284, 285, 296, 313, 319, 329], "x2": [66, 317, 319, 326, 340], "whitak": [66, 91, 108, 156, 337, 348, 389], "x3": [66, 317], "procedur": [66, 89, 111, 318, 319, 325, 329, 337], "badli": [66, 337], "chosen": [66, 84, 105, 108, 155, 217, 220, 223, 224, 225, 226, 313, 325, 337], "inspect": [66, 316, 337], "crucial": [66, 337], "x4": [66, 317], "926": [66, 67, 319], "plot_despik": [66, 67], "225": [67, 73, 331], "gettingstarted_examples_gallery_auto_examples_processing_denois": 67, "denois": [67, 108, 236, 269, 341, 394], "savitki": [68, 70, 71, 101, 108, 236], "whittak": [68, 70, 71, 101, 108, 236, 266, 278, 341, 394], "savitzki": [69, 101, 108, 266, 278, 299, 341], "savgol": [69, 101, 108, 278, 299, 337, 341, 394], "xm": [69, 343], "sg": 69, "fontsiz": [69, 108, 218, 219, 221, 222, 227, 228, 229, 321, 334, 343], "set_titl": [69, 97, 334], "lamb": [69, 78, 94, 101, 108, 136, 299, 317, 343], "756": [69, 70], "plot_filt": [69, 70], "gettingstarted_examples_gallery_auto_examples_processing_filt": 70, "cp": [71, 72, 76, 96, 97, 108, 113, 162, 167, 214, 255, 279, 396], "pick": [71, 72, 76, 100, 108, 113, 255, 317], "relax": [71, 72, 73, 76, 108, 113, 255, 396], "nmrdir": [73, 74, 75], "glob": 73, "1r": 73, "1068": [73, 74], "puls": [73, 344], "94": [73, 122, 325], "procno": [73, 74, 75, 108, 255, 336, 338], "83": [73, 91, 331], "84": [73, 91, 331], "85": [73, 331, 334], "88": [73, 91, 325], "89": [73, 325], "91": 73, "93": [73, 319], "05957": 73, "3873": 73, "003637": 73, "00117": [73, 326, 342], "08434": 73, "5342": 73, "004302": 73, "003153": 73, "04476": 73, "2129": 73, "002508": 73, "007919": 73, "01885": 73, "1031": [73, 338], "001875": 73, "005607": 73, "0007904": 73, "02556": 73, "003612": 73, "007104": 73, "006849": 73, "01868": 73, "002714": 73, "004092": 73, "006191": 73, "02719": 73, "008843": 73, "009201": 73, "004219": 73, "02111": 73, "003521": 73, "002012": 73, "1947": 73, "824e": 73, "826e": 73, "1359924945": 73, "1359949976": 73, "1360100375": 73, "1360112954": 73, "_3": 73, "p15": 73, "1e": [73, 93, 108, 115, 116, 118, 136, 340], "5e": 73, "contact": 73, "zoom": [73, 321, 334, 339, 343], "set_xlim": [73, 321, 339, 343], "5000": [73, 74, 336, 338, 340], "fourier": [73, 108, 167, 171, 172, 183, 185, 326, 336, 339, 341], "fft": [73, 75, 108, 185, 329, 339, 341, 344], "si": [73, 108, 167, 185, 338], "4096": 73, "carefulli": [73, 330], "pk": [73, 74, 75, 108, 215, 318, 321, 338], "phc0": [73, 75, 108, 214, 215, 338], "118": [73, 74, 333], "set_ylim": [73, 317, 321, 339], "find_peak": [73, 74, 108, 316, 318], "height": [73, 74, 108, 113, 168, 203, 321, 334], "wlen": [73, 108, 168, 321], "174": 73, "table_po": [73, 321], "peak_posit": [73, 321], "table_properti": [73, 321], "243": 73, "379": 73, "458": 73, "peak_height": [73, 108, 168, 321], "579": 73, "516": 73, "606": 73, "promin": [73, 91, 108, 168, 315], "242": 73, "069": [73, 321], "028": 73, "left_bas": [73, 108, 168, 321], "ppm": [73, 74, 75, 92, 108, 167, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 270, 338], "186": 73, "765": [73, 348, 389], "right_bas": [73, 108, 168, 321], "162": [73, 91, 326, 331], "408": [73, 333], "945": 73, "763": 73, "575": 73, "569": 73, "783": [73, 108, 152, 285], "width_height": [73, 108, 168, 321], "982": [73, 325], "092": 73, "left_ip": [73, 108, 168, 321], "015": 73, "103": 73, "010": 73, "346": 73, "right_ip": [73, 108, 168, 321], "171": 73, "440": 73, "441": 73, "64": [73, 331, 338], "562": [73, 321, 331], "marker": [73, 74, 75, 108, 116, 217, 220, 223, 224, 225, 226, 318, 321, 323, 334, 396], "receiv": [73, 74, 318, 321], "redraw": [73, 74, 318, 321], "ylim": [73, 74, 108, 114, 217, 220, 224, 225, 226, 318, 321, 343], "xlim": [73, 75, 108, 217, 220, 224, 225, 226, 336, 338, 339, 343, 344], "enumer": [73, 118, 343], "annot": [73, 74, 114, 321], "1f": [73, 74], "xytext": [73, 74, 321, 334], "textcoord": [73, 74, 321, 334], "axvlin": [73, 321], "fanci": [73, 334, 393, 396], "jet": [73, 334], "16000": 73, "heigth": 73, "ub": 73, "simpson": [73, 75, 108, 294, 322, 350], "append": [73, 108, 110, 117, 331, 343], "nddataset_903eacd": 73, "44": [73, 74, 331, 340], "345": 73, "433": 73, "47": [73, 74, 137, 318, 321, 331, 340, 342], "leastsq": [73, 75, 113], "fitter": [73, 75], "sake": [73, 334, 335], "suffici": 73, "cp_model": 73, "i0": [73, 75], "ti": 73, "t1irho": 73, "underscor": [73, 75, 318, 330, 333, 334], "usermodel": [73, 75, 113], "t1rho": 73, "vei": 73, "1e4": 73, "800": [73, 317, 331, 334], "spred": 73, "show_yaxi": 73, "dynam": [73, 89, 91, 94, 108, 116, 168, 315], "2907": 73, "23482": 73, "1100": [73, 345], "796": 73, "2717": 73, "34": [73, 91, 325, 331, 333, 334, 340], "7742": 73, "11463": 73, "4262": 73, "4446": 73, "125": 73, "129": 73, "5282": 73, "10031": 73, "3640": [73, 318], "1622": 73, "compos": [73, 118, 326], "deconvolut": 73, "734": [73, 76, 321], "plot_processing_cp_nmr": [73, 76], "pdata": 74, "2rr": 74, "1731": 74, "prod": [74, 118], "reorder_submatrix": 74, "submatrix_shap": 74, "rr": [74, 108, 146, 147, 333, 340], "1188": 74, "009276": 74, "03083": 74, "08574": 74, "1094": 74, "02799": 74, "01425": 74, "1134": 74, "1161": [74, 321], "03438": 74, "06006": 74, "1091": 74, "1206": 74, "01183": 74, "04616": 74, "ri": [74, 108, 146, 147, 333, 340], "1092": 74, "07951": 74, "1269": 74, "1117": 74, "1287": 74, "1194": 74, "1155": 74, "06948": 74, "03049": 74, "1292": 74, "09699": 74, "08905": 74, "05339": 74, "1305": [74, 317], "1055": 74, "0913": 74, "06793": 74, "1012": 74, "08804": 74, "06219": [74, 333], "09448": 74, "1108": 74, "09555": 74, "08065": 74, "1116": 74, "1259": 74, "09386": 74, "07434": 74, "1229": 74, "06389": 74, "07123": 74, "09588": 74, "09539": 74, "07779": 74, "1075": 74, "1114": 74, "04044": 74, "05341": 74, "0732": 74, "06366": 74, "05242": 74, "06344": 74, "08463": 74, "07955": 74, "2048": 74, "102": 74, "31": [74, 319, 331, 334, 340, 347], "sa": 74, "sb": 74, "sc": 74, "s2": [74, 331], "s3": 74, "s4": 74, "vector": [74, 94, 107, 108, 114, 116, 122, 157, 299, 313, 317, 320, 334, 340], "308": [74, 93], "reus": [74, 89, 94, 98, 99, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 319], "plot_with_pp": 74, "commonwidth": 74, "commonratio": 74, "voigtmodel": [74, 137, 318], "line_3": 74, "line_4": 74, "line_5": 74, "32": [74, 91, 319, 331, 334, 338, 340, 342], "s4p": 74, "8757": 74, "7139": 74, "4913": 74, "0847": 74, "1380": 74, "7153": 74, "3868": 74, "1165": 74, "7584": 74, "3106": 74, "5949": 74, "222": [74, 75, 76, 108, 139], "plot_processing_nmr": [74, 76], "ser": 75, "use_list": [75, 108, 255], "vdlist": [75, 108, 255, 396], "5522": 75, "137": [75, 326, 342], "437": [75, 331], "02603": 75, "099": [75, 319], "6497": 75, "0129": 75, "603": [75, 333], "959": 75, "09235": 75, "61": [75, 318, 331, 338], "7725": 75, "01501": 75, "733": 75, "08437": 75, "1152": 75, "726": 75, "695": 75, "08693": 75, "302": 75, "69": [75, 137, 318, 331], "004867": 75, "1982": 75, "267e": 75, "268e": 75, "deg": 75, "phc1": [75, 108, 214, 338], "dsint": 75, "115": 75, "2472": 75, "4253": 75, "4284": 75, "t1_model": 75, "t1": 75, "_optim": 75, "59": [75, 331, 336], "1500": [75, 108, 138], "2467": 75, "4223": 75, "716": [75, 76, 396], "plot_processing_nmr_relax": [75, 76], "673": 76, "gettingstarted_examples_gallery_auto_examples_processing_nmr": 76, "crop": 78, "strictli": [78, 108, 114, 276, 336, 343], "speak": [78, 329], "bottom": [78, 80, 203, 333, 334], "trend": [78, 94, 108, 136, 141, 157, 178, 279], "among": [78, 89, 90, 93, 94, 96, 97, 104, 105, 108, 157, 203, 217, 218, 219, 221, 222, 223, 227, 228, 229, 280, 313, 321], "quadrat": [78, 94, 108, 157, 317, 318], "corr": 78, "plot_result": 78, "xc": [78, 317], "ba": 78, "xcm": 78, "xcp": 78, "bd": 78, "adjust": [78, 108, 138, 238, 334], "fwhm": 78, "supress": 78, "moment": [78, 108, 160, 328], "98": [78, 108, 152, 285, 334], "349": [78, 79], "plot_processing_raman": [78, 79], "gettingstarted_examples_gallery_auto_examples_processing_raman": 79, "standalon": 80, "highli": [81, 85, 87, 91, 314, 315, 329], "lighter": [81, 334], "400": [81, 331, 334, 339, 342, 343], "gb": [81, 108, 180, 336], "beyond": [81, 326, 342, 343], "matplotib": 81, "anywai": 81, "overal": [81, 313], "disc": 81, "big": [81, 331], "docker": [81, 364], "googl": [81, 348, 377, 389], "colaboratori": [81, 366, 377], "cloud": [81, 365], "osx": [81, 92, 325], "colab": [81, 348, 351, 357, 377, 389], "cantera_util": 82, "unpack": 82, "chemic": [82, 89, 91, 93, 104, 105, 315], "thermodynam": 82, "transport": 82, "backend": [82, 95, 334, 372], "pyqt": [82, 364], "ipython": [82, 85, 87, 95, 325, 333], "magic": [82, 95, 334], "enter": [83, 95, 317, 328, 330], "insert": [83, 330], "isol": [83, 85, 89], "reopen": 83, "drive": [83, 325], "unlik": [83, 108, 163, 331], "datafil": [83, 325, 326], "explor": [83, 90, 321], "pane": 83, "hand": [83, 93, 108, 163, 319, 320, 321, 323], "side": [83, 93, 95, 203, 330, 334], "NOT": [83, 108, 248, 266, 325, 340], "menu": [83, 84, 87, 328], "devot": 83, "manag": [83, 90, 117, 332], "rune": 83, "widget": [83, 95, 327, 334, 348, 372, 377, 389], "chrome": 83, "synchron": 83, "wsl": 84, "powershel": 84, "administr": 84, "admin": 84, "dism": 84, "featurenam": 84, "microsoft": 84, "subsystem": 84, "norestart": 84, "virtualmachineplatform": 84, "wsl2": 84, "x64": 84, "hidden": [84, 92, 325], "taskbar": 84, "engin": [84, 326], "BE": 84, "preinstal": 84, "componr": 84, "volum": [84, 115], "toto": [84, 117, 324], "mywork": 84, "myaccount": 84, "backslash": [84, 325], "slash": [84, 325], "unabl": 84, "upper": [84, 108, 143, 166, 317, 334, 343], "savec": 84, "exectut": 84, "share": [84, 89, 108, 127, 203, 326, 332], "runtim": [84, 387], "jpserver": 84, "past": [84, 101, 108, 266, 278], "982b516d00bd": 84, "token": 84, "45bf716d7cf02f1b7157448de04db163df5e80eb78920004": 84, "127": 84, "password": 84, "rebuild": 84, "catalina": 85, "hopefulli": [85, 89, 325, 331, 363, 370], "dedic": [85, 87, 89, 325, 338], "prompt": [85, 87], "shell": 85, "chose": 85, "startup": [85, 94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 266, 278, 299, 334], "environment_nam": 85, "bash_profil": 85, "zshrc": 85, "bashrc": 85, "bit": [85, 87], "drop": [85, 87, 89, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 330], "upgrad": [85, 87, 347], "virtual": [85, 87, 325, 329], "bin": [85, 334], "pypi": [85, 87], "goe": [85, 87, 313, 324], "2014": [85, 87, 88, 91, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "2020": [85, 91, 104, 313, 315], "lc": [85, 87, 88, 89, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "proce": [85, 87], "branch": [86, 107], "Of": [86, 317, 336], "advantag": 86, "notifi": [86, 377], "cmd": 87, "ye": 87, "yourdefaultpath": 87, "workspac": [87, 328], "batch": 87, "bat": 87, "rem": 87, "launch": [87, 95, 319, 328], "beadapt": 87, "yourworkingfold": 87, "youranacondafold": 87, "scriptsactiv": 87, "shortcut": [87, 336], "startmenu": 87, "2021": [87, 91, 347], "galleri": [88, 89, 90, 316, 329, 334, 394], "nbsp": [88, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "dev0": [88, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "g92c43643": [88, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "d20250212": [88, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344, 345], "2000": [88, 92, 95, 317, 318, 335, 336], "rel": [88, 93, 108, 114, 127, 236, 246, 247, 248, 270, 300, 319, 321, 326, 327, 334], "dehydrat": 88, "suppress": [88, 203, 334, 350, 374], "window_length": [88, 101, 108, 168, 266, 278], "han": [88, 91, 101, 108, 278, 343], "magma": [88, 334, 340], "2300": [88, 321, 342], "3900": [88, 108, 138], "scheme": 89, "disclos": 89, "although": 89, "trust": 89, "compani": 89, "spectroscopist": [89, 342], "drag": [89, 108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 330], "prevent": [89, 92, 334, 369], "problemat": 89, "fulli": [89, 317, 325, 337, 343, 396], "analys": [89, 90, 319, 324], "job": 89, "guarante": [89, 93, 108, 168], "raw": [89, 90, 212, 322, 325, 331], "critic": [89, 324], "popular": [89, 319, 320], "manufactur": 89, "academ": 89, "proprietari": [89, 326], "countri": 89, "phd": 89, "postdoc": 89, "student": 89, "leav": [89, 334], "colleagu": 89, "burden": 89, "crack": [89, 91, 315], "bsd": 89, "variant": 89, "apach": 89, "x11": 89, "w3c": 89, "exchang": [89, 91, 326, 345], "citat": 89, "cover": [89, 90, 116, 329], "scientist": 89, "numer": [89, 91, 94, 96, 99, 108, 111, 124, 280, 324, 326, 331, 332, 340], "extrem": [89, 108, 295, 319, 322, 343], "satisfi": [89, 108, 168], "motiv": 89, "avers": 89, "Its": [89, 90, 122, 313, 321, 374], "difficult": [89, 319, 320], "focus": 89, "optic": [89, 96, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 339, 378], "wide": [89, 108, 168], "usabl": 89, "sensit": [89, 91], "health": 89, "safeti": 89, "plant": 89, "matur": 89, "heart": [89, 313], "noth": [89, 325, 326, 331, 392], "opinion": 89, "spectro": 90, "scopic": 90, "chem": [90, 91, 343], "istri": 90, "thon": 90, "split": [90, 108, 127, 334, 335], "align": [90, 108, 334, 341, 353, 355], "exploratori": 90, "svd": [90, 94, 98, 99, 104, 107, 111, 114, 121, 313, 317], "capabl": [90, 108, 314, 317, 331, 332, 334], "csv": [90, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 325, 326], "xl": 90, "jcamp": [90, 91, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301, 303, 325, 327], "dx": [90, 91, 108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 303, 325, 327, 340], "emb": 90, "reorgan": 90, "crash": [90, 324], "quickli": [90, 313, 329], "bibliographi": 90, "glossari": 90, "cite": [90, 104, 337, 357], "abdelhafid": 91, "ait": [91, 315, 324], "blal": [91, 315, 324], "dusan": 91, "stosic": 91, "philipp": 91, "bazin": 91, "alexandr": 91, "vimont": 91, "diffus": [91, 105, 315, 357], "gravimetr": [91, 315], "invers": [91, 94, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 140, 142, 162, 167, 176, 180, 181, 182, 185, 214, 215, 281, 295, 315, 326, 340], "phy": 91, "27170": 91, "27180": 91, "2023": [91, 347], "1039": [91, 315], "d3cp01585h": [91, 315], "sabina": 91, "ag": 91, "smild": 91, "visibl": [91, 203, 334, 335], "77": [91, 318, 331], "1366": [91, 326], "0003702011951281": 91, "arxiv": 91, "vijaysekhar": 91, "chellaboina": [91, 93], "sanjai": 91, "bhat": 91, "wassim": 91, "haddad": 91, "denni": 91, "bernstein": 91, "ieee": 91, "magazin": 91, "78": [91, 331], "2009": [91, 93, 313], "1109": 91, "mc": [91, 108, 319, 338], "932926": 91, "nicola": 91, "coca": [91, 315], "lopez": [91, 315], "analytica": [91, 317], "chimica": [91, 317], "acta": [91, 317], "1295": 91, "342312": [91, 315], "2024": 91, "sciencedirect": 91, "scienc": 91, "pii": 91, "s0003267024001132": 91, "1016": [91, 315], "aca": [91, 315], "alessandro": 91, "cultrera": [91, 104], "luca": 91, "callegaro": 91, "corner": [91, 357], "ill": 91, "pose": 91, "iop": 91, "scinot": 91, "025004": 91, "aug": 91, "1088": 91, "2633": 91, "1357": 91, "abad0d": 91, "paul": [91, 108, 242, 326], "analyt": 91, "3631": [91, 343], "3636": [91, 343], "2003": [91, 108, 156, 299, 337, 343], "pmid": 91, "14570219": 91, "1021": [91, 315], "ac034173t": 91, "hc": 91, "fm": 91, "leiden": 91, "medic": 91, "fritsch": 91, "carlson": 91, "monoton": [91, 107], "siam": 91, "journal": 91, "246": [91, 338], "1980": 91, "1137": 91, "0717021": 91, "pierr": 91, "heli": [91, 315], "\u00e9": 91, "velopp": [91, 315], "outil": [91, 315], "traitement": [91, 315], "donn": [91, 315], "massiv": [91, 315], "dan": [91, 315], "pollut": [91, 315], "automobil": [91, 315], "Theses": 91, "normandi": 91, "universit": 91, "decemb": 91, "2022": [91, 347], "theses": 91, "hal": [91, 315], "tel": [91, 315], "04077817": [91, 315], "joaquim": 91, "raimundo": 91, "gargallo": 91, "anna": 91, "juan": [91, 313], "rom": 91, "\u00e0": 91, "tauler": 91, "friendli": [91, 94, 96, 98, 99, 104, 107, 108, 111, 113, 114, 116, 117, 121, 122, 325], "s0169743904002874": 91, "chemolab": [91, 319, 320], "2004": 91, "007": 91, "s0169743914002111": 91, "shashik": 91, "kadam": [91, 315], "stefania": 91, "sandov": 91, "zden\u011bk": 91, "bastl": 91, "karol\u00edna": 91, "simkovi\u010dov\u00e1": 91, "libor": 91, "kv\u00edtek": 91, "juraj": 91, "ja\u0161\u00edk": 91, "joanna": 91, "el\u017cbieta": 91, "olsz\u00f3wka": 91, "stanislav": 91, "valtera": 91, "mykhailo": 91, "vaidulych": 91, "jaroslava": 91, "mor\u00e1vkov\u00e1": 91, "petr": 91, "sazama": 91, "david": 91, "kubi\u010dka": 91, "jeroen": 91, "bokhoven": 91, "fortunelli": 91, "armin": 91, "kleibert": 91, "martin": 91, "kalb\u00e1\u010d": 91, "\u0161tefan": 91, "vajda": 91, "cyclohexan": [91, 315], "oxid": [91, 315], "dehydrogen": [91, 315], "graphen": [91, 315], "cobalt": [91, 315], "ferrit": [91, 315], "nanohybrid": [91, 315], "ac": 91, "catalysi": [91, 315], "13484": 91, "13505": 91, "acscat": [91, 315], "3c02592": [91, 315], "yukiteru": 91, "katsumoto": [91, 108, 156, 337, 348, 389], "yukihiro": 91, "ozaki": [91, 108, 156], "convex": [91, 108, 156], "322": [91, 358], "14658624": 91, "000370203321558236": 91, "laura": 91, "macchietti": [91, 315], "lucia": 91, "casali": 91, "franziska": 91, "emmerl": 91, "dario": 91, "braga": 91, "fabrizia": 91, "grepioni": 91, "insight": [91, 315, 332], "mechanochem": [91, 315], "synthes": [91, 315], "powder": [91, 315], "diffract": [91, 315], "rsc": 91, "d3mr00013c": [91, 315], "maeder": [91, 98, 313], "steven": 91, "brown": 91, "\u00e1": 91, "beata": 91, "walczak": 91, "comprehens": 91, "261": 91, "274": 91, "elsevi": 91, "oxford": 91, "b9780444527011000478": 91, "b978": 91, "044452701": 91, "00047": 91, "marcel": 91, "andrea": 91, "zuberbuehl": [91, 98, 313], "overlap": [91, 98, 335], "chromatograph": 91, "181": 91, "287": 91, "291": 91, "1986": [91, 98, 313], "s0003267000852484": 91, "s0003": 91, "2670": 91, "85248": 91, "robert": 91, "mcdonald": [91, 108, 242, 326], "jr": 91, "wilk": [91, 108, 242, 326], "151": [91, 326], "1988": [91, 94, 108, 242, 279, 326], "0003702884428734": [91, 326], "laetitia": 91, "oliviero": [91, 315], "elizabeth": 91, "dominguez": 91, "garcia": 91, "jianjun": 91, "chen": 91, "fran": 91, "\u00e7": 91, "ois": 91, "maug": 91, "identif": [91, 315], "hydrodesulfur": [91, 315], "403": 91, "special": [91, 108, 176, 317, 330, 333, 334], "honour": 91, "dr": 91, "henrik": 91, "\u00f8": 91, "s0021951721000798": 91, "jcat": [91, 315], "018": [91, 315, 321], "nematollah": 91, "omidikia": [91, 107], "samira": 91, "beyramysoltan": 91, "jamil": 91, "mohammad": 91, "jafari": 91, "elnaz": 91, "tavakkoli": 91, "mahsa": 91, "akbari": 91, "lakeh": 91, "masoumeh": 91, "alinaghi": 91, "mahdiyeh": 91, "ghaffari": 91, "somaiyeh": 91, "khodadadi": 91, "karimvand": 91, "\u00f3": 91, "bert": 91, "rajk": 91, "hamid": 91, "abdollahi": 91, "closur": [91, 107, 313], "e2975": 91, "2018": [91, 107, 108, 156, 326, 337], "cem": 91, "0105": 91, "r1": [91, 317], "analyticalsciencejourn": 91, "onlinelibrari": 91, "wilei": 91, "1002": 91, "2975": 91, "sebastian": 91, "rejman": [91, 315], "zo\u00e9": 91, "reverdi": 91, "zeynep": 91, "b\u00f6r": 91, "jaap": 91, "louwen": 91, "carolin": 91, "rieg": 91, "joren": 91, "dorresteijn": 91, "jan": [91, 326], "kee": 91, "der": 91, "waal": 91, "eelco": 91, "vogt": 91, "ina": 91, "vollmer": 91, "weckhuysen": 91, "acid": [91, 315], "descriptor": [91, 315], "polyolefin": [91, 315], "materi": [91, 315], "chemrxiv": [91, 315], "26434": [91, 315], "4fq4v": [91, 315], "hannemos": 91, "rieger": [91, 315], "wilson": 91, "tej": 91, "vegg": 91, "eibar": 91, "flore": 91, "neural": [91, 315], "8pfk5": [91, 315], "lisa": 91, "roach": [91, 98], "michael": 91, "guilhau": [91, 98], "ga": [91, 115], "chromatographi": 91, "spectrometri": 91, "feasibl": 91, "organ": [91, 108], "1071": 91, "1076": 91, "om": 91, "1210271017": 91, "ryan": [91, 94, 108, 279], "clayton": 91, "griffin": 91, "sie": 91, "cousen": 91, "statist": [91, 108, 284, 296, 313, 323, 329], "treatment": [91, 319, 320], "quantit": 91, "pix": 91, "geoscienc": 91, "nuclear": 91, "beam": [91, 326], "atom": 91, "396": 91, "402": [91, 372], "0168583x88900638": 91, "0168": 91, "583x": 91, "90063": 91, "pawel": 91, "stelmachowski": [91, 104], "sergei": 91, "sirotin": 91, "speciat": 91, "adsorb": 91, "co2": 91, "metal": 91, "9335": 91, "9342": 91, "c3cp51146d": 91, "joran": 91, "turnhout": [91, 315], "domenico": 91, "aceto": 91, "ric": 91, "thibault": 91, "starzyk": 91, "annemi": 91, "bogaert": 91, "federico": 91, "azzolina": 91, "juri": 91, "surfac": [91, 108, 115, 218, 219, 221, 222, 227, 228, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 315, 319, 320, 334, 378, 396], "plasma": [91, 315], "catalyt": [91, 315], "reform": [91, 315], "methan": [91, 315], "novel": [91, 315], "atmospher": [91, 315], "dielectr": [91, 315], "barrier": [91, 315], "discharg": [91, 315], "situ": [91, 315], "catal": 91, "sci": 91, "technol": 91, "6676": 91, "6686": 91, "d2cy00311b": [91, 315], "darren": 91, "kevin": 91, "hay": [91, 108, 156], "s0169743918301758": 91, "windig": [91, 121], "1997": [91, 121], "s0169743996000615": 91, "s0169": 91, "7439": 91, "00061": 91, "mahdi": 91, "yonesi": [91, 315], "milagro": 91, "ramo": 91, "carmen": 91, "ramirez": 91, "castillejo": 91, "rocio": 91, "fern": 91, "ndez": 91, "serra": 91, "fivo": 91, "panetso": 91, "adrian": 91, "belarra": 91, "margarita": 91, "chevali": 91, "francisco": 91, "rojo": 91, "jo": 91, "rez": 91, "rigueiro": 91, "gustavo": 91, "guinea": 91, "daniel": 91, "gonzalez": 91, "nieto": 91, "resist": [91, 315], "degrad": [91, 315], "silk": [91, 315], "fibroin": [91, 315], "hydrogel": [91, 315], "expos": [91, 314, 315, 329], "neuroinflammatori": [91, 315], "7921117": [91, 315], "vladimir": 91, "zholobenko": [91, 313], "tia": 91, "freita": 91, "jendrlin": 91, "freder": 91, "probe": 91, "pyridin": 91, "agir": 91, "molar": 91, "absorpt": 91, "coeffici": [91, 106, 108, 112, 116, 138, 176, 343], "385": 91, "s0021951720300865": 91, "stijn": 91, "dael": [91, 315], "delphin": 91, "minoux": 91, "nikolai": 91, "nesterenko": 91, "sylvi": 91, "mauri": 91, "vincent": 91, "coupard": 91, "valentin": 91, "valtchev": 91, "jean": 91, "gilson": 91, "fer": [91, 315], "buten": [91, 315], "isobutanol": [91, 315], "environment": 91, "284": 91, "119699": [91, 315], "s0926337320311164": 91, "apcatb": [91, 315], "spectrochempy_cfg": 92, "scp_config_hom": 92, "nano": 92, "generalprefer": 92, "mydatadir": 92, "loc2index": [92, 96], "closest": [92, 108, 167, 185, 342], "2074": [92, 321], "1999": 92, "revers": [92, 96, 98, 99, 104, 107, 108, 111, 114, 121, 122, 140, 142, 162, 167, 176, 180, 181, 182, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 280, 281, 293, 295, 326], "arrheniu": 93, "298": [93, 115], "elementari": 93, "parameter": 93, "reactor": [93, 115], "n_reaction": 93, "reactant": [93, 105], "symbol": [93, 331, 334], "match": [93, 108, 118, 138, 143, 145, 168, 340], "dictionari": [93, 94, 97, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 168, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 321, 326, 331, 333, 334], "2a": 93, "n_speci": 93, "isotherm": 93, "k_1": 93, "k_n": 93, "a_1": 93, "b_1": 93, "ea_1": 93, "a_n": 93, "b_n": 93, "ea_n": 93, "expon": [93, 108, 281, 336], "quantiti": [93, 96, 108, 124, 139, 152, 162, 166, 168, 169, 180, 190, 192, 201, 210, 214, 215, 270, 284, 285, 288, 296, 308, 313, 321, 326, 345, 360, 365], "callabl": [93, 96, 99, 105, 107, 108, 169, 213], "kelvin": 93, "k_exp": 93, "0e8": 93, "0e3": 93, "kin_exp": 93, "c_exp": 93, "7355": 93, "1879": 93, "07666": 93, "0k": 93, "5448": 93, "236": 93, "2192": 93, "stoichiometri": 93, "init_concentr": 93, "cexp": 93, "iexp": 93, "i2iexp": 93, "dict_param_to_optim": 93, "optimizer_kwarg": 93, "ot": 93, "ea": 93, "od": [93, 96, 108], "solver": [93, 98, 99, 104, 107, 111, 114, 121, 122, 391, 396], "solve_ivp": 93, "lsdoa": 93, "k_dt": 93, "lsoda": 93, "left_op": 93, "c_name": 93, "use_jac": 93, "atol": 93, "rtol": 93, "differenti": [93, 101, 108, 266, 357], "t_point": 93, "timl": 93, "odesolv": 93, "adam": 93, "bdf": 93, "stiff": 93, "rk45": 93, "rung": 93, "kutta": 93, "rk23": 93, "dop853": 93, "radau": 93, "implicit": 93, "iia": 93, "famili": [93, 334], "multi": [93, 395, 396], "formula": 93, "treat": [93, 118, 124, 321, 326, 343], "far": 93, "precis": [93, 108, 284, 296, 321], "unusu": 93, "diverg": [93, 111, 319], "arbitrari": [93, 99, 108, 163, 231, 318, 335, 396], "array_lik": [93, 96, 108, 128, 129, 130, 131, 139, 143, 146, 147, 152, 157, 158, 193, 196, 199, 201, 202, 284, 285, 296], "multipli": [93, 108, 111, 114, 235], "n_time": 93, "pool": 93, "renam": [93, 328, 394], "jacobian": 93, "absolut": [93, 108, 125, 284, 296, 319, 325, 326, 334], "toler": [93, 94, 99, 107, 108, 111, 114, 116, 136], "accuraci": [93, 96, 108, 114, 284, 296, 326], "domin": 93, "smaller": [93, 94, 108, 136, 143, 167, 168, 281, 321, 334, 336, 340, 343], "scale": [93, 96, 104, 107, 108, 111, 114, 116, 118, 167, 177, 190, 192, 196, 231, 278, 291, 323, 334, 339, 343, 365, 367, 368], "benefici": 93, "return_meta": 93, "bunch": 93, "sol": 93, "odesolut": 93, "dense_output": 93, "t_event": 93, "y_event": 93, "nfev": 93, "njev": 93, "nlu": 93, "lu": [93, 114], "tspan": 93, "occur": [93, 124, 396], "human": [93, 118], "warm_start": [94, 98, 99, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122], "include_limit": [94, 317], "100000": [94, 334], "001": [94, 108, 136, 317, 319, 321, 388], "recov": [94, 99], "rubberband": [94, 108, 136, 141, 157, 178, 279, 394], "nth": [94, 108, 157], "predefin": [94, 105], "debug": [94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 154, 266, 278, 299, 324, 329], "set_log_level": [94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 266, 278, 299], "repeatedli": [94, 98, 99, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122], "maxim": [94, 98, 99, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 168, 321], "unconstrain": [94, 108, 136], "stiffer": [94, 108, 136], "1e9": [94, 108, 136], "emphas": [94, 330], "belong": [94, 317], "insensit": 94, "retriev": [94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 325, 331], "polynom": [94, 231, 318], "pchipinterpol": [94, 317], "convert": [94, 96, 108, 118, 124, 125, 126, 128, 129, 130, 131, 143, 146, 147, 199, 202, 288, 292, 340, 345, 392], "remove_limit": 94, "get_baselin": [94, 108, 136, 141, 157, 279], "compuut": [94, 108, 136, 141, 157, 279], "autosub": [94, 108, 136, 141, 157, 178, 279], "breakpoint": [94, 108, 157, 317], "segment": [94, 108, 157], "traitlet": [94, 98, 99, 101, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122, 334], "used_rang": [94, 317], "trim": 94, "subplot": [94, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 203, 217, 220, 224, 225, 226, 334, 342], "nblue": [94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122], "ngreen": [94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122], "nred": [94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122], "colorblind": [94, 98, 99, 104, 107, 111, 113, 114, 116, 121, 122, 334], "percent": [94, 98, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 153, 319, 322], "to_dict": [94, 97, 98, 99, 101, 104, 106, 107, 111, 112, 113, 114, 116, 121, 122], "regular": [94, 98, 99, 101, 104, 106, 107, 108, 111, 112, 113, 114, 116, 121, 122, 299, 313, 334], "initial_rang": 95, "wrapper": [95, 99, 108, 168, 266, 275, 294, 326, 340, 343], "baselinecorrect": [95, 394], "textbox": 95, "3000": [95, 317], "dropdown": [95, 317, 325, 328], "interv": [95, 96, 108, 114, 127, 132, 143, 168, 177, 193, 196, 203, 235, 275, 321], "5900": [95, 317], "5400": [95, 317], "1550": [95, 317, 322], "1555": [95, 317], "accordingli": [96, 108, 360], "subclass": [96, 97, 108, 113, 116, 360], "dlabel": [96, 108], "linearize_below": 96, "sigdigit": [96, 392], "larmor": [96, 270], "nucleu": [96, 270], "evenli": [96, 104, 108, 132, 135, 177, 193, 196, 262, 392], "\u00ecncrement": 96, "increment": [96, 342], "consecut": [96, 108, 156, 340], "tarr": 96, "abcdef": 96, "mylabel": 96, "readonli": [96, 97, 102, 103, 108, 117, 119, 120, 186, 259, 334], "has_unit": [96, 108], "has_data": [96, 108, 331], "empti": [96, 99, 108, 118, 164, 173, 174, 210, 211, 307, 308, 321, 329, 331, 333, 334], "has_defined_nam": [96, 97, 108], "is_empti": [96, 97, 108, 331], "is_float": [96, 108], "is_integ": [96, 108], "is_label": [96, 97, 108], "laser_frequ": [96, 339, 379], "laser": [96, 339], "regularli": [96, 377], "roi": [96, 108, 350], "show_datapoint": [96, 339], "datapoint": 96, "everytim": [96, 392], "underli": [96, 99, 108, 313, 317, 321], "hypercomplex": [96, 102, 103, 108, 119, 120, 129, 144, 199, 341], "uniformli": [96, 108, 196], "umasked_data": [96, 108], "amax": [96, 108, 130, 199, 202], "keepdim": [96, 108, 118, 128, 129, 130, 131, 139, 152, 199, 201, 202, 233, 284, 285, 296], "maxima": [96, 108, 129, 130, 168, 199, 202, 316, 322], "flatten": [96, 108, 129, 130, 139, 152, 199, 201, 202, 284, 285, 296, 343], "broadcast": [96, 108, 128, 129, 130, 131, 143, 199, 201, 202, 233, 284, 285, 296, 335, 340], "amin": [96, 108, 129, 199, 202], "propag": [96, 108, 129, 130, 160, 199, 202], "wise": [96, 108, 114, 125, 126, 129, 130, 199, 202, 340], "fmax": [96, 108, 129, 130, 199, 202], "ignor": [96, 108, 116, 122, 127, 129, 130, 169, 199, 202, 214, 240, 243, 325, 371], "fmin": [96, 108, 129, 130, 199, 202], "argmax": [96, 108, 129, 130, 199, 202, 313, 323], "argmin": [96, 108, 129, 130, 199, 202], "half": [96, 108, 132, 168, 193, 235, 321, 334], "preferebl": [96, 108, 132], "inspac": [96, 108, 132], "adjac": [96, 108, 132], "endpoint": [96, 108, 132, 177, 193, 196], "mycoord": [96, 108, 132], "rounded_arrai": [96, 108, 135, 262], "unchang": [96, 108, 135, 262, 336], "ceil": [96, 108, 135, 262], "floor": [96, 108, 135, 262], "rint": [96, 108, 135, 262], "trunc": [96, 108, 135, 262], "typecod": [96, 108], "deep": [96, 108, 150, 334], "keepnam": [96, 97, 108, 150], "disconnect": [96, 97, 108, 150], "deepcopi": [96, 108, 150], "fromfunct": [96, 108, 170, 318, 331], "cl": [96, 108, 118, 169, 193, 196], "fn": [96, 108, 169], "rank": [96, 108, 169, 313], "back": [96, 99, 104, 107, 108, 111, 113, 114, 116, 121, 122, 169, 324, 330, 334, 336], "fromit": [96, 108, 169], "func1": [96, 108, 169], "lambda": [96, 104, 105, 108, 169, 197, 274, 313, 318, 330], "134": [96, 108, 169], "alloc": [96, 108, 170], "resiz": [96, 108, 170], "demand": [96, 108, 170], "geomspac": [96, 108, 196], "num": [96, 104, 108, 177, 193, 196, 331], "geometr": [96, 108, 177], "progress": [96, 108, 177, 328, 357, 371], "logspac": [96, 108, 177], "arithmet": [96, 108, 139, 177, 201, 284, 285, 296, 331], "get_label": [96, 108], "is_units_compat": [96, 108], "destin": [96, 108, 118, 190, 288], "rescal": [96, 99, 108, 118, 190, 191, 192, 283, 288, 290, 291], "to_base_unit": [96, 108, 118, 190, 191, 192, 288], "ito_base_unit": [96, 108, 118, 190, 192, 288], "to_reduced_unit": [96, 108, 118, 190, 191, 192, 288], "ito_reduced_unit": [96, 108, 118, 190, 191, 288], "redunc": [96, 108, 191], "kg": [96, 108, 118, 192, 291], "retstep": [96, 108, 193], "exclud": [96, 108, 117, 156, 168, 193], "return_error": 96, "1644": [96, 108, 168], "4517": 96, "power": [96, 108, 114, 116, 167, 185, 196, 232, 310, 319, 341], "ln": [96, 108, 196, 326], "log_bas": [96, 108, 196], "acronym": [96, 108, 233], "hold": [96, 108, 217, 220, 224, 225, 226, 233, 329], "round_": [96, 108], "set_laser_frequ": [96, 339], "15798": [96, 339], "light": [96, 334], "sai": [96, 108, 267, 280, 282, 286, 288, 293, 318], "reduced_unit": [96, 108, 288], "12345": [96, 108, 288], "traceback": [96, 108, 288, 324, 325, 333, 396], "overwrit": [97, 314, 329], "coord1b": [97, 331], "millitesla": [97, 331], "magnet": [97, 331], "elaps": [97, 326, 331], "v_1": [97, 331], "available_nam": 97, "default_dim_nam": 97, "is_same_dim": 97, "val": [97, 318, 326], "alphabet": 97, "prone": [97, 331], "set_unit": 97, "themselv": [97, 326, 334], "warg": 97, "denot": [97, 318], "gc": [98, 348, 389], "operando": 98, "init": [98, 108, 111, 388], "fit_reduc": [98, 99, 104, 107, 111, 113, 114, 116, 121, 122], "Not": [98, 108, 114, 128, 143, 280, 324, 330, 335], "compui": [98, 99, 107, 111, 113, 114, 116, 121, 122], "parallel": 99, "fun": 99, "logcosh": 99, "fun_arg": 99, "random_st": [99, 111, 114], "w_init": 99, "whiten": [99, 114, 396], "whiten_solv": 99, "cdot": [99, 107, 313, 322, 348, 389], "deflat": 99, "cube": [99, 340], "unicod": [99, 107, 334], "entropi": 99, "averag": [99, 101, 108, 111, 156, 201, 203, 275, 278, 284, 296, 334, 341], "my_g": 99, "serial": [99, 107, 397], "dill": [99, 107], "base64": [99, 107], "alpha": [99, 108, 116, 176, 181, 182], "randomst": [99, 111, 114], "normaldistribut": 99, "across": [99, 111, 114], "strategi": 99, "eigh": 99, "degener": 99, "memori": [99, 108, 127], "effici": [99, 114, 325], "mixing_": 99, "pseudo": [99, 108, 255, 396], "n_iter": 99, "x_transform": [99, 104, 107, 111, 113, 114, 116, 121, 122], "x_origin": [99, 104, 107, 111, 113, 114, 116, 121, 122], "done_callback": 100, "ipywidget": [100, 387], "tick": [100, 108, 203, 217, 220, 224, 225, 226, 334], "cval": [101, 108, 266, 278], "interp": [101, 108, 266, 278], "move": [101, 108, 156, 278, 334, 341], "avg": [101, 108, 139, 275, 278, 343], "convolut": [101, 108, 278, 297, 318, 341], "ham": [101, 108, 162, 176, 180, 182, 234, 276, 277, 278, 281, 295, 339, 343], "bartlett": [101, 108, 162, 176, 180, 234, 276, 277, 278, 281, 295, 343], "blackman": [101, 108, 142, 278, 343], "fill": [101, 108, 111, 116, 151, 163, 164, 173, 174, 198, 210, 211, 263, 266, 278, 307, 308, 309, 310, 311, 312, 334, 339, 341, 342], "edg": [101, 108, 116, 143, 168, 203, 266, 278, 334], "median": 101, "mirror": [101, 108, 266, 278, 343], "nearest": [101, 108, 266, 278, 334, 340], "pad": [101, 108, 266, 278, 321, 333, 334], "savgol_filt": [101, 108, 266, 278, 299, 343, 394], "datain": 101, "penal": [101, 108, 299], "positiveoddinteg": [101, 108, 266, 278], "odd": [101, 108, 168, 266, 275, 278, 343], "qpsolver": 104, "osqp": [104, 396], "univari": 104, "int_": 104, "dq": 104, "physico": [104, 105], "optimum": [104, 320, 343], "cultrera_callegaro": 104, "menger": 104, "circumcircl": 104, "golden": 104, "quadprog": [104, 371, 396], "quatrat": 104, "fredholm": 105, "1st": [105, 107, 321, 326, 342], "ca": [105, 108, 161, 317], "fit_intercept": [106, 112], "ordinari": [106, 107, 112], "linear_model": [106, 112], "linearregress": [106, 112], "w1": [106, 112], "target": [106, 112, 116, 313], "nnl": [106, 107, 316, 391], "n_target": [106, 107, 112, 116, 313], "sample_weight": [106, 112, 116], "Will": [106, 112], "ahap": [106, 112], "frac": [106, 108, 112, 116, 140, 175, 176, 181, 182, 197, 274, 281, 313, 318, 336], "y_true": [106, 112, 116], "y_pred": [106, 112, 116], "arbitrarili": [106, 112, 116], "wors": [106, 112, 116], "disregard": [106, 112, 116], "wrt": [106, 112, 324], "argsgetspec": 107, "closureconc": 107, "closuremethod": 107, "closuretarget": 107, "getc_to_c_idx": 107, "getspec": 107, "getst_to_st_idx": 107, "hardspec": 107, "kwargsgetspec": 107, "maxdiv": [107, 319], "monodecconc": 107, "monodectol": 107, "monoincconc": 107, "monoinctol": 107, "nonnegconc": 107, "nonnegspec": [107, 379], "normspec": [107, 319], "solverconc": 107, "solverspec": 107, "storeiter": [107, 348, 389], "unimodconc": [107, 319], "unimodconcmod": 107, "unimodconctol": 107, "unimodspec": 107, "unimodspecmod": 107, "unimodspectol": 107, "constrain": [107, 108, 168, 253, 254], "constantsum": 107, "recomput": [107, 319], "leftarrow": 107, "textrm": [107, 313, 323], "diag": [107, 108, 122, 159, 166, 184, 331], "c_l": 107, "c_t": 107, "getc": 107, "2nd": 107, "ccurr": 107, "hardc": 107, "newargsgetconc": 107, "extraoutputgetconc": 107, "kept": [107, 108, 114, 218, 221, 222, 227, 326, 392], "stcurr": 107, "hardst": 107, "newargsgetspec": 107, "extraoutputgetspec": 107, "loop": [107, 313], "3rd": [107, 326], "decreas": [107, 339], "unimodtol": [107, 378], "euclid": [107, 319], "pnnl": [107, 391], "criterion": [107, 121, 319, 321], "unimod": [107, 313, 319, 378], "multimod": 107, "c_constrained_list": 107, "c_ls_list": 107, "s_soft": 107, "st_l": 107, "st_constrained_list": 107, "c_": 107, "st_ls_list": 107, "st_unconstrain": 107, "y_transform": [107, 116], "coordunit": 108, "coordtitl": 108, "mathemat": [108, 329, 331, 332, 335, 341, 353, 363], "awar": [108, 266, 314, 331, 332, 333, 335, 374], "initialis": [108, 111, 392], "maskedarrai": 108, "tzinfo": 108, "confus": [108, 321, 326], "shorter": [108, 167, 185, 317], "desc": 108, "telephon": 108, "acquisition_d": 108, "creator": [108, 326], "axt": 108, "axec": 108, "axect": 108, "axex": 108, "axei": 108, "coordnam": 108, "set_coord": 108, "set_coordtitl": [108, 319], "set_coordunit": 108, "parent": [108, 117, 123, 212], "divid": [108, 114, 201, 329, 339], "fignum": 108, "has_complex_dim": [108, 267], "is_1d": 108, "is_complex": [108, 146, 147, 267], "is_interleav": 108, "interleav": 108, "is_mask": 108, "is_quaternion": [108, 267], "local_timezon": [108, 331], "masked_data": [108, 289], "ma": [108, 139, 160, 289, 396], "modeldata": [108, 113], "ndax": 108, "suffix": [108, 117, 212, 325], "utc": [108, 246, 326, 331, 334, 374], "shorthand": [108, 116, 125, 126], "ib": [108, 125, 126], "sqrt": [108, 111, 125, 126, 175, 200, 284, 318, 329, 330, 331], "add_coordset": 108, "higher": [108, 127, 284, 296, 317, 321], "prioriti": [108, 123, 127, 167, 264], "enum": [108, 127, 281], "outer": [108, 127, 335], "inner": [108, 127, 341], "union": [108, 127, 335], "intersect": [108, 127, 321, 335], "interpolate_method": [108, 127], "interpolate_sampl": [108, 127], "reindex": [108, 127], "valueerror": [108, 118, 127, 282, 331], "logic": [108, 128, 131], "infin": [108, 114, 128, 340], "OR": [108, 131], "asfortranarrai": 108, "laid": 108, "fortran": 108, "1e5": [108, 136], "atleast_2d": 108, "expand": 108, "singleton": 108, "vardiff": [108, 138], "return_coef": [108, 138], "minimis": [108, 138], "ssdiff": [108, 138], "abc": [108, 138, 318, 394], "path_a": [108, 138], "subtrack": [108, 138], "1600": [108, 138, 331], "zerodivisionerror": [108, 139], "robust": [108, 139, 396], "25085858": [108, 139, 201], "789": [108, 139], "triangular": [108, 140, 295, 343], "apod_arr": [108, 140, 142, 162, 176, 180, 181, 182, 281, 295], "inv": [108, 140, 142, 162, 167, 176, 180, 181, 182, 214, 215, 281, 295], "rev": [108, 140, 142, 162, 176, 180, 181, 182, 281, 295], "triang": [108, 140, 162, 176, 180, 234, 276, 277, 281], "blackmanharri": [108, 162, 176, 180, 234, 276, 277, 281, 295], "harri": [108, 142], "datas": [108, 142], "clip": 108, "a_min": [108, 143], "a_max": [108, 143], "close_figur": 108, "rrr": [108, 144], "rir": [108, 144], "rri": [108, 144], "conten": [108, 145], "165": [108, 145], "11098": [108, 145, 237], "conj": [108, 147, 340], "conjug": [108, 146, 340], "set_complex": [108, 146, 147, 340], "coordmax": 108, "coordmin": 108, "oordin": [108, 149], "mainimum": [108, 149], "pt": [108, 121, 151, 171, 172, 198, 261, 263], "circular": [108, 151, 330], "toshift": [108, 151, 261], "negat": [108, 151, 261], "roll": [108, 151, 171, 172, 198, 263], "cumsum": 108, "trapezoid": [108, 152, 275, 285, 322], "composit": [108, 115, 152, 275, 285, 294, 313, 334], "discret": [108, 152], "381755": [108, 152, 285], "74": [108, 152, 285, 331, 333], "73": [108, 152, 285, 331], "dc": [108, 339, 344], "daatset": [108, 153], "proport": [108, 153, 318], "delete_coordset": 108, "percentag": [108, 114, 155], "emploi": [108, 156], "abscissa": [108, 156, 319], "anomal": [108, 156], "fourth": [108, 156], "realiz": [108, 156, 328], "zscore": [108, 156], "straight": [108, 157], "diagon": [108, 158, 166, 184, 313], "wish": [108, 158, 328], "question": [108, 158], "masked_array_lik": [108, 160], "masked_arrai": [108, 160, 210, 340], "contigu": [108, 160], "attempt": [108, 160, 236, 246, 325, 329], "download_nist_ir": [108, 372], "nist": [108, 161, 372], "webbook": [108, 161, 372], "xxxx": [108, 161], "xx": [108, 161, 334], "xxxxxxx": [108, 161], "dump": [108, 117, 379], "nativ": [108, 117, 325, 334], "t_0": [108, 162, 319], "gm": [108, 162, 176, 234, 276, 277, 281, 295, 336, 338], "uniniti": [108, 163, 164, 173, 174, 210, 211, 307, 308], "zeros_lik": [108, 163, 164, 173, 174, 210, 211, 307], "ones_lik": [108, 163, 164, 173, 174, 210, 307, 308], "empty_lik": [108, 163, 173, 174, 210, 211, 307, 308], "full_lik": [108, 163, 164, 173, 210, 211, 307, 308, 331], "margin": [108, 163, 164, 334], "caution": [108, 163], "int64": [108, 163, 173, 210, 307], "overrid": [108, 113, 164, 174, 211, 308], "emptylik": [108, 164], "fill_valu": [108, 164, 173, 174, 210, 308, 331, 340], "ey": [108, 184], "elsewher": [108, 166], "sizeff": [108, 167], "ifft": [108, 167, 338], "tdeff": [108, 167], "rel_height": [108, 168, 321], "plateau_s": [108, 168, 321], "use_coord": [108, 168], "neighbour": [108, 168, 321], "unexpect": [108, 168], "former": [108, 168, 326, 396], "horizont": [108, 168, 217, 220, 224, 225, 226, 321, 334], "until": [108, 168, 217, 220, 224, 225, 226, 321, 330, 387], "peak_promin": [108, 168], "peak_width": [108, 168], "flat": [108, 168, 278, 321, 343], "plateau": [108, 168], "intermedi": [108, 113, 168, 317], "left_threshold": [108, 168], "right_threshold": [108, 168], "left_edg": [108, 168], "right_edg": [108, 168], "peakpropertywarn": [108, 168], "find_peaks_cwt": [108, 168], "wavelet": [108, 168], "amplitud": [108, 113, 168, 318, 334], "middl": [108, 168, 309, 310, 311, 312, 344], "down": [108, 168, 350], "infti": [108, 168], "border": [108, 168, 321, 334], "apart": [108, 168], "closer": [108, 168, 317], "1800": [108, 168, 275, 294, 322], "1300": [108, 168, 317, 322, 331], "1455": [108, 168], "centimet": [108, 168, 321], "26663446": [108, 168], "729003": [108, 168], "fsh": [108, 261], "fsh2": [108, 171, 261], "int8": [108, 173, 210, 307], "fulllik": [108, 174], "classmethod": [108, 117, 118, 174, 236, 246, 247], "general_ham": [108, 181, 182], "qquad": [108, 176, 181, 182], "leq": [108, 176, 181, 182, 313], "hann": [108, 176, 181], "get_axi": 108, "negative_axi": 108, "allows_non": 108, "only_first": 108, "lorentz": [108, 180], "gauss": [108, 180], "t0": [108, 180], "gaussian": [108, 175, 180, 318], "happ": [108, 181, 339], "genzel": [108, 181, 339], "ht": 108, "hilbert": [108, 183], "bsd3": [108, 183], "licenc": [108, 183], "ndarrat": [108, 183], "ndata": [108, 183, 310, 311], "hilvert": [108, 183], "orgin": [108, 117, 194], "modulu": [108, 200], "var": [108, 201, 284, 318], "999999": [108, 210], "joul": [108, 210], "oneslik": [108, 211], "reshap": [108, 211, 308, 340], "pipe": [108, 334], "data_keyword": [108, 213], "chain": [108, 213, 319], "exptc": [108, 214, 215, 338], "decai": [108, 214, 215, 338], "ps_exp": [108, 214], "pk_exp": 108, "deleg": [108, 216], "plotter": [108, 216, 218, 219], "plot_1d": [108, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 340], "plot_2d": [108, 209, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230], "plot_3d": [108, 216, 220, 221, 222, 224, 225, 226, 227, 228, 229], "bee": [108, 216], "plot_bar": [108, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229], "plot_scatter_pen": [108, 216, 217, 219, 220, 221, 222, 223, 224, 227, 228, 229], "plot_surfac": [108, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 319, 320, 334], "plot_waterfal": [108, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 334], "multiplot": [108, 204, 205, 206, 207, 208, 216, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 317], "_plot1d_doc": [108, 217], "method_1d": [108, 217, 321, 334], "draw": [108, 203, 217, 223, 334], "graph": [108, 114, 118, 217, 334], "stylesheet": [108, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 334], "available_styl": [108, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 334], "use_plotli": [108, 217, 218, 220, 221, 222, 224, 225, 226, 227, 334], "plotli": [108, 217, 218, 220, 221, 222, 224, 225, 226, 227, 334], "twinx": [108, 217, 218, 220, 221, 222, 224, 225, 226, 227], "twin": [108, 217, 220, 224, 225, 226], "show_complex": [108, 217, 220, 224, 225, 226, 338, 340, 344], "dpi": [108, 203, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 317, 335], "pixel": [108, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 334], "inch": [108, 203, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 334], "linewidth": [108, 116, 203, 217, 220, 224, 225, 226, 319, 320, 334], "markeredgecolor": [108, 217, 220, 224, 225, 226, 334], "markeredgewidth": [108, 217, 220, 224, 225, 226, 334], "mew": [108, 217, 220, 224, 225, 226], "markerfacecolor": [108, 217, 220, 224, 225, 226, 334], "plottitl": [108, 217, 220, 224, 225, 226], "zlabel": [108, 217, 220, 224, 225, 226], "uselabel_x": [108, 217, 220, 224, 225, 226], "show_z": [108, 217, 220, 224, 225, 226], "show_zero": [108, 217, 220, 224, 225, 226], "show_mask": [108, 217, 220, 224, 225, 226, 340], "plot_model": [108, 217, 220, 224, 225, 226], "modellinestyl": [108, 217, 220, 224, 225, 226], "modl": [108, 217, 220, 224, 225, 226], "vshift": [108, 217, 220, 224, 225, 226], "_plot2d_doc": [108, 218], "method_2d": [108, 218, 321, 334], "font": [108, 218, 219, 221, 222, 227, 228, 229, 334, 364], "autolayout": [108, 218, 219, 221, 222, 227, 228, 229, 319, 320, 334], "layout": [108, 218, 219, 221, 222, 227, 228, 229], "deduc": [108, 218, 221, 222, 227, 326], "rc": [108, 203, 218, 221, 222, 227, 334], "savefig": [108, 218, 219, 221, 222, 227, 228, 229, 334], "matplotlibrc": [108, 218, 219, 221, 222, 227, 228, 229], "mpl": [108, 218, 221, 222, 227, 334], "x_revers": [108, 218, 219, 221, 222, 227, 228, 229], "_plot3d_doc": [108, 219], "waterfal": [108, 219, 228, 229, 334, 350], "y_revers": [108, 219, 228, 229, 334], "plot1d": [108, 223], "plot_bar_pen": [108, 225], "scatter_pen": [108, 226], "filename1": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258], "filename2": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258], "enclos": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258], "box": [108, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 317, 321, 327, 334], "sortbyd": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 326], "tga": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 348, 389], "csv_delimit": [108, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300], "delimit": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 300, 301], "byte": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "particularli": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 325, 336], "dash": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 328, 334, 387], "iterdir": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "listdir": [108, 236, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "recurs": [108, 236], "subfold": [108, 236], "replace_exist": [108, 236], "download_onli": [108, 236], "read_onli": [108, 236], "read_zip": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 350], "read_dir": [108, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 325, 371], "sr": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258], "read_soc": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258], "corp": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 378], "ddr": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "hdr": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "sdr": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "read_galact": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "read_quadera": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 351, 367], "pfeiffer": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 367], "vacuum": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 367], "quadera": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 367], "read_jcamp": [108, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 325, 326], "jdx": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 326], "dso": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258], "read_carroucel": [108, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 366], "carroucel": [108, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 313], "thet": [108, 236, 246, 247], "discardbg": [108, 237], "delta_clock": [108, 237], "clock": [108, 237], "thermocoupl": [108, 237], "x_samplename_yyi": [108, 237], "x_bckg_yyybg": [108, 237], "yyi": [108, 237], "carroucell_samp": [108, 237], "agirdata": [108, 238, 258], "3247": [108, 238], "templat": [108, 238, 331, 370], "delimiteur": [108, 238], "read_ddr": 108, "return_ifg": [108, 239, 241, 249, 250], "interferogram": [108, 239, 241, 249, 250, 341, 366, 367, 372, 379], "absent": [108, 239, 241, 249, 250, 339], "backgroung": [108, 239, 241, 249, 250], "distinct": [108, 240], "uniqu": [108, 123, 240, 330, 331], "read_hdr": 108, "affn": [108, 242, 326], "read_mat": 108, "recogn": [108, 244, 245, 356], "426": [108, 244, 245], "nicolet": [108, 246, 251, 253, 254], "kubelka": [108, 246], "munk": [108, 246], "photoacoust": [108, 246], "xaxi": [108, 246, 393], "micromet": [108, 246], "inconsist": [108, 246], "read_spg": [108, 246], "read_spa": [108, 246, 253, 339, 372], "read_sr": [108, 246, 253, 348, 366, 372, 379, 389], "braket": [108, 246], "l2": [108, 111, 246], "l3": [108, 246], "7_cz0": [108, 246, 251, 326], "pd_101": [108, 246, 326], "content1": [108, 246], "read_byt": [108, 246], "content2": [108, 246], "listnd": [108, 246], "asc": [108, 248, 351], "timeshift": [108, 248], "msdata": [108, 248], "ion_curr": [108, 248], "16975": [108, 248], "read_sdr": 108, "contrain": [108, 251], "pd_21": [108, 251], "return_bg": [108, 254], "omnic_seri": [108, 254], "rapid_scan_reprocess": [108, 254], "643": [108, 254, 392], "3734": [108, 254], "indirect": [108, 255], "2843": [108, 258], "remove_mask": [108, 345], "save_a": [108, 109, 117, 333], "fie": [108, 109, 117], "is_fil": [108, 109, 110, 117], "unlink": [108, 109, 110, 117], "savez": [108, 110, 117], "new_wodg": [108, 110, 117], "succes": [108, 267], "swapdim": [108, 267, 293], "set_quaternion": [108, 267, 268, 340], "set_hypercomplex": [108, 340], "simp": [108, 275, 367], "trapz": [108, 285, 294, 322, 350, 367], "1250": [108, 275, 294, 317, 322], "descend": [108, 280, 313, 342], "cfbruker": [108, 281, 336], "phi": [108, 281, 336], "aq": [108, 281, 336], "sbb": [108, 281, 336], "ge": [108, 281, 336], "mimic": [108, 281, 314, 317, 336], "behaviour": [108, 281, 324, 331, 336, 369, 396], "ddof": [108, 284, 296], "spread": [108, 284, 296], "divisor": [108, 284, 296], "unbias": [108, 284, 296], "popul": [108, 284, 296], "likelihood": [108, 284, 296], "se": [108, 284], "nonneg": [108, 111, 284, 296, 317], "inaccur": [108, 284, 296], "accumul": [108, 284, 296], "allevi": [108, 284, 296], "807972021": [108, 284], "08521": [108, 284], "08543": [108, 284], "251": [108, 284], "2537": [108, 284], "swapax": 108, "dim1": [108, 286], "dim2": [108, 286], "interchang": [108, 286, 293], "swape": [108, 286], "to_arrai": 108, "lost": [108, 289, 395], "to_xarrai": 108, "dataarrai": [108, 292], "axrrai": [108, 292], "permut": [108, 293], "null": [108, 295, 313], "hypothet": [108, 296], "652818786": [108, 296], "007262": [108, 296], "007299": [108, 296], "06298": [108, 296], "06438": [108, 296], "wert": [108, 299, 343], "2017": [108, 299], "wittaker_smooth_licens": [108, 299], "rst": [108, 299, 383], "output_path": [108, 300], "whnever": [108, 300, 301, 303], "write_csv": [108, 367, 396], "myfil": [108, 301, 303], "single_spectrum": [108, 301], "write_excel": [108, 306], "write_jcamp": [108, 326], "ir4": [108, 303], "write_mat": 108, "write_matlab": [108, 304], "write_xl": 108, "zeorslik": [108, 308], "zf": [108, 339], "mid": [108, 309, 310, 311, 312], "zf_auto": 108, "zf_doubl": 108, "ndataset": [108, 311], "zf_size": [108, 338], "alpha_h": 111, "alpha_w": 111, "beta_loss": 111, "frobeniu": 111, "l1_ratio": 111, "shuffl": 111, "zeroto": 111, "samevalu": 111, "kullback": 111, "leibler": 111, "itakura": 111, "saito": 111, "beta": 111, "xand": 111, "wh": 111, "slower": 111, "nndsvd": 111, "nndsvda": 111, "nndsvdar": 111, "n_sampl": [111, 116], "sparsiti": 111, "penalti": 111, "elementwis": 111, "aka": 111, "norm": [111, 116, 319, 334, 396], "l1": 111, "descent": 111, "amplitude_mod": 113, "autoampl": 113, "callback_everi": 113, "max_fun_cal": 113, "least_squar": [113, 396], "callback": 113, "simplex": 113, "basinhop": 113, "fp": 113, "trait": [113, 340], "declar": 113, "klass": 113, "iterated_pow": 114, "n_oversampl": 114, "power_iteration_norm": 114, "svd_solver": 114, "anamysi": 114, "minka": 114, "arpack": 114, "proper": [114, 319, 320], "randomized_svd": 114, "qr": 114, "sigma": [114, 122, 175, 313, 318], "polici": 114, "500x500": 114, "smallest": 114, "truncat": [114, 340], "afterward": [114, 337], "lapack": 114, "postprocess": 114, "halko": 114, "components_": 114, "uncorrel": 114, "downstream": 114, "assumpt": 114, "viridi": [114, 116, 334, 335], "labels_everi": [114, 320], "span": [114, 313, 320, 323], "iterabbl": 114, "sore": 114, "bidimension": 114, "n_score": 114, "scree": [114, 320], "cti_fil": 115, "init_x": 115, "inlet_x": 115, "inlet_f": 115, "n_cstr": 115, "kin_param_to_set": 115, "cstr": 115, "cti": 115, "reactiv": 115, "fit_to_gas_concentr": 115, "exp_conc": 115, "exp_idx": 115, "fit_to_exp_idx": 115, "param_to_set": 115, "logfil": 115, "outlet": 115, "cross_decomposit": 116, "nipal": 116, "criteria": [116, 334], "u_i": 116, "u_": 116, "y_hat": 116, "typograph": 116, "72": [116, 331], "rcparam": 116, "rgba": 116, "markermarkerstyl": 116, "lowest": [116, 321], "highest": [116, 321], "symlog": 116, "logit": 116, "get_scale_nam": 116, "instanti": 116, "vmin": [116, 334], "vmax": [116, 334], "blend": 116, "transpar": [116, 317, 331, 334], "opaqu": 116, "edgecolor": [116, 203, 334], "face": [116, 345], "patch": [116, 203, 334], "boundari": [116, 334, 343], "facecolor": [116, 203, 334], "plotnonfinit": 116, "nonfinit": 116, "set_bad": 116, "x_score": [116, 323], "y_score": [116, 323], "argnam": 117, "myproj": 117, "dataset_1": 117, "add_dataset": [117, 333], "allitem": 117, "allnam": 117, "datasets_nam": 117, "scripts_nam": 117, "ds1": [117, 334], "ds2": [117, 334], "ds3": 117, "add_project": [117, 333], "add_script": 117, "remove_all_dataset": 117, "remove_all_project": 117, "remove_dataset": [117, 333], "remove_project": 117, "plainquant": [118, 124], "default_format": [118, 124], "dask": 118, "from_list": 118, "quant_list": 118, "from_sequ": 118, "unitscontain": 118, "seq": 118, "magnitudet": 118, "len_seq": 118, "seq_i": 118, "is_compatible_with": [118, 124], "ctx_kwarg": [118, 124], "plainunit": [118, 124], "_registri": [118, 124], "_active_ctx": [118, 124], "isinst": [118, 124], "ito_pref": 118, "preferred_unit": 118, "ureg": 118, "unitregistri": 118, "acr": 118, "to_pref": 118, "4046": 118, "87261": 118, "force_pound": 118, "44822162": 118, "watt": 118, "ito_root_unit": 118, "persist": 118, "_prod_dispatch": 118, "_novalu": 118, "to_compact": 118, "compact": 118, "200e": 118, "nanosecond": 118, "millinewton": 118, "hasattr": 118, "nominal_valu": 118, "intention": 118, "to_root_unit": 118, "unit_item": 118, "graphviz": 118, "purest": 121, "interactiveanalysi": 121, "puriti": 121, "commonli": [122, 297, 318], "vt": 122, "185e": 122, "634": 122, "001089": 122, "000975": 122, "ev_cum": 122, "ev_ratio": 122, "059": 122, "687e": 122, "779e": 122, "unitari": 122, "full_matric": 122, "compute_uv": 122, "explained_vari": 122, "explained_variance_ratio": [122, 320], "singular_valu": 122, "sv": 122, "unamed_script": 123, "sthe": 123, "hello": 123, "myscript": 123, "print_hello_info": 123, "from_": 124, "m_from": 124, "voigt": [137, 297, 318], "stancik": [137, 318], "braun": [137, 318], "vibrat": [137, 318], "2008": [137, 318], "66": [137, 318, 331], "nshape": [137, 175, 197, 231, 274, 297], "poslb": [137, 175, 197, 274, 297], "poshb": [137, 175, 197, 274, 297], "3548": [175, 318], "lorentzian": [197, 318], "cauchi": [197, 318], "nrow": [203, 317, 335], "ncol": [203, 317, 335], "sharex": [203, 317, 335], "sharei": [203, 335], "sharez": 203, "suptitl": [203, 334], "suptitle_color": 203, "mpl_event": 203, "with_transpos": [203, 209, 230], "col": 203, "frame": [203, 334], "frameon": 203, "wspace": 203, "fraction": [203, 321, 334], "hspace": 203, "white": [203, 334], "subtitl": 203, "linetyp": 205, "transposit": [209, 230, 326, 341], "aim": 212, "escap": [212, 325], "charact": [212, 325, 330, 333], "irdatanh4i": 212, "parabol": [231, 318], "sum_": [231, 313, 318], "c_i": [231, 318], "c_2": [231, 318], "c_3": [231, 318], "c_4": [231, 318], "c_5": 231, "c_6": 231, "c_7": 231, "c_8": 231, "c_9": 231, "c_10": 231, "3g": [231, 326], "localvar": 265, "localvr": 265, "mhz": 270, "104": [270, 333], "fhz": 270, "fppm": 270, "877": 270, "khz": 270, "133": [270, 326], "333": 270, "sy": 273, "stdout": 273, "sigmoid": 274, "gaussianmodel": [297, 318], "lorentzianmodel": [297, 318], "retain": 313, "multisampl": 313, "examin": [313, 317, 319, 320, 321, 343], "systemat": [313, 321], "submatric": 313, "predmin": 313, "disappear": 313, "subcompon": 313, "mathbf": 313, "_i": 313, "datastet": 313, "concent": 313, "latent": [313, 323], "s_x": [313, 323], "l_x": [313, 323], "e_x": [313, 323], "s_y": [313, 323], "l_y": [313, 323], "e_i": [313, 323], "maximis": [313, 323], "covari": [313, 323], "linearli": 313, "techniqu": [313, 329, 337], "extent": 313, "decompos": 313, "regroup": 313, "whan": 313, "orthonorm": 313, "_j": 313, "ij": 313, "sigma_i": 313, "neglig": [313, 319], "formal": [313, 317], "sigular": 313, "sigma_1": 313, "discourag": [314, 329], "greatli": [314, 329], "namespac": [314, 325, 329], "hope": [314, 331, 332], "contrast": 314, "categori": 316, "augment": 316, "prerequisit": [317, 321, 322, 326, 342], "theprocessor": 317, "pretermin": 317, "initalis": 317, "condid": 317, "4500": 317, "3750": 317, "4550": 317, "4230": 317, "4330": 317, "3780": 317, "2100": 317, "840": 317, "polyfit": 317, "extrema": 317, "904": 317, "651": 317, "832": 317, "627": 317, "556": 317, "spline": 317, "iecewis": 317, "ubic": 317, "ermit": 317, "nterpol": 317, "olynomi": 317, "x5": 317, "x6": 317, "x7": 317, "eignenvector": 317, "correl": 317, "vilmin": 317, "role": [317, 325, 343], "overfit": 317, "x8": 317, "impact": [317, 321, 392], "1000000000": 317, "magma_r": 317, "a1": 317, "a2": 317, "a3": 317, "clariti": [317, 319, 320], "1856": 317, "r2": 317, "ored": 317, "exceot": 317, "aa": 317, "convenin": 317, "ruberband": 317, "850": 317, "axe21": 317, "baselinecorrector": [317, 372], "wave": 317, "anymor": [317, 325, 348, 389], "528x336": [317, 319, 320], "gt": [317, 318, 319, 320, 321, 322, 323, 325, 331, 333, 334, 339], "answer": [317, 342], "simul": 317, "rand": [318, 331, 342], "d_0": 318, "gradient": 318, "lst": [318, 390], "dfit": 318, "294": 318, "491": 318, "997": 318, "d2": 318, "lstq": 318, "acceler": 318, "341": 318, "647": [318, 392], "nl": 318, "ndohcorr": 318, "3693": 318, "693": 318, "3678": 318, "3624": 318, "3541": 318, "323": 318, "unitscm": [318, 321], "68": [318, 331], "gasym": 318, "3610": 318, "3520": 318, "3560": 318, "behav": [318, 325, 331, 333], "polynomialbaselin": 318, "linex": 318, "lob": 318, "upb": 318, "linei": 318, "linez": 318, "5474": 318, "8842": 318, "3622": 318, "7494": 318, "48": [318, 331, 333, 340, 342], "6369": 318, "9059": 318, "3537": 318, "1347": 318, "5669": 318, "literatur": 319, "wordpress": 319, "singlehplc": [319, 320], "01525": [319, 320], "01285": [319, 320], "0003178": [319, 320], "0002631": [319, 320], "01969": [319, 320], "01617": [319, 320], "007001": [319, 320], "000682": [319, 320], "0144": [319, 320], "0007125": [319, 320], "004296": [319, 320], "008121": [319, 320], "01139": [319, 320], "007331": [319, 320], "001341": [319, 320], "surf": [319, 320], "c_0": 319, "lack": 319, "tc_0": 319, "s_0": 319, "st0": 319, "0x7f782e85cf10": 319, "000429": 319, "022012": 319, "000428": 319, "002804": 319, "008682": 319, "stricter": 319, "000427": 319, "003700": 319, "000845": 319, "mcr1": 319, "749519": 319, "749798": 319, "decompositionanalysi": 319, "0x7f782c1e9420": 319, "four": [319, 335, 342], "euclidean": 319, "wherebi": 319, "mcr2": 319, "mcr3": 319, "775e": 319, "740": 319, "447e": 319, "875": 319, "614": 319, "659e": 319, "213": 319, "827": 319, "176e": 319, "673e": 319, "931": 319, "587e": 319, "935": 319, "382e": 319, "939": 319, "134e": 319, "943": 319, "nonrandom": [319, 320], "mcr4": 319, "0x7f782e5c2440": 319, "columnwis": 319, "005205": 319, "003604": 319, "0001341": 319, "004421": 319, "001699": 319, "007194": 319, "012e": 319, "003973": 319, "ccount": [319, 320, 334], "mcr5": 319, "0x7f7826bacf10": 319, "factoris": 320, "s_1": 320, "l_1": 320, "0x7f485e47c040": 320, "0x7f485e432e00": 320, "delic": 320, "matter": 320, "transpositon": 320, "fopr": 320, "enough": [320, 342], "nbsphinx": [320, 330], "resitua": 320, "percet": 320, "fullscal": 320, "fist": 321, "como": [321, 326], "1900": [321, 342], "dark2": [321, 322, 345], "reg": 321, "mous": 321, "2115": 321, "563": 321, "2fp": 321, "3fp": 321, "bbox": [321, 334], "boxstyl": 321, "round4": 321, "fc": 321, "arrowprop": [321, 334], "arrowstyl": [321, 334], "connectionstyl": [321, 334], "angle3": 321, "void": 321, "2266": 321, "372": 321, "2220": 321, "446": 321, "2186": 321, "058": 321, "2157": 321, "805": 321, "083": 321, "2073": 321, "144": 321, "0f": 321, "peakslist": 321, "shoulder": 321, "2180": 321, "evol": 321, "brief": [321, 334], "surround": [321, 330], "neighbor": [321, 343], "minima": 321, "assess": 321, "passant": 321, "truli": 321, "exemplifi": 321, "nb": 321, "purpl": 321, "2075": 321, "grei": 321, "pretti": 321, "reject": 321, "199456453": 321, "0689001083": 321, "2299": 321, "2142": 321, "0689": 321, "1995": 321, "extend": [321, 326, 342], "wl": 321, "wr": 321, "2310": 321, "calc": 321, "4f": 321, "0690": 321, "2465": 321, "bai": 321, "ip": 321, "248123825": 321, "246501869": 321, "1899": 321, "571": 321, "1600437": 321, "12487289": 321, "2166": 321, "05061": 321, "2090": 321, "88615": 321, "axhlin": 321, "stress": 321, "exagger": 321, "overestim": 321, "08": 321, "090": 321, "199": [321, 365], "248": [321, 355], "106": [321, 333], "247": 321, "064": 321, "2173": 321, "417": [321, 375], "746": 321, "622": 321, "240": 321, "968": [321, 323], "081": 321, "167": 321, "132": [321, 342], "2191": 321, "975": 321, "2162": 321, "881": 321, "2140": 321, "474": 321, "135": 321, "2179": 321, "230": 321, "2152": 321, "2093": 321, "232": 321, "2072": 321, "1740": 322, "1570": 322, "xcorr": 322, "inttrapz": 322, "intsimp": 322, "trapzoid": 322, "y_std": 323, "x_load": 323, "y_load": 323, "y_test_hat": 323, "984": [323, 325], "release_d": 324, "amp": 324, "gu\u00e9rin": 324, "mail\u00e4nder": 324, "categor": 324, "diagnos": 324, "get_loglevel": 324, "deliv": 324, "debug_": 324, "oop": 324, "THAT": 324, "__init__": 324, "caught": 324, "noqa": [324, 326, 329], "f811": 324, "f401": 324, "pop": 325, "foreground": 325, "task": [325, 328], "press": [325, 330], "unread": 325, "335": 325, "1868": 325, "recognis": 325, "labspec6": 325, "eingenvector": 325, "printabl": 325, "prepend": 325, "brian": 325, "plai": [325, 343], "supposedli": 325, "imagin": 325, "life": 325, "organis": 325, "weleas": 325, "john": 325, "s_copi": 325, "certainli": [325, 329], "oserror": 325, "fortun": [325, 342], "getcwd": 325, "expandus": 325, "path1": 325, "path2": 325, "path3": 325, "cwd": 325, "scp_data": [325, 334], "fileselector": [325, 348, 389], "attributeerror": 325, "formatt": [325, 333, 334], "ipythondisplayformatt": 325, "__call__": [325, 333], "obj": [325, 333], "get_real_method": [325, 333], "print_method": [325, 333], "983": 325, "985": 325, "_ipython_display_": 325, "plaintext": 325, "vnd": 325, "json": [325, 350], "_handle_displai": 325, "vbox": 325, "ipi": 325, "jlab": 325, "fullpath": 325, "sust": 326, "mo_al2o3_bas": 326, "0008032": [326, 342], "788e": [326, 342], "0003027": [326, 342], "0003745": [326, 342], "608e": [326, 342], "0001981": [326, 342], "0003089": [326, 342], "0008357": [326, 342], "0001387": [326, 342], "0005221": [326, 342], "001121": [326, 342], "0005655": [326, 342], "000116": [326, 342], "00057": [326, 342], "0006307": [326, 342], "usernam": 326, "machinenam": 326, "pathnam": [326, 327], "al2o3": 326, "000803191214799881": 326, "787875175476074e": 326, "000302683562040329": 326, "0003744959831237793": 326, "607943654060364e": 326, "0001980997622013092": 326, "0003089122474193573": 326, "0011698119342327118": 326, "0008356980979442596": 326, "0001386702060699463": 326, "0005221068859100342": 326, "001121222972869873": 326, "0005654506385326385": 326, "00011600926518440247": 326, "0005699768662452698": 326, "000630699098110199": 326, "unitsa": 326, "jth": 326, "1970": 326, "1476798575": 326, "1476798846": 326, "1476806493": 326, "1476806797": 326, "unitss": 326, "billion": 326, "271": 326, "7918": 326, "8222": 326, "abil": 326, "ipython3": 326, "some_unit": 326, "517": [326, 342], "131": 326, "967": 326, "unitsmin": 326, "tf": 326, "139": 326, "reorder": 326, "100_pd_101": 326, "\u00e9chantillon": 326, "544": 326, "091": 326, "pd_104": 326, "list_fil": 326, "100_pd_102": 326, "100_pd_103": 326, "100_pd_104": 326, "gather": 326, "silent": 326, "qed": 326, "z2": 326, "read_fil": 326, "e402": 326, "opusfil": 326, "z3": 326, "optik": 326, "igsm": 326, "phsm": 326, "scsm": 326, "rf": 326, "igrf": 326, "scrf": 326, "acc": 326, "comparti": 326, "echantillon": 326, "1112355f": 326, "mm": 326, "bm": [326, 334], "kbr": 326, "chn": 326, "compart": 326, "dtc": 326, "mct": 326, "photovolta": 326, "1mm": 326, "8h": 326, "hpf": 326, "lpf": 326, "opf": 326, "pgn": 326, "rdx": 326, "src": [326, 330], "mir": 326, "vel": 326, "120": 326, "son": 326, "appl": [326, 334], "write_jdx": 326, "writer": [326, 334, 350], "s0": [326, 331], "mo_al2o3_0": 326, "importexport": 326, "news0": 326, "nonzero": 326, "max_relative_error": 326, "max_error": 326, "max_rel_error": 326, "38e": 326, "19e": 326, "selector": 327, "eas": 328, "jupyterlab": 328, "comfort": 328, "spyder": 328, "favorit": [328, 329], "sidebar": 328, "esc": 328, "rudiment": 328, "ensicaen": 329, "constantli": 329, "unresolv": 329, "stackoverflow": 329, "tag": [329, 330, 331], "beginn": 329, "wild": 329, "nddataset_03767e44": 329, "processs": 329, "worthwhil": 329, "subhead": 330, "__string___": 330, "_string_": 330, "dollar": 330, "grave": 330, "accent": 330, "quotat": 330, "linebreak": 330, "br": 330, "carriag": 330, "asterisk": 330, "substep": 330, "alert": 330, "yellow": 330, "danger": 330, "div": 330, "highlight": 330, "img": 330, "gif": 330, "alt": 330, "caption": 330, "hex": [330, 334], "reference_numb": 330, "9664": 330, "utf": 330, "parenthes": 330, "processing_funct": 330, "section_id": 330, "__": 330, "quickstart": 331, "d1d": [331, 334], "n1": 331, "ufunc": [331, 341, 382], "472": 331, "477": 331, "op": [331, 338], "iadd": 331, "beequal": 331, "164": 331, "9365": 331, "4008": 331, "4923": 331, "2139": 331, "3074": 331, "2605": 331, "07699": 331, "3609": 331, "4141": 331, "1073": 331, "2037": 331, "3726": 331, "1487": 331, "6037": 331, "3881": 331, "4777": 331, "2281": 331, "7669": 331, "06873": 331, "5199": 331, "7288": 331, "2233": 331, "3144": 331, "8081": 331, "3282": 331, "2258": 331, "8783": 331, "4655": 331, "4265": 331, "d3d": 331, "statement": [331, 334, 350], "3d_dataset": 331, "coordinated_universal_tim": 331, "est": 331, "tz": 331, "list_of_tz_database_time_zon": 331, "preceed": 331, "eras": 331, "lign": 331, "900": [331, 334], "ev\u00b2": 331, "873": 331, "708": 331, "ev\u2070": 331, "\u2075": 331, "truediv": [331, 336], "403e": [331, 336], "807e": 331, "21e": 331, "741e": 331, "481e": 331, "222e": 331, "undefin": [331, 334], "programmat": 331, "keyerror": 331, "ambigu": 331, "timedelta": 331, "possess": 331, "nddataset_06662e4f": 331, "coordx": 331, "600": [331, 333, 334, 345], "67": 331, "mt": [331, 334], "safer": 331, "62": 331, "63": 331, "65": 331, "signif": 331, "3250": 331, "2500": 331, "1750": 331, "325": 331, "812": 331, "250": 331, "dz": 331, "kilogram": 331, "radian": [331, 341, 345], "nddataset_06e057a5": 331, "rad": [331, 334], "nddataset_06e057c9": 331, "d3d_copi": 331, "d3dduplic": 331, "aggreg": 332, "unidimension": 332, "pathclean": [333, 336, 350], "project_0bdfe80": 333, "mynmrdata": 333, "nmr_1d": 333, "nmr_2d": 333, "1078": [333, 338], "2284": [333, 338], "2342": [333, 338], "1008": [333, 338], "1037": [333, 338], "2200": [333, 336, 338], "06203": [333, 338], "05273": [333, 338], "12411": [333, 336, 338], "964e": [333, 336, 338], "08e": 333, "04e": 333, "03j": 333, "28e": 333, "2e": 333, "234": 333, "062j": 333, "0527j": 333, "2238": 333, "1985": 333, "1662": 333, "03262": 333, "006566": 333, "0282": 333, "02949": 333, "06717": 333, "1467": 333, "04565": 333, "03068": 333, "05969": 333, "08752": 333, "05134": 333, "05994": 333, "1623": 333, "0563": 333, "02654": 333, "01094": 333, "1344": 333, "006515": 333, "08239": 333, "00516": 333, "003312": 333, "001535": 333, "02067": 333, "08058": 333, "05685": 333, "1174": 333, "05831": 333, "003414": 333, "948": 333, "541e": 333, "546e": 333, "6956": 333, "7030": 333, "proj2": 333, "406": 333, "baseformatt": 333, "405": 333, "407": 333, "baseobject": 333, "_repr_html_": 333, "890": [333, 340, 345], "convert_to_html": 333, "114": 333, "tr": 333, "td": [333, 338], "5px": 333, "0px": 333, "109": 333, "112": 333, "_html_output": 333, "_cstr": 333, "116": 333, "regex": 333, "noinspect": 333, "pypep8": 333, "596": 333, "593": 333, "594": 333, "595": 333, "_modifi": 333, "_creat": 333, "597": 333, "598": 333, "wrapper1": 333, "textwrap": 333, "textwrapp": 333, "601": 333, "initial_ind": 333, "subsequent_ind": 333, "replace_whitespac": 333, "604": 333, "_text_width": 333, "605": 333, "607": 333, "par": 333, "strip": 333, "splitlin": 333, "naiv": 333, "quaternion": [333, 340], "mandatori": 334, "1290": [334, 340, 345], "tk": [334, 360], "qt": [334, 360, 361], "grai": 334, "serif": 334, "monospac": 334, "findfont": 334, "cursiv": 334, "fall": 334, "dejavu": 334, "chanceri": 334, "textil": 334, "zapf": 334, "sand": 334, "felipa": 334, "anytim": 334, "terrain": 334, "temporarili": 334, "nh": 334, "_4": 334, "set_color": 334, "set_fontstyl": 334, "set_fonts": 334, "1200": 334, "3600": 334, "shrinkb": 334, "arc3": 334, "grayscal": 334, "ggplot": 334, "poster": 334, "v0_8": 334, "_mpl": 334, "nogrid": 334, "bmh": 334, "whitegrid": 334, "tableau": 334, "colorblind10": 334, "petroff10": 334, "pastel": 334, "dark": 334, "bright": 334, "darkgrid": 334, "palett": 334, "dark_background": 334, "solarize_light2": 334, "mute": 334, "_classic_test_patch": 334, "mydefault": 334, "fivethirtyeight": 334, "restor": 334, "makestyl": [334, 350], "nameerror": 334, "labelcolor": 334, "grid_axi": 334, "figure_figs": 334, "specialis": 334, "axes_facecolor": 334, "image_cmap": 334, "colomap": 334, "centerednorm": 334, "lognorm": 334, "me": 334, "nspec": 334, "ax1": 334, "axes_grid": 334, "antialias": 334, "dash_capstyl": 334, "butt": 334, "dash_joinstyl": 334, "dashdot_pattern": 334, "dashed_pattern": 334, "dotted_pattern": 334, "scale_dash": 334, "solid_capstyl": 334, "solid_joinstyl": 334, "lines_linewidth": 334, "agg_path_chunks": 334, "20000": 334, "disabl": 334, "agg": 334, "gappi": 334, "minor": [334, 369], "artifact": [334, 344], "axes3d_grid": 334, "axes_autolimit_mod": 334, "plu": 334, "round_numb": 334, "axes_axisbelow": 334, "gridlin": 334, "axes_edgecolor": 334, "f0f0f0": 334, "axes_formatter_limit": 334, "notat": [334, 338], "log10": 334, "axes_formatter_offset_threshold": 334, "useoffset": 334, "axes_formatter_use_local": 334, "fr_fr": 334, "axes_formatter_use_mathtext": 334, "mathtext": 334, "axes_formatter_useoffset": 334, "axes_grid_axi": 334, "axes_grid_which": 334, "axes_labelcolor": 334, "axes_labelpad": 334, "axes_labels": 334, "axes_labelweight": 334, "axes_linewidth": 334, "axes_prop_cycl": 334, "cycler": 334, "0072b2": 334, "009e73": 334, "d55e00": 334, "cc79a7": 334, "f0e442": 334, "56b4e9": 334, "007200": 334, "colorspec": 334, "axes_spines_bottom": 334, "axes_spines_left": 334, "axes_spines_right": 334, "axes_spines_top": 334, "axes_titlepad": 334, "axes_titles": 334, "axes_titleweight": 334, "axes_titlei": 334, "autoposit": 334, "axes_unicode_minu": 334, "minu": 334, "wikipedia": [334, 343], "plus_and_minus_sign": 334, "character_cod": 334, "axes_xmargin": 334, "axes_ymargin": 334, "contour_alpha": 334, "contour_corner_mask": 334, "legaci": 334, "contour_negative_linestyl": 334, "contour_start": 334, "date_autoformatter_dai": 334, "date_autoformatter_hour": 334, "date_autoformatter_microsecond": 334, "date_autoformatter_minut": 334, "date_autoformatter_month": 334, "date_autoformatter_second": 334, "date_autoformatter_year": 334, "errorbar_caps": 334, "cap": 334, "figure_autolayout": 334, "figure_dpi": 334, "figure_edgecolor": 334, "figure_facecolor": 334, "figure_frameon": 334, "figure_max_open_warn": 334, "emit": 334, "figure_subplot_bottom": 334, "figure_subplot_hspac": 334, "figure_subplot_left": 334, "figure_subplot_right": 334, "figure_subplot_top": 334, "figure_subplot_wspac": 334, "figure_titles": 334, "figure_titleweight": 334, "font_famili": 334, "fantasi": 334, "font_siz": 334, "font_styl": 334, "roman": 334, "obliqu": 334, "font_vari": 334, "font_weight": 334, "bolder": 334, "grid_alpha": 334, "grid_color": 334, "grid_linestyl": 334, "grid_linewidth": 334, "hatch_color": 334, "hatch_linewidth": 334, "hist_bin": 334, "histogram": 334, "image_aspect": 334, "image_composite_imag": 334, "image_interpol": 334, "bilinear": 334, "imshow": 334, "image_lut": 334, "256": 334, "lookup": 334, "image_origin": 334, "image_resampl": 334, "latex_preambl": 334, "usepackag": 334, "siunitx": 334, "sisetup": 334, "sansmath": 334, "helvet": 334, "latex": 334, "improp": 334, "WILL": 334, "euler": 334, "usetex": 334, "collis": 334, "geometri": 334, "graphicx": 334, "type1cm": 334, "textcomp": 334, "adob": 334, "postscript": 334, "pssnf": 334, "legend_borderaxespad": 334, "legend_borderpad": 334, "whitespac": 334, "legend_columnspac": 334, "legend_edgecolor": 334, "inherit": 334, "legend_facecolor": 334, "legend_fancybox": 334, "rectangl": 334, "legend_fonts": 334, "legend_framealpha": 334, "legend_frameon": 334, "legend_handleheight": 334, "legend_handlelength": 334, "legend_handletextpad": 334, "legend_labelspac": 334, "legend_loc": 334, "legend_markerscal": 334, "legend_numpoint": 334, "legend_scatterpoint": 334, "legend_shadow": 334, "shadow": 334, "lines_antialias": 334, "jaggi": 334, "lines_color": 334, "prop_cycl": 334, "lines_dash_capstyl": 334, "lines_dash_joinstyl": 334, "miter": 334, "bevel": 334, "lines_dashdot_pattern": 334, "lines_dashed_pattern": 334, "lines_dotted_pattern": 334, "lines_linestyl": 334, "lines_mark": 334, "lines_markeredgecolor": 334, "lines_markeredgewidth": 334, "lines_markerfacecolor": 334, "lines_markers": 334, "lines_scale_dash": 334, "lines_solid_capstyl": 334, "lines_solid_joinstyl": 334, "markers_fillstyl": 334, "mathtext_bf": 334, "dejavusan": 334, "mathtext_c": 334, "mathtext_default": 334, "mathtext_fallback_to_cm": 334, "modern": 334, "mathtext_fontset": 334, "dejavuserif": 334, "stix": 334, "stixsan": 334, "mathtext_it": 334, "mathtext_rm": 334, "mathtext_sf": 334, "mathtext_tt": 334, "max_lines_in_stack": 334, "method_3d": 334, "number_of_contour": 334, "number_of_x_label": 334, "number_of_y_label": 334, "number_of_z_label": 334, "patch_antialias": 334, "patch_edgecolor": 334, "patch_facecolor": 334, "4c72b0": 334, "patch_force_edgecolor": 334, "patch_linewidth": 334, "path_simplifi": 334, "invis": 334, "path_simplify_threshold": 334, "111111111111": 334, "simplif": 334, "path_sketch": 334, "wiggl": 334, "perpendicular": 334, "randomli": 334, "path_snap": 334, "rectilinear": 334, "snap": 334, "certain": 334, "polaraxes_grid": 334, "polar": 334, "rcount": 334, "savefig_bbox": 334, "tight": 334, "anim": 334, "ffmpeg": 334, "ffmpeg_fil": 334, "savefig_directori": 334, "savefig_dpi": 334, "savefig_edgecolor": 334, "savefig_facecolor": 334, "savefig_format": 334, "png": 334, "svg": 334, "savefig_jpeg_qu": 334, "jpeg": 334, "savefig_pad_inch": 334, "savefig_transpar": 334, "scatter_mark": 334, "show_projection_x": 334, "show_projection_i": 334, "show_project": 334, "text_antialias": 334, "text_color": 334, "text_hint": 334, "hint": 334, "freetyp": 334, "autohint": 334, "text_hinting_factor": 334, "text_usetex": 334, "centuri": 334, "schoolbook": 334, "bookman": 334, "palatino": 334, "charter": 334, "helvetica": 334, "avant": 334, "gard": 334, "courier": 334, "typewrit": 334, "inquir": 334, "mail": 334, "iana": 334, "central": [334, 343], "europ": 334, "xtick_bottom": 334, "xtick_color": 334, "xtick_direct": 334, "xtick_labels": 334, "xtick_major_bottom": 334, "xtick_major_pad": 334, "xtick_major_s": 334, "xtick_major_top": 334, "xtick_major_width": 334, "xtick_minor_bottom": 334, "xtick_minor_pad": 334, "xtick_minor_s": 334, "xtick_minor_top": 334, "xtick_minor_vis": 334, "xtick_minor_width": 334, "xtick_top": 334, "ytick_color": 334, "ytick_direct": 334, "ytick_labels": 334, "ytick_left": 334, "ytick_major_left": 334, "ytick_major_pad": 334, "ytick_major_right": 334, "ytick_major_s": 334, "ytick_major_width": 334, "ytick_minor_left": 334, "ytick_minor_pad": 334, "ytick_minor_right": 334, "ytick_minor_s": 334, "ytick_minor_vis": 334, "ytick_minor_width": 334, "ytick_right": 334, "unalign": 335, "realign": 335, "multiplot_map": 335, "operand": 335, "3549": 335, "nd2a": 335, "nd4a": 335, "ndadd": 335, "2144": 335, "4071": 335, "4070": 335, "mismatch": 335, "nd1a": 335, "5582": 335, "pth": 336, "indiffer": 336, "2283": 336, "5096153847107": 336, "383064516033j": 336, "4717": 336, "96e": 336, "135e": 336, "0003036": 336, "533e": 336, "ndlb": 336, "ndlg": 336, "25000": 336, "6500": 337, "preserv": 337, "katsumo": 337, "nd5": 337, "nd5b": 337, "nd6": 337, "nd7": 337, "nd8": 337, "nmd": 338, "induct": 338, "16384": 338, "imul": 338, "793j": 338, "813": 338, "582j": 338, "43836": 338, "8366": 338, "1093": 338, "1014": 338, "1079": 338, "229": 338, "126": 338, "187": 338, "253": 338, "32768": 338, "newfid": 338, "rephas": 338, "fid2": [338, 344], "spec2": [338, 344], "superpos": 338, "expans": 338, "fid3": 338, "65536": 338, "spec3": 338, "mp": 338, "recombin": 338, "lim": 338, "complex64": 338, "im": 338, "fi": 338, "situat": 339, "interfero": 339, "4160": 339, "zpd": 339, "64th": 339, "128": 339, "259765625": 339, "ird": 339, "irt": 339, "runtimewarn": [339, 340], "h2o": 339, "narrow": 339, "band": 339, "irdh": 339, "irth": 339, "spectr": 339, "fashion": 340, "That": 340, "414": 340, "732": 340, "449": 340, "nddataset_3b87432d": 340, "logarithm": 340, "logical_not": 340, "finit": 340, "tangent": 340, "true_divid": 340, "divis": 340, "mod": 340, "remaind": 340, "fmod": 340, "d2d": 340, "artifici": 340, "coerc": 340, "numbr": 340, "dataset2": 340, "interlac": 340, "da": 340, "nddataset_41642a56": 340, "nddataset_41642a59": 340, "dac": 340, "nddataset_41642a5a": 340, "datatyp": 340, "daq": 340, "nddataset_41642a5d": 340, "trigonometr": 341, "hyperbol": 341, "unari": 341, "10x10": 342, "relationship": 342, "ascend": 342, "3807": 342, "3805": 342, "3039": 342, "3037": 342, "mechan": 342, "180": 342, "021torr_lt_aft": 342, "215": 343, "xn": 343, "unweight": 343, "xsm": 343, "xhan": 343, "focu": 343, "moreov": 343, "xsg": 343, "xsm2": 343, "anal": 343, "mhvwert": 343, "\u03bb": 343, "strength": 343, "xwhit": 343, "distort": 343, "balanc": 343, "stronger": 343, "eq": 343, "vast": 343, "builtin": 343, "get_window": 343, "fftbin": 343, "xw": 343, "h3po4": 344, "dc_corrected_fid": 344, "cadmium": 344, "956": 344, "dc_corrected_fid2": 344, "24e": 345, "3e": 345, "undesir": 345, "sect": 345, "unmask": 345, "8080601692199707": 345, "unwant": 345, "datasett": 345, "her": 345, "784": [348, 389], "basefileselector": [348, 389], "revisit": [350, 363], "rewrit": 350, "serialis": 350, "ndmath": [350, 363], "refactor": [350, 369, 372, 384, 388, 392, 394], "plot2d": [350, 352, 387], "colorscal": 350, "py3": 350, "ndpanel": 350, "forgotten": 350, "sleep": 350, "mplstyle": 350, "set_xscal": 350, "read_bruker_nmr": 350, "isotop": 350, "239": 352, "linearcoord": [353, 392], "wrongli": [353, 393], "mutivari": 353, "255": 355, "pfr": 357, "travi": 357, "codeclim": [357, 362], "broken": 357, "newest": 357, "nnmf": [359, 390], "310": 359, "multicoordin": [359, 379, 387], "climat": 359, "test_sh": 359, "homogen": 360, "save_dialog": 361, "routin": 363, "coordrang": 363, "read_dso": 366, "dir": 367, "readquadera": 367, "hotfix": 368, "check_upd": 369, "show_vers": [370, 380], "tqdm": 371, "360": 371, "296": 371, "375": 371, "gettingstart": 372, "older": 373, "guaranti": 373, "offlin": 374, "force_stack": 375, "unimodmod": 378, "collection_length": 379, "optical_veloc": 379, "recognit": 379, "468": 379, "490": 381, "whatsnew": 383, "logger": 384, "strang": 384, "pin": 387, "introduc": 388, "rapid": 388, "transit": 388, "readeabl": 390, "internet": 390, "read_remot": 390, "used_compon": 390, "bound": 392, "intialis": 392, "664": 393, "668": 393, "663": 393, "688": 394, "687": 394, "favor": 394, "py_wdf_read": 395, "stejskal": 396, "tanner": 396, "706": 396, "qp": 396, "scikitlearn": 396, "758": 397}, "objects": {"spectrochempy": [[93, 0, 1, "", "ActionMassKinetics"], [94, 0, 1, "", "Baseline"], [95, 0, 1, "", "BaselineCorrector"], [96, 0, 1, "", "Coord"], [97, 0, 1, "", "CoordSet"], [98, 0, 1, "", "EFA"], [99, 0, 1, "", "FastICA"], [100, 0, 1, "", "FileSelector"], [101, 0, 1, "", "Filter"], [102, 3, 1, "", "II"], [103, 3, 1, "", "IR"], [104, 0, 1, "", "IRIS"], [105, 0, 1, "", "IrisKernel"], [106, 0, 1, "", "LSTSQ"], [107, 0, 1, "", "MCRALS"], [108, 0, 1, "", "NDDataset"], [111, 0, 1, "", "NMF"], [112, 0, 1, "", "NNLS"], [113, 0, 1, "", "Optimize"], [114, 0, 1, "", "PCA"], [115, 0, 1, "", "PFR"], [116, 0, 1, "", "PLSRegression"], [117, 0, 1, "", "Project"], [118, 0, 1, "", "Quantity"], [119, 3, 1, "", "RI"], [120, 3, 1, "", "RR"], [121, 0, 1, "", "SIMPLISMA"], [122, 0, 1, "", "SVD"], [123, 0, 1, "", "Script"], [124, 0, 1, "", "Unit"], [125, 4, 1, "", "abs"], [126, 4, 1, "", "absolute"], [127, 4, 1, "", "align"], [128, 4, 1, "", "all"], [129, 4, 1, "", "amax"], [130, 4, 1, "", "amin"], [131, 4, 1, "", "any"], [132, 4, 1, "", "arange"], [133, 4, 1, "", "argmax"], [134, 4, 1, "", "argmin"], [135, 4, 1, "", "around"], [136, 4, 1, "", "asls"], [137, 0, 1, "", "asymmetricvoigtmodel"], [138, 4, 1, "", "autosub"], [139, 4, 1, "", "average"], [140, 4, 1, "", "bartlett"], [141, 4, 1, "", "basc"], [142, 4, 1, "", "blackmanharris"], [143, 4, 1, "", "clip"], [144, 4, 1, "", "component"], [145, 4, 1, "", "concatenate"], [146, 4, 1, "", "conj"], [147, 4, 1, "", "conjugate"], [148, 4, 1, "", "coordmax"], [149, 4, 1, "", "coordmin"], [150, 4, 1, "", "copy"], [151, 4, 1, "", "cs"], [152, 4, 1, "", "cumsum"], [153, 4, 1, "", "dc"], [154, 4, 1, "", "debug_"], [155, 4, 1, "", "denoise"], [156, 4, 1, "", "despike"], [157, 4, 1, "", "detrend"], [158, 4, 1, "", "diag"], [159, 4, 1, "", "diagonal"], [160, 4, 1, "", "dot"], [161, 4, 1, "", "download_nist_ir"], [162, 4, 1, "", "em"], [163, 4, 1, "", "empty"], [164, 4, 1, "", "empty_like"], [165, 4, 1, "", "error_"], [166, 4, 1, "", "eye"], [167, 4, 1, "", "fft"], [168, 4, 1, "", "find_peaks"], [169, 4, 1, "", "fromfunction"], [170, 4, 1, "", "fromiter"], [171, 4, 1, "", "fsh"], [172, 4, 1, "", "fsh2"], [173, 4, 1, "", "full"], [174, 4, 1, "", "full_like"], [175, 0, 1, "", "gaussianmodel"], [176, 4, 1, "", "general_hamming"], [177, 4, 1, "", "geomspace"], [178, 4, 1, "", "get_baseline"], [179, 4, 1, "", "get_loglevel"], [180, 4, 1, "", "gm"], [181, 4, 1, "", "hamming"], [182, 4, 1, "", "hann"], [183, 4, 1, "", "ht"], [184, 4, 1, "", "identity"], [185, 4, 1, "", "ifft"], [186, 3, 1, "", "imag"], [187, 4, 1, "", "info_"], [188, 4, 1, "", "interpolate"], [189, 4, 1, "", "is_units_compatible"], [190, 4, 1, "", "ito"], [191, 4, 1, "", "ito_base_units"], [192, 4, 1, "", "ito_reduced_units"], [193, 4, 1, "", "linspace"], [194, 4, 1, "", "load"], [195, 4, 1, "", "load_iris"], [196, 4, 1, "", "logspace"], [197, 0, 1, "", "lorentzianmodel"], [198, 4, 1, "", "ls"], [199, 4, 1, "", "max"], [200, 4, 1, "", "mc"], [201, 4, 1, "", "mean"], [202, 4, 1, "", "min"], [203, 4, 1, "", "multiplot"], [204, 4, 1, "", "multiplot_image"], [205, 4, 1, "", "multiplot_lines"], [206, 4, 1, "", "multiplot_map"], [207, 4, 1, "", "multiplot_scatter"], [208, 4, 1, "", "multiplot_stack"], [209, 4, 1, "", "multiplot_with_transposed"], [210, 4, 1, "", "ones"], [211, 4, 1, "", "ones_like"], [212, 4, 1, "", "pathclean"], [213, 4, 1, "", "pipe"], [214, 4, 1, "", "pk"], [215, 4, 1, "", "pk_exp"], [216, 4, 1, "", "plot"], [217, 4, 1, "", "plot_1D"], [218, 4, 1, "", "plot_2D"], [219, 4, 1, "", "plot_3D"], [220, 4, 1, "", "plot_bar"], [221, 4, 1, "", "plot_image"], [222, 4, 1, "", "plot_map"], [223, 4, 1, "", "plot_multiple"], [224, 4, 1, "", "plot_pen"], [225, 4, 1, "", "plot_scatter"], [226, 4, 1, "", "plot_scatter_pen"], [227, 4, 1, "", "plot_stack"], [228, 4, 1, "", "plot_surface"], [229, 4, 1, "", "plot_waterfall"], [230, 4, 1, "", "plot_with_transposed"], [231, 0, 1, "", "polynomialbaseline"], [232, 4, 1, "", "ps"], [233, 4, 1, "", "ptp"], [234, 4, 1, "", "qsin"], [235, 4, 1, "", "random"], [236, 4, 1, "", "read"], [237, 4, 1, "", "read_carroucell"], [238, 4, 1, "", "read_csv"], [239, 4, 1, "", "read_ddr"], [240, 4, 1, "", "read_dir"], [241, 4, 1, "", "read_hdr"], [242, 4, 1, "", "read_jcamp"], [243, 4, 1, "", "read_labspec"], [244, 4, 1, "", "read_mat"], [245, 4, 1, "", "read_matlab"], [246, 4, 1, "", "read_omnic"], [247, 4, 1, "", "read_opus"], [248, 4, 1, "", "read_quadera"], [249, 4, 1, "", "read_sdr"], [250, 4, 1, "", "read_soc"], [251, 4, 1, "", "read_spa"], [252, 4, 1, "", "read_spc"], [253, 4, 1, "", "read_spg"], [254, 4, 1, "", "read_srs"], [255, 4, 1, "", "read_topspin"], [256, 4, 1, "", "read_wdf"], [257, 4, 1, "", "read_wire"], [258, 4, 1, "", "read_zip"], [259, 3, 1, "", "real"], [260, 4, 1, "", "remove_masks"], [261, 4, 1, "", "roll"], [262, 4, 1, "", "round"], [263, 4, 1, "", "rs"], [264, 4, 1, "", "run_all_scripts"], [265, 4, 1, "", "run_script"], [266, 4, 1, "", "savgol"], [267, 4, 1, "", "set_complex"], [268, 4, 1, "", "set_hypercomplex"], [269, 4, 1, "", "set_loglevel"], [270, 4, 1, "", "set_nmr_context"], [271, 4, 1, "", "set_quaternion"], [272, 4, 1, "", "show"], [273, 4, 1, "", "show_versions"], [274, 0, 1, "", "sigmoidmodel"], [275, 4, 1, "", "simpson"], [276, 4, 1, "", "sine"], [277, 4, 1, "", "sinm"], [278, 4, 1, "", "smooth"], [279, 4, 1, "", "snip"], [280, 4, 1, "", "sort"], [281, 4, 1, "", "sp"], [282, 4, 1, "", "squeeze"], [283, 4, 1, "", "stack"], [284, 4, 1, "", "std"], [285, 4, 1, "", "sum"], [286, 4, 1, "", "swapdims"], [287, 4, 1, "", "take"], [288, 4, 1, "", "to"], [289, 4, 1, "", "to_array"], [290, 4, 1, "", "to_base_units"], [291, 4, 1, "", "to_reduced_units"], [292, 4, 1, "", "to_xarray"], [293, 4, 1, "", "transpose"], [294, 4, 1, "", "trapezoid"], [295, 4, 1, "", "triang"], [296, 4, 1, "", "var"], [297, 0, 1, "", "voigtmodel"], [298, 4, 1, "", "warning_"], [299, 4, 1, "", "whittaker"], [300, 4, 1, "", "write"], [301, 4, 1, "", "write_csv"], [302, 4, 1, "", "write_excel"], [303, 4, 1, "", "write_jcamp"], [304, 4, 1, "", "write_mat"], [305, 4, 1, "", "write_matlab"], [306, 4, 1, "", "write_xls"], [307, 4, 1, "", "zeros"], [308, 4, 1, "", "zeros_like"], [309, 4, 1, "", "zf"], [310, 4, 1, "", "zf_auto"], [311, 4, 1, "", "zf_double"], [312, 4, 1, "", "zf_size"]], "spectrochempy.ActionMassKinetics": [[93, 1, 1, "", "A"], [93, 1, 1, "", "B"], [93, 2, 1, "", "fit_to_concentrations"], [93, 1, 1, "", "init_concentrations"], [93, 2, 1, "", "integrate"], [93, 1, 1, "", "n_reactions"], [93, 1, 1, "", "n_species"], [93, 1, 1, "", "species"]], "spectrochempy.Baseline": [[94, 1, 1, "", "X"], [94, 1, 1, "", "asymmetry"], [94, 1, 1, "", "baseline"], [94, 1, 1, "", "breakpoints"], [94, 1, 1, "", "config"], [94, 1, 1, "", "corrected"], [94, 2, 1, "", "fit"], [94, 1, 1, "", "include_limits"], [94, 1, 1, "", "lamb"], [94, 1, 1, "", "lls"], [94, 1, 1, "", "log"], [94, 1, 1, "", "max_iter"], [94, 1, 1, "", "model"], [94, 1, 1, "", "multivariate"], [94, 1, 1, "", "n_components"], [94, 1, 1, "", "name"], [94, 1, 1, "", "order"], [94, 2, 1, "", "parameters"], [94, 2, 1, "", "params"], [94, 2, 1, "", "plot"], [94, 1, 1, "", "ranges"], [94, 2, 1, "", "reset"], [94, 1, 1, "", "snip_width"], [94, 2, 1, "", "to_dict"], [94, 1, 1, "", "tol"], [94, 2, 1, "", "transform"], [94, 1, 1, "", "used_ranges"]], "spectrochempy.BaselineCorrector": [[95, 1, 1, "", "baseline"], [95, 1, 1, "", "corrected"], [95, 1, 1, "", "original"]], "spectrochempy.Coord": [[96, 2, 1, "", "amax"], [96, 2, 1, "", "amin"], [96, 2, 1, "", "arange"], [96, 2, 1, "", "around"], [96, 2, 1, "", "astype"], [96, 2, 1, "", "copy"], [96, 1, 1, "", "data"], [96, 1, 1, "", "dimensionless"], [96, 1, 1, "", "dtype"], [96, 1, 1, "", "filename"], [96, 2, 1, "", "fromfunction"], [96, 2, 1, "", "fromiter"], [96, 2, 1, "", "geomspace"], [96, 2, 1, "", "get_labels"], [96, 1, 1, "", "has_data"], [96, 1, 1, "", "has_defined_name"], [96, 1, 1, "", "has_units"], [96, 1, 1, "", "id"], [96, 1, 1, "", "is_empty"], [96, 1, 1, "", "is_float"], [96, 1, 1, "", "is_integer"], [96, 1, 1, "", "is_labeled"], [96, 2, 1, "", "is_units_compatible"], [96, 2, 1, "", "ito"], [96, 2, 1, "", "ito_base_units"], [96, 2, 1, "", "ito_reduced_units"], [96, 1, 1, "", "labels"], [96, 1, 1, "", "larmor"], [96, 1, 1, "", "laser_frequency"], [96, 1, 1, "", "limits"], [96, 1, 1, "", "linear"], [96, 2, 1, "", "linearize"], [96, 2, 1, "", "linspace"], [96, 2, 1, "", "loc2index"], [96, 2, 1, "", "logspace"], [96, 1, 1, "", "m"], [96, 1, 1, "", "magnitude"], [96, 2, 1, "", "max"], [96, 1, 1, "", "meta"], [96, 2, 1, "", "min"], [96, 1, 1, "", "name"], [96, 2, 1, "", "ptp"], [96, 1, 1, "", "reversed"], [96, 1, 1, "", "roi"], [96, 2, 1, "", "round"], [96, 2, 1, "", "round_"], [96, 2, 1, "", "set_laser_frequency"], [96, 1, 1, "", "shape"], [96, 1, 1, "", "show_datapoints"], [96, 1, 1, "", "sigdigits"], [96, 1, 1, "", "size"], [96, 1, 1, "", "spacing"], [96, 1, 1, "", "title"], [96, 2, 1, "", "to"], [96, 2, 1, "", "to_base_units"], [96, 2, 1, "", "to_reduced_units"], [96, 1, 1, "", "umasked_data"], [96, 1, 1, "", "unitless"], [96, 1, 1, "", "units"], [96, 1, 1, "", "value"], [96, 1, 1, "", "values"]], "spectrochempy.CoordSet": [[97, 1, 1, "", "available_names"], [97, 1, 1, "", "coords"], [97, 2, 1, "", "copy"], [97, 1, 1, "", "default"], [97, 1, 1, "", "has_defined_name"], [97, 1, 1, "", "id"], [97, 1, 1, "", "is_empty"], [97, 1, 1, "", "is_labeled"], [97, 1, 1, "", "is_same_dim"], [97, 2, 1, "", "keys"], [97, 1, 1, "", "labels"], [97, 1, 1, "", "names"], [97, 2, 1, "", "select"], [97, 2, 1, "", "set"], [97, 2, 1, "", "set_titles"], [97, 2, 1, "", "set_units"], [97, 1, 1, "", "size"], [97, 1, 1, "", "sizes"], [97, 1, 1, "", "titles"], [97, 2, 1, "", "to_dict"], [97, 1, 1, "", "units"], [97, 2, 1, "", "update"]], "spectrochempy.EFA": [[98, 1, 1, "", "X"], [98, 1, 1, "", "Y"], [98, 1, 1, "", "b_ev"], [98, 1, 1, "", "components"], [98, 1, 1, "", "config"], [98, 1, 1, "", "cutoff"], [98, 1, 1, "", "f_ev"], [98, 2, 1, "", "fit"], [98, 2, 1, "", "fit_transform"], [98, 2, 1, "", "get_components"], [98, 2, 1, "", "inverse_transform"], [98, 1, 1, "", "log"], [98, 1, 1, "", "n_components"], [98, 1, 1, "", "name"], [98, 2, 1, "", "parameters"], [98, 2, 1, "", "params"], [98, 2, 1, "", "plotmerit"], [98, 2, 1, "", "reconstruct"], [98, 2, 1, "", "reduce"], [98, 2, 1, "", "reset"], [98, 2, 1, "", "to_dict"], [98, 2, 1, "", "transform"]], "spectrochempy.FastICA": [[99, 1, 1, "", "A"], [99, 1, 1, "", "St"], [99, 1, 1, "", "X"], [99, 1, 1, "", "Y"], [99, 1, 1, "", "algorithm"], [99, 1, 1, "", "components"], [99, 1, 1, "", "config"], [99, 2, 1, "", "fit"], [99, 2, 1, "", "fit_transform"], [99, 1, 1, "", "fun"], [99, 1, 1, "", "fun_args"], [99, 2, 1, "", "get_components"], [99, 2, 1, "", "inverse_transform"], [99, 1, 1, "", "log"], [99, 1, 1, "", "max_iter"], [99, 1, 1, "", "mean"], [99, 1, 1, "", "mixing"], [99, 1, 1, "", "n_components"], [99, 1, 1, "", "n_iter"], [99, 1, 1, "", "name"], [99, 2, 1, "", "parameters"], [99, 2, 1, "", "params"], [99, 2, 1, "", "plotmerit"], [99, 1, 1, "", "random_state"], [99, 2, 1, "", "reconstruct"], [99, 2, 1, "", "reduce"], [99, 2, 1, "", "reset"], [99, 2, 1, "", "to_dict"], [99, 1, 1, "", "tol"], [99, 2, 1, "", "transform"], [99, 1, 1, "", "w_init"], [99, 1, 1, "", "whiten"], [99, 1, 1, "", "whiten_solver"], [99, 1, 1, "", "whitening"]], "spectrochempy.Filter": [[101, 1, 1, "", "config"], [101, 1, 1, "", "cval"], [101, 1, 1, "", "delta"], [101, 1, 1, "", "deriv"], [101, 1, 1, "", "lamb"], [101, 1, 1, "", "log"], [101, 1, 1, "", "method"], [101, 1, 1, "", "mode"], [101, 1, 1, "", "name"], [101, 1, 1, "", "order"], [101, 2, 1, "", "parameters"], [101, 2, 1, "", "params"], [101, 2, 1, "", "reset"], [101, 1, 1, "", "size"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "transform"]], "spectrochempy.IRIS": [[104, 1, 1, "", "X"], [104, 1, 1, "", "Y"], [104, 1, 1, "", "components"], [104, 1, 1, "", "config"], [104, 2, 1, "", "fit"], [104, 2, 1, "", "fit_transform"], [104, 2, 1, "", "get_components"], [104, 2, 1, "", "inverse_transform"], [104, 1, 1, "", "log"], [104, 1, 1, "", "n_components"], [104, 1, 1, "", "name"], [104, 2, 1, "", "parameters"], [104, 2, 1, "", "params"], [104, 2, 1, "", "plotdistribution"], [104, 2, 1, "", "plotlcurve"], [104, 2, 1, "", "plotmerit"], [104, 1, 1, "", "qpsolver"], [104, 2, 1, "", "reconstruct"], [104, 2, 1, "", "reduce"], [104, 1, 1, "", "reg_par"], [104, 2, 1, "", "reset"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "transform"]], "spectrochempy.LSTSQ": [[106, 1, 1, "", "X"], [106, 1, 1, "", "Y"], [106, 1, 1, "", "coef"], [106, 1, 1, "", "config"], [106, 1, 1, "", "description"], [106, 2, 1, "", "fit"], [106, 1, 1, "", "fit_intercept"], [106, 1, 1, "", "intercept"], [106, 1, 1, "", "log"], [106, 1, 1, "", "name"], [106, 2, 1, "", "parameters"], [106, 2, 1, "", "params"], [106, 1, 1, "", "positive"], [106, 2, 1, "", "predict"], [106, 2, 1, "", "reset"], [106, 2, 1, "", "score"], [106, 2, 1, "", "to_dict"]], "spectrochempy.MCRALS": [[107, 1, 1, "", "C"], [107, 1, 1, "", "C_constrained"], [107, 1, 1, "", "C_constrained_list"], [107, 1, 1, "", "C_ls_list"], [107, 1, 1, "", "S_soft"], [107, 1, 1, "", "St"], [107, 1, 1, "", "St_constrained_list"], [107, 1, 1, "", "St_ls"], [107, 1, 1, "", "St_ls_list"], [107, 1, 1, "", "St_unconstrained"], [107, 1, 1, "", "X"], [107, 1, 1, "", "Y"], [107, 1, 1, "", "argsGetConc"], [107, 1, 1, "", "argsGetSpec"], [107, 1, 1, "", "closureConc"], [107, 1, 1, "", "closureMethod"], [107, 1, 1, "", "closureTarget"], [107, 1, 1, "", "components"], [107, 1, 1, "", "config"], [107, 1, 1, "", "extraOutputGetConc"], [107, 1, 1, "", "extraOutputGetSpec"], [107, 2, 1, "", "fit"], [107, 2, 1, "", "fit_transform"], [107, 1, 1, "", "getC_to_C_idx"], [107, 1, 1, "", "getConc"], [107, 1, 1, "", "getSpec"], [107, 1, 1, "", "getSt_to_St_idx"], [107, 2, 1, "", "get_components"], [107, 1, 1, "", "hardConc"], [107, 1, 1, "", "hardSpec"], [107, 2, 1, "", "inverse_transform"], [107, 1, 1, "", "kwargsGetConc"], [107, 1, 1, "", "kwargsGetSpec"], [107, 1, 1, "", "log"], [107, 1, 1, "", "max_iter"], [107, 1, 1, "", "maxdiv"], [107, 1, 1, "", "monoDecConc"], [107, 1, 1, "", "monoDecTol"], [107, 1, 1, "", "monoIncConc"], [107, 1, 1, "", "monoIncTol"], [107, 1, 1, "", "n_components"], [107, 1, 1, "", "name"], [107, 1, 1, "", "nonnegConc"], [107, 1, 1, "", "nonnegSpec"], [107, 1, 1, "", "normSpec"], [107, 2, 1, "", "parameters"], [107, 2, 1, "", "params"], [107, 2, 1, "", "plotmerit"], [107, 2, 1, "", "reconstruct"], [107, 2, 1, "", "reduce"], [107, 2, 1, "", "reset"], [107, 1, 1, "", "solverConc"], [107, 1, 1, "", "solverSpec"], [107, 1, 1, "", "storeIterations"], [107, 2, 1, "", "to_dict"], [107, 1, 1, "", "tol"], [107, 2, 1, "", "transform"], [107, 1, 1, "", "unimodConc"], [107, 1, 1, "", "unimodConcMod"], [107, 1, 1, "", "unimodConcTol"], [107, 1, 1, "", "unimodSpec"], [107, 1, 1, "", "unimodSpecMod"], [107, 1, 1, "", "unimodSpecTol"]], "spectrochempy.NDDataset": [[108, 1, 1, "", "II"], [108, 1, 1, "", "IR"], [108, 1, 1, "", "RI"], [108, 1, 1, "", "RR"], [108, 1, 1, "", "T"], [108, 2, 1, "", "abs"], [108, 2, 1, "", "absolute"], [108, 1, 1, "", "acquisition_date"], [108, 2, 1, "", "add_coordset"], [108, 2, 1, "", "align"], [108, 2, 1, "", "all"], [108, 2, 1, "", "amax"], [108, 2, 1, "", "amin"], [108, 2, 1, "", "any"], [108, 2, 1, "", "arange"], [108, 2, 1, "", "argmax"], [108, 2, 1, "", "argmin"], [108, 2, 1, "", "around"], [108, 2, 1, "", "asfortranarray"], [108, 2, 1, "", "asls"], [108, 2, 1, "", "astype"], [108, 2, 1, "", "atleast_2d"], [108, 1, 1, "", "author"], [108, 2, 1, "", "autosub"], [108, 2, 1, "", "average"], [108, 1, 1, "", "ax"], [108, 1, 1, "", "axT"], [108, 1, 1, "", "axec"], [108, 1, 1, "", "axecT"], [108, 1, 1, "", "axex"], [108, 1, 1, "", "axey"], [108, 2, 1, "", "bartlett"], [108, 2, 1, "", "basc"], [108, 2, 1, "", "blackmanharris"], [108, 2, 1, "", "clip"], [108, 2, 1, "", "close_figure"], [108, 1, 1, "", "comment"], [108, 2, 1, "", "component"], [108, 2, 1, "", "concatenate"], [108, 2, 1, "", "conj"], [108, 2, 1, "", "conjugate"], [108, 2, 1, "", "coord"], [108, 2, 1, "", "coordmax"], [108, 2, 1, "", "coordmin"], [108, 1, 1, "", "coordnames"], [108, 1, 1, "", "coordset"], [108, 1, 1, "", "coordtitles"], [108, 1, 1, "", "coordunits"], [108, 2, 1, "", "copy"], [108, 1, 1, "", "created"], [108, 2, 1, "", "cs"], [108, 2, 1, "", "cumsum"], [108, 1, 1, "", "data"], [108, 2, 1, "", "dc"], [108, 2, 1, "", "delete_coordset"], [108, 2, 1, "", "denoise"], [108, 1, 1, "", "description"], [108, 2, 1, "", "despike"], [108, 2, 1, "", "detrend"], [108, 2, 1, "", "diag"], [108, 2, 1, "", "diagonal"], [108, 1, 1, "", "dimensionless"], [108, 1, 1, "", "dims"], [108, 1, 1, "", "directory"], [108, 1, 1, "", "divider"], [108, 2, 1, "", "dot"], [108, 2, 1, "", "download_nist_ir"], [108, 1, 1, "", "dtype"], [108, 2, 1, "", "dump"], [108, 2, 1, "", "em"], [108, 2, 1, "", "empty"], [108, 2, 1, "", "empty_like"], [108, 2, 1, "", "eye"], [108, 2, 1, "", "fft"], [108, 1, 1, "", "fig"], [108, 1, 1, "", "fignum"], [108, 1, 1, "", "filename"], [108, 1, 1, "", "filetype"], [108, 2, 1, "", "find_peaks"], [108, 2, 1, "", "fromfunction"], [108, 2, 1, "", "fromiter"], [108, 2, 1, "", "fsh"], [108, 2, 1, "", "fsh2"], [108, 2, 1, "", "full"], [108, 2, 1, "", "full_like"], [108, 2, 1, "", "general_hamming"], [108, 2, 1, "", "geomspace"], [108, 2, 1, "", "get_axis"], [108, 2, 1, "", "get_baseline"], [108, 2, 1, "", "get_labels"], [108, 2, 1, "", "gm"], [108, 2, 1, "", "hamming"], [108, 2, 1, "", "hann"], [108, 1, 1, "", "has_complex_dims"], [108, 1, 1, "", "has_data"], [108, 1, 1, "", "has_defined_name"], [108, 1, 1, "", "has_units"], [108, 1, 1, "", "history"], [108, 2, 1, "", "ht"], [108, 1, 1, "", "id"], [108, 2, 1, "", "identity"], [108, 2, 1, "", "ifft"], [108, 1, 1, "", "imag"], [108, 1, 1, "", "is_1d"], [108, 1, 1, "", "is_complex"], [108, 1, 1, "", "is_empty"], [108, 1, 1, "", "is_float"], [108, 1, 1, "", "is_integer"], [108, 1, 1, "", "is_interleaved"], [108, 1, 1, "", "is_labeled"], [108, 1, 1, "", "is_masked"], [108, 1, 1, "", "is_quaternion"], [108, 2, 1, "", "is_units_compatible"], [108, 2, 1, "", "ito"], [108, 2, 1, "", "ito_base_units"], [108, 2, 1, "", "ito_reduced_units"], [108, 1, 1, "", "labels"], [108, 1, 1, "", "limits"], [108, 2, 1, "", "linspace"], [108, 2, 1, "", "load"], [108, 2, 1, "", "load_iris"], [108, 1, 1, "", "local_timezone"], [108, 2, 1, "", "logspace"], [108, 2, 1, "", "ls"], [108, 1, 1, "", "m"], [108, 1, 1, "", "magnitude"], [108, 1, 1, "", "mask"], [108, 1, 1, "", "masked_data"], [108, 2, 1, "", "max"], [108, 2, 1, "", "mc"], [108, 2, 1, "", "mean"], [108, 1, 1, "", "meta"], [108, 2, 1, "", "min"], [108, 1, 1, "", "modeldata"], [108, 1, 1, "", "modified"], [108, 1, 1, "", "name"], [108, 1, 1, "", "ndaxes"], [108, 1, 1, "", "ndim"], [108, 2, 1, "", "ones"], [108, 2, 1, "", "ones_like"], [108, 1, 1, "", "origin"], [108, 1, 1, "", "parent"], [108, 2, 1, "", "pipe"], [108, 2, 1, "", "pk"], [108, 2, 1, "", "pk_exp"], [108, 2, 1, "", "plot"], [108, 2, 1, "", "plot_1D"], [108, 2, 1, "", "plot_2D"], [108, 2, 1, "", "plot_3D"], [108, 2, 1, "", "plot_bar"], [108, 2, 1, "", "plot_image"], [108, 2, 1, "", "plot_map"], [108, 2, 1, "", "plot_multiple"], [108, 2, 1, "", "plot_pen"], [108, 2, 1, "", "plot_scatter"], [108, 2, 1, "", "plot_scatter_pen"], [108, 2, 1, "", "plot_stack"], [108, 2, 1, "", "plot_surface"], [108, 2, 1, "", "plot_waterfall"], [108, 1, 1, "", "preferences"], [108, 2, 1, "", "ps"], [108, 2, 1, "", "ptp"], [108, 2, 1, "", "qsin"], [108, 2, 1, "", "random"], [108, 2, 1, "", "read"], [108, 2, 1, "", "read_carroucell"], [108, 2, 1, "", "read_csv"], [108, 2, 1, "", "read_ddr"], [108, 2, 1, "", "read_dir"], [108, 2, 1, "", "read_hdr"], [108, 2, 1, "", "read_jcamp"], [108, 2, 1, "", "read_labspec"], [108, 2, 1, "", "read_mat"], [108, 2, 1, "", "read_matlab"], [108, 2, 1, "", "read_omnic"], [108, 2, 1, "", "read_opus"], [108, 2, 1, "", "read_quadera"], [108, 2, 1, "", "read_sdr"], [108, 2, 1, "", "read_soc"], [108, 2, 1, "", "read_spa"], [108, 2, 1, "", "read_spc"], [108, 2, 1, "", "read_spg"], [108, 2, 1, "", "read_srs"], [108, 2, 1, "", "read_topspin"], [108, 2, 1, "", "read_wdf"], [108, 2, 1, "", "read_wire"], [108, 2, 1, "", "read_zip"], [108, 1, 1, "", "real"], [108, 2, 1, "", "remove_masks"], [108, 1, 1, "", "roi"], [108, 2, 1, "", "roll"], [108, 2, 1, "", "round"], [108, 2, 1, "", "round_"], [108, 2, 1, "", "rs"], [108, 2, 1, "", "rubberband"], [108, 2, 1, "", "save"], [108, 2, 1, "", "save_as"], [108, 2, 1, "", "savgol"], [108, 2, 1, "", "savgol_filter"], [108, 2, 1, "", "set_complex"], [108, 2, 1, "", "set_coordset"], [108, 2, 1, "", "set_coordtitles"], [108, 2, 1, "", "set_coordunits"], [108, 2, 1, "", "set_hypercomplex"], [108, 2, 1, "", "set_quaternion"], [108, 1, 1, "", "shape"], [108, 2, 1, "", "simps"], [108, 2, 1, "", "simpson"], [108, 2, 1, "", "sine"], [108, 2, 1, "", "sinm"], [108, 1, 1, "", "size"], [108, 2, 1, "", "smooth"], [108, 2, 1, "", "snip"], [108, 2, 1, "", "sort"], [108, 2, 1, "", "sp"], [108, 2, 1, "", "squeeze"], [108, 2, 1, "", "stack"], [108, 2, 1, "", "std"], [108, 1, 1, "", "suffix"], [108, 2, 1, "", "sum"], [108, 2, 1, "", "swapaxes"], [108, 2, 1, "", "swapdims"], [108, 2, 1, "", "take"], [108, 1, 1, "", "timezone"], [108, 1, 1, "", "title"], [108, 2, 1, "", "to"], [108, 2, 1, "", "to_array"], [108, 2, 1, "", "to_base_units"], [108, 2, 1, "", "to_reduced_units"], [108, 2, 1, "", "to_xarray"], [108, 2, 1, "", "transpose"], [108, 2, 1, "", "trapezoid"], [108, 2, 1, "", "trapz"], [108, 2, 1, "", "triang"], [108, 1, 1, "", "umasked_data"], [108, 1, 1, "", "unitless"], [108, 1, 1, "", "units"], [108, 1, 1, "", "value"], [108, 1, 1, "", "values"], [108, 2, 1, "", "var"], [108, 2, 1, "", "whittaker"], [108, 2, 1, "", "write"], [108, 2, 1, "", "write_csv"], [108, 2, 1, "", "write_excel"], [108, 2, 1, "", "write_jcamp"], [108, 2, 1, "", "write_mat"], [108, 2, 1, "", "write_matlab"], [108, 2, 1, "", "write_xls"], [108, 2, 1, "", "zeros"], [108, 2, 1, "", "zeros_like"], [108, 2, 1, "", "zf"], [108, 2, 1, "", "zf_auto"], [108, 2, 1, "", "zf_double"], [108, 2, 1, "", "zf_size"]], "spectrochempy.NMF": [[111, 1, 1, "", "X"], [111, 1, 1, "", "Y"], [111, 1, 1, "", "alpha_H"], [111, 1, 1, "", "alpha_W"], [111, 1, 1, "", "beta_loss"], [111, 1, 1, "", "components"], [111, 1, 1, "", "config"], [111, 2, 1, "", "fit"], [111, 2, 1, "", "fit_transform"], [111, 2, 1, "", "get_components"], [111, 1, 1, "", "init"], [111, 2, 1, "", "inverse_transform"], [111, 1, 1, "", "l1_ratio"], [111, 1, 1, "", "log"], [111, 1, 1, "", "max_iter"], [111, 1, 1, "", "n_components"], [111, 1, 1, "", "name"], [111, 2, 1, "", "parameters"], [111, 2, 1, "", "params"], [111, 2, 1, "", "plotmerit"], [111, 1, 1, "", "random_state"], [111, 2, 1, "", "reconstruct"], [111, 2, 1, "", "reduce"], [111, 2, 1, "", "reset"], [111, 1, 1, "", "shuffle"], [111, 1, 1, "", "solver"], [111, 2, 1, "", "to_dict"], [111, 1, 1, "", "tol"], [111, 2, 1, "", "transform"]], "spectrochempy.NNLS": [[112, 1, 1, "", "X"], [112, 1, 1, "", "Y"], [112, 1, 1, "", "coef"], [112, 1, 1, "", "config"], [112, 1, 1, "", "description"], [112, 2, 1, "", "fit"], [112, 1, 1, "", "fit_intercept"], [112, 1, 1, "", "intercept"], [112, 1, 1, "", "log"], [112, 1, 1, "", "name"], [112, 2, 1, "", "parameters"], [112, 2, 1, "", "params"], [112, 1, 1, "", "positive"], [112, 2, 1, "", "predict"], [112, 2, 1, "", "reset"], [112, 2, 1, "", "score"], [112, 2, 1, "", "to_dict"]], "spectrochempy.Optimize": [[113, 1, 1, "", "X"], [113, 1, 1, "", "Y"], [113, 1, 1, "", "amplitude_mode"], [113, 1, 1, "", "autoampl"], [113, 1, 1, "", "autobase"], [113, 1, 1, "", "callback_every"], [113, 1, 1, "", "components"], [113, 1, 1, "", "config"], [113, 1, 1, "", "constraints"], [113, 1, 1, "", "dry"], [113, 2, 1, "", "fit"], [113, 2, 1, "", "fit_transform"], [113, 1, 1, "", "fp"], [113, 2, 1, "", "get_components"], [113, 2, 1, "", "inverse_transform"], [113, 1, 1, "", "log"], [113, 1, 1, "", "max_fun_calls"], [113, 1, 1, "", "max_iter"], [113, 1, 1, "", "method"], [113, 1, 1, "", "modeldata"], [113, 1, 1, "", "n_components"], [113, 1, 1, "", "name"], [113, 2, 1, "", "parameters"], [113, 2, 1, "", "params"], [113, 2, 1, "", "plotmerit"], [113, 2, 1, "", "predict"], [113, 2, 1, "", "reconstruct"], [113, 2, 1, "", "reduce"], [113, 2, 1, "", "reset"], [113, 1, 1, "", "script"], [113, 2, 1, "", "to_dict"], [113, 2, 1, "", "transform"], [113, 1, 1, "", "usermodels"]], "spectrochempy.PCA": [[114, 1, 1, "", "X"], [114, 1, 1, "", "Y"], [114, 1, 1, "", "components"], [114, 1, 1, "", "config"], [114, 2, 1, "", "fit"], [114, 2, 1, "", "fit_transform"], [114, 2, 1, "", "get_components"], [114, 2, 1, "", "inverse_transform"], [114, 1, 1, "", "iterated_power"], [114, 1, 1, "", "loadings"], [114, 1, 1, "", "log"], [114, 1, 1, "", "n_components"], [114, 1, 1, "", "n_oversamples"], [114, 1, 1, "", "name"], [114, 2, 1, "", "parameters"], [114, 2, 1, "", "params"], [114, 2, 1, "", "plotmerit"], [114, 1, 1, "", "power_iteration_normalizer"], [114, 2, 1, "", "printev"], [114, 1, 1, "", "random_state"], [114, 2, 1, "", "reconstruct"], [114, 2, 1, "", "reduce"], [114, 2, 1, "", "reset"], [114, 1, 1, "", "scaled"], [114, 2, 1, "", "scoreplot"], [114, 1, 1, "", "scores"], [114, 2, 1, "", "screeplot"], [114, 1, 1, "", "standardized"], [114, 1, 1, "", "svd_solver"], [114, 2, 1, "", "to_dict"], [114, 1, 1, "", "tol"], [114, 2, 1, "", "transform"], [114, 1, 1, "", "whiten"]], "spectrochempy.PFR": [[115, 2, 1, "", "fit_to_gas_concentrations"]], "spectrochempy.PLSRegression": [[116, 1, 1, "", "X"], [116, 1, 1, "", "Y"], [116, 1, 1, "", "components"], [116, 1, 1, "", "config"], [116, 2, 1, "", "fit"], [116, 2, 1, "", "fit_transform"], [116, 2, 1, "", "get_components"], [116, 2, 1, "", "inverse_transform"], [116, 1, 1, "", "log"], [116, 1, 1, "", "max_iter"], [116, 1, 1, "", "n_components"], [116, 1, 1, "", "name"], [116, 2, 1, "", "parameters"], [116, 2, 1, "", "params"], [116, 2, 1, "", "parityplot"], [116, 2, 1, "", "plotmerit"], [116, 2, 1, "", "predict"], [116, 2, 1, "", "reconstruct"], [116, 2, 1, "", "reduce"], [116, 2, 1, "", "reset"], [116, 1, 1, "", "scale"], [116, 2, 1, "", "score"], [116, 2, 1, "", "to_dict"], [116, 1, 1, "", "tol"], [116, 2, 1, "", "transform"]], "spectrochempy.Project": [[117, 2, 1, "", "add_dataset"], [117, 2, 1, "", "add_datasets"], [117, 2, 1, "", "add_project"], [117, 2, 1, "", "add_projects"], [117, 2, 1, "", "add_script"], [117, 2, 1, "", "add_scripts"], [117, 1, 1, "", "allitems"], [117, 1, 1, "", "allnames"], [117, 2, 1, "", "copy"], [117, 1, 1, "", "datasets"], [117, 1, 1, "", "datasets_names"], [117, 2, 1, "", "dump"], [117, 1, 1, "", "filename"], [117, 1, 1, "", "filetype"], [117, 1, 1, "", "id"], [117, 2, 1, "", "load"], [117, 1, 1, "", "meta"], [117, 1, 1, "", "name"], [117, 1, 1, "", "parent"], [117, 1, 1, "", "projects"], [117, 1, 1, "", "projects_names"], [117, 2, 1, "", "remove_all_dataset"], [117, 2, 1, "", "remove_all_project"], [117, 2, 1, "", "remove_dataset"], [117, 2, 1, "", "remove_project"], [117, 2, 1, "", "save"], [117, 2, 1, "", "save_as"], [117, 1, 1, "", "scripts"], [117, 1, 1, "", "scripts_names"], [117, 1, 1, "", "suffix"]], "spectrochempy.Quantity": [[118, 2, 1, "", "check"], [118, 2, 1, "", "compute"], [118, 1, 1, "", "default_format"], [118, 1, 1, "", "dimensionality"], [118, 1, 1, "", "dimensionless"], [118, 2, 1, "", "dot"], [118, 2, 1, "", "from_list"], [118, 2, 1, "", "from_sequence"], [118, 2, 1, "", "is_compatible_with"], [118, 2, 1, "", "ito"], [118, 2, 1, "", "ito_base_units"], [118, 2, 1, "", "ito_preferred"], [118, 2, 1, "", "ito_reduced_units"], [118, 2, 1, "", "ito_root_units"], [118, 1, 1, "", "m"], [118, 2, 1, "", "m_as"], [118, 1, 1, "", "magnitude"], [118, 2, 1, "", "persist"], [118, 2, 1, "", "prod"], [118, 2, 1, "", "to"], [118, 2, 1, "", "to_base_units"], [118, 2, 1, "", "to_compact"], [118, 2, 1, "", "to_preferred"], [118, 2, 1, "", "to_reduced_units"], [118, 2, 1, "", "to_root_units"], [118, 1, 1, "", "u"], [118, 2, 1, "", "unit_items"], [118, 1, 1, "", "unitless"], [118, 1, 1, "", "units"], [118, 2, 1, "", "visualize"]], "spectrochempy.SIMPLISMA": [[121, 1, 1, "", "C"], [121, 1, 1, "", "Pt"], [121, 1, 1, "", "St"], [121, 1, 1, "", "X"], [121, 1, 1, "", "Y"], [121, 1, 1, "", "components"], [121, 1, 1, "", "config"], [121, 2, 1, "", "fit"], [121, 2, 1, "", "fit_transform"], [121, 2, 1, "", "get_components"], [121, 1, 1, "", "interactive"], [121, 2, 1, "", "inverse_transform"], [121, 1, 1, "", "log"], [121, 1, 1, "", "n_components"], [121, 1, 1, "", "name"], [121, 1, 1, "", "noise"], [121, 2, 1, "", "parameters"], [121, 2, 1, "", "params"], [121, 2, 1, "", "plotmerit"], [121, 2, 1, "", "reconstruct"], [121, 2, 1, "", "reduce"], [121, 2, 1, "", "reset"], [121, 1, 1, "", "s"], [121, 2, 1, "", "to_dict"], [121, 1, 1, "", "tol"], [121, 2, 1, "", "transform"]], "spectrochempy.SVD": [[122, 1, 1, "", "U"], [122, 1, 1, "", "VT"], [122, 1, 1, "", "X"], [122, 1, 1, "", "Y"], [122, 1, 1, "", "components"], [122, 1, 1, "", "compute_uv"], [122, 1, 1, "", "config"], [122, 1, 1, "", "cumulative_explained_variance"], [122, 1, 1, "", "ev"], [122, 1, 1, "", "ev_cum"], [122, 1, 1, "", "ev_ratio"], [122, 1, 1, "", "explained_variance"], [122, 1, 1, "", "explained_variance_ratio"], [122, 2, 1, "", "fit"], [122, 2, 1, "", "fit_transform"], [122, 1, 1, "", "full_matrices"], [122, 2, 1, "", "get_components"], [122, 2, 1, "", "inverse_transform"], [122, 1, 1, "", "log"], [122, 1, 1, "", "n_components"], [122, 1, 1, "", "name"], [122, 2, 1, "", "parameters"], [122, 2, 1, "", "params"], [122, 2, 1, "", "plotmerit"], [122, 2, 1, "", "reconstruct"], [122, 2, 1, "", "reduce"], [122, 2, 1, "", "reset"], [122, 1, 1, "", "s"], [122, 1, 1, "", "singular_values"], [122, 1, 1, "", "sv"], [122, 2, 1, "", "to_dict"], [122, 2, 1, "", "transform"]], "spectrochempy.Unit": [[124, 1, 1, "", "default_format"], [124, 1, 1, "", "dimensionality"], [124, 1, 1, "", "dimensionless"], [124, 2, 1, "", "from_"], [124, 2, 1, "", "is_compatible_with"], [124, 2, 1, "", "m_from"]], "spectrochempy.asymmetricvoigtmodel": [[137, 1, 1, "", "args"], [137, 1, 1, "", "script"], [137, 1, 1, "", "type"]], "spectrochempy.gaussianmodel": [[175, 1, 1, "", "args"], [175, 1, 1, "", "script"], [175, 1, 1, "", "type"]], "spectrochempy.lorentzianmodel": [[197, 1, 1, "", "args"], [197, 1, 1, "", "script"], [197, 1, 1, "", "type"]], "spectrochempy.polynomialbaseline": [[231, 1, 1, "", "args"], [231, 1, 1, "", "script"], [231, 1, 1, "", "type"]], "spectrochempy.sigmoidmodel": [[274, 1, 1, "", "args"], [274, 1, 1, "", "script"], [274, 1, 1, "", "type"]], "spectrochempy.voigtmodel": [[297, 1, 1, "", "args"], [297, 1, 1, "", "script"], [297, 1, 1, "", "type"]]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:data", "4": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"]}, "titleterms": {"cite": [0, 315], "spectrochempi": [0, 2, 4, 6, 9, 10, 81, 83, 84, 86, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 329], "acknowledg": 1, "third": 1, "parti": 1, "licenc": 1, "licens": 2, "other": [2, 317, 336], "see": [3, 9], "also": [3, 9, 340], "code": [4, 5, 6, 7, 8, 92, 317, 321], "style": [4, 334], "guid": [4, 9, 13, 81, 85, 87, 90, 329], "tabl": [4, 5, 6, 7, 92, 314], "content": [4, 5, 6, 7, 92, 314], "test": [4, 5, 7, 18, 82], "fail": 4, "do": [4, 329], "us": [4, 7, 33, 39, 53, 59, 85, 87, 145, 155, 156, 157, 160, 162, 165, 167, 187, 195, 214, 216, 223, 227, 234, 236, 243, 245, 246, 247, 255, 256, 257, 265, 269, 272, 277, 279, 281, 314, 317, 318, 319, 325, 328, 331, 334, 336, 343], "pytest": [4, 7], "xfail": 4, "mark": 4, "ad": [5, 12, 331, 334], "reader": 5, "1": [5, 9, 18, 331, 347, 349, 370, 373, 383, 388], "add": [5, 340], "sampl": 5, "file": [5, 45, 46, 47, 49, 50, 83, 92, 314, 325, 326], "2": [5, 9, 18, 331, 347, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 375, 384, 390], "complet": 5, "filetyp": 5, "alia": [5, 340], "3": [5, 9, 18, 347, 369, 370, 371, 372, 376, 385, 391], "creat": [5, 6, 11, 19, 21, 23, 42, 86, 314, 328, 331, 334], "reader_xxx": 5, "py": 5, "gener": [5, 6, 9, 18, 92, 324], "guidelin": 5, "data": [5, 18, 40, 48, 75, 82, 83, 90, 314, 317, 325, 326, 334, 336, 340, 345], "metadata": 5, "format": [5, 6, 326], "4": [5, 9, 18, 347, 363, 373, 374, 375, 376, 377, 378, 379, 380, 381, 386, 392], "polish": 5, "your": [5, 6, 9, 12, 334], "make": [5, 6], "pull": [5, 6], "request": [5, 6], "contribut": [6, 7, 8, 10, 90], "principl": 6, "Be": 6, "prepar": [6, 19, 23, 334], "work": [6, 317, 340], "version": [6, 86, 347], "control": [6, 15], "git": [6, 86], "github": 6, "instal": [6, 11, 15, 81, 82, 83, 84, 85, 86, 87], "option": [6, 7, 82, 321], "gui": 6, "client": 6, "fork": 6, "repositori": [6, 86], "python": [6, 7, 89], "develop": [6, 7, 13, 86], "environ": [6, 11, 86], "branch": [6, 10], "chang": [6, 7, 314, 334, 345, 346, 348, 373, 382, 388, 389, 390, 392, 396], "commit": [6, 7], "push": 6, "review": 6, "pr": 6, "updat": [6, 10, 86, 346], "automat": [6, 20], "fix": [6, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397], "error": [6, 324], "delet": 6, "merg": 6, "tip": [6, 9], "success": 6, "standard": [7, 9], "pre": 7, "depend": [7, 82, 346], "pep8": 7, "black": 7, "backward": 7, "compat": 7, "continu": 7, "integr": [7, 314, 322], "driven": 7, "write": [7, 9, 300, 329], "run": [7, 320, 323], "suit": 7, "document": [7, 10], "log": [7, 314, 340], "specif": 8, "part": 8, "docstr": [9, 10], "about": [9, 10, 319, 329, 331], "rule": 9, "section": 9, "short": 9, "summari": [9, 331], "extend": 9, "paramet": [9, 318, 319, 334], "type": [9, 314, 334], "return": [9, 340], "yield": 9, "5": [9, 347, 364, 378, 382, 383, 384, 385, 386, 387, 393], "6": [9, 347, 348, 365, 379, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "note": [9, 330, 347], "7": [9, 366, 380, 395], "exampl": [9, 12, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 40, 41, 42, 80, 82, 145, 155, 156, 157, 160, 162, 165, 167, 187, 195, 214, 216, 223, 227, 234, 236, 243, 245, 246, 247, 255, 256, 257, 265, 269, 272, 277, 279, 281, 317, 335], "convent": 9, "get": [9, 19, 90, 92, 319, 329, 333], "pass": 9, "doctest": 9, "plot": [9, 19, 21, 23, 40, 52, 53, 54, 59, 88, 92, 216, 314, 321, 334, 336], "how": [10, 39, 59, 92, 317, 329], "build": [10, 11], "requir": [10, 340], "master": [10, 86], "docker": [11, 84], "imag": [11, 186], "local": [11, 45, 86], "execut": [11, 84, 329], "contain": [11, 84], "galleri": [12, 80], "": [13, 80, 90, 92, 329, 333, 340, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "report": 14, "issu": 14, "editor": 15, "visual": 15, "studio": 15, "configur": [15, 319, 324, 334], "sourc": [15, 19, 86, 89, 314], "start": [15, 90, 328, 329], "edit": 15, "decomposit": [16, 28, 38, 314], "efa": [17, 18, 98, 319], "keller": 18, "massart": 18, "origin": [18, 336], "dataset": [18, 19, 20, 21, 23, 24, 32, 40, 41, 42, 45, 52, 53, 59, 71, 72, 74, 77, 88, 314, 319, 320, 321, 323, 331, 334, 335, 340], "simul": 18, "chromatogram": 18, "absorpt": 18, "spectra": [18, 73, 74, 75, 78, 326, 337, 338], "matrix": [18, 314], "evolv": [18, 314], "factor": [18, 23, 314], "analysi": [18, 20, 23, 25, 38, 73, 88, 314, 316, 320], "fastica": [19, 99], "load": [19, 21, 22, 46, 47, 48, 49, 83, 194, 314, 320, 321, 323, 329, 333, 334], "fit": [19, 21, 23, 32, 74, 75, 314, 318], "object": [19, 21, 23, 88, 314, 331, 332, 340], "mix": 19, "system": 19, "spectral": [19, 319], "profil": [19, 319], "reconstruct": 19, "2d": [20, 65, 74, 75, 78, 337], "iri": [20, 24, 88, 104], "upload": [20, 41], "set": [20, 41, 331], "new": [20, 41, 328, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "coordin": [20, 40, 41, 92, 314, 331, 342], "without": 20, "regular": 20, "With": 20, "manual": [20, 321], "search": [20, 325], "mcr": [21, 22, 319], "al": [21, 22, 319], "adapt": 21, "from": [21, 45, 66, 86, 92, 314, 331, 333, 337], "jaumot": 21, "et": 21, "2005": 21, "model": [21, 23, 75, 90, 314, 317, 318], "result": [21, 23], "kinet": [22, 314], "constraint": [22, 318], "nddataset": [22, 36, 38, 39, 40, 41, 59, 71, 88, 108, 109, 110, 314, 317, 318, 331, 332, 334, 340, 342, 343], "nmf": [23, 111], "pca": [24, 25, 114, 319, 320], "simplisma": [26, 121], "comput": [27, 30, 34, 37, 43, 51, 55, 58, 63, 67, 70, 76, 79], "time": [27, 30, 34, 37, 43, 51, 55, 58, 63, 67, 70, 76, 79, 314, 331, 338, 344], "cross": [28, 38], "pl": 29, "regress": [29, 314, 323], "curvefit": [31, 38], "1d": [32, 48, 78, 331, 334, 338], "solv": [33, 318], "linear": [33, 314, 317, 318], "equat": [33, 318], "lstsq": [33, 106, 318], "baselin": [35, 36, 38, 74, 78, 88, 94, 314, 317, 318, 338, 344], "correct": [36, 74, 78, 88, 314, 317, 318, 338, 344], "creation": [40, 57, 314, 333], "nd": [40, 331], "unit": [42, 124, 314, 331, 340, 345], "manipul": [42, 314], "quantiti": [42, 118], "convert": 42, "between": [42, 331], "import": [44, 45, 59, 73, 74, 75, 78, 314, 325, 326, 327, 331], "export": [44, 59, 314, 326, 327], "read": [45, 50, 236], "remot": 45, "an": [46, 89, 321, 333], "ir": [46, 103, 326], "omnic": [46, 326, 339], "spg": [46, 326], "experiment": [46, 48, 49, 321], "bruker": [47, 326], "opu": [47, 326], "nmr": [48, 71, 72, 73, 74, 75, 338, 344], "raman": [49, 65, 66, 69, 71, 77, 78, 337], "renishaw": 50, "wire": 50, "plot_multipl": [53, 223], "sever": [53, 317, 331, 334, 335], "same": [53, 334], "figur": [53, 334], "introduct": [54, 319, 320, 323, 329, 336], "librairi": 54, "project": [56, 57, 59, 117, 314, 332, 333], "manag": [56, 59, 314, 333], "core": [59, 332], "function": [59, 314, 331, 336, 340], "apod": [60, 71, 314, 336], "exponenti": [61, 336], "window": [61, 62, 84, 87, 334, 336, 343], "multipl": [61, 62, 336], "sine": [62, 276, 336], "bell": 62, "squar": [62, 78, 314, 318, 323, 340], "denois": [64, 65, 71, 78, 155, 314, 337, 343], "spectrum": [65, 66, 69, 338], "remov": [66, 333, 337], "cosmic": [66, 337], "rai": [66, 337], "spike": [66, 337], "filter": [68, 71, 101, 314, 337, 343], "savitki": 69, "golai": [69, 343], "whittak": [69, 299, 343], "eiler": [69, 343], "smooth": [69, 78, 88, 278, 314, 343], "process": [71, 72, 74, 75, 77, 78, 88, 90, 314, 339, 341], "cp": 73, "api": [73, 74, 75, 314, 317, 324, 329, 334, 343], "slice": [74, 88, 342], "peak": [74, 314, 318, 321, 322], "pick": 74, "analys": [74, 75], "nmd": 74, "relax": 75, "measur": 75, "pseudo": 75, "detrend": [78, 157, 317], "asymmetr": 78, "least": [78, 314, 318, 323], "seri": 78, "prerequisit": 81, "cantera": 82, "qt": 82, "googl": 83, "colaboratori": 83, "colab": 83, "pip": [83, 85, 87], "addit": 84, "step": 84, "mac": 85, "osx": 85, "conda": [85, 86, 87], "check": [85, 87], "clone": 86, "thi": [86, 329], "overview": [88, 317, 334], "main": [88, 334], "displai": [88, 321], "inform": [88, 319, 324], "math": 88, "why": 89, "design": 89, "open": 89, "scienc": 89, "softwar": 89, "platform": 89, "power": [89, 338], "NOT": 89, "analyz": 90, "spectroscop": [90, 314], "user": [90, 329], "tutori": 90, "refer": [90, 314], "credit": 90, "bibliographi": 91, "frequent": 92, "ask": 92, "question": [92, 329], "faq": 92, "where": [92, 329], "ar": 92, "prefer": [92, 334], "save": [92, 109, 333], "usag": [92, 340], "index": [92, 314, 342], "specifi": 92, "abscissa": 92, "ascend": 92, "descend": 92, "order": [92, 326], "actionmasskinet": 93, "baselinecorrector": 95, "coord": 96, "coordset": 97, "fileselector": 100, "ii": 102, "iriskernel": 105, "mcral": [107, 319], "save_a": 110, "nnl": [112, 318], "optim": [113, 314, 319], "pfr": 115, "plsregress": [116, 323], "ri": 119, "rr": 120, "svd": 122, "script": [123, 314, 318, 329, 332], "ab": [125, 340], "absolut": [126, 340], "align": [127, 314, 335], "all": 128, "amax": 129, "amin": 130, "ani": 131, "arang": 132, "argmax": 133, "argmin": 134, "around": 135, "asl": 136, "asymmetricvoigtmodel": 137, "autosub": 138, "averag": [139, 343], "bartlett": 140, "basc": [141, 317], "blackmanharri": 142, "clip": [143, 314], "compon": [144, 314, 320], "concaten": 145, "conj": 146, "conjug": 147, "coordmax": 148, "coordmin": 149, "copi": [150, 331], "c": 151, "cumsum": 152, "dc": 153, "debug_": 154, "despik": [156, 337], "diag": 158, "diagon": 159, "dot": 160, "download_nist_ir": 161, "em": 162, "empti": 163, "empty_lik": 164, "error_": 165, "ey": 166, "fft": [167, 338], "find_peak": [168, 321], "fromfunct": 169, "fromit": 170, "fsh": 171, "fsh2": 172, "full": 173, "full_lik": 174, "gaussianmodel": 175, "general_ham": 176, "geomspac": 177, "get_baselin": 178, "get_loglevel": 179, "gm": 180, "ham": 181, "hann": 182, "ht": 183, "ident": 184, "ifft": 185, "info_": 187, "interpol": [188, 314], "is_units_compat": 189, "ito": 190, "ito_base_unit": 191, "ito_reduced_unit": 192, "linspac": 193, "load_iri": 195, "logspac": 196, "lorentzianmodel": 197, "l": 198, "max": 199, "mc": 200, "mean": 201, "min": 202, "multiplot": 203, "multiplot_imag": 204, "multiplot_lin": 205, "multiplot_map": 206, "multiplot_scatt": 207, "multiplot_stack": 208, "multiplot_with_transpos": 209, "ones": 210, "ones_lik": 211, "pathclean": 212, "pipe": 213, "pk": 214, "pk_exp": 215, "plot_1d": 217, "plot_2d": 218, "plot_3d": 219, "plot_bar": 220, "plot_imag": 221, "plot_map": 222, "plot_pen": 224, "plot_scatt": 225, "plot_scatter_pen": 226, "plot_stack": 227, "plot_surfac": 228, "plot_waterfal": 229, "plot_with_transpos": 230, "polynomialbaselin": 231, "p": 232, "ptp": 233, "qsin": 234, "random": 235, "read_carroucel": 237, "read_csv": 238, "read_ddr": 239, "read_dir": 240, "read_hdr": 241, "read_jcamp": 242, "read_labspec": 243, "read_mat": 244, "read_matlab": 245, "read_omn": 246, "read_opu": 247, "read_quadera": 248, "read_sdr": 249, "read_soc": 250, "read_spa": 251, "read_spc": 252, "read_spg": 253, "read_sr": 254, "read_topspin": 255, "read_wdf": 256, "read_wir": 257, "read_zip": 258, "real": [259, 336, 338], "remove_mask": 260, "roll": [261, 314], "round": [262, 314], "r": 263, "run_all_script": 264, "run_script": 265, "savgol": [266, 343], "set_complex": 267, "set_hypercomplex": 268, "set_loglevel": 269, "set_nmr_context": 270, "set_quaternion": 271, "show": 272, "show_vers": 273, "sigmoidmodel": 274, "simpson": 275, "sinm": 277, "snip": 279, "sort": [280, 314], "sp": 281, "squeez": 282, "stack": 283, "std": 284, "sum": [285, 314], "swapdim": 286, "take": 287, "to_arrai": 289, "to_base_unit": 290, "to_reduced_unit": 291, "to_xarrai": 292, "transpos": [293, 314], "trapezoid": 294, "triang": 295, "var": 296, "voigtmodel": 297, "warning_": 298, "write_csv": 301, "write_excel": 302, "write_jcamp": 303, "write_mat": 304, "write_matlab": 305, "write_xl": 306, "zero": [307, 314, 338], "zeros_lik": 308, "zf": 309, "zf_auto": 310, "zf_doubl": 311, "zf_size": 312, "glossari": 313, "public": 314, "The": [314, 317, 319, 326, 331, 343], "relat": 314, "basic": [314, 319, 345], "method": [314, 317, 318, 321, 331, 335, 337, 343], "exist": [314, 331], "numer": 314, "rang": 314, "select": [314, 334], "ndataset": 314, "extern": [314, 330, 331], "like": [314, 331], "oper": [314, 340], "number": [314, 319, 330, 340], "dimens": [314, 331, 335], "join": 314, "split": 314, "minimum": 314, "maximum": 314, "algebra": 314, "logic": 314, "integ": 314, "differ": [314, 319], "complex": [314, 340], "mask": [314, 345], "mathemat": [314, 330, 340], "statist": 314, "fourier": [314, 338], "transform": [314, 338, 345], "phase": 314, "domain": [314, 338, 344], "offset": 314, "fill": [314, 338], "miscellan": 314, "non": [314, 318], "curv": 314, "partial": [314, 323], "invers": 314, "solver": 314, "multivari": [314, 317], "resolut": 314, "altern": 314, "independ": [314, 317], "neg": [314, 318, 340], "singular": 314, "valu": 314, "princip": [314, 320], "simpl": 314, "interact": 314, "self": 314, "mixtur": 314, "util": 314, "lineshap": 314, "find": [314, 318, 321], "misc": 314, "paper": 315, "2024": 315, "2023": [315, 374, 381, 382], "2022": [315, 359, 360, 361, 362, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380], "2021": [315, 351, 352, 353, 354, 355, 356, 357, 358, 368], "processor": [317, 343], "polynomi": 317, "approach": 317, "constant": 317, "trend": 317, "segment": 317, "rubberband": 317, "snippet": [317, 321], "advanc": 317, "widget": [317, 325], "optimis": 318, "syntax": [318, 331], "definit": 318, "minim": 319, "initi": 319, "guess": 319, "case": 319, "more": [319, 321, 331], "estim": 319, "To": 319, "help": 319, "solut": 319, "A": [319, 321, 325], "illustr": 319, "rotat": 319, "ambigu": 319, "concentr": 319, "assess": 319, "pure": 319, "speci": 319, "determin": 319, "augment": 319, "maxima": 321, "inspect": 321, "autom": 321, "default": [321, 325, 334], "behaviour": 321, "properti": 321, "promin": 321, "width": 321, "loglevel": 324, "handl": 324, "dialog": 325, "box": [325, 330], "explicit": 325, "directori": 325, "pathnam": 325, "good": 325, "practic": 325, "rel": 325, "path": 325, "o": 325, "pathlib": 325, "modul": 325, "anoth": 325, "datadir": 325, "selector": 325, "support": 326, "acquisit": 326, "date": [326, 331], "y": 326, "axi": 326, "b": 326, "spa": 326, "jcamp": 326, "dx": 326, "jupyt": 328, "lab": 328, "notebook": 328, "markdown": [328, 330], "cheat": [328, 330], "sheet": [328, 330, 334], "applic": 328, "web": 328, "browser": 328, "what": [329, 342, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "aris": 329, "go": 329, "next": 329, "head": 330, "emphasi": 330, "symbol": 330, "monospac": 330, "font": 330, "line": [330, 338], "break": [330, 346, 348, 373, 382, 388, 389, 390, 392, 396], "indent": 330, "bullet": 330, "list": [330, 340], "color": 330, "graphic": 330, "geometr": 330, "shape": 330, "horizont": 330, "intern": 330, "link": 330, "unidimension": 331, "multidimension": 331, "histori": 331, "attribut": 331, "label": 331, "insight": 331, "share": 331, "set_coordset": 331, "singl": 331, "numpi": [331, 340], "constructor": 331, "todo": 332, "element": 333, "output": 334, "aspect": 334, "titl": 334, "annot": 334, "matplotlib": 334, "own": 334, "inner": 335, "first": 335, "last": 335, "along": 335, "imaginari": 336, "shift": 336, "gaussian": 336, "lorentzian": 336, "median": 337, "One": 338, "dimension": 338, "preprocess": 338, "broaden": 338, "magnitud": [338, 340], "calcul": 338, "ftir": 339, "interferogram": 339, "comparison": 339, "ufunc": 340, "univers": 340, "affect": 340, "keep": 340, "dimensionless": 340, "input": 340, "arrai": 340, "onli": 340, "trigonometr": 340, "unitless": 340, "radian": 340, "hyperbol": 340, "convers": 340, "binari": 340, "unari": 340, "fab": 340, "float": 340, "rint": 340, "floor": 340, "ceil": 340, "trunc": 340, "sqrt": 340, "cbrt": 340, "reciproc": 340, "exp": 340, "exp2": 340, "expm1": 340, "log2": 340, "log10": 340, "log1p": 340, "sign": 340, "isfinit": 340, "isinf": 340, "isnan": 340, "signbit": 340, "sin": 340, "co": 340, "tan": 340, "arcsin": 340, "arcco": 340, "arctan": 340, "angl": 340, "rad2deg": 340, "deg2rad": 340, "sinh": 340, "cosh": 340, "tanh": 340, "arcsinh": 340, "arccosh": 340, "arctanh": 340, "arithmet": 340, "subtract": 340, "multipli": 340, "divid": 340, "floor_divid": 340, "hypercomplex": 340, "i": 342, "move": 343, "convolut": 343, "savitzki": 343, "size": 343, "influenc": 343, "transposit": 345, "revis": [346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "featur": [346, 348, 350, 351, 355, 356, 357, 358, 359, 360, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 387, 389, 390, 391, 392, 394, 395, 396], "bug": [346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389, 390, 392, 393, 394, 395, 396, 397], "deprec": [346, 348, 375, 379, 388, 389, 390, 392, 394], "releas": 347, "0": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397], "10": [348, 351, 361, 374, 389], "19": 349, "02": [351, 352, 353, 354, 355], "14": [351, 355, 373], "11": [352, 357, 358, 368, 382], "17": [352, 358], "12": 353, "23": [353, 354, 362], "13": 354, "25": 355, "15": 356, "03": [356, 372, 373, 375, 376, 377], "29": [356, 358, 368], "16": [357, 362, 375, 379, 380], "18": 359, "01": [359, 360, 361, 362, 369, 370, 371, 374, 381, 382], "05": [359, 379, 380, 381], "21": [360, 370], "09": [360, 378], "22": [361, 377], "8": [367, 396], "9": [368, 372, 381, 397], "20": [369, 376], "31": 371, "07": 374, "04": 378}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9, "nbsphinx": 4, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Citing  SpectroChemPy": [[0, "citing-spectrochempy"]], "Acknowledgments": [[1, "acknowledgments"]], "Third-party Licences": [[1, "third-party-licences"]], "SpectroChempy License": [[2, "spectrochempy-license"]], "Other Licenses": [[2, "other-licenses"]], "See also": [[3, "see-also"]], "SpectroChemPy code style guide": [[4, "spectrochempy-code-style-guide"]], "Table of contents:": [[4, "table-of-contents"], [6, "table-of-contents"]], "Testing": [[4, "testing"]], "Failing tests": [[4, "failing-tests"]], "Do not use pytest.xfail": [[4, "do-not-use-pytest-xfail"]], "Using pytest.mark.xfail": [[4, "using-pytest-mark-xfail"]], "Adding a Reader": [[5, "adding-a-reader"]], "Table of Contents:": [[5, "table-of-contents"], [7, "table-of-contents"]], "1. Add a test and sample files": [[5, "add-a-test-and-sample-files"]], "2. Complete FILETYPES and ALIAS": [[5, "complete-filetypes-and-alias"]], "3. Create the reader_xxx.py file": [[5, "create-the-reader-xxx-py-file"]], "3. General Guidelines for data and metadata format": [[5, "general-guidelines-for-data-and-metadata-format"]], "4. Polish your code and make the Pull Requests": [[5, "polish-your-code-and-make-the-pull-requests"]], "Contributing to SpectroChemPy": [[6, "contributing-to-spectrochempy"]], "General Principles": [[6, "general-principles"]], "Be prepared to work on the code": [[6, "be-prepared-to-work-on-the-code"]], "Version control, Git, and GitHub": [[6, "version-control-git-and-github"]], "Installing git": [[6, "installing-git"], [86, "installing-git"]], "Optional: installing a GUI git client": [[6, "optional-installing-a-gui-git-client"]], "Forking the spectrochempy repository": [[6, "forking-the-spectrochempy-repository"]], "Creating a Python development environment": [[6, "creating-a-python-development-environment"]], "Controlling the environments": [[6, "controlling-the-environments"]], "Creating a branch": [[6, "creating-a-branch"]], "Contributing your changes to SpectroChemPy": [[6, "contributing-your-changes-to-spectrochempy"]], "Commit your code": [[6, "commit-your-code"]], "Push your changes": [[6, "push-your-changes"]], "Review Your Code": [[6, "review-your-code"]], "Make the pull request (PR)": [[6, "make-the-pull-request-pr"]], "Update your pull request": [[6, "update-your-pull-request"]], "Automatically fix formatting errors": [[6, "automatically-fix-formatting-errors"]], "Delete your merged branch (optional)": [[6, "delete-your-merged-branch-optional"]], "Tips for a successful pull request": [[6, "tips-for-a-successful-pull-request"]], "Contributing to the code": [[7, "contributing-to-the-code"]], "Code standards": [[7, "code-standards"]], "Pre-commit": [[7, "pre-commit"]], "Optional dependencies": [[7, "optional-dependencies"]], "Python (PEP8 / black)": [[7, "python-pep8-black"]], "Backwards compatibility": [[7, "backwards-compatibility"]], "Testing with continuous integration": [[7, "testing-with-continuous-integration"]], "Test-driven development/code writing": [[7, "test-driven-development-code-writing"]], "Writing tests": [[7, "writing-tests"]], "Using pytest": [[7, "using-pytest"]], "Running the test suite": [[7, "running-the-test-suite"]], "Documenting change log": [[7, "documenting-change-log"]], "Contributing to specific parts of the code": [[8, "contributing-to-specific-parts-of-the-code"]], "SpectroChemPy Docstring Guide": [[9, "spectrochempy-docstring-guide"]], "About docstrings and standards": [[9, "about-docstrings-and-standards"]], "Writing a docstring": [[9, "writing-a-docstring"]], "General rules": [[9, "general-rules"]], "Section 1: short summary": [[9, "section-1-short-summary"]], "Section 2: extended summary": [[9, "section-2-extended-summary"]], "Section 3: parameters": [[9, "section-3-parameters"]], "Parameter types": [[9, "parameter-types"]], "Section 4: returns or yields": [[9, "section-4-returns-or-yields"]], "Section 5: see also": [[9, "section-5-see-also"]], "Section 6: notes": [[9, "section-6-notes"]], "Section 7: examples": [[9, "section-7-examples"]], "Conventions for the examples": [[9, "conventions-for-the-examples"]], "Tips for getting your examples pass the doctests": [[9, "tips-for-getting-your-examples-pass-the-doctests"]], "Plots in examples": [[9, "plots-in-examples"]], "Contributing to the documentation": [[10, "contributing-to-the-documentation"]], "Documentation:": [[10, "documentation"]], "About the spectrochempy documentation": [[10, "about-the-spectrochempy-documentation"]], "Updating a spectrochempy docstring": [[10, "updating-a-spectrochempy-docstring"]], "How to build the spectrochempy documentation": [[10, "how-to-build-the-spectrochempy-documentation"]], "Requirements": [[10, "requirements"]], "Building the documentation": [[10, "building-the-documentation"]], "Building master branch documentation": [[10, "building-master-branch-documentation"]], "Building Docker images": [[11, "building-docker-images"]], "Docker Installation": [[11, "docker-installation"]], "Building the environment image locally": [[11, "building-the-environment-image-locally"]], "Creating and executing a Docker container": [[11, "creating-and-executing-a-docker-container"]], "Adding your examples to the gallery": [[12, "adding-your-examples-to-the-gallery"]], "Developer\u2019s Guide": [[13, "developer-s-guide"]], "Reporting Issues": [[14, "reporting-issues"]], "Editors": [[15, "editors"]], "Visual Studio Installation": [[15, "visual-studio-installation"]], "Configuration": [[15, "configuration"]], "Source control": [[15, "source-control"]], "Start editing": [[15, "start-editing"]], "Decomposition": [[16, "decomposition"], [38, "decomposition"]], "EFA example": [[17, "efa-example"]], "EFA (Keller and Massart original example)": [[18, "efa-keller-and-massart-original-example"]], "Generate a test dataset": [[18, "generate-a-test-dataset"]], "1) simulated chromatogram": [[18, "simulated-chromatogram"]], "2) absorption spectra": [[18, "absorption-spectra"]], "3) simulated data matrix": [[18, "simulated-data-matrix"]], "4) evolving factor analysis (EFA)": [[18, "evolving-factor-analysis-efa"]], "FastICA example": [[19, "fastica-example"]], "Load, prepare and plot the dataset": [[19, "load-prepare-and-plot-the-dataset"]], "Create and fit a FastICA object": [[19, "create-and-fit-a-fastica-object"]], "Get the mixing system and source spectral profiles": [[19, "get-the-mixing-system-and-source-spectral-profiles"]], "Reconstruct the dataset": [[19, "reconstruct-the-dataset"]], "2D-IRIS analysis example": [[20, "d-iris-analysis-example"]], "Uploading dataset": [[20, "uploading-dataset"]], "Setting new coordinates": [[20, "setting-new-coordinates"], [41, "setting-new-coordinates"]], "IRIS analysis without regularization": [[20, "iris-analysis-without-regularization"]], "With regularization and a manual search": [[20, "with-regularization-and-a-manual-search"]], "Automatic search": [[20, "automatic-search"]], "MCR-ALS example (adapted from Jaumot et al. 2005)": [[21, "mcr-als-example-adapted-from-jaumot-et-al-2005"]], "Loading the example dataset": [[21, "loading-the-example-dataset"]], "Create a MCR-ALS object": [[21, "create-a-mcr-als-object"]], "Fit the MCR-ALS model": [[21, "fit-the-mcr-als-model"]], "Plotting the results": [[21, "plotting-the-results"]], "MCR-ALS with kinetic constraints": [[22, "mcr-als-with-kinetic-constraints"]], "Loading a NDDataset": [[22, "loading-a-nddataset"]], "NMF analysis example": [[23, "nmf-analysis-example"]], "Prepare the dataset to NMF factorize": [[23, "prepare-the-dataset-to-nmf-factorize"]], "Create a NMF object": [[23, "create-a-nmf-object"]], "Fit the model": [[23, "fit-the-model"]], "Plot results": [[23, "plot-results"]], "PCA example (iris dataset)": [[24, "pca-example-iris-dataset"]], "PCA analysis example": [[25, "pca-analysis-example"]], "SIMPLISMA example": [[26, "simplisma-example"]], "Computation times": [[27, "computation-times"], [30, "computation-times"], [34, "computation-times"], [37, "computation-times"], [43, "computation-times"], [51, "computation-times"], [55, "computation-times"], [58, "computation-times"], [63, "computation-times"], [67, "computation-times"], [70, "computation-times"], [76, "computation-times"], [79, "computation-times"]], "Cross-decomposition": [[28, "cross-decomposition"], [38, "cross-decomposition"]], "PLS regression example": [[29, "pls-regression-example"]], "Curvefitting": [[31, "curvefitting"], [38, "curvefitting"]], "Fitting 1D dataset": [[32, "fitting-1d-dataset"]], "Solve a linear equation using LSTSQ": [[33, "solve-a-linear-equation-using-lstsq"]], "Baseline": [[35, "baseline"], [38, "baseline"]], "NDDataset baseline correction": [[36, "nddataset-baseline-correction"]], "Analysis NDDataset": [[38, "analysis-nddataset"]], "How to use NDDataset": [[39, "how-to-use-nddataset"], [59, "how-to-use-nddataset"]], "NDDataset creation and plotting example": [[40, "nddataset-creation-and-plotting-example"]], "Creation": [[40, "creation"]], "Data": [[40, "data"]], "Coordinates": [[40, "coordinates"], [331, "Coordinates"]], "nd-Dataset": [[40, "nd-dataset"]], "NDDataset coordinates example": [[41, "nddataset-coordinates-example"]], "Uploading a dataset": [[41, "uploading-a-dataset"]], "Units manipulation examples": [[42, "units-manipulation-examples"]], "Create quantities": [[42, "create-quantities"]], "Units for dataset": [[42, "units-for-dataset"]], "Convert between units": [[42, "convert-between-units"]], "Import / Export": [[44, "import-export"], [59, "import-export"]], "Reading datasets": [[45, "reading-datasets"]], "Import dataset from local files": [[45, "import-dataset-from-local-files"]], "Import dataset from remote files": [[45, "import-dataset-from-remote-files"]], "Loading an IR (omnic SPG) experimental file": [[46, "loading-an-ir-omnic-spg-experimental-file"]], "Loading Bruker OPUS files": [[47, "loading-bruker-opus-files"]], "Loading of experimental 1D NMR data": [[48, "loading-of-experimental-1d-nmr-data"]], "Loading RAMAN experimental file": [[49, "loading-raman-experimental-file"]], "Reading Renishaw WiRE files": [[50, "reading-renishaw-wire-files"]], "Plotting datasets": [[52, "plotting-datasets"], [59, "plotting-datasets"]], "Using plot_multiple to plot several datasets on the same figure": [[53, "using-plot-multiple-to-plot-several-datasets-on-the-same-figure"]], "Introduction to the plotting librairie": [[54, "introduction-to-the-plotting-librairie"]], "Project Management": [[56, "project-management"], [59, "project-management"]], "Project creation": [[57, "project-creation"], [333, "Project-creation"]], "Core functionalities": [[59, "core-functionalities"]], "Apodization": [[60, "apodization"], [71, "apodization"], [314, "apodization"], [336, "Apodization"]], "Exponential window multiplication": [[61, "exponential-window-multiplication"]], "Sine bell and squared Sine bell window multiplication": [[62, "sine-bell-and-squared-sine-bell-window-multiplication"]], "Denoising": [[64, "denoising"], [71, "denoising"], [78, "denoising"], [337, "Denoising"]], "Denoising a 2D Raman spectrum": [[65, "denoising-a-2d-raman-spectrum"]], "Removing cosmic ray spikes from a Raman spectrum": [[66, "removing-cosmic-ray-spikes-from-a-raman-spectrum"]], "filtering": [[68, "filtering"], [71, "filtering"]], "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum": [[69, "savitky-golay-and-whittaker-eilers-smoothing-of-a-raman-spectrum"]], "Processing NDDataset": [[71, "processing-nddataset"]], "Processing NMR datasets": [[71, "processing-nmr-datasets"], [72, "processing-nmr-datasets"]], "Processing Raman datasets": [[71, "processing-raman-datasets"], [77, "processing-raman-datasets"]], "Analysis CP NMR spectra": [[73, "analysis-cp-nmr-spectra"]], "Import API": [[73, "import-api"], [74, "import-api"], [75, "import-api"]], "Import NMR spectra": [[73, "import-nmr-spectra"]], "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)": [[74, "processing-nmr-spectra-slicing-baseline-correction-peak-picking-peak-fitting"]], "Importing a 2D NMR spectra": [[74, "importing-a-2d-nmr-spectra"]], "Analysing the 2D NMD dataset": [[74, "analysing-the-2d-nmd-dataset"]], "Peak picking": [[74, "peak-picking"]], "Peak fitting": [[74, "peak-fitting"]], "Processing Relaxation measurement": [[75, "processing-relaxation-measurement"]], "Importing a pseudo 2D NMR spectra": [[75, "importing-a-pseudo-2d-nmr-spectra"]], "Analysing the data": [[75, "analysing-the-data"]], "Fit a model": [[75, "fit-a-model"]], "Processing RAMAN spectra": [[78, "processing-raman-spectra"]], "Importing a 1D spectra": [[78, "importing-a-1d-spectra"]], "Baseline correction": [[78, "baseline-correction"], [88, "Baseline-correction"], [314, "baseline-correction"], [318, "Baseline-correction"]], "Detrending": [[78, "detrending"], [317, "Detrending"]], "Asymmetric Least Squares smoothing": [[78, "asymmetric-least-squares-smoothing"]], "Baseline correction 2D spectra (series of spectra)": [[78, "baseline-correction-2d-spectra-series-of-spectra"]], "Example\u2019s gallery": [[80, "example-s-gallery"]], "Installation guide": [[81, "installation-guide"]], "Prerequisites": [[81, "prerequisites"]], "Installation of SpectroChemPy": [[81, "installation-of-spectrochempy"]], "Install optional dependencies": [[82, "install-optional-dependencies"]], "Examples and test data": [[82, "examples-and-test-data"]], "Cantera": [[82, "cantera"]], "QT": [[82, "qt"]], "Install in Google Colaboratory (Colab)": [[83, "install-in-google-colaboratory-colab"]], "Load and install SpectroChemPy with pip": [[83, "load-and-install-spectrochempy-with-pip"]], "Load data files": [[83, "load-data-files"]], "Install a Docker container": [[84, "install-a-docker-container"]], "Installation": [[84, "installation"]], "Additional steps on windows": [[84, "additional-steps-on-windows"]], "Executing a SpectroChemPy Docker container": [[84, "executing-a-spectrochempy-docker-container"]], "Installation Guide for Mac OSX": [[85, "installation-guide-for-mac-osx"]], "Installation using Conda": [[85, "installation-using-conda"], [87, "installation-using-conda"]], "Installation using pip": [[85, "installation-using-pip"], [87, "installation-using-pip"]], "Check the Installation": [[85, "check-the-installation"], [87, "check-the-installation"]], "Installation from sources (master or develop versions)": [[86, "installation-from-sources-master-or-develop-versions"]], "Cloning the repository locally": [[86, "cloning-the-repository-locally"]], "Create a conda environment": [[86, "create-a-conda-environment"]], "Install SpectroChemPy in this environment": [[86, "install-spectrochempy-in-this-environment"]], "Updating SpectroChemPy": [[86, "updating-spectrochempy"]], "Installation Guide for Windows": [[87, "installation-guide-for-windows"]], "Overview": [[88, "Overview"]], "NDDataset, the main object": [[88, "NDDataset,-the-main-object"]], "Display dataset information": [[88, "Display-dataset-information"]], "Plotting a dataset": [[88, "Plotting-a-dataset"]], "Slicing a dataset": [[88, "Slicing-a-dataset"]], "Maths on datasets": [[88, "Maths-on-datasets"]], "Processing a dataset": [[88, "Processing-a-dataset"]], "Smoothing": [[88, "Smoothing"]], "Analysis": [[88, "Analysis"], [314, "analysis"], [316, "analysis"]], "IRIS processing": [[88, "IRIS-processing"]], "Why SpectroChemPy  ?": [[89, "why-spectrochempy"]], "Designed for Open Science": [[89, "designed-for-open-science"]], "Open Source Software on an Open-Source Platform": [[89, "open-source-software-on-an-open-source-platform"]], "Powered by Python": [[89, "powered-by-python"]], "Why NOT SpectroChemPy ?": [[89, "why-not-spectrochempy"]], "Processing, analyzing and modeling spectroscopic data": [[90, "processing-analyzing-and-modeling-spectroscopic-data"]], "Getting Started": [[90, "getting-started"]], "User\u2019s Guide & Tutorials": [[90, "user-s-guide-tutorials"]], "Reference": [[90, "reference"]], "Contribute": [[90, "contribute"]], "Credits": [[90, "credits"]], "Bibliography": [[91, "bibliography"]], "Frequently asked questions (FAQ)": [[92, "frequently-asked-questions-faq"]], "Table of Contents": [[92, "table-of-contents"], [314, "table-of-contents"]], "General": [[92, "general"]], "Where are the preference\u2019s files saved?": [[92, "where-are-the-preference-s-files-saved"]], "Code usage": [[92, "code-usage"]], "How to get the index from a coordinate?": [[92, "how-to-get-the-index-from-a-coordinate"]], "How to specify a plot with abscissa in ascending or descending order?": [[92, "how-to-specify-a-plot-with-abscissa-in-ascending-or-descending-order"]], "spectrochempy.ActionMassKinetics": [[93, "spectrochempy-actionmasskinetics"]], "spectrochempy.Baseline": [[94, "spectrochempy-baseline"]], "spectrochempy.BaselineCorrector": [[95, "spectrochempy-baselinecorrector"]], "spectrochempy.Coord": [[96, "spectrochempy-coord"]], "spectrochempy.CoordSet": [[97, "spectrochempy-coordset"]], "spectrochempy.EFA": [[98, "spectrochempy-efa"]], "spectrochempy.FastICA": [[99, "spectrochempy-fastica"]], "spectrochempy.FileSelector": [[100, "spectrochempy-fileselector"]], "spectrochempy.Filter": [[101, "spectrochempy-filter"]], "spectrochempy.II": [[102, "spectrochempy-ii"]], "spectrochempy.IR": [[103, "spectrochempy-ir"]], "spectrochempy.IRIS": [[104, "spectrochempy-iris"]], "spectrochempy.IrisKernel": [[105, "spectrochempy-iriskernel"]], "spectrochempy.LSTSQ": [[106, "spectrochempy-lstsq"]], "spectrochempy.MCRALS": [[107, "spectrochempy-mcrals"]], "spectrochempy.NDDataset": [[108, "spectrochempy-nddataset"]], "spectrochempy.NDDataset.save": [[109, "spectrochempy-nddataset-save"]], "spectrochempy.NDDataset.save_as": [[110, "spectrochempy-nddataset-save-as"]], "spectrochempy.NMF": [[111, "spectrochempy-nmf"]], "spectrochempy.NNLS": [[112, "spectrochempy-nnls"]], "spectrochempy.Optimize": [[113, "spectrochempy-optimize"]], "spectrochempy.PCA": [[114, "spectrochempy-pca"]], "spectrochempy.PFR": [[115, "spectrochempy-pfr"]], "spectrochempy.PLSRegression": [[116, "spectrochempy-plsregression"]], "spectrochempy.Project": [[117, "spectrochempy-project"]], "spectrochempy.Quantity": [[118, "spectrochempy-quantity"]], "spectrochempy.RI": [[119, "spectrochempy-ri"]], "spectrochempy.RR": [[120, "spectrochempy-rr"]], "spectrochempy.SIMPLISMA": [[121, "spectrochempy-simplisma"]], "spectrochempy.SVD": [[122, "spectrochempy-svd"]], "spectrochempy.Script": [[123, "spectrochempy-script"]], "spectrochempy.Unit": [[124, "spectrochempy-unit"]], "spectrochempy.abs": [[125, "spectrochempy-abs"]], "spectrochempy.absolute": [[126, "spectrochempy-absolute"]], "spectrochempy.align": [[127, "spectrochempy-align"]], "spectrochempy.all": [[128, "spectrochempy-all"]], "spectrochempy.amax": [[129, "spectrochempy-amax"]], "spectrochempy.amin": [[130, "spectrochempy-amin"]], "spectrochempy.any": [[131, "spectrochempy-any"]], "spectrochempy.arange": [[132, "spectrochempy-arange"]], "spectrochempy.argmax": [[133, "spectrochempy-argmax"]], "spectrochempy.argmin": [[134, "spectrochempy-argmin"]], "spectrochempy.around": [[135, "spectrochempy-around"]], "spectrochempy.asls": [[136, "spectrochempy-asls"]], "spectrochempy.asymmetricvoigtmodel": [[137, "spectrochempy-asymmetricvoigtmodel"]], "spectrochempy.autosub": [[138, "spectrochempy-autosub"]], "spectrochempy.average": [[139, "spectrochempy-average"]], "spectrochempy.bartlett": [[140, "spectrochempy-bartlett"]], "spectrochempy.basc": [[141, "spectrochempy-basc"]], "spectrochempy.blackmanharris": [[142, "spectrochempy-blackmanharris"]], "spectrochempy.clip": [[143, "spectrochempy-clip"]], "spectrochempy.component": [[144, "spectrochempy-component"]], "spectrochempy.concatenate": [[145, "spectrochempy-concatenate"]], "Examples using spectrochempy.concatenate": [[145, "examples-using-spectrochempy-concatenate"]], "spectrochempy.conj": [[146, "spectrochempy-conj"]], "spectrochempy.conjugate": [[147, "spectrochempy-conjugate"]], "spectrochempy.coordmax": [[148, "spectrochempy-coordmax"]], "spectrochempy.coordmin": [[149, "spectrochempy-coordmin"]], "spectrochempy.copy": [[150, "spectrochempy-copy"]], "spectrochempy.cs": [[151, "spectrochempy-cs"]], "spectrochempy.cumsum": [[152, "spectrochempy-cumsum"]], "spectrochempy.dc": [[153, "spectrochempy-dc"]], "spectrochempy.debug_": [[154, "spectrochempy-debug"]], "spectrochempy.denoise": [[155, "spectrochempy-denoise"]], "Examples using spectrochempy.denoise": [[155, "examples-using-spectrochempy-denoise"]], "spectrochempy.despike": [[156, "spectrochempy-despike"]], "Examples using spectrochempy.despike": [[156, "examples-using-spectrochempy-despike"]], "spectrochempy.detrend": [[157, "spectrochempy-detrend"]], "Examples using spectrochempy.detrend": [[157, "examples-using-spectrochempy-detrend"]], "spectrochempy.diag": [[158, "spectrochempy-diag"]], "spectrochempy.diagonal": [[159, "spectrochempy-diagonal"]], "spectrochempy.dot": [[160, "spectrochempy-dot"]], "Examples using spectrochempy.dot": [[160, "examples-using-spectrochempy-dot"]], "spectrochempy.download_nist_ir": [[161, "spectrochempy-download-nist-ir"]], "spectrochempy.em": [[162, "spectrochempy-em"]], "Examples using spectrochempy.em": [[162, "examples-using-spectrochempy-em"]], "spectrochempy.empty": [[163, "spectrochempy-empty"]], "spectrochempy.empty_like": [[164, "spectrochempy-empty-like"]], "spectrochempy.error_": [[165, "spectrochempy-error"]], "Examples using spectrochempy.error_": [[165, "examples-using-spectrochempy-error"]], "spectrochempy.eye": [[166, "spectrochempy-eye"]], "spectrochempy.fft": [[167, "spectrochempy-fft"]], "Examples using spectrochempy.fft": [[167, "examples-using-spectrochempy-fft"]], "spectrochempy.find_peaks": [[168, "spectrochempy-find-peaks"]], "spectrochempy.fromfunction": [[169, "spectrochempy-fromfunction"]], "spectrochempy.fromiter": [[170, "spectrochempy-fromiter"]], "spectrochempy.fsh": [[171, "spectrochempy-fsh"]], "spectrochempy.fsh2": [[172, "spectrochempy-fsh2"]], "spectrochempy.full": [[173, "spectrochempy-full"]], "spectrochempy.full_like": [[174, "spectrochempy-full-like"]], "spectrochempy.gaussianmodel": [[175, "spectrochempy-gaussianmodel"]], "spectrochempy.general_hamming": [[176, "spectrochempy-general-hamming"]], "spectrochempy.geomspace": [[177, "spectrochempy-geomspace"]], "spectrochempy.get_baseline": [[178, "spectrochempy-get-baseline"]], "spectrochempy.get_loglevel": [[179, "spectrochempy-get-loglevel"]], "spectrochempy.gm": [[180, "spectrochempy-gm"]], "spectrochempy.hamming": [[181, "spectrochempy-hamming"]], "spectrochempy.hann": [[182, "spectrochempy-hann"]], "spectrochempy.ht": [[183, "spectrochempy-ht"]], "spectrochempy.identity": [[184, "spectrochempy-identity"]], "spectrochempy.ifft": [[185, "spectrochempy-ifft"]], "spectrochempy.imag": [[186, "spectrochempy-imag"]], "spectrochempy.info_": [[187, "spectrochempy-info"]], "Examples using spectrochempy.info_": [[187, "examples-using-spectrochempy-info"]], "spectrochempy.interpolate": [[188, "spectrochempy-interpolate"]], "spectrochempy.is_units_compatible": [[189, "spectrochempy-is-units-compatible"]], "spectrochempy.ito": [[190, "spectrochempy-ito"]], "spectrochempy.ito_base_units": [[191, "spectrochempy-ito-base-units"]], "spectrochempy.ito_reduced_units": [[192, "spectrochempy-ito-reduced-units"]], "spectrochempy.linspace": [[193, "spectrochempy-linspace"]], "spectrochempy.load": [[194, "spectrochempy-load"]], "spectrochempy.load_iris": [[195, "spectrochempy-load-iris"]], "Examples using spectrochempy.load_iris": [[195, "examples-using-spectrochempy-load-iris"]], "spectrochempy.logspace": [[196, "spectrochempy-logspace"]], "spectrochempy.lorentzianmodel": [[197, "spectrochempy-lorentzianmodel"]], "spectrochempy.ls": [[198, "spectrochempy-ls"]], "spectrochempy.max": [[199, "spectrochempy-max"]], "spectrochempy.mc": [[200, "spectrochempy-mc"]], "spectrochempy.mean": [[201, "spectrochempy-mean"]], "spectrochempy.min": [[202, "spectrochempy-min"]], "spectrochempy.multiplot": [[203, "spectrochempy-multiplot"]], "spectrochempy.multiplot_image": [[204, "spectrochempy-multiplot-image"]], "spectrochempy.multiplot_lines": [[205, "spectrochempy-multiplot-lines"]], "spectrochempy.multiplot_map": [[206, "spectrochempy-multiplot-map"]], "spectrochempy.multiplot_scatter": [[207, "spectrochempy-multiplot-scatter"]], "spectrochempy.multiplot_stack": [[208, "spectrochempy-multiplot-stack"]], "spectrochempy.multiplot_with_transposed": [[209, "spectrochempy-multiplot-with-transposed"]], "spectrochempy.ones": [[210, "spectrochempy-ones"]], "spectrochempy.ones_like": [[211, "spectrochempy-ones-like"]], "spectrochempy.pathclean": [[212, "spectrochempy-pathclean"]], "spectrochempy.pipe": [[213, "spectrochempy-pipe"]], "spectrochempy.pk": [[214, "spectrochempy-pk"]], "Examples using spectrochempy.pk": [[214, "examples-using-spectrochempy-pk"]], "spectrochempy.pk_exp": [[215, "spectrochempy-pk-exp"]], "spectrochempy.plot": [[216, "spectrochempy-plot"]], "Examples using spectrochempy.plot": [[216, "examples-using-spectrochempy-plot"]], "spectrochempy.plot_1D": [[217, "spectrochempy-plot-1d"]], "spectrochempy.plot_2D": [[218, "spectrochempy-plot-2d"]], "spectrochempy.plot_3D": [[219, "spectrochempy-plot-3d"]], "spectrochempy.plot_bar": [[220, "spectrochempy-plot-bar"]], "spectrochempy.plot_image": [[221, "spectrochempy-plot-image"]], "spectrochempy.plot_map": [[222, "spectrochempy-plot-map"]], "spectrochempy.plot_multiple": [[223, "spectrochempy-plot-multiple"]], "Examples using spectrochempy.plot_multiple": [[223, "examples-using-spectrochempy-plot-multiple"]], "spectrochempy.plot_pen": [[224, "spectrochempy-plot-pen"]], "spectrochempy.plot_scatter": [[225, "spectrochempy-plot-scatter"]], "spectrochempy.plot_scatter_pen": [[226, "spectrochempy-plot-scatter-pen"]], "spectrochempy.plot_stack": [[227, "spectrochempy-plot-stack"]], "Examples using spectrochempy.plot_stack": [[227, "examples-using-spectrochempy-plot-stack"]], "spectrochempy.plot_surface": [[228, "spectrochempy-plot-surface"]], "spectrochempy.plot_waterfall": [[229, "spectrochempy-plot-waterfall"]], "spectrochempy.plot_with_transposed": [[230, "spectrochempy-plot-with-transposed"]], "spectrochempy.polynomialbaseline": [[231, "spectrochempy-polynomialbaseline"]], "spectrochempy.ps": [[232, "spectrochempy-ps"]], "spectrochempy.ptp": [[233, "spectrochempy-ptp"]], "spectrochempy.qsin": [[234, "spectrochempy-qsin"]], "Examples using spectrochempy.qsin": [[234, "examples-using-spectrochempy-qsin"]], "spectrochempy.random": [[235, "spectrochempy-random"]], "spectrochempy.read": [[236, "spectrochempy-read"]], "Examples using spectrochempy.read": [[236, "examples-using-spectrochempy-read"]], "spectrochempy.read_carroucell": [[237, "spectrochempy-read-carroucell"]], "spectrochempy.read_csv": [[238, "spectrochempy-read-csv"]], "spectrochempy.read_ddr": [[239, "spectrochempy-read-ddr"]], "spectrochempy.read_dir": [[240, "spectrochempy-read-dir"]], "spectrochempy.read_hdr": [[241, "spectrochempy-read-hdr"]], "spectrochempy.read_jcamp": [[242, "spectrochempy-read-jcamp"]], "spectrochempy.read_labspec": [[243, "spectrochempy-read-labspec"]], "Examples using spectrochempy.read_labspec": [[243, "examples-using-spectrochempy-read-labspec"]], "spectrochempy.read_mat": [[244, "spectrochempy-read-mat"]], "spectrochempy.read_matlab": [[245, "spectrochempy-read-matlab"]], "Examples using spectrochempy.read_matlab": [[245, "examples-using-spectrochempy-read-matlab"]], "spectrochempy.read_omnic": [[246, "spectrochempy-read-omnic"]], "Examples using spectrochempy.read_omnic": [[246, "examples-using-spectrochempy-read-omnic"]], "spectrochempy.read_opus": [[247, "spectrochempy-read-opus"]], "Examples using spectrochempy.read_opus": [[247, "examples-using-spectrochempy-read-opus"]], "spectrochempy.read_quadera": [[248, "spectrochempy-read-quadera"]], "spectrochempy.read_sdr": [[249, "spectrochempy-read-sdr"]], "spectrochempy.read_soc": [[250, "spectrochempy-read-soc"]], "spectrochempy.read_spa": [[251, "spectrochempy-read-spa"]], "spectrochempy.read_spc": [[252, "spectrochempy-read-spc"]], "spectrochempy.read_spg": [[253, "spectrochempy-read-spg"]], "spectrochempy.read_srs": [[254, "spectrochempy-read-srs"]], "spectrochempy.read_topspin": [[255, "spectrochempy-read-topspin"]], "Examples using spectrochempy.read_topspin": [[255, "examples-using-spectrochempy-read-topspin"]], "spectrochempy.read_wdf": [[256, "spectrochempy-read-wdf"]], "Examples using spectrochempy.read_wdf": [[256, "examples-using-spectrochempy-read-wdf"]], "spectrochempy.read_wire": [[257, "spectrochempy-read-wire"]], "Examples using spectrochempy.read_wire": [[257, "examples-using-spectrochempy-read-wire"]], "spectrochempy.read_zip": [[258, "spectrochempy-read-zip"]], "spectrochempy.real": [[259, "spectrochempy-real"]], "spectrochempy.remove_masks": [[260, "spectrochempy-remove-masks"]], "spectrochempy.roll": [[261, "spectrochempy-roll"]], "spectrochempy.round": [[262, "spectrochempy-round"]], "spectrochempy.rs": [[263, "spectrochempy-rs"]], "spectrochempy.run_all_scripts": [[264, "spectrochempy-run-all-scripts"]], "spectrochempy.run_script": [[265, "spectrochempy-run-script"]], "Examples using spectrochempy.run_script": [[265, "examples-using-spectrochempy-run-script"]], "spectrochempy.savgol": [[266, "spectrochempy-savgol"]], "spectrochempy.set_complex": [[267, "spectrochempy-set-complex"]], "spectrochempy.set_hypercomplex": [[268, "spectrochempy-set-hypercomplex"]], "spectrochempy.set_loglevel": [[269, "spectrochempy-set-loglevel"]], "Examples using spectrochempy.set_loglevel": [[269, "examples-using-spectrochempy-set-loglevel"]], "spectrochempy.set_nmr_context": [[270, "spectrochempy-set-nmr-context"]], "spectrochempy.set_quaternion": [[271, "spectrochempy-set-quaternion"]], "spectrochempy.show": [[272, "spectrochempy-show"]], "Examples using spectrochempy.show": [[272, "examples-using-spectrochempy-show"]], "spectrochempy.show_versions": [[273, "spectrochempy-show-versions"]], "spectrochempy.sigmoidmodel": [[274, "spectrochempy-sigmoidmodel"]], "spectrochempy.simpson": [[275, "spectrochempy-simpson"]], "spectrochempy.sine": [[276, "spectrochempy-sine"]], "spectrochempy.sinm": [[277, "spectrochempy-sinm"]], "Examples using spectrochempy.sinm": [[277, "examples-using-spectrochempy-sinm"]], "spectrochempy.smooth": [[278, "spectrochempy-smooth"]], "spectrochempy.snip": [[279, "spectrochempy-snip"]], "Examples using spectrochempy.snip": [[279, "examples-using-spectrochempy-snip"]], "spectrochempy.sort": [[280, "spectrochempy-sort"]], "spectrochempy.sp": [[281, "spectrochempy-sp"]], "Examples using spectrochempy.sp": [[281, "examples-using-spectrochempy-sp"]], "spectrochempy.squeeze": [[282, "spectrochempy-squeeze"]], "spectrochempy.stack": [[283, "spectrochempy-stack"]], "spectrochempy.std": [[284, "spectrochempy-std"]], "spectrochempy.sum": [[285, "spectrochempy-sum"]], "spectrochempy.swapdims": [[286, "spectrochempy-swapdims"]], "spectrochempy.take": [[287, "spectrochempy-take"]], "spectrochempy.to": [[288, "spectrochempy-to"]], "spectrochempy.to_array": [[289, "spectrochempy-to-array"]], "spectrochempy.to_base_units": [[290, "spectrochempy-to-base-units"]], "spectrochempy.to_reduced_units": [[291, "spectrochempy-to-reduced-units"]], "spectrochempy.to_xarray": [[292, "spectrochempy-to-xarray"]], "spectrochempy.transpose": [[293, "spectrochempy-transpose"]], "spectrochempy.trapezoid": [[294, "spectrochempy-trapezoid"]], "spectrochempy.triang": [[295, "spectrochempy-triang"]], "spectrochempy.var": [[296, "spectrochempy-var"]], "spectrochempy.voigtmodel": [[297, "spectrochempy-voigtmodel"]], "spectrochempy.warning_": [[298, "spectrochempy-warning"]], "spectrochempy.whittaker": [[299, "spectrochempy-whittaker"]], "spectrochempy.write": [[300, "spectrochempy-write"]], "spectrochempy.write_csv": [[301, "spectrochempy-write-csv"]], "spectrochempy.write_excel": [[302, "spectrochempy-write-excel"]], "spectrochempy.write_jcamp": [[303, "spectrochempy-write-jcamp"]], "spectrochempy.write_mat": [[304, "spectrochempy-write-mat"]], "spectrochempy.write_matlab": [[305, "spectrochempy-write-matlab"]], "spectrochempy.write_xls": [[306, "spectrochempy-write-xls"]], "spectrochempy.zeros": [[307, "spectrochempy-zeros"]], "spectrochempy.zeros_like": [[308, "spectrochempy-zeros-like"]], "spectrochempy.zf": [[309, "spectrochempy-zf"]], "spectrochempy.zf_auto": [[310, "spectrochempy-zf-auto"]], "spectrochempy.zf_double": [[311, "spectrochempy-zf-double"]], "spectrochempy.zf_size": [[312, "spectrochempy-zf-size"]], "Glossary": [[313, "glossary"]], "Public API reference": [[314, "public-api-reference"]], "Loading the API": [[314, "loading-the-api"], [329, "Loading-the-API"]], "The NDDataset Object": [[314, "the-nddataset-object"]], "Coordinates-related objects": [[314, "coordinates-related-objects"]], "Creating NDDataset": [[314, "creating-nddataset"]], "Basic creation methods": [[314, "basic-creation-methods"]], "Creation from existing data": [[314, "creation-from-existing-data"]], "Creation from numerical ranges": [[314, "creation-from-numerical-ranges"]], "Select data in a NDDataset": [[314, "select-data-in-a-nddataset"]], "Import/export": [[314, "import-export"]], "Import a NDataset from external source": [[314, "import-a-ndataset-from-external-source"]], "Export a NDDataset": [[314, "export-a-nddataset"]], "Plotting": [[314, "plotting"], [334, "Plotting"]], "Processing": [[314, "processing"], [341, "processing"]], "Transpose-like operations": [[314, "transpose-like-operations"]], "Changing number of dimensions": [[314, "changing-number-of-dimensions"]], "Changing type": [[314, "changing-type"]], "Joining or splitting datasets": [[314, "joining-or-splitting-datasets"]], "Indexing": [[314, "indexing"]], "Sorting": [[314, "sorting"]], "Minimum and maximum": [[314, "minimum-and-maximum"]], "Clipping and rounding": [[314, "clipping-and-rounding"]], "Algebra": [[314, "algebra"]], "Logic functions": [[314, "logic-functions"]], "Sums, integal, difference": [[314, "sums-integal-difference"]], "Complex": [[314, "complex"]], "Masks": [[314, "masks"]], "Units manipulation": [[314, "units-manipulation"]], "Mathematical operations": [[314, "mathematical-operations"], [340, "Mathematical-operations"]], "Statistical operations": [[314, "statistical-operations"]], "Fourier transform": [[314, "fourier-transform"]], "Phasing": [[314, "phasing"]], "Time-domain processing": [[314, "time-domain-processing"]], "Offset correction": [[314, "offset-correction"]], "Zero-filling": [[314, "zero-filling"], [338, "Zero-filling"]], "Rolling": [[314, "rolling"]], "Smoothing, filtering, denoising": [[314, "smoothing-filtering-denoising"]], "Alignment, interpolation": [[314, "alignment-interpolation"]], "Miscellaneous": [[314, "miscellaneous"]], "Linear regression": [[314, "linear-regression"]], "Non-linear optimization and curve fit": [[314, "non-linear-optimization-and-curve-fit"]], "Partial Least Square regression": [[314, "partial-least-square-regression"]], "Evolving factor analysis": [[314, "evolving-factor-analysis"]], "Integral inversion solver for spectroscopic data": [[314, "integral-inversion-solver-for-spectroscopic-data"]], "Multivariate Curve Resolution - Alternating Least Squares": [[314, "multivariate-curve-resolution-alternating-least-squares"]], "Independant Component Analysis": [[314, "independant-component-analysis"]], "Non-Negative Matrix Factorization": [[314, "non-negative-matrix-factorization"]], "Singular value decomposition and Principal component analysis": [[314, "singular-value-decomposition-and-principal-component-analysis"]], "SIMPLe to use Interactive Self-modeling Mixture Analysis": [[314, "simple-to-use-interactive-self-modeling-mixture-analysis"]], "Utilities": [[314, "utilities"], [314, "id1"]], "Lineshape models": [[314, "lineshape-models"]], "Find peaks": [[314, "find-peaks"]], "Kinetic": [[314, "kinetic"]], "Project management": [[314, "project-management"], [333, "Project-management"]], "Scripting": [[314, "scripting"]], "Logging": [[314, "logging"]], "Misc": [[314, "misc"]], "File": [[314, "file"]], "Papers citing SpectroChemPy": [[315, "papers-citing-spectrochempy"]], "2024": [[315, "id1"]], "2023": [[315, "id5"]], "2022": [[315, "id10"]], "2021": [[315, "id13"]], "Baseline corrections": [[317, "Baseline-corrections"]], "The Baseline processor": [[317, "The-Baseline-processor"]], "How it works?": [[317, "How-it-works?"]], "Example": [[317, "Example"], [335, "Example"]], "Overview of the other model": [[317, "Overview-of-the-other-model"]], "Polynomial": [[317, "Polynomial"]], "Multivariate approach": [[317, "Multivariate-approach"]], "Baseline correction using NDDataset or API methods": [[317, "Baseline-correction-using-NDDataset-or-API-methods"]], "Constant trend": [[317, "Constant-trend"]], "Linear trend": [[317, "Linear-trend"]], "Polynomial trend": [[317, "Polynomial-trend"]], "Detrend independently on several data segment": [[317, "Detrend-independently-on-several-data-segment"]], "basc": [[317, "basc"]], "Rubberband": [[317, "Rubberband"]], "Code snippet for \u2018advanced\u2019 baseline correction": [[317, "Code-snippet-for-'advanced'-baseline-correction"]], "Widget for \u201cadvanced\u201d baseline corrections": [[317, "Widget-for-%22advanced%22-baseline-corrections"]], "Fitting": [[318, "Fitting"]], "Solving a linear equation using the least square method (LSTSQ)": [[318, "Solving-a-linear-equation-using-the-least-square-method-(LSTSQ)"]], "Least square with non-negativity constraint (NNLS)": [[318, "Least-square-with-non-negativity-constraint-(NNLS)"]], "NDDataset modelling using non-linear optimisation method": [[318, "NDDataset-modelling-using-non-linear-optimisation-method"]], "Peak finding": [[318, "Peak-finding"]], "Fitting script": [[318, "Fitting-script"]], "Syntax for parameters definition": [[318, "Syntax-for-parameters-definition"]], "MCR ALS": [[319, "MCR-ALS"]], "Introduction": [[319, "Introduction"], [320, "Introduction"], [323, "Introduction"], [329, "Introduction"], [336, "Introduction"]], "The (minimal) dataset": [[319, "The-(minimal)-dataset"]], "Initial guess and MCR ALS optimization": [[319, "Initial-guess-and-MCR-ALS-optimization"]], "Case of initial spectral profiles": [[319, "Case-of-initial-spectral-profiles"]], "ALS Optimization": [[319, "ALS-Optimization"]], "More information about the MCRALS estimator": [[319, "More-information-about-the-MCRALS-estimator"]], "To get help about the different configuration parameters": [[319, "To-get-help-about-the-different-configuration-parameters"]], "Solutions": [[319, "Solutions"]], "A basic illustration of the rotational ambiguity": [[319, "A-basic-illustration-of-the-rotational-ambiguity"]], "Guessing the concentration profile with PCA + EFA": [[319, "Guessing-the-concentration-profile-with-PCA-+-EFA"]], "Use of PCA to assess the number of pure species": [[319, "Use-of-PCA-to-assess-the-number-of-pure-species"]], "Determination of initial concentrations using EFA": [[319, "Determination-of-initial-concentrations-using-EFA"]], "Augmented datasets": [[319, "Augmented-datasets"]], "Principal Component Analysis": [[320, "Principal-Component-Analysis"]], "Loading of the dataset": [[320, "Loading-of-the-dataset"], [323, "Loading-of-the-dataset"]], "Running a PCA": [[320, "Running-a-PCA"]], "Peak Maxima Finding": [[321, "Peak-Maxima-Finding"]], "Loading an experimental dataset": [[321, "Loading-an-experimental-dataset"]], "Find maxima by manual inspection of the plot": [[321, "Find-maxima-by-manual-inspection-of-the-plot"]], "Find maxima with an automated method: find_peaks()": [[321, "Find-maxima-with-an-automated-method:-find_peaks()"]], "Default behaviour": [[321, "Default-behaviour"]], "Options of find_peaks()": [[321, "Options-of-find_peaks()"]], "More on peak properties": [[321, "More-on-peak-properties"]], "Prominence": [[321, "Prominence"]], "Width": [[321, "Width"]], "A code snippet to display properties": [[321, "A-code-snippet-to-display-properties"]], "Peak integration": [[322, "Peak-integration"]], "Partial Least Squares Regression (PLSRegression)": [[323, "Partial-Least-Squares-Regression-(PLSRegression)"]], "Running PLSRegression": [[323, "Running-PLSRegression"]], "API Configuration": [[324, "API-Configuration"]], "General information": [[324, "General-information"]], "Loglevel": [[324, "Loglevel"]], "Error handling": [[324, "Error-handling"]], "Import Data": [[325, "Import-Data"]], "Dialog boxes": [[325, "Dialog-boxes"]], "Import with explicit directory or file pathnames": [[325, "Import-with-explicit-directory-or-file-pathnames"]], "A good practice: use relative paths": [[325, "A-good-practice:-use-relative-paths"]], "Good practice: use os or pathlib modules": [[325, "Good-practice:-use-os-or-pathlib-modules"]], "Another default search directory: datadir": [[325, "Another-default-search-directory:-datadir"]], "File selector widget": [[325, "File-selector-widget"]], "Import IR Data": [[326, "Import-IR-Data"]], "Supported file formats": [[326, "Supported-file-formats"]], "Import of OMNIC files": [[326, "Import-of-OMNIC-files"]], "a) import spg file": [[326, "a)-import-spg-file"]], "Acquisition dates and y axis": [[326, "Acquisition-dates-and-y-axis"]], "The order of spectra": [[326, "The-order-of-spectra"]], "b) Import of .spa files": [[326, "b)-Import-of-.spa-files"]], "Import of Bruker OPUS files": [[326, "Import-of-Bruker-OPUS-files"]], "Import/Export of JCAMP-DX files": [[326, "Import/Export-of-JCAMP-DX-files"]], "Import & Export": [[327, "import-export"]], "Starting Jupyter lab": [[328, "Starting-Jupyter-lab"]], "Create a new Jupyter notebook": [[328, "Create-a-new-Jupyter-notebook"]], "Markdown cheat sheet": [[328, "Markdown-cheat-sheet"]], "Using the application in a web browser": [[328, "Using-the-application-in-a-web-browser"]], "About this user\u2019s guide": [[329, "About-this-user's-guide"]], "What to do if questions arise": [[329, "What-to-do-if-questions-arise"]], "How to get started": [[329, "How-to-get-started"]], "Writing and executing SpectroChemPy scripts": [[329, "Writing-and-executing-SpectroChemPy-scripts"]], "Where to go next?": [[329, "Where-to-go-next?"]], "Markdown Cheat Sheet": [[330, "Markdown-Cheat-Sheet"]], "Headings": [[330, "Headings"]], "Emphasis": [[330, "Emphasis"]], "Mathematical symbols": [[330, "Mathematical-symbols"]], "Monospace font": [[330, "Monospace-font"]], "Line breaks": [[330, "Line-breaks"]], "Indenting": [[330, "Indenting"]], "Bullets": [[330, "Bullets"]], "Numbered lists": [[330, "Numbered-lists"]], "Colored note boxes": [[330, "Colored-note-boxes"]], "Graphics": [[330, "Graphics"]], "Geometric shapes": [[330, "Geometric-shapes"]], "Horizontal lines": [[330, "Horizontal-lines"]], "Internal links": [[330, "Internal-links"]], "External links": [[330, "External-links"]], "The NDDataset object": [[331, "The-NDDataset-object"]], "1D-Dataset (unidimensional dataset)": [[331, "1D-Dataset-(unidimensional-dataset)"]], "nD-Dataset (multidimensional dataset)": [[331, "nD-Dataset-(multidimensional-dataset)"]], "About the dates and times": [[331, "About-the-dates-and-times"]], "About the history attribute": [[331, "About-the-history-attribute"]], "Units": [[331, "Units"]], "Labels": [[331, "Labels"]], "More insight on coordinates": [[331, "More-insight-on-coordinates"]], "Sharing coordinates between dimensions": [[331, "Sharing-coordinates-between-dimensions"]], "Setting coordinates using set_coordset": [[331, "Setting-coordinates-using-set_coordset"]], "Syntax 1": [[331, "Syntax-1"]], "Syntax 2": [[331, "Syntax-2"]], "Adding several coordinates to a single dimension": [[331, "Adding-several-coordinates-to-a-single-dimension"]], "Summary of the coordinate setting syntax": [[331, "Summary-of-the-coordinate-setting-syntax"]], "Methods to create NDDataset": [[331, "Methods-to-create-NDDataset"]], "Create a dataset from a function": [[331, "Create-a-dataset-from-a-function"]], "Using numpy-like constructors of NDDatasets": [[331, "Using-numpy-like-constructors-of-NDDatasets"]], "Copying existing NDDataset": [[331, "Copying-existing-NDDataset"]], "Importing from external dataset": [[331, "Importing-from-external-dataset"]], "Core objects": [[332, "core-objects"]], "NDDataset": [[332, "nddataset"]], "Project": [[332, "project"]], "Script": [[332, "script"]], "Todo": [[332, "id1"]], "Remove an element from a project": [[333, "Remove-an-element-from-a-project"]], "Get project\u2019s elements": [[333, "Get-project's-elements"]], "Saving and loading projects": [[333, "Saving-and-loading-projects"]], "Saving": [[333, "Saving"]], "Loading": [[333, "Loading"]], "Load the API": [[334, "Load-the-API"]], "Loading the data": [[334, "Loading-the-data"]], "Preparing the data": [[334, "Preparing-the-data"]], "Selecting the output window": [[334, "Selecting-the-output-window"]], "Default plotting": [[334, "Default-plotting"]], "Changing the aspect of the plot": [[334, "Changing-the-aspect-of-the-plot"]], "Change the NDDataset.preferences": [[334, "Change-the-NDDataset.preferences"]], "Adding titles and annotations": [[334, "Adding-titles-and-annotations"]], "Changing the plot style using matplotlib style sheets": [[334, "Changing-the-plot-style-using-matplotlib-style-sheets"]], "Create your own style": [[334, "Create-your-own-style"]], "Changing the type of plot": [[334, "Changing-the-type-of-plot"]], "Plotting 1D datasets": [[334, "Plotting-1D-datasets"]], "Plotting several dataset on the same figure": [[334, "Plotting-several-dataset-on-the-same-figure"]], "Overview of the main configuration parameters": [[334, "Overview-of-the-main-configuration-parameters"]], "Alignment of datasets": [[335, "Alignment-of-datasets"]], "Methods for alignments": [[335, "Methods-for-alignments"]], "inner method": [[335, "inner-method"]], "first method": [[335, "first-method"]], "last method": [[335, "last-method"]], "Alignment along several dimensions": [[335, "Alignment-along-several-dimensions"]], "Plot of the Real and Imaginary original data": [[336, "Plot-of-the-Real-and-Imaginary-original-data"]], "Exponential multiplication": [[336, "Exponential-multiplication"]], "Shifted apodization": [[336, "Shifted-apodization"]], "Other apodization functions": [[336, "Other-apodization-functions"]], "Gaussian-Lorentzian apodization": [[336, "Gaussian-Lorentzian-apodization"]], "Shifted Gaussian-Lorentzian apodization": [[336, "Shifted-Gaussian-Lorentzian-apodization"]], "Apodization using sine window multiplication": [[336, "Apodization-using-sine-window-multiplication"]], "Denoising 2D spectra": [[337, "Denoising-2D-spectra"]], "Removing cosmic rays spike from Raman spectra": [[337, "Removing-cosmic-rays-spike-from-Raman-spectra"]], "Median filter": [[337, "Median-filter"]], "despike method": [[337, "despike-method"]], "One-dimensional (1D) Fourier transformation": [[338, "One-dimensional-(1D)-Fourier-transformation"]], "FFT of 1D NMR spectra": [[338, "FFT-of-1D-NMR-spectra"]], "Preprocessing": [[338, "Preprocessing"]], "Line broadening": [[338, "Line-broadening"]], "Time domain baseline correction": [[338, "Time-domain-baseline-correction"]], "Magnitude calculation": [[338, "Magnitude-calculation"]], "Power spectrum": [[338, "Power-spectrum"]], "Real Fourier transform": [[338, "Real-Fourier-transform"]], "FTIR interferogram processing": [[339, "FTIR-interferogram-processing"]], "Comparison with the OMNIC processing.": [[339, "Comparison-with-the-OMNIC-processing."]], "Ufuncs (Universal Numpy\u2019s functions)": [[340, "Ufuncs-(Universal-Numpy's-functions)"]], "List of UFuncs working on NDDataset:": [[340, "List-of-UFuncs-working-on-NDDataset:"]], "Functions affecting magnitudes of the number but keeping units": [[340, "Functions-affecting-magnitudes-of-the-number-but-keeping-units"], [340, "id1"]], "Functions affecting magnitudes of the number but also units": [[340, "Functions-affecting-magnitudes-of-the-number-but-also-units"], [340, "id2"]], "Functions that require no units or dimensionless units for inputs. Returns dimensionless objects.": [[340, "Functions-that-require-no-units-or-dimensionless-units-for-inputs.-Returns-dimensionless-objects."], [340, "id3"]], "Functions that return numpy arrays (Work only for NDDataset)": [[340, "Functions-that-return-numpy-arrays-(Work-only-for-NDDataset)"], [340, "id4"]], "Trigonometric functions. Require unitless data or radian units.": [[340, "Trigonometric-functions.-Require-unitless-data-or-radian-units."]], "Hyperbolic functions": [[340, "Hyperbolic-functions"], [340, "id5"]], "Unit conversions": [[340, "Unit-conversions"]], "Binary Ufuncs": [[340, "Binary-Ufuncs"]], "Usage": [[340, "Usage"]], "Unary functions": [[340, "Unary-functions"]], "negative": [[340, "negative"]], "abs": [[340, "abs"]], "absolute (alias of abs)": [[340, "absolute-(alias-of-abs)"]], "fabs (absolute for float arrays)": [[340, "fabs-(absolute-for-float-arrays)"]], "rint": [[340, "rint"]], "floor": [[340, "floor"]], "ceil": [[340, "ceil"]], "trunc": [[340, "trunc"]], "sqrt": [[340, "sqrt"]], "square": [[340, "square"]], "cbrt": [[340, "cbrt"]], "reciprocal": [[340, "reciprocal"]], "exp": [[340, "exp"]], "exp2": [[340, "exp2"]], "expm1": [[340, "expm1"]], "log": [[340, "log"]], "log2": [[340, "log2"]], "log10": [[340, "log10"]], "log1p": [[340, "log1p"]], "sign": [[340, "sign"]], "isfinite": [[340, "isfinite"]], "isinf": [[340, "isinf"]], "isnan": [[340, "isnan"]], "signbit": [[340, "signbit"]], "Trigonometric functions. Require dimensionless/unitless dataset or radians.": [[340, "Trigonometric-functions.-Require-dimensionless/unitless-dataset-or-radians."]], "sin": [[340, "sin"]], "cos": [[340, "cos"]], "tan": [[340, "tan"]], "arcsin": [[340, "arcsin"]], "arccos": [[340, "arccos"]], "arctan": [[340, "arctan"]], "Angle units conversion": [[340, "Angle-units-conversion"]], "rad2deg": [[340, "rad2deg"]], "deg2rad": [[340, "deg2rad"]], "sinh": [[340, "sinh"]], "cosh": [[340, "cosh"]], "tanh": [[340, "tanh"]], "arcsinh": [[340, "arcsinh"]], "arccosh": [[340, "arccosh"]], "arctanh": [[340, "arctanh"]], "Binary functions": [[340, "Binary-functions"]], "Arithmetic": [[340, "Arithmetic"]], "add": [[340, "add"]], "subtract": [[340, "subtract"]], "multiply": [[340, "multiply"]], "divide": [[340, "divide"]], "floor_divide": [[340, "floor_divide"]], "Complex or hypercomplex NDDatasets": [[340, "Complex-or-hypercomplex-NDDatasets"]], "Slicing NDDatasets": [[342, "Slicing-NDDatasets"]], "What is the slicing ?": [[342, "What-is-the-slicing-?"]], "Slicing of NDDatasets": [[342, "Slicing-of-NDDatasets"]], "Slicing with indexes": [[342, "Slicing-with-indexes"]], "Slicing with coordinates": [[342, "Slicing-with-coordinates"]], "Filtering, Smoothing and Denoising": [[343, "Filtering,-Smoothing-and-Denoising"]], "The Filter processor": [[343, "The-Filter-processor"]], "Moving average": [[343, "Moving-average"]], "Convolution with window filters": [[343, "Convolution-with-window-filters"]], "Savitzky-Golay filter": [[343, "Savitzky-Golay-filter"]], "Whittaker-Eilers filter": [[343, "Whittaker-Eilers-filter"]], "Filtering using API or NDDataset methods.": [[343, "Filtering-using-API-or-NDDataset-methods."]], "The smooth method": [[343, "The-smooth-method"]], "Window size influence": [[343, "Window-size-influence"]], "Convolution with windows": [[343, "Convolution-with-windows"]], "Savitzky-Golay filter:savgol": [[343, "Savitzky-Golay-filter:savgol"]], "Whittaker-eilers filter : whittaker": [[343, "Whittaker-eilers-filter-:-whittaker"]], "Time domain baseline correction (NMR)": [[344, "Time-domain-baseline-correction-(NMR)"]], "Basic transformations": [[345, "Basic-transformations"]], "Masking data": [[345, "Masking-data"]], "Transposition": [[345, "Transposition"]], "Changing units": [[345, "Changing-units"]], "What\u2019s new in revision": [[346, "what-s-new-in-revision"]], "New features": [[346, "new-features"], [348, "new-features"], [350, "new-features"], [351, "new-features"], [355, "new-features"], [356, "new-features"], [357, "new-features"], [358, "new-features"], [359, "new-features"], [360, "new-features"], [363, "new-features"], [364, "new-features"], [365, "new-features"], [366, "new-features"], [367, "new-features"], [369, "new-features"], [370, "new-features"], [371, "new-features"], [372, "new-features"], [373, "new-features"], [374, "new-features"], [375, "new-features"], [376, "new-features"], [377, "new-features"], [378, "new-features"], [379, "new-features"], [381, "new-features"], [382, "new-features"], [383, "new-features"], [384, "new-features"], [385, "new-features"], [387, "new-features"], [389, "new-features"], [390, "new-features"], [391, "new-features"], [392, "new-features"], [394, "new-features"], [395, "new-features"], [396, "new-features"]], "Bug fixes": [[346, "bug-fixes"], [348, "bug-fixes"], [350, "bug-fixes"], [351, "bug-fixes"], [352, "bug-fixes"], [353, "bug-fixes"], [354, "bug-fixes"], [355, "bug-fixes"], [356, "bug-fixes"], [357, "bug-fixes"], [358, "bug-fixes"], [359, "bug-fixes"], [360, "bug-fixes"], [361, "bug-fixes"], [362, "bug-fixes"], [363, "bug-fixes"], [364, "bug-fixes"], [365, "bug-fixes"], [366, "bug-fixes"], [367, "bug-fixes"], [368, "bug-fixes"], [369, "bug-fixes"], [371, "bug-fixes"], [372, "bug-fixes"], [373, "bug-fixes"], [374, "bug-fixes"], [375, "bug-fixes"], [378, "bug-fixes"], [379, "bug-fixes"], [380, "bug-fixes"], [381, "bug-fixes"], [383, "bug-fixes"], [384, "bug-fixes"], [385, "bug-fixes"], [386, "bug-fixes"], [387, "bug-fixes"], [389, "bug-fixes"], [390, "bug-fixes"], [392, "bug-fixes"], [393, "bug-fixes"], [394, "bug-fixes"], [395, "bug-fixes"], [396, "bug-fixes"], [397, "bug-fixes"]], "Dependency updates": [[346, "dependency-updates"]], "Breaking changes": [[346, "breaking-changes"], [348, "breaking-changes"], [373, "breaking-changes"], [382, "breaking-changes"], [388, "breaking-changes"], [389, "breaking-changes"], [390, "breaking-changes"], [392, "breaking-changes"], [396, "breaking-changes"]], "Deprecations": [[346, "deprecations"], [348, "deprecations"], [375, "deprecations"], [379, "deprecations"], [388, "deprecations"], [389, "deprecations"], [390, "deprecations"], [392, "deprecations"], [394, "deprecations"]], "Release notes": [[347, "release-notes"]], "Version 0.6": [[347, "version-0-6"]], "Version 0.5": [[347, "version-0-5"]], "Version 0.4": [[347, "version-0-4"]], "Version 0.3": [[347, "version-0-3"]], "Version 0.2": [[347, "version-0-2"]], "Version 0.1": [[347, "version-0-1"]], "What\u2019s new in revision 0.6.10": [[348, "what-s-new-in-revision-0-6-10"], [389, "what-s-new-in-revision-0-6-10"]], "Revisions 0.1.0 to 0.1.19": [[349, "revisions-0-1-0-to-0-1-19"]], "What\u2019s new in revision 0.2.0": [[350, "what-s-new-in-revision-0-2-0"]], "What\u2019s new in revision 0.2.10 [2021-02-14]": [[351, "what-s-new-in-revision-0-2-10-2021-02-14"]], "What\u2019s new in revision 0.2.11 [2021-02-17]": [[352, "what-s-new-in-revision-0-2-11-2021-02-17"]], "What\u2019s new in revision 0.2.12 [2021-02-23]": [[353, "what-s-new-in-revision-0-2-12-2021-02-23"]], "What\u2019s new in revision 0.2.13 [2021-02-23]": [[354, "what-s-new-in-revision-0-2-13-2021-02-23"]], "What\u2019s new in revision 0.2.14 [2021-02-25]": [[355, "what-s-new-in-revision-0-2-14-2021-02-25"]], "What\u2019s new in revision 0.2.15 [2021-03-29]": [[356, "what-s-new-in-revision-0-2-15-2021-03-29"]], "What\u2019s new in revision 0.2.16 [2021-11-11]": [[357, "what-s-new-in-revision-0-2-16-2021-11-11"]], "What\u2019s new in revision 0.2.17 [2021-11-29]": [[358, "what-s-new-in-revision-0-2-17-2021-11-29"]], "What\u2019s new in revision 0.2.18 [2022-01-05]": [[359, "what-s-new-in-revision-0-2-18-2022-01-05"]], "What\u2019s new in revision 0.2.21 [2022-01-09]": [[360, "what-s-new-in-revision-0-2-21-2022-01-09"]], "What\u2019s new in revision 0.2.22 [2022-01-10]": [[361, "what-s-new-in-revision-0-2-22-2022-01-10"]], "What\u2019s new in revision 0.2.23 [2022-01-16]": [[362, "what-s-new-in-revision-0-2-23-2022-01-16"]], "What\u2019s new in revision 0.2.4": [[363, "what-s-new-in-revision-0-2-4"]], "What\u2019s new in revision 0.2.5": [[364, "what-s-new-in-revision-0-2-5"]], "What\u2019s new in revision 0.2.6": [[365, "what-s-new-in-revision-0-2-6"]], "What\u2019s new in revision 0.2.7": [[366, "what-s-new-in-revision-0-2-7"]], "What\u2019s new in revision 0.2.8": [[367, "what-s-new-in-revision-0-2-8"]], "What\u2019s new in revision 0.2.9 [2021-11-29]": [[368, "what-s-new-in-revision-0-2-9-2021-11-29"]], "What\u2019s new in revision 0.3.0 [2022-01-20]": [[369, "what-s-new-in-revision-0-3-0-2022-01-20"]], "What\u2019s new in revision 0.3.1 [2022-01-21]": [[370, "what-s-new-in-revision-0-3-1-2022-01-21"]], "What\u2019s new in revision 0.3.2 [2022-01-31]": [[371, "what-s-new-in-revision-0-3-2-2022-01-31"]], "What\u2019s new in revision 0.3.3 [2022-03-9]": [[372, "what-s-new-in-revision-0-3-3-2022-03-9"]], "What\u2019s new in revision 0.4.1 [2022-03-14]": [[373, "what-s-new-in-revision-0-4-1-2022-03-14"]], "What\u2019s new in revision 0.4.10 [2023-01-07]": [[374, "what-s-new-in-revision-0-4-10-2023-01-07"]], "What\u2019s new in revision 0.4.2 [2022-03-16]": [[375, "what-s-new-in-revision-0-4-2-2022-03-16"]], "What\u2019s new in revision 0.4.3 [2022-03-20]": [[376, "what-s-new-in-revision-0-4-3-2022-03-20"]], "What\u2019s new in revision 0.4.4 [2022-03-22]": [[377, "what-s-new-in-revision-0-4-4-2022-03-22"]], "What\u2019s new in revision 0.4.5 [2022-04-09]": [[378, "what-s-new-in-revision-0-4-5-2022-04-09"]], "What\u2019s new in revision 0.4.6 [2022-05-16]": [[379, "what-s-new-in-revision-0-4-6-2022-05-16"]], "What\u2019s new in revision 0.4.7 [2022-05-16]": [[380, "what-s-new-in-revision-0-4-7-2022-05-16"]], "What\u2019s new in revision 0.4.9 [2023-01-05]": [[381, "what-s-new-in-revision-0-4-9-2023-01-05"]], "What\u2019s new in revision 0.5.0 [2023-01-11]": [[382, "what-s-new-in-revision-0-5-0-2023-01-11"]], "What\u2019s new in revision 0.5.1": [[383, "what-s-new-in-revision-0-5-1"]], "What\u2019s new in revision 0.5.2": [[384, "what-s-new-in-revision-0-5-2"]], "What\u2019s new in revision 0.5.3": [[385, "what-s-new-in-revision-0-5-3"]], "What\u2019s new in revision 0.5.4": [[386, "what-s-new-in-revision-0-5-4"]], "What\u2019s new in revision 0.5.5": [[387, "what-s-new-in-revision-0-5-5"]], "What\u2019s new in revision 0.6.1": [[388, "what-s-new-in-revision-0-6-1"]], "What\u2019s new in revision 0.6.2": [[390, "what-s-new-in-revision-0-6-2"]], "What\u2019s new in revision 0.6.3": [[391, "what-s-new-in-revision-0-6-3"]], "What\u2019s new in revision 0.6.4": [[392, "what-s-new-in-revision-0-6-4"]], "What\u2019s new in revision 0.6.5": [[393, "what-s-new-in-revision-0-6-5"]], "What\u2019s new in revision 0.6.6": [[394, "what-s-new-in-revision-0-6-6"]], "What\u2019s new in revision 0.6.7": [[395, "what-s-new-in-revision-0-6-7"]], "What\u2019s new in revision 0.6.8": [[396, "what-s-new-in-revision-0-6-8"]], "What\u2019s new in revision 0.6.9": [[397, "what-s-new-in-revision-0-6-9"]]}, "indexentries": {"pep 8#imports": [[9, "index-0"]], "python enhancement proposals": [[9, "index-0"]], "a (actionmasskinetics attribute)": [[93, "spectrochempy.ActionMassKinetics.A"]], "actionmasskinetics (class in spectrochempy)": [[93, "spectrochempy.ActionMassKinetics"]], "b (actionmasskinetics attribute)": [[93, "spectrochempy.ActionMassKinetics.B"]], "fit_to_concentrations() (actionmasskinetics method)": [[93, "spectrochempy.ActionMassKinetics.fit_to_concentrations"]], "init_concentrations (actionmasskinetics attribute)": [[93, "spectrochempy.ActionMassKinetics.init_concentrations"]], "integrate() (actionmasskinetics method)": [[93, "spectrochempy.ActionMassKinetics.integrate"]], "n_reactions (actionmasskinetics attribute)": [[93, "spectrochempy.ActionMassKinetics.n_reactions"]], "n_species (actionmasskinetics attribute)": [[93, "spectrochempy.ActionMassKinetics.n_species"]], "species (actionmasskinetics attribute)": [[93, "spectrochempy.ActionMassKinetics.species"]], "baseline (class in spectrochempy)": [[94, "spectrochempy.Baseline"]], "x (baseline attribute)": [[94, "spectrochempy.Baseline.X"]], "asymmetry (baseline attribute)": [[94, "spectrochempy.Baseline.asymmetry"]], "baseline (baseline attribute)": [[94, "spectrochempy.Baseline.baseline"]], "breakpoints (baseline attribute)": [[94, "spectrochempy.Baseline.breakpoints"]], "config (baseline attribute)": [[94, "spectrochempy.Baseline.config"]], "corrected (baseline attribute)": [[94, "spectrochempy.Baseline.corrected"]], "fit() (baseline method)": [[94, "spectrochempy.Baseline.fit"]], "include_limits (baseline attribute)": [[94, "spectrochempy.Baseline.include_limits"]], "lamb (baseline attribute)": [[94, "spectrochempy.Baseline.lamb"]], "lls (baseline attribute)": [[94, "spectrochempy.Baseline.lls"]], "log (baseline attribute)": [[94, "spectrochempy.Baseline.log"]], "max_iter (baseline attribute)": [[94, "spectrochempy.Baseline.max_iter"]], "model (baseline attribute)": [[94, "spectrochempy.Baseline.model"]], "multivariate (baseline attribute)": [[94, "spectrochempy.Baseline.multivariate"]], "n_components (baseline attribute)": [[94, "spectrochempy.Baseline.n_components"]], "name (baseline attribute)": [[94, "spectrochempy.Baseline.name"]], "order (baseline attribute)": [[94, "spectrochempy.Baseline.order"]], "parameters() (baseline method)": [[94, "spectrochempy.Baseline.parameters"]], "params() (baseline method)": [[94, "spectrochempy.Baseline.params"]], "plot() (baseline method)": [[94, "spectrochempy.Baseline.plot"]], "ranges (baseline attribute)": [[94, "spectrochempy.Baseline.ranges"]], "reset() (baseline method)": [[94, "spectrochempy.Baseline.reset"]], "snip_width (baseline attribute)": [[94, "spectrochempy.Baseline.snip_width"]], "to_dict() (baseline method)": [[94, "spectrochempy.Baseline.to_dict"]], "tol (baseline attribute)": [[94, "spectrochempy.Baseline.tol"]], "transform() (baseline method)": [[94, "spectrochempy.Baseline.transform"]], "used_ranges (baseline attribute)": [[94, "spectrochempy.Baseline.used_ranges"]], "baselinecorrector (class in spectrochempy)": [[95, "spectrochempy.BaselineCorrector"]], "baseline (baselinecorrector attribute)": [[95, "spectrochempy.BaselineCorrector.baseline"]], "corrected (baselinecorrector attribute)": [[95, "spectrochempy.BaselineCorrector.corrected"]], "original (baselinecorrector attribute)": [[95, "spectrochempy.BaselineCorrector.original"]], "coord (class in spectrochempy)": [[96, "spectrochempy.Coord"]], "amax() (coord method)": [[96, "spectrochempy.Coord.amax"]], "amin() (coord method)": [[96, "spectrochempy.Coord.amin"]], "arange() (coord method)": [[96, "spectrochempy.Coord.arange"]], "around() (coord method)": [[96, "spectrochempy.Coord.around"]], "astype() (coord method)": [[96, "spectrochempy.Coord.astype"]], "copy() (coord method)": [[96, "spectrochempy.Coord.copy"]], "data (coord attribute)": [[96, "spectrochempy.Coord.data"]], "dimensionless (coord attribute)": [[96, "spectrochempy.Coord.dimensionless"]], "dtype (coord attribute)": [[96, "spectrochempy.Coord.dtype"]], "filename (coord attribute)": [[96, "spectrochempy.Coord.filename"]], "fromfunction() (coord method)": [[96, "spectrochempy.Coord.fromfunction"]], "fromiter() (coord method)": [[96, "spectrochempy.Coord.fromiter"]], "geomspace() (coord method)": [[96, "spectrochempy.Coord.geomspace"]], "get_labels() (coord method)": [[96, "spectrochempy.Coord.get_labels"]], "has_data (coord attribute)": [[96, "spectrochempy.Coord.has_data"]], "has_defined_name (coord attribute)": [[96, "spectrochempy.Coord.has_defined_name"]], "has_units (coord attribute)": [[96, "spectrochempy.Coord.has_units"]], "id (coord attribute)": [[96, "spectrochempy.Coord.id"]], "is_empty (coord attribute)": [[96, "spectrochempy.Coord.is_empty"]], "is_float (coord attribute)": [[96, "spectrochempy.Coord.is_float"]], "is_integer (coord attribute)": [[96, "spectrochempy.Coord.is_integer"]], "is_labeled (coord attribute)": [[96, "spectrochempy.Coord.is_labeled"]], "is_units_compatible() (coord method)": [[96, "spectrochempy.Coord.is_units_compatible"]], "ito() (coord method)": [[96, "spectrochempy.Coord.ito"]], "ito_base_units() (coord method)": [[96, "spectrochempy.Coord.ito_base_units"]], "ito_reduced_units() (coord method)": [[96, "spectrochempy.Coord.ito_reduced_units"]], "labels (coord attribute)": [[96, "spectrochempy.Coord.labels"]], "larmor (coord attribute)": [[96, "spectrochempy.Coord.larmor"]], "laser_frequency (coord attribute)": [[96, "spectrochempy.Coord.laser_frequency"]], "limits (coord attribute)": [[96, "spectrochempy.Coord.limits"]], "linear (coord attribute)": [[96, "spectrochempy.Coord.linear"]], "linearize() (coord method)": [[96, "spectrochempy.Coord.linearize"]], "linspace() (coord method)": [[96, "spectrochempy.Coord.linspace"]], "loc2index() (coord method)": [[96, "spectrochempy.Coord.loc2index"]], "logspace() (coord method)": [[96, "spectrochempy.Coord.logspace"]], "m (coord attribute)": [[96, "spectrochempy.Coord.m"]], "magnitude (coord attribute)": [[96, "spectrochempy.Coord.magnitude"]], "max() (coord method)": [[96, "spectrochempy.Coord.max"]], "meta (coord attribute)": [[96, "spectrochempy.Coord.meta"]], "min() (coord method)": [[96, "spectrochempy.Coord.min"]], "name (coord attribute)": [[96, "spectrochempy.Coord.name"]], "ptp() (coord method)": [[96, "spectrochempy.Coord.ptp"]], "reversed (coord attribute)": [[96, "spectrochempy.Coord.reversed"]], "roi (coord attribute)": [[96, "spectrochempy.Coord.roi"]], "round() (coord method)": [[96, "spectrochempy.Coord.round"]], "round_() (coord method)": [[96, "spectrochempy.Coord.round_"]], "set_laser_frequency() (coord method)": [[96, "spectrochempy.Coord.set_laser_frequency"]], "shape (coord attribute)": [[96, "spectrochempy.Coord.shape"]], "show_datapoints (coord attribute)": [[96, "spectrochempy.Coord.show_datapoints"]], "sigdigits (coord attribute)": [[96, "spectrochempy.Coord.sigdigits"]], "size (coord attribute)": [[96, "spectrochempy.Coord.size"]], "spacing (coord attribute)": [[96, "spectrochempy.Coord.spacing"]], "title (coord attribute)": [[96, "spectrochempy.Coord.title"]], "to() (coord method)": [[96, "spectrochempy.Coord.to"]], "to_base_units() (coord method)": [[96, "spectrochempy.Coord.to_base_units"]], "to_reduced_units() (coord method)": [[96, "spectrochempy.Coord.to_reduced_units"]], "umasked_data (coord attribute)": [[96, "spectrochempy.Coord.umasked_data"]], "unitless (coord attribute)": [[96, "spectrochempy.Coord.unitless"]], "units (coord attribute)": [[96, "spectrochempy.Coord.units"]], "value (coord attribute)": [[96, "spectrochempy.Coord.value"]], "values (coord attribute)": [[96, "spectrochempy.Coord.values"]], "coordset (class in spectrochempy)": [[97, "spectrochempy.CoordSet"]], "available_names (coordset attribute)": [[97, "spectrochempy.CoordSet.available_names"]], "coords (coordset attribute)": [[97, "spectrochempy.CoordSet.coords"]], "copy() (coordset method)": [[97, "spectrochempy.CoordSet.copy"]], "default (coordset attribute)": [[97, "spectrochempy.CoordSet.default"]], "has_defined_name (coordset attribute)": [[97, "spectrochempy.CoordSet.has_defined_name"]], "id (coordset attribute)": [[97, "spectrochempy.CoordSet.id"]], "is_empty (coordset attribute)": [[97, "spectrochempy.CoordSet.is_empty"]], "is_labeled (coordset attribute)": [[97, "spectrochempy.CoordSet.is_labeled"]], "is_same_dim (coordset attribute)": [[97, "spectrochempy.CoordSet.is_same_dim"]], "keys() (coordset method)": [[97, "spectrochempy.CoordSet.keys"]], "labels (coordset attribute)": [[97, "spectrochempy.CoordSet.labels"]], "names (coordset attribute)": [[97, "spectrochempy.CoordSet.names"]], "select() (coordset method)": [[97, "spectrochempy.CoordSet.select"]], "set() (coordset method)": [[97, "spectrochempy.CoordSet.set"]], "set_titles() (coordset method)": [[97, "spectrochempy.CoordSet.set_titles"]], "set_units() (coordset method)": [[97, "spectrochempy.CoordSet.set_units"]], "size (coordset attribute)": [[97, "spectrochempy.CoordSet.size"]], "sizes (coordset attribute)": [[97, "spectrochempy.CoordSet.sizes"]], "titles (coordset attribute)": [[97, "spectrochempy.CoordSet.titles"]], "to_dict() (coordset method)": [[97, "spectrochempy.CoordSet.to_dict"]], "units (coordset attribute)": [[97, "spectrochempy.CoordSet.units"]], "update() (coordset method)": [[97, "spectrochempy.CoordSet.update"]], "efa (class in spectrochempy)": [[98, "spectrochempy.EFA"]], "x (efa attribute)": [[98, "spectrochempy.EFA.X"]], "y (efa attribute)": [[98, "spectrochempy.EFA.Y"]], "b_ev (efa attribute)": [[98, "spectrochempy.EFA.b_ev"]], "components (efa attribute)": [[98, "spectrochempy.EFA.components"]], "config (efa attribute)": [[98, "spectrochempy.EFA.config"]], "cutoff (efa attribute)": [[98, "spectrochempy.EFA.cutoff"]], "f_ev (efa attribute)": [[98, "spectrochempy.EFA.f_ev"]], "fit() (efa method)": [[98, "spectrochempy.EFA.fit"]], "fit_transform() (efa method)": [[98, "spectrochempy.EFA.fit_transform"]], "get_components() (efa method)": [[98, "spectrochempy.EFA.get_components"]], "inverse_transform() (efa method)": [[98, "spectrochempy.EFA.inverse_transform"]], "log (efa attribute)": [[98, "spectrochempy.EFA.log"]], "n_components (efa attribute)": [[98, "spectrochempy.EFA.n_components"]], "name (efa attribute)": [[98, "spectrochempy.EFA.name"]], "parameters() (efa method)": [[98, "spectrochempy.EFA.parameters"]], "params() (efa method)": [[98, "spectrochempy.EFA.params"]], "plotmerit() (efa method)": [[98, "spectrochempy.EFA.plotmerit"]], "reconstruct() (efa method)": [[98, "spectrochempy.EFA.reconstruct"]], "reduce() (efa method)": [[98, "spectrochempy.EFA.reduce"]], "reset() (efa method)": [[98, "spectrochempy.EFA.reset"]], "to_dict() (efa method)": [[98, "spectrochempy.EFA.to_dict"]], "transform() (efa method)": [[98, "spectrochempy.EFA.transform"]], "a (fastica attribute)": [[99, "spectrochempy.FastICA.A"]], "fastica (class in spectrochempy)": [[99, "spectrochempy.FastICA"]], "st (fastica attribute)": [[99, "spectrochempy.FastICA.St"]], "x (fastica attribute)": [[99, "spectrochempy.FastICA.X"]], "y (fastica attribute)": [[99, "spectrochempy.FastICA.Y"]], "algorithm (fastica attribute)": [[99, "spectrochempy.FastICA.algorithm"]], "components (fastica attribute)": [[99, "spectrochempy.FastICA.components"]], "config (fastica attribute)": [[99, "spectrochempy.FastICA.config"]], "fit() (fastica method)": [[99, "spectrochempy.FastICA.fit"]], "fit_transform() (fastica method)": [[99, "spectrochempy.FastICA.fit_transform"]], "fun (fastica attribute)": [[99, "spectrochempy.FastICA.fun"]], "fun_args (fastica attribute)": [[99, "spectrochempy.FastICA.fun_args"]], "get_components() (fastica method)": [[99, "spectrochempy.FastICA.get_components"]], "inverse_transform() (fastica method)": [[99, "spectrochempy.FastICA.inverse_transform"]], "log (fastica attribute)": [[99, "spectrochempy.FastICA.log"]], "max_iter (fastica attribute)": [[99, "spectrochempy.FastICA.max_iter"]], "mean (fastica attribute)": [[99, "spectrochempy.FastICA.mean"]], "mixing (fastica attribute)": [[99, "spectrochempy.FastICA.mixing"]], "n_components (fastica attribute)": [[99, "spectrochempy.FastICA.n_components"]], "n_iter (fastica attribute)": [[99, "spectrochempy.FastICA.n_iter"]], "name (fastica attribute)": [[99, "spectrochempy.FastICA.name"]], "parameters() (fastica method)": [[99, "spectrochempy.FastICA.parameters"]], "params() (fastica method)": [[99, "spectrochempy.FastICA.params"]], "plotmerit() (fastica method)": [[99, "spectrochempy.FastICA.plotmerit"]], "random_state (fastica attribute)": [[99, "spectrochempy.FastICA.random_state"]], "reconstruct() (fastica method)": [[99, "spectrochempy.FastICA.reconstruct"]], "reduce() (fastica method)": [[99, "spectrochempy.FastICA.reduce"]], "reset() (fastica method)": [[99, "spectrochempy.FastICA.reset"]], "to_dict() (fastica method)": [[99, "spectrochempy.FastICA.to_dict"]], "tol (fastica attribute)": [[99, "spectrochempy.FastICA.tol"]], "transform() (fastica method)": [[99, "spectrochempy.FastICA.transform"]], "w_init (fastica attribute)": [[99, "spectrochempy.FastICA.w_init"]], "whiten (fastica attribute)": [[99, "spectrochempy.FastICA.whiten"]], "whiten_solver (fastica attribute)": [[99, "spectrochempy.FastICA.whiten_solver"]], "whitening (fastica attribute)": [[99, "spectrochempy.FastICA.whitening"]], "fileselector (class in spectrochempy)": [[100, "spectrochempy.FileSelector"]], "filter (class in spectrochempy)": [[101, "spectrochempy.Filter"]], "config (filter attribute)": [[101, "spectrochempy.Filter.config"]], "cval (filter attribute)": [[101, "spectrochempy.Filter.cval"]], "delta (filter attribute)": [[101, "spectrochempy.Filter.delta"]], "deriv (filter attribute)": [[101, "spectrochempy.Filter.deriv"]], "lamb (filter attribute)": [[101, "spectrochempy.Filter.lamb"]], "log (filter attribute)": [[101, "spectrochempy.Filter.log"]], "method (filter attribute)": [[101, "spectrochempy.Filter.method"]], "mode (filter attribute)": [[101, "spectrochempy.Filter.mode"]], "name (filter attribute)": [[101, "spectrochempy.Filter.name"]], "order (filter attribute)": [[101, "spectrochempy.Filter.order"]], "parameters() (filter method)": [[101, "spectrochempy.Filter.parameters"]], "params() (filter method)": [[101, "spectrochempy.Filter.params"]], "reset() (filter method)": [[101, "spectrochempy.Filter.reset"]], "size (filter attribute)": [[101, "spectrochempy.Filter.size"]], "to_dict() (filter method)": [[101, "spectrochempy.Filter.to_dict"]], "transform() (filter method)": [[101, "spectrochempy.Filter.transform"]], "ii (in module spectrochempy)": [[102, "spectrochempy.II"]], "ir (in module spectrochempy)": [[103, "spectrochempy.IR"]], "iris (class in spectrochempy)": [[104, "spectrochempy.IRIS"]], "x (iris attribute)": [[104, "spectrochempy.IRIS.X"]], "y (iris attribute)": [[104, "spectrochempy.IRIS.Y"]], "components (iris attribute)": [[104, "spectrochempy.IRIS.components"]], "config (iris attribute)": [[104, "spectrochempy.IRIS.config"]], "fit() (iris method)": [[104, "spectrochempy.IRIS.fit"]], "fit_transform() (iris method)": [[104, "spectrochempy.IRIS.fit_transform"]], "get_components() (iris method)": [[104, "spectrochempy.IRIS.get_components"]], "inverse_transform() (iris method)": [[104, "spectrochempy.IRIS.inverse_transform"]], "log (iris attribute)": [[104, "spectrochempy.IRIS.log"]], "n_components (iris attribute)": [[104, "spectrochempy.IRIS.n_components"]], "name (iris attribute)": [[104, "spectrochempy.IRIS.name"]], "parameters() (iris method)": [[104, "spectrochempy.IRIS.parameters"]], "params() (iris method)": [[104, "spectrochempy.IRIS.params"]], "plotdistribution() (iris method)": [[104, "spectrochempy.IRIS.plotdistribution"]], "plotlcurve() (iris method)": [[104, "spectrochempy.IRIS.plotlcurve"]], "plotmerit() (iris method)": [[104, "spectrochempy.IRIS.plotmerit"]], "qpsolver (iris attribute)": [[104, "spectrochempy.IRIS.qpsolver"]], "reconstruct() (iris method)": [[104, "spectrochempy.IRIS.reconstruct"]], "reduce() (iris method)": [[104, "spectrochempy.IRIS.reduce"]], "reg_par (iris attribute)": [[104, "spectrochempy.IRIS.reg_par"]], "reset() (iris method)": [[104, "spectrochempy.IRIS.reset"]], "to_dict() (iris method)": [[104, "spectrochempy.IRIS.to_dict"]], "transform() (iris method)": [[104, "spectrochempy.IRIS.transform"]], "iriskernel (class in spectrochempy)": [[105, "spectrochempy.IrisKernel"]], "lstsq (class in spectrochempy)": [[106, "spectrochempy.LSTSQ"]], "x (lstsq attribute)": [[106, "spectrochempy.LSTSQ.X"]], "y (lstsq attribute)": [[106, "spectrochempy.LSTSQ.Y"]], "coef (lstsq attribute)": [[106, "spectrochempy.LSTSQ.coef"]], "config (lstsq attribute)": [[106, "spectrochempy.LSTSQ.config"]], "description (lstsq attribute)": [[106, "spectrochempy.LSTSQ.description"]], "fit() (lstsq method)": [[106, "spectrochempy.LSTSQ.fit"]], "fit_intercept (lstsq attribute)": [[106, "spectrochempy.LSTSQ.fit_intercept"]], "intercept (lstsq attribute)": [[106, "spectrochempy.LSTSQ.intercept"]], "log (lstsq attribute)": [[106, "spectrochempy.LSTSQ.log"]], "name (lstsq attribute)": [[106, "spectrochempy.LSTSQ.name"]], "parameters() (lstsq method)": [[106, "spectrochempy.LSTSQ.parameters"]], "params() (lstsq method)": [[106, "spectrochempy.LSTSQ.params"]], "positive (lstsq attribute)": [[106, "spectrochempy.LSTSQ.positive"]], "predict() (lstsq method)": [[106, "spectrochempy.LSTSQ.predict"]], "reset() (lstsq method)": [[106, "spectrochempy.LSTSQ.reset"]], "score() (lstsq method)": [[106, "spectrochempy.LSTSQ.score"]], "to_dict() (lstsq method)": [[106, "spectrochempy.LSTSQ.to_dict"]], "c (mcrals attribute)": [[107, "spectrochempy.MCRALS.C"]], "c_constrained (mcrals attribute)": [[107, "spectrochempy.MCRALS.C_constrained"]], "c_constrained_list (mcrals attribute)": [[107, "spectrochempy.MCRALS.C_constrained_list"]], "c_ls_list (mcrals attribute)": [[107, "spectrochempy.MCRALS.C_ls_list"]], "mcrals (class in spectrochempy)": [[107, "spectrochempy.MCRALS"]], "s_soft (mcrals attribute)": [[107, "spectrochempy.MCRALS.S_soft"]], "st (mcrals attribute)": [[107, "spectrochempy.MCRALS.St"]], "st_constrained_list (mcrals attribute)": [[107, "spectrochempy.MCRALS.St_constrained_list"]], "st_ls (mcrals attribute)": [[107, "spectrochempy.MCRALS.St_ls"]], "st_ls_list (mcrals attribute)": [[107, "spectrochempy.MCRALS.St_ls_list"]], "st_unconstrained (mcrals attribute)": [[107, "spectrochempy.MCRALS.St_unconstrained"]], "x (mcrals attribute)": [[107, "spectrochempy.MCRALS.X"]], "y (mcrals attribute)": [[107, "spectrochempy.MCRALS.Y"]], "argsgetconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.argsGetConc"]], "argsgetspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.argsGetSpec"]], "closureconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.closureConc"]], "closuremethod (mcrals attribute)": [[107, "spectrochempy.MCRALS.closureMethod"]], "closuretarget (mcrals attribute)": [[107, "spectrochempy.MCRALS.closureTarget"]], "components (mcrals attribute)": [[107, "spectrochempy.MCRALS.components"]], "config (mcrals attribute)": [[107, "spectrochempy.MCRALS.config"]], "extraoutputgetconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.extraOutputGetConc"]], "extraoutputgetspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.extraOutputGetSpec"]], "fit() (mcrals method)": [[107, "spectrochempy.MCRALS.fit"]], "fit_transform() (mcrals method)": [[107, "spectrochempy.MCRALS.fit_transform"]], "getc_to_c_idx (mcrals attribute)": [[107, "spectrochempy.MCRALS.getC_to_C_idx"]], "getconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.getConc"]], "getspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.getSpec"]], "getst_to_st_idx (mcrals attribute)": [[107, "spectrochempy.MCRALS.getSt_to_St_idx"]], "get_components() (mcrals method)": [[107, "spectrochempy.MCRALS.get_components"]], "hardconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.hardConc"]], "hardspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.hardSpec"]], "inverse_transform() (mcrals method)": [[107, "spectrochempy.MCRALS.inverse_transform"]], "kwargsgetconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.kwargsGetConc"]], "kwargsgetspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.kwargsGetSpec"]], "log (mcrals attribute)": [[107, "spectrochempy.MCRALS.log"]], "max_iter (mcrals attribute)": [[107, "spectrochempy.MCRALS.max_iter"]], "maxdiv (mcrals attribute)": [[107, "spectrochempy.MCRALS.maxdiv"]], "monodecconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.monoDecConc"]], "monodectol (mcrals attribute)": [[107, "spectrochempy.MCRALS.monoDecTol"]], "monoincconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.monoIncConc"]], "monoinctol (mcrals attribute)": [[107, "spectrochempy.MCRALS.monoIncTol"]], "n_components (mcrals attribute)": [[107, "spectrochempy.MCRALS.n_components"]], "name (mcrals attribute)": [[107, "spectrochempy.MCRALS.name"]], "nonnegconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.nonnegConc"]], "nonnegspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.nonnegSpec"]], "normspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.normSpec"]], "parameters() (mcrals method)": [[107, "spectrochempy.MCRALS.parameters"]], "params() (mcrals method)": [[107, "spectrochempy.MCRALS.params"]], "plotmerit() (mcrals method)": [[107, "spectrochempy.MCRALS.plotmerit"]], "reconstruct() (mcrals method)": [[107, "spectrochempy.MCRALS.reconstruct"]], "reduce() (mcrals method)": [[107, "spectrochempy.MCRALS.reduce"]], "reset() (mcrals method)": [[107, "spectrochempy.MCRALS.reset"]], "solverconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.solverConc"]], "solverspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.solverSpec"]], "storeiterations (mcrals attribute)": [[107, "spectrochempy.MCRALS.storeIterations"]], "to_dict() (mcrals method)": [[107, "spectrochempy.MCRALS.to_dict"]], "tol (mcrals attribute)": [[107, "spectrochempy.MCRALS.tol"]], "transform() (mcrals method)": [[107, "spectrochempy.MCRALS.transform"]], "unimodconc (mcrals attribute)": [[107, "spectrochempy.MCRALS.unimodConc"]], "unimodconcmod (mcrals attribute)": [[107, "spectrochempy.MCRALS.unimodConcMod"]], "unimodconctol (mcrals attribute)": [[107, "spectrochempy.MCRALS.unimodConcTol"]], "unimodspec (mcrals attribute)": [[107, "spectrochempy.MCRALS.unimodSpec"]], "unimodspecmod (mcrals attribute)": [[107, "spectrochempy.MCRALS.unimodSpecMod"]], "unimodspectol (mcrals attribute)": [[107, "spectrochempy.MCRALS.unimodSpecTol"]], "ii (nddataset attribute)": [[108, "spectrochempy.NDDataset.II"]], "ir (nddataset attribute)": [[108, "spectrochempy.NDDataset.IR"]], "nddataset (class in spectrochempy)": [[108, "spectrochempy.NDDataset"]], "ri (nddataset attribute)": [[108, "spectrochempy.NDDataset.RI"]], "rr (nddataset attribute)": [[108, "spectrochempy.NDDataset.RR"]], "t (nddataset attribute)": [[108, "spectrochempy.NDDataset.T"]], "abs() (nddataset method)": [[108, "spectrochempy.NDDataset.abs"]], "absolute() (nddataset method)": [[108, "spectrochempy.NDDataset.absolute"]], "acquisition_date (nddataset attribute)": [[108, "spectrochempy.NDDataset.acquisition_date"]], "add_coordset() (nddataset method)": [[108, "spectrochempy.NDDataset.add_coordset"]], "align() (nddataset method)": [[108, "spectrochempy.NDDataset.align"]], "all() (nddataset method)": [[108, "spectrochempy.NDDataset.all"]], "amax() (nddataset method)": [[108, "spectrochempy.NDDataset.amax"]], "amin() (nddataset method)": [[108, "spectrochempy.NDDataset.amin"]], "any() (nddataset method)": [[108, "spectrochempy.NDDataset.any"]], "arange() (nddataset method)": [[108, "spectrochempy.NDDataset.arange"]], "argmax() (nddataset method)": [[108, "spectrochempy.NDDataset.argmax"]], "argmin() (nddataset method)": [[108, "spectrochempy.NDDataset.argmin"]], "around() (nddataset method)": [[108, "spectrochempy.NDDataset.around"]], "asfortranarray() (nddataset method)": [[108, "spectrochempy.NDDataset.asfortranarray"]], "asls() (nddataset method)": [[108, "spectrochempy.NDDataset.asls"]], "astype() (nddataset method)": [[108, "spectrochempy.NDDataset.astype"]], "atleast_2d() (nddataset method)": [[108, "spectrochempy.NDDataset.atleast_2d"]], "author (nddataset attribute)": [[108, "spectrochempy.NDDataset.author"]], "autosub() (nddataset method)": [[108, "spectrochempy.NDDataset.autosub"]], "average() (nddataset method)": [[108, "spectrochempy.NDDataset.average"]], "ax (nddataset attribute)": [[108, "spectrochempy.NDDataset.ax"]], "axt (nddataset attribute)": [[108, "spectrochempy.NDDataset.axT"]], "axec (nddataset attribute)": [[108, "spectrochempy.NDDataset.axec"]], "axect (nddataset attribute)": [[108, "spectrochempy.NDDataset.axecT"]], "axex (nddataset attribute)": [[108, "spectrochempy.NDDataset.axex"]], "axey (nddataset attribute)": [[108, "spectrochempy.NDDataset.axey"]], "bartlett() (nddataset method)": [[108, "spectrochempy.NDDataset.bartlett"]], "basc() (nddataset method)": [[108, "spectrochempy.NDDataset.basc"]], "blackmanharris() (nddataset method)": [[108, "spectrochempy.NDDataset.blackmanharris"]], "clip() (nddataset method)": [[108, "spectrochempy.NDDataset.clip"]], "close_figure() (nddataset method)": [[108, "spectrochempy.NDDataset.close_figure"]], "comment (nddataset attribute)": [[108, "spectrochempy.NDDataset.comment"]], "component() (nddataset method)": [[108, "spectrochempy.NDDataset.component"]], "concatenate() (nddataset method)": [[108, "spectrochempy.NDDataset.concatenate"]], "conj() (nddataset method)": [[108, "spectrochempy.NDDataset.conj"]], "conjugate() (nddataset method)": [[108, "spectrochempy.NDDataset.conjugate"]], "coord() (nddataset method)": [[108, "spectrochempy.NDDataset.coord"]], "coordmax() (nddataset method)": [[108, "spectrochempy.NDDataset.coordmax"]], "coordmin() (nddataset method)": [[108, "spectrochempy.NDDataset.coordmin"]], "coordnames (nddataset attribute)": [[108, "spectrochempy.NDDataset.coordnames"]], "coordset (nddataset attribute)": [[108, "spectrochempy.NDDataset.coordset"]], "coordtitles (nddataset attribute)": [[108, "spectrochempy.NDDataset.coordtitles"]], "coordunits (nddataset attribute)": [[108, "spectrochempy.NDDataset.coordunits"]], "copy() (nddataset method)": [[108, "spectrochempy.NDDataset.copy"]], "created (nddataset attribute)": [[108, "spectrochempy.NDDataset.created"]], "cs() (nddataset method)": [[108, "spectrochempy.NDDataset.cs"]], "cumsum() (nddataset method)": [[108, "spectrochempy.NDDataset.cumsum"]], "data (nddataset attribute)": [[108, "spectrochempy.NDDataset.data"]], "dc() (nddataset method)": [[108, "spectrochempy.NDDataset.dc"]], "delete_coordset() (nddataset method)": [[108, "spectrochempy.NDDataset.delete_coordset"]], "denoise() (nddataset method)": [[108, "spectrochempy.NDDataset.denoise"]], "description (nddataset attribute)": [[108, "spectrochempy.NDDataset.description"]], "despike() (nddataset method)": [[108, "spectrochempy.NDDataset.despike"]], "detrend() (nddataset method)": [[108, "spectrochempy.NDDataset.detrend"]], "diag() (nddataset method)": [[108, "spectrochempy.NDDataset.diag"]], "diagonal() (nddataset method)": [[108, "spectrochempy.NDDataset.diagonal"]], "dimensionless (nddataset attribute)": [[108, "spectrochempy.NDDataset.dimensionless"]], "dims (nddataset attribute)": [[108, "spectrochempy.NDDataset.dims"]], "directory (nddataset attribute)": [[108, "spectrochempy.NDDataset.directory"]], "divider (nddataset attribute)": [[108, "spectrochempy.NDDataset.divider"]], "dot() (nddataset method)": [[108, "spectrochempy.NDDataset.dot"]], "download_nist_ir() (nddataset method)": [[108, "spectrochempy.NDDataset.download_nist_ir"]], "dtype (nddataset attribute)": [[108, "spectrochempy.NDDataset.dtype"]], "dump() (nddataset method)": [[108, "spectrochempy.NDDataset.dump"]], "em() (nddataset method)": [[108, "spectrochempy.NDDataset.em"]], "empty() (nddataset method)": [[108, "spectrochempy.NDDataset.empty"]], "empty_like() (nddataset method)": [[108, "spectrochempy.NDDataset.empty_like"]], "eye() (nddataset method)": [[108, "spectrochempy.NDDataset.eye"]], "fft() (nddataset method)": [[108, "spectrochempy.NDDataset.fft"]], "fig (nddataset attribute)": [[108, "spectrochempy.NDDataset.fig"]], "fignum (nddataset attribute)": [[108, "spectrochempy.NDDataset.fignum"]], "filename (nddataset attribute)": [[108, "spectrochempy.NDDataset.filename"]], "filetype (nddataset attribute)": [[108, "spectrochempy.NDDataset.filetype"]], "find_peaks() (nddataset method)": [[108, "spectrochempy.NDDataset.find_peaks"]], "fromfunction() (nddataset method)": [[108, "spectrochempy.NDDataset.fromfunction"]], "fromiter() (nddataset method)": [[108, "spectrochempy.NDDataset.fromiter"]], "fsh() (nddataset method)": [[108, "spectrochempy.NDDataset.fsh"]], "fsh2() (nddataset method)": [[108, "spectrochempy.NDDataset.fsh2"]], "full() (nddataset method)": [[108, "spectrochempy.NDDataset.full"]], "full_like() (nddataset method)": [[108, "spectrochempy.NDDataset.full_like"]], "general_hamming() (nddataset method)": [[108, "spectrochempy.NDDataset.general_hamming"]], "geomspace() (nddataset method)": [[108, "spectrochempy.NDDataset.geomspace"]], "get_axis() (nddataset method)": [[108, "spectrochempy.NDDataset.get_axis"]], "get_baseline() (nddataset method)": [[108, "spectrochempy.NDDataset.get_baseline"]], "get_labels() (nddataset method)": [[108, "spectrochempy.NDDataset.get_labels"]], "gm() (nddataset method)": [[108, "spectrochempy.NDDataset.gm"]], "hamming() (nddataset method)": [[108, "spectrochempy.NDDataset.hamming"]], "hann() (nddataset method)": [[108, "spectrochempy.NDDataset.hann"]], "has_complex_dims (nddataset attribute)": [[108, "spectrochempy.NDDataset.has_complex_dims"]], "has_data (nddataset attribute)": [[108, "spectrochempy.NDDataset.has_data"]], "has_defined_name (nddataset attribute)": [[108, "spectrochempy.NDDataset.has_defined_name"]], "has_units (nddataset attribute)": [[108, "spectrochempy.NDDataset.has_units"]], "history (nddataset attribute)": [[108, "spectrochempy.NDDataset.history"]], "ht() (nddataset method)": [[108, "spectrochempy.NDDataset.ht"]], "id (nddataset attribute)": [[108, "spectrochempy.NDDataset.id"]], "identity() (nddataset method)": [[108, "spectrochempy.NDDataset.identity"]], "ifft() (nddataset method)": [[108, "spectrochempy.NDDataset.ifft"]], "imag (nddataset attribute)": [[108, "spectrochempy.NDDataset.imag"]], "is_1d (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_1d"]], "is_complex (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_complex"]], "is_empty (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_empty"]], "is_float (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_float"]], "is_integer (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_integer"]], "is_interleaved (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_interleaved"]], "is_labeled (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_labeled"]], "is_masked (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_masked"]], "is_quaternion (nddataset attribute)": [[108, "spectrochempy.NDDataset.is_quaternion"]], "is_units_compatible() (nddataset method)": [[108, "spectrochempy.NDDataset.is_units_compatible"]], "ito() (nddataset method)": [[108, "spectrochempy.NDDataset.ito"]], "ito_base_units() (nddataset method)": [[108, "spectrochempy.NDDataset.ito_base_units"]], "ito_reduced_units() (nddataset method)": [[108, "spectrochempy.NDDataset.ito_reduced_units"]], "labels (nddataset attribute)": [[108, "spectrochempy.NDDataset.labels"]], "limits (nddataset attribute)": [[108, "spectrochempy.NDDataset.limits"]], "linspace() (nddataset method)": [[108, "spectrochempy.NDDataset.linspace"]], "load() (nddataset class method)": [[108, "spectrochempy.NDDataset.load"]], "load_iris() (nddataset method)": [[108, "spectrochempy.NDDataset.load_iris"]], "local_timezone (nddataset attribute)": [[108, "spectrochempy.NDDataset.local_timezone"]], "logspace() (nddataset method)": [[108, "spectrochempy.NDDataset.logspace"]], "ls() (nddataset method)": [[108, "spectrochempy.NDDataset.ls"]], "m (nddataset attribute)": [[108, "spectrochempy.NDDataset.m"]], "magnitude (nddataset attribute)": [[108, "spectrochempy.NDDataset.magnitude"]], "mask (nddataset attribute)": [[108, "spectrochempy.NDDataset.mask"]], "masked_data (nddataset attribute)": [[108, "spectrochempy.NDDataset.masked_data"]], "max() (nddataset method)": [[108, "spectrochempy.NDDataset.max"]], "mc() (nddataset method)": [[108, "spectrochempy.NDDataset.mc"]], "mean() (nddataset method)": [[108, "spectrochempy.NDDataset.mean"]], "meta (nddataset attribute)": [[108, "spectrochempy.NDDataset.meta"]], "min() (nddataset method)": [[108, "spectrochempy.NDDataset.min"]], "modeldata (nddataset attribute)": [[108, "spectrochempy.NDDataset.modeldata"]], "modified (nddataset attribute)": [[108, "spectrochempy.NDDataset.modified"]], "name (nddataset attribute)": [[108, "spectrochempy.NDDataset.name"]], "ndaxes (nddataset attribute)": [[108, "spectrochempy.NDDataset.ndaxes"]], "ndim (nddataset attribute)": [[108, "spectrochempy.NDDataset.ndim"]], "ones() (nddataset method)": [[108, "spectrochempy.NDDataset.ones"]], "ones_like() (nddataset method)": [[108, "spectrochempy.NDDataset.ones_like"]], "origin (nddataset attribute)": [[108, "spectrochempy.NDDataset.origin"]], "parent (nddataset attribute)": [[108, "spectrochempy.NDDataset.parent"]], "pipe() (nddataset method)": [[108, "spectrochempy.NDDataset.pipe"]], "pk() (nddataset method)": [[108, "spectrochempy.NDDataset.pk"]], "pk_exp() (nddataset method)": [[108, "spectrochempy.NDDataset.pk_exp"]], "plot() (nddataset method)": [[108, "spectrochempy.NDDataset.plot"]], "plot_1d() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_1D"]], "plot_2d() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_2D"]], "plot_3d() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_3D"]], "plot_bar() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_bar"]], "plot_image() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_image"]], "plot_map() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_map"]], "plot_multiple() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_multiple"]], "plot_pen() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_pen"]], "plot_scatter() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_scatter"]], "plot_scatter_pen() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_scatter_pen"]], "plot_stack() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_stack"]], "plot_surface() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_surface"]], "plot_waterfall() (nddataset method)": [[108, "spectrochempy.NDDataset.plot_waterfall"]], "preferences (nddataset attribute)": [[108, "spectrochempy.NDDataset.preferences"]], "ps() (nddataset method)": [[108, "spectrochempy.NDDataset.ps"]], "ptp() (nddataset method)": [[108, "spectrochempy.NDDataset.ptp"]], "qsin() (nddataset method)": [[108, "spectrochempy.NDDataset.qsin"]], "random() (nddataset method)": [[108, "spectrochempy.NDDataset.random"]], "read() (nddataset method)": [[108, "spectrochempy.NDDataset.read"]], "read_carroucell() (nddataset method)": [[108, "spectrochempy.NDDataset.read_carroucell"]], "read_csv() (nddataset method)": [[108, "spectrochempy.NDDataset.read_csv"]], "read_ddr() (nddataset method)": [[108, "spectrochempy.NDDataset.read_ddr"]], "read_dir() (nddataset method)": [[108, "spectrochempy.NDDataset.read_dir"]], "read_hdr() (nddataset method)": [[108, "spectrochempy.NDDataset.read_hdr"]], "read_jcamp() (nddataset method)": [[108, "spectrochempy.NDDataset.read_jcamp"]], "read_labspec() (nddataset method)": [[108, "spectrochempy.NDDataset.read_labspec"]], "read_mat() (nddataset method)": [[108, "spectrochempy.NDDataset.read_mat"]], "read_matlab() (nddataset method)": [[108, "spectrochempy.NDDataset.read_matlab"]], "read_omnic() (nddataset method)": [[108, "spectrochempy.NDDataset.read_omnic"]], "read_opus() (nddataset method)": [[108, "spectrochempy.NDDataset.read_opus"]], "read_quadera() (nddataset method)": [[108, "spectrochempy.NDDataset.read_quadera"]], "read_sdr() (nddataset method)": [[108, "spectrochempy.NDDataset.read_sdr"]], "read_soc() (nddataset method)": [[108, "spectrochempy.NDDataset.read_soc"]], "read_spa() (nddataset method)": [[108, "spectrochempy.NDDataset.read_spa"]], "read_spc() (nddataset method)": [[108, "spectrochempy.NDDataset.read_spc"]], "read_spg() (nddataset method)": [[108, "spectrochempy.NDDataset.read_spg"]], "read_srs() (nddataset method)": [[108, "spectrochempy.NDDataset.read_srs"]], "read_topspin() (nddataset method)": [[108, "spectrochempy.NDDataset.read_topspin"]], "read_wdf() (nddataset method)": [[108, "spectrochempy.NDDataset.read_wdf"]], "read_wire() (nddataset method)": [[108, "spectrochempy.NDDataset.read_wire"]], "read_zip() (nddataset method)": [[108, "spectrochempy.NDDataset.read_zip"]], "real (nddataset attribute)": [[108, "spectrochempy.NDDataset.real"]], "remove_masks() (nddataset method)": [[108, "spectrochempy.NDDataset.remove_masks"]], "roi (nddataset attribute)": [[108, "spectrochempy.NDDataset.roi"]], "roll() (nddataset method)": [[108, "spectrochempy.NDDataset.roll"]], "round() (nddataset method)": [[108, "spectrochempy.NDDataset.round"]], "round_() (nddataset method)": [[108, "spectrochempy.NDDataset.round_"]], "rs() (nddataset method)": [[108, "spectrochempy.NDDataset.rs"]], "rubberband() (nddataset method)": [[108, "spectrochempy.NDDataset.rubberband"]], "save() (nddataset method)": [[108, "spectrochempy.NDDataset.save"]], "save_as() (nddataset method)": [[108, "spectrochempy.NDDataset.save_as"]], "savgol() (nddataset method)": [[108, "spectrochempy.NDDataset.savgol"]], "savgol_filter() (nddataset method)": [[108, "spectrochempy.NDDataset.savgol_filter"]], "set_complex() (nddataset method)": [[108, "spectrochempy.NDDataset.set_complex"]], "set_coordset() (nddataset method)": [[108, "spectrochempy.NDDataset.set_coordset"]], "set_coordtitles() (nddataset method)": [[108, "spectrochempy.NDDataset.set_coordtitles"]], "set_coordunits() (nddataset method)": [[108, "spectrochempy.NDDataset.set_coordunits"]], "set_hypercomplex() (nddataset method)": [[108, "spectrochempy.NDDataset.set_hypercomplex"]], "set_quaternion() (nddataset method)": [[108, "spectrochempy.NDDataset.set_quaternion"]], "shape (nddataset attribute)": [[108, "spectrochempy.NDDataset.shape"]], "simps() (nddataset method)": [[108, "spectrochempy.NDDataset.simps"]], "simpson() (nddataset method)": [[108, "spectrochempy.NDDataset.simpson"]], "sine() (nddataset method)": [[108, "spectrochempy.NDDataset.sine"]], "sinm() (nddataset method)": [[108, "spectrochempy.NDDataset.sinm"]], "size (nddataset attribute)": [[108, "spectrochempy.NDDataset.size"]], "smooth() (nddataset method)": [[108, "spectrochempy.NDDataset.smooth"]], "snip() (nddataset method)": [[108, "spectrochempy.NDDataset.snip"]], "sort() (nddataset method)": [[108, "spectrochempy.NDDataset.sort"]], "sp() (nddataset method)": [[108, "spectrochempy.NDDataset.sp"]], "squeeze() (nddataset method)": [[108, "spectrochempy.NDDataset.squeeze"]], "stack() (nddataset method)": [[108, "spectrochempy.NDDataset.stack"]], "std() (nddataset method)": [[108, "spectrochempy.NDDataset.std"]], "suffix (nddataset attribute)": [[108, "spectrochempy.NDDataset.suffix"]], "sum() (nddataset method)": [[108, "spectrochempy.NDDataset.sum"]], "swapaxes() (nddataset method)": [[108, "spectrochempy.NDDataset.swapaxes"]], "swapdims() (nddataset method)": [[108, "spectrochempy.NDDataset.swapdims"]], "take() (nddataset method)": [[108, "spectrochempy.NDDataset.take"]], "timezone (nddataset attribute)": [[108, "spectrochempy.NDDataset.timezone"]], "title (nddataset attribute)": [[108, "spectrochempy.NDDataset.title"]], "to() (nddataset method)": [[108, "spectrochempy.NDDataset.to"]], "to_array() (nddataset method)": [[108, "spectrochempy.NDDataset.to_array"]], "to_base_units() (nddataset method)": [[108, "spectrochempy.NDDataset.to_base_units"]], "to_reduced_units() (nddataset method)": [[108, "spectrochempy.NDDataset.to_reduced_units"]], "to_xarray() (nddataset method)": [[108, "spectrochempy.NDDataset.to_xarray"]], "transpose() (nddataset method)": [[108, "spectrochempy.NDDataset.transpose"]], "trapezoid() (nddataset method)": [[108, "spectrochempy.NDDataset.trapezoid"]], "trapz() (nddataset method)": [[108, "spectrochempy.NDDataset.trapz"]], "triang() (nddataset method)": [[108, "spectrochempy.NDDataset.triang"]], "umasked_data (nddataset attribute)": [[108, "spectrochempy.NDDataset.umasked_data"]], "unitless (nddataset attribute)": [[108, "spectrochempy.NDDataset.unitless"]], "units (nddataset attribute)": [[108, "spectrochempy.NDDataset.units"]], "value (nddataset attribute)": [[108, "spectrochempy.NDDataset.value"]], "values (nddataset attribute)": [[108, "spectrochempy.NDDataset.values"]], "var() (nddataset method)": [[108, "spectrochempy.NDDataset.var"]], "whittaker() (nddataset method)": [[108, "spectrochempy.NDDataset.whittaker"]], "write() (nddataset method)": [[108, "spectrochempy.NDDataset.write"]], "write_csv() (nddataset method)": [[108, "spectrochempy.NDDataset.write_csv"]], "write_excel() (nddataset method)": [[108, "spectrochempy.NDDataset.write_excel"]], "write_jcamp() (nddataset method)": [[108, "spectrochempy.NDDataset.write_jcamp"]], "write_mat() (nddataset method)": [[108, "spectrochempy.NDDataset.write_mat"]], "write_matlab() (nddataset method)": [[108, "spectrochempy.NDDataset.write_matlab"]], "write_xls() (nddataset method)": [[108, "spectrochempy.NDDataset.write_xls"]], "zeros() (nddataset method)": [[108, "spectrochempy.NDDataset.zeros"]], "zeros_like() (nddataset method)": [[108, "spectrochempy.NDDataset.zeros_like"]], "zf() (nddataset method)": [[108, "spectrochempy.NDDataset.zf"]], "zf_auto() (nddataset method)": [[108, "spectrochempy.NDDataset.zf_auto"]], "zf_double() (nddataset method)": [[108, "spectrochempy.NDDataset.zf_double"]], "zf_size() (nddataset method)": [[108, "spectrochempy.NDDataset.zf_size"]], "nmf (class in spectrochempy)": [[111, "spectrochempy.NMF"]], "x (nmf attribute)": [[111, "spectrochempy.NMF.X"]], "y (nmf attribute)": [[111, "spectrochempy.NMF.Y"]], "alpha_h (nmf attribute)": [[111, "spectrochempy.NMF.alpha_H"]], "alpha_w (nmf attribute)": [[111, "spectrochempy.NMF.alpha_W"]], "beta_loss (nmf attribute)": [[111, "spectrochempy.NMF.beta_loss"]], "components (nmf attribute)": [[111, "spectrochempy.NMF.components"]], "config (nmf attribute)": [[111, "spectrochempy.NMF.config"]], "fit() (nmf method)": [[111, "spectrochempy.NMF.fit"]], "fit_transform() (nmf method)": [[111, "spectrochempy.NMF.fit_transform"]], "get_components() (nmf method)": [[111, "spectrochempy.NMF.get_components"]], "init (nmf attribute)": [[111, "spectrochempy.NMF.init"]], "inverse_transform() (nmf method)": [[111, "spectrochempy.NMF.inverse_transform"]], "l1_ratio (nmf attribute)": [[111, "spectrochempy.NMF.l1_ratio"]], "log (nmf attribute)": [[111, "spectrochempy.NMF.log"]], "max_iter (nmf attribute)": [[111, "spectrochempy.NMF.max_iter"]], "n_components (nmf attribute)": [[111, "spectrochempy.NMF.n_components"]], "name (nmf attribute)": [[111, "spectrochempy.NMF.name"]], "parameters() (nmf method)": [[111, "spectrochempy.NMF.parameters"]], "params() (nmf method)": [[111, "spectrochempy.NMF.params"]], "plotmerit() (nmf method)": [[111, "spectrochempy.NMF.plotmerit"]], "random_state (nmf attribute)": [[111, "spectrochempy.NMF.random_state"]], "reconstruct() (nmf method)": [[111, "spectrochempy.NMF.reconstruct"]], "reduce() (nmf method)": [[111, "spectrochempy.NMF.reduce"]], "reset() (nmf method)": [[111, "spectrochempy.NMF.reset"]], "shuffle (nmf attribute)": [[111, "spectrochempy.NMF.shuffle"]], "solver (nmf attribute)": [[111, "spectrochempy.NMF.solver"]], "to_dict() (nmf method)": [[111, "spectrochempy.NMF.to_dict"]], "tol (nmf attribute)": [[111, "spectrochempy.NMF.tol"]], "transform() (nmf method)": [[111, "spectrochempy.NMF.transform"]], "nnls (class in spectrochempy)": [[112, "spectrochempy.NNLS"]], "x (nnls attribute)": [[112, "spectrochempy.NNLS.X"]], "y (nnls attribute)": [[112, "spectrochempy.NNLS.Y"]], "coef (nnls attribute)": [[112, "spectrochempy.NNLS.coef"]], "config (nnls attribute)": [[112, "spectrochempy.NNLS.config"]], "description (nnls attribute)": [[112, "spectrochempy.NNLS.description"]], "fit() (nnls method)": [[112, "spectrochempy.NNLS.fit"]], "fit_intercept (nnls attribute)": [[112, "spectrochempy.NNLS.fit_intercept"]], "intercept (nnls attribute)": [[112, "spectrochempy.NNLS.intercept"]], "log (nnls attribute)": [[112, "spectrochempy.NNLS.log"]], "name (nnls attribute)": [[112, "spectrochempy.NNLS.name"]], "parameters() (nnls method)": [[112, "spectrochempy.NNLS.parameters"]], "params() (nnls method)": [[112, "spectrochempy.NNLS.params"]], "positive (nnls attribute)": [[112, "spectrochempy.NNLS.positive"]], "predict() (nnls method)": [[112, "spectrochempy.NNLS.predict"]], "reset() (nnls method)": [[112, "spectrochempy.NNLS.reset"]], "score() (nnls method)": [[112, "spectrochempy.NNLS.score"]], "to_dict() (nnls method)": [[112, "spectrochempy.NNLS.to_dict"]], "optimize (class in spectrochempy)": [[113, "spectrochempy.Optimize"]], "x (optimize attribute)": [[113, "spectrochempy.Optimize.X"]], "y (optimize attribute)": [[113, "spectrochempy.Optimize.Y"]], "amplitude_mode (optimize attribute)": [[113, "spectrochempy.Optimize.amplitude_mode"]], "autoampl (optimize attribute)": [[113, "spectrochempy.Optimize.autoampl"]], "autobase (optimize attribute)": [[113, "spectrochempy.Optimize.autobase"]], "callback_every (optimize attribute)": [[113, "spectrochempy.Optimize.callback_every"]], "components (optimize attribute)": [[113, "spectrochempy.Optimize.components"]], "config (optimize attribute)": [[113, "spectrochempy.Optimize.config"]], "constraints (optimize attribute)": [[113, "spectrochempy.Optimize.constraints"]], "dry (optimize attribute)": [[113, "spectrochempy.Optimize.dry"]], "fit() (optimize method)": [[113, "spectrochempy.Optimize.fit"]], "fit_transform() (optimize method)": [[113, "spectrochempy.Optimize.fit_transform"]], "fp (optimize attribute)": [[113, "spectrochempy.Optimize.fp"]], "get_components() (optimize method)": [[113, "spectrochempy.Optimize.get_components"]], "inverse_transform() (optimize method)": [[113, "spectrochempy.Optimize.inverse_transform"]], "log (optimize attribute)": [[113, "spectrochempy.Optimize.log"]], "max_fun_calls (optimize attribute)": [[113, "spectrochempy.Optimize.max_fun_calls"]], "max_iter (optimize attribute)": [[113, "spectrochempy.Optimize.max_iter"]], "method (optimize attribute)": [[113, "spectrochempy.Optimize.method"]], "modeldata (optimize attribute)": [[113, "spectrochempy.Optimize.modeldata"]], "n_components (optimize attribute)": [[113, "spectrochempy.Optimize.n_components"]], "name (optimize attribute)": [[113, "spectrochempy.Optimize.name"]], "parameters() (optimize method)": [[113, "spectrochempy.Optimize.parameters"]], "params() (optimize method)": [[113, "spectrochempy.Optimize.params"]], "plotmerit() (optimize method)": [[113, "spectrochempy.Optimize.plotmerit"]], "predict() (optimize method)": [[113, "spectrochempy.Optimize.predict"]], "reconstruct() (optimize method)": [[113, "spectrochempy.Optimize.reconstruct"]], "reduce() (optimize method)": [[113, "spectrochempy.Optimize.reduce"]], "reset() (optimize method)": [[113, "spectrochempy.Optimize.reset"]], "script (optimize attribute)": [[113, "spectrochempy.Optimize.script"]], "to_dict() (optimize method)": [[113, "spectrochempy.Optimize.to_dict"]], "transform() (optimize method)": [[113, "spectrochempy.Optimize.transform"]], "usermodels (optimize attribute)": [[113, "spectrochempy.Optimize.usermodels"]], "pca (class in spectrochempy)": [[114, "spectrochempy.PCA"]], "x (pca attribute)": [[114, "spectrochempy.PCA.X"]], "y (pca attribute)": [[114, "spectrochempy.PCA.Y"]], "components (pca attribute)": [[114, "spectrochempy.PCA.components"]], "config (pca attribute)": [[114, "spectrochempy.PCA.config"]], "fit() (pca method)": [[114, "spectrochempy.PCA.fit"]], "fit_transform() (pca method)": [[114, "spectrochempy.PCA.fit_transform"]], "get_components() (pca method)": [[114, "spectrochempy.PCA.get_components"]], "inverse_transform() (pca method)": [[114, "spectrochempy.PCA.inverse_transform"]], "iterated_power (pca attribute)": [[114, "spectrochempy.PCA.iterated_power"]], "loadings (pca attribute)": [[114, "spectrochempy.PCA.loadings"]], "log (pca attribute)": [[114, "spectrochempy.PCA.log"]], "n_components (pca attribute)": [[114, "spectrochempy.PCA.n_components"]], "n_oversamples (pca attribute)": [[114, "spectrochempy.PCA.n_oversamples"]], "name (pca attribute)": [[114, "spectrochempy.PCA.name"]], "parameters() (pca method)": [[114, "spectrochempy.PCA.parameters"]], "params() (pca method)": [[114, "spectrochempy.PCA.params"]], "plotmerit() (pca method)": [[114, "spectrochempy.PCA.plotmerit"]], "power_iteration_normalizer (pca attribute)": [[114, "spectrochempy.PCA.power_iteration_normalizer"]], "printev() (pca method)": [[114, "spectrochempy.PCA.printev"]], "random_state (pca attribute)": [[114, "spectrochempy.PCA.random_state"]], "reconstruct() (pca method)": [[114, "spectrochempy.PCA.reconstruct"]], "reduce() (pca method)": [[114, "spectrochempy.PCA.reduce"]], "reset() (pca method)": [[114, "spectrochempy.PCA.reset"]], "scaled (pca attribute)": [[114, "spectrochempy.PCA.scaled"]], "scoreplot() (pca method)": [[114, "spectrochempy.PCA.scoreplot"]], "scores (pca attribute)": [[114, "spectrochempy.PCA.scores"]], "screeplot() (pca method)": [[114, "spectrochempy.PCA.screeplot"]], "standardized (pca attribute)": [[114, "spectrochempy.PCA.standardized"]], "svd_solver (pca attribute)": [[114, "spectrochempy.PCA.svd_solver"]], "to_dict() (pca method)": [[114, "spectrochempy.PCA.to_dict"]], "tol (pca attribute)": [[114, "spectrochempy.PCA.tol"]], "transform() (pca method)": [[114, "spectrochempy.PCA.transform"]], "whiten (pca attribute)": [[114, "spectrochempy.PCA.whiten"]], "pfr (class in spectrochempy)": [[115, "spectrochempy.PFR"]], "fit_to_gas_concentrations() (pfr method)": [[115, "spectrochempy.PFR.fit_to_gas_concentrations"]], "plsregression (class in spectrochempy)": [[116, "spectrochempy.PLSRegression"]], "x (plsregression attribute)": [[116, "spectrochempy.PLSRegression.X"]], "y (plsregression attribute)": [[116, "spectrochempy.PLSRegression.Y"]], "components (plsregression attribute)": [[116, "spectrochempy.PLSRegression.components"]], "config (plsregression attribute)": [[116, "spectrochempy.PLSRegression.config"]], "fit() (plsregression method)": [[116, "spectrochempy.PLSRegression.fit"]], "fit_transform() (plsregression method)": [[116, "spectrochempy.PLSRegression.fit_transform"]], "get_components() (plsregression method)": [[116, "spectrochempy.PLSRegression.get_components"]], "inverse_transform() (plsregression method)": [[116, "spectrochempy.PLSRegression.inverse_transform"]], "log (plsregression attribute)": [[116, "spectrochempy.PLSRegression.log"]], "max_iter (plsregression attribute)": [[116, "spectrochempy.PLSRegression.max_iter"]], "n_components (plsregression attribute)": [[116, "spectrochempy.PLSRegression.n_components"]], "name (plsregression attribute)": [[116, "spectrochempy.PLSRegression.name"]], "parameters() (plsregression method)": [[116, "spectrochempy.PLSRegression.parameters"]], "params() (plsregression method)": [[116, "spectrochempy.PLSRegression.params"]], "parityplot() (plsregression method)": [[116, "spectrochempy.PLSRegression.parityplot"]], "plotmerit() (plsregression method)": [[116, "spectrochempy.PLSRegression.plotmerit"]], "predict() (plsregression method)": [[116, "spectrochempy.PLSRegression.predict"]], "reconstruct() (plsregression method)": [[116, "spectrochempy.PLSRegression.reconstruct"]], "reduce() (plsregression method)": [[116, "spectrochempy.PLSRegression.reduce"]], "reset() (plsregression method)": [[116, "spectrochempy.PLSRegression.reset"]], "scale (plsregression attribute)": [[116, "spectrochempy.PLSRegression.scale"]], "score() (plsregression method)": [[116, "spectrochempy.PLSRegression.score"]], "to_dict() (plsregression method)": [[116, "spectrochempy.PLSRegression.to_dict"]], "tol (plsregression attribute)": [[116, "spectrochempy.PLSRegression.tol"]], "transform() (plsregression method)": [[116, "spectrochempy.PLSRegression.transform"]], "project (class in spectrochempy)": [[117, "spectrochempy.Project"]], "add_dataset() (project method)": [[117, "spectrochempy.Project.add_dataset"]], "add_datasets() (project method)": [[117, "spectrochempy.Project.add_datasets"]], "add_project() (project method)": [[117, "spectrochempy.Project.add_project"]], "add_projects() (project method)": [[117, "spectrochempy.Project.add_projects"]], "add_script() (project method)": [[117, "spectrochempy.Project.add_script"]], "add_scripts() (project method)": [[117, "spectrochempy.Project.add_scripts"]], "allitems (project attribute)": [[117, "spectrochempy.Project.allitems"]], "allnames (project attribute)": [[117, "spectrochempy.Project.allnames"]], "copy() (project method)": [[117, "spectrochempy.Project.copy"]], "datasets (project attribute)": [[117, "spectrochempy.Project.datasets"]], "datasets_names (project attribute)": [[117, "spectrochempy.Project.datasets_names"]], "dump() (project method)": [[117, "spectrochempy.Project.dump"]], "filename (project attribute)": [[117, "spectrochempy.Project.filename"]], "filetype (project attribute)": [[117, "spectrochempy.Project.filetype"]], "id (project attribute)": [[117, "spectrochempy.Project.id"]], "load() (project class method)": [[117, "spectrochempy.Project.load"]], "meta (project attribute)": [[117, "spectrochempy.Project.meta"]], "name (project attribute)": [[117, "spectrochempy.Project.name"]], "parent (project attribute)": [[117, "spectrochempy.Project.parent"]], "projects (project attribute)": [[117, "spectrochempy.Project.projects"]], "projects_names (project attribute)": [[117, "spectrochempy.Project.projects_names"]], "remove_all_dataset() (project method)": [[117, "spectrochempy.Project.remove_all_dataset"]], "remove_all_project() (project method)": [[117, "spectrochempy.Project.remove_all_project"]], "remove_dataset() (project method)": [[117, "spectrochempy.Project.remove_dataset"]], "remove_project() (project method)": [[117, "spectrochempy.Project.remove_project"]], "save() (project method)": [[117, "spectrochempy.Project.save"]], "save_as() (project method)": [[117, "spectrochempy.Project.save_as"]], "scripts (project attribute)": [[117, "spectrochempy.Project.scripts"]], "scripts_names (project attribute)": [[117, "spectrochempy.Project.scripts_names"]], "suffix (project attribute)": [[117, "spectrochempy.Project.suffix"]], "quantity (class in spectrochempy)": [[118, "spectrochempy.Quantity"]], "check() (quantity method)": [[118, "spectrochempy.Quantity.check"]], "compute() (quantity method)": [[118, "spectrochempy.Quantity.compute"]], "default_format (quantity attribute)": [[118, "spectrochempy.Quantity.default_format"]], "dimensionality (quantity attribute)": [[118, "spectrochempy.Quantity.dimensionality"]], "dimensionless (quantity attribute)": [[118, "spectrochempy.Quantity.dimensionless"]], "dot() (quantity method)": [[118, "spectrochempy.Quantity.dot"]], "from_list() (quantity class method)": [[118, "spectrochempy.Quantity.from_list"]], "from_sequence() (quantity class method)": [[118, "spectrochempy.Quantity.from_sequence"]], "is_compatible_with() (quantity method)": [[118, "spectrochempy.Quantity.is_compatible_with"]], "ito() (quantity method)": [[118, "spectrochempy.Quantity.ito"]], "ito_base_units() (quantity method)": [[118, "spectrochempy.Quantity.ito_base_units"]], "ito_preferred() (quantity method)": [[118, "spectrochempy.Quantity.ito_preferred"]], "ito_reduced_units() (quantity method)": [[118, "spectrochempy.Quantity.ito_reduced_units"]], "ito_root_units() (quantity method)": [[118, "spectrochempy.Quantity.ito_root_units"]], "m (quantity attribute)": [[118, "spectrochempy.Quantity.m"]], "m_as() (quantity method)": [[118, "spectrochempy.Quantity.m_as"]], "magnitude (quantity attribute)": [[118, "spectrochempy.Quantity.magnitude"]], "persist() (quantity method)": [[118, "spectrochempy.Quantity.persist"]], "prod() (quantity method)": [[118, "spectrochempy.Quantity.prod"]], "to() (quantity method)": [[118, "spectrochempy.Quantity.to"]], "to_base_units() (quantity method)": [[118, "spectrochempy.Quantity.to_base_units"]], "to_compact() (quantity method)": [[118, "spectrochempy.Quantity.to_compact"]], "to_preferred() (quantity method)": [[118, "spectrochempy.Quantity.to_preferred"]], "to_reduced_units() (quantity method)": [[118, "spectrochempy.Quantity.to_reduced_units"]], "to_root_units() (quantity method)": [[118, "spectrochempy.Quantity.to_root_units"]], "u (quantity attribute)": [[118, "spectrochempy.Quantity.u"]], "unit_items() (quantity method)": [[118, "spectrochempy.Quantity.unit_items"]], "unitless (quantity attribute)": [[118, "spectrochempy.Quantity.unitless"]], "units (quantity attribute)": [[118, "spectrochempy.Quantity.units"]], "visualize() (quantity method)": [[118, "spectrochempy.Quantity.visualize"]], "ri (in module spectrochempy)": [[119, "spectrochempy.RI"]], "rr (in module spectrochempy)": [[120, "spectrochempy.RR"]], "c (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.C"]], "pt (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.Pt"]], "simplisma (class in spectrochempy)": [[121, "spectrochempy.SIMPLISMA"]], "st (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.St"]], "x (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.X"]], "y (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.Y"]], "components (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.components"]], "config (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.config"]], "fit() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.fit"]], "fit_transform() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.fit_transform"]], "get_components() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.get_components"]], "interactive (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.interactive"]], "inverse_transform() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.inverse_transform"]], "log (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.log"]], "n_components (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.n_components"]], "name (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.name"]], "noise (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.noise"]], "parameters() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.parameters"]], "params() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.params"]], "plotmerit() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.plotmerit"]], "reconstruct() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.reconstruct"]], "reduce() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.reduce"]], "reset() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.reset"]], "s (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.s"]], "to_dict() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.to_dict"]], "tol (simplisma attribute)": [[121, "spectrochempy.SIMPLISMA.tol"]], "transform() (simplisma method)": [[121, "spectrochempy.SIMPLISMA.transform"]], "svd (class in spectrochempy)": [[122, "spectrochempy.SVD"]], "u (svd attribute)": [[122, "spectrochempy.SVD.U"]], "vt (svd attribute)": [[122, "spectrochempy.SVD.VT"]], "x (svd attribute)": [[122, "spectrochempy.SVD.X"]], "y (svd attribute)": [[122, "spectrochempy.SVD.Y"]], "components (svd attribute)": [[122, "spectrochempy.SVD.components"]], "compute_uv (svd attribute)": [[122, "spectrochempy.SVD.compute_uv"]], "config (svd attribute)": [[122, "spectrochempy.SVD.config"]], "cumulative_explained_variance (svd attribute)": [[122, "spectrochempy.SVD.cumulative_explained_variance"]], "ev (svd attribute)": [[122, "spectrochempy.SVD.ev"]], "ev_cum (svd attribute)": [[122, "spectrochempy.SVD.ev_cum"]], "ev_ratio (svd attribute)": [[122, "spectrochempy.SVD.ev_ratio"]], "explained_variance (svd attribute)": [[122, "spectrochempy.SVD.explained_variance"]], "explained_variance_ratio (svd attribute)": [[122, "spectrochempy.SVD.explained_variance_ratio"]], "fit() (svd method)": [[122, "spectrochempy.SVD.fit"]], "fit_transform() (svd method)": [[122, "spectrochempy.SVD.fit_transform"]], "full_matrices (svd attribute)": [[122, "spectrochempy.SVD.full_matrices"]], "get_components() (svd method)": [[122, "spectrochempy.SVD.get_components"]], "inverse_transform() (svd method)": [[122, "spectrochempy.SVD.inverse_transform"]], "log (svd attribute)": [[122, "spectrochempy.SVD.log"]], "n_components (svd attribute)": [[122, "spectrochempy.SVD.n_components"]], "name (svd attribute)": [[122, "spectrochempy.SVD.name"]], "parameters() (svd method)": [[122, "spectrochempy.SVD.parameters"]], "params() (svd method)": [[122, "spectrochempy.SVD.params"]], "plotmerit() (svd method)": [[122, "spectrochempy.SVD.plotmerit"]], "reconstruct() (svd method)": [[122, "spectrochempy.SVD.reconstruct"]], "reduce() (svd method)": [[122, "spectrochempy.SVD.reduce"]], "reset() (svd method)": [[122, "spectrochempy.SVD.reset"]], "s (svd attribute)": [[122, "spectrochempy.SVD.s"]], "singular_values (svd attribute)": [[122, "spectrochempy.SVD.singular_values"]], "sv (svd attribute)": [[122, "spectrochempy.SVD.sv"]], "to_dict() (svd method)": [[122, "spectrochempy.SVD.to_dict"]], "transform() (svd method)": [[122, "spectrochempy.SVD.transform"]], "script (class in spectrochempy)": [[123, "spectrochempy.Script"]], "unit (class in spectrochempy)": [[124, "spectrochempy.Unit"]], "default_format (unit attribute)": [[124, "spectrochempy.Unit.default_format"]], "dimensionality (unit attribute)": [[124, "spectrochempy.Unit.dimensionality"]], "dimensionless (unit attribute)": [[124, "spectrochempy.Unit.dimensionless"]], "from_() (unit method)": [[124, "spectrochempy.Unit.from_"]], "is_compatible_with() (unit method)": [[124, "spectrochempy.Unit.is_compatible_with"]], "m_from() (unit method)": [[124, "spectrochempy.Unit.m_from"]], "abs() (in module spectrochempy)": [[125, "spectrochempy.abs"]], "absolute() (in module spectrochempy)": [[126, "spectrochempy.absolute"]], "align() (in module spectrochempy)": [[127, "spectrochempy.align"]], "all() (in module spectrochempy)": [[128, "spectrochempy.all"]], "amax() (in module spectrochempy)": [[129, "spectrochempy.amax"]], "amin() (in module spectrochempy)": [[130, "spectrochempy.amin"]], "any() (in module spectrochempy)": [[131, "spectrochempy.any"]], "arange() (in module spectrochempy)": [[132, "spectrochempy.arange"]], "argmax() (in module spectrochempy)": [[133, "spectrochempy.argmax"]], "argmin() (in module spectrochempy)": [[134, "spectrochempy.argmin"]], "around() (in module spectrochempy)": [[135, "spectrochempy.around"]], "asls() (in module spectrochempy)": [[136, "spectrochempy.asls"]], "args (asymmetricvoigtmodel attribute)": [[137, "spectrochempy.asymmetricvoigtmodel.args"]], "asymmetricvoigtmodel (class in spectrochempy)": [[137, "spectrochempy.asymmetricvoigtmodel"]], "script (asymmetricvoigtmodel attribute)": [[137, "spectrochempy.asymmetricvoigtmodel.script"]], "type (asymmetricvoigtmodel attribute)": [[137, "spectrochempy.asymmetricvoigtmodel.type"]], "autosub() (in module spectrochempy)": [[138, "spectrochempy.autosub"]], "average() (in module spectrochempy)": [[139, "spectrochempy.average"]], "bartlett() (in module spectrochempy)": [[140, "spectrochempy.bartlett"]], "basc() (in module spectrochempy)": [[141, "spectrochempy.basc"]], "blackmanharris() (in module spectrochempy)": [[142, "spectrochempy.blackmanharris"]], "clip() (in module spectrochempy)": [[143, "spectrochempy.clip"]], "component() (in module spectrochempy)": [[144, "spectrochempy.component"]], "concatenate() (in module spectrochempy)": [[145, "spectrochempy.concatenate"]], "conj() (in module spectrochempy)": [[146, "spectrochempy.conj"]], "conjugate() (in module spectrochempy)": [[147, "spectrochempy.conjugate"]], "coordmax() (in module spectrochempy)": [[148, "spectrochempy.coordmax"]], "coordmin() (in module spectrochempy)": [[149, "spectrochempy.coordmin"]], "copy() (in module spectrochempy)": [[150, "spectrochempy.copy"]], "cs() (in module spectrochempy)": [[151, "spectrochempy.cs"]], "cumsum() (in module spectrochempy)": [[152, "spectrochempy.cumsum"]], "dc() (in module spectrochempy)": [[153, "spectrochempy.dc"]], "debug_() (in module spectrochempy)": [[154, "spectrochempy.debug_"]], "denoise() (in module spectrochempy)": [[155, "spectrochempy.denoise"]], "despike() (in module spectrochempy)": [[156, "spectrochempy.despike"]], "detrend() (in module spectrochempy)": [[157, "spectrochempy.detrend"]], "diag() (in module spectrochempy)": [[158, "spectrochempy.diag"]], "diagonal() (in module spectrochempy)": [[159, "spectrochempy.diagonal"]], "dot() (in module spectrochempy)": [[160, "spectrochempy.dot"]], "download_nist_ir() (in module spectrochempy)": [[161, "spectrochempy.download_nist_ir"]], "em() (in module spectrochempy)": [[162, "spectrochempy.em"]], "empty() (in module spectrochempy)": [[163, "spectrochempy.empty"]], "empty_like() (in module spectrochempy)": [[164, "spectrochempy.empty_like"]], "error_() (in module spectrochempy)": [[165, "spectrochempy.error_"]], "eye() (in module spectrochempy)": [[166, "spectrochempy.eye"]], "fft() (in module spectrochempy)": [[167, "spectrochempy.fft"]], "find_peaks() (in module spectrochempy)": [[168, "spectrochempy.find_peaks"]], "fromfunction() (in module spectrochempy)": [[169, "spectrochempy.fromfunction"]], "fromiter() (in module spectrochempy)": [[170, "spectrochempy.fromiter"]], "fsh() (in module spectrochempy)": [[171, "spectrochempy.fsh"]], "fsh2() (in module spectrochempy)": [[172, "spectrochempy.fsh2"]], "full() (in module spectrochempy)": [[173, "spectrochempy.full"]], "full_like() (in module spectrochempy)": [[174, "spectrochempy.full_like"]], "args (gaussianmodel attribute)": [[175, "spectrochempy.gaussianmodel.args"]], "gaussianmodel (class in spectrochempy)": [[175, "spectrochempy.gaussianmodel"]], "script (gaussianmodel attribute)": [[175, "spectrochempy.gaussianmodel.script"]], "type (gaussianmodel attribute)": [[175, "spectrochempy.gaussianmodel.type"]], "general_hamming() (in module spectrochempy)": [[176, "spectrochempy.general_hamming"]], "geomspace() (in module spectrochempy)": [[177, "spectrochempy.geomspace"]], "get_baseline() (in module spectrochempy)": [[178, "spectrochempy.get_baseline"]], "get_loglevel() (in module spectrochempy)": [[179, "spectrochempy.get_loglevel"]], "gm() (in module spectrochempy)": [[180, "spectrochempy.gm"]], "hamming() (in module spectrochempy)": [[181, "spectrochempy.hamming"]], "hann() (in module spectrochempy)": [[182, "spectrochempy.hann"]], "ht() (in module spectrochempy)": [[183, "spectrochempy.ht"]], "identity() (in module spectrochempy)": [[184, "spectrochempy.identity"]], "ifft() (in module spectrochempy)": [[185, "spectrochempy.ifft"]], "imag (in module spectrochempy)": [[186, "spectrochempy.imag"]], "info_() (in module spectrochempy)": [[187, "spectrochempy.info_"]], "interpolate() (in module spectrochempy)": [[188, "spectrochempy.interpolate"]], "is_units_compatible() (in module spectrochempy)": [[189, "spectrochempy.is_units_compatible"]], "ito() (in module spectrochempy)": [[190, "spectrochempy.ito"]], "ito_base_units() (in module spectrochempy)": [[191, "spectrochempy.ito_base_units"]], "ito_reduced_units() (in module spectrochempy)": [[192, "spectrochempy.ito_reduced_units"]], "linspace() (in module spectrochempy)": [[193, "spectrochempy.linspace"]], "load() (in module spectrochempy)": [[194, "spectrochempy.load"]], "load_iris() (in module spectrochempy)": [[195, "spectrochempy.load_iris"]], "logspace() (in module spectrochempy)": [[196, "spectrochempy.logspace"]], "args (lorentzianmodel attribute)": [[197, "spectrochempy.lorentzianmodel.args"]], "lorentzianmodel (class in spectrochempy)": [[197, "spectrochempy.lorentzianmodel"]], "script (lorentzianmodel attribute)": [[197, "spectrochempy.lorentzianmodel.script"]], "type (lorentzianmodel attribute)": [[197, "spectrochempy.lorentzianmodel.type"]], "ls() (in module spectrochempy)": [[198, "spectrochempy.ls"]], "max() (in module spectrochempy)": [[199, "spectrochempy.max"]], "mc() (in module spectrochempy)": [[200, "spectrochempy.mc"]], "mean() (in module spectrochempy)": [[201, "spectrochempy.mean"]], "min() (in module spectrochempy)": [[202, "spectrochempy.min"]], "multiplot() (in module spectrochempy)": [[203, "spectrochempy.multiplot"]], "multiplot_image() (in module spectrochempy)": [[204, "spectrochempy.multiplot_image"]], "multiplot_lines() (in module spectrochempy)": [[205, "spectrochempy.multiplot_lines"]], "multiplot_map() (in module spectrochempy)": [[206, "spectrochempy.multiplot_map"]], "multiplot_scatter() (in module spectrochempy)": [[207, "spectrochempy.multiplot_scatter"]], "multiplot_stack() (in module spectrochempy)": [[208, "spectrochempy.multiplot_stack"]], "multiplot_with_transposed() (in module spectrochempy)": [[209, "spectrochempy.multiplot_with_transposed"]], "ones() (in module spectrochempy)": [[210, "spectrochempy.ones"]], "ones_like() (in module spectrochempy)": [[211, "spectrochempy.ones_like"]], "pathclean() (in module spectrochempy)": [[212, "spectrochempy.pathclean"]], "pipe() (in module spectrochempy)": [[213, "spectrochempy.pipe"]], "pk() (in module spectrochempy)": [[214, "spectrochempy.pk"]], "pk_exp() (in module spectrochempy)": [[215, "spectrochempy.pk_exp"]], "plot() (in module spectrochempy)": [[216, "spectrochempy.plot"]], "plot_1d() (in module spectrochempy)": [[217, "spectrochempy.plot_1D"]], "plot_2d() (in module spectrochempy)": [[218, "spectrochempy.plot_2D"]], "plot_3d() (in module spectrochempy)": [[219, "spectrochempy.plot_3D"]], "plot_bar() (in module spectrochempy)": [[220, "spectrochempy.plot_bar"]], "plot_image() (in module spectrochempy)": [[221, "spectrochempy.plot_image"]], "plot_map() (in module spectrochempy)": [[222, "spectrochempy.plot_map"]], "plot_multiple() (in module spectrochempy)": [[223, "spectrochempy.plot_multiple"]], "plot_pen() (in module spectrochempy)": [[224, "spectrochempy.plot_pen"]], "plot_scatter() (in module spectrochempy)": [[225, "spectrochempy.plot_scatter"]], "plot_scatter_pen() (in module spectrochempy)": [[226, "spectrochempy.plot_scatter_pen"]], "plot_stack() (in module spectrochempy)": [[227, "spectrochempy.plot_stack"]], "plot_surface() (in module spectrochempy)": [[228, "spectrochempy.plot_surface"]], "plot_waterfall() (in module spectrochempy)": [[229, "spectrochempy.plot_waterfall"]], "plot_with_transposed() (in module spectrochempy)": [[230, "spectrochempy.plot_with_transposed"]], "args (polynomialbaseline attribute)": [[231, "spectrochempy.polynomialbaseline.args"]], "polynomialbaseline (class in spectrochempy)": [[231, "spectrochempy.polynomialbaseline"]], "script (polynomialbaseline attribute)": [[231, "spectrochempy.polynomialbaseline.script"]], "type (polynomialbaseline attribute)": [[231, "spectrochempy.polynomialbaseline.type"]], "ps() (in module spectrochempy)": [[232, "spectrochempy.ps"]], "ptp() (in module spectrochempy)": [[233, "spectrochempy.ptp"]], "qsin() (in module spectrochempy)": [[234, "spectrochempy.qsin"]], "random() (in module spectrochempy)": [[235, "spectrochempy.random"]], "read() (in module spectrochempy)": [[236, "spectrochempy.read"]], "read_carroucell() (in module spectrochempy)": [[237, "spectrochempy.read_carroucell"]], "read_csv() (in module spectrochempy)": [[238, "spectrochempy.read_csv"]], "read_ddr() (in module spectrochempy)": [[239, "spectrochempy.read_ddr"]], "read_dir() (in module spectrochempy)": [[240, "spectrochempy.read_dir"]], "read_hdr() (in module spectrochempy)": [[241, "spectrochempy.read_hdr"]], "read_jcamp() (in module spectrochempy)": [[242, "spectrochempy.read_jcamp"]], "read_labspec() (in module spectrochempy)": [[243, "spectrochempy.read_labspec"]], "read_mat() (in module spectrochempy)": [[244, "spectrochempy.read_mat"]], "read_matlab() (in module spectrochempy)": [[245, "spectrochempy.read_matlab"]], "read_omnic() (in module spectrochempy)": [[246, "spectrochempy.read_omnic"]], "read_opus() (in module spectrochempy)": [[247, "spectrochempy.read_opus"]], "read_quadera() (in module spectrochempy)": [[248, "spectrochempy.read_quadera"]], "read_sdr() (in module spectrochempy)": [[249, "spectrochempy.read_sdr"]], "read_soc() (in module spectrochempy)": [[250, "spectrochempy.read_soc"]], "read_spa() (in module spectrochempy)": [[251, "spectrochempy.read_spa"]], "read_spc() (in module spectrochempy)": [[252, "spectrochempy.read_spc"]], "read_spg() (in module spectrochempy)": [[253, "spectrochempy.read_spg"]], "read_srs() (in module spectrochempy)": [[254, "spectrochempy.read_srs"]], "read_topspin() (in module spectrochempy)": [[255, "spectrochempy.read_topspin"]], "read_wdf() (in module spectrochempy)": [[256, "spectrochempy.read_wdf"]], "read_wire() (in module spectrochempy)": [[257, "spectrochempy.read_wire"]], "read_zip() (in module spectrochempy)": [[258, "spectrochempy.read_zip"]], "real (in module spectrochempy)": [[259, "spectrochempy.real"]], "remove_masks() (in module spectrochempy)": [[260, "spectrochempy.remove_masks"]], "roll() (in module spectrochempy)": [[261, "spectrochempy.roll"]], "round() (in module spectrochempy)": [[262, "spectrochempy.round"]], "rs() (in module spectrochempy)": [[263, "spectrochempy.rs"]], "run_all_scripts() (in module spectrochempy)": [[264, "spectrochempy.run_all_scripts"]], "run_script() (in module spectrochempy)": [[265, "spectrochempy.run_script"]], "savgol() (in module spectrochempy)": [[266, "spectrochempy.savgol"]], "set_complex() (in module spectrochempy)": [[267, "spectrochempy.set_complex"]], "set_hypercomplex() (in module spectrochempy)": [[268, "spectrochempy.set_hypercomplex"]], "set_loglevel() (in module spectrochempy)": [[269, "spectrochempy.set_loglevel"]], "set_nmr_context() (in module spectrochempy)": [[270, "spectrochempy.set_nmr_context"]], "set_quaternion() (in module spectrochempy)": [[271, "spectrochempy.set_quaternion"]], "show() (in module spectrochempy)": [[272, "spectrochempy.show"]], "show_versions() (in module spectrochempy)": [[273, "spectrochempy.show_versions"]], "args (sigmoidmodel attribute)": [[274, "spectrochempy.sigmoidmodel.args"]], "script (sigmoidmodel attribute)": [[274, "spectrochempy.sigmoidmodel.script"]], "sigmoidmodel (class in spectrochempy)": [[274, "spectrochempy.sigmoidmodel"]], "type (sigmoidmodel attribute)": [[274, "spectrochempy.sigmoidmodel.type"]], "simpson() (in module spectrochempy)": [[275, "spectrochempy.simpson"]], "sine() (in module spectrochempy)": [[276, "spectrochempy.sine"]], "sinm() (in module spectrochempy)": [[277, "spectrochempy.sinm"]], "smooth() (in module spectrochempy)": [[278, "spectrochempy.smooth"]], "snip() (in module spectrochempy)": [[279, "spectrochempy.snip"]], "sort() (in module spectrochempy)": [[280, "spectrochempy.sort"]], "sp() (in module spectrochempy)": [[281, "spectrochempy.sp"]], "squeeze() (in module spectrochempy)": [[282, "spectrochempy.squeeze"]], "stack() (in module spectrochempy)": [[283, "spectrochempy.stack"]], "std() (in module spectrochempy)": [[284, "spectrochempy.std"]], "sum() (in module spectrochempy)": [[285, "spectrochempy.sum"]], "swapdims() (in module spectrochempy)": [[286, "spectrochempy.swapdims"]], "take() (in module spectrochempy)": [[287, "spectrochempy.take"]], "to() (in module spectrochempy)": [[288, "spectrochempy.to"]], "to_array() (in module spectrochempy)": [[289, "spectrochempy.to_array"]], "to_base_units() (in module spectrochempy)": [[290, "spectrochempy.to_base_units"]], "to_reduced_units() (in module spectrochempy)": [[291, "spectrochempy.to_reduced_units"]], "to_xarray() (in module spectrochempy)": [[292, "spectrochempy.to_xarray"]], "transpose() (in module spectrochempy)": [[293, "spectrochempy.transpose"]], "trapezoid() (in module spectrochempy)": [[294, "spectrochempy.trapezoid"]], "triang() (in module spectrochempy)": [[295, "spectrochempy.triang"]], "var() (in module spectrochempy)": [[296, "spectrochempy.var"]], "args (voigtmodel attribute)": [[297, "spectrochempy.voigtmodel.args"]], "script (voigtmodel attribute)": [[297, "spectrochempy.voigtmodel.script"]], "type (voigtmodel attribute)": [[297, "spectrochempy.voigtmodel.type"]], "voigtmodel (class in spectrochempy)": [[297, "spectrochempy.voigtmodel"]], "warning_() (in module spectrochempy)": [[298, "spectrochempy.warning_"]], "whittaker() (in module spectrochempy)": [[299, "spectrochempy.whittaker"]], "write() (in module spectrochempy)": [[300, "spectrochempy.write"]], "write_csv() (in module spectrochempy)": [[301, "spectrochempy.write_csv"]], "write_excel() (in module spectrochempy)": [[302, "spectrochempy.write_excel"]], "write_jcamp() (in module spectrochempy)": [[303, "spectrochempy.write_jcamp"]], "write_mat() (in module spectrochempy)": [[304, "spectrochempy.write_mat"]], "write_matlab() (in module spectrochempy)": [[305, "spectrochempy.write_matlab"]], "write_xls() (in module spectrochempy)": [[306, "spectrochempy.write_xls"]], "zeros() (in module spectrochempy)": [[307, "spectrochempy.zeros"]], "zeros_like() (in module spectrochempy)": [[308, "spectrochempy.zeros_like"]], "zf() (in module spectrochempy)": [[309, "spectrochempy.zf"]], "zf_auto() (in module spectrochempy)": [[310, "spectrochempy.zf_auto"]], "zf_double() (in module spectrochempy)": [[311, "spectrochempy.zf_double"]], "zf_size() (in module spectrochempy)": [[312, "spectrochempy.zf_size"]], "als": [[313, "term-ALS"]], "api": [[313, "term-API"]], "asls": [[313, "term-AsLS"]], "carroucell": [[313, "term-Carroucell"]], "efa": [[313, "term-EFA"]], "ica": [[313, "term-ICA"]], "mcr-als": [[313, "term-MCR-ALS"]], "pca": [[313, "term-PCA"]], "pls": [[313, "term-PLS"]], "svd": [[313, "term-SVD"]], "array-like": [[313, "term-array-like"]], "closure": [[313, "term-closure"]], "closures": [[313, "term-closures"]], "loading": [[313, "term-loading"]], "loadings": [[313, "term-loadings"]], "n_components": [[313, "term-n_components"]], "n_features": [[313, "term-n_features"]], "n_observations": [[313, "term-n_observations"]], "n_targets": [[313, "term-n_targets"]], "rank": [[313, "term-rank"]], "regularization": [[313, "term-regularization"]], "score": [[313, "term-score"]], "scores": [[313, "term-scores"]], "unimodality": [[313, "term-unimodality"]]}})