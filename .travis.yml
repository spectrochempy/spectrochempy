# do not use Travis python to save some time
language: generic
os: linux
dist: xenial

env:
  global:
    - CONDAPY=3.7

jobs:
  fast_finish: true
  include:
    - stage: pytest-linux
      if: branch NOT IN (feature/travis-deploy,feature/travis-docs)
      env: TEST=true
    - stage: conda-deploy
      if: branch IN (master,feature/travis-deploy) OR tag =~ /^\d{1,2}\.\d{1,2}\.\d{1,2}$/
      env: DEPLOY=true
    - stage: build-docs
      if: type != pull_request AND (branch IN (master,feature/travis-docs) OR tag =~ /^\d{1,2}\.\d{1,2}\.\d{1,2}$/)
      env: BUILDOCS=true

# limit got clone depth to 50 commits (this means that pull requests must be done with less than 50 commit changes)
git:
  depth: 50

addons:
  apt:
    update: true
    packages:
      - xvfb

# install miniconda and create environment
before_install:
  - echo "Setup display...";
  - export DISPLAY=':99.0'
  - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
  - echo "Installing miniconda.";
  - mkdir $HOME/download;
  - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O $HOME/download/miniconda.sh;
  - bash $HOME/download/miniconda.sh -b -u -p $HOME/miniconda;
  - echo "creating scpy$CONDAPY environment";
  - source "$HOME/miniconda/etc/profile.d/conda.sh";
  - hash -r;
  - conda config --set always_yes yes --set changeps1 no;
  - conda update -q conda;
  - conda config --add channels conda-forge;
  - conda config --add channels cantera;
  - conda config --add channels spectrocat;
  - conda config --set channel_priority flexible;
  - conda env create -q -f .ci/env/scpy$CONDAPY.yml;

# create env and install scpy from sources
install:
  - echo "Activate scpy$CONDAPY environnment...";
  - source "$HOME/miniconda/etc/profile.d/conda.sh";
  - conda activate scpy$CONDAPY;
  - git fetch --tags;
  - pip install .;

# command to install code-climate dependencies
before_script:
  - if [[ $TEST = true ]]; then
      echo "downloading cc-test-reporter";
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter;
      chmod +x ./cc-test-reporter;
      ./cc-test-reporter before-build;
    fi

script:
  - if [[ $TEST = true ]]; then
      echo "RUNNING TESTS";
      coverage run -m pytest -v --flake8 -k "not test_example" --nodisplay;
      pytest -v --flake8 -k "test_example" --nodisplay;
    elif [[ $DEPLOY = true ]]; then
      echo "BUILDING AND UPLOADING ON ANACONDA";
      bash .ci/scripts/conda-upload.sh;

    elif [[ $BUILDOCS = true ]]; then
      echo "BUILDING DOCS"
      echo "cloning spectrochempy.github.io repository";
      git clone --branch=gh-pages --single-branch https://github.com/spectrochempy/spectrochempy.git $HOME/spectrochempy_docs/html;
      apt-get install texlive-full;
      python docs/make.py --clean --sync --html --pdf;
    fi

# command to notify code-climate
after_success:
  - if [[ $TEST = true ]]; then
      coverage xml;
      ./cc-test-reporter after-build;
    fi

deploy:
  - provider: pages
    skip_cleanup: true
    github_token: $GITHUB_TOKEN  # Set in the settings page of your repository, as a secure variable
    keep_history: false
    local_dir: ../../../spectrochempy_docs/html
    on:
      all_branches: true
      repo: spectrochempy/spectrochempy
      condition: $BUILDOCS = true
  - provider: pypi
    username: spectrocat
    password: $PYPI_PASSWORD
    skip_existing: true
    distributions: "sdist bdist_wheel"
    edge: true # opt in to dpl v2
    on:
      tags: true
      repo: spectrochempy/spectrochempy
      condition: $DEPLOY = true