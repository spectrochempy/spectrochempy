Search.setIndex({"alltitles": {"1) simulated chromatogram": [[16, "simulated-chromatogram"]], "1D-Dataset (unidimensional dataset)": [[325, "1D-Dataset-(unidimensional-dataset)"]], "2) absorption spectra": [[16, "absorption-spectra"]], "2021": [[305, "id18"]], "2022": [[305, "id15"]], "2023": [[305, "id10"]], "2024": [[305, "id4"]], "2025": [[305, "id1"]], "2D-IRIS analysis example": [[18, null]], "3) simulated data matrix": [[16, "simulated-data-matrix"]], "4) evolving factor analysis (EFA)": [[16, "evolving-factor-analysis-efa"]], "A basic illustration of the rotational ambiguity": [[309, "A-basic-illustration-of-the-rotational-ambiguity"]], "A code snippet to display properties": [[311, "A-code-snippet-to-display-properties"]], "ALS Optimization": [[309, "ALS-Optimization"]], "API Configuration": [[314, null]], "API Documentation": [[9, "api-documentation"]], "About dates and times": [[325, "About-dates-and-times"]], "About the history attribute": [[325, "About-the-history-attribute"]], "About this user\u2019s guide": [[323, "About-this-user's-guide"]], "Acquisition dates and y axis": [[318, "Acquisition-dates-and-y-axis"]], "Acting on a parameter": [[319, "Acting-on-a-parameter"]], "Adding a Reader": [[4, null]], "Adding several coordinates to a single dimension": [[325, "Adding-several-coordinates-to-a-single-dimension"]], "Adding titles and annotations": [[328, "Adding-titles-and-annotations"]], "Adding your examples to the gallery": [[10, null]], "Additional Resources": [[84, "additional-resources"]], "Additional Tips": [[89, "additional-tips"]], "Additional options for reading directories": [[315, "Additional-options-for-reading-directories"]], "Advanced Analysis": [[90, "Advanced-Analysis"]], "Advanced Data Operations": [[318, "Advanced-Data-Operations"]], "Algebra": [[304, "algebra"]], "Alignment along several dimensions": [[329, "Alignment-along-several-dimensions"]], "Alignment of datasets": [[329, null]], "Alignment, interpolation": [[304, "alignment-interpolation"]], "Alternative Installation Methods": [[84, "alternative-installation-methods"]], "Analysing the 2D NMD dataset": [[75, "analysing-the-2d-nmd-dataset"]], "Analysing the data": [[76, "analysing-the-data"]], "Analysis": [[304, "analysis"], [308, null]], "Analysis CP NMR spectra": [[74, null]], "Analysis NDDataset": [[33, null]], "Angle units conversion": [[336, "Angle-units-conversion"]], "Another default search directory: datadir": [[315, "Another-default-search-directory:-datadir"]], "Apodization": [[58, null], [72, "apodization"], [304, "apodization"], [330, null]], "Apodization using sine window multiplication": [[330, "Apodization-using-sine-window-multiplication"]], "Arithmetic": [[336, "Arithmetic"]], "Asymmetric Least Squares smoothing": [[79, "asymmetric-least-squares-smoothing"]], "Augmented datasets": [[309, "Augmented-datasets"]], "Automatic search": [[18, "automatic-search"]], "Backwards compatibility": [[6, "backwards-compatibility"]], "Baseline": [[62, null], [72, "baseline"]], "Baseline Correction": [[90, "Baseline-Correction"]], "Baseline correction": [[79, "baseline-correction"], [304, "baseline-correction"], [307, "Baseline-correction"]], "Baseline correction 2D spectra (series of spectra)": [[79, "baseline-correction-2d-spectra-series-of-spectra"]], "Baseline correction using NDDataset or API methods": [[331, "Baseline-correction-using-NDDataset-or-API-methods"]], "Baseline corrections": [[331, null]], "Basic Rules": [[8, "basic-rules"]], "Basic creation methods": [[304, "basic-creation-methods"]], "Basic loading of OPUS file": [[319, "Basic-loading-of-OPUS-file"]], "Basic transformations": [[340, null]], "Bibliography": [[93, null]], "Binary Ufuncs": [[336, "Binary-Ufuncs"]], "Binary functions": [[336, "Binary-functions"]], "Breaking Changes": [[341, "breaking-changes"], [343, "breaking-changes"], [396, "breaking-changes"]], "Breaking changes": [[368, "breaking-changes"], [377, "breaking-changes"], [383, "breaking-changes"], [384, "breaking-changes"], [385, "breaking-changes"], [387, "breaking-changes"], [391, "breaking-changes"], [393, "breaking-changes"], [395, "breaking-changes"]], "Bug Fixes": [[341, "bug-fixes"]], "Bug fixes": [[345, "bug-fixes"], [346, "bug-fixes"], [347, "bug-fixes"], [348, "bug-fixes"], [349, "bug-fixes"], [350, "bug-fixes"], [351, "bug-fixes"], [352, "bug-fixes"], [353, "bug-fixes"], [354, "bug-fixes"], [355, "bug-fixes"], [356, "bug-fixes"], [357, "bug-fixes"], [358, "bug-fixes"], [359, "bug-fixes"], [360, "bug-fixes"], [361, "bug-fixes"], [362, "bug-fixes"], [363, "bug-fixes"], [364, "bug-fixes"], [366, "bug-fixes"], [367, "bug-fixes"], [368, "bug-fixes"], [369, "bug-fixes"], [370, "bug-fixes"], [373, "bug-fixes"], [374, "bug-fixes"], [375, "bug-fixes"], [376, "bug-fixes"], [378, "bug-fixes"], [379, "bug-fixes"], [380, "bug-fixes"], [381, "bug-fixes"], [382, "bug-fixes"], [384, "bug-fixes"], [385, "bug-fixes"], [387, "bug-fixes"], [388, "bug-fixes"], [389, "bug-fixes"], [390, "bug-fixes"], [391, "bug-fixes"], [392, "bug-fixes"], [393, "bug-fixes"], [394, "bug-fixes"], [395, "bug-fixes"]], "Build Options": [[9, "build-options"]], "Building Documentation": [[9, "building-documentation"]], "Bullets": [[324, "Bullets"]], "Cantera": [[85, "cantera"]], "Case of initial spectral profiles": [[309, "Case-of-initial-spectral-profiles"]], "Change the NDDataset.preferences": [[328, "Change-the-NDDataset.preferences"]], "Changing number of dimensions": [[304, "changing-number-of-dimensions"]], "Changing the aspect of the plot": [[328, "Changing-the-aspect-of-the-plot"]], "Changing the plot style using matplotlib style sheets": [[328, "Changing-the-plot-style-using-matplotlib-style-sheets"]], "Changing the type of plot": [[328, "Changing-the-type-of-plot"]], "Changing type": [[304, "changing-type"]], "Changing units": [[340, "Changing-units"]], "Citing SpectroChemPy": [[0, null]], "Clipping and rounding": [[304, "clipping-and-rounding"]], "Code snippet for \u2018advanced\u2019 baseline correction": [[331, "Code-snippet-for-'advanced'-baseline-correction"]], "Code standards": [[6, "code-standards"]], "Code usage": [[94, "code-usage"]], "Colored note boxes": [[324, "Colored-note-boxes"]], "Comparison with the OMNIC processing.": [[335, "Comparison-with-the-OMNIC-processing."]], "Complex": [[304, "complex"]], "Complex or hypercomplex NDDatasets": [[336, "Complex-or-hypercomplex-NDDatasets"]], "Computation times": [[25, null], [28, null], [32, null], [34, null], [40, null], [48, null], [52, null], [55, null], [57, null], [61, null], [64, null], [68, null], [71, null], [77, null], [80, null], [81, null], [306, null]], "Conda Package Managers (Recommended)": [[84, "conda-package-managers-recommended"]], "Configuration": [[13, "configuration"]], "Constant trend": [[331, "Constant-trend"]], "Contents": [[4, "contents"], [8, "contents"], [9, "contents"], [88, "contents"], [91, "contents"]], "Contents:": [[321, null]], "Contribute": [[83, "contribute"]], "Contributing to Documentation": [[9, null]], "Contributing to SpectroChemPy": [[5, null]], "Contributing to specific parts of the code": [[7, null]], "Contributing to the code": [[6, null]], "Contributors": [[1, null]], "Convert between units": [[38, "convert-between-units"]], "Convolution with window filters": [[338, "Convolution-with-window-filters"]], "Convolution with windows": [[338, "Convolution-with-windows"]], "Coordinates": [[36, "coordinates"], [39, "coordinates"], [325, "Coordinates"]], "Coordinates-related objects": [[304, "coordinates-related-objects"]], "Copying existing NDDataset": [[325, "Copying-existing-NDDataset"]], "Core functionalities": [[56, null]], "Core objects": [[326, null]], "Create Environment": [[84, "create-environment"]], "Create a MCR-ALS object": [[19, "create-a-mcr-als-object"]], "Create a NMF object": [[21, "create-a-nmf-object"]], "Create a dataset from a function": [[325, "Create-a-dataset-from-a-function"]], "Create a new Jupyter notebook": [[322, "Create-a-new-Jupyter-notebook"]], "Create and fit a FastICA object": [[17, "create-and-fit-a-fastica-object"]], "Create quantities": [[38, "create-quantities"]], "Create your own style": [[328, "Create-your-own-style"]], "Creating NDDataset": [[304, "creating-nddataset"]], "Creating a Permanent Environment Shortcut": [[89, "creating-a-permanent-environment-shortcut"]], "Creation": [[36, "creation"], [39, "creation"]], "Creation from existing data": [[304, "creation-from-existing-data"]], "Creation from numerical ranges": [[304, "creation-from-numerical-ranges"]], "Cross-decomposition": [[26, null], [33, "cross-decomposition"]], "Curvefitting": [[29, null], [33, "curvefitting"]], "Data": [[36, "data"], [39, "data"]], "Data Processing Techniques": [[90, "Data-Processing-Techniques"]], "Data Selection and Manipulation": [[90, "Data-Selection-and-Manipulation"]], "Data Visualization": [[90, "Data-Visualization"]], "Decomposition": [[14, null], [33, "decomposition"]], "Default behaviour": [[311, "Default-behaviour"]], "Default plotting": [[328, "Default-plotting"]], "Denoising": [[65, null], [72, "denoising"], [79, "denoising"], [332, null]], "Denoising 2D spectra": [[332, "Denoising-2D-spectra"]], "Denoising a 2D Raman spectrum": [[66, null]], "Dependency Updates": [[341, "dependency-updates"], [343, "dependency-updates"], [396, "dependency-updates"]], "Dependency updates": [[393, "dependency-updates"], [395, "dependency-updates"]], "Deprecations": [[341, "deprecations"], [370, "deprecations"], [374, "deprecations"], [383, "deprecations"], [384, "deprecations"], [385, "deprecations"], [387, "deprecations"], [389, "deprecations"], [395, "deprecations"]], "Designed for Open Science": [[91, "designed-for-open-science"]], "Detailled Tutorials": [[316, "detailled-tutorials"]], "Determination of initial concentrations using EFA": [[309, "Determination-of-initial-concentrations-using-EFA"]], "Detrend independently on several data segment": [[331, "Detrend-independently-on-several-data-segment"]], "Detrending": [[79, "detrending"], [331, "Detrending"]], "Developer\u2019s Guide": [[11, null]], "Directly loading Example Files": [[86, "directly-loading-example-files"]], "Docstring Format": [[8, "docstring-format"]], "Documentation": [[83, "documentation"]], "Documentation Sources": [[9, "documentation-sources"]], "Documentation Structure": [[9, "documentation-structure"]], "Documenting change log": [[6, "documenting-change-log"]], "EFA (Keller and Massart original example)": [[16, null]], "EFA example": [[15, null]], "Editors": [[13, null]], "Emphasis": [[324, "Emphasis"]], "Environment Setup": [[87, "environment-setup"], [89, "environment-setup"]], "Error Handling": [[318, "Error-Handling"]], "Error handling": [[314, "Error-handling"]], "Evolving factor analysis": [[304, "evolving-factor-analysis"]], "Example": [[329, "Example"], [331, "Example"]], "Example Structure": [[8, "example-structure"]], "Examples": [[82, null]], "Examples Section": [[8, "examples-section"]], "Examples and Testing Data": [[85, "examples-and-testing-data"]], "Examples using spectrochempy.concatenate": [[140, "examples-using-spectrochempy-concatenate"]], "Examples using spectrochempy.denoise": [[149, "examples-using-spectrochempy-denoise"]], "Examples using spectrochempy.despike": [[150, "examples-using-spectrochempy-despike"]], "Examples using spectrochempy.detrend": [[151, "examples-using-spectrochempy-detrend"]], "Examples using spectrochempy.dot": [[154, "examples-using-spectrochempy-dot"]], "Examples using spectrochempy.em": [[156, "examples-using-spectrochempy-em"]], "Examples using spectrochempy.error_": [[159, "examples-using-spectrochempy-error"]], "Examples using spectrochempy.fft": [[161, "examples-using-spectrochempy-fft"]], "Examples using spectrochempy.info_": [[180, "examples-using-spectrochempy-info"]], "Examples using spectrochempy.load_iris": [[188, "examples-using-spectrochempy-load-iris"]], "Examples using spectrochempy.pk": [[207, "examples-using-spectrochempy-pk"]], "Examples using spectrochempy.plot": [[209, "examples-using-spectrochempy-plot"]], "Examples using spectrochempy.plot_multiple": [[216, "examples-using-spectrochempy-plot-multiple"]], "Examples using spectrochempy.plot_stack": [[220, "examples-using-spectrochempy-plot-stack"]], "Examples using spectrochempy.qsin": [[227, "examples-using-spectrochempy-qsin"]], "Examples using spectrochempy.read": [[229, "examples-using-spectrochempy-read"]], "Examples using spectrochempy.read_labspec": [[236, "examples-using-spectrochempy-read-labspec"]], "Examples using spectrochempy.read_matlab": [[238, "examples-using-spectrochempy-read-matlab"]], "Examples using spectrochempy.read_omnic": [[239, "examples-using-spectrochempy-read-omnic"]], "Examples using spectrochempy.read_opus": [[240, "examples-using-spectrochempy-read-opus"]], "Examples using spectrochempy.read_topspin": [[248, "examples-using-spectrochempy-read-topspin"]], "Examples using spectrochempy.read_wdf": [[249, "examples-using-spectrochempy-read-wdf"]], "Examples using spectrochempy.read_wire": [[250, "examples-using-spectrochempy-read-wire"]], "Examples using spectrochempy.run_script": [[257, "examples-using-spectrochempy-run-script"]], "Examples using spectrochempy.set_loglevel": [[260, "examples-using-spectrochempy-set-loglevel"]], "Examples using spectrochempy.show": [[262, "examples-using-spectrochempy-show"]], "Examples using spectrochempy.sinm": [[267, "examples-using-spectrochempy-sinm"]], "Examples using spectrochempy.snip": [[269, "examples-using-spectrochempy-snip"]], "Examples using spectrochempy.sort": [[270, "examples-using-spectrochempy-sort"]], "Examples using spectrochempy.sp": [[271, "examples-using-spectrochempy-sp"]], "Examples using spectrochempy.write": [[290, "examples-using-spectrochempy-write"]], "Example\u2019s gallery": [[82, null]], "Exploring the Data": [[90, "Exploring-the-Data"]], "Exponential multiplication": [[330, "Exponential-multiplication"]], "Exponential window multiplication": [[59, null]], "Export a NDDataset": [[304, "export-a-nddataset"]], "External links": [[324, "External-links"]], "FFT of 1D NMR spectra": [[333, "FFT-of-1D-NMR-spectra"]], "FTIR interferogram processing": [[335, null]], "FastICA example": [[17, null]], "File": [[304, "file"]], "Filtering using API or NDDataset methods.": [[338, "Filtering-using-API-or-NDDataset-methods."]], "Filtering, Smoothing and Denoising": [[338, null]], "Find maxima by manual inspection of the plot": [[311, "Find-maxima-by-manual-inspection-of-the-plot"]], "Find maxima with an automated method: find_peaks()": [[311, "Find-maxima-with-an-automated-method:-find_peaks()"]], "Find peaks": [[304, "find-peaks"]], "Fit a model": [[76, "fit-a-model"]], "Fit the MCR-ALS model": [[19, "fit-the-mcr-als-model"]], "Fit the model": [[21, "fit-the-model"]], "Fitting": [[307, null]], "Fitting 1D dataset": [[30, null]], "Fitting script": [[307, "Fitting-script"]], "Fourier transform": [[304, "fourier-transform"]], "Frequently asked questions (FAQ)": [[94, null]], "Functions affecting magnitudes of the number but also units": [[336, "Functions-affecting-magnitudes-of-the-number-but-also-units"], [336, "id2"]], "Functions affecting magnitudes of the number but keeping units": [[336, "Functions-affecting-magnitudes-of-the-number-but-keeping-units"], [336, "id1"]], "Functions that require no units or dimensionless units for inputs. Returns dimensionless objects.": [[336, "Functions-that-require-no-units-or-dimensionless-units-for-inputs.-Returns-dimensionless-objects."], [336, "id3"]], "Functions that return numpy arrays (Work only for NDDataset)": [[336, "Functions-that-return-numpy-arrays-(Work-only-for-NDDataset)"], [336, "id4"]], "GUI Support": [[85, "gui-support"]], "Gaussian-Lorentzian apodization": [[330, "Gaussian-Lorentzian-apodization"]], "General": [[94, "general"]], "General Principles": [[5, "general-principles"]], "General information": [[314, "General-information"]], "Generate a test dataset": [[16, "generate-a-test-dataset"]], "Generic read command": [[315, "Generic-read-command"]], "Geometric shapes": [[324, "Geometric-shapes"]], "Get project\u2019s elements": [[327, "Get-project's-elements"]], "Get the mixing system and source spectral profiles": [[17, "get-the-mixing-system-and-source-spectral-profiles"]], "Getting Help": [[83, null]], "Getting Started": [[90, "Getting-Started"]], "Getting Started with Development": [[5, "getting-started-with-development"]], "Getting the Source Code": [[88, "getting-the-source-code"]], "Git Installation": [[88, "git-installation"]], "GitHub Discussions": [[83, "github-discussions"]], "GitHub Issues": [[83, "github-issues"]], "Glossary": [[303, null]], "Good practices": [[315, "Good-practices"]], "Graphics": [[324, "Graphics"]], "Guessing the concentration profile with PCA + EFA": [[309, "Guessing-the-concentration-profile-with-PCA-+-EFA"]], "Guides & Tutorials": [[9, "guides-tutorials"]], "Handling Metadata": [[318, "Handling-Metadata"]], "Headings": [[324, "Headings"]], "Horizontal lines": [[324, "Horizontal-lines"]], "How it works?": [[331, "How-it-works?"]], "How to get started": [[323, "How-to-get-started"]], "How to get the index from a coordinate?": [[94, "how-to-get-the-index-from-a-coordinate"]], "How to specify a plot with abscissa in ascending or descending order?": [[94, "how-to-specify-a-plot-with-abscissa-in-ascending-or-descending-order"]], "How to use NDDataset": [[35, null], [56, "how-to-use-nddataset"]], "Hyperbolic functions": [[336, "Hyperbolic-functions"], [336, "id5"]], "IRIS Processing example": [[90, "IRIS-Processing-example"]], "IRIS analysis without regularization": [[18, "iris-analysis-without-regularization"]], "Import & Export": [[320, null]], "Import / Export": [[41, null], [56, "import-export"]], "Import API": [[74, "import-api"], [75, "import-api"], [76, "import-api"]], "Import Data in SpectroChemPy": [[315, null]], "Import IR Data": [[316, null]], "Import NMR spectra": [[74, "import-nmr-spectra"]], "Import a NDataset from external source": [[304, "import-a-ndataset-from-external-source"]], "Import dataset from local files": [[42, "import-dataset-from-local-files"]], "Import dataset from remote files": [[42, "import-dataset-from-remote-files"]], "Import of .spa files": [[318, "Import-of-.spa-files"]], "Import of Bruker OPUS files": [[319, null]], "Import of OMNIC files": [[318, null]], "Import spg file": [[318, "Import-spg-file"]], "Import/Export of JCAMP-DX files": [[317, null]], "Import/export": [[304, "import-export"]], "Importing a 1D spectra": [[79, "importing-a-1d-spectra"]], "Importing a 2D NMR spectra": [[75, "importing-a-2d-nmr-spectra"]], "Importing a pseudo 2D NMR spectra": [[76, "importing-a-pseudo-2d-nmr-spectra"]], "Importing from external datasets": [[325, "Importing-from-external-datasets"]], "Indenting": [[324, "Indenting"]], "Independant Component Analysis": [[304, "independant-component-analysis"]], "Indexing": [[304, "indexing"]], "Initial guess and MCR ALS optimization": [[309, "Initial-guess-and-MCR-ALS-optimization"]], "Install Package": [[84, "install-package"]], "Install SpectroChemPy": [[87, "install-spectrochempy"]], "Install in Google Colaboratory (Colab)": [[86, null]], "Installation": [[86, "installation"]], "Installation Guide": [[84, null]], "Installation Guide for Mac OSX and Linux": [[87, null]], "Installation Guide for Windows": [[89, null]], "Installation Methods": [[88, "installation-methods"]], "Installation Steps": [[84, "installation-steps"]], "Installation from Sources": [[88, null]], "Installing Python": [[84, "installing-python"]], "Installing SpectroChemPy": [[84, "installing-spectrochempy"], [89, "installing-spectrochempy"], [90, "Installing-SpectroChemPy"]], "Integral inversion solver for spectroscopic data": [[304, "integral-inversion-solver-for-spectroscopic-data"]], "Internal links": [[324, "Internal-links"]], "Introduction": [[86, "introduction"], [309, "Introduction"], [310, "Introduction"], [313, "Introduction"], [323, null], [325, "Introduction"], [330, "Introduction"]], "Introduction to the plotting librairie": [[51, null]], "Joining or splitting datasets": [[304, "joining-or-splitting-datasets"]], "Kinetic": [[304, "kinetic"]], "Labels": [[325, "Labels"]], "Least square with non-negativity constraint (NNLS)": [[307, "Least-square-with-non-negativity-constraint-(NNLS)"]], "Line breaks": [[324, "Line-breaks"]], "Line broadening": [[333, "Line-broadening"]], "Linear regression": [[304, "linear-regression"]], "Linear trend": [[331, "Linear-trend"]], "Lineshape models": [[304, "lineshape-models"]], "List of UFuncs working on NDDataset:": [[336, "List-of-UFuncs-working-on-NDDataset:"]], "Load the API": [[328, "Load-the-API"]], "Load, prepare and plot the dataset": [[17, "load-prepare-and-plot-the-dataset"]], "Loading": [[327, "Loading"]], "Loading Bruker OPUS files": [[44, null]], "Loading Data": [[90, "Loading-Data"]], "Loading RAMAN experimental file": [[46, null]], "Loading a NDDataset": [[20, "loading-a-nddataset"]], "Loading an IR (omnic SPG) experimental file": [[43, null]], "Loading an experimental dataset": [[311, "Loading-an-experimental-dataset"]], "Loading given type of OPUS spectra": [[319, "Loading-given-type-of-OPUS-spectra"]], "Loading of experimental 1D NMR data": [[45, null]], "Loading of the dataset": [[310, "Loading-of-the-dataset"], [313, "Loading-of-the-dataset"]], "Loading the API": [[304, "loading-the-api"], [323, "Loading-the-API"]], "Loading the data": [[328, "Loading-the-data"]], "Loading the example dataset": [[19, "loading-the-example-dataset"]], "Logging": [[304, "logging"]], "Logic functions": [[304, "logic-functions"]], "Loglevel": [[314, "Loglevel"]], "MCR ALS": [[309, null]], "MCR-ALS example (adapted from Jaumot et al. 2005)": [[19, null]], "MCR-ALS with kinetic constraints": [[20, null]], "Magnitude calculation": [[333, "Magnitude-calculation"]], "Maintaining Your PR": [[5, "maintaining-your-pr"]], "Making Changes": [[5, "making-changes"]], "Markdown Cheat Sheet": [[324, null]], "Markdown cheat sheet": [[322, "Markdown-cheat-sheet"]], "Masking data": [[340, "Masking-data"]], "Masks": [[304, "masks"]], "Math operations on coordinates": [[325, "Math-operations-on-coordinates"]], "Mathematical Operations": [[90, "Mathematical-Operations"]], "Mathematical operations": [[304, "mathematical-operations"], [336, null]], "Mathematical symbols": [[324, "Mathematical-symbols"]], "Median filter": [[332, "Median-filter"]], "Methods for alignments": [[329, "Methods-for-alignments"]], "Methods to create NDDataset": [[325, "Methods-to-create-NDDataset"]], "Minimum and maximum": [[304, "minimum-and-maximum"]], "Misc": [[304, "misc"]], "Miscellaneous": [[304, "miscellaneous"]], "Monospace font": [[324, "Monospace-font"]], "More information about the MCRALS estimator": [[309, "More-information-about-the-MCRALS-estimator"]], "More insight on coordinates": [[325, "More-insight-on-coordinates"]], "More on peak properties": [[311, "More-on-peak-properties"]], "Moving average": [[338, "Moving-average"]], "Multivariate Curve Resolution - Alternating Least Squares": [[304, "multivariate-curve-resolution-alternating-least-squares"]], "Multivariate approach": [[331, "Multivariate-approach"]], "NDDataset": [[326, "nddataset"]], "NDDataset baseline correction": [[63, null]], "NDDataset coordinates example": [[37, null]], "NDDataset creation and plotting example": [[36, null], [39, null]], "NDDataset modelling using non-linear optimisation method": [[307, "NDDataset-modelling-using-non-linear-optimisation-method"]], "NMF analysis example": [[21, null]], "New Features": [[341, "new-features"], [343, "new-features"], [396, "new-features"]], "New features": [[345, "new-features"], [346, "new-features"], [350, "new-features"], [351, "new-features"], [352, "new-features"], [353, "new-features"], [354, "new-features"], [355, "new-features"], [358, "new-features"], [359, "new-features"], [360, "new-features"], [361, "new-features"], [362, "new-features"], [364, "new-features"], [365, "new-features"], [366, "new-features"], [367, "new-features"], [368, "new-features"], [369, "new-features"], [370, "new-features"], [371, "new-features"], [372, "new-features"], [373, "new-features"], [374, "new-features"], [376, "new-features"], [377, "new-features"], [378, "new-features"], [379, "new-features"], [380, "new-features"], [382, "new-features"], [384, "new-features"], [385, "new-features"], [386, "new-features"], [387, "new-features"], [389, "new-features"], [390, "new-features"], [391, "new-features"], [393, "new-features"], [395, "new-features"]], "Next Steps": [[87, "next-steps"], [89, "next-steps"]], "Next Steps \ud83c\udfaf": [[90, "Next-Steps-\ud83c\udfaf"]], "Non-Negative Matrix Factorization": [[304, "non-negative-matrix-factorization"]], "Non-linear optimization and curve fit": [[304, "non-linear-optimization-and-curve-fit"]], "Numbered lists": [[324, "Numbered-lists"]], "Offset correction": [[304, "offset-correction"]], "One-dimensional (1D) Fourier transformation": [[333, null]], "Open Source and Free": [[91, "open-source-and-free"]], "Optional Dependencies": [[85, null]], "Optional dependencies": [[6, "optional-dependencies"]], "Options of find_peaks()": [[311, "Options-of-find_peaks()"]], "Other Advanced Analysis Techniques": [[90, "Other-Advanced-Analysis-Techniques"]], "Other Licenses": [[2, "other-licenses"]], "Other Operations": [[90, "Other-Operations"]], "Other apodization functions": [[330, "Other-apodization-functions"]], "Overview": [[85, "overview"]], "Overview of the main configuration parameters": [[328, "Overview-of-the-main-configuration-parameters"]], "Overview of the other model": [[331, "Overview-of-the-other-model"]], "PCA analysis example": [[23, null]], "PCA example (iris dataset)": [[22, null]], "PLS regression example": [[27, null]], "Papers citing SpectroChemPy": [[305, null]], "Parameter Documentation": [[8, "parameter-documentation"]], "Partial Least Square regression": [[304, "partial-least-square-regression"]], "Partial Least Squares Regression (PLSRegression)": [[313, null]], "Peak Integration": [[312, null]], "Peak Maxima Finding": [[311, null]], "Peak finding": [[307, "Peak-finding"]], "Peak fitting": [[75, "peak-fitting"]], "Peak picking": [[75, "peak-picking"]], "Phasing": [[304, "phasing"]], "Plot of the Real and Imaginary original data": [[330, "Plot-of-the-Real-and-Imaginary-original-data"]], "Plot results": [[21, "plot-results"]], "Plotting": [[304, "plotting"], [328, null]], "Plotting 1D datasets": [[328, "Plotting-1D-datasets"]], "Plotting datasets": [[49, null], [56, "plotting-datasets"]], "Plotting several dataset on the same figure": [[328, "Plotting-several-dataset-on-the-same-figure"]], "Plotting the results": [[19, "plotting-the-results"]], "Polynomial": [[331, "Polynomial"]], "Polynomial trend": [[331, "Polynomial-trend"]], "Power spectrum": [[333, "Power-spectrum"]], "Pre-commit": [[6, "pre-commit"]], "Prepare the dataset to NMF factorize": [[21, "prepare-the-dataset-to-nmf-factorize"]], "Preparing the data": [[328, "Preparing-the-data"]], "Preprocessing": [[333, "Preprocessing"]], "Prerequisites": [[84, "prerequisites"], [88, "prerequisites"]], "Principal Component Analysis": [[310, null]], "Processing": [[304, "processing"], [334, null]], "Processing NDDataset": [[72, null]], "Processing NMR datasets": [[72, "processing-nmr-datasets"], [73, null]], "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)": [[75, null]], "Processing RAMAN spectra": [[79, null]], "Processing Raman datasets": [[72, "processing-raman-datasets"], [78, null]], "Processing Relaxation measurement": [[76, null]], "Processing functions": [[324, "Processing-functions"]], "Project": [[326, "project"]], "Project Management": [[53, null], [56, "project-management"]], "Project creation": [[54, null], [327, "Project-creation"]], "Project management": [[304, "project-management"], [327, null]], "Prominence": [[311, "Prominence"]], "Public API reference": [[304, null]], "Python (PEP8 / ruff)": [[6, "python-pep8-ruff"]], "Python-Powered Analysis": [[91, "python-powered-analysis"]], "Qt Backend": [[85, "qt-backend"]], "Quick Start": [[9, "quick-start"], [86, "quick-start"]], "Quickstart Tutorial \ud83d\ude80": [[90, null]], "Reading OPUS file Metadata": [[319, "Reading-OPUS-file-Metadata"]], "Reading Renishaw WiRE files": [[47, null]], "Reading datasets": [[42, null]], "Reading directories": [[315, "Reading-directories"]], "Reading files from a ZIP archive": [[315, "Reading-files-from-a-ZIP-archive"]], "Real Fourier transform": [[333, "Real-Fourier-transform"]], "Reconstruct the dataset": [[17, "reconstruct-the-dataset"]], "Release notes": [[342, null]], "Remove an element from a project": [[327, "Remove-an-element-from-a-project"]], "Removing cosmic ray spikes from a Raman spectrum": [[67, null]], "Removing cosmic rays spike from Raman spectra": [[332, "Removing-cosmic-rays-spike-from-Raman-spectra"]], "Reporting Issues": [[12, null]], "Requirements": [[87, "requirements"], [89, "requirements"]], "Revisions 0.1.0 to 0.1.19": [[344, null]], "Rolling": [[304, "rolling"]], "Rubberband": [[331, "Rubberband"]], "Running PLSRegression": [[313, "Running-PLSRegression"]], "Running a PCA": [[310, "Running-a-PCA"]], "Running the test suite": [[6, "running-the-test-suite"]], "SIMPLISMA example": [[24, null]], "SIMPLe to use Interactive Self-modeling Mixture Analysis": [[304, "simple-to-use-interactive-self-modeling-mixture-analysis"]], "Saving": [[327, "Saving"]], "Saving and loading projects": [[327, "Saving-and-loading-projects"]], "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum": [[70, null]], "Savitzky-Golay filter": [[338, "Savitzky-Golay-filter"]], "Savitzky-Golay filter:savgol": [[338, "Savitzky-Golay-filter:savgol"]], "Scientific Computing Extensions": [[85, "scientific-computing-extensions"]], "Script": [[326, "script"]], "Scripting": [[304, "scripting"]], "See also": [[3, null]], "Select data in a NDDataset": [[304, "select-data-in-a-nddataset"]], "Selecting the output window": [[328, "Selecting-the-output-window"]], "Setting Up Your Development Environment": [[5, "setting-up-your-development-environment"]], "Setting coordinates using set_coordset": [[325, "Setting-coordinates-using-set_coordset"]], "Setting new coordinates": [[18, "setting-new-coordinates"], [37, "setting-new-coordinates"]], "Sharing coordinates between dimensions": [[325, "Sharing-coordinates-between-dimensions"]], "Shifted Gaussian-Lorentzian apodization": [[330, "Shifted-Gaussian-Lorentzian-apodization"]], "Shifted apodization": [[330, "Shifted-apodization"]], "Sine bell and squared Sine bell window multiplication": [[60, null]], "Singular value decomposition and Principal component analysis": [[304, "singular-value-decomposition-and-principal-component-analysis"]], "Slicing NDDatasets": [[337, null]], "Slicing of NDDatasets": [[337, "Slicing-of-NDDatasets"]], "Slicing with coordinates": [[337, "Slicing-with-coordinates"]], "Slicing with indexes": [[337, "Slicing-with-indexes"]], "Smoothing, filtering, denoising": [[304, "smoothing-filtering-denoising"]], "Solutions": [[309, "Solutions"]], "Solve a linear equation using LSTSQ": [[31, null]], "Solving a linear equation using the least square method (LSTSQ)": [[307, "Solving-a-linear-equation-using-the-least-square-method-(LSTSQ)"]], "Sorting": [[304, "sorting"]], "Source control": [[13, "source-control"]], "Spectral Smoothing": [[90, "Spectral-Smoothing"]], "SpectroChemPy Docstring Guide": [[8, null]], "SpectroChemPy: Advanced Spectroscopic Data Analysis": [[92, null]], "SpectroChempy License": [[2, null]], "Stack Overflow": [[83, "stack-overflow"]], "Start editing": [[13, "start-editing"]], "Starting Jupyter lab": [[322, null]], "Statistical operations": [[304, "statistical-operations"]], "Step 1: Add Tests and Sample Files": [[4, "step-1-add-tests-and-sample-files"]], "Step 2: Register the File Format": [[4, "step-2-register-the-file-format"]], "Step 3: Create the Reader Module": [[4, "step-3-create-the-reader-module"]], "Step 4: Data Format Guidelines": [[4, "step-4-data-format-guidelines"]], "Step 5: Documentation": [[4, "step-5-documentation"]], "Summary of the coordinate setting syntax": [[325, "Summary-of-the-coordinate-setting-syntax"]], "Sums, integal, difference": [[304, "sums-integal-difference"]], "Supported IR File Formats": [[316, "supported-ir-file-formats"]], "Syntax 1": [[325, "Syntax-1"]], "Syntax 2": [[325, "Syntax-2"]], "Syntax for parameters definition": [[307, "Syntax-for-parameters-definition"]], "Table of Contents": [[84, "table-of-contents"], [86, "table-of-contents"], [87, "table-of-contents"], [89, "table-of-contents"], [94, "table-of-contents"], [304, "table-of-contents"], [325, "Table-of-Contents"]], "Table of Contents:": [[6, "table-of-contents"]], "Table of contents:": [[5, "table-of-contents"]], "Test-driven development/code writing": [[6, "test-driven-development-code-writing"]], "Testing with continuous integration": [[6, "testing-with-continuous-integration"]], "The (minimal) dataset": [[309, "The-(minimal)-dataset"]], "The Baseline processor": [[331, "The-Baseline-processor"]], "The Filter processor": [[338, "The-Filter-processor"]], "The NDDataset Object": [[304, "the-nddataset-object"]], "The NDDataset object": [[325, null]], "The order of spectra": [[318, "The-order-of-spectra"]], "The smooth method": [[338, "The-smooth-method"]], "Third-party Licenses": [[1, "third-party-licenses"]], "Time domain baseline correction": [[333, "Time-domain-baseline-correction"]], "Time domain baseline correction (NMR)": [[339, null]], "Time-domain processing": [[304, "time-domain-processing"]], "Tips for Success": [[5, "tips-for-success"]], "To get help about the different configuration parameters": [[309, "To-get-help-about-the-different-configuration-parameters"]], "Todo": [[326, "id1"]], "Transpose-like operations": [[304, "transpose-like-operations"]], "Transposition": [[340, "Transposition"]], "Trigonometric functions. Require dimensionless/unitless dataset or radians.": [[336, "Trigonometric-functions.-Require-dimensionless/unitless-dataset-or-radians."]], "Trigonometric functions. Require unitless data or radian units.": [[336, "Trigonometric-functions.-Require-unitless-data-or-radian-units."]], "Troubleshooting": [[85, "troubleshooting"]], "Ufuncs (Universal Numpy\u2019s functions)": [[336, "Ufuncs-(Universal-Numpy's-functions)"]], "Unary functions": [[336, "Unary-functions"]], "Understanding the NDDataset object": [[90, "Understanding-the-NDDataset-object"]], "Unit conversions": [[336, "Unit-conversions"]], "Units": [[325, "Units"]], "Units for dataset": [[38, "units-for-dataset"]], "Units manipulation": [[304, "units-manipulation"]], "Units manipulation examples": [[38, null]], "Updating SpectroChemPy": [[88, "updating-spectrochempy"]], "Uploading a dataset": [[37, "uploading-a-dataset"]], "Uploading dataset": [[18, "uploading-dataset"]], "Usage": [[336, "Usage"]], "Use of PCA to assess the number of pure species": [[309, "Use-of-PCA-to-assess-the-number-of-pure-species"]], "Use os or pathlib packages": [[315, "Use-os-or-pathlib-packages"]], "Use relative paths": [[315, "Use-relative-paths"]], "User Guide and Tutorials": [[321, null]], "Using File Explorer": [[86, "using-file-explorer"]], "Using Git Repository": [[86, "using-git-repository"]], "Using Google Drive": [[86, "using-google-drive"]], "Using a specific reader": [[315, "Using-a-specific-reader"]], "Using numpy-like constructors of NDDatasets": [[325, "Using-numpy-like-constructors-of-NDDatasets"]], "Using plot_multiple to plot several datasets on the same figure": [[50, null]], "Using pytest": [[6, "using-pytest"]], "Using relative or absolute pathnames": [[315, "Using-relative-or-absolute-pathnames"]], "Using the application in a web browser": [[322, "Using-the-application-in-a-web-browser"]], "Utilities": [[304, "utilities"], [304, "id1"]], "Verifying Installation": [[87, "verifying-installation"], [88, "verifying-installation"], [89, "verifying-installation"]], "Version 0.1": [[342, "version-0-1"]], "Version 0.2": [[342, "version-0-2"]], "Version 0.3": [[342, "version-0-3"]], "Version 0.4": [[342, "version-0-4"]], "Version 0.5": [[342, "version-0-5"]], "Version 0.6": [[342, "version-0-6"]], "Version 0.7": [[342, "version-0-7"]], "Version 0.8": [[342, "version-0-8"]], "Version Control Setup": [[5, "version-control-setup"]], "Visual Studio Installation": [[13, "visual-studio-installation"]], "What is the slicing ?": [[337, "What-is-the-slicing-?"]], "What to do if questions arise": [[323, "What-to-do-if-questions-arise"]], "What\u2019s New in Revision": [[341, null]], "What\u2019s New in Revision 0.8.0": [[343, null], [396, null]], "What\u2019s new in revision 0.2.0": [[345, null]], "What\u2019s new in revision 0.2.10 [2021-02-14]": [[346, null]], "What\u2019s new in revision 0.2.11 [2021-02-17]": [[347, null]], "What\u2019s new in revision 0.2.12 [2021-02-23]": [[348, null]], "What\u2019s new in revision 0.2.13 [2021-02-23]": [[349, null]], "What\u2019s new in revision 0.2.14 [2021-02-25]": [[350, null]], "What\u2019s new in revision 0.2.15 [2021-03-29]": [[351, null]], "What\u2019s new in revision 0.2.16 [2021-11-11]": [[352, null]], "What\u2019s new in revision 0.2.17 [2021-11-29]": [[353, null]], "What\u2019s new in revision 0.2.18 [2022-01-05]": [[354, null]], "What\u2019s new in revision 0.2.21 [2022-01-09]": [[355, null]], "What\u2019s new in revision 0.2.22 [2022-01-10]": [[356, null]], "What\u2019s new in revision 0.2.23 [2022-01-16]": [[357, null]], "What\u2019s new in revision 0.2.4": [[358, null]], "What\u2019s new in revision 0.2.5": [[359, null]], "What\u2019s new in revision 0.2.6": [[360, null]], "What\u2019s new in revision 0.2.7": [[361, null]], "What\u2019s new in revision 0.2.8": [[362, null]], "What\u2019s new in revision 0.2.9 [2021-11-29]": [[363, null]], "What\u2019s new in revision 0.3.0 [2022-01-20]": [[364, null]], "What\u2019s new in revision 0.3.1 [2022-01-21]": [[365, null]], "What\u2019s new in revision 0.3.2 [2022-01-31]": [[366, null]], "What\u2019s new in revision 0.3.3 [2022-03-9]": [[367, null]], "What\u2019s new in revision 0.4.1 [2022-03-14]": [[368, null]], "What\u2019s new in revision 0.4.10 [2023-01-07]": [[369, null]], "What\u2019s new in revision 0.4.2 [2022-03-16]": [[370, null]], "What\u2019s new in revision 0.4.3 [2022-03-20]": [[371, null]], "What\u2019s new in revision 0.4.4 [2022-03-22]": [[372, null]], "What\u2019s new in revision 0.4.5 [2022-04-09]": [[373, null]], "What\u2019s new in revision 0.4.6 [2022-05-16]": [[374, null]], "What\u2019s new in revision 0.4.7 [2022-05-16]": [[375, null]], "What\u2019s new in revision 0.4.9 [2023-01-05]": [[376, null]], "What\u2019s new in revision 0.5.0 [2023-01-11]": [[377, null]], "What\u2019s new in revision 0.5.1": [[378, null]], "What\u2019s new in revision 0.5.2": [[379, null]], "What\u2019s new in revision 0.5.3": [[380, null]], "What\u2019s new in revision 0.5.4": [[381, null]], "What\u2019s new in revision 0.5.5": [[382, null]], "What\u2019s new in revision 0.6.1": [[383, null]], "What\u2019s new in revision 0.6.10": [[384, null]], "What\u2019s new in revision 0.6.2": [[385, null]], "What\u2019s new in revision 0.6.3": [[386, null]], "What\u2019s new in revision 0.6.4": [[387, null]], "What\u2019s new in revision 0.6.5": [[388, null]], "What\u2019s new in revision 0.6.6": [[389, null]], "What\u2019s new in revision 0.6.7": [[390, null]], "What\u2019s new in revision 0.6.8": [[391, null]], "What\u2019s new in revision 0.6.9": [[392, null]], "What\u2019s new in revision 0.7.0": [[393, null]], "What\u2019s new in revision 0.7.1": [[394, null]], "What\u2019s new in revision 0.7.2": [[395, null]], "Where are the preference\u2019s files saved?": [[94, "where-are-the-preference-s-files-saved"]], "Where to go next?": [[323, "Where-to-go-next?"]], "Whittaker-Eilers filter": [[338, "Whittaker-Eilers-filter"]], "Whittaker-eilers filter : whittaker": [[338, "Whittaker-eilers-filter-:-whittaker"]], "Why NOT SpectroChemPy ?": [[91, "why-not-spectrochempy"]], "Why SpectroChemPy?": [[91, null]], "Width": [[311, "Width"]], "Window size influence": [[338, "Window-size-influence"]], "With regularization and a manual search": [[18, "with-regularization-and-a-manual-search"]], "Working with Data": [[86, "working-with-data"]], "Working with Spectroscopic Data": [[90, "Working-with-Spectroscopic-Data"]], "Writing Tips": [[9, "writing-tips"]], "Writing and executing SpectroChemPy scripts": [[323, "Writing-and-executing-SpectroChemPy-scripts"]], "Writing tests": [[6, "writing-tests"]], "Zero-filling": [[304, "zero-filling"], [333, "Zero-filling"]], "abs": [[336, "abs"]], "absolute (alias of abs)": [[336, "absolute-(alias-of-abs)"]], "add": [[336, "add"]], "arccos": [[336, "arccos"]], "arccosh": [[336, "arccosh"]], "arcsin": [[336, "arcsin"]], "arcsinh": [[336, "arcsinh"]], "arctan": [[336, "arctan"]], "arctanh": [[336, "arctanh"]], "basc": [[331, "basc"]], "cbrt": [[336, "cbrt"]], "ceil": [[336, "ceil"]], "cos": [[336, "cos"]], "cosh": [[336, "cosh"]], "deg2rad": [[336, "deg2rad"]], "despike method": [[332, "despike-method"]], "divide": [[336, "divide"]], "exp": [[336, "exp"]], "exp2": [[336, "exp2"]], "expm1": [[336, "expm1"]], "fabs (absolute for float arrays)": [[336, "fabs-(absolute-for-float-arrays)"]], "filtering": [[69, null], [72, "filtering"]], "first method": [[329, "first-method"]], "floor": [[336, "floor"]], "floor_divide": [[336, "floor_divide"]], "inner method": [[329, "inner-method"]], "isfinite": [[336, "isfinite"]], "isinf": [[336, "isinf"]], "isnan": [[336, "isnan"]], "last method": [[329, "last-method"]], "log": [[336, "log"]], "log10": [[336, "log10"]], "log1p": [[336, "log1p"]], "log2": [[336, "log2"]], "logical_not": [[336, "logical_not"]], "multiply": [[336, "multiply"]], "nD-Dataset (multidimensional dataset)": [[325, "nD-Dataset-(multidimensional-dataset)"]], "nd-Dataset": [[36, "nd-dataset"], [39, "nd-dataset"]], "negative": [[336, "negative"]], "rad2deg": [[336, "rad2deg"]], "reciprocal": [[336, "reciprocal"]], "rint": [[336, "rint"]], "sign": [[336, "sign"]], "signbit": [[336, "signbit"]], "sin": [[336, "sin"]], "sinh": [[336, "sinh"]], "spectrochempy.ActionMassKinetics": [[95, null]], "spectrochempy.Baseline": [[96, null]], "spectrochempy.Coord": [[97, null]], "spectrochempy.CoordSet": [[98, null]], "spectrochempy.EFA": [[99, null]], "spectrochempy.FastICA": [[100, null]], "spectrochempy.Filter": [[101, null]], "spectrochempy.IRIS": [[102, null]], "spectrochempy.IrisKernel": [[103, null]], "spectrochempy.LSTSQ": [[104, null]], "spectrochempy.MCRALS": [[105, null]], "spectrochempy.NDDataset": [[106, null]], "spectrochempy.NDDataset.save": [[107, null]], "spectrochempy.NDDataset.save_as": [[108, null]], "spectrochempy.NMF": [[109, null]], "spectrochempy.NNLS": [[110, null]], "spectrochempy.Optimize": [[111, null]], "spectrochempy.PCA": [[112, null]], "spectrochempy.PFR": [[113, null]], "spectrochempy.PLSRegression": [[114, null]], "spectrochempy.Project": [[115, null]], "spectrochempy.Quantity": [[116, null]], "spectrochempy.SIMPLISMA": [[117, null]], "spectrochempy.SVD": [[118, null]], "spectrochempy.Script": [[119, null]], "spectrochempy.Unit": [[120, null]], "spectrochempy.abs": [[121, null]], "spectrochempy.absolute": [[122, null]], "spectrochempy.align": [[123, null]], "spectrochempy.all": [[124, null]], "spectrochempy.amax": [[125, null]], "spectrochempy.amin": [[126, null]], "spectrochempy.any": [[127, null]], "spectrochempy.arange": [[128, null]], "spectrochempy.argmax": [[129, null]], "spectrochempy.argmin": [[130, null]], "spectrochempy.around": [[131, null]], "spectrochempy.asls": [[132, null]], "spectrochempy.asymmetricvoigtmodel": [[133, null]], "spectrochempy.autosub": [[134, null]], "spectrochempy.average": [[135, null]], "spectrochempy.bartlett": [[136, null]], "spectrochempy.basc": [[137, null]], "spectrochempy.blackmanharris": [[138, null]], "spectrochempy.clip": [[139, null]], "spectrochempy.concatenate": [[140, null]], "spectrochempy.conj": [[141, null]], "spectrochempy.conjugate": [[142, null]], "spectrochempy.coordmax": [[143, null]], "spectrochempy.coordmin": [[144, null]], "spectrochempy.cs": [[145, null]], "spectrochempy.cumsum": [[146, null]], "spectrochempy.dc": [[147, null]], "spectrochempy.debug_": [[148, null]], "spectrochempy.denoise": [[149, null]], "spectrochempy.despike": [[150, null]], "spectrochempy.detrend": [[151, null]], "spectrochempy.diag": [[152, null]], "spectrochempy.diagonal": [[153, null]], "spectrochempy.dot": [[154, null]], "spectrochempy.download_nist_ir": [[155, null]], "spectrochempy.em": [[156, null]], "spectrochempy.empty": [[157, null]], "spectrochempy.empty_like": [[158, null]], "spectrochempy.error_": [[159, null]], "spectrochempy.eye": [[160, null]], "spectrochempy.fft": [[161, null]], "spectrochempy.find_peaks": [[162, null]], "spectrochempy.fromfunction": [[163, null]], "spectrochempy.fromiter": [[164, null]], "spectrochempy.fsh": [[165, null]], "spectrochempy.fsh2": [[166, null]], "spectrochempy.full": [[167, null]], "spectrochempy.full_like": [[168, null]], "spectrochempy.gaussianmodel": [[169, null]], "spectrochempy.general_hamming": [[170, null]], "spectrochempy.geomspace": [[171, null]], "spectrochempy.get_baseline": [[172, null]], "spectrochempy.get_loglevel": [[173, null]], "spectrochempy.gm": [[174, null]], "spectrochempy.hamming": [[175, null]], "spectrochempy.hann": [[176, null]], "spectrochempy.ht": [[177, null]], "spectrochempy.identity": [[178, null]], "spectrochempy.ifft": [[179, null]], "spectrochempy.info_": [[180, null]], "spectrochempy.interpolate": [[181, null]], "spectrochempy.is_units_compatible": [[182, null]], "spectrochempy.ito": [[183, null]], "spectrochempy.ito_base_units": [[184, null]], "spectrochempy.ito_reduced_units": [[185, null]], "spectrochempy.linspace": [[186, null]], "spectrochempy.load": [[187, null]], "spectrochempy.load_iris": [[188, null]], "spectrochempy.logspace": [[189, null]], "spectrochempy.lorentzianmodel": [[190, null]], "spectrochempy.ls": [[191, null]], "spectrochempy.max": [[192, null]], "spectrochempy.mc": [[193, null]], "spectrochempy.mean": [[194, null]], "spectrochempy.min": [[195, null]], "spectrochempy.multiplot": [[196, null]], "spectrochempy.multiplot_image": [[197, null]], "spectrochempy.multiplot_lines": [[198, null]], "spectrochempy.multiplot_map": [[199, null]], "spectrochempy.multiplot_scatter": [[200, null]], "spectrochempy.multiplot_stack": [[201, null]], "spectrochempy.multiplot_with_transposed": [[202, null]], "spectrochempy.ones": [[203, null]], "spectrochempy.ones_like": [[204, null]], "spectrochempy.pathclean": [[205, null]], "spectrochempy.pipe": [[206, null]], "spectrochempy.pk": [[207, null]], "spectrochempy.pk_exp": [[208, null]], "spectrochempy.plot": [[209, null]], "spectrochempy.plot_1D": [[210, null]], "spectrochempy.plot_2D": [[211, null]], "spectrochempy.plot_3D": [[212, null]], "spectrochempy.plot_bar": [[213, null]], "spectrochempy.plot_image": [[214, null]], "spectrochempy.plot_map": [[215, null]], "spectrochempy.plot_multiple": [[216, null]], "spectrochempy.plot_pen": [[217, null]], "spectrochempy.plot_scatter": [[218, null]], "spectrochempy.plot_scatter_pen": [[219, null]], "spectrochempy.plot_stack": [[220, null]], "spectrochempy.plot_surface": [[221, null]], "spectrochempy.plot_waterfall": [[222, null]], "spectrochempy.plot_with_transposed": [[223, null]], "spectrochempy.polynomialbaseline": [[224, null]], "spectrochempy.ps": [[225, null]], "spectrochempy.ptp": [[226, null]], "spectrochempy.qsin": [[227, null]], "spectrochempy.random": [[228, null]], "spectrochempy.read": [[229, null]], "spectrochempy.read_carroucell": [[230, null]], "spectrochempy.read_csv": [[231, null]], "spectrochempy.read_ddr": [[232, null]], "spectrochempy.read_dir": [[233, null]], "spectrochempy.read_hdr": [[234, null]], "spectrochempy.read_jcamp": [[235, null]], "spectrochempy.read_labspec": [[236, null]], "spectrochempy.read_mat": [[237, null]], "spectrochempy.read_matlab": [[238, null]], "spectrochempy.read_omnic": [[239, null]], "spectrochempy.read_opus": [[240, null]], "spectrochempy.read_quadera": [[241, null]], "spectrochempy.read_sdr": [[242, null]], "spectrochempy.read_soc": [[243, null]], "spectrochempy.read_spa": [[244, null]], "spectrochempy.read_spc": [[245, null]], "spectrochempy.read_spg": [[246, null]], "spectrochempy.read_srs": [[247, null]], "spectrochempy.read_topspin": [[248, null]], "spectrochempy.read_wdf": [[249, null]], "spectrochempy.read_wire": [[250, null]], "spectrochempy.read_zip": [[251, null]], "spectrochempy.remove_masks": [[252, null]], "spectrochempy.roll": [[253, null]], "spectrochempy.round": [[254, null]], "spectrochempy.rs": [[255, null]], "spectrochempy.run_all_scripts": [[256, null]], "spectrochempy.run_script": [[257, null]], "spectrochempy.savgol": [[258, null]], "spectrochempy.set_complex": [[259, null]], "spectrochempy.set_loglevel": [[260, null]], "spectrochempy.set_nmr_context": [[261, null]], "spectrochempy.show": [[262, null]], "spectrochempy.show_versions": [[263, null]], "spectrochempy.sigmoidmodel": [[264, null]], "spectrochempy.simpson": [[265, null]], "spectrochempy.sine": [[266, null]], "spectrochempy.sinm": [[267, null]], "spectrochempy.smooth": [[268, null]], "spectrochempy.snip": [[269, null]], "spectrochempy.sort": [[270, null]], "spectrochempy.sp": [[271, null]], "spectrochempy.squeeze": [[272, null]], "spectrochempy.stack": [[273, null]], "spectrochempy.std": [[274, null]], "spectrochempy.sum": [[275, null]], "spectrochempy.swapdims": [[276, null]], "spectrochempy.take": [[277, null]], "spectrochempy.to": [[278, null]], "spectrochempy.to_array": [[279, null]], "spectrochempy.to_base_units": [[280, null]], "spectrochempy.to_reduced_units": [[281, null]], "spectrochempy.to_xarray": [[282, null]], "spectrochempy.transpose": [[283, null]], "spectrochempy.trapezoid": [[284, null]], "spectrochempy.triang": [[285, null]], "spectrochempy.var": [[286, null]], "spectrochempy.voigtmodel": [[287, null]], "spectrochempy.warning_": [[288, null]], "spectrochempy.whittaker": [[289, null]], "spectrochempy.write": [[290, null]], "spectrochempy.write_csv": [[291, null]], "spectrochempy.write_excel": [[292, null]], "spectrochempy.write_jcamp": [[293, null]], "spectrochempy.write_mat": [[294, null]], "spectrochempy.write_matlab": [[295, null]], "spectrochempy.write_xls": [[296, null]], "spectrochempy.zeros": [[297, null]], "spectrochempy.zeros_like": [[298, null]], "spectrochempy.zf": [[299, null]], "spectrochempy.zf_auto": [[300, null]], "spectrochempy.zf_double": [[301, null]], "spectrochempy.zf_size": [[302, null]], "sqrt": [[336, "sqrt"]], "square": [[336, "square"]], "subtract": [[336, "subtract"]], "tan": [[336, "tan"]], "tanh": [[336, "tanh"]], "trunc": [[336, "trunc"]]}, "docnames": ["credits/citing", "credits/credits", "credits/license", "credits/seealso", "devguide/codespec_adding_reader", "devguide/contributing", "devguide/contributing_codebase", "devguide/contributing_codespecifics", "devguide/contributing_docstring", "devguide/contributing_documentation", "devguide/examples", "devguide/index", "devguide/issues", "devguide/visualcode", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/index", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_preferences", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/e_project/index", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/index", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/baseline/index", "gettingstarted/examples/gallery/auto_examples_processing/baseline/plot_baseline_correction", "gettingstarted/examples/gallery/auto_examples_processing/baseline/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/raman/index", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times", "gettingstarted/examples/index", "gettingstarted/getting_help", "gettingstarted/install/index", "gettingstarted/install/install_adds", "gettingstarted/install/install_colab", "gettingstarted/install/install_mac_linux", "gettingstarted/install/install_sources", "gettingstarted/install/install_win", "gettingstarted/quickstart", "gettingstarted/whyscpy", "index", "reference/bibliography", "reference/faq", "reference/generated/spectrochempy.ActionMassKinetics", "reference/generated/spectrochempy.Baseline", "reference/generated/spectrochempy.Coord", "reference/generated/spectrochempy.CoordSet", "reference/generated/spectrochempy.EFA", "reference/generated/spectrochempy.FastICA", "reference/generated/spectrochempy.Filter", "reference/generated/spectrochempy.IRIS", "reference/generated/spectrochempy.IrisKernel", "reference/generated/spectrochempy.LSTSQ", "reference/generated/spectrochempy.MCRALS", "reference/generated/spectrochempy.NDDataset", "reference/generated/spectrochempy.NDDataset.save", "reference/generated/spectrochempy.NDDataset.save_as", "reference/generated/spectrochempy.NMF", "reference/generated/spectrochempy.NNLS", "reference/generated/spectrochempy.Optimize", "reference/generated/spectrochempy.PCA", "reference/generated/spectrochempy.PFR", "reference/generated/spectrochempy.PLSRegression", "reference/generated/spectrochempy.Project", "reference/generated/spectrochempy.Quantity", "reference/generated/spectrochempy.SIMPLISMA", "reference/generated/spectrochempy.SVD", "reference/generated/spectrochempy.Script", "reference/generated/spectrochempy.Unit", "reference/generated/spectrochempy.abs", "reference/generated/spectrochempy.absolute", "reference/generated/spectrochempy.align", "reference/generated/spectrochempy.all", "reference/generated/spectrochempy.amax", "reference/generated/spectrochempy.amin", "reference/generated/spectrochempy.any", "reference/generated/spectrochempy.arange", "reference/generated/spectrochempy.argmax", "reference/generated/spectrochempy.argmin", "reference/generated/spectrochempy.around", "reference/generated/spectrochempy.asls", "reference/generated/spectrochempy.asymmetricvoigtmodel", "reference/generated/spectrochempy.autosub", "reference/generated/spectrochempy.average", "reference/generated/spectrochempy.bartlett", "reference/generated/spectrochempy.basc", "reference/generated/spectrochempy.blackmanharris", "reference/generated/spectrochempy.clip", "reference/generated/spectrochempy.concatenate", "reference/generated/spectrochempy.conj", "reference/generated/spectrochempy.conjugate", "reference/generated/spectrochempy.coordmax", "reference/generated/spectrochempy.coordmin", "reference/generated/spectrochempy.cs", "reference/generated/spectrochempy.cumsum", "reference/generated/spectrochempy.dc", "reference/generated/spectrochempy.debug_", "reference/generated/spectrochempy.denoise", "reference/generated/spectrochempy.despike", "reference/generated/spectrochempy.detrend", "reference/generated/spectrochempy.diag", "reference/generated/spectrochempy.diagonal", "reference/generated/spectrochempy.dot", "reference/generated/spectrochempy.download_nist_ir", "reference/generated/spectrochempy.em", "reference/generated/spectrochempy.empty", "reference/generated/spectrochempy.empty_like", "reference/generated/spectrochempy.error_", "reference/generated/spectrochempy.eye", "reference/generated/spectrochempy.fft", "reference/generated/spectrochempy.find_peaks", "reference/generated/spectrochempy.fromfunction", "reference/generated/spectrochempy.fromiter", "reference/generated/spectrochempy.fsh", "reference/generated/spectrochempy.fsh2", "reference/generated/spectrochempy.full", "reference/generated/spectrochempy.full_like", "reference/generated/spectrochempy.gaussianmodel", "reference/generated/spectrochempy.general_hamming", "reference/generated/spectrochempy.geomspace", "reference/generated/spectrochempy.get_baseline", "reference/generated/spectrochempy.get_loglevel", "reference/generated/spectrochempy.gm", "reference/generated/spectrochempy.hamming", "reference/generated/spectrochempy.hann", "reference/generated/spectrochempy.ht", "reference/generated/spectrochempy.identity", "reference/generated/spectrochempy.ifft", "reference/generated/spectrochempy.info_", "reference/generated/spectrochempy.interpolate", "reference/generated/spectrochempy.is_units_compatible", "reference/generated/spectrochempy.ito", "reference/generated/spectrochempy.ito_base_units", "reference/generated/spectrochempy.ito_reduced_units", "reference/generated/spectrochempy.linspace", "reference/generated/spectrochempy.load", "reference/generated/spectrochempy.load_iris", "reference/generated/spectrochempy.logspace", "reference/generated/spectrochempy.lorentzianmodel", "reference/generated/spectrochempy.ls", "reference/generated/spectrochempy.max", "reference/generated/spectrochempy.mc", "reference/generated/spectrochempy.mean", "reference/generated/spectrochempy.min", "reference/generated/spectrochempy.multiplot", "reference/generated/spectrochempy.multiplot_image", "reference/generated/spectrochempy.multiplot_lines", "reference/generated/spectrochempy.multiplot_map", "reference/generated/spectrochempy.multiplot_scatter", "reference/generated/spectrochempy.multiplot_stack", "reference/generated/spectrochempy.multiplot_with_transposed", "reference/generated/spectrochempy.ones", "reference/generated/spectrochempy.ones_like", "reference/generated/spectrochempy.pathclean", "reference/generated/spectrochempy.pipe", "reference/generated/spectrochempy.pk", "reference/generated/spectrochempy.pk_exp", "reference/generated/spectrochempy.plot", "reference/generated/spectrochempy.plot_1D", "reference/generated/spectrochempy.plot_2D", "reference/generated/spectrochempy.plot_3D", "reference/generated/spectrochempy.plot_bar", "reference/generated/spectrochempy.plot_image", "reference/generated/spectrochempy.plot_map", "reference/generated/spectrochempy.plot_multiple", "reference/generated/spectrochempy.plot_pen", "reference/generated/spectrochempy.plot_scatter", "reference/generated/spectrochempy.plot_scatter_pen", "reference/generated/spectrochempy.plot_stack", "reference/generated/spectrochempy.plot_surface", "reference/generated/spectrochempy.plot_waterfall", "reference/generated/spectrochempy.plot_with_transposed", "reference/generated/spectrochempy.polynomialbaseline", "reference/generated/spectrochempy.ps", "reference/generated/spectrochempy.ptp", "reference/generated/spectrochempy.qsin", "reference/generated/spectrochempy.random", "reference/generated/spectrochempy.read", "reference/generated/spectrochempy.read_carroucell", "reference/generated/spectrochempy.read_csv", "reference/generated/spectrochempy.read_ddr", "reference/generated/spectrochempy.read_dir", "reference/generated/spectrochempy.read_hdr", "reference/generated/spectrochempy.read_jcamp", "reference/generated/spectrochempy.read_labspec", "reference/generated/spectrochempy.read_mat", "reference/generated/spectrochempy.read_matlab", "reference/generated/spectrochempy.read_omnic", "reference/generated/spectrochempy.read_opus", "reference/generated/spectrochempy.read_quadera", "reference/generated/spectrochempy.read_sdr", "reference/generated/spectrochempy.read_soc", "reference/generated/spectrochempy.read_spa", "reference/generated/spectrochempy.read_spc", "reference/generated/spectrochempy.read_spg", "reference/generated/spectrochempy.read_srs", "reference/generated/spectrochempy.read_topspin", "reference/generated/spectrochempy.read_wdf", "reference/generated/spectrochempy.read_wire", "reference/generated/spectrochempy.read_zip", "reference/generated/spectrochempy.remove_masks", "reference/generated/spectrochempy.roll", "reference/generated/spectrochempy.round", "reference/generated/spectrochempy.rs", "reference/generated/spectrochempy.run_all_scripts", "reference/generated/spectrochempy.run_script", "reference/generated/spectrochempy.savgol", "reference/generated/spectrochempy.set_complex", "reference/generated/spectrochempy.set_loglevel", "reference/generated/spectrochempy.set_nmr_context", "reference/generated/spectrochempy.show", "reference/generated/spectrochempy.show_versions", "reference/generated/spectrochempy.sigmoidmodel", "reference/generated/spectrochempy.simpson", "reference/generated/spectrochempy.sine", "reference/generated/spectrochempy.sinm", "reference/generated/spectrochempy.smooth", "reference/generated/spectrochempy.snip", "reference/generated/spectrochempy.sort", "reference/generated/spectrochempy.sp", "reference/generated/spectrochempy.squeeze", "reference/generated/spectrochempy.stack", "reference/generated/spectrochempy.std", "reference/generated/spectrochempy.sum", "reference/generated/spectrochempy.swapdims", "reference/generated/spectrochempy.take", "reference/generated/spectrochempy.to", "reference/generated/spectrochempy.to_array", "reference/generated/spectrochempy.to_base_units", "reference/generated/spectrochempy.to_reduced_units", "reference/generated/spectrochempy.to_xarray", "reference/generated/spectrochempy.transpose", "reference/generated/spectrochempy.trapezoid", "reference/generated/spectrochempy.triang", "reference/generated/spectrochempy.var", "reference/generated/spectrochempy.voigtmodel", "reference/generated/spectrochempy.warning_", "reference/generated/spectrochempy.whittaker", "reference/generated/spectrochempy.write", "reference/generated/spectrochempy.write_csv", "reference/generated/spectrochempy.write_excel", "reference/generated/spectrochempy.write_jcamp", "reference/generated/spectrochempy.write_mat", "reference/generated/spectrochempy.write_matlab", "reference/generated/spectrochempy.write_xls", "reference/generated/spectrochempy.zeros", "reference/generated/spectrochempy.zeros_like", "reference/generated/spectrochempy.zf", "reference/generated/spectrochempy.zf_auto", "reference/generated/spectrochempy.zf_double", "reference/generated/spectrochempy.zf_size", "reference/glossary", "reference/index", "reference/papers", "sg_execution_times", "userguide/analysis/fitting", "userguide/analysis/index", "userguide/analysis/mcr_als", "userguide/analysis/pca", "userguide/analysis/peak_finding", "userguide/analysis/peak_integration", "userguide/analysis/pls", "userguide/api/api", "userguide/importexport/import", "userguide/importexport/importIR", "userguide/importexport/importJCAMPDX", "userguide/importexport/importOMNIC", "userguide/importexport/importOPUS", "userguide/importexport/index", "userguide/index", "userguide/introduction/interface", "userguide/introduction/introduction", "userguide/introduction/mdcheatsheet", "userguide/objects/dataset/dataset", "userguide/objects/index", "userguide/objects/project/project", "userguide/plotting/plotting", "userguide/processing/alignment", "userguide/processing/apodization", "userguide/processing/baseline", "userguide/processing/denoising", "userguide/processing/fourier", "userguide/processing/index", "userguide/processing/interferogram", "userguide/processing/math_operations", "userguide/processing/slicing", "userguide/processing/smoothing", "userguide/processing/td_baseline", "userguide/processing/transformations", "whatsnew/changelog", "whatsnew/index", "whatsnew/latest", "whatsnew/v0.1.0", "whatsnew/v0.2.0", "whatsnew/v0.2.10", "whatsnew/v0.2.11", "whatsnew/v0.2.12", "whatsnew/v0.2.13", "whatsnew/v0.2.14", "whatsnew/v0.2.15", "whatsnew/v0.2.16", "whatsnew/v0.2.17", "whatsnew/v0.2.18", "whatsnew/v0.2.21", "whatsnew/v0.2.22", "whatsnew/v0.2.23", "whatsnew/v0.2.4", "whatsnew/v0.2.5", "whatsnew/v0.2.6", "whatsnew/v0.2.7", "whatsnew/v0.2.8", "whatsnew/v0.2.9", "whatsnew/v0.3.0", "whatsnew/v0.3.1", "whatsnew/v0.3.2", "whatsnew/v0.3.3", "whatsnew/v0.4.1", "whatsnew/v0.4.10", "whatsnew/v0.4.2", "whatsnew/v0.4.3", "whatsnew/v0.4.4", "whatsnew/v0.4.5", "whatsnew/v0.4.6", "whatsnew/v0.4.7", "whatsnew/v0.4.9", "whatsnew/v0.5.0", "whatsnew/v0.5.1", "whatsnew/v0.5.2", "whatsnew/v0.5.3", "whatsnew/v0.5.4", "whatsnew/v0.5.5", "whatsnew/v0.6.1", "whatsnew/v0.6.10", "whatsnew/v0.6.2", "whatsnew/v0.6.3", "whatsnew/v0.6.4", "whatsnew/v0.6.5", "whatsnew/v0.6.6", "whatsnew/v0.6.7", "whatsnew/v0.6.8", "whatsnew/v0.6.9", "whatsnew/v0.7.0", "whatsnew/v0.7.1", "whatsnew/v0.7.2", "whatsnew/v0.8.0"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["credits/citing.rst", "credits/credits.rst", "credits/license.rst", "credits/seealso.rst", "devguide/codespec_adding_reader.rst", "devguide/contributing.rst", "devguide/contributing_codebase.rst", "devguide/contributing_codespecifics.rst", "devguide/contributing_docstring.rst", "devguide/contributing_documentation.rst", "devguide/examples.rst", "devguide/index.rst", "devguide/issues.rst", "devguide/visualcode.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_preferences.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/index.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/index.rst", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/baseline/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/baseline/plot_baseline_correction.rst", "gettingstarted/examples/gallery/auto_examples_processing/baseline/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times.rst", "gettingstarted/examples/index.rst", "gettingstarted/getting_help.rst", "gettingstarted/install/index.rst", "gettingstarted/install/install_adds.rst", "gettingstarted/install/install_colab.rst", "gettingstarted/install/install_mac_linux.rst", "gettingstarted/install/install_sources.rst", "gettingstarted/install/install_win.rst", "gettingstarted/quickstart.ipynb", "gettingstarted/whyscpy.rst", "index.rst", "reference/bibliography.rst", "reference/faq.rst", "reference/generated/spectrochempy.ActionMassKinetics.rst", "reference/generated/spectrochempy.Baseline.rst", "reference/generated/spectrochempy.Coord.rst", "reference/generated/spectrochempy.CoordSet.rst", "reference/generated/spectrochempy.EFA.rst", "reference/generated/spectrochempy.FastICA.rst", "reference/generated/spectrochempy.Filter.rst", "reference/generated/spectrochempy.IRIS.rst", "reference/generated/spectrochempy.IrisKernel.rst", "reference/generated/spectrochempy.LSTSQ.rst", "reference/generated/spectrochempy.MCRALS.rst", "reference/generated/spectrochempy.NDDataset.rst", "reference/generated/spectrochempy.NDDataset.save.rst", "reference/generated/spectrochempy.NDDataset.save_as.rst", "reference/generated/spectrochempy.NMF.rst", "reference/generated/spectrochempy.NNLS.rst", "reference/generated/spectrochempy.Optimize.rst", "reference/generated/spectrochempy.PCA.rst", "reference/generated/spectrochempy.PFR.rst", "reference/generated/spectrochempy.PLSRegression.rst", "reference/generated/spectrochempy.Project.rst", "reference/generated/spectrochempy.Quantity.rst", "reference/generated/spectrochempy.SIMPLISMA.rst", "reference/generated/spectrochempy.SVD.rst", "reference/generated/spectrochempy.Script.rst", "reference/generated/spectrochempy.Unit.rst", "reference/generated/spectrochempy.abs.rst", "reference/generated/spectrochempy.absolute.rst", "reference/generated/spectrochempy.align.rst", "reference/generated/spectrochempy.all.rst", "reference/generated/spectrochempy.amax.rst", "reference/generated/spectrochempy.amin.rst", "reference/generated/spectrochempy.any.rst", "reference/generated/spectrochempy.arange.rst", "reference/generated/spectrochempy.argmax.rst", "reference/generated/spectrochempy.argmin.rst", "reference/generated/spectrochempy.around.rst", "reference/generated/spectrochempy.asls.rst", "reference/generated/spectrochempy.asymmetricvoigtmodel.rst", "reference/generated/spectrochempy.autosub.rst", "reference/generated/spectrochempy.average.rst", "reference/generated/spectrochempy.bartlett.rst", "reference/generated/spectrochempy.basc.rst", "reference/generated/spectrochempy.blackmanharris.rst", "reference/generated/spectrochempy.clip.rst", "reference/generated/spectrochempy.concatenate.rst", "reference/generated/spectrochempy.conj.rst", "reference/generated/spectrochempy.conjugate.rst", "reference/generated/spectrochempy.coordmax.rst", "reference/generated/spectrochempy.coordmin.rst", "reference/generated/spectrochempy.cs.rst", "reference/generated/spectrochempy.cumsum.rst", "reference/generated/spectrochempy.dc.rst", "reference/generated/spectrochempy.debug_.rst", "reference/generated/spectrochempy.denoise.rst", "reference/generated/spectrochempy.despike.rst", "reference/generated/spectrochempy.detrend.rst", "reference/generated/spectrochempy.diag.rst", "reference/generated/spectrochempy.diagonal.rst", "reference/generated/spectrochempy.dot.rst", "reference/generated/spectrochempy.download_nist_ir.rst", "reference/generated/spectrochempy.em.rst", "reference/generated/spectrochempy.empty.rst", "reference/generated/spectrochempy.empty_like.rst", "reference/generated/spectrochempy.error_.rst", "reference/generated/spectrochempy.eye.rst", "reference/generated/spectrochempy.fft.rst", "reference/generated/spectrochempy.find_peaks.rst", "reference/generated/spectrochempy.fromfunction.rst", "reference/generated/spectrochempy.fromiter.rst", "reference/generated/spectrochempy.fsh.rst", "reference/generated/spectrochempy.fsh2.rst", "reference/generated/spectrochempy.full.rst", "reference/generated/spectrochempy.full_like.rst", "reference/generated/spectrochempy.gaussianmodel.rst", "reference/generated/spectrochempy.general_hamming.rst", "reference/generated/spectrochempy.geomspace.rst", "reference/generated/spectrochempy.get_baseline.rst", "reference/generated/spectrochempy.get_loglevel.rst", "reference/generated/spectrochempy.gm.rst", "reference/generated/spectrochempy.hamming.rst", "reference/generated/spectrochempy.hann.rst", "reference/generated/spectrochempy.ht.rst", "reference/generated/spectrochempy.identity.rst", "reference/generated/spectrochempy.ifft.rst", "reference/generated/spectrochempy.info_.rst", "reference/generated/spectrochempy.interpolate.rst", "reference/generated/spectrochempy.is_units_compatible.rst", "reference/generated/spectrochempy.ito.rst", "reference/generated/spectrochempy.ito_base_units.rst", "reference/generated/spectrochempy.ito_reduced_units.rst", "reference/generated/spectrochempy.linspace.rst", "reference/generated/spectrochempy.load.rst", "reference/generated/spectrochempy.load_iris.rst", "reference/generated/spectrochempy.logspace.rst", "reference/generated/spectrochempy.lorentzianmodel.rst", "reference/generated/spectrochempy.ls.rst", "reference/generated/spectrochempy.max.rst", "reference/generated/spectrochempy.mc.rst", "reference/generated/spectrochempy.mean.rst", "reference/generated/spectrochempy.min.rst", "reference/generated/spectrochempy.multiplot.rst", "reference/generated/spectrochempy.multiplot_image.rst", "reference/generated/spectrochempy.multiplot_lines.rst", "reference/generated/spectrochempy.multiplot_map.rst", "reference/generated/spectrochempy.multiplot_scatter.rst", "reference/generated/spectrochempy.multiplot_stack.rst", "reference/generated/spectrochempy.multiplot_with_transposed.rst", "reference/generated/spectrochempy.ones.rst", "reference/generated/spectrochempy.ones_like.rst", "reference/generated/spectrochempy.pathclean.rst", "reference/generated/spectrochempy.pipe.rst", "reference/generated/spectrochempy.pk.rst", "reference/generated/spectrochempy.pk_exp.rst", "reference/generated/spectrochempy.plot.rst", "reference/generated/spectrochempy.plot_1D.rst", "reference/generated/spectrochempy.plot_2D.rst", "reference/generated/spectrochempy.plot_3D.rst", "reference/generated/spectrochempy.plot_bar.rst", "reference/generated/spectrochempy.plot_image.rst", "reference/generated/spectrochempy.plot_map.rst", "reference/generated/spectrochempy.plot_multiple.rst", "reference/generated/spectrochempy.plot_pen.rst", "reference/generated/spectrochempy.plot_scatter.rst", "reference/generated/spectrochempy.plot_scatter_pen.rst", "reference/generated/spectrochempy.plot_stack.rst", "reference/generated/spectrochempy.plot_surface.rst", "reference/generated/spectrochempy.plot_waterfall.rst", "reference/generated/spectrochempy.plot_with_transposed.rst", "reference/generated/spectrochempy.polynomialbaseline.rst", "reference/generated/spectrochempy.ps.rst", "reference/generated/spectrochempy.ptp.rst", "reference/generated/spectrochempy.qsin.rst", "reference/generated/spectrochempy.random.rst", "reference/generated/spectrochempy.read.rst", "reference/generated/spectrochempy.read_carroucell.rst", "reference/generated/spectrochempy.read_csv.rst", "reference/generated/spectrochempy.read_ddr.rst", "reference/generated/spectrochempy.read_dir.rst", "reference/generated/spectrochempy.read_hdr.rst", "reference/generated/spectrochempy.read_jcamp.rst", "reference/generated/spectrochempy.read_labspec.rst", "reference/generated/spectrochempy.read_mat.rst", "reference/generated/spectrochempy.read_matlab.rst", "reference/generated/spectrochempy.read_omnic.rst", "reference/generated/spectrochempy.read_opus.rst", "reference/generated/spectrochempy.read_quadera.rst", "reference/generated/spectrochempy.read_sdr.rst", "reference/generated/spectrochempy.read_soc.rst", "reference/generated/spectrochempy.read_spa.rst", "reference/generated/spectrochempy.read_spc.rst", "reference/generated/spectrochempy.read_spg.rst", "reference/generated/spectrochempy.read_srs.rst", "reference/generated/spectrochempy.read_topspin.rst", "reference/generated/spectrochempy.read_wdf.rst", "reference/generated/spectrochempy.read_wire.rst", "reference/generated/spectrochempy.read_zip.rst", "reference/generated/spectrochempy.remove_masks.rst", "reference/generated/spectrochempy.roll.rst", "reference/generated/spectrochempy.round.rst", "reference/generated/spectrochempy.rs.rst", "reference/generated/spectrochempy.run_all_scripts.rst", "reference/generated/spectrochempy.run_script.rst", "reference/generated/spectrochempy.savgol.rst", "reference/generated/spectrochempy.set_complex.rst", "reference/generated/spectrochempy.set_loglevel.rst", "reference/generated/spectrochempy.set_nmr_context.rst", "reference/generated/spectrochempy.show.rst", "reference/generated/spectrochempy.show_versions.rst", "reference/generated/spectrochempy.sigmoidmodel.rst", "reference/generated/spectrochempy.simpson.rst", "reference/generated/spectrochempy.sine.rst", "reference/generated/spectrochempy.sinm.rst", "reference/generated/spectrochempy.smooth.rst", "reference/generated/spectrochempy.snip.rst", "reference/generated/spectrochempy.sort.rst", "reference/generated/spectrochempy.sp.rst", "reference/generated/spectrochempy.squeeze.rst", "reference/generated/spectrochempy.stack.rst", "reference/generated/spectrochempy.std.rst", "reference/generated/spectrochempy.sum.rst", "reference/generated/spectrochempy.swapdims.rst", "reference/generated/spectrochempy.take.rst", "reference/generated/spectrochempy.to.rst", "reference/generated/spectrochempy.to_array.rst", "reference/generated/spectrochempy.to_base_units.rst", "reference/generated/spectrochempy.to_reduced_units.rst", "reference/generated/spectrochempy.to_xarray.rst", "reference/generated/spectrochempy.transpose.rst", "reference/generated/spectrochempy.trapezoid.rst", "reference/generated/spectrochempy.triang.rst", "reference/generated/spectrochempy.var.rst", "reference/generated/spectrochempy.voigtmodel.rst", "reference/generated/spectrochempy.warning_.rst", "reference/generated/spectrochempy.whittaker.rst", "reference/generated/spectrochempy.write.rst", "reference/generated/spectrochempy.write_csv.rst", "reference/generated/spectrochempy.write_excel.rst", "reference/generated/spectrochempy.write_jcamp.rst", "reference/generated/spectrochempy.write_mat.rst", "reference/generated/spectrochempy.write_matlab.rst", "reference/generated/spectrochempy.write_xls.rst", "reference/generated/spectrochempy.zeros.rst", "reference/generated/spectrochempy.zeros_like.rst", "reference/generated/spectrochempy.zf.rst", "reference/generated/spectrochempy.zf_auto.rst", "reference/generated/spectrochempy.zf_double.rst", "reference/generated/spectrochempy.zf_size.rst", "reference/glossary.rst", "reference/index.rst", "reference/papers.rst", "sg_execution_times.rst", "userguide/analysis/fitting.ipynb", "userguide/analysis/index.rst", "userguide/analysis/mcr_als.ipynb", "userguide/analysis/pca.ipynb", "userguide/analysis/peak_finding.ipynb", "userguide/analysis/peak_integration.ipynb", "userguide/analysis/pls.ipynb", "userguide/api/api.ipynb", "userguide/importexport/import.ipynb", "userguide/importexport/importIR.rst", "userguide/importexport/importJCAMPDX.ipynb", "userguide/importexport/importOMNIC.ipynb", "userguide/importexport/importOPUS.ipynb", "userguide/importexport/index.rst", "userguide/index.rst", "userguide/introduction/interface.ipynb", "userguide/introduction/introduction.ipynb", "userguide/introduction/mdcheatsheet.ipynb", "userguide/objects/dataset/dataset.ipynb", "userguide/objects/index.rst", "userguide/objects/project/project.ipynb", "userguide/plotting/plotting.ipynb", "userguide/processing/alignment.ipynb", "userguide/processing/apodization.ipynb", "userguide/processing/baseline.ipynb", "userguide/processing/denoising.ipynb", "userguide/processing/fourier.ipynb", "userguide/processing/index.rst", "userguide/processing/interferogram.ipynb", "userguide/processing/math_operations.ipynb", "userguide/processing/slicing.ipynb", "userguide/processing/smoothing.ipynb", "userguide/processing/td_baseline.ipynb", "userguide/processing/transformations.ipynb", "whatsnew/changelog.rst", "whatsnew/index.rst", "whatsnew/latest.rst", "whatsnew/v0.1.0.rst", "whatsnew/v0.2.0.rst", "whatsnew/v0.2.10.rst", "whatsnew/v0.2.11.rst", "whatsnew/v0.2.12.rst", "whatsnew/v0.2.13.rst", "whatsnew/v0.2.14.rst", "whatsnew/v0.2.15.rst", "whatsnew/v0.2.16.rst", "whatsnew/v0.2.17.rst", "whatsnew/v0.2.18.rst", "whatsnew/v0.2.21.rst", "whatsnew/v0.2.22.rst", "whatsnew/v0.2.23.rst", "whatsnew/v0.2.4.rst", "whatsnew/v0.2.5.rst", "whatsnew/v0.2.6.rst", "whatsnew/v0.2.7.rst", "whatsnew/v0.2.8.rst", "whatsnew/v0.2.9.rst", "whatsnew/v0.3.0.rst", "whatsnew/v0.3.1.rst", "whatsnew/v0.3.2.rst", "whatsnew/v0.3.3.rst", "whatsnew/v0.4.1.rst", "whatsnew/v0.4.10.rst", "whatsnew/v0.4.2.rst", "whatsnew/v0.4.3.rst", "whatsnew/v0.4.4.rst", "whatsnew/v0.4.5.rst", "whatsnew/v0.4.6.rst", "whatsnew/v0.4.7.rst", "whatsnew/v0.4.9.rst", "whatsnew/v0.5.0.rst", "whatsnew/v0.5.1.rst", "whatsnew/v0.5.2.rst", "whatsnew/v0.5.3.rst", "whatsnew/v0.5.4.rst", "whatsnew/v0.5.5.rst", "whatsnew/v0.6.1.rst", "whatsnew/v0.6.10.rst", "whatsnew/v0.6.2.rst", "whatsnew/v0.6.3.rst", "whatsnew/v0.6.4.rst", "whatsnew/v0.6.5.rst", "whatsnew/v0.6.6.rst", "whatsnew/v0.6.7.rst", "whatsnew/v0.6.8.rst", "whatsnew/v0.6.9.rst", "whatsnew/v0.7.0.rst", "whatsnew/v0.7.1.rst", "whatsnew/v0.7.2.rst", "whatsnew/v0.8.0.rst"], "indexentries": {"a (actionmasskinetics attribute)": [[95, "spectrochempy.ActionMassKinetics.A", false]], "a (fastica attribute)": [[100, "spectrochempy.FastICA.A", false]], "abs() (in module spectrochempy)": [[121, "spectrochempy.abs", false]], "abs() (nddataset method)": [[106, "spectrochempy.NDDataset.abs", false]], "absolute() (in module spectrochempy)": [[122, "spectrochempy.absolute", false]], "absolute() (nddataset method)": [[106, "spectrochempy.NDDataset.absolute", false]], "acquisition_date (nddataset attribute)": [[106, "spectrochempy.NDDataset.acquisition_date", false]], "actionmasskinetics (class in spectrochempy)": [[95, "spectrochempy.ActionMassKinetics", false]], "add_coordset() (nddataset method)": [[106, "spectrochempy.NDDataset.add_coordset", false]], "add_dataset() (project method)": [[115, "spectrochempy.Project.add_dataset", false]], "add_datasets() (project method)": [[115, "spectrochempy.Project.add_datasets", false]], "add_project() (project method)": [[115, "spectrochempy.Project.add_project", false]], "add_projects() (project method)": [[115, "spectrochempy.Project.add_projects", false]], "add_script() (project method)": [[115, "spectrochempy.Project.add_script", false]], "add_scripts() (project method)": [[115, "spectrochempy.Project.add_scripts", false]], "algorithm (fastica attribute)": [[100, "spectrochempy.FastICA.algorithm", false]], "align() (in module spectrochempy)": [[123, "spectrochempy.align", false]], "all() (in module spectrochempy)": [[124, "spectrochempy.all", false]], "all() (nddataset method)": [[106, "spectrochempy.NDDataset.all", false]], "allitems (project attribute)": [[115, "spectrochempy.Project.allitems", false]], "allnames (project attribute)": [[115, "spectrochempy.Project.allnames", false]], "alpha_h (nmf attribute)": [[109, "spectrochempy.NMF.alpha_H", false]], "alpha_w (nmf attribute)": [[109, "spectrochempy.NMF.alpha_W", false]], "als": [[303, "term-ALS", true]], "amax() (coord method)": [[97, "spectrochempy.Coord.amax", false]], "amax() (in module spectrochempy)": [[125, "spectrochempy.amax", false]], "amax() (nddataset method)": [[106, "spectrochempy.NDDataset.amax", false]], "amin() (coord method)": [[97, "spectrochempy.Coord.amin", false]], "amin() (in module spectrochempy)": [[126, "spectrochempy.amin", false]], "amin() (nddataset method)": [[106, "spectrochempy.NDDataset.amin", false]], "amplitude_mode (optimize attribute)": [[111, "spectrochempy.Optimize.amplitude_mode", false]], "any() (in module spectrochempy)": [[127, "spectrochempy.any", false]], "any() (nddataset method)": [[106, "spectrochempy.NDDataset.any", false]], "api": [[303, "term-API", true]], "arange() (coord method)": [[97, "spectrochempy.Coord.arange", false]], "arange() (in module spectrochempy)": [[128, "spectrochempy.arange", false]], "arange() (nddataset method)": [[106, "spectrochempy.NDDataset.arange", false]], "argmax() (in module spectrochempy)": [[129, "spectrochempy.argmax", false]], "argmax() (nddataset method)": [[106, "spectrochempy.NDDataset.argmax", false]], "argmin() (in module spectrochempy)": [[130, "spectrochempy.argmin", false]], "argmin() (nddataset method)": [[106, "spectrochempy.NDDataset.argmin", false]], "args (asymmetricvoigtmodel attribute)": [[133, "spectrochempy.asymmetricvoigtmodel.args", false]], "args (gaussianmodel attribute)": [[169, "spectrochempy.gaussianmodel.args", false]], "args (lorentzianmodel attribute)": [[190, "spectrochempy.lorentzianmodel.args", false]], "args (polynomialbaseline attribute)": [[224, "spectrochempy.polynomialbaseline.args", false]], "args (sigmoidmodel attribute)": [[264, "spectrochempy.sigmoidmodel.args", false]], "args (voigtmodel attribute)": [[287, "spectrochempy.voigtmodel.args", false]], "argsgetconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.argsGetConc", false]], "argsgetspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.argsGetSpec", false]], "around() (coord method)": [[97, "spectrochempy.Coord.around", false]], "around() (in module spectrochempy)": [[131, "spectrochempy.around", false]], "around() (nddataset method)": [[106, "spectrochempy.NDDataset.around", false]], "array-like": [[303, "term-array-like", true]], "asfortranarray() (nddataset method)": [[106, "spectrochempy.NDDataset.asfortranarray", false]], "asls": [[303, "term-AsLS", true]], "asls() (in module spectrochempy)": [[132, "spectrochempy.asls", false]], "astype() (coord method)": [[97, "spectrochempy.Coord.astype", false]], "astype() (nddataset method)": [[106, "spectrochempy.NDDataset.astype", false]], "asymmetricvoigtmodel (class in spectrochempy)": [[133, "spectrochempy.asymmetricvoigtmodel", false]], "asymmetry (baseline attribute)": [[96, "spectrochempy.Baseline.asymmetry", false]], "atleast_2d() (nddataset method)": [[106, "spectrochempy.NDDataset.atleast_2d", false]], "author (nddataset attribute)": [[106, "spectrochempy.NDDataset.author", false]], "autoampl (optimize attribute)": [[111, "spectrochempy.Optimize.autoampl", false]], "autobase (optimize attribute)": [[111, "spectrochempy.Optimize.autobase", false]], "autosub() (in module spectrochempy)": [[134, "spectrochempy.autosub", false]], "available_names (coordset attribute)": [[98, "spectrochempy.CoordSet.available_names", false]], "average() (in module spectrochempy)": [[135, "spectrochempy.average", false]], "average() (nddataset method)": [[106, "spectrochempy.NDDataset.average", false]], "ax (nddataset attribute)": [[106, "spectrochempy.NDDataset.ax", false]], "axec (nddataset attribute)": [[106, "spectrochempy.NDDataset.axec", false]], "axect (nddataset attribute)": [[106, "spectrochempy.NDDataset.axecT", false]], "axex (nddataset attribute)": [[106, "spectrochempy.NDDataset.axex", false]], "axey (nddataset attribute)": [[106, "spectrochempy.NDDataset.axey", false]], "axt (nddataset attribute)": [[106, "spectrochempy.NDDataset.axT", false]], "b (actionmasskinetics attribute)": [[95, "spectrochempy.ActionMassKinetics.B", false]], "b_ev (efa attribute)": [[99, "spectrochempy.EFA.b_ev", false]], "bartlett() (in module spectrochempy)": [[136, "spectrochempy.bartlett", false]], "basc() (in module spectrochempy)": [[137, "spectrochempy.basc", false]], "baseline (baseline attribute)": [[96, "spectrochempy.Baseline.baseline", false]], "baseline (class in spectrochempy)": [[96, "spectrochempy.Baseline", false]], "beta_loss (nmf attribute)": [[109, "spectrochempy.NMF.beta_loss", false]], "blackmanharris() (in module spectrochempy)": [[138, "spectrochempy.blackmanharris", false]], "breakpoints (baseline attribute)": [[96, "spectrochempy.Baseline.breakpoints", false]], "c (mcrals attribute)": [[105, "spectrochempy.MCRALS.C", false]], "c (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.C", false]], "c_constrained (mcrals attribute)": [[105, "spectrochempy.MCRALS.C_constrained", false]], "c_constrained_list (mcrals attribute)": [[105, "spectrochempy.MCRALS.C_constrained_list", false]], "c_ls_list (mcrals attribute)": [[105, "spectrochempy.MCRALS.C_ls_list", false]], "callback_every (optimize attribute)": [[111, "spectrochempy.Optimize.callback_every", false]], "carroucell": [[303, "term-Carroucell", true]], "check() (quantity method)": [[116, "spectrochempy.Quantity.check", false]], "clip() (in module spectrochempy)": [[139, "spectrochempy.clip", false]], "clip() (nddataset method)": [[106, "spectrochempy.NDDataset.clip", false]], "close_figure() (nddataset method)": [[106, "spectrochempy.NDDataset.close_figure", false]], "closure": [[303, "term-closure", true]], "closureconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.closureConc", false]], "closuremethod (mcrals attribute)": [[105, "spectrochempy.MCRALS.closureMethod", false]], "closures": [[303, "term-closures", true]], "closuretarget (mcrals attribute)": [[105, "spectrochempy.MCRALS.closureTarget", false]], "coef (lstsq attribute)": [[104, "spectrochempy.LSTSQ.coef", false]], "coef (nnls attribute)": [[110, "spectrochempy.NNLS.coef", false]], "comment (nddataset attribute)": [[106, "spectrochempy.NDDataset.comment", false]], "component() (nddataset method)": [[106, "spectrochempy.NDDataset.component", false]], "components (efa attribute)": [[99, "spectrochempy.EFA.components", false]], "components (fastica attribute)": [[100, "spectrochempy.FastICA.components", false]], "components (iris attribute)": [[102, "spectrochempy.IRIS.components", false]], "components (mcrals attribute)": [[105, "spectrochempy.MCRALS.components", false]], "components (nmf attribute)": [[109, "spectrochempy.NMF.components", false]], "components (optimize attribute)": [[111, "spectrochempy.Optimize.components", false]], "components (pca attribute)": [[112, "spectrochempy.PCA.components", false]], "components (plsregression attribute)": [[114, "spectrochempy.PLSRegression.components", false]], "components (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.components", false]], "components (svd attribute)": [[118, "spectrochempy.SVD.components", false]], "compute() (quantity method)": [[116, "spectrochempy.Quantity.compute", false]], "compute_uv (svd attribute)": [[118, "spectrochempy.SVD.compute_uv", false]], "concatenate() (in module spectrochempy)": [[140, "spectrochempy.concatenate", false]], "config (baseline attribute)": [[96, "spectrochempy.Baseline.config", false]], "config (efa attribute)": [[99, "spectrochempy.EFA.config", false]], "config (fastica attribute)": [[100, "spectrochempy.FastICA.config", false]], "config (filter attribute)": [[101, "spectrochempy.Filter.config", false]], "config (iris attribute)": [[102, "spectrochempy.IRIS.config", false]], "config (lstsq attribute)": [[104, "spectrochempy.LSTSQ.config", false]], "config (mcrals attribute)": [[105, "spectrochempy.MCRALS.config", false]], "config (nmf attribute)": [[109, "spectrochempy.NMF.config", false]], "config (nnls attribute)": [[110, "spectrochempy.NNLS.config", false]], "config (optimize attribute)": [[111, "spectrochempy.Optimize.config", false]], "config (pca attribute)": [[112, "spectrochempy.PCA.config", false]], "config (plsregression attribute)": [[114, "spectrochempy.PLSRegression.config", false]], "config (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.config", false]], "config (svd attribute)": [[118, "spectrochempy.SVD.config", false]], "conj() (in module spectrochempy)": [[141, "spectrochempy.conj", false]], "conj() (nddataset method)": [[106, "spectrochempy.NDDataset.conj", false]], "conjugate() (in module spectrochempy)": [[142, "spectrochempy.conjugate", false]], "conjugate() (nddataset method)": [[106, "spectrochempy.NDDataset.conjugate", false]], "constraints (optimize attribute)": [[111, "spectrochempy.Optimize.constraints", false]], "coord (class in spectrochempy)": [[97, "spectrochempy.Coord", false]], "coord() (nddataset method)": [[106, "spectrochempy.NDDataset.coord", false]], "coordmax() (in module spectrochempy)": [[143, "spectrochempy.coordmax", false]], "coordmax() (nddataset method)": [[106, "spectrochempy.NDDataset.coordmax", false]], "coordmin() (in module spectrochempy)": [[144, "spectrochempy.coordmin", false]], "coordmin() (nddataset method)": [[106, "spectrochempy.NDDataset.coordmin", false]], "coordnames (nddataset attribute)": [[106, "spectrochempy.NDDataset.coordnames", false]], "coords (coordset attribute)": [[98, "spectrochempy.CoordSet.coords", false]], "coordset (class in spectrochempy)": [[98, "spectrochempy.CoordSet", false]], "coordset (nddataset attribute)": [[106, "spectrochempy.NDDataset.coordset", false]], "coordtitles (nddataset attribute)": [[106, "spectrochempy.NDDataset.coordtitles", false]], "coordunits (nddataset attribute)": [[106, "spectrochempy.NDDataset.coordunits", false]], "copy() (coord method)": [[97, "spectrochempy.Coord.copy", false]], "copy() (coordset method)": [[98, "spectrochempy.CoordSet.copy", false]], "copy() (nddataset method)": [[106, "spectrochempy.NDDataset.copy", false]], "copy() (project method)": [[115, "spectrochempy.Project.copy", false]], "corrected (baseline attribute)": [[96, "spectrochempy.Baseline.corrected", false]], "created (nddataset attribute)": [[106, "spectrochempy.NDDataset.created", false]], "cs() (in module spectrochempy)": [[145, "spectrochempy.cs", false]], "cumsum() (in module spectrochempy)": [[146, "spectrochempy.cumsum", false]], "cumsum() (nddataset method)": [[106, "spectrochempy.NDDataset.cumsum", false]], "cumulative_explained_variance (svd attribute)": [[118, "spectrochempy.SVD.cumulative_explained_variance", false]], "cutoff (efa attribute)": [[99, "spectrochempy.EFA.cutoff", false]], "cval (filter attribute)": [[101, "spectrochempy.Filter.cval", false]], "data (coord attribute)": [[97, "spectrochempy.Coord.data", false]], "data (nddataset attribute)": [[106, "spectrochempy.NDDataset.data", false]], "datasets (project attribute)": [[115, "spectrochempy.Project.datasets", false]], "datasets_names (project attribute)": [[115, "spectrochempy.Project.datasets_names", false]], "dc() (in module spectrochempy)": [[147, "spectrochempy.dc", false]], "debug_() (in module spectrochempy)": [[148, "spectrochempy.debug_", false]], "default (coordset attribute)": [[98, "spectrochempy.CoordSet.default", false]], "default_format (quantity attribute)": [[116, "spectrochempy.Quantity.default_format", false]], "default_format (unit attribute)": [[120, "spectrochempy.Unit.default_format", false]], "delete_coordset() (nddataset method)": [[106, "spectrochempy.NDDataset.delete_coordset", false]], "delta (filter attribute)": [[101, "spectrochempy.Filter.delta", false]], "denoise() (in module spectrochempy)": [[149, "spectrochempy.denoise", false]], "deriv (filter attribute)": [[101, "spectrochempy.Filter.deriv", false]], "description (lstsq attribute)": [[104, "spectrochempy.LSTSQ.description", false]], "description (nddataset attribute)": [[106, "spectrochempy.NDDataset.description", false]], "description (nnls attribute)": [[110, "spectrochempy.NNLS.description", false]], "despike() (in module spectrochempy)": [[150, "spectrochempy.despike", false]], "detrend() (in module spectrochempy)": [[151, "spectrochempy.detrend", false]], "diag() (in module spectrochempy)": [[152, "spectrochempy.diag", false]], "diag() (nddataset method)": [[106, "spectrochempy.NDDataset.diag", false]], "diagonal() (in module spectrochempy)": [[153, "spectrochempy.diagonal", false]], "diagonal() (nddataset method)": [[106, "spectrochempy.NDDataset.diagonal", false]], "dimensionality (quantity attribute)": [[116, "spectrochempy.Quantity.dimensionality", false]], "dimensionality (unit attribute)": [[120, "spectrochempy.Unit.dimensionality", false]], "dimensionless (coord attribute)": [[97, "spectrochempy.Coord.dimensionless", false]], "dimensionless (nddataset attribute)": [[106, "spectrochempy.NDDataset.dimensionless", false]], "dimensionless (quantity attribute)": [[116, "spectrochempy.Quantity.dimensionless", false]], "dimensionless (unit attribute)": [[120, "spectrochempy.Unit.dimensionless", false]], "dims (nddataset attribute)": [[106, "spectrochempy.NDDataset.dims", false]], "directory (nddataset attribute)": [[106, "spectrochempy.NDDataset.directory", false]], "divider (nddataset attribute)": [[106, "spectrochempy.NDDataset.divider", false]], "dot() (in module spectrochempy)": [[154, "spectrochempy.dot", false]], "dot() (quantity method)": [[116, "spectrochempy.Quantity.dot", false]], "download_nist_ir() (in module spectrochempy)": [[155, "spectrochempy.download_nist_ir", false]], "dry (optimize attribute)": [[111, "spectrochempy.Optimize.dry", false]], "dtype (coord attribute)": [[97, "spectrochempy.Coord.dtype", false]], "dtype (nddataset attribute)": [[106, "spectrochempy.NDDataset.dtype", false]], "dump() (nddataset method)": [[106, "spectrochempy.NDDataset.dump", false]], "dump() (project method)": [[115, "spectrochempy.Project.dump", false]], "efa": [[303, "term-EFA", true]], "efa (class in spectrochempy)": [[99, "spectrochempy.EFA", false]], "em() (in module spectrochempy)": [[156, "spectrochempy.em", false]], "empty() (in module spectrochempy)": [[157, "spectrochempy.empty", false]], "empty() (nddataset method)": [[106, "spectrochempy.NDDataset.empty", false]], "empty_like() (in module spectrochempy)": [[158, "spectrochempy.empty_like", false]], "empty_like() (nddataset method)": [[106, "spectrochempy.NDDataset.empty_like", false]], "error_() (in module spectrochempy)": [[159, "spectrochempy.error_", false]], "ev (svd attribute)": [[118, "spectrochempy.SVD.ev", false]], "ev_cum (svd attribute)": [[118, "spectrochempy.SVD.ev_cum", false]], "ev_ratio (svd attribute)": [[118, "spectrochempy.SVD.ev_ratio", false]], "explained_variance (svd attribute)": [[118, "spectrochempy.SVD.explained_variance", false]], "explained_variance_ratio (svd attribute)": [[118, "spectrochempy.SVD.explained_variance_ratio", false]], "extraoutputgetconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.extraOutputGetConc", false]], "extraoutputgetspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.extraOutputGetSpec", false]], "eye() (in module spectrochempy)": [[160, "spectrochempy.eye", false]], "eye() (nddataset method)": [[106, "spectrochempy.NDDataset.eye", false]], "f_ev (efa attribute)": [[99, "spectrochempy.EFA.f_ev", false]], "fastica (class in spectrochempy)": [[100, "spectrochempy.FastICA", false]], "fft() (in module spectrochempy)": [[161, "spectrochempy.fft", false]], "fig (nddataset attribute)": [[106, "spectrochempy.NDDataset.fig", false]], "fignum (nddataset attribute)": [[106, "spectrochempy.NDDataset.fignum", false]], "filename (nddataset attribute)": [[106, "spectrochempy.NDDataset.filename", false]], "filename (project attribute)": [[115, "spectrochempy.Project.filename", false]], "filetype (nddataset attribute)": [[106, "spectrochempy.NDDataset.filetype", false]], "filetype (project attribute)": [[115, "spectrochempy.Project.filetype", false]], "filter (class in spectrochempy)": [[101, "spectrochempy.Filter", false]], "find_peaks() (in module spectrochempy)": [[162, "spectrochempy.find_peaks", false]], "fit() (baseline method)": [[96, "spectrochempy.Baseline.fit", false]], "fit() (efa method)": [[99, "spectrochempy.EFA.fit", false]], "fit() (fastica method)": [[100, "spectrochempy.FastICA.fit", false]], "fit() (iris method)": [[102, "spectrochempy.IRIS.fit", false]], "fit() (lstsq method)": [[104, "spectrochempy.LSTSQ.fit", false]], "fit() (mcrals method)": [[105, "spectrochempy.MCRALS.fit", false]], "fit() (nmf method)": [[109, "spectrochempy.NMF.fit", false]], "fit() (nnls method)": [[110, "spectrochempy.NNLS.fit", false]], "fit() (optimize method)": [[111, "spectrochempy.Optimize.fit", false]], "fit() (pca method)": [[112, "spectrochempy.PCA.fit", false]], "fit() (plsregression method)": [[114, "spectrochempy.PLSRegression.fit", false]], "fit() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.fit", false]], "fit() (svd method)": [[118, "spectrochempy.SVD.fit", false]], "fit_intercept (lstsq attribute)": [[104, "spectrochempy.LSTSQ.fit_intercept", false]], "fit_intercept (nnls attribute)": [[110, "spectrochempy.NNLS.fit_intercept", false]], "fit_to_concentrations() (actionmasskinetics method)": [[95, "spectrochempy.ActionMassKinetics.fit_to_concentrations", false]], "fit_to_gas_concentrations() (pfr method)": [[113, "spectrochempy.PFR.fit_to_gas_concentrations", false]], "fit_transform() (efa method)": [[99, "spectrochempy.EFA.fit_transform", false]], "fit_transform() (fastica method)": [[100, "spectrochempy.FastICA.fit_transform", false]], "fit_transform() (iris method)": [[102, "spectrochempy.IRIS.fit_transform", false]], "fit_transform() (mcrals method)": [[105, "spectrochempy.MCRALS.fit_transform", false]], "fit_transform() (nmf method)": [[109, "spectrochempy.NMF.fit_transform", false]], "fit_transform() (optimize method)": [[111, "spectrochempy.Optimize.fit_transform", false]], "fit_transform() (pca method)": [[112, "spectrochempy.PCA.fit_transform", false]], "fit_transform() (plsregression method)": [[114, "spectrochempy.PLSRegression.fit_transform", false]], "fit_transform() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.fit_transform", false]], "fit_transform() (svd method)": [[118, "spectrochempy.SVD.fit_transform", false]], "fp (optimize attribute)": [[111, "spectrochempy.Optimize.fp", false]], "from_() (unit method)": [[120, "spectrochempy.Unit.from_", false]], "from_list() (quantity class method)": [[116, "spectrochempy.Quantity.from_list", false]], "from_sequence() (quantity class method)": [[116, "spectrochempy.Quantity.from_sequence", false]], "fromfunction() (coord method)": [[97, "spectrochempy.Coord.fromfunction", false]], "fromfunction() (in module spectrochempy)": [[163, "spectrochempy.fromfunction", false]], "fromfunction() (nddataset method)": [[106, "spectrochempy.NDDataset.fromfunction", false]], "fromiter() (coord method)": [[97, "spectrochempy.Coord.fromiter", false]], "fromiter() (in module spectrochempy)": [[164, "spectrochempy.fromiter", false]], "fromiter() (nddataset method)": [[106, "spectrochempy.NDDataset.fromiter", false]], "fsh() (in module spectrochempy)": [[165, "spectrochempy.fsh", false]], "fsh2() (in module spectrochempy)": [[166, "spectrochempy.fsh2", false]], "full() (in module spectrochempy)": [[167, "spectrochempy.full", false]], "full() (nddataset method)": [[106, "spectrochempy.NDDataset.full", false]], "full_like() (in module spectrochempy)": [[168, "spectrochempy.full_like", false]], "full_like() (nddataset method)": [[106, "spectrochempy.NDDataset.full_like", false]], "full_matrices (svd attribute)": [[118, "spectrochempy.SVD.full_matrices", false]], "fun (fastica attribute)": [[100, "spectrochempy.FastICA.fun", false]], "fun_args (fastica attribute)": [[100, "spectrochempy.FastICA.fun_args", false]], "gaussianmodel (class in spectrochempy)": [[169, "spectrochempy.gaussianmodel", false]], "general_hamming() (in module spectrochempy)": [[170, "spectrochempy.general_hamming", false]], "geomspace() (coord method)": [[97, "spectrochempy.Coord.geomspace", false]], "geomspace() (in module spectrochempy)": [[171, "spectrochempy.geomspace", false]], "geomspace() (nddataset method)": [[106, "spectrochempy.NDDataset.geomspace", false]], "get_axis() (nddataset method)": [[106, "spectrochempy.NDDataset.get_axis", false]], "get_baseline() (in module spectrochempy)": [[172, "spectrochempy.get_baseline", false]], "get_components() (efa method)": [[99, "spectrochempy.EFA.get_components", false]], "get_components() (fastica method)": [[100, "spectrochempy.FastICA.get_components", false]], "get_components() (iris method)": [[102, "spectrochempy.IRIS.get_components", false]], "get_components() (mcrals method)": [[105, "spectrochempy.MCRALS.get_components", false]], "get_components() (nmf method)": [[109, "spectrochempy.NMF.get_components", false]], "get_components() (optimize method)": [[111, "spectrochempy.Optimize.get_components", false]], "get_components() (pca method)": [[112, "spectrochempy.PCA.get_components", false]], "get_components() (plsregression method)": [[114, "spectrochempy.PLSRegression.get_components", false]], "get_components() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.get_components", false]], "get_components() (svd method)": [[118, "spectrochempy.SVD.get_components", false]], "get_labels() (coord method)": [[97, "spectrochempy.Coord.get_labels", false]], "get_labels() (nddataset method)": [[106, "spectrochempy.NDDataset.get_labels", false]], "get_loglevel() (in module spectrochempy)": [[173, "spectrochempy.get_loglevel", false]], "getc_to_c_idx (mcrals attribute)": [[105, "spectrochempy.MCRALS.getC_to_C_idx", false]], "getconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.getConc", false]], "getspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.getSpec", false]], "getst_to_st_idx (mcrals attribute)": [[105, "spectrochempy.MCRALS.getSt_to_St_idx", false]], "gm() (in module spectrochempy)": [[174, "spectrochempy.gm", false]], "hamming() (in module spectrochempy)": [[175, "spectrochempy.hamming", false]], "hann() (in module spectrochempy)": [[176, "spectrochempy.hann", false]], "hardconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.hardConc", false]], "hardspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.hardSpec", false]], "has_complex_dims (nddataset attribute)": [[106, "spectrochempy.NDDataset.has_complex_dims", false]], "has_data (coord attribute)": [[97, "spectrochempy.Coord.has_data", false]], "has_data (nddataset attribute)": [[106, "spectrochempy.NDDataset.has_data", false]], "has_defined_name (coord attribute)": [[97, "spectrochempy.Coord.has_defined_name", false]], "has_defined_name (coordset attribute)": [[98, "spectrochempy.CoordSet.has_defined_name", false]], "has_defined_name (nddataset attribute)": [[106, "spectrochempy.NDDataset.has_defined_name", false]], "has_units (coord attribute)": [[97, "spectrochempy.Coord.has_units", false]], "has_units (nddataset attribute)": [[106, "spectrochempy.NDDataset.has_units", false]], "history (nddataset attribute)": [[106, "spectrochempy.NDDataset.history", false]], "ht() (in module spectrochempy)": [[177, "spectrochempy.ht", false]], "ica": [[303, "term-ICA", true]], "id (coord attribute)": [[97, "spectrochempy.Coord.id", false]], "id (coordset attribute)": [[98, "spectrochempy.CoordSet.id", false]], "id (nddataset attribute)": [[106, "spectrochempy.NDDataset.id", false]], "id (project attribute)": [[115, "spectrochempy.Project.id", false]], "identity() (in module spectrochempy)": [[178, "spectrochempy.identity", false]], "identity() (nddataset method)": [[106, "spectrochempy.NDDataset.identity", false]], "ifft() (in module spectrochempy)": [[179, "spectrochempy.ifft", false]], "ii (nddataset attribute)": [[106, "spectrochempy.NDDataset.II", false]], "imag (nddataset attribute)": [[106, "spectrochempy.NDDataset.imag", false]], "include_limits (baseline attribute)": [[96, "spectrochempy.Baseline.include_limits", false]], "info_() (in module spectrochempy)": [[180, "spectrochempy.info_", false]], "init (nmf attribute)": [[109, "spectrochempy.NMF.init", false]], "init_concentrations (actionmasskinetics attribute)": [[95, "spectrochempy.ActionMassKinetics.init_concentrations", false]], "integrate() (actionmasskinetics method)": [[95, "spectrochempy.ActionMassKinetics.integrate", false]], "interactive (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.interactive", false]], "intercept (lstsq attribute)": [[104, "spectrochempy.LSTSQ.intercept", false]], "intercept (nnls attribute)": [[110, "spectrochempy.NNLS.intercept", false]], "interpolate() (in module spectrochempy)": [[181, "spectrochempy.interpolate", false]], "inverse_transform() (efa method)": [[99, "spectrochempy.EFA.inverse_transform", false]], "inverse_transform() (fastica method)": [[100, "spectrochempy.FastICA.inverse_transform", false]], "inverse_transform() (iris method)": [[102, "spectrochempy.IRIS.inverse_transform", false]], "inverse_transform() (mcrals method)": [[105, "spectrochempy.MCRALS.inverse_transform", false]], "inverse_transform() (nmf method)": [[109, "spectrochempy.NMF.inverse_transform", false]], "inverse_transform() (optimize method)": [[111, "spectrochempy.Optimize.inverse_transform", false]], "inverse_transform() (pca method)": [[112, "spectrochempy.PCA.inverse_transform", false]], "inverse_transform() (plsregression method)": [[114, "spectrochempy.PLSRegression.inverse_transform", false]], "inverse_transform() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.inverse_transform", false]], "inverse_transform() (svd method)": [[118, "spectrochempy.SVD.inverse_transform", false]], "ir (nddataset attribute)": [[106, "spectrochempy.NDDataset.IR", false]], "iris (class in spectrochempy)": [[102, "spectrochempy.IRIS", false]], "iriskernel (class in spectrochempy)": [[103, "spectrochempy.IrisKernel", false]], "is_1d (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_1d", false]], "is_compatible_with() (quantity method)": [[116, "spectrochempy.Quantity.is_compatible_with", false]], "is_compatible_with() (unit method)": [[120, "spectrochempy.Unit.is_compatible_with", false]], "is_complex (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_complex", false]], "is_empty (coord attribute)": [[97, "spectrochempy.Coord.is_empty", false]], "is_empty (coordset attribute)": [[98, "spectrochempy.CoordSet.is_empty", false]], "is_empty (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_empty", false]], "is_float (coord attribute)": [[97, "spectrochempy.Coord.is_float", false]], "is_float (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_float", false]], "is_integer (coord attribute)": [[97, "spectrochempy.Coord.is_integer", false]], "is_integer (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_integer", false]], "is_interleaved (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_interleaved", false]], "is_labeled (coord attribute)": [[97, "spectrochempy.Coord.is_labeled", false]], "is_labeled (coordset attribute)": [[98, "spectrochempy.CoordSet.is_labeled", false]], "is_labeled (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_labeled", false]], "is_masked (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_masked", false]], "is_quaternion (nddataset attribute)": [[106, "spectrochempy.NDDataset.is_quaternion", false]], "is_same_dim (coordset attribute)": [[98, "spectrochempy.CoordSet.is_same_dim", false]], "is_units_compatible() (coord method)": [[97, "spectrochempy.Coord.is_units_compatible", false]], "is_units_compatible() (in module spectrochempy)": [[182, "spectrochempy.is_units_compatible", false]], "is_units_compatible() (nddataset method)": [[106, "spectrochempy.NDDataset.is_units_compatible", false]], "iterated_power (pca attribute)": [[112, "spectrochempy.PCA.iterated_power", false]], "ito() (coord method)": [[97, "spectrochempy.Coord.ito", false]], "ito() (in module spectrochempy)": [[183, "spectrochempy.ito", false]], "ito() (nddataset method)": [[106, "spectrochempy.NDDataset.ito", false]], "ito() (quantity method)": [[116, "spectrochempy.Quantity.ito", false]], "ito_base_units() (coord method)": [[97, "spectrochempy.Coord.ito_base_units", false]], "ito_base_units() (in module spectrochempy)": [[184, "spectrochempy.ito_base_units", false]], "ito_base_units() (nddataset method)": [[106, "spectrochempy.NDDataset.ito_base_units", false]], "ito_base_units() (quantity method)": [[116, "spectrochempy.Quantity.ito_base_units", false]], "ito_preferred() (quantity method)": [[116, "spectrochempy.Quantity.ito_preferred", false]], "ito_reduced_units() (coord method)": [[97, "spectrochempy.Coord.ito_reduced_units", false]], "ito_reduced_units() (in module spectrochempy)": [[185, "spectrochempy.ito_reduced_units", false]], "ito_reduced_units() (nddataset method)": [[106, "spectrochempy.NDDataset.ito_reduced_units", false]], "ito_reduced_units() (quantity method)": [[116, "spectrochempy.Quantity.ito_reduced_units", false]], "ito_root_units() (quantity method)": [[116, "spectrochempy.Quantity.ito_root_units", false]], "keys() (coordset method)": [[98, "spectrochempy.CoordSet.keys", false]], "kwargsgetconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.kwargsGetConc", false]], "kwargsgetspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.kwargsGetSpec", false]], "l1_ratio (nmf attribute)": [[109, "spectrochempy.NMF.l1_ratio", false]], "labels (coord attribute)": [[97, "spectrochempy.Coord.labels", false]], "labels (coordset attribute)": [[98, "spectrochempy.CoordSet.labels", false]], "labels (nddataset attribute)": [[106, "spectrochempy.NDDataset.labels", false]], "lamb (baseline attribute)": [[96, "spectrochempy.Baseline.lamb", false]], "lamb (filter attribute)": [[101, "spectrochempy.Filter.lamb", false]], "larmor (coord attribute)": [[97, "spectrochempy.Coord.larmor", false]], "laser_frequency (coord attribute)": [[97, "spectrochempy.Coord.laser_frequency", false]], "limits (coord attribute)": [[97, "spectrochempy.Coord.limits", false]], "limits (nddataset attribute)": [[106, "spectrochempy.NDDataset.limits", false]], "linear (coord attribute)": [[97, "spectrochempy.Coord.linear", false]], "linearize() (coord method)": [[97, "spectrochempy.Coord.linearize", false]], "linspace() (coord method)": [[97, "spectrochempy.Coord.linspace", false]], "linspace() (in module spectrochempy)": [[186, "spectrochempy.linspace", false]], "linspace() (nddataset method)": [[106, "spectrochempy.NDDataset.linspace", false]], "lls (baseline attribute)": [[96, "spectrochempy.Baseline.lls", false]], "load() (in module spectrochempy)": [[187, "spectrochempy.load", false]], "load() (nddataset class method)": [[106, "spectrochempy.NDDataset.load", false]], "load() (project class method)": [[115, "spectrochempy.Project.load", false]], "load_iris() (in module spectrochempy)": [[188, "spectrochempy.load_iris", false]], "loading": [[303, "term-loading", true]], "loadings": [[303, "term-loadings", true]], "loadings (pca attribute)": [[112, "spectrochempy.PCA.loadings", false]], "loads() (nddataset class method)": [[106, "spectrochempy.NDDataset.loads", false]], "loads() (project class method)": [[115, "spectrochempy.Project.loads", false]], "loc2index() (coord method)": [[97, "spectrochempy.Coord.loc2index", false]], "local_timezone (nddataset attribute)": [[106, "spectrochempy.NDDataset.local_timezone", false]], "log (baseline attribute)": [[96, "spectrochempy.Baseline.log", false]], "log (efa attribute)": [[99, "spectrochempy.EFA.log", false]], "log (fastica attribute)": [[100, "spectrochempy.FastICA.log", false]], "log (filter attribute)": [[101, "spectrochempy.Filter.log", false]], "log (iris attribute)": [[102, "spectrochempy.IRIS.log", false]], "log (lstsq attribute)": [[104, "spectrochempy.LSTSQ.log", false]], "log (mcrals attribute)": [[105, "spectrochempy.MCRALS.log", false]], "log (nmf attribute)": [[109, "spectrochempy.NMF.log", false]], "log (nnls attribute)": [[110, "spectrochempy.NNLS.log", false]], "log (optimize attribute)": [[111, "spectrochempy.Optimize.log", false]], "log (pca attribute)": [[112, "spectrochempy.PCA.log", false]], "log (plsregression attribute)": [[114, "spectrochempy.PLSRegression.log", false]], "log (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.log", false]], "log (svd attribute)": [[118, "spectrochempy.SVD.log", false]], "logspace() (coord method)": [[97, "spectrochempy.Coord.logspace", false]], "logspace() (in module spectrochempy)": [[189, "spectrochempy.logspace", false]], "logspace() (nddataset method)": [[106, "spectrochempy.NDDataset.logspace", false]], "lorentzianmodel (class in spectrochempy)": [[190, "spectrochempy.lorentzianmodel", false]], "ls() (in module spectrochempy)": [[191, "spectrochempy.ls", false]], "lstsq (class in spectrochempy)": [[104, "spectrochempy.LSTSQ", false]], "m (coord attribute)": [[97, "spectrochempy.Coord.m", false]], "m (nddataset attribute)": [[106, "spectrochempy.NDDataset.m", false]], "m (quantity attribute)": [[116, "spectrochempy.Quantity.m", false]], "m_as() (quantity method)": [[116, "spectrochempy.Quantity.m_as", false]], "m_from() (unit method)": [[120, "spectrochempy.Unit.m_from", false]], "magnitude (coord attribute)": [[97, "spectrochempy.Coord.magnitude", false]], "magnitude (nddataset attribute)": [[106, "spectrochempy.NDDataset.magnitude", false]], "magnitude (quantity attribute)": [[116, "spectrochempy.Quantity.magnitude", false]], "mask (nddataset attribute)": [[106, "spectrochempy.NDDataset.mask", false]], "masked_data (nddataset attribute)": [[106, "spectrochempy.NDDataset.masked_data", false]], "max() (coord method)": [[97, "spectrochempy.Coord.max", false]], "max() (in module spectrochempy)": [[192, "spectrochempy.max", false]], "max() (nddataset method)": [[106, "spectrochempy.NDDataset.max", false]], "max_fun_calls (optimize attribute)": [[111, "spectrochempy.Optimize.max_fun_calls", false]], "max_iter (baseline attribute)": [[96, "spectrochempy.Baseline.max_iter", false]], "max_iter (fastica attribute)": [[100, "spectrochempy.FastICA.max_iter", false]], "max_iter (mcrals attribute)": [[105, "spectrochempy.MCRALS.max_iter", false]], "max_iter (nmf attribute)": [[109, "spectrochempy.NMF.max_iter", false]], "max_iter (optimize attribute)": [[111, "spectrochempy.Optimize.max_iter", false]], "max_iter (plsregression attribute)": [[114, "spectrochempy.PLSRegression.max_iter", false]], "maxdiv (mcrals attribute)": [[105, "spectrochempy.MCRALS.maxdiv", false]], "mc() (in module spectrochempy)": [[193, "spectrochempy.mc", false]], "mcr-als": [[303, "term-MCR-ALS", true]], "mcrals (class in spectrochempy)": [[105, "spectrochempy.MCRALS", false]], "mean (fastica attribute)": [[100, "spectrochempy.FastICA.mean", false]], "mean() (in module spectrochempy)": [[194, "spectrochempy.mean", false]], "mean() (nddataset method)": [[106, "spectrochempy.NDDataset.mean", false]], "meta (coord attribute)": [[97, "spectrochempy.Coord.meta", false]], "meta (nddataset attribute)": [[106, "spectrochempy.NDDataset.meta", false]], "meta (project attribute)": [[115, "spectrochempy.Project.meta", false]], "method (filter attribute)": [[101, "spectrochempy.Filter.method", false]], "method (optimize attribute)": [[111, "spectrochempy.Optimize.method", false]], "min() (coord method)": [[97, "spectrochempy.Coord.min", false]], "min() (in module spectrochempy)": [[195, "spectrochempy.min", false]], "min() (nddataset method)": [[106, "spectrochempy.NDDataset.min", false]], "mixing (fastica attribute)": [[100, "spectrochempy.FastICA.mixing", false]], "mode (filter attribute)": [[101, "spectrochempy.Filter.mode", false]], "model (baseline attribute)": [[96, "spectrochempy.Baseline.model", false]], "modeldata (nddataset attribute)": [[106, "spectrochempy.NDDataset.modeldata", false]], "modeldata (optimize attribute)": [[111, "spectrochempy.Optimize.modeldata", false]], "modified (nddataset attribute)": [[106, "spectrochempy.NDDataset.modified", false]], "monodecconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.monoDecConc", false]], "monodectol (mcrals attribute)": [[105, "spectrochempy.MCRALS.monoDecTol", false]], "monoincconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.monoIncConc", false]], "monoinctol (mcrals attribute)": [[105, "spectrochempy.MCRALS.monoIncTol", false]], "multiplot() (in module spectrochempy)": [[196, "spectrochempy.multiplot", false]], "multiplot_image() (in module spectrochempy)": [[197, "spectrochempy.multiplot_image", false]], "multiplot_lines() (in module spectrochempy)": [[198, "spectrochempy.multiplot_lines", false]], "multiplot_map() (in module spectrochempy)": [[199, "spectrochempy.multiplot_map", false]], "multiplot_scatter() (in module spectrochempy)": [[200, "spectrochempy.multiplot_scatter", false]], "multiplot_stack() (in module spectrochempy)": [[201, "spectrochempy.multiplot_stack", false]], "multiplot_with_transposed() (in module spectrochempy)": [[202, "spectrochempy.multiplot_with_transposed", false]], "multivariate (baseline attribute)": [[96, "spectrochempy.Baseline.multivariate", false]], "n_components": [[303, "term-n_components", true]], "n_components (baseline attribute)": [[96, "spectrochempy.Baseline.n_components", false]], "n_components (efa attribute)": [[99, "spectrochempy.EFA.n_components", false]], "n_components (fastica attribute)": [[100, "spectrochempy.FastICA.n_components", false]], "n_components (iris attribute)": [[102, "spectrochempy.IRIS.n_components", false]], "n_components (mcrals attribute)": [[105, "spectrochempy.MCRALS.n_components", false]], "n_components (nmf attribute)": [[109, "spectrochempy.NMF.n_components", false]], "n_components (optimize attribute)": [[111, "spectrochempy.Optimize.n_components", false]], "n_components (pca attribute)": [[112, "spectrochempy.PCA.n_components", false]], "n_components (plsregression attribute)": [[114, "spectrochempy.PLSRegression.n_components", false]], "n_components (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.n_components", false]], "n_components (svd attribute)": [[118, "spectrochempy.SVD.n_components", false]], "n_features": [[303, "term-n_features", true]], "n_iter (fastica attribute)": [[100, "spectrochempy.FastICA.n_iter", false]], "n_observations": [[303, "term-n_observations", true]], "n_oversamples (pca attribute)": [[112, "spectrochempy.PCA.n_oversamples", false]], "n_reactions (actionmasskinetics attribute)": [[95, "spectrochempy.ActionMassKinetics.n_reactions", false]], "n_species (actionmasskinetics attribute)": [[95, "spectrochempy.ActionMassKinetics.n_species", false]], "n_targets": [[303, "term-n_targets", true]], "name (baseline attribute)": [[96, "spectrochempy.Baseline.name", false]], "name (coord attribute)": [[97, "spectrochempy.Coord.name", false]], "name (efa attribute)": [[99, "spectrochempy.EFA.name", false]], "name (fastica attribute)": [[100, "spectrochempy.FastICA.name", false]], "name (filter attribute)": [[101, "spectrochempy.Filter.name", false]], "name (iris attribute)": [[102, "spectrochempy.IRIS.name", false]], "name (lstsq attribute)": [[104, "spectrochempy.LSTSQ.name", false]], "name (mcrals attribute)": [[105, "spectrochempy.MCRALS.name", false]], "name (nddataset attribute)": [[106, "spectrochempy.NDDataset.name", false]], "name (nmf attribute)": [[109, "spectrochempy.NMF.name", false]], "name (nnls attribute)": [[110, "spectrochempy.NNLS.name", false]], "name (optimize attribute)": [[111, "spectrochempy.Optimize.name", false]], "name (pca attribute)": [[112, "spectrochempy.PCA.name", false]], "name (plsregression attribute)": [[114, "spectrochempy.PLSRegression.name", false]], "name (project attribute)": [[115, "spectrochempy.Project.name", false]], "name (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.name", false]], "name (svd attribute)": [[118, "spectrochempy.SVD.name", false]], "names (coordset attribute)": [[98, "spectrochempy.CoordSet.names", false]], "ndaxes (nddataset attribute)": [[106, "spectrochempy.NDDataset.ndaxes", false]], "nddataset (class in spectrochempy)": [[106, "spectrochempy.NDDataset", false]], "ndim (nddataset attribute)": [[106, "spectrochempy.NDDataset.ndim", false]], "nmf": [[303, "term-NMF", true]], "nmf (class in spectrochempy)": [[109, "spectrochempy.NMF", false]], "nnls (class in spectrochempy)": [[110, "spectrochempy.NNLS", false]], "noise (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.noise", false]], "nonnegconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.nonnegConc", false]], "nonnegspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.nonnegSpec", false]], "normspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.normSpec", false]], "ones() (in module spectrochempy)": [[203, "spectrochempy.ones", false]], "ones() (nddataset method)": [[106, "spectrochempy.NDDataset.ones", false]], "ones_like() (in module spectrochempy)": [[204, "spectrochempy.ones_like", false]], "ones_like() (nddataset method)": [[106, "spectrochempy.NDDataset.ones_like", false]], "optimize (class in spectrochempy)": [[111, "spectrochempy.Optimize", false]], "order (baseline attribute)": [[96, "spectrochempy.Baseline.order", false]], "order (filter attribute)": [[101, "spectrochempy.Filter.order", false]], "origin (nddataset attribute)": [[106, "spectrochempy.NDDataset.origin", false]], "parameters() (baseline method)": [[96, "spectrochempy.Baseline.parameters", false]], "parameters() (efa method)": [[99, "spectrochempy.EFA.parameters", false]], "parameters() (fastica method)": [[100, "spectrochempy.FastICA.parameters", false]], "parameters() (filter method)": [[101, "spectrochempy.Filter.parameters", false]], "parameters() (iris method)": [[102, "spectrochempy.IRIS.parameters", false]], "parameters() (lstsq method)": [[104, "spectrochempy.LSTSQ.parameters", false]], "parameters() (mcrals method)": [[105, "spectrochempy.MCRALS.parameters", false]], "parameters() (nmf method)": [[109, "spectrochempy.NMF.parameters", false]], "parameters() (nnls method)": [[110, "spectrochempy.NNLS.parameters", false]], "parameters() (optimize method)": [[111, "spectrochempy.Optimize.parameters", false]], "parameters() (pca method)": [[112, "spectrochempy.PCA.parameters", false]], "parameters() (plsregression method)": [[114, "spectrochempy.PLSRegression.parameters", false]], "parameters() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.parameters", false]], "parameters() (svd method)": [[118, "spectrochempy.SVD.parameters", false]], "params() (baseline method)": [[96, "spectrochempy.Baseline.params", false]], "params() (efa method)": [[99, "spectrochempy.EFA.params", false]], "params() (fastica method)": [[100, "spectrochempy.FastICA.params", false]], "params() (filter method)": [[101, "spectrochempy.Filter.params", false]], "params() (iris method)": [[102, "spectrochempy.IRIS.params", false]], "params() (lstsq method)": [[104, "spectrochempy.LSTSQ.params", false]], "params() (mcrals method)": [[105, "spectrochempy.MCRALS.params", false]], "params() (nmf method)": [[109, "spectrochempy.NMF.params", false]], "params() (nnls method)": [[110, "spectrochempy.NNLS.params", false]], "params() (optimize method)": [[111, "spectrochempy.Optimize.params", false]], "params() (pca method)": [[112, "spectrochempy.PCA.params", false]], "params() (plsregression method)": [[114, "spectrochempy.PLSRegression.params", false]], "params() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.params", false]], "params() (svd method)": [[118, "spectrochempy.SVD.params", false]], "parent (nddataset attribute)": [[106, "spectrochempy.NDDataset.parent", false]], "parent (project attribute)": [[115, "spectrochempy.Project.parent", false]], "parityplot() (plsregression method)": [[114, "spectrochempy.PLSRegression.parityplot", false]], "pathclean() (in module spectrochempy)": [[205, "spectrochempy.pathclean", false]], "pca": [[303, "term-PCA", true]], "pca (class in spectrochempy)": [[112, "spectrochempy.PCA", false]], "persist() (quantity method)": [[116, "spectrochempy.Quantity.persist", false]], "pfr (class in spectrochempy)": [[113, "spectrochempy.PFR", false]], "pipe() (in module spectrochempy)": [[206, "spectrochempy.pipe", false]], "pipe() (nddataset method)": [[106, "spectrochempy.NDDataset.pipe", false]], "pk() (in module spectrochempy)": [[207, "spectrochempy.pk", false]], "pk_exp() (in module spectrochempy)": [[208, "spectrochempy.pk_exp", false]], "plot() (baseline method)": [[96, "spectrochempy.Baseline.plot", false]], "plot() (in module spectrochempy)": [[209, "spectrochempy.plot", false]], "plot() (nddataset method)": [[106, "spectrochempy.NDDataset.plot", false]], "plot_1d() (in module spectrochempy)": [[210, "spectrochempy.plot_1D", false]], "plot_2d() (in module spectrochempy)": [[211, "spectrochempy.plot_2D", false]], "plot_3d() (in module spectrochempy)": [[212, "spectrochempy.plot_3D", false]], "plot_bar() (in module spectrochempy)": [[213, "spectrochempy.plot_bar", false]], "plot_image() (in module spectrochempy)": [[214, "spectrochempy.plot_image", false]], "plot_map() (in module spectrochempy)": [[215, "spectrochempy.plot_map", false]], "plot_multiple() (in module spectrochempy)": [[216, "spectrochempy.plot_multiple", false]], "plot_pen() (in module spectrochempy)": [[217, "spectrochempy.plot_pen", false]], "plot_scatter() (in module spectrochempy)": [[218, "spectrochempy.plot_scatter", false]], "plot_scatter_pen() (in module spectrochempy)": [[219, "spectrochempy.plot_scatter_pen", false]], "plot_stack() (in module spectrochempy)": [[220, "spectrochempy.plot_stack", false]], "plot_surface() (in module spectrochempy)": [[221, "spectrochempy.plot_surface", false]], "plot_waterfall() (in module spectrochempy)": [[222, "spectrochempy.plot_waterfall", false]], "plot_with_transposed() (in module spectrochempy)": [[223, "spectrochempy.plot_with_transposed", false]], "plotdistribution() (iris method)": [[102, "spectrochempy.IRIS.plotdistribution", false]], "plotlcurve() (iris method)": [[102, "spectrochempy.IRIS.plotlcurve", false]], "plotmerit() (efa method)": [[99, "spectrochempy.EFA.plotmerit", false]], "plotmerit() (fastica method)": [[100, "spectrochempy.FastICA.plotmerit", false]], "plotmerit() (iris method)": [[102, "spectrochempy.IRIS.plotmerit", false]], "plotmerit() (mcrals method)": [[105, "spectrochempy.MCRALS.plotmerit", false]], "plotmerit() (nmf method)": [[109, "spectrochempy.NMF.plotmerit", false]], "plotmerit() (optimize method)": [[111, "spectrochempy.Optimize.plotmerit", false]], "plotmerit() (pca method)": [[112, "spectrochempy.PCA.plotmerit", false]], "plotmerit() (plsregression method)": [[114, "spectrochempy.PLSRegression.plotmerit", false]], "plotmerit() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.plotmerit", false]], "plotmerit() (svd method)": [[118, "spectrochempy.SVD.plotmerit", false]], "pls": [[303, "term-PLS", true]], "plsregression (class in spectrochempy)": [[114, "spectrochempy.PLSRegression", false]], "polynomialbaseline (class in spectrochempy)": [[224, "spectrochempy.polynomialbaseline", false]], "positive (lstsq attribute)": [[104, "spectrochempy.LSTSQ.positive", false]], "positive (nnls attribute)": [[110, "spectrochempy.NNLS.positive", false]], "power_iteration_normalizer (pca attribute)": [[112, "spectrochempy.PCA.power_iteration_normalizer", false]], "predict() (lstsq method)": [[104, "spectrochempy.LSTSQ.predict", false]], "predict() (nnls method)": [[110, "spectrochempy.NNLS.predict", false]], "predict() (optimize method)": [[111, "spectrochempy.Optimize.predict", false]], "predict() (plsregression method)": [[114, "spectrochempy.PLSRegression.predict", false]], "printev() (pca method)": [[112, "spectrochempy.PCA.printev", false]], "prod() (quantity method)": [[116, "spectrochempy.Quantity.prod", false]], "project (class in spectrochempy)": [[115, "spectrochempy.Project", false]], "projects (project attribute)": [[115, "spectrochempy.Project.projects", false]], "projects_names (project attribute)": [[115, "spectrochempy.Project.projects_names", false]], "ps() (in module spectrochempy)": [[225, "spectrochempy.ps", false]], "pt (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.Pt", false]], "ptp() (coord method)": [[97, "spectrochempy.Coord.ptp", false]], "ptp() (in module spectrochempy)": [[226, "spectrochempy.ptp", false]], "ptp() (nddataset method)": [[106, "spectrochempy.NDDataset.ptp", false]], "qpsolver (iris attribute)": [[102, "spectrochempy.IRIS.qpsolver", false]], "qsin() (in module spectrochempy)": [[227, "spectrochempy.qsin", false]], "quantity (class in spectrochempy)": [[116, "spectrochempy.Quantity", false]], "random() (in module spectrochempy)": [[228, "spectrochempy.random", false]], "random() (nddataset method)": [[106, "spectrochempy.NDDataset.random", false]], "random_state (fastica attribute)": [[100, "spectrochempy.FastICA.random_state", false]], "random_state (nmf attribute)": [[109, "spectrochempy.NMF.random_state", false]], "random_state (pca attribute)": [[112, "spectrochempy.PCA.random_state", false]], "ranges (baseline attribute)": [[96, "spectrochempy.Baseline.ranges", false]], "rank": [[303, "term-rank", true]], "read() (in module spectrochempy)": [[229, "spectrochempy.read", false]], "read_carroucell() (in module spectrochempy)": [[230, "spectrochempy.read_carroucell", false]], "read_csv() (in module spectrochempy)": [[231, "spectrochempy.read_csv", false]], "read_ddr() (in module spectrochempy)": [[232, "spectrochempy.read_ddr", false]], "read_dir() (in module spectrochempy)": [[233, "spectrochempy.read_dir", false]], "read_hdr() (in module spectrochempy)": [[234, "spectrochempy.read_hdr", false]], "read_jcamp() (in module spectrochempy)": [[235, "spectrochempy.read_jcamp", false]], "read_labspec() (in module spectrochempy)": [[236, "spectrochempy.read_labspec", false]], "read_mat() (in module spectrochempy)": [[237, "spectrochempy.read_mat", false]], "read_matlab() (in module spectrochempy)": [[238, "spectrochempy.read_matlab", false]], "read_omnic() (in module spectrochempy)": [[239, "spectrochempy.read_omnic", false]], "read_opus() (in module spectrochempy)": [[240, "spectrochempy.read_opus", false]], "read_quadera() (in module spectrochempy)": [[241, "spectrochempy.read_quadera", false]], "read_sdr() (in module spectrochempy)": [[242, "spectrochempy.read_sdr", false]], "read_soc() (in module spectrochempy)": [[243, "spectrochempy.read_soc", false]], "read_spa() (in module spectrochempy)": [[244, "spectrochempy.read_spa", false]], "read_spc() (in module spectrochempy)": [[245, "spectrochempy.read_spc", false]], "read_spg() (in module spectrochempy)": [[246, "spectrochempy.read_spg", false]], "read_srs() (in module spectrochempy)": [[247, "spectrochempy.read_srs", false]], "read_topspin() (in module spectrochempy)": [[248, "spectrochempy.read_topspin", false]], "read_wdf() (in module spectrochempy)": [[249, "spectrochempy.read_wdf", false]], "read_wire() (in module spectrochempy)": [[250, "spectrochempy.read_wire", false]], "read_zip() (in module spectrochempy)": [[251, "spectrochempy.read_zip", false]], "real (nddataset attribute)": [[106, "spectrochempy.NDDataset.real", false]], "reconstruct() (efa method)": [[99, "spectrochempy.EFA.reconstruct", false]], "reconstruct() (fastica method)": [[100, "spectrochempy.FastICA.reconstruct", false]], "reconstruct() (iris method)": [[102, "spectrochempy.IRIS.reconstruct", false]], "reconstruct() (mcrals method)": [[105, "spectrochempy.MCRALS.reconstruct", false]], "reconstruct() (nmf method)": [[109, "spectrochempy.NMF.reconstruct", false]], "reconstruct() (optimize method)": [[111, "spectrochempy.Optimize.reconstruct", false]], "reconstruct() (pca method)": [[112, "spectrochempy.PCA.reconstruct", false]], "reconstruct() (plsregression method)": [[114, "spectrochempy.PLSRegression.reconstruct", false]], "reconstruct() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.reconstruct", false]], "reconstruct() (svd method)": [[118, "spectrochempy.SVD.reconstruct", false]], "reduce() (efa method)": [[99, "spectrochempy.EFA.reduce", false]], "reduce() (fastica method)": [[100, "spectrochempy.FastICA.reduce", false]], "reduce() (iris method)": [[102, "spectrochempy.IRIS.reduce", false]], "reduce() (mcrals method)": [[105, "spectrochempy.MCRALS.reduce", false]], "reduce() (nmf method)": [[109, "spectrochempy.NMF.reduce", false]], "reduce() (optimize method)": [[111, "spectrochempy.Optimize.reduce", false]], "reduce() (pca method)": [[112, "spectrochempy.PCA.reduce", false]], "reduce() (plsregression method)": [[114, "spectrochempy.PLSRegression.reduce", false]], "reduce() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.reduce", false]], "reduce() (svd method)": [[118, "spectrochempy.SVD.reduce", false]], "reg_par (iris attribute)": [[102, "spectrochempy.IRIS.reg_par", false]], "regularization": [[303, "term-regularization", true]], "remove_all_dataset() (project method)": [[115, "spectrochempy.Project.remove_all_dataset", false]], "remove_all_project() (project method)": [[115, "spectrochempy.Project.remove_all_project", false]], "remove_dataset() (project method)": [[115, "spectrochempy.Project.remove_dataset", false]], "remove_masks() (in module spectrochempy)": [[252, "spectrochempy.remove_masks", false]], "remove_masks() (nddataset method)": [[106, "spectrochempy.NDDataset.remove_masks", false]], "remove_project() (project method)": [[115, "spectrochempy.Project.remove_project", false]], "reset() (baseline method)": [[96, "spectrochempy.Baseline.reset", false]], "reset() (efa method)": [[99, "spectrochempy.EFA.reset", false]], "reset() (fastica method)": [[100, "spectrochempy.FastICA.reset", false]], "reset() (filter method)": [[101, "spectrochempy.Filter.reset", false]], "reset() (iris method)": [[102, "spectrochempy.IRIS.reset", false]], "reset() (lstsq method)": [[104, "spectrochempy.LSTSQ.reset", false]], "reset() (mcrals method)": [[105, "spectrochempy.MCRALS.reset", false]], "reset() (nmf method)": [[109, "spectrochempy.NMF.reset", false]], "reset() (nnls method)": [[110, "spectrochempy.NNLS.reset", false]], "reset() (optimize method)": [[111, "spectrochempy.Optimize.reset", false]], "reset() (pca method)": [[112, "spectrochempy.PCA.reset", false]], "reset() (plsregression method)": [[114, "spectrochempy.PLSRegression.reset", false]], "reset() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.reset", false]], "reset() (svd method)": [[118, "spectrochempy.SVD.reset", false]], "reversed (coord attribute)": [[97, "spectrochempy.Coord.reversed", false]], "ri (nddataset attribute)": [[106, "spectrochempy.NDDataset.RI", false]], "roi (coord attribute)": [[97, "spectrochempy.Coord.roi", false]], "roi (nddataset attribute)": [[106, "spectrochempy.NDDataset.roi", false]], "roll() (in module spectrochempy)": [[253, "spectrochempy.roll", false]], "round() (coord method)": [[97, "spectrochempy.Coord.round", false]], "round() (in module spectrochempy)": [[254, "spectrochempy.round", false]], "round() (nddataset method)": [[106, "spectrochempy.NDDataset.round", false]], "round_() (coord method)": [[97, "spectrochempy.Coord.round_", false]], "round_() (nddataset method)": [[106, "spectrochempy.NDDataset.round_", false]], "rr (nddataset attribute)": [[106, "spectrochempy.NDDataset.RR", false]], "rs() (in module spectrochempy)": [[255, "spectrochempy.rs", false]], "run_all_scripts() (in module spectrochempy)": [[256, "spectrochempy.run_all_scripts", false]], "run_script() (in module spectrochempy)": [[257, "spectrochempy.run_script", false]], "s (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.s", false]], "s (svd attribute)": [[118, "spectrochempy.SVD.s", false]], "s_soft (mcrals attribute)": [[105, "spectrochempy.MCRALS.S_soft", false]], "save() (nddataset method)": [[106, "spectrochempy.NDDataset.save", false]], "save() (project method)": [[115, "spectrochempy.Project.save", false]], "save_as() (nddataset method)": [[106, "spectrochempy.NDDataset.save_as", false]], "save_as() (project method)": [[115, "spectrochempy.Project.save_as", false]], "savgol() (in module spectrochempy)": [[258, "spectrochempy.savgol", false]], "scale (plsregression attribute)": [[114, "spectrochempy.PLSRegression.scale", false]], "scaled (pca attribute)": [[112, "spectrochempy.PCA.scaled", false]], "score": [[303, "term-score", true]], "score() (lstsq method)": [[104, "spectrochempy.LSTSQ.score", false]], "score() (nnls method)": [[110, "spectrochempy.NNLS.score", false]], "score() (plsregression method)": [[114, "spectrochempy.PLSRegression.score", false]], "scoreplot() (pca method)": [[112, "spectrochempy.PCA.scoreplot", false]], "scores": [[303, "term-scores", true]], "scores (pca attribute)": [[112, "spectrochempy.PCA.scores", false]], "screeplot() (pca method)": [[112, "spectrochempy.PCA.screeplot", false]], "script (asymmetricvoigtmodel attribute)": [[133, "spectrochempy.asymmetricvoigtmodel.script", false]], "script (class in spectrochempy)": [[119, "spectrochempy.Script", false]], "script (gaussianmodel attribute)": [[169, "spectrochempy.gaussianmodel.script", false]], "script (lorentzianmodel attribute)": [[190, "spectrochempy.lorentzianmodel.script", false]], "script (optimize attribute)": [[111, "spectrochempy.Optimize.script", false]], "script (polynomialbaseline attribute)": [[224, "spectrochempy.polynomialbaseline.script", false]], "script (sigmoidmodel attribute)": [[264, "spectrochempy.sigmoidmodel.script", false]], "script (voigtmodel attribute)": [[287, "spectrochempy.voigtmodel.script", false]], "scripts (project attribute)": [[115, "spectrochempy.Project.scripts", false]], "scripts_names (project attribute)": [[115, "spectrochempy.Project.scripts_names", false]], "select() (coordset method)": [[98, "spectrochempy.CoordSet.select", false]], "set() (coordset method)": [[98, "spectrochempy.CoordSet.set", false]], "set_complex() (in module spectrochempy)": [[259, "spectrochempy.set_complex", false]], "set_complex() (nddataset method)": [[106, "spectrochempy.NDDataset.set_complex", false]], "set_coordset() (nddataset method)": [[106, "spectrochempy.NDDataset.set_coordset", false]], "set_coordtitles() (nddataset method)": [[106, "spectrochempy.NDDataset.set_coordtitles", false]], "set_coordunits() (nddataset method)": [[106, "spectrochempy.NDDataset.set_coordunits", false]], "set_hypercomplex() (nddataset method)": [[106, "spectrochempy.NDDataset.set_hypercomplex", false]], "set_laser_frequency() (coord method)": [[97, "spectrochempy.Coord.set_laser_frequency", false]], "set_loglevel() (in module spectrochempy)": [[260, "spectrochempy.set_loglevel", false]], "set_nmr_context() (in module spectrochempy)": [[261, "spectrochempy.set_nmr_context", false]], "set_quaternion() (nddataset method)": [[106, "spectrochempy.NDDataset.set_quaternion", false]], "set_titles() (coordset method)": [[98, "spectrochempy.CoordSet.set_titles", false]], "set_units() (coordset method)": [[98, "spectrochempy.CoordSet.set_units", false]], "shape (coord attribute)": [[97, "spectrochempy.Coord.shape", false]], "shape (nddataset attribute)": [[106, "spectrochempy.NDDataset.shape", false]], "show() (in module spectrochempy)": [[262, "spectrochempy.show", false]], "show_datapoints (coord attribute)": [[97, "spectrochempy.Coord.show_datapoints", false]], "show_versions() (in module spectrochempy)": [[263, "spectrochempy.show_versions", false]], "shuffle (nmf attribute)": [[109, "spectrochempy.NMF.shuffle", false]], "sigdigits (coord attribute)": [[97, "spectrochempy.Coord.sigdigits", false]], "sigmoidmodel (class in spectrochempy)": [[264, "spectrochempy.sigmoidmodel", false]], "simplisma (class in spectrochempy)": [[117, "spectrochempy.SIMPLISMA", false]], "simpson() (in module spectrochempy)": [[265, "spectrochempy.simpson", false]], "sine() (in module spectrochempy)": [[266, "spectrochempy.sine", false]], "singular_values (svd attribute)": [[118, "spectrochempy.SVD.singular_values", false]], "sinm() (in module spectrochempy)": [[267, "spectrochempy.sinm", false]], "size (coord attribute)": [[97, "spectrochempy.Coord.size", false]], "size (coordset attribute)": [[98, "spectrochempy.CoordSet.size", false]], "size (filter attribute)": [[101, "spectrochempy.Filter.size", false]], "size (nddataset attribute)": [[106, "spectrochempy.NDDataset.size", false]], "sizes (coordset attribute)": [[98, "spectrochempy.CoordSet.sizes", false]], "smooth() (in module spectrochempy)": [[268, "spectrochempy.smooth", false]], "snip() (in module spectrochempy)": [[269, "spectrochempy.snip", false]], "snip_width (baseline attribute)": [[96, "spectrochempy.Baseline.snip_width", false]], "solver (nmf attribute)": [[109, "spectrochempy.NMF.solver", false]], "solverconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.solverConc", false]], "solverspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.solverSpec", false]], "sort() (in module spectrochempy)": [[270, "spectrochempy.sort", false]], "sort() (nddataset method)": [[106, "spectrochempy.NDDataset.sort", false]], "sp() (in module spectrochempy)": [[271, "spectrochempy.sp", false]], "spacing (coord attribute)": [[97, "spectrochempy.Coord.spacing", false]], "species (actionmasskinetics attribute)": [[95, "spectrochempy.ActionMassKinetics.species", false]], "squeeze() (in module spectrochempy)": [[272, "spectrochempy.squeeze", false]], "squeeze() (nddataset method)": [[106, "spectrochempy.NDDataset.squeeze", false]], "st (fastica attribute)": [[100, "spectrochempy.FastICA.St", false]], "st (mcrals attribute)": [[105, "spectrochempy.MCRALS.St", false]], "st (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.St", false]], "st_constrained_list (mcrals attribute)": [[105, "spectrochempy.MCRALS.St_constrained_list", false]], "st_ls (mcrals attribute)": [[105, "spectrochempy.MCRALS.St_ls", false]], "st_ls_list (mcrals attribute)": [[105, "spectrochempy.MCRALS.St_ls_list", false]], "st_unconstrained (mcrals attribute)": [[105, "spectrochempy.MCRALS.St_unconstrained", false]], "stack() (in module spectrochempy)": [[273, "spectrochempy.stack", false]], "standardized (pca attribute)": [[112, "spectrochempy.PCA.standardized", false]], "std() (in module spectrochempy)": [[274, "spectrochempy.std", false]], "std() (nddataset method)": [[106, "spectrochempy.NDDataset.std", false]], "storeiterations (mcrals attribute)": [[105, "spectrochempy.MCRALS.storeIterations", false]], "suffix (nddataset attribute)": [[106, "spectrochempy.NDDataset.suffix", false]], "suffix (project attribute)": [[115, "spectrochempy.Project.suffix", false]], "sum() (in module spectrochempy)": [[275, "spectrochempy.sum", false]], "sum() (nddataset method)": [[106, "spectrochempy.NDDataset.sum", false]], "sv (svd attribute)": [[118, "spectrochempy.SVD.sv", false]], "svd": [[303, "term-SVD", true]], "svd (class in spectrochempy)": [[118, "spectrochempy.SVD", false]], "svd_solver (pca attribute)": [[112, "spectrochempy.PCA.svd_solver", false]], "swapaxes() (nddataset method)": [[106, "spectrochempy.NDDataset.swapaxes", false]], "swapdims() (in module spectrochempy)": [[276, "spectrochempy.swapdims", false]], "swapdims() (nddataset method)": [[106, "spectrochempy.NDDataset.swapdims", false]], "t (nddataset attribute)": [[106, "spectrochempy.NDDataset.T", false]], "take() (in module spectrochempy)": [[277, "spectrochempy.take", false]], "take() (nddataset method)": [[106, "spectrochempy.NDDataset.take", false]], "timezone (nddataset attribute)": [[106, "spectrochempy.NDDataset.timezone", false]], "title (coord attribute)": [[97, "spectrochempy.Coord.title", false]], "title (nddataset attribute)": [[106, "spectrochempy.NDDataset.title", false]], "titles (coordset attribute)": [[98, "spectrochempy.CoordSet.titles", false]], "to() (coord method)": [[97, "spectrochempy.Coord.to", false]], "to() (in module spectrochempy)": [[278, "spectrochempy.to", false]], "to() (nddataset method)": [[106, "spectrochempy.NDDataset.to", false]], "to() (quantity method)": [[116, "spectrochempy.Quantity.to", false]], "to_array() (in module spectrochempy)": [[279, "spectrochempy.to_array", false]], "to_array() (nddataset method)": [[106, "spectrochempy.NDDataset.to_array", false]], "to_base_units() (coord method)": [[97, "spectrochempy.Coord.to_base_units", false]], "to_base_units() (in module spectrochempy)": [[280, "spectrochempy.to_base_units", false]], "to_base_units() (nddataset method)": [[106, "spectrochempy.NDDataset.to_base_units", false]], "to_base_units() (quantity method)": [[116, "spectrochempy.Quantity.to_base_units", false]], "to_compact() (quantity method)": [[116, "spectrochempy.Quantity.to_compact", false]], "to_dict() (baseline method)": [[96, "spectrochempy.Baseline.to_dict", false]], "to_dict() (coordset method)": [[98, "spectrochempy.CoordSet.to_dict", false]], "to_dict() (efa method)": [[99, "spectrochempy.EFA.to_dict", false]], "to_dict() (fastica method)": [[100, "spectrochempy.FastICA.to_dict", false]], "to_dict() (filter method)": [[101, "spectrochempy.Filter.to_dict", false]], "to_dict() (iris method)": [[102, "spectrochempy.IRIS.to_dict", false]], "to_dict() (lstsq method)": [[104, "spectrochempy.LSTSQ.to_dict", false]], "to_dict() (mcrals method)": [[105, "spectrochempy.MCRALS.to_dict", false]], "to_dict() (nmf method)": [[109, "spectrochempy.NMF.to_dict", false]], "to_dict() (nnls method)": [[110, "spectrochempy.NNLS.to_dict", false]], "to_dict() (optimize method)": [[111, "spectrochempy.Optimize.to_dict", false]], "to_dict() (pca method)": [[112, "spectrochempy.PCA.to_dict", false]], "to_dict() (plsregression method)": [[114, "spectrochempy.PLSRegression.to_dict", false]], "to_dict() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.to_dict", false]], "to_dict() (svd method)": [[118, "spectrochempy.SVD.to_dict", false]], "to_preferred() (quantity method)": [[116, "spectrochempy.Quantity.to_preferred", false]], "to_reduced_units() (coord method)": [[97, "spectrochempy.Coord.to_reduced_units", false]], "to_reduced_units() (in module spectrochempy)": [[281, "spectrochempy.to_reduced_units", false]], "to_reduced_units() (nddataset method)": [[106, "spectrochempy.NDDataset.to_reduced_units", false]], "to_reduced_units() (quantity method)": [[116, "spectrochempy.Quantity.to_reduced_units", false]], "to_root_units() (quantity method)": [[116, "spectrochempy.Quantity.to_root_units", false]], "to_xarray() (in module spectrochempy)": [[282, "spectrochempy.to_xarray", false]], "to_xarray() (nddataset method)": [[106, "spectrochempy.NDDataset.to_xarray", false]], "tol (baseline attribute)": [[96, "spectrochempy.Baseline.tol", false]], "tol (fastica attribute)": [[100, "spectrochempy.FastICA.tol", false]], "tol (mcrals attribute)": [[105, "spectrochempy.MCRALS.tol", false]], "tol (nmf attribute)": [[109, "spectrochempy.NMF.tol", false]], "tol (pca attribute)": [[112, "spectrochempy.PCA.tol", false]], "tol (plsregression attribute)": [[114, "spectrochempy.PLSRegression.tol", false]], "tol (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.tol", false]], "transform() (baseline method)": [[96, "spectrochempy.Baseline.transform", false]], "transform() (efa method)": [[99, "spectrochempy.EFA.transform", false]], "transform() (fastica method)": [[100, "spectrochempy.FastICA.transform", false]], "transform() (filter method)": [[101, "spectrochempy.Filter.transform", false]], "transform() (iris method)": [[102, "spectrochempy.IRIS.transform", false]], "transform() (mcrals method)": [[105, "spectrochempy.MCRALS.transform", false]], "transform() (nmf method)": [[109, "spectrochempy.NMF.transform", false]], "transform() (optimize method)": [[111, "spectrochempy.Optimize.transform", false]], "transform() (pca method)": [[112, "spectrochempy.PCA.transform", false]], "transform() (plsregression method)": [[114, "spectrochempy.PLSRegression.transform", false]], "transform() (simplisma method)": [[117, "spectrochempy.SIMPLISMA.transform", false]], "transform() (svd method)": [[118, "spectrochempy.SVD.transform", false]], "transpose() (in module spectrochempy)": [[283, "spectrochempy.transpose", false]], "transpose() (nddataset method)": [[106, "spectrochempy.NDDataset.transpose", false]], "trapezoid() (in module spectrochempy)": [[284, "spectrochempy.trapezoid", false]], "triang() (in module spectrochempy)": [[285, "spectrochempy.triang", false]], "type (asymmetricvoigtmodel attribute)": [[133, "spectrochempy.asymmetricvoigtmodel.type", false]], "type (gaussianmodel attribute)": [[169, "spectrochempy.gaussianmodel.type", false]], "type (lorentzianmodel attribute)": [[190, "spectrochempy.lorentzianmodel.type", false]], "type (polynomialbaseline attribute)": [[224, "spectrochempy.polynomialbaseline.type", false]], "type (sigmoidmodel attribute)": [[264, "spectrochempy.sigmoidmodel.type", false]], "type (voigtmodel attribute)": [[287, "spectrochempy.voigtmodel.type", false]], "u (quantity attribute)": [[116, "spectrochempy.Quantity.u", false]], "u (svd attribute)": [[118, "spectrochempy.SVD.U", false]], "umasked_data (coord attribute)": [[97, "spectrochempy.Coord.umasked_data", false]], "umasked_data (nddataset attribute)": [[106, "spectrochempy.NDDataset.umasked_data", false]], "unimodality": [[303, "term-unimodality", true]], "unimodconc (mcrals attribute)": [[105, "spectrochempy.MCRALS.unimodConc", false]], "unimodconcmod (mcrals attribute)": [[105, "spectrochempy.MCRALS.unimodConcMod", false]], "unimodconctol (mcrals attribute)": [[105, "spectrochempy.MCRALS.unimodConcTol", false]], "unimodspec (mcrals attribute)": [[105, "spectrochempy.MCRALS.unimodSpec", false]], "unimodspecmod (mcrals attribute)": [[105, "spectrochempy.MCRALS.unimodSpecMod", false]], "unimodspectol (mcrals attribute)": [[105, "spectrochempy.MCRALS.unimodSpecTol", false]], "unit (class in spectrochempy)": [[120, "spectrochempy.Unit", false]], "unit_items() (quantity method)": [[116, "spectrochempy.Quantity.unit_items", false]], "unitless (coord attribute)": [[97, "spectrochempy.Coord.unitless", false]], "unitless (nddataset attribute)": [[106, "spectrochempy.NDDataset.unitless", false]], "unitless (quantity attribute)": [[116, "spectrochempy.Quantity.unitless", false]], "units (coord attribute)": [[97, "spectrochempy.Coord.units", false]], "units (coordset attribute)": [[98, "spectrochempy.CoordSet.units", false]], "units (nddataset attribute)": [[106, "spectrochempy.NDDataset.units", false]], "units (quantity attribute)": [[116, "spectrochempy.Quantity.units", false]], "update() (coordset method)": [[98, "spectrochempy.CoordSet.update", false]], "used_ranges (baseline attribute)": [[96, "spectrochempy.Baseline.used_ranges", false]], "usermodels (optimize attribute)": [[111, "spectrochempy.Optimize.usermodels", false]], "value (coord attribute)": [[97, "spectrochempy.Coord.value", false]], "value (nddataset attribute)": [[106, "spectrochempy.NDDataset.value", false]], "values (coord attribute)": [[97, "spectrochempy.Coord.values", false]], "values (nddataset attribute)": [[106, "spectrochempy.NDDataset.values", false]], "var() (in module spectrochempy)": [[286, "spectrochempy.var", false]], "var() (nddataset method)": [[106, "spectrochempy.NDDataset.var", false]], "visualize() (quantity method)": [[116, "spectrochempy.Quantity.visualize", false]], "voigtmodel (class in spectrochempy)": [[287, "spectrochempy.voigtmodel", false]], "vt (svd attribute)": [[118, "spectrochempy.SVD.VT", false]], "w_init (fastica attribute)": [[100, "spectrochempy.FastICA.w_init", false]], "warning_() (in module spectrochempy)": [[288, "spectrochempy.warning_", false]], "whiten (fastica attribute)": [[100, "spectrochempy.FastICA.whiten", false]], "whiten (pca attribute)": [[112, "spectrochempy.PCA.whiten", false]], "whiten_solver (fastica attribute)": [[100, "spectrochempy.FastICA.whiten_solver", false]], "whitening (fastica attribute)": [[100, "spectrochempy.FastICA.whitening", false]], "whittaker() (in module spectrochempy)": [[289, "spectrochempy.whittaker", false]], "write() (in module spectrochempy)": [[290, "spectrochempy.write", false]], "write_csv() (in module spectrochempy)": [[291, "spectrochempy.write_csv", false]], "write_excel() (in module spectrochempy)": [[292, "spectrochempy.write_excel", false]], "write_jcamp() (in module spectrochempy)": [[293, "spectrochempy.write_jcamp", false]], "write_mat() (in module spectrochempy)": [[294, "spectrochempy.write_mat", false]], "write_matlab() (in module spectrochempy)": [[295, "spectrochempy.write_matlab", false]], "write_xls() (in module spectrochempy)": [[296, "spectrochempy.write_xls", false]], "x (baseline attribute)": [[96, "spectrochempy.Baseline.X", false]], "x (efa attribute)": [[99, "spectrochempy.EFA.X", false]], "x (fastica attribute)": [[100, "spectrochempy.FastICA.X", false]], "x (iris attribute)": [[102, "spectrochempy.IRIS.X", false]], "x (lstsq attribute)": [[104, "spectrochempy.LSTSQ.X", false]], "x (mcrals attribute)": [[105, "spectrochempy.MCRALS.X", false]], "x (nmf attribute)": [[109, "spectrochempy.NMF.X", false]], "x (nnls attribute)": [[110, "spectrochempy.NNLS.X", false]], "x (optimize attribute)": [[111, "spectrochempy.Optimize.X", false]], "x (pca attribute)": [[112, "spectrochempy.PCA.X", false]], "x (plsregression attribute)": [[114, "spectrochempy.PLSRegression.X", false]], "x (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.X", false]], "x (svd attribute)": [[118, "spectrochempy.SVD.X", false]], "y (efa attribute)": [[99, "spectrochempy.EFA.Y", false]], "y (fastica attribute)": [[100, "spectrochempy.FastICA.Y", false]], "y (iris attribute)": [[102, "spectrochempy.IRIS.Y", false]], "y (lstsq attribute)": [[104, "spectrochempy.LSTSQ.Y", false]], "y (mcrals attribute)": [[105, "spectrochempy.MCRALS.Y", false]], "y (nmf attribute)": [[109, "spectrochempy.NMF.Y", false]], "y (nnls attribute)": [[110, "spectrochempy.NNLS.Y", false]], "y (optimize attribute)": [[111, "spectrochempy.Optimize.Y", false]], "y (pca attribute)": [[112, "spectrochempy.PCA.Y", false]], "y (plsregression attribute)": [[114, "spectrochempy.PLSRegression.Y", false]], "y (simplisma attribute)": [[117, "spectrochempy.SIMPLISMA.Y", false]], "y (svd attribute)": [[118, "spectrochempy.SVD.Y", false]], "zeros() (in module spectrochempy)": [[297, "spectrochempy.zeros", false]], "zeros() (nddataset method)": [[106, "spectrochempy.NDDataset.zeros", false]], "zeros_like() (in module spectrochempy)": [[298, "spectrochempy.zeros_like", false]], "zeros_like() (nddataset method)": [[106, "spectrochempy.NDDataset.zeros_like", false]], "zf() (in module spectrochempy)": [[299, "spectrochempy.zf", false]], "zf_auto() (in module spectrochempy)": [[300, "spectrochempy.zf_auto", false]], "zf_double() (in module spectrochempy)": [[301, "spectrochempy.zf_double", false]], "zf_size() (in module spectrochempy)": [[302, "spectrochempy.zf_size", false]]}, "objects": {"spectrochempy": [[95, 0, 1, "", "ActionMassKinetics"], [96, 0, 1, "", "Baseline"], [97, 0, 1, "", "Coord"], [98, 0, 1, "", "CoordSet"], [99, 0, 1, "", "EFA"], [100, 0, 1, "", "FastICA"], [101, 0, 1, "", "Filter"], [102, 0, 1, "", "IRIS"], [103, 0, 1, "", "IrisKernel"], [104, 0, 1, "", "LSTSQ"], [105, 0, 1, "", "MCRALS"], [106, 0, 1, "", "NDDataset"], [109, 0, 1, "", "NMF"], [110, 0, 1, "", "NNLS"], [111, 0, 1, "", "Optimize"], [112, 0, 1, "", "PCA"], [113, 0, 1, "", "PFR"], [114, 0, 1, "", "PLSRegression"], [115, 0, 1, "", "Project"], [116, 0, 1, "", "Quantity"], [117, 0, 1, "", "SIMPLISMA"], [118, 0, 1, "", "SVD"], [119, 0, 1, "", "Script"], [120, 0, 1, "", "Unit"], [121, 3, 1, "", "abs"], [122, 3, 1, "", "absolute"], [123, 3, 1, "", "align"], [124, 3, 1, "", "all"], [125, 3, 1, "", "amax"], [126, 3, 1, "", "amin"], [127, 3, 1, "", "any"], [128, 3, 1, "", "arange"], [129, 3, 1, "", "argmax"], [130, 3, 1, "", "argmin"], [131, 3, 1, "", "around"], [132, 3, 1, "", "asls"], [133, 0, 1, "", "asymmetricvoigtmodel"], [134, 3, 1, "", "autosub"], [135, 3, 1, "", "average"], [136, 3, 1, "", "bartlett"], [137, 3, 1, "", "basc"], [138, 3, 1, "", "blackmanharris"], [139, 3, 1, "", "clip"], [140, 3, 1, "", "concatenate"], [141, 3, 1, "", "conj"], [142, 3, 1, "", "conjugate"], [143, 3, 1, "", "coordmax"], [144, 3, 1, "", "coordmin"], [145, 3, 1, "", "cs"], [146, 3, 1, "", "cumsum"], [147, 3, 1, "", "dc"], [148, 3, 1, "", "debug_"], [149, 3, 1, "", "denoise"], [150, 3, 1, "", "despike"], [151, 3, 1, "", "detrend"], [152, 3, 1, "", "diag"], [153, 3, 1, "", "diagonal"], [154, 3, 1, "", "dot"], [155, 3, 1, "", "download_nist_ir"], [156, 3, 1, "", "em"], [157, 3, 1, "", "empty"], [158, 3, 1, "", "empty_like"], [159, 3, 1, "", "error_"], [160, 3, 1, "", "eye"], [161, 3, 1, "", "fft"], [162, 3, 1, "", "find_peaks"], [163, 3, 1, "", "fromfunction"], [164, 3, 1, "", "fromiter"], [165, 3, 1, "", "fsh"], [166, 3, 1, "", "fsh2"], [167, 3, 1, "", "full"], [168, 3, 1, "", "full_like"], [169, 0, 1, "", "gaussianmodel"], [170, 3, 1, "", "general_hamming"], [171, 3, 1, "", "geomspace"], [172, 3, 1, "", "get_baseline"], [173, 3, 1, "", "get_loglevel"], [174, 3, 1, "", "gm"], [175, 3, 1, "", "hamming"], [176, 3, 1, "", "hann"], [177, 3, 1, "", "ht"], [178, 3, 1, "", "identity"], [179, 3, 1, "", "ifft"], [180, 3, 1, "", "info_"], [181, 3, 1, "", "interpolate"], [182, 3, 1, "", "is_units_compatible"], [183, 3, 1, "", "ito"], [184, 3, 1, "", "ito_base_units"], [185, 3, 1, "", "ito_reduced_units"], [186, 3, 1, "", "linspace"], [187, 3, 1, "", "load"], [188, 3, 1, "", "load_iris"], [189, 3, 1, "", "logspace"], [190, 0, 1, "", "lorentzianmodel"], [191, 3, 1, "", "ls"], [192, 3, 1, "", "max"], [193, 3, 1, "", "mc"], [194, 3, 1, "", "mean"], [195, 3, 1, "", "min"], [196, 3, 1, "", "multiplot"], [197, 3, 1, "", "multiplot_image"], [198, 3, 1, "", "multiplot_lines"], [199, 3, 1, "", "multiplot_map"], [200, 3, 1, "", "multiplot_scatter"], [201, 3, 1, "", "multiplot_stack"], [202, 3, 1, "", "multiplot_with_transposed"], [203, 3, 1, "", "ones"], [204, 3, 1, "", "ones_like"], [205, 3, 1, "", "pathclean"], [206, 3, 1, "", "pipe"], [207, 3, 1, "", "pk"], [208, 3, 1, "", "pk_exp"], [209, 3, 1, "", "plot"], [210, 3, 1, "", "plot_1D"], [211, 3, 1, "", "plot_2D"], [212, 3, 1, "", "plot_3D"], [213, 3, 1, "", "plot_bar"], [214, 3, 1, "", "plot_image"], [215, 3, 1, "", "plot_map"], [216, 3, 1, "", "plot_multiple"], [217, 3, 1, "", "plot_pen"], [218, 3, 1, "", "plot_scatter"], [219, 3, 1, "", "plot_scatter_pen"], [220, 3, 1, "", "plot_stack"], [221, 3, 1, "", "plot_surface"], [222, 3, 1, "", "plot_waterfall"], [223, 3, 1, "", "plot_with_transposed"], [224, 0, 1, "", "polynomialbaseline"], [225, 3, 1, "", "ps"], [226, 3, 1, "", "ptp"], [227, 3, 1, "", "qsin"], [228, 3, 1, "", "random"], [229, 3, 1, "", "read"], [230, 3, 1, "", "read_carroucell"], [231, 3, 1, "", "read_csv"], [232, 3, 1, "", "read_ddr"], [233, 3, 1, "", "read_dir"], [234, 3, 1, "", "read_hdr"], [235, 3, 1, "", "read_jcamp"], [236, 3, 1, "", "read_labspec"], [237, 3, 1, "", "read_mat"], [238, 3, 1, "", "read_matlab"], [239, 3, 1, "", "read_omnic"], [240, 3, 1, "", "read_opus"], [241, 3, 1, "", "read_quadera"], [242, 3, 1, "", "read_sdr"], [243, 3, 1, "", "read_soc"], [244, 3, 1, "", "read_spa"], [245, 3, 1, "", "read_spc"], [246, 3, 1, "", "read_spg"], [247, 3, 1, "", "read_srs"], [248, 3, 1, "", "read_topspin"], [249, 3, 1, "", "read_wdf"], [250, 3, 1, "", "read_wire"], [251, 3, 1, "", "read_zip"], [252, 3, 1, "", "remove_masks"], [253, 3, 1, "", "roll"], [254, 3, 1, "", "round"], [255, 3, 1, "", "rs"], [256, 3, 1, "", "run_all_scripts"], [257, 3, 1, "", "run_script"], [258, 3, 1, "", "savgol"], [259, 3, 1, "", "set_complex"], [260, 3, 1, "", "set_loglevel"], [261, 3, 1, "", "set_nmr_context"], [262, 3, 1, "", "show"], [263, 3, 1, "", "show_versions"], [264, 0, 1, "", "sigmoidmodel"], [265, 3, 1, "", "simpson"], [266, 3, 1, "", "sine"], [267, 3, 1, "", "sinm"], [268, 3, 1, "", "smooth"], [269, 3, 1, "", "snip"], [270, 3, 1, "", "sort"], [271, 3, 1, "", "sp"], [272, 3, 1, "", "squeeze"], [273, 3, 1, "", "stack"], [274, 3, 1, "", "std"], [275, 3, 1, "", "sum"], [276, 3, 1, "", "swapdims"], [277, 3, 1, "", "take"], [278, 3, 1, "", "to"], [279, 3, 1, "", "to_array"], [280, 3, 1, "", "to_base_units"], [281, 3, 1, "", "to_reduced_units"], [282, 3, 1, "", "to_xarray"], [283, 3, 1, "", "transpose"], [284, 3, 1, "", "trapezoid"], [285, 3, 1, "", "triang"], [286, 3, 1, "", "var"], [287, 0, 1, "", "voigtmodel"], [288, 3, 1, "", "warning_"], [289, 3, 1, "", "whittaker"], [290, 3, 1, "", "write"], [291, 3, 1, "", "write_csv"], [292, 3, 1, "", "write_excel"], [293, 3, 1, "", "write_jcamp"], [294, 3, 1, "", "write_mat"], [295, 3, 1, "", "write_matlab"], [296, 3, 1, "", "write_xls"], [297, 3, 1, "", "zeros"], [298, 3, 1, "", "zeros_like"], [299, 3, 1, "", "zf"], [300, 3, 1, "", "zf_auto"], [301, 3, 1, "", "zf_double"], [302, 3, 1, "", "zf_size"]], "spectrochempy.ActionMassKinetics": [[95, 1, 1, "", "A"], [95, 1, 1, "", "B"], [95, 2, 1, "", "fit_to_concentrations"], [95, 1, 1, "", "init_concentrations"], [95, 2, 1, "", "integrate"], [95, 1, 1, "", "n_reactions"], [95, 1, 1, "", "n_species"], [95, 1, 1, "", "species"]], "spectrochempy.Baseline": [[96, 1, 1, "", "X"], [96, 1, 1, "", "asymmetry"], [96, 1, 1, "", "baseline"], [96, 1, 1, "", "breakpoints"], [96, 1, 1, "", "config"], [96, 1, 1, "", "corrected"], [96, 2, 1, "", "fit"], [96, 1, 1, "", "include_limits"], [96, 1, 1, "", "lamb"], [96, 1, 1, "", "lls"], [96, 1, 1, "", "log"], [96, 1, 1, "", "max_iter"], [96, 1, 1, "", "model"], [96, 1, 1, "", "multivariate"], [96, 1, 1, "", "n_components"], [96, 1, 1, "", "name"], [96, 1, 1, "", "order"], [96, 2, 1, "", "parameters"], [96, 2, 1, "", "params"], [96, 2, 1, "", "plot"], [96, 1, 1, "", "ranges"], [96, 2, 1, "", "reset"], [96, 1, 1, "", "snip_width"], [96, 2, 1, "", "to_dict"], [96, 1, 1, "", "tol"], [96, 2, 1, "", "transform"], [96, 1, 1, "", "used_ranges"]], "spectrochempy.Coord": [[97, 2, 1, "", "amax"], [97, 2, 1, "", "amin"], [97, 2, 1, "", "arange"], [97, 2, 1, "", "around"], [97, 2, 1, "", "astype"], [97, 2, 1, "", "copy"], [97, 1, 1, "", "data"], [97, 1, 1, "", "dimensionless"], [97, 1, 1, "", "dtype"], [97, 2, 1, "", "fromfunction"], [97, 2, 1, "", "fromiter"], [97, 2, 1, "", "geomspace"], [97, 2, 1, "", "get_labels"], [97, 1, 1, "", "has_data"], [97, 1, 1, "", "has_defined_name"], [97, 1, 1, "", "has_units"], [97, 1, 1, "", "id"], [97, 1, 1, "", "is_empty"], [97, 1, 1, "", "is_float"], [97, 1, 1, "", "is_integer"], [97, 1, 1, "", "is_labeled"], [97, 2, 1, "", "is_units_compatible"], [97, 2, 1, "", "ito"], [97, 2, 1, "", "ito_base_units"], [97, 2, 1, "", "ito_reduced_units"], [97, 1, 1, "", "labels"], [97, 1, 1, "", "larmor"], [97, 1, 1, "", "laser_frequency"], [97, 1, 1, "", "limits"], [97, 1, 1, "", "linear"], [97, 2, 1, "", "linearize"], [97, 2, 1, "", "linspace"], [97, 2, 1, "", "loc2index"], [97, 2, 1, "", "logspace"], [97, 1, 1, "", "m"], [97, 1, 1, "", "magnitude"], [97, 2, 1, "", "max"], [97, 1, 1, "", "meta"], [97, 2, 1, "", "min"], [97, 1, 1, "", "name"], [97, 2, 1, "", "ptp"], [97, 1, 1, "", "reversed"], [97, 1, 1, "", "roi"], [97, 2, 1, "", "round"], [97, 2, 1, "", "round_"], [97, 2, 1, "", "set_laser_frequency"], [97, 1, 1, "", "shape"], [97, 1, 1, "", "show_datapoints"], [97, 1, 1, "", "sigdigits"], [97, 1, 1, "", "size"], [97, 1, 1, "", "spacing"], [97, 1, 1, "", "title"], [97, 2, 1, "", "to"], [97, 2, 1, "", "to_base_units"], [97, 2, 1, "", "to_reduced_units"], [97, 1, 1, "", "umasked_data"], [97, 1, 1, "", "unitless"], [97, 1, 1, "", "units"], [97, 1, 1, "", "value"], [97, 1, 1, "", "values"]], "spectrochempy.CoordSet": [[98, 1, 1, "", "available_names"], [98, 1, 1, "", "coords"], [98, 2, 1, "", "copy"], [98, 1, 1, "", "default"], [98, 1, 1, "", "has_defined_name"], [98, 1, 1, "", "id"], [98, 1, 1, "", "is_empty"], [98, 1, 1, "", "is_labeled"], [98, 1, 1, "", "is_same_dim"], [98, 2, 1, "", "keys"], [98, 1, 1, "", "labels"], [98, 1, 1, "", "names"], [98, 2, 1, "", "select"], [98, 2, 1, "", "set"], [98, 2, 1, "", "set_titles"], [98, 2, 1, "", "set_units"], [98, 1, 1, "", "size"], [98, 1, 1, "", "sizes"], [98, 1, 1, "", "titles"], [98, 2, 1, "", "to_dict"], [98, 1, 1, "", "units"], [98, 2, 1, "", "update"]], "spectrochempy.EFA": [[99, 1, 1, "", "X"], [99, 1, 1, "", "Y"], [99, 1, 1, "", "b_ev"], [99, 1, 1, "", "components"], [99, 1, 1, "", "config"], [99, 1, 1, "", "cutoff"], [99, 1, 1, "", "f_ev"], [99, 2, 1, "", "fit"], [99, 2, 1, "", "fit_transform"], [99, 2, 1, "", "get_components"], [99, 2, 1, "", "inverse_transform"], [99, 1, 1, "", "log"], [99, 1, 1, "", "n_components"], [99, 1, 1, "", "name"], [99, 2, 1, "", "parameters"], [99, 2, 1, "", "params"], [99, 2, 1, "", "plotmerit"], [99, 2, 1, "", "reconstruct"], [99, 2, 1, "", "reduce"], [99, 2, 1, "", "reset"], [99, 2, 1, "", "to_dict"], [99, 2, 1, "", "transform"]], "spectrochempy.FastICA": [[100, 1, 1, "", "A"], [100, 1, 1, "", "St"], [100, 1, 1, "", "X"], [100, 1, 1, "", "Y"], [100, 1, 1, "", "algorithm"], [100, 1, 1, "", "components"], [100, 1, 1, "", "config"], [100, 2, 1, "", "fit"], [100, 2, 1, "", "fit_transform"], [100, 1, 1, "", "fun"], [100, 1, 1, "", "fun_args"], [100, 2, 1, "", "get_components"], [100, 2, 1, "", "inverse_transform"], [100, 1, 1, "", "log"], [100, 1, 1, "", "max_iter"], [100, 1, 1, "", "mean"], [100, 1, 1, "", "mixing"], [100, 1, 1, "", "n_components"], [100, 1, 1, "", "n_iter"], [100, 1, 1, "", "name"], [100, 2, 1, "", "parameters"], [100, 2, 1, "", "params"], [100, 2, 1, "", "plotmerit"], [100, 1, 1, "", "random_state"], [100, 2, 1, "", "reconstruct"], [100, 2, 1, "", "reduce"], [100, 2, 1, "", "reset"], [100, 2, 1, "", "to_dict"], [100, 1, 1, "", "tol"], [100, 2, 1, "", "transform"], [100, 1, 1, "", "w_init"], [100, 1, 1, "", "whiten"], [100, 1, 1, "", "whiten_solver"], [100, 1, 1, "", "whitening"]], "spectrochempy.Filter": [[101, 1, 1, "", "config"], [101, 1, 1, "", "cval"], [101, 1, 1, "", "delta"], [101, 1, 1, "", "deriv"], [101, 1, 1, "", "lamb"], [101, 1, 1, "", "log"], [101, 1, 1, "", "method"], [101, 1, 1, "", "mode"], [101, 1, 1, "", "name"], [101, 1, 1, "", "order"], [101, 2, 1, "", "parameters"], [101, 2, 1, "", "params"], [101, 2, 1, "", "reset"], [101, 1, 1, "", "size"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "transform"]], "spectrochempy.IRIS": [[102, 1, 1, "", "X"], [102, 1, 1, "", "Y"], [102, 1, 1, "", "components"], [102, 1, 1, "", "config"], [102, 2, 1, "", "fit"], [102, 2, 1, "", "fit_transform"], [102, 2, 1, "", "get_components"], [102, 2, 1, "", "inverse_transform"], [102, 1, 1, "", "log"], [102, 1, 1, "", "n_components"], [102, 1, 1, "", "name"], [102, 2, 1, "", "parameters"], [102, 2, 1, "", "params"], [102, 2, 1, "", "plotdistribution"], [102, 2, 1, "", "plotlcurve"], [102, 2, 1, "", "plotmerit"], [102, 1, 1, "", "qpsolver"], [102, 2, 1, "", "reconstruct"], [102, 2, 1, "", "reduce"], [102, 1, 1, "", "reg_par"], [102, 2, 1, "", "reset"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "transform"]], "spectrochempy.LSTSQ": [[104, 1, 1, "", "X"], [104, 1, 1, "", "Y"], [104, 1, 1, "", "coef"], [104, 1, 1, "", "config"], [104, 1, 1, "", "description"], [104, 2, 1, "", "fit"], [104, 1, 1, "", "fit_intercept"], [104, 1, 1, "", "intercept"], [104, 1, 1, "", "log"], [104, 1, 1, "", "name"], [104, 2, 1, "", "parameters"], [104, 2, 1, "", "params"], [104, 1, 1, "", "positive"], [104, 2, 1, "", "predict"], [104, 2, 1, "", "reset"], [104, 2, 1, "", "score"], [104, 2, 1, "", "to_dict"]], "spectrochempy.MCRALS": [[105, 1, 1, "", "C"], [105, 1, 1, "", "C_constrained"], [105, 1, 1, "", "C_constrained_list"], [105, 1, 1, "", "C_ls_list"], [105, 1, 1, "", "S_soft"], [105, 1, 1, "", "St"], [105, 1, 1, "", "St_constrained_list"], [105, 1, 1, "", "St_ls"], [105, 1, 1, "", "St_ls_list"], [105, 1, 1, "", "St_unconstrained"], [105, 1, 1, "", "X"], [105, 1, 1, "", "Y"], [105, 1, 1, "", "argsGetConc"], [105, 1, 1, "", "argsGetSpec"], [105, 1, 1, "", "closureConc"], [105, 1, 1, "", "closureMethod"], [105, 1, 1, "", "closureTarget"], [105, 1, 1, "", "components"], [105, 1, 1, "", "config"], [105, 1, 1, "", "extraOutputGetConc"], [105, 1, 1, "", "extraOutputGetSpec"], [105, 2, 1, "", "fit"], [105, 2, 1, "", "fit_transform"], [105, 1, 1, "", "getC_to_C_idx"], [105, 1, 1, "", "getConc"], [105, 1, 1, "", "getSpec"], [105, 1, 1, "", "getSt_to_St_idx"], [105, 2, 1, "", "get_components"], [105, 1, 1, "", "hardConc"], [105, 1, 1, "", "hardSpec"], [105, 2, 1, "", "inverse_transform"], [105, 1, 1, "", "kwargsGetConc"], [105, 1, 1, "", "kwargsGetSpec"], [105, 1, 1, "", "log"], [105, 1, 1, "", "max_iter"], [105, 1, 1, "", "maxdiv"], [105, 1, 1, "", "monoDecConc"], [105, 1, 1, "", "monoDecTol"], [105, 1, 1, "", "monoIncConc"], [105, 1, 1, "", "monoIncTol"], [105, 1, 1, "", "n_components"], [105, 1, 1, "", "name"], [105, 1, 1, "", "nonnegConc"], [105, 1, 1, "", "nonnegSpec"], [105, 1, 1, "", "normSpec"], [105, 2, 1, "", "parameters"], [105, 2, 1, "", "params"], [105, 2, 1, "", "plotmerit"], [105, 2, 1, "", "reconstruct"], [105, 2, 1, "", "reduce"], [105, 2, 1, "", "reset"], [105, 1, 1, "", "solverConc"], [105, 1, 1, "", "solverSpec"], [105, 1, 1, "", "storeIterations"], [105, 2, 1, "", "to_dict"], [105, 1, 1, "", "tol"], [105, 2, 1, "", "transform"], [105, 1, 1, "", "unimodConc"], [105, 1, 1, "", "unimodConcMod"], [105, 1, 1, "", "unimodConcTol"], [105, 1, 1, "", "unimodSpec"], [105, 1, 1, "", "unimodSpecMod"], [105, 1, 1, "", "unimodSpecTol"]], "spectrochempy.NDDataset": [[106, 1, 1, "", "II"], [106, 1, 1, "", "IR"], [106, 1, 1, "", "RI"], [106, 1, 1, "", "RR"], [106, 1, 1, "", "T"], [106, 2, 1, "", "abs"], [106, 2, 1, "", "absolute"], [106, 1, 1, "", "acquisition_date"], [106, 2, 1, "", "add_coordset"], [106, 2, 1, "", "all"], [106, 2, 1, "", "amax"], [106, 2, 1, "", "amin"], [106, 2, 1, "", "any"], [106, 2, 1, "", "arange"], [106, 2, 1, "", "argmax"], [106, 2, 1, "", "argmin"], [106, 2, 1, "", "around"], [106, 2, 1, "", "asfortranarray"], [106, 2, 1, "", "astype"], [106, 2, 1, "", "atleast_2d"], [106, 1, 1, "", "author"], [106, 2, 1, "", "average"], [106, 1, 1, "", "ax"], [106, 1, 1, "", "axT"], [106, 1, 1, "", "axec"], [106, 1, 1, "", "axecT"], [106, 1, 1, "", "axex"], [106, 1, 1, "", "axey"], [106, 2, 1, "", "clip"], [106, 2, 1, "", "close_figure"], [106, 1, 1, "", "comment"], [106, 2, 1, "", "component"], [106, 2, 1, "", "conj"], [106, 2, 1, "", "conjugate"], [106, 2, 1, "", "coord"], [106, 2, 1, "", "coordmax"], [106, 2, 1, "", "coordmin"], [106, 1, 1, "", "coordnames"], [106, 1, 1, "", "coordset"], [106, 1, 1, "", "coordtitles"], [106, 1, 1, "", "coordunits"], [106, 2, 1, "", "copy"], [106, 1, 1, "", "created"], [106, 2, 1, "", "cumsum"], [106, 1, 1, "", "data"], [106, 2, 1, "", "delete_coordset"], [106, 1, 1, "", "description"], [106, 2, 1, "", "diag"], [106, 2, 1, "", "diagonal"], [106, 1, 1, "", "dimensionless"], [106, 1, 1, "", "dims"], [106, 1, 1, "", "directory"], [106, 1, 1, "", "divider"], [106, 1, 1, "", "dtype"], [106, 2, 1, "", "dump"], [106, 2, 1, "", "empty"], [106, 2, 1, "", "empty_like"], [106, 2, 1, "", "eye"], [106, 1, 1, "", "fig"], [106, 1, 1, "", "fignum"], [106, 1, 1, "", "filename"], [106, 1, 1, "", "filetype"], [106, 2, 1, "", "fromfunction"], [106, 2, 1, "", "fromiter"], [106, 2, 1, "", "full"], [106, 2, 1, "", "full_like"], [106, 2, 1, "", "geomspace"], [106, 2, 1, "", "get_axis"], [106, 2, 1, "", "get_labels"], [106, 1, 1, "", "has_complex_dims"], [106, 1, 1, "", "has_data"], [106, 1, 1, "", "has_defined_name"], [106, 1, 1, "", "has_units"], [106, 1, 1, "", "history"], [106, 1, 1, "", "id"], [106, 2, 1, "", "identity"], [106, 1, 1, "", "imag"], [106, 1, 1, "", "is_1d"], [106, 1, 1, "", "is_complex"], [106, 1, 1, "", "is_empty"], [106, 1, 1, "", "is_float"], [106, 1, 1, "", "is_integer"], [106, 1, 1, "", "is_interleaved"], [106, 1, 1, "", "is_labeled"], [106, 1, 1, "", "is_masked"], [106, 1, 1, "", "is_quaternion"], [106, 2, 1, "", "is_units_compatible"], [106, 2, 1, "", "ito"], [106, 2, 1, "", "ito_base_units"], [106, 2, 1, "", "ito_reduced_units"], [106, 1, 1, "", "labels"], [106, 1, 1, "", "limits"], [106, 2, 1, "", "linspace"], [106, 2, 1, "", "load"], [106, 2, 1, "", "loads"], [106, 1, 1, "", "local_timezone"], [106, 2, 1, "", "logspace"], [106, 1, 1, "", "m"], [106, 1, 1, "", "magnitude"], [106, 1, 1, "", "mask"], [106, 1, 1, "", "masked_data"], [106, 2, 1, "", "max"], [106, 2, 1, "", "mean"], [106, 1, 1, "", "meta"], [106, 2, 1, "", "min"], [106, 1, 1, "", "modeldata"], [106, 1, 1, "", "modified"], [106, 1, 1, "", "name"], [106, 1, 1, "", "ndaxes"], [106, 1, 1, "", "ndim"], [106, 2, 1, "", "ones"], [106, 2, 1, "", "ones_like"], [106, 1, 1, "", "origin"], [106, 1, 1, "", "parent"], [106, 2, 1, "", "pipe"], [106, 2, 1, "", "plot"], [106, 2, 1, "", "ptp"], [106, 2, 1, "", "random"], [106, 1, 1, "", "real"], [106, 2, 1, "", "remove_masks"], [106, 1, 1, "", "roi"], [106, 2, 1, "", "round"], [106, 2, 1, "", "round_"], [106, 2, 1, "", "save"], [106, 2, 1, "", "save_as"], [106, 2, 1, "", "set_complex"], [106, 2, 1, "", "set_coordset"], [106, 2, 1, "", "set_coordtitles"], [106, 2, 1, "", "set_coordunits"], [106, 2, 1, "", "set_hypercomplex"], [106, 2, 1, "", "set_quaternion"], [106, 1, 1, "", "shape"], [106, 1, 1, "", "size"], [106, 2, 1, "", "sort"], [106, 2, 1, "", "squeeze"], [106, 2, 1, "", "std"], [106, 1, 1, "", "suffix"], [106, 2, 1, "", "sum"], [106, 2, 1, "", "swapaxes"], [106, 2, 1, "", "swapdims"], [106, 2, 1, "", "take"], [106, 1, 1, "", "timezone"], [106, 1, 1, "", "title"], [106, 2, 1, "", "to"], [106, 2, 1, "", "to_array"], [106, 2, 1, "", "to_base_units"], [106, 2, 1, "", "to_reduced_units"], [106, 2, 1, "", "to_xarray"], [106, 2, 1, "", "transpose"], [106, 1, 1, "", "umasked_data"], [106, 1, 1, "", "unitless"], [106, 1, 1, "", "units"], [106, 1, 1, "", "value"], [106, 1, 1, "", "values"], [106, 2, 1, "", "var"], [106, 2, 1, "", "zeros"], [106, 2, 1, "", "zeros_like"]], "spectrochempy.NMF": [[109, 1, 1, "", "X"], [109, 1, 1, "", "Y"], [109, 1, 1, "", "alpha_H"], [109, 1, 1, "", "alpha_W"], [109, 1, 1, "", "beta_loss"], [109, 1, 1, "", "components"], [109, 1, 1, "", "config"], [109, 2, 1, "", "fit"], [109, 2, 1, "", "fit_transform"], [109, 2, 1, "", "get_components"], [109, 1, 1, "", "init"], [109, 2, 1, "", "inverse_transform"], [109, 1, 1, "", "l1_ratio"], [109, 1, 1, "", "log"], [109, 1, 1, "", "max_iter"], [109, 1, 1, "", "n_components"], [109, 1, 1, "", "name"], [109, 2, 1, "", "parameters"], [109, 2, 1, "", "params"], [109, 2, 1, "", "plotmerit"], [109, 1, 1, "", "random_state"], [109, 2, 1, "", "reconstruct"], [109, 2, 1, "", "reduce"], [109, 2, 1, "", "reset"], [109, 1, 1, "", "shuffle"], [109, 1, 1, "", "solver"], [109, 2, 1, "", "to_dict"], [109, 1, 1, "", "tol"], [109, 2, 1, "", "transform"]], "spectrochempy.NNLS": [[110, 1, 1, "", "X"], [110, 1, 1, "", "Y"], [110, 1, 1, "", "coef"], [110, 1, 1, "", "config"], [110, 1, 1, "", "description"], [110, 2, 1, "", "fit"], [110, 1, 1, "", "fit_intercept"], [110, 1, 1, "", "intercept"], [110, 1, 1, "", "log"], [110, 1, 1, "", "name"], [110, 2, 1, "", "parameters"], [110, 2, 1, "", "params"], [110, 1, 1, "", "positive"], [110, 2, 1, "", "predict"], [110, 2, 1, "", "reset"], [110, 2, 1, "", "score"], [110, 2, 1, "", "to_dict"]], "spectrochempy.Optimize": [[111, 1, 1, "", "X"], [111, 1, 1, "", "Y"], [111, 1, 1, "", "amplitude_mode"], [111, 1, 1, "", "autoampl"], [111, 1, 1, "", "autobase"], [111, 1, 1, "", "callback_every"], [111, 1, 1, "", "components"], [111, 1, 1, "", "config"], [111, 1, 1, "", "constraints"], [111, 1, 1, "", "dry"], [111, 2, 1, "", "fit"], [111, 2, 1, "", "fit_transform"], [111, 1, 1, "", "fp"], [111, 2, 1, "", "get_components"], [111, 2, 1, "", "inverse_transform"], [111, 1, 1, "", "log"], [111, 1, 1, "", "max_fun_calls"], [111, 1, 1, "", "max_iter"], [111, 1, 1, "", "method"], [111, 1, 1, "", "modeldata"], [111, 1, 1, "", "n_components"], [111, 1, 1, "", "name"], [111, 2, 1, "", "parameters"], [111, 2, 1, "", "params"], [111, 2, 1, "", "plotmerit"], [111, 2, 1, "", "predict"], [111, 2, 1, "", "reconstruct"], [111, 2, 1, "", "reduce"], [111, 2, 1, "", "reset"], [111, 1, 1, "", "script"], [111, 2, 1, "", "to_dict"], [111, 2, 1, "", "transform"], [111, 1, 1, "", "usermodels"]], "spectrochempy.PCA": [[112, 1, 1, "", "X"], [112, 1, 1, "", "Y"], [112, 1, 1, "", "components"], [112, 1, 1, "", "config"], [112, 2, 1, "", "fit"], [112, 2, 1, "", "fit_transform"], [112, 2, 1, "", "get_components"], [112, 2, 1, "", "inverse_transform"], [112, 1, 1, "", "iterated_power"], [112, 1, 1, "", "loadings"], [112, 1, 1, "", "log"], [112, 1, 1, "", "n_components"], [112, 1, 1, "", "n_oversamples"], [112, 1, 1, "", "name"], [112, 2, 1, "", "parameters"], [112, 2, 1, "", "params"], [112, 2, 1, "", "plotmerit"], [112, 1, 1, "", "power_iteration_normalizer"], [112, 2, 1, "", "printev"], [112, 1, 1, "", "random_state"], [112, 2, 1, "", "reconstruct"], [112, 2, 1, "", "reduce"], [112, 2, 1, "", "reset"], [112, 1, 1, "", "scaled"], [112, 2, 1, "", "scoreplot"], [112, 1, 1, "", "scores"], [112, 2, 1, "", "screeplot"], [112, 1, 1, "", "standardized"], [112, 1, 1, "", "svd_solver"], [112, 2, 1, "", "to_dict"], [112, 1, 1, "", "tol"], [112, 2, 1, "", "transform"], [112, 1, 1, "", "whiten"]], "spectrochempy.PFR": [[113, 2, 1, "", "fit_to_gas_concentrations"]], "spectrochempy.PLSRegression": [[114, 1, 1, "", "X"], [114, 1, 1, "", "Y"], [114, 1, 1, "", "components"], [114, 1, 1, "", "config"], [114, 2, 1, "", "fit"], [114, 2, 1, "", "fit_transform"], [114, 2, 1, "", "get_components"], [114, 2, 1, "", "inverse_transform"], [114, 1, 1, "", "log"], [114, 1, 1, "", "max_iter"], [114, 1, 1, "", "n_components"], [114, 1, 1, "", "name"], [114, 2, 1, "", "parameters"], [114, 2, 1, "", "params"], [114, 2, 1, "", "parityplot"], [114, 2, 1, "", "plotmerit"], [114, 2, 1, "", "predict"], [114, 2, 1, "", "reconstruct"], [114, 2, 1, "", "reduce"], [114, 2, 1, "", "reset"], [114, 1, 1, "", "scale"], [114, 2, 1, "", "score"], [114, 2, 1, "", "to_dict"], [114, 1, 1, "", "tol"], [114, 2, 1, "", "transform"]], "spectrochempy.Project": [[115, 2, 1, "", "add_dataset"], [115, 2, 1, "", "add_datasets"], [115, 2, 1, "", "add_project"], [115, 2, 1, "", "add_projects"], [115, 2, 1, "", "add_script"], [115, 2, 1, "", "add_scripts"], [115, 1, 1, "", "allitems"], [115, 1, 1, "", "allnames"], [115, 2, 1, "", "copy"], [115, 1, 1, "", "datasets"], [115, 1, 1, "", "datasets_names"], [115, 2, 1, "", "dump"], [115, 1, 1, "", "filename"], [115, 1, 1, "", "filetype"], [115, 1, 1, "", "id"], [115, 2, 1, "", "load"], [115, 2, 1, "", "loads"], [115, 1, 1, "", "meta"], [115, 1, 1, "", "name"], [115, 1, 1, "", "parent"], [115, 1, 1, "", "projects"], [115, 1, 1, "", "projects_names"], [115, 2, 1, "", "remove_all_dataset"], [115, 2, 1, "", "remove_all_project"], [115, 2, 1, "", "remove_dataset"], [115, 2, 1, "", "remove_project"], [115, 2, 1, "", "save"], [115, 2, 1, "", "save_as"], [115, 1, 1, "", "scripts"], [115, 1, 1, "", "scripts_names"], [115, 1, 1, "", "suffix"]], "spectrochempy.Quantity": [[116, 2, 1, "", "check"], [116, 2, 1, "", "compute"], [116, 1, 1, "", "default_format"], [116, 1, 1, "", "dimensionality"], [116, 1, 1, "", "dimensionless"], [116, 2, 1, "", "dot"], [116, 2, 1, "", "from_list"], [116, 2, 1, "", "from_sequence"], [116, 2, 1, "", "is_compatible_with"], [116, 2, 1, "", "ito"], [116, 2, 1, "", "ito_base_units"], [116, 2, 1, "", "ito_preferred"], [116, 2, 1, "", "ito_reduced_units"], [116, 2, 1, "", "ito_root_units"], [116, 1, 1, "", "m"], [116, 2, 1, "", "m_as"], [116, 1, 1, "", "magnitude"], [116, 2, 1, "", "persist"], [116, 2, 1, "", "prod"], [116, 2, 1, "", "to"], [116, 2, 1, "", "to_base_units"], [116, 2, 1, "", "to_compact"], [116, 2, 1, "", "to_preferred"], [116, 2, 1, "", "to_reduced_units"], [116, 2, 1, "", "to_root_units"], [116, 1, 1, "", "u"], [116, 2, 1, "", "unit_items"], [116, 1, 1, "", "unitless"], [116, 1, 1, "", "units"], [116, 2, 1, "", "visualize"]], "spectrochempy.SIMPLISMA": [[117, 1, 1, "", "C"], [117, 1, 1, "", "Pt"], [117, 1, 1, "", "St"], [117, 1, 1, "", "X"], [117, 1, 1, "", "Y"], [117, 1, 1, "", "components"], [117, 1, 1, "", "config"], [117, 2, 1, "", "fit"], [117, 2, 1, "", "fit_transform"], [117, 2, 1, "", "get_components"], [117, 1, 1, "", "interactive"], [117, 2, 1, "", "inverse_transform"], [117, 1, 1, "", "log"], [117, 1, 1, "", "n_components"], [117, 1, 1, "", "name"], [117, 1, 1, "", "noise"], [117, 2, 1, "", "parameters"], [117, 2, 1, "", "params"], [117, 2, 1, "", "plotmerit"], [117, 2, 1, "", "reconstruct"], [117, 2, 1, "", "reduce"], [117, 2, 1, "", "reset"], [117, 1, 1, "", "s"], [117, 2, 1, "", "to_dict"], [117, 1, 1, "", "tol"], [117, 2, 1, "", "transform"]], "spectrochempy.SVD": [[118, 1, 1, "", "U"], [118, 1, 1, "", "VT"], [118, 1, 1, "", "X"], [118, 1, 1, "", "Y"], [118, 1, 1, "", "components"], [118, 1, 1, "", "compute_uv"], [118, 1, 1, "", "config"], [118, 1, 1, "", "cumulative_explained_variance"], [118, 1, 1, "", "ev"], [118, 1, 1, "", "ev_cum"], [118, 1, 1, "", "ev_ratio"], [118, 1, 1, "", "explained_variance"], [118, 1, 1, "", "explained_variance_ratio"], [118, 2, 1, "", "fit"], [118, 2, 1, "", "fit_transform"], [118, 1, 1, "", "full_matrices"], [118, 2, 1, "", "get_components"], [118, 2, 1, "", "inverse_transform"], [118, 1, 1, "", "log"], [118, 1, 1, "", "n_components"], [118, 1, 1, "", "name"], [118, 2, 1, "", "parameters"], [118, 2, 1, "", "params"], [118, 2, 1, "", "plotmerit"], [118, 2, 1, "", "reconstruct"], [118, 2, 1, "", "reduce"], [118, 2, 1, "", "reset"], [118, 1, 1, "", "s"], [118, 1, 1, "", "singular_values"], [118, 1, 1, "", "sv"], [118, 2, 1, "", "to_dict"], [118, 2, 1, "", "transform"]], "spectrochempy.Unit": [[120, 1, 1, "", "default_format"], [120, 1, 1, "", "dimensionality"], [120, 1, 1, "", "dimensionless"], [120, 2, 1, "", "from_"], [120, 2, 1, "", "is_compatible_with"], [120, 2, 1, "", "m_from"]], "spectrochempy.asymmetricvoigtmodel": [[133, 1, 1, "", "args"], [133, 1, 1, "", "script"], [133, 1, 1, "", "type"]], "spectrochempy.gaussianmodel": [[169, 1, 1, "", "args"], [169, 1, 1, "", "script"], [169, 1, 1, "", "type"]], "spectrochempy.lorentzianmodel": [[190, 1, 1, "", "args"], [190, 1, 1, "", "script"], [190, 1, 1, "", "type"]], "spectrochempy.polynomialbaseline": [[224, 1, 1, "", "args"], [224, 1, 1, "", "script"], [224, 1, 1, "", "type"]], "spectrochempy.sigmoidmodel": [[264, 1, 1, "", "args"], [264, 1, 1, "", "script"], [264, 1, 1, "", "type"]], "spectrochempy.voigtmodel": [[287, 1, 1, "", "args"], [287, 1, 1, "", "script"], [287, 1, 1, "", "type"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:function"}, "terms": {"": [2, 4, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 36, 37, 38, 39, 42, 44, 46, 51, 54, 67, 70, 74, 75, 76, 79, 87, 88, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 128, 134, 140, 153, 155, 157, 185, 187, 204, 205, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 265, 278, 281, 284, 298, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342], "0": [0, 2, 6, 8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 74, 75, 76, 77, 79, 80, 81, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 128, 131, 132, 133, 134, 135, 139, 140, 141, 142, 145, 151, 152, 153, 154, 156, 160, 162, 163, 164, 167, 168, 169, 170, 174, 175, 176, 178, 181, 182, 189, 190, 191, 196, 207, 208, 216, 224, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 258, 264, 268, 271, 274, 286, 287, 289, 291, 297, 298, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "00": [18, 22, 23, 25, 28, 31, 32, 34, 37, 40, 42, 44, 46, 48, 52, 54, 55, 57, 60, 61, 63, 64, 68, 71, 74, 75, 76, 77, 80, 81, 90, 93, 306, 309, 310, 312, 315, 317, 318, 319, 323, 325, 327, 330, 333, 336, 337, 340], "000": [34, 57, 81, 261, 315, 318], "0000": [1, 30, 44, 229, 240, 307, 319], "000000": 20, "0001": [1, 44, 97, 100, 106, 109, 128, 229, 240, 319], "0001051": [315, 318], "000107": [315, 318], "000116": [42, 318, 337], "00011600926518440247": 318, "00012439075792816675": 21, "0001341": 309, "0001386702060699463": 318, "0001387": [42, 318, 337], "00015827733519294864": 21, "0001980997622013092": 318, "0001981": [42, 318, 337], "0001982580479040266": 21, "0002": [1, 44, 229, 240, 319], "0002325": [44, 319], "0002463663859383888": 21, "0002479": [44, 319], "0002631": [309, 310], "0003": [44, 319], "000302683562040329": 318, "0003027": [42, 317, 318, 337], "0003032579084426579": 21, "0003036": 330, "0003089": [42, 318, 337], "0003089122474193573": 318, "0003178": [309, 310], "0003442": [44, 319], "0003661": [315, 318], "0003685": [44, 319], "0003702011951281": 93, "000370203321558236": 93, "0003702884428734": 93, "0003744959831237793": 318, "0003745": [42, 317, 318, 337], "00037487235479894386": 21, "0004219": [44, 319], "0004229": [44, 319], "000427": 309, "000428": 309, "000429": 309, "000433": [19, 309], "000442": [19, 309], "000451": [44, 319], "000459": [44, 319], "00046362862409554613": 21, "00047": 93, "000489637645652958": 21, "0004904596528538901": 21, "0004912871202792837": 21, "0004921226355842484": 21, "0004929673596844295": 21, "0004938210437306795": 21, "000494690121845972": 21, "0004955753197880821": 21, "0004964417296739801": 21, "000497314731819021": 21, "0004981962000745383": 21, "0004990872395197678": 21, "0004999974962488187": 21, "0005009224423798505": 21, "0005018650428480294": 21, "0005028222129277328": 21, "0005037958933648721": 21, "0005047767175615255": 21, "0005057740763558282": 21, "0005067909112021609": 21, "0005078236610580078": 21, "0005088753613792077": 21, "000509944731506586": 21, "0005110364330891719": 21, "0005121515266402974": 21, "0005132891688186557": 21, "0005144616554314371": 21, "0005156608680271171": 21, "0005168846752739557": 21, "0005181813428113679": 21, "0005195265168842477": 21, "0005208942964235441": 21, "0005221": [42, 318, 337], "0005221068859100342": 318, "0005222955570666991": 21, "0005237318107590588": 21, "0005251860718894168": 21, "000526654947415799": 21, "0005281469649347933": 21, "0005296374901746657": 21, "0005311700256181635": 21, "0005327134944354479": 21, "0005342566446344994": 21, "000535862885081083": 21, "0005376381718607085": 21, "0005396329582219312": 21, "0005416726314724945": 21, "000543757085396764": 21, "0005458976082892629": 21, "0005480875748008554": 21, "0005503237863509411": 21, "0005526263090688127": 21, "0005549930907510911": 21, "000557420810271836": 21, "0005599281471044251": 21, "0005624480584368722": 21, "0005650176785171141": 21, "0005654506385326385": 318, "0005655": [42, 318, 337], "000567605378718049": 21, "0005699768662452698": 318, "00057": [42, 318, 337], "0005702968600985285": 21, "0005706218431926758": 21, "0005730546137311137": 21, "0005759087479599968": 21, "0005778": 18, "0005788624242480877": 21, "0005819472966807058": 21, "0005851626197890726": 21, "000588473510528622": 21, "0005919356405963339": 21, "0005955122189369419": 21, "000599225577188929": 21, "0006030938520872095": 21, "0006071251736134226": 21, "00061": 93, "0006113918151774124": 21, "0006161518203756192": 21, "0006215236000710331": 21, "0006273957420689867": 21, "000630699098110199": 318, "0006307": [42, 318, 337], "0006335488650772817": 21, "0006399762615476608": 21, "0006466641120994642": 21, "0006536091296351987": 21, "0006606893398230879": 21, "0006679795936491391": 21, "0006754181243922751": 21, "000682": [309, 310], "0006830298779799747": 21, "0006907733550824898": 21, "0006987637535247346": 21, "0006991377766199918": 21, "0007069372346703881": 21, "0007125": [309, 310], "0007151920055393904": 21, "0007235915691682489": 21, "0007268": 319, "0007322966170542883": 21, "0007412456856970432": 21, "0007504652538892443": 21, "0007597179067852469": 21, "0007683": 18, "0007691414390017031": 21, "0007791326607916331": 21, "0007893350738951565": 21, "0007904": 74, "0007997522484736288": 21, "000803191214799881": 318, "0008032": [42, 317, 318, 337], "0008104269807764973": 21, "0008208847158801456": 21, "0008315536804370846": 21, "0008356980979442596": 318, "0008357": [42, 318, 337], "0008428706003289147": 21, "000845": 309, "0008543517499941812": 21, "0008573236692761598": 21, "0008660457470919664": 21, "0008780499311872886": 21, "0008783": 319, "0008902182357105545": 21, "000901587500637837": 21, "0009140262172599847": 21, "000926659916814504": 21, "0009396363331387711": 21, "0009545966012010328": 21, "0009699922960875339": 21, "000975": 118, "0009841318528815818": 21, "0009988201809297962": 21, "001": [96, 132, 309, 311, 331, 383], "001015079232123759": 21, "001023": 319, "001031824410260922": 21, "001043867511137712": 21, "001049193369470272": 21, "0010661363692303987": 21, "001083277704027713": 21, "001089": 118, "0011006754884538763": 21, "0011199124929361396": 21, "001121": [42, 318, 337], "001121222972869873": 318, "0011389415923630161": 21, "0011582609085416039": 21, "0011698119342327118": 318, "00117": [42, 74, 318, 337], "0011775622624518975": 21, "001199211654449924": 21, "00121901146995483": 21, "001236365872739914": 21, "0012488601974043954": 21, "0012569657401120338": 21, "0012813357494811627": 21, "0013065923988232818": 21, "001332": 18, "0013328464824002156": 21, "001341": [309, 310], "0013601582805157098": 21, "0013907597658086844": 21, "0014262081321617843": 21, "001462927201215883": 21, "0014925716272856744": 21, "0015014385431315004": 21, "001535": 327, "0015418960309270618": 21, "001583917332970072": 21, "0016274950351469783": 21, "0016731692686997885": 21, "001699": 309, "0017204657491192927": 21, "001769274901286519": 21, "0017697484695161113": 21, "00177": 18, "001819567820069909": 21, "0018713261632057878": 21, "001875": 74, "001924327019435828": 21, "00198066435935054": 21, "002": [63, 331], "002012": 74, "00204366780524783": 21, "002085162862784004": 21, "002108409449092608": 21, "0021751169925785592": 21, "002243736743480962": 21, "002252": [315, 318], "002262": 22, "0023133039094785242": 21, "0023842026907913852": 21, "002386505694046995": 21, "0024587403634379955": 21, "002508": 74, "002535164470212078": 21, "0026129548289078076": 21, "002692711668737097": 21, "002714": 74, "0027272537391468165": 21, "0027738912186802264": 21, "002804": 309, "002805": [19, 309], "002807": [19, 309], "002810": 20, "002813": 20, "002856115850045608": 21, "002867": 20, "002907": [315, 318], "002916": [315, 318], "0029389646390338233": 21, "002962": [315, 318], "002967": [315, 318], "003": [18, 37, 76, 93, 315], "00300": [37, 90], "0030221674035503005": 21, "003032319034755907": 21, "00310494702933336": 21, "003153": 74, "003194164813272427": 21, "0032635274973252nl": 319, "0032925205579803934": 21, "003312": 327, "0033965138303583475": 21, "003414": 327, "0034289628116609128": 21, "003514710166154382": 21, "003521": 74, "003604": 309, "003612": 74, "003637": 74, "0036375148218630127": 21, "003700": 309, "003701": [42, 315], "0037443026036688854": 21, "0037652602700427385": 21, "003818": [42, 315], "0038914653519268568": 21, "003937884834645nl": 319, "003973": 309, "003torr_lt_aft": [18, 37, 42, 317, 318, 337], "004": [18, 37], "00400": [37, 90], "004007": 20, "0040127559281387054": 21, "004053115751123407": 21, "004092": 74, "0041339281330161825": 21, "004219": 74, "004267124138925818": 21, "004296": [309, 310], "004302": 74, "004393717477174926": 21, "004421": 309, "004490757479656537": 21, "004527642308383124": 21, "004657040705272675": 21, "004778610916794641": 21, "004867": 76, "004889401944567315": 21, "004torr_lt_aft": [18, 37, 42, 318, 337], "005": 315, "005004969613317336": 21, "00504": 315, "00511026993184542": 21, "005116": 315, "00512439463303009": 21, "00516": 327, "00520328493961174": 21, "005205": 309, "005288054442074974": 21, "005375194673451822": 21, "005460760674075924": 21, "005529135183167037": 21, "005587736630048417": 21, "005607": 74, "005667827078790904": 21, "005700606624644822": 21, "005733332889918983": 21, "005756947971777939": 21, "005772367658829867": 21, "0058029180285338895": 21, "005861": 20, "005863": 20, "005868357891308793": 21, "005886": 20, "0060007778063394255": 21, "006057238974457805": 21, "006191": 74, "006191115125281956": 21, "006238616114828166": 21, "006457414370354953": 21, "006515": 327, "006566": 327, "006776": 23, "006796": 315, "006849": 74, "006888": 315, "006957471610159129": 21, "007": 93, "007001": [309, 310], "007104": 74, "007194": 309, "0072": 24, "007200": 328, "007262": [106, 286], "007299": [106, 286], "0072b2": 328, "007331": [309, 310], "007524": [315, 318], "007770502529914507": 21, "007919": 74, "008016534827385407": 21, "008074354619042486unknown": 319, "008121": [309, 310], "008682": 309, "008843": 74, "009": [18, 93], "00900": [37, 90], "009201": 74, "009261179153190162": 21, "009276": 75, "009290070393253367unknown": 319, "009306": [315, 318], "0097": 1, "009e73": 328, "01": [18, 25, 28, 32, 37, 40, 42, 46, 52, 60, 63, 79, 306, 307, 309, 310, 311, 315, 318, 319, 325, 337, 342], "010": 74, "0100": 24, "0105": 93, "010676123451467932": 21, "01094": 327, "01139": [309, 310], "011732197722809782": 21, "01183": 75, "012": [42, 90, 312, 340], "01242": 319, "01243": 319, "01244": [42, 315], "01251": [42, 315], "01261": 319, "01285": [309, 310], "0129": 76, "012e": 309, "013": [1, 42, 90, 312, 340], "014": 18, "01400": [37, 90], "01419": 315, "01425": [75, 315], "014282427091627227": 21, "0144": [309, 310], "0147": 30, "015": 74, "01501": 76, "01525": [309, 310], "01526": [42, 315], "01538": [42, 315], "016": [315, 318], "01617": [309, 310], "016289564836607283": 21, "0168": 93, "0168583x88900638": 93, "0173nl": 319, "018": [93, 305, 311], "01868": 74, "018705054318854594": 21, "01885": 74, "01969": [309, 310], "02": [18, 23, 25, 37, 42, 44, 48, 52, 68, 90, 93, 305, 306, 311, 312, 315, 317, 318, 319, 325, 337, 338, 340, 342], "02067": 327, "020846": 20, "021": 18, "02100": [37, 90], "02111": 74, "02147": [42, 315], "02187": 315, "02192": 315, "02195": [42, 315], "021torr_lt_aft": 337, "022012": 309, "02206": 315, "02207": 315, "02236": [42, 315], "02253": 319, "02255": 319, "0227": 315, "02277": 315, "0228": 315, "02284": [42, 315], "02295": 315, "02304": 325, "023155912689776785": 21, "024": [93, 305], "02400007799856874": 21, "02474": [315, 318], "025004": 93, "02556": 74, "026": 18, "02600": [37, 90], "02603": 76, "0263": 24, "02654": 327, "02663": [315, 318], "02719": 74, "02791": 22, "02799": 75, "028": 74, "02807": 315, "02814": [315, 318], "0282": 327, "02892": 315, "02899": [315, 318], "02949": 327, "03": [18, 22, 23, 25, 37, 40, 42, 44, 46, 54, 60, 63, 74, 75, 76, 77, 90, 93, 306, 309, 310, 312, 314, 315, 317, 318, 319, 323, 325, 327, 330, 333, 336, 337, 340, 342], "03013": [42, 315], "030324671559647413": 21, "03049": 75, "03068": 327, "03083": 75, "03099": [42, 315], "03215": 315, "03262": 327, "03299": 315, "033": [42, 90, 312, 318, 337, 340], "03438": 75, "03477774452872511": 21, "036": 18, "03600": [37, 90], "03636": [42, 315], "037": [42, 90, 312, 340], "03724": [42, 315], "03776270101072333": 21, "03804": 23, "03j": 327, "04": [18, 23, 38, 42, 46, 48, 60, 63, 74, 76, 80, 90, 118, 306, 312, 325, 327, 330, 333, 335, 340, 342], "04044": 75, "04077817": [93, 305], "04438": [42, 315], "044452701": 93, "04449": [42, 315], "0446": 22, "04476": 74, "04565": 327, "04616": 75, "04635": 315, "04639710696895008": 21, "0465": 315, "048763": [19, 309], "04993": 315, "04_mo_al2o3_calc_0": [18, 37, 42, 317, 318, 337], "04_mo_al2o3_calc_1": [18, 37, 42, 318, 337], "04e": 327, "05": [2, 20, 21, 23, 42, 46, 48, 96, 113, 132, 306, 307, 309, 311, 315, 317, 318, 325, 328, 330, 337, 342], "05009": 315, "05061": 311, "05069": 315, "05078": 18, "051": 18, "05100": [37, 90], "05134": 327, "05144": [42, 315], "05223": 315, "05227": 18, "05238": 315, "0524": [42, 315], "05242": 75, "05273": [60, 327, 333], "0527j": 327, "05311": [42, 315], "05339": 75, "05341": 75, "05388": 315, "053997039794922scanner": 319, "05404": [42, 315], "0563": 327, "05685": 327, "057": [42, 90, 312, 340], "057263048836390405": 21, "058": 311, "05819": 315, "05831": 327, "059": 118, "05901": [42, 315], "05932": 315, "05944": 315, "05957": 74, "05965": 315, "05969": 327, "05994": 327, "06": [18, 22, 23, 37, 42, 44, 90, 93, 114, 118, 312, 315, 318, 319, 330, 337, 340, 385], "06006": 75, "06031": 315, "061": [42, 90, 312, 340], "06115": [42, 315], "06158195065493243": 21, "06189": 315, "06203": [60, 327, 333], "06219": [75, 327], "06298": [106, 286], "062j": 327, "06344": 75, "06366": 75, "06389": 75, "064": 311, "06424": 18, "06438": [106, 286], "0645": [42, 315], "065": [315, 318], "0659": 18, "06679": [42, 315], "06717": 327, "06793": 75, "0689": 311, "0689001083": 311, "069": [37, 40, 74, 306, 311], "0690": 311, "06948": 75, "07": [23, 42, 46, 64, 74, 90, 306, 312, 315, 318, 323, 340, 342], "071": [315, 318], "07123": 75, "0714": 18, "0717021": 93, "07214": 325, "0732": 75, "07386553913526281": 21, "07434": 75, "07548": [22, 75], "07624": 22, "07666": 95, "07779": 75, "07951": 75, "07955": 75, "08": [23, 311, 315, 317, 318, 336], "08058": 327, "08065": 75, "081": 311, "08239": 327, "083": 311, "08434": 74, "08437": 76, "08452": 22, "08463": 75, "0847": 75, "08521": [106, 274], "08543": [106, 274], "08574": 75, "08693": 76, "087": [315, 318], "08752": 327, "088": [315, 318], "08804": 75, "08905": 75, "08e": 327, "09": [2, 18, 23, 37, 42, 44, 90, 312, 315, 317, 318, 319, 342], "090": 311, "09079": 42, "091": [315, 318], "0913": 75, "092": 74, "09235": 76, "093": 18, "09300": [37, 90], "09386": 75, "09448": 75, "095000": [44, 319], "09539": 75, "09555": 75, "09588": 75, "09665": [42, 315], "09689398092857858": 21, "09699": 75, "09771": [42, 315], "09898": [42, 315], "099": 76, "09903": 22, "09999": [42, 315], "09e": 18, "0acquisit": 319, "0actual": 319, "0analog": 319, "0command": 319, "0delai": 319, "0e3": 95, "0e8": 95, "0f": 311, "0firmwar": 319, "0j": [6, 336], "0k": 95, "0laser": 319, "0low": 319, "0markerfacecolor": 328, "0nonlinear": 319, "0number": 319, "0optic": 319, "0peak": 319, "0phase": 319, "0readi": 319, "0refer": 319, "0sampl": 319, "0scale_dash": 328, "0sourc": 319, "0stabil": 319, "0start": 319, "0unknown": 319, "0want": 319, "0x7fbaaf550c70": 310, "0x7fbab75f9120": 310, "0x7fe19b1089a0": 309, "0x7fe19bb23fd0": 309, "0x7fe19bc00ca0": 309, "0x7fe1a5febd00": 309, "0x7fee8ba8bd90": 23, "0x7fee9362e8c0": 17, "0x7fee93712fb0": 27, "0x7fee949c1660": 22, "0x7feeb59a95a0": 76, "0x7feeb5a7ebf0": 75, "0x7feeb5b3fcd0": 27, "0x7feeb5ed5960": 15, "0x7feeb5f098d0": 16, "0x7feeb5f76230": 19, "0x7feeb5f77f10": 20, "0x7feeb5f988b0": 79, "0x7feeb5f9b1c0": 24, "0x7feeb6111b10": 31, "0x7feeb642a920": 18, "0x7feeb642b310": 63, "0x7feeb9500ca0": 30, "1": [2, 6, 7, 8, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 36, 37, 38, 39, 42, 44, 45, 46, 47, 50, 51, 54, 55, 59, 60, 63, 64, 66, 67, 70, 71, 74, 75, 76, 79, 80, 86, 87, 89, 90, 93, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 109, 110, 112, 114, 115, 116, 117, 118, 120, 125, 126, 128, 132, 133, 135, 136, 139, 140, 146, 151, 152, 153, 156, 157, 160, 162, 164, 168, 170, 171, 174, 175, 176, 178, 182, 186, 189, 192, 194, 195, 196, 203, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 228, 229, 231, 239, 240, 244, 245, 258, 264, 265, 267, 268, 270, 271, 272, 274, 275, 284, 285, 286, 287, 289, 291, 297, 298, 303, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 324, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 376, 385, 390, 391, 396], "10": [0, 1, 2, 6, 18, 20, 21, 22, 23, 24, 25, 31, 37, 38, 42, 44, 51, 63, 70, 74, 75, 76, 77, 79, 84, 87, 89, 90, 93, 95, 97, 98, 102, 106, 111, 112, 116, 140, 162, 163, 167, 189, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 241, 261, 297, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342, 343, 368, 393, 396], "100": [6, 22, 36, 39, 51, 59, 74, 75, 76, 98, 106, 112, 118, 146, 239, 244, 261, 275, 303, 307, 309, 310, 312, 315, 318, 319, 325, 328, 329, 333, 338, 339], "1000": [30, 36, 38, 39, 50, 76, 98, 307, 325, 328, 330, 337, 338], "10000": [59, 74, 261, 328], "100000": [96, 328], "1000000000": 331, "1001": [18, 37, 42, 75, 317, 318, 337], "1002": 93, "10031": 74, "1007": 1, "1008": [60, 327, 333], "100_pd_101": [315, 318], "100_pd_102": [315, 318], "100_pd_103": [315, 318], "100_pd_104": [315, 318], "100_pd_21": 315, "100_pd_3": [315, 318], "100_pd_4": [315, 318], "100_pd_5": [315, 318], "101": [24, 93, 309, 310, 318, 327], "1012": 75, "1014": 333, "1016": [93, 305], "102": [75, 318], "1021": [45, 93, 305], "1024": [45, 46, 75, 325, 327, 333, 338, 339], "1029": 319, "103": [23, 74], "1031": [74, 333], "1033": 325, "1037": [42, 60, 315, 327, 333], "1038": [93, 305], "1039": [93, 305], "104": 261, "1048": [42, 315], "105": 2, "1055": 75, "1056": 18, "106": 311, "1067311915111817analog": 319, "1068": 75, "1071": 93, "1075": [75, 338], "1076": 93, "1078": [60, 327, 333], "1079": 333, "1084": 18, "1088": 93, "109": [315, 318], "1091": 75, "1092": 75, "1093": 333, "1094": 75, "10x10": 337, "11": [2, 16, 23, 46, 67, 74, 90, 93, 307, 309, 310, 311, 313, 315, 318, 319, 325, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338, 340, 342, 391], "110": [24, 74, 93, 309, 310], "1100": [42, 315, 338, 340], "1102": [42, 315], "1106": 74, "1108": 75, "1109": 93, "11098": [140, 230], "111111111111": 328, "1112355fapertur": 319, "1114": 75, "1116": 75, "1117": 75, "1134": 75, "1137": 93, "11463": 74, "115": 76, "1152": 76, "1155": 75, "1161": [75, 311], "1165": 75, "1166": 22, "1174": 327, "118": [74, 75], "1188": 75, "1194": 75, "119699": [93, 305], "12": [2, 16, 18, 25, 37, 42, 44, 90, 93, 97, 306, 307, 309, 310, 311, 313, 315, 318, 319, 325, 327, 328, 329, 330, 331, 333, 336, 337, 338, 340, 342, 349, 391], "120": 319, "1200": [325, 328], "1206": 75, "121": 23, "1210271017": 93, "1229": 75, "1230": 15, "1234": [6, 331], "12345": [97, 106, 278], "12411": [60, 327, 330, 333], "1247": 325, "12487289": 311, "125": 74, "1250": [265, 284, 312, 331], "1252instrument": 319, "1259": 75, "126": 333, "12638124502857234": 21, "1265": 18, "1269": 75, "128": [335, 338], "1280": [21, 23], "1281": 23, "1284": 325, "1287": 75, "129": 74, "1290": [328, 336, 340], "1291": 63, "1292": 75, "1295": 93, "12e": 317, "13": [2, 6, 18, 37, 42, 74, 84, 90, 93, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 325, 327, 328, 329, 330, 331, 333, 336, 337, 338, 340, 342, 393], "1300": [162, 312, 325, 331], "1303": 18, "1305": [75, 331], "131": 318, "132": [42, 311, 315, 337], "133": [261, 318], "134": [42, 97, 106, 163, 315], "1344": 327, "1347": 307, "13484": 93, "135": 311, "13505": 93, "1354": [42, 315], "1357": 93, "1359924945": 74, "1359949976": 74, "135e": 330, "1360100375": 74, "1360112954": 74, "1366": 93, "137": [76, 318, 337], "1374": [42, 315], "1380": 75, "139": 318, "14": [23, 42, 46, 48, 74, 76, 77, 90, 93, 307, 309, 310, 311, 312, 315, 318, 319, 325, 327, 328, 329, 330, 331, 333, 336, 337, 338, 340, 342], "140": [23, 76, 93, 309, 310], "14017421024502003": 21, "141": [39, 40, 54, 55, 306], "1416": [42, 315], "1428": 18, "143": 18, "1437": [42, 315], "144": 311, "1456": 325, "14570219": 93, "146": 48, "14658624": 93, "1467": 327, "147": [45, 325, 327], "1476798575": 318, "1476798846": 318, "1476806493": 318, "1476806797": 318, "149": 338, "14e": 18, "15": [16, 17, 18, 22, 23, 37, 42, 44, 46, 54, 60, 74, 75, 76, 85, 90, 93, 117, 307, 309, 310, 311, 312, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 333, 336, 337, 338, 340, 342], "150": [18, 22, 27], "1500": [76, 134], "15000": [37, 59, 60, 90, 330, 333], "151": 93, "152": 6, "1529": 47, "1529cm": 47, "154": 325, "155": 22, "1550": [312, 331], "1555": 331, "1556": [63, 76, 337], "1568": [24, 63], "1570": 312, "15797": 319, "15798": [97, 335], "1580994115": 319, "1580994606": 319, "16": [2, 18, 23, 37, 42, 74, 90, 93, 97, 106, 164, 307, 309, 310, 311, 315, 318, 325, 327, 328, 329, 331, 333, 336, 337, 338, 342], "1600": [134, 325], "16000": 74, "1600437": 311, "161": [21, 25, 32, 306, 315, 318], "162": [74, 93, 325], "1622": 74, "1623": 327, "16365897573755064": 21, "16384": 333, "1644": 97, "165": 140, "166": 327, "1662": 327, "1666915correl": 319, "1667": 38, "167": [311, 327], "16777271refer": 319, "16777271sampl": 319, "168": 327, "1687": 325, "1692": 46, "1693": 46, "16975": 241, "17": [18, 20, 23, 37, 42, 90, 93, 307, 309, 310, 311, 312, 315, 318, 325, 327, 328, 329, 331, 333, 336, 337, 338, 340, 342], "170": [50, 52, 306, 327], "1709": 325, "171": [74, 327], "1726": 338, "1734": 22, "174": 74, "1740": 312, "1742": 21, "175": [23, 325], "1750": 325, "176": [42, 315], "177": [22, 74], "179": [22, 93], "1795": 63, "18": [18, 37, 42, 74, 90, 93, 307, 309, 311, 317, 318, 325, 327, 328, 329, 331, 333, 336, 337, 338, 342, 368], "180": 337, "1800": [162, 265, 284, 312], "181": 93, "181951correl": 319, "1825": 1, "1842": [4, 245], "1856": 331, "185e": 118, "186": 74, "1868": [315, 318], "187": 333, "1879": 95, "188": 22, "1889": 325, "1899": 311, "19": [18, 23, 37, 42, 74, 90, 93, 307, 309, 311, 312, 315, 318, 325, 327, 328, 329, 331, 336, 337, 338, 340, 342, 373], "190": 47, "1900": [311, 337], "1909": 338, "1936": 22, "19403": 93, "19417": 93, "1947": 74, "1950": [18, 37, 90], "1951": 37, "1956": 63, "196": [74, 338], "196608": [45, 325, 327], "1970": 318, "198": [42, 46, 90, 312, 340, 355], "1980": 93, "1982": 76, "1985": 327, "1986": [93, 99, 303], "1988": [93, 96, 235, 269, 317], "199": [46, 311, 360], "1992": [16, 93, 99], "199456453": 311, "1995": 311, "1997": [93, 117], "1999": 94, "1backward": 319, "1d": [4, 6, 29, 32, 33, 41, 48, 50, 56, 96, 97, 101, 103, 104, 106, 110, 111, 133, 134, 135, 153, 162, 163, 169, 180, 190, 196, 198, 200, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 231, 233, 239, 248, 264, 287, 291, 303, 306, 307, 321, 326, 334, 337, 338, 345, 352, 360, 362, 389], "1data": 319, "1e": [74, 95, 113, 114, 116, 132, 336], "1e4": 74, "1e5": 132, "1e9": [96, 132], "1f": [74, 75], "1i": 315, "1j": 6, "1mm": 319, "1mm\u00b2": [44, 319], "1number": 319, "1peak": 319, "1phase": 319, "1r": [74, 315], "1refer": 319, "1rel": 319, "1run": 319, "1sampl": 319, "1scan": 319, "1st": [103, 105, 311, 318, 337], "1x700": 315, "1\u00fa": [315, 318], "2": [2, 6, 7, 15, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 36, 37, 39, 42, 46, 47, 50, 52, 54, 59, 60, 61, 63, 66, 67, 68, 70, 74, 75, 76, 79, 85, 90, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 114, 115, 116, 117, 121, 122, 136, 140, 150, 151, 152, 153, 154, 157, 160, 167, 169, 170, 174, 175, 176, 178, 182, 185, 190, 193, 196, 203, 204, 224, 225, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 265, 268, 271, 273, 274, 281, 286, 289, 291, 297, 298, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 324, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 364, 387, 396], "20": [18, 22, 23, 24, 42, 44, 46, 51, 54, 59, 60, 74, 75, 76, 79, 90, 93, 97, 98, 106, 128, 162, 237, 238, 239, 244, 306, 307, 309, 310, 311, 312, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 333, 336, 337, 338, 340, 342, 376], "200": [21, 36, 39, 63, 74, 100, 109, 116, 307, 325, 328, 330, 331, 337], "2000": [90, 94, 307, 325, 329, 330, 331], "20000": 328, "2001": [20, 93], "2003": [93, 150, 289, 332, 338], "2004": 93, "2005": [14, 17, 20, 24, 25, 33, 63, 93, 96, 105, 106, 132, 229, 306, 309, 310], "2006": 2, "2008": [133, 307], "2009": [93, 95, 303], "200e": 116, "2011instrument": 319, "2013": [1, 93, 102], "2014": [87, 89, 90, 93, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "2015": [19, 93, 309, 310, 331], "2016": [18, 23, 37, 42, 46, 90, 312, 315, 317, 318, 337, 340], "2017": 289, "2018": [93, 105, 150, 315, 318, 332], "2019": [42, 315, 385], "2020": [44, 93, 102, 303, 305, 319], "2021": [93, 342], "2022": [93, 342], "2023": [93, 342], "2024": 93, "2025": [0, 18, 22, 23, 42, 44, 46, 54, 60, 74, 75, 76, 87, 89, 90, 93, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "203": 18, "20300": [37, 90], "204": [19, 24, 309, 310], "2048": 75, "205": [23, 338], "2072": 311, "2073": 311, "2074": [94, 311], "2075": 311, "2079": 93, "209": 16, "2090": 311, "2093": 311, "2095": 325, "21": [23, 42, 67, 75, 90, 93, 309, 311, 312, 315, 318, 325, 327, 328, 331, 332, 336, 338, 340, 342], "2100": 331, "2105": 22, "21103839273442332": 21, "2115": 311, "2129": 74, "2140": 311, "2142": 311, "2144": 329, "215": 338, "2152": 311, "2157": 311, "216": [23, 27, 28, 306, 333], "2162": 311, "2166": 311, "2173": 311, "2179": 311, "2180": 311, "2186": 311, "2191": 311, "2192": 95, "21e": 325, "22": [20, 46, 75, 93, 106, 135, 309, 311, 315, 318, 325, 327, 328, 331, 336, 342, 376], "2200": [60, 327, 330, 333], "221": [44, 48, 306], "222": [76, 106, 135], "2220": 311, "222e": 325, "2238": 327, "224": 16, "2249": 37, "225": [74, 325], "2250": [18, 37, 90], "2266": 311, "2283": 330, "2284": [60, 327, 333], "229": 333, "2299": 311, "23": [12, 20, 23, 74, 75, 93, 309, 311, 315, 318, 325, 328, 331, 336, 342], "230": 311, "2300": [90, 311, 337], "2310": 311, "232": 311, "232000": [44, 319], "233": 315, "234": [315, 327], "2342": [60, 327, 333], "23482": 74, "235": [315, 318], "236": [95, 315, 318], "238": [42, 90, 93, 312, 340, 347], "239": 347, "239e": [46, 315, 318], "24": [42, 74, 75, 90, 93, 293, 309, 312, 315, 318, 325, 328, 331, 336, 340, 384], "240": [42, 311], "24102481595995506firmwar": 319, "242": 74, "243": 74, "245": [315, 318], "246": [93, 333], "2465": 311, "246501869": 311, "2467": 76, "247": 311, "2472": 76, "248": [311, 350], "24812382459640503": 318, "248123825": 311, "2496": [42, 315], "2498": [42, 315], "24e": 340, "25": [2, 23, 74, 75, 76, 93, 98, 147, 309, 311, 315, 318, 319, 325, 328, 331, 335, 336, 342], "250": 325, "2500": 325, "25000": 330, "25085858": [106, 135, 194], "251": [106, 274], "252e": 46, "253": 333, "2537": [106, 274], "255": 350, "256": 328, "2567": [44, 229, 240, 319], "257": 311, "259": [79, 80, 306], "259765625": 335, "26": [23, 25, 63, 74, 93, 97, 309, 311, 315, 318, 325, 328, 331, 335, 336], "260": [306, 315, 318], "2604": 325, "261": 93, "262": [15, 25, 306], "2633": 93, "26434": [93, 305], "2670": 93, "267e": 76, "268e": 76, "27": [20, 46, 75, 93, 309, 318, 319, 325, 328, 331, 336, 338], "271": 318, "2717": 74, "27170": 93, "27180": 93, "2731": 325, "274": 93, "277e": 46, "27811881011285733": 21, "278e": 46, "28": [6, 75, 93, 309, 318, 325, 328, 336], "2827": [22, 75], "284": 93, "284101": 20, "2843": 251, "286": 319, "287": [75, 77, 93, 306], "288": 315, "28e": 327, "29": [24, 74, 93, 309, 315, 318, 325, 328, 336, 342], "2907": 74, "291": [93, 315], "291e": [315, 318], "293919": 20, "296": [315, 318, 366], "2975": 93, "298": [95, 113], "299": [74, 315, 318], "2a": 95, "2acquisit": 319, "2d": [4, 14, 22, 25, 33, 36, 39, 45, 46, 50, 63, 65, 68, 72, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 149, 153, 162, 196, 197, 199, 201, 202, 209, 210, 211, 212, 214, 215, 220, 221, 222, 223, 229, 233, 248, 260, 303, 306, 307, 312, 325, 328, 331, 333, 334, 336, 338, 345, 361, 382, 389, 391], "2e": 327, "2f": 31, "2fp": 311, "2j": [6, 336], "2nd": 105, "2rr": [75, 315], "3": [0, 1, 2, 6, 7, 15, 18, 19, 20, 22, 23, 24, 27, 31, 36, 37, 38, 39, 42, 46, 54, 74, 75, 76, 77, 84, 87, 89, 90, 93, 95, 96, 97, 99, 100, 102, 103, 105, 106, 109, 111, 112, 114, 115, 117, 118, 132, 140, 160, 162, 167, 168, 178, 182, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 239, 240, 261, 278, 291, 297, 298, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 353, 360, 368, 372, 376, 379, 391, 393, 396], "30": [2, 23, 59, 63, 93, 105, 309, 311, 314, 315, 318, 325, 327, 328, 329, 336], "300": [18, 20, 36, 39, 328, 330], "30000": [37, 90], "302": [31, 32, 76, 306, 315, 318], "303": [66, 68, 306], "3037": 337, "3039": 337, "3063": 325, "307": [22, 315, 318], "3077": 338, "308": [46, 75, 95], "31": [75, 76, 93, 309, 312, 318, 325, 328, 336, 342], "310": 354, "3106": 75, "311": [315, 318], "3112": [18, 37, 42, 317, 318, 337], "312": [18, 37], "3127": 325, "3132": 338, "3148": 1, "3155": 22, "316": 353, "317": [42, 93], "3194": 22, "3197": 22, "32": [46, 75, 93, 309, 318, 319, 325, 328, 333, 336, 337], "322": [93, 353], "323": 307, "323307": 319, "324": [59, 61, 306], "3247": 231, "325": 325, "3250": 325, "326": 307, "32768": 333, "328": [42, 315], "32_": [315, 318], "32number": 319, "32refer": 319, "32result": 319, "33": [18, 23, 37, 42, 74, 93, 309, 318, 325, 328, 336, 337], "3300": [30, 307], "333": [261, 325], "3336": 338, "335": [315, 318], "3390": [93, 305], "34": [42, 44, 46, 54, 74, 93, 315, 318, 325, 327, 328, 336, 338, 340], "3400": 30, "342312": [93, 305], "345": 74, "3458": 30, "346": 74, "3464": 325, "349000": 319, "349999durat": 319, "35": [18, 20, 37, 42, 60, 74, 75, 76, 311, 315, 317, 318, 325, 328, 336, 337], "3500": [30, 331], "3505": 30, "3519": 338, "3520": 307, "3536": 30, "3537": 307, "3540": 30, "3541": 307, "3548": [169, 307], "3549": 329, "355": [1, 307], "3560": 307, "3579": 338, "3583": 22, "36": [22, 23, 38, 75, 90, 93, 306, 309, 315, 325, 328, 336, 340], "360": 366, "3600": 328, "3610": 307, "3614": 22, "362": 338, "3620": 30, "3622": 307, "3623": 30, "3624": 307, "3629": 22, "3631": [93, 338], "3636": [93, 338], "3640": 307, "3641": 74, "367": 1, "3678": 307, "368": 338, "368000": [44, 319], "3689988durat": 319, "3693": 307, "37": [18, 23, 37, 42, 46, 310, 312, 315, 317, 318, 325, 328, 336, 337], "3700": [30, 134, 307], "372": 311, "3734": 247, "3736": 42, "375": 366, "3750": 331, "3766": 63, "3780": 331, "379": 74, "38": [23, 42, 74, 75, 90, 312, 315, 319, 323, 325, 327, 328, 336, 340], "3800": [30, 90], "3805": 337, "3807": 337, "381755": [106, 146, 275], "3823841": 0, "3826": 46, "383064516033j": 330, "3831": 46, "385": 93, "3868": 75, "387": 325, "3873": 74, "3883": 325, "39": [22, 23, 42, 311, 313, 314, 315, 317, 318, 319, 325, 327, 328, 329, 330, 331, 333, 335, 336, 338, 340], "3900": [90, 134], "390168": 20, "3915": 63, "396": 93, "399": [42, 315, 318], "3997": [44, 319], "3998": [44, 315, 318, 319], "3999": [18, 37, 42, 317, 318, 335, 337], "3actual": 319, "3c02592": [93, 305], "3d": [22, 23, 36, 39, 98, 112, 212, 221, 222, 325, 328], "3d_dataset": 325, "3e": 340, "3extend": 319, "3f": [31, 74, 133, 169, 190, 261, 264, 287, 307, 311], "3fp": 311, "3g": [224, 317], "3gb": 84, "3j": [6, 336], "3rd": [105, 317], "3refer": 319, "3sampl": 319, "4": [2, 6, 7, 17, 19, 20, 21, 22, 23, 24, 27, 31, 40, 42, 44, 46, 47, 50, 54, 60, 67, 70, 74, 75, 76, 79, 90, 93, 95, 97, 98, 106, 115, 116, 138, 164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 233, 239, 240, 244, 298, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "40": [23, 42, 75, 314, 315, 319, 325, 328, 336, 337, 340], "400": [42, 319, 325, 328, 335, 337, 338], "4000": [18, 36, 37, 39, 42, 90, 315, 317, 318, 319, 325, 328, 329, 331, 335, 336, 337], "4001": 42, "400mb": 84, "401": [315, 318], "402": [93, 367], "403": [60, 61, 93, 306], "403400": 20, "403e": [325, 330], "404": [18, 76, 327], "40400": [37, 90], "4044": 30, "4046": 116, "405": 327, "406": 327, "407": 327, "4070": 329, "4071": 329, "408": [74, 327], "4096": [74, 240, 319], "41": [18, 23, 37, 42, 90, 312, 315, 318, 325, 328, 336, 337, 340], "414": 336, "41421356": 336, "4160": 335, "4168": 325, "417": [311, 370], "42": [18, 21, 37, 42, 44, 93, 317, 318, 325, 328, 336, 337], "420": [45, 48, 306], "421": [51, 52, 306], "4223": 76, "4230": 331, "4253": 76, "426": [237, 238], "4262": 74, "428": [42, 315], "4284": 76, "43": [20, 23, 30, 44, 315, 325, 333, 336], "430": 77, "433": 74, "4330": 331, "437": [76, 325, 338], "438": 338, "43836": 333, "4394": 30, "44": [46, 75, 315, 318, 325, 336], "440": 74, "441": 74, "4446": 74, "445666174": 338, "446": 311, "447": [315, 318], "448": [315, 318], "44822162": 116, "449": [17, 25, 306, 336, 338], "44948974": 336, "45": [20, 42, 74, 140, 315, 318, 325, 329, 336, 337], "4500": 331, "4505": 325, "4517": 97, "453": 23, "4550": 331, "456": 23, "4574": 63, "458": 74, "46": [18, 23, 37, 42, 74, 315, 317, 318, 325, 336, 337], "461": [315, 318], "4616": 63, "462": [22, 374], "468": 374, "468e": [23, 42, 90, 312, 315], "47": [18, 74, 133, 307, 311, 315, 325, 336, 337], "471": 76, "4717": 330, "472": 325, "474": 311, "477": 325, "477e": [18, 37, 42, 317, 318], "47878161267252": 22, "4798": 22, "48": [93, 307, 315, 325, 327, 336], "481e": 325, "483": [46, 48, 306], "4888": 30, "49": [18, 37, 42, 315, 317, 318, 325, 336, 337], "490": 376, "4913": 75, "4924": 325, "496": 76, "4980": 63, "4991": 93, "4998": 63, "4actual": 319, "4c72b0": 328, "4f": 311, "4fq4v": [93, 305], "4number": 319, "4th": [15, 19, 27, 309, 310, 324], "4x8": 315, "4x96": 19, "4\u00e5": [315, 318], "4\u00ea\u00ba": [315, 318], "5": [2, 7, 15, 16, 19, 20, 22, 23, 24, 27, 30, 31, 46, 50, 63, 67, 70, 74, 75, 76, 85, 90, 92, 93, 95, 96, 97, 98, 101, 105, 106, 114, 115, 118, 140, 153, 162, 164, 170, 176, 203, 258, 268, 297, 298, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 353, 376], "50": [18, 23, 30, 51, 63, 74, 76, 90, 95, 96, 97, 100, 105, 106, 119, 132, 162, 171, 186, 189, 244, 251, 269, 309, 311, 314, 315, 325, 328, 331, 333, 336], "500": [20, 111, 114, 328], "5000": [74, 75, 330, 333, 336], "500x500": 112, "5013peak": 319, "5016": 325, "501e": 46, "503": 18, "50300": [37, 90], "505000": [44, 319], "509278655052185pressur": 319, "5096153847107": 330, "51": [18, 19, 24, 37, 42, 90, 309, 310, 315, 318, 325, 336, 337], "513": 76, "513e": 46, "516": 74, "517": [318, 337], "519": [315, 318], "51x96": 19, "52": [63, 75, 93, 95, 315, 318, 325, 333, 336], "52329sampl": 319, "5263": 319, "5265": 319, "5274peak": 319, "528": [43, 48, 306], "5281": [0, 93, 305], "5282": 74, "53": [23, 51, 94, 317, 325, 328, 336], "532": 46, "533e": 330, "534": 338, "5342": 74, "53572": [93, 305], "536e": 38, "538": [42, 48, 306], "538e": 38, "539": [74, 77, 306], "54": [18, 20, 30, 37, 42, 118, 170, 175, 318, 325, 336, 337], "5400": 331, "541e": 327, "542": [20, 25, 306], "543": [315, 318, 382], "5437": 63, "544": [315, 318], "5448": 95, "544e": [315, 318], "545": 338, "5458": 22, "546": 319, "546e": 327, "547": 42, "5474": 307, "5476": 1, "549": 338, "55": [1, 42, 75, 79, 90, 93, 106, 118, 134, 135, 140, 146, 194, 239, 246, 265, 273, 274, 275, 284, 286, 312, 319, 325, 329, 336, 340], "552": [315, 318], "5522": 76, "553": [315, 318, 338], "55339": [93, 305], "5549": [23, 38, 42, 90, 106, 118, 134, 135, 140, 146, 194, 229, 239, 244, 246, 273, 274, 275, 286, 307, 312, 315, 318, 329, 340], "5553": 329, "556": 331, "5566": 23, "56": [23, 74, 315, 318, 325, 336], "560": [70, 71, 306], "562": [74, 311], "562backward": 319, "563": 311, "5669": 307, "569": 74, "56b4e9": 328, "57": [27, 74, 93, 140, 239, 313, 315, 318, 325, 336], "571": 311, "574": [63, 64, 306], "575": 74, "5752": [44, 319], "577": [22, 25, 306], "5771": [44, 319], "579": 74, "58": [18, 37, 42, 44, 309, 315, 318, 319, 325, 337], "5809": [44, 319], "581e": [44, 319], "582": 22, "5827": [44, 319], "582j": 333, "583x": 93, "5880": 1, "59": [42, 54, 315, 325], "5900": 331, "592": 52, "5949": 75, "594e": 46, "5979": 22, "5993": 15, "5994": 63, "5995": 30, "5997": [15, 331], "5999": [1, 42, 63, 90, 312, 315, 318, 329, 331, 340], "5e": 74, "5j": [6, 336], "5th": [27, 63], "6": [2, 6, 16, 19, 23, 27, 48, 74, 75, 76, 85, 87, 89, 90, 93, 95, 97, 98, 99, 100, 102, 105, 106, 109, 111, 112, 114, 115, 117, 118, 163, 168, 174, 204, 230, 297, 298, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 368], "60": [20, 36, 39, 50, 66, 76, 79, 93, 97, 106, 163, 182, 307, 325, 337], "600": [325, 328, 340], "6000": [42, 90, 312, 315, 318, 329, 340], "602": 18, "60200": [37, 90], "603": [76, 338], "604": [76, 77, 306], "605": [23, 25, 306], "606": 74, "6077": 23, "607943654060364e": 318, "607e": 46, "608e": [42, 318, 337], "61": [18, 22, 23, 42, 44, 46, 54, 60, 74, 75, 76, 90, 307, 309, 310, 312, 315, 317, 318, 319, 323, 325, 327, 330, 333, 336, 337, 340], "611089606616848e": 21, "615": 327, "616": 327, "617": 327, "618": 327, "619": 327, "62": 325, "620": 327, "621": 327, "622": 311, "623": [54, 76, 327], "624": 327, "625": 327, "626": 327, "627": [327, 331], "628": 327, "63": 325, "630": 327, "6311": [44, 319], "6324": [44, 319], "634": 118, "6356": 325, "6369": 307, "6376": [44, 319], "6385": 46, "6388": [44, 319], "64": [42, 74, 315, 325, 333], "6408": 325, "643": [247, 387], "647": 387, "6476": 46, "649": [18, 25, 42, 90, 306, 312, 315, 318, 329, 331, 340], "6497": 76, "64th": 335, "65": [42, 315, 325], "650": [42, 90, 312, 315, 318, 328, 329, 340], "6500": 332, "651": [307, 331], "652": [309, 310], "652818786": [106, 286], "65536": 333, "6566": 22, "657": [67, 68, 306], "658": [42, 315], "66": [133, 307, 325], "663": 388, "664": 388, "667": 325, "6676": 93, "668": 388, "6686": 93, "67": 325, "6741": 315, "6747": 315, "678": [38, 40, 306, 338], "678957223892212pressur": 319, "68": [307, 325], "680": 319, "6822": 315, "6826": 315, "684": 22, "6844": [42, 315], "6849": [42, 315], "687": [42, 315, 389], "687e": 118, "688": 389, "6891": 315, "6899": 315, "689e": 46, "69": [76, 133, 307, 325], "6915": 325, "6919": 315, "692": 25, "6924": 315, "692e": 46, "693": 307, "694": 23, "695": 76, "6956": 327, "696": 394, "6976": 315, "6979": 315, "697e": 46, "698": 315, "699": [44, 319], "69e": 46, "6_19039_538": [315, 318], "6g": [315, 318], "7": [2, 6, 18, 22, 23, 37, 38, 39, 42, 44, 46, 63, 70, 75, 76, 90, 93, 106, 115, 118, 146, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 275, 304, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 345, 379, 385, 396], "70": [63, 67, 74, 325, 332], "700": [27, 42, 44, 313, 315, 319, 325, 328, 331], "702": 18, "70200": [37, 90], "7021": [42, 315], "7028": [42, 315], "7030": 327, "704": 315, "706": [16, 25, 306, 391], "708": 325, "71": [23, 325], "711e": 46, "7121": [42, 315], "7128": [42, 315], "7134": [315, 318], "7139": 75, "714": [22, 391], "7153": 75, "716": 391, "72": [42, 114, 315, 325], "721e": 46, "7233": 22, "726": 76, "727": [61, 315], "7275": 315, "7282": 315, "7289": 315, "73": [106, 146, 275, 325], "7302": 22, "7306": [42, 315], "7309": [42, 315], "732": 336, "73205081": 336, "733": 76, "734": 311, "7351": 325, "7355": 95, "7357": 315, "7362": 315, "739": 338, "74": [106, 146, 275, 325, 327], "741e": 325, "7439": 93, "746": [42, 311, 315], "747926": [19, 309], "7494": 307, "749519": 309, "749798": 309, "749865": 20, "75": [22, 63, 93, 261, 311, 325, 328, 338], "75015": 2, "7537": 22, "756": [315, 318], "757": 93, "75794": 2, "758": 392, "7584": 75, "75marker": 328, "76": [24, 74, 93, 309, 310, 315, 318, 325], "763": 74, "765": [74, 384], "769": 384, "77": [93, 307, 325], "7716": 30, "7725": 76, "7742": 74, "777": 393, "778": 338, "779e": 118, "78": [42, 93, 315, 325], "78153": 2, "783": [74, 106, 146, 275], "784": 384, "787875175476074e": 318, "787e": 317, "7883": 23, "788e": [42, 317, 318, 337], "789": [106, 135], "79": [30, 42, 75, 315, 325], "791": [42, 90, 312, 340], "7918": 318, "7921117": [93, 305], "793j": 333, "794": [42, 90, 312, 340], "796": 74, "7_cz0": [239, 244, 315, 318], "8": [0, 2, 6, 16, 18, 23, 30, 39, 42, 46, 50, 60, 66, 67, 70, 74, 75, 79, 90, 93, 95, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 115, 117, 118, 149, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 384, 395], "80": [27, 42, 74, 112, 313, 315, 325, 331, 337, 338], "800": [74, 325, 328, 331], "8000": 30, "801": 18, "80100": [37, 90], "803": 40, "805": 311, "807972021": [106, 274], "807e": 325, "808": 325, "8080601692199707": 340, "80vfocal": 319, "81": [63, 74, 325], "812": 325, "813": 333, "815": [42, 90, 312, 340], "816": [42, 90, 312, 340], "82": [24, 74, 93, 325], "8222": 318, "824e": 74, "826": 315, "826e": 74, "827": 394, "83": [16, 74, 93, 325], "831": 315, "832": 331, "8366": 333, "837": 307, "84": [42, 74, 93, 315, 325], "840": 331, "841": [327, 343, 396], "842": 327, "85": [42, 74, 315, 325, 328], "850": 331, "8500": [44, 319], "851": [24, 25, 306], "8524": 325, "85248": 93, "8567": 22, "857": [18, 74, 307], "858": [30, 32, 306], "86": [74, 315, 318, 325, 338], "863": 317, "87": [23, 74, 93, 315, 318, 325], "87261": 116, "873": 325, "8757": 75, "877": 261, "88": [74, 93, 325], "881": 311, "882": [21, 23], "8833": 325, "8842": 307, "88615": 311, "888": [19, 25, 306], "89": [74, 325], "890": [336, 340], "8909": 325, "891": [74, 331], "8910": 1, "896184": 319, "8999999761581421instrument": 319, "8h": 319, "8max": 319, "8pfk5": [93, 305], "8x427": [309, 310], "9": [2, 6, 18, 21, 23, 31, 37, 42, 46, 63, 74, 75, 76, 90, 93, 97, 106, 115, 116, 150, 164, 230, 304, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 342, 368, 393], "90": [66, 74, 75, 76, 311, 325, 328, 332], "900": [325, 328], "9001": 30, "90063": 93, "901": 22, "902685": 319, "904": 331, "905": [18, 37], "90500": [37, 90], "9059": 307, "905torr_lt_aft": [18, 37, 42, 318, 337], "91": [74, 325], "910138": 319, "911": [42, 90, 312, 340], "913": [42, 90, 312, 340], "915": [36, 40, 306], "917630": 319, "92": [22, 74, 332], "920": [15, 328], "9207": [315, 318], "925": 307, "925133": 319, "93": 74, "932926": 93, "9335": 93, "9342": 93, "94": [23, 74, 118], "943": 338, "945": 74, "9456": 93, "948": 327, "9499999999999995": 31, "95": [31, 66, 261, 309, 328], "956": [47, 48, 306, 339], "956447": 319, "9579": 1, "959": 76, "96": [19, 23, 24, 75, 93, 309, 310, 327, 328, 331], "960": 68, "962252absolut": 319, "964e": [60, 327, 330, 333], "9656": 325, "9664": 324, "967": 318, "968": [311, 313], "96e": 330, "97": [19, 93, 309], "9700sampl": 319, "9718": 1, "975": 311, "9755": 24, "976": 74, "98": [42, 79, 106, 146, 275, 307, 315, 328], "980": 23, "982": 74, "983": 315, "984": [313, 315], "9871": 325, "987417333333low": 319, "99": [20, 22, 23, 66, 74, 76, 118, 149, 328, 332], "990": 31, "9900990099009901": 31, "9964": 24, "9977": 30, "9981": 24, "999": [18, 22, 23, 37, 42, 317, 318, 337], "99997analog": 319, "999999": [106, 203], "9999999999999997": 31, "99axes_grid": 328, "9m": [315, 318], "9w\u00e5e\u00ba\u00f3o": [315, 318], "A": [2, 6, 8, 11, 17, 20, 22, 34, 37, 46, 50, 57, 67, 79, 81, 83, 87, 89, 90, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 124, 127, 134, 136, 140, 146, 190, 194, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 264, 273, 274, 275, 277, 280, 281, 282, 286, 287, 290, 291, 293, 303, 304, 305, 307, 310, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 350, 369, 389, 390], "AND": [2, 106, 124], "And": [67, 90, 314, 328, 332], "As": [8, 17, 19, 21, 23, 36, 39, 46, 50, 63, 70, 79, 106, 150, 153, 224, 303, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 325, 327, 328, 330, 331, 336, 337, 338, 340, 343, 396], "At": [106, 309, 317, 318], "Be": [9, 258], "But": [36, 39, 63, 79, 94, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 304, 311, 317, 323, 325, 326, 328, 329, 331], "By": [18, 37, 42, 86, 94, 96, 97, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 125, 126, 135, 146, 147, 153, 161, 163, 192, 195, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 270, 274, 275, 278, 283, 286, 289, 290, 291, 307, 315, 318, 319, 323, 328, 335], "For": [2, 4, 5, 6, 8, 10, 18, 19, 20, 21, 37, 50, 63, 66, 67, 75, 79, 83, 84, 85, 86, 88, 90, 95, 96, 97, 105, 106, 109, 114, 121, 122, 125, 128, 136, 137, 138, 139, 140, 145, 146, 156, 161, 162, 165, 166, 170, 172, 175, 176, 179, 191, 192, 194, 207, 208, 240, 253, 255, 271, 273, 274, 275, 285, 286, 304, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340, 342, 343, 383, 396], "INE": 319, "If": [2, 3, 6, 10, 12, 13, 42, 82, 85, 86, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 135, 136, 137, 138, 139, 145, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 179, 183, 186, 189, 191, 192, 194, 195, 196, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 261, 265, 268, 270, 271, 272, 274, 275, 278, 280, 281, 284, 285, 286, 289, 290, 291, 293, 297, 298, 309, 311, 314, 315, 319, 323, 324, 325, 327, 328, 330, 331, 335, 340, 379, 387], "In": [2, 6, 15, 16, 18, 19, 20, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 45, 50, 54, 59, 60, 63, 66, 67, 70, 74, 87, 89, 90, 91, 93, 94, 95, 96, 97, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 134, 150, 154, 171, 186, 189, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 274, 286, 303, 304, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 323, 325, 326, 331, 333, 336, 338, 339, 382], "It": [22, 36, 38, 39, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 128, 132, 158, 162, 163, 164, 188, 205, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 289, 303, 307, 309, 310, 311, 312, 314, 315, 317, 318, 319, 322, 323, 325, 327, 328, 330, 331, 332, 335, 338, 343, 348, 382, 389, 391, 395, 396], "Its": [91, 118, 303, 311, 369], "NOT": [86, 241, 258, 336], "No": [2, 8, 106, 114, 139, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "Not": [99, 106, 112, 124, 139, 270, 314, 324, 329], "OF": [2, 328], "OR": [84, 106, 127], "Of": [330, 331], "On": [84, 86, 94, 106, 157, 309, 311, 324], "One": [2, 97, 106, 318, 321, 325, 331, 334, 335, 340, 393], "Or": [6, 17, 310], "Such": 2, "THAT": 314, "THE": 2, "TO": [2, 328], "That": 336, "The": [1, 2, 6, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 67, 74, 75, 76, 79, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 140, 147, 149, 150, 151, 152, 153, 155, 156, 158, 161, 162, 163, 164, 167, 168, 170, 171, 172, 174, 175, 176, 178, 179, 182, 186, 187, 188, 189, 192, 194, 195, 196, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 261, 265, 268, 269, 271, 272, 273, 274, 279, 285, 286, 289, 293, 297, 298, 303, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 319, 323, 324, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 339, 354, 385, 387, 389, 391, 394, 395], "Then": [19, 27, 86, 307, 311, 313, 315, 317, 318, 322, 329, 331], "There": [10, 83, 97, 106, 186, 325, 333], "These": [2, 22, 91, 307, 310, 311, 315, 323, 325, 328, 332, 338, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "Theses": 93, "To": [5, 18, 20, 22, 36, 37, 38, 39, 42, 50, 74, 75, 84, 86, 95, 106, 116, 161, 179, 228, 304, 307, 312, 315, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 338, 340, 395], "WILL": 328, "WITH": 2, "Will": [104, 110], "With": [97, 106, 124, 125, 126, 127, 192, 194, 195, 226, 274, 275, 286, 304, 307, 309, 315, 318, 323, 331], "_": [30, 45, 75, 99, 303, 307, 309, 310, 311, 313, 324, 327, 328, 329, 330, 331, 333, 335, 338], "_1": [18, 37, 74, 98, 303, 325], "_2": [18, 37, 74, 98, 325], "_3": 74, "_4": 328, "__": 324, "__all__": 4, "__call__": 327, "__dataset_methods__": 4, "__init__": [314, 338], "__string___": 324, "__version__": 39, "_active_ctx": [116, 120], "_arg": 338, "_axes3d": 328, "_callback": 338, "_classic_test_patch": [328, 329], "_context": 338, "_creat": 327, "_cstr": 327, "_dtype": 6, "_html_output": 327, "_i": 303, "_implement": [106, 108, 115], "_importer_method": 4, "_j": 303, "_modifi": 327, "_mpl": [328, 329], "_nmf": 21, "_novalu": 116, "_optim": 76, "_prod_dispatch": 116, "_pseudo_sync_runn": 338, "_read_spc": 4, "_registri": [116, 120], "_repr_html_": 327, "_run": 338, "_run_cel": 338, "_run_cod": 338, "_run_module_as_main": 338, "_run_onc": 338, "_string_": 324, "_subplot": 337, "_text_width": 327, "_\u00ba": [315, 318], "a1": 331, "a2": 331, "a3": 331, "a350": 54, "a5": 6, "a6": 6, "a_1": 95, "a_decomposit": [16, 25, 306], "a_max": [106, 139], "a_min": [106, 139], "a_n": 95, "a_nddataset": [40, 306], "aa": 331, "ab": [44, 93, 95, 106, 122, 240, 274, 286, 319, 325, 331, 389, 395], "abad0d": 93, "abc": [134, 307, 389], "abcdef": 97, "abdelhafid": [1, 93], "abdollahi": 93, "abil": [318, 325], "abl": [12, 229, 303, 331], "about": [1, 5, 83, 90, 101, 258, 268, 304, 313, 315, 321, 326, 328, 331, 345, 369], "abov": [15, 23, 86, 106, 152, 162, 304, 309, 310, 311, 315, 318, 319, 322, 324, 325, 329, 331, 332, 336, 338], "abp": 319, "abresolut": 319, "abscissa": [150, 309], "absent": [232, 234, 242, 243, 335], "absolut": [95, 106, 121, 274, 286, 309, 317, 319, 320, 328], "absorb": [4, 17, 24, 36, 38, 39, 42, 44, 90, 106, 135, 146, 194, 239, 240, 274, 275, 286, 297, 309, 310, 311, 312, 313, 315, 317, 318, 319, 325, 328, 331, 336, 337, 338, 340, 368, 370], "absorpt": [4, 93], "absort": 319, "abstract": [16, 99], "ac": 93, "ac034173t": 93, "aca": [93, 305], "acc": 319, "acceler": 307, "accent": 324, "accept": [2, 106, 114, 120, 345, 355, 382, 384, 385, 389, 390], "access": [2, 13, 54, 86, 94, 106, 304, 318, 323, 325, 343, 396], "accessori": 319, "accompani": 2, "accord": [2, 98, 102, 106, 135, 233, 283, 303, 313, 314, 328, 369], "accordingli": [97, 106, 343, 355, 396], "account": [5, 10, 12, 106, 137, 147, 161, 172, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 309, 310, 345], "accumul": [106, 274, 286], "accur": 109, "accuraci": [95, 97, 106, 112, 274, 286, 317], "aceto": 93, "achiev": [95, 123, 319, 329], "acid": [93, 305], "acknowledg": 2, "acqui": [315, 318], "acquir": [2, 325], "acquisit": [18, 20, 23, 37, 42, 43, 44, 46, 60, 74, 76, 90, 106, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 271, 311, 312, 315, 316, 317, 319, 327, 330, 331, 333, 337], "acquisition_d": [4, 106], "acqus_fil": 74, "acr": 116, "acronym": [97, 106, 226], "across": [100, 109, 112, 325], "acscat": [93, 305], "act": [2, 316], "acta": [93, 331], "action": [6, 90, 93, 95, 106, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 352], "actionmasskinet": [20, 387, 391], "activ": [2, 5, 9, 12, 15, 21, 23, 30, 42, 43, 46, 51, 63, 79, 82, 84, 86, 87, 88, 89, 90, 91, 93, 97, 99, 106, 115, 118, 134, 135, 140, 146, 162, 187, 194, 236, 239, 246, 265, 273, 274, 275, 284, 286, 291, 305, 307, 312, 325, 328, 329, 331, 336, 340], "activation_pca": 23, "actual": [6, 18, 19, 27, 67, 83, 96, 97, 106, 307, 309, 310, 311, 313, 325, 329, 331, 337], "actul": 15, "ad": [2, 6, 7, 11, 18, 20, 85, 86, 91, 96, 106, 115, 158, 162, 168, 204, 218, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 293, 298, 303, 321, 326, 331, 343, 345, 351, 352, 359, 360, 361, 362, 365, 385, 389, 390, 396], "adam": 95, "adapt": [2, 11, 12, 14, 25, 33, 105, 106, 108, 115, 117, 187, 229, 306, 324], "adata": 6, "add": [3, 5, 6, 7, 10, 18, 20, 23, 24, 27, 37, 54, 74, 75, 76, 84, 87, 106, 115, 228, 307, 309, 310, 311, 313, 318, 319, 324, 325, 327, 328, 329, 331, 335, 337, 338, 345, 353, 366, 367, 373, 374, 384, 386, 387, 391, 393], "add_coordset": 106, "add_dataset": [115, 327], "add_project": [115, 327], "add_script": 115, "addit": [2, 4, 6, 8, 36, 39, 50, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 136, 138, 147, 153, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 231, 265, 284, 303, 304, 311, 319, 320, 325, 326, 329, 336, 338, 343, 345, 360, 382, 394, 396], "addition": [6, 224, 325, 336], "address": [2, 106, 337], "adjac": [97, 106, 128], "adjust": [79, 134, 231, 328], "administratorcompani": 319, "adob": 328, "adopt": 84, "adrian": 93, "adsorb": 93, "adsorpt": [18, 90, 93, 305, 311, 318, 337], "adt": 319, "advanc": [5, 91, 93, 162, 305, 311, 316, 323, 334, 337], "advantag": 318, "advis": [3, 30, 137, 172, 319], "affect": [37, 91, 97, 106, 128, 162, 309, 311, 325, 328, 331, 334, 345, 369], "affn": [235, 317], "after": [2, 6, 8, 10, 24, 63, 95, 105, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 299, 302, 303, 307, 311, 313, 315, 318, 328, 331, 332, 333, 337, 338, 340, 352, 367], "afterward": [112, 332], "ag": 93, "ag2": 319, "again": [22, 63, 229, 239, 240, 309, 318, 328], "against": [2, 97, 106, 124, 125, 126, 127, 192, 194, 195, 226, 274, 275, 286], "agg": 328, "agg_path_chunks": 328, "aggreg": 326, "agir": 93, "agirdata": [231, 251], "agre": 2, "agreement": 2, "ahap": [104, 110], "ahead": 6, "aim": 205, "ait": [1, 93, 305, 314], "aka": 109, "akbari": 93, "al": [14, 17, 24, 25, 33, 75, 92, 93, 95, 96, 97, 99, 100, 102, 105, 106, 109, 112, 117, 118, 229, 269, 303, 305, 306, 308, 310, 321, 323, 331, 352, 384, 390], "al2o3": 318, "alberto": 93, "alchem0x2a": 47, "alert": 324, "alessandro": 93, "alexandr": 93, "algorithm": [63, 67, 74, 90, 91, 93, 95, 96, 99, 100, 102, 105, 109, 112, 114, 117, 118, 132, 137, 151, 172, 258, 268, 269, 289, 303, 309, 311, 331, 338, 352, 389], "alia": [4, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 161, 197, 198, 199, 200, 201, 202, 213, 217, 218, 219, 223, 244, 246, 247, 258, 265, 268, 284, 289, 292, 294, 295, 296, 330, 389, 390], "align": [321, 328, 334, 348, 350], "alinaghi": 93, "alk1100494": [315, 318], "all": [1, 2, 6, 9, 12, 13, 21, 23, 31, 46, 47, 50, 74, 75, 83, 85, 86, 90, 91, 96, 97, 98, 99, 100, 102, 105, 106, 109, 111, 112, 114, 115, 117, 118, 123, 125, 126, 127, 135, 140, 155, 157, 160, 162, 164, 171, 178, 186, 189, 192, 195, 196, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 256, 271, 272, 273, 303, 304, 306, 307, 308, 309, 311, 314, 315, 318, 319, 322, 323, 324, 325, 328, 330, 331, 336, 337, 338, 346, 350, 378, 393, 395], "alladio": 93, "allevi": [106, 274, 286], "allitem": 115, "allnam": 115, "alloc": [97, 106, 164], "allow": [2, 3, 6, 10, 12, 22, 36, 39, 86, 91, 95, 97, 98, 99, 106, 134, 164, 231, 270, 307, 309, 313, 315, 318, 322, 325, 326, 327, 329, 330, 331, 336, 340, 367, 369, 384, 389, 391], "allows_non": 106, "almost": [96, 106, 132, 178, 312, 325], "alon": [12, 318, 395], "along": [42, 74, 75, 76, 96, 97, 100, 101, 105, 106, 123, 124, 125, 126, 127, 129, 130, 132, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 150, 151, 156, 170, 172, 174, 175, 176, 192, 194, 195, 196, 226, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 265, 268, 269, 270, 271, 273, 274, 275, 284, 285, 286, 289, 315, 318, 328, 331, 334, 337, 338, 350], "alpha": [100, 114, 170, 175, 176, 319], "alpha_h": 109, "alpha_w": 109, "alphabet": 98, "alreadi": [5, 12, 13, 15, 23, 88, 98, 100, 106, 304, 307, 315, 318, 322, 323, 336, 366, 387], "als2004dataset": [17, 19, 24, 309, 310], "also": [6, 8, 13, 17, 19, 22, 27, 38, 42, 46, 50, 60, 63, 67, 74, 86, 91, 94, 95, 97, 99, 100, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 123, 128, 151, 163, 187, 190, 216, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 304, 307, 309, 311, 312, 313, 314, 315, 318, 319, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 338, 382, 385, 388, 389], "alt": 324, "alter": [2, 328], "altern": [19, 70, 79, 93, 105, 106, 109, 115, 187, 206, 303, 305, 309, 323, 325, 328, 333, 338], "although": 91, "alwai": [4, 6, 8, 91, 95, 96, 97, 104, 106, 110, 114, 224, 274, 286, 304, 307, 310, 314, 323, 325, 328], "amax": [97, 106, 126, 192, 195], "ambigu": 325, "amend": 2, "amic": 2, "amin": [97, 106, 125, 192, 195], "among": [79, 95, 96, 97, 98, 102, 103, 106, 151, 196, 216, 270, 303, 311], "amount": [6, 22, 112, 149, 156, 174, 196, 303, 328, 332], "amp": 314, "ampl": [30, 75, 133, 169, 190, 224, 264, 287, 307], "amplitud": [111, 307, 319, 328], "amplitude_mod": 111, "amsterdam": 20, "an": [1, 2, 6, 8, 9, 18, 19, 20, 30, 36, 39, 41, 44, 46, 47, 48, 56, 74, 75, 76, 79, 85, 86, 90, 91, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 145, 149, 150, 151, 154, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 179, 180, 191, 192, 195, 196, 203, 204, 207, 208, 214, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 265, 268, 269, 270, 271, 272, 274, 277, 278, 280, 281, 282, 284, 285, 286, 289, 290, 292, 294, 295, 296, 297, 298, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 323, 324, 325, 326, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340, 343, 385, 387, 390, 391, 396], "an1": 319, "an2": 319, "ana": 93, "anaconda": [84, 360], "anal": 338, "analys": [91, 309, 314], "analysi": [1, 14, 15, 17, 19, 20, 22, 24, 25, 27, 30, 72, 73, 75, 76, 77, 82, 84, 93, 97, 98, 99, 100, 102, 103, 105, 106, 109, 111, 112, 117, 118, 156, 161, 162, 207, 229, 239, 248, 269, 303, 305, 306, 307, 309, 313, 321, 323, 331, 353, 383, 387, 389, 390, 391], "analyt": 93, "analytica": [93, 331], "analyticalsciencejourn": 93, "analyz": [0, 90, 92, 162, 323], "anamysi": 112, "andrea": 93, "ang": 2, "angle3": 311, "ani": [2, 5, 6, 10, 12, 50, 83, 86, 87, 89, 91, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 124, 125, 126, 128, 134, 140, 151, 187, 192, 195, 207, 257, 258, 265, 268, 273, 289, 303, 309, 311, 315, 318, 322, 323, 324, 328, 329, 331, 385], "anim": 328, "anna": 93, "annal": 22, "annemi": 93, "annex": 2, "annot": [74, 75, 112, 311, 321], "anomal": 150, "anoth": [54, 66, 67, 97, 106, 153, 182, 310, 313, 325, 328, 331, 337, 340], "ansorb": 38, "answer": [331, 337], "antialias": 328, "anyio": 6, "anymor": 384, "anyth": 328, "anytim": 328, "apcatb": [93, 305], "apf": 319, "api": [10, 12, 17, 19, 21, 22, 23, 24, 27, 42, 47, 79, 82, 83, 87, 89, 90, 91, 92, 97, 106, 168, 303, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 321, 325, 327, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 343, 345, 353, 358, 365, 378, 396], "apod": [59, 60, 61, 82, 136, 138, 156, 161, 170, 174, 175, 176, 179, 227, 267, 271, 285, 306, 319, 321, 333, 334, 335, 374], "apod_arr": [136, 138, 156, 170, 174, 175, 176, 271, 285], "app": 338, "appar": [66, 332], "appear": [42, 74, 79, 154, 303, 318, 329], "append": [4, 74, 106, 108, 115, 325, 338], "appl": 328, "appli": [2, 6, 8, 23, 38, 58, 59, 60, 70, 72, 75, 79, 90, 93, 96, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 136, 138, 140, 141, 142, 145, 149, 150, 156, 161, 165, 166, 170, 174, 175, 176, 179, 191, 206, 207, 208, 253, 255, 258, 259, 268, 271, 273, 285, 289, 305, 309, 311, 323, 325, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 389, 395], "applic": [2, 76, 91, 93, 94, 97, 106, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 303, 304, 309, 323, 325, 326, 331, 338, 345], "approach": [63, 91, 93, 96, 305, 334, 343, 396], "appropri": [6, 83, 86, 106, 162, 325], "approxim": [20, 95, 100, 104, 109, 110, 265, 284, 311], "apt": [5, 84, 88, 319], "aq": [271, 330], "aqm": 319, "ar": [0, 1, 2, 3, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 38, 46, 50, 54, 59, 67, 74, 75, 76, 79, 82, 83, 86, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 131, 134, 135, 137, 139, 150, 151, 152, 154, 160, 161, 162, 163, 164, 170, 171, 172, 182, 186, 189, 192, 194, 195, 196, 206, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 258, 259, 265, 268, 270, 271, 274, 275, 279, 286, 303, 304, 307, 308, 309, 310, 311, 312, 313, 315, 318, 319, 322, 323, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "arang": [16, 95, 97, 106, 135, 163, 168, 171, 189, 204, 298, 310, 325, 336, 337], "arbitrari": [95, 100, 106, 157, 224, 307, 329, 391], "arbitrarili": [104, 110, 114], "arc3": 328, "archiv": [27, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 320], "area": [47, 74, 76, 105, 106, 111, 113, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 312], "arg": [4, 98, 105, 106, 112, 115, 117, 120, 133, 148, 159, 169, 180, 190, 206, 224, 264, 265, 266, 287, 288, 291, 292, 293, 294, 295, 296, 319, 338], "argmax": [97, 106, 125, 126, 192, 195, 303, 313], "argmin": [97, 106, 125, 126, 192, 195], "argnam": 115, "argsgetconc": [20, 105], "argsgetspec": 105, "argument": [6, 17, 19, 21, 31, 42, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 122, 123, 128, 140, 154, 171, 186, 189, 197, 198, 199, 200, 201, 202, 206, 213, 217, 218, 219, 223, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 307, 313, 314, 318, 325, 328, 336, 338, 345, 355, 382, 389, 395], "ari": 93, "aris": [2, 321, 325], "arithmet": [90, 97, 106, 135, 171, 194, 274, 275, 286, 325], "armin": 93, "arnaud": [0, 1, 93], "around": [6, 97, 101, 106, 150, 254, 258, 268, 323, 325, 328, 332, 335, 340], "arpack": 112, "arr": 6, "arrai": [6, 8, 16, 20, 23, 31, 36, 39, 42, 74, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 128, 135, 136, 138, 139, 141, 142, 146, 147, 152, 153, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 186, 189, 192, 194, 195, 196, 203, 204, 206, 211, 212, 228, 230, 231, 233, 237, 238, 252, 258, 259, 268, 271, 272, 274, 275, 277, 279, 280, 281, 285, 286, 289, 297, 298, 300, 301, 303, 304, 313, 315, 318, 325, 327, 329, 334, 335, 337, 345, 387, 390], "arrang": [2, 196, 337], "array_lik": [95, 97, 106, 124, 125, 126, 127, 135, 139, 141, 142, 146, 151, 152, 186, 189, 192, 194, 195, 274, 275, 286], "arrheniu": 95, "arrow": 90, "arrowprop": [311, 328], "arrowstyl": [311, 328], "art": 2, "articl": [2, 93, 305, 328], "artifact": [90, 328, 339], "artifici": 336, "arxiv": 93, "asc": [241, 346], "ascend": 337, "asfortranarrai": 106, "asg": 319, "asi": 338, "ask": 83, "asl": [8, 63, 79, 96, 137, 151, 172, 269, 303, 331, 389], "aspect": 321, "ass": 319, "assert": [4, 6, 15, 31, 106, 108, 115], "assert_array_equ": 6, "assert_dataset_equ": 6, "assess": 311, "assign": [27, 230, 315, 325, 337], "assist": 2, "associ": [2, 98, 106, 115, 135, 303, 311], "assum": [15, 47, 54, 74, 90, 95, 96, 98, 106, 135, 156, 174, 229, 239, 240, 259, 261, 310, 319, 323, 325, 329, 336], "assumpt": 112, "assymetri": 63, "asterisk": 324, "astyp": [6, 97, 106, 333], "asym": [30, 133, 264, 307], "asymmetr": [63, 93, 96, 132, 133, 137, 151, 172, 269, 303, 307, 331], "asymmetri": [63, 79, 96, 132, 331], "asymmetricvoigtmodel": [30, 307], "async_": 338, "async_help": 338, "asyncio": 338, "asyncio_loop": 338, "atleast_2d": 106, "atmospher": [93, 305], "atol": 95, "atom": 93, "atomiqu": 2, "atr": [93, 240, 305, 319], "attach": [2, 10, 324], "attack": 2, "attempt": [154, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 318, 323, 325], "attent": 2, "attr": [315, 318], "attribut": [2, 15, 18, 22, 23, 37, 38, 54, 63, 79, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 133, 169, 190, 224, 258, 264, 268, 279, 287, 289, 309, 310, 311, 313, 318, 319, 326, 327, 328, 329, 331, 335, 343, 369, 374, 383, 385, 395, 396], "att\u00e9nuat": [315, 318], "aug": 93, "augment": 308, "authent": 2, "author": [0, 2, 6, 18, 20, 22, 23, 36, 39, 42, 44, 46, 54, 60, 74, 75, 76, 90, 106, 309, 310, 312, 314, 315, 317, 318, 319, 323, 325, 327, 330, 333, 336, 337, 340], "auto": [6, 106, 112, 123, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 328], "auto_examples_analysi": [25, 28, 32, 34], "auto_examples_cor": [40, 48, 52, 55, 57], "auto_examples_process": [61, 64, 68, 71, 77, 80, 81], "autoampl": 111, "autobas": [30, 111, 307], "autohint": 328, "autolayout": [309, 310, 328], "autom": [6, 18, 308], "automarkeredgewidth": 328, "automarkers": 328, "automat": [2, 6, 22, 24, 42, 91, 95, 96, 97, 102, 106, 111, 115, 123, 132, 134, 137, 149, 151, 162, 172, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 269, 273, 293, 307, 311, 315, 325, 327, 328, 331, 333, 335, 352, 369, 371, 378, 385, 387], "automatiqu": 2, "automobil": [93, 305], "autoposit": 328, "autoscal": [30, 75, 307], "autosub": [96, 132, 137, 151, 172, 269], "avail": [2, 4, 27, 30, 50, 67, 74, 75, 90, 101, 106, 114, 155, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 282, 293, 315, 319, 325, 328, 329, 331, 332, 343, 385, 389, 391, 396], "available_nam": 98, "available_styl": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "avant": 328, "averag": [100, 101, 106, 109, 150, 194, 196, 265, 268, 274, 286, 328, 334], "avers": 91, "avg": [101, 106, 135, 265, 268, 338], "avoid": [6, 42, 75, 83, 98, 105, 311, 314, 315, 330, 336, 337, 354, 382], "await": 338, "awar": [106, 162, 258, 304, 325, 326, 327, 329, 369], "ax": [4, 18, 21, 22, 23, 27, 30, 51, 63, 70, 74, 75, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 124, 125, 127, 192, 196, 202, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 307, 309, 310, 311, 313, 318, 325, 328, 331, 333, 335, 336, 337, 338, 340, 355], "ax1": 328, "axe21": 331, "axec": 106, "axect": 106, "axei": 106, "axes3d": 23, "axes3d_grid": 328, "axes_autolimit_mod": 328, "axes_axisbelow": 328, "axes_edgecolor": 328, "axes_facecolor": 328, "axes_formatter_limit": 328, "axes_formatter_offset_threshold": 328, "axes_formatter_use_local": 328, "axes_formatter_use_mathtext": 328, "axes_formatter_useoffset": 328, "axes_grid": 328, "axes_grid_axi": 328, "axes_grid_which": 328, "axes_labelcolor": 328, "axes_labelpad": 328, "axes_labels": 328, "axes_labelweight": 328, "axes_linewidth": 328, "axes_prop_cycl": 328, "axes_spines_bottom": 328, "axes_spines_left": 328, "axes_spines_right": 328, "axes_spines_top": 328, "axes_titlei": 328, "axes_titlepad": 328, "axes_titles": 328, "axes_titleweight": 328, "axes_unicode_minu": 328, "axes_xmargin": 328, "axes_ymargin": 328, "axessubplot": 337, "axex": 106, "axhlin": 311, "axi": [4, 8, 15, 19, 20, 30, 36, 39, 43, 47, 75, 90, 97, 98, 100, 101, 106, 112, 116, 123, 124, 127, 129, 130, 134, 135, 136, 138, 140, 143, 144, 145, 146, 149, 156, 161, 165, 166, 170, 174, 175, 176, 179, 181, 191, 194, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 253, 255, 258, 265, 268, 270, 271, 273, 274, 275, 276, 284, 285, 286, 289, 307, 309, 310, 316, 325, 328, 331, 335, 336, 337, 338, 340, 347, 391], "axisscal": 315, "axrrai": [106, 282], "axt": 106, "axvlin": [74, 311], "az805": [18, 22, 23, 42, 44, 46, 54, 60, 74, 75, 76, 90, 309, 310, 312, 315, 317, 318, 319, 323, 325, 327, 330, 333, 336, 337, 340], "azzolina": 93, "b": [0, 2, 5, 15, 20, 46, 50, 59, 60, 70, 79, 91, 93, 95, 97, 106, 116, 121, 122, 133, 134, 140, 154, 228, 231, 233, 240, 273, 307, 314, 315, 318, 324, 325, 328, 330, 338], "b1": [2, 50], "b2": [16, 50], "b3": 50, "b350": 54, "b3end": 319, "b4": 50, "b978": 93, "b9780444527011000478": 93, "b_1": 95, "b_crossdecomposit": [28, 306], "b_ev": [15, 16, 99], "b_n": 95, "ba": 79, "back": [38, 97, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 163, 314, 319, 324, 328, 330], "backend": [328, 367], "background": [93, 230, 232, 234, 240, 242, 243, 247, 315, 318, 319, 328, 367], "backgroung": [232, 234, 242, 243], "backslash": 315, "backtick": 8, "backward": [15, 16, 95, 99, 318, 319, 328, 337, 389], "bad": [114, 319, 387], "badli": [67, 332], "bai": 311, "balan": 93, "balanc": 338, "banc": [315, 318], "band": 335, "bar": [13, 17, 100, 106, 112, 209, 210, 211, 212, 213, 214, 215, 220, 328, 366], "bare": 6, "barrier": [93, 305], "bartlett": [101, 156, 170, 174, 227, 266, 267, 268, 271, 285, 338], "basc": [63, 96, 132, 151, 172, 269, 307, 334, 351, 389], "base": [1, 2, 3, 16, 63, 74, 85, 86, 93, 95, 96, 97, 99, 106, 112, 132, 150, 162, 171, 184, 189, 205, 209, 210, 211, 212, 214, 215, 220, 229, 258, 268, 280, 289, 305, 310, 311, 313, 315, 318, 323, 328, 331, 332, 333, 336, 338, 346, 389, 390, 391], "base64": [100, 105], "base_ev": 338, "basearrai": 327, "baseconfigur": [96, 99, 100, 101, 102, 104, 105, 109, 110, 112, 114, 117, 118], "basefileselector": 384, "baseformatt": 327, "baselin": [8, 64, 67, 73, 74, 77, 82, 91, 93, 106, 111, 132, 134, 137, 147, 151, 162, 172, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 239, 248, 269, 303, 306, 312, 318, 321, 323, 332, 334, 345, 348, 350, 351, 352, 389], "baselinecorrect": 389, "baselinecorrector": 367, "baselineprocess": [63, 79], "bash": 84, "basi": [2, 6, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 303], "basic": [4, 5, 50, 63, 66, 90, 91, 162, 314, 316, 321, 323, 325, 328, 331, 334], "basinhop": 111, "bastl": 93, "bat": 89, "batch": 89, "bazin": 93, "bbox": [311, 328], "bbw": 319, "bd": 79, "bdash_capstyl": 328, "bdf": 95, "beam": 93, "beamsplittervalu": 319, "beata": 93, "becaus": [91, 104, 106, 110, 114, 124, 311, 318, 322, 325, 328, 329, 337, 338, 343, 396], "becom": [2, 106, 139, 336], "been": [1, 2, 11, 12, 18, 42, 47, 74, 97, 98, 106, 153, 177, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 309, 311, 317, 318, 323, 325, 327, 328, 330, 331, 333, 335, 336, 337, 340, 343, 347, 365, 369, 385, 387, 389, 390, 391, 395, 396], "befor": [6, 8, 12, 79, 83, 85, 91, 96, 97, 100, 105, 106, 109, 114, 125, 126, 135, 136, 138, 156, 170, 174, 175, 176, 192, 195, 209, 211, 212, 214, 215, 220, 221, 222, 259, 271, 274, 285, 286, 309, 313, 318, 319, 323, 324, 328, 330, 331, 333, 335, 337, 338, 339, 348, 383], "begin": [74, 307], "beginn": 323, "behav": [307, 325, 327], "behavior": [12, 19, 97, 106, 314, 315, 325, 345, 358, 369, 379, 387, 395], "behaviour": [271, 314, 330, 364, 391], "behind": 2, "bei": [315, 318], "being": [2, 31, 106, 272, 311], "belarra": 93, "bell": [58, 61, 72, 106, 227, 248, 267, 271, 306, 330, 338], "belong": [96, 331], "below": [30, 75, 97, 106, 152, 189, 224, 271, 274, 286, 304, 307, 309, 311, 312, 314, 315, 318, 322, 325, 328, 330, 331, 336, 338, 393], "benefici": [95, 343, 396], "benefit": 91, "benzen": [4, 245], "bernstein": 93, "bert": 93, "besid": [2, 314, 338], "best": [2, 50, 51, 60, 63, 70, 74, 86, 104, 110, 114, 151, 307, 310, 312, 328, 338], "beta": [109, 319], "beta_loss": 109, "better": [12, 20, 22, 50, 63, 74, 79, 85, 96, 109, 132, 311, 313, 326, 328, 331, 332, 338, 345, 393], "between": [2, 22, 23, 67, 90, 95, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 118, 123, 128, 132, 150, 162, 186, 189, 196, 216, 230, 309, 311, 312, 326, 328, 337, 338, 339, 342], "bevel": 328, "bewar": 328, "beyond": [317, 337, 338], "beyramysoltan": 93, "bfw": 319, "bhat": 93, "bibtex": 0, "bidimension": 112, "big": [45, 325], "bijlsma": [20, 93], "bilinear": 328, "billion": 318, "bin": [5, 84, 87, 88, 328], "binari": [2, 106, 115, 187, 304, 318, 325, 326, 329, 330, 333, 334], "binaryio": [106, 115, 187], "bind": 2, "biomol": 1, "biosystem": 20, "black": [31, 50, 74, 75, 307, 311, 328], "blackman": [101, 138, 268, 338], "blackmanharri": [156, 170, 174, 227, 266, 267, 271, 285], "blake": [36, 39, 325], "blal": [1, 93, 305, 314], "blank": [8, 47, 196, 324, 328], "blc": [63, 79, 90, 312, 331], "bld": 319, "blend": 114, "blob": 47, "block": [30, 75, 91, 307, 324], "blue": [50, 309, 311, 324, 328], "bm": [319, 328], "bmh": [328, 329], "bodi": 338, "boelen": [63, 93, 96, 132], "bogaert": 93, "bokeh": 3, "bokhoven": 93, "bold": [324, 328], "bolder": 328, "bole": 93, "bookman": 328, "bool": [8, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 120, 123, 124, 125, 126, 127, 134, 136, 138, 145, 154, 156, 161, 162, 165, 166, 170, 171, 174, 175, 176, 179, 183, 186, 189, 191, 192, 194, 195, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 270, 271, 272, 274, 275, 276, 278, 280, 281, 283, 285, 286, 299, 300, 301, 302, 337], "boolean": [96, 100, 106, 120, 124, 127, 336], "border": [311, 328], "both": [2, 5, 16, 19, 27, 96, 98, 105, 106, 114, 161, 170, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 303, 309, 310, 312, 313, 318, 325, 328, 329, 331, 332, 333, 338, 388], "bottom": [79, 82, 196, 328], "bound": 387, "boundari": [114, 328, 338], "boussard": 93, "box": [230, 311, 328, 395], "boxstyl": 311, "bp": [2, 331], "br": [315, 318, 324], "brace": 8, "bracket": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 325], "braga": 93, "braket": 239, "branch": [5, 105], "braun": [133, 307], "breach": 2, "break": [6, 331, 364], "breakag": 6, "breakpoint": [96, 151, 331], "brew": [5, 84, 88], "brian": 315, "brief": [311, 328], "bright": [328, 329], "broad": 2, "broadcast": [97, 106, 124, 125, 126, 127, 139, 192, 194, 195, 226, 274, 275, 286, 329, 336], "broaden": [59, 156, 174, 332, 334], "broken": 352, "brought": 2, "brown": 93, "brows": 90, "browser": [86, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "bruker": [41, 45, 48, 56, 59, 60, 74, 75, 76, 106, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 271, 306, 315, 316, 320, 325, 327, 330, 333, 339, 345], "brukeropu": [1, 319, 395], "brukeropusread": 395, "bsd": [1, 91], "bsd3": 177, "bug": [1, 5, 12, 83, 91, 314, 318, 337, 365], "build": [5, 6, 11, 18, 319, 352, 359, 378, 381], "builder": 9, "built": [8, 12, 74, 76, 90], "builtin": 338, "bunch": 95, "bureau": 319, "busi": 2, "buten": [93, 305], "butt": 328, "buttdash_joinstyl": 328, "button": 13, "byte": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "bytesio": [106, 115, 187], "b\u00f6r": 93, "c": [1, 2, 16, 19, 20, 21, 24, 27, 31, 43, 50, 60, 67, 74, 79, 84, 85, 87, 89, 90, 93, 94, 95, 97, 98, 99, 100, 102, 105, 106, 109, 112, 114, 117, 118, 140, 154, 165, 166, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 253, 273, 303, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 345, 383, 384], "c0": [20, 36, 39, 97, 309, 325], "c1": [15, 36, 39, 97, 325], "c2": [15, 36, 39], "c3": 15, "c3cp51146d": 93, "c_": [20, 105], "c_0": 309, "c_10": 224, "c_2": [224, 307], "c_3": [224, 307], "c_4": [224, 307], "c_5": 224, "c_6": 224, "c_7": 224, "c_8": 224, "c_9": 224, "c_constrain": [20, 105], "c_constrained_list": 105, "c_curvefit": [32, 306], "c_exp": 95, "c_i": [224, 307], "c_import": [48, 306], "c_l": 105, "c_ls_list": 105, "c_name": 95, "c_pressur": [18, 37], "c_t": 105, "c_time": [18, 37], "c_wavelength": 37, "c_wavenumb": 37, "ca": [103, 155, 331], "cadmium": 339, "caen": 1, "calc": 311, "calcul": [16, 31, 38, 79, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 121, 122, 135, 136, 138, 146, 150, 156, 161, 162, 170, 172, 174, 175, 186, 193, 224, 225, 271, 274, 275, 285, 286, 307, 311, 325, 334, 335, 336, 337], "calibr": [27, 313], "call": [2, 6, 22, 89, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 163, 168, 187, 229, 239, 278, 303, 310, 313, 315, 318, 319, 323, 324, 327, 331, 335, 336, 338, 343, 377, 383, 395, 396], "callabl": [95, 97, 100, 103, 105, 106, 163, 206], "callback": 111, "callback_everi": 111, "callegaro": 93, "can": [1, 2, 6, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 83, 85, 86, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 135, 139, 140, 141, 142, 150, 151, 153, 155, 158, 162, 168, 186, 187, 192, 195, 204, 218, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 258, 261, 268, 273, 274, 278, 286, 289, 298, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 350, 351, 355, 371, 376, 377, 391, 393, 395], "cancel": 2, "cannot": [22, 38, 45, 91, 97, 106, 109, 115, 116, 278, 309, 311, 314, 318, 319, 324, 325, 327, 328, 329, 336, 339, 340], "cantera": [6, 352, 359, 393], "cap": 328, "capabl": [90, 92, 106, 304, 325, 326, 328, 331], "capit": 2, "caption": 324, "captur": [93, 303, 305], "care": [6, 67, 97, 106, 128, 332], "carefulli": [74, 324], "cargil": 27, "carlson": 93, "carmen": 93, "carolin": 93, "carri": [2, 117, 303, 309, 325], "carriag": 324, "carrier": 93, "carroucel": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 303], "carroucell_samp": 230, "carrousel": 315, "casali": 93, "case": [2, 4, 6, 22, 36, 39, 42, 74, 75, 90, 91, 95, 96, 97, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 124, 127, 128, 134, 135, 170, 171, 186, 189, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 303, 307, 311, 312, 314, 315, 318, 319, 322, 323, 325, 331, 332, 333, 335, 338, 340, 388], "cast": [6, 97, 104, 106, 110, 336], "castillejo": 93, "catal": 93, "catalys": 1, "catalysi": [93, 305], "catalyst": [18, 93, 305, 311], "catalyt": [93, 305], "catch": [134, 311, 314], "categor": 314, "categori": [83, 308], "catherin": 93, "cauchi": [190, 307], "caught": 314, "caus": [2, 6, 106, 274, 286, 314, 328], "caution": [106, 157], "cc79a7": 328, "ccount": [309, 310, 328], "ccurr": 105, "cd": [5, 88, 89, 94, 109, 322], "cdot": [100, 105, 303, 384], "ce": 2, "cea": 2, "cecil": [0, 2, 91, 314], "cedex": 2, "ceil": [97, 106, 131, 254], "cell": [18, 37, 86, 93, 303, 305, 314, 315, 322, 324, 331, 343, 396], "cell_nam": 338, "cem": 93, "center": [18, 22, 23, 104, 110, 311, 328, 353], "centerednorm": 328, "centimet": 311, "centr": [2, 93], "central": [328, 338], "centuri": 328, "certain": 328, "certainli": [315, 323], "cexp": 95, "cfbruker": [271, 330], "chain": [106, 206, 309], "chanc": 338, "chanceri": 328, "chang": [11, 15, 18, 19, 20, 37, 38, 43, 54, 63, 74, 90, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 183, 186, 233, 258, 268, 278, 289, 309, 311, 314, 315, 317, 318, 321, 325, 327, 331, 334, 336, 338, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 386, 388, 389, 390, 392, 394], "changelog": [4, 6, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "channel": [18, 83, 87, 240, 241, 319, 360], "char": [97, 98, 307, 315], "charact": [315, 324, 327], "character_cod": 328, "characterist": [2, 79, 323], "charg": 2, "charlott": 93, "charter": 328, "check": [6, 17, 21, 51, 63, 83, 84, 85, 87, 89, 90, 91, 97, 106, 108, 111, 115, 116, 120, 139, 182, 241, 258, 270, 303, 311, 319, 323, 325, 327, 331, 360, 361, 369, 372, 381], "check_upd": 364, "checkout": 5, "chellaboina": [93, 95], "chem": [93, 338], "chemic": [85, 91, 93, 95, 102, 103, 305], "chemistri": [0, 92, 93, 314], "chemolab": [93, 309, 310], "chemometr": [16, 24, 93, 323], "chemrxiv": [93, 305], "chen": 93, "chesnai": 2, "chevali": 93, "chimica": [93, 331], "chn": 319, "choic": [3, 8, 63, 95, 310], "choos": [2, 70, 83, 86, 311, 322, 323, 331, 338], "chosen": [67, 84, 103, 106, 149, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 303, 332], "christian": [0, 1, 93], "chromatograph": 93, "chromatographi": 93, "chrome": 86, "ci": 352, "circular": [145, 324], "circumcircl": 102, "circumst": 2, "citat": 91, "cite": [102, 332, 352], "ckin": 20, "cl": [97, 106, 115, 116, 163, 186, 187, 189], "claim": [2, 323], "clariti": [309, 310, 331], "class": [8, 9, 35, 56, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 127, 132, 133, 137, 151, 169, 172, 187, 190, 224, 229, 239, 264, 269, 287, 304, 308, 309, 315, 318, 324, 325, 331, 343, 387, 389, 391, 396], "classic": [22, 51, 97, 106, 188, 309, 315, 328, 329, 331, 337], "classif": 22, "classmethod": [106, 115, 116, 168, 229, 239], "clayton": 93, "clean": [9, 96, 205, 345, 380], "clear": [9, 20, 27, 30, 31, 59, 60, 63, 67, 70, 74, 75, 79, 106, 114, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 309, 311, 313, 328, 330, 331, 332, 333, 335, 338, 340], "clearli": [6, 309, 310, 331, 332, 338], "clet": 1, "click": [6, 13, 83, 90, 91, 322], "client": 5, "climat": 354, "clip": 106, "clock": 230, "clone": [5, 6, 13, 86, 88], "close": [8, 30, 95, 97, 106, 186, 303, 311, 312, 331, 335, 338, 389], "close_figur": 106, "closer": [162, 331], "closest": [94, 161, 179, 337, 338], "closur": [93, 105, 303], "closureconc": 105, "closuremethod": 105, "closuretarget": 105, "cloud": [86, 360], "cm": [17, 18, 20, 23, 36, 37, 38, 39, 42, 44, 46, 74, 90, 97, 106, 135, 194, 239, 265, 284, 307, 311, 312, 315, 317, 318, 319, 325, 328, 331, 335, 337, 338, 340], "cmap": [20, 27, 50, 114, 309, 313, 328, 331, 376, 382], "cmd": 89, "cnm": 319, "cnr": 2, "co": [18, 37, 42, 90, 93, 170, 175, 176, 305, 311, 317, 318, 337], "co2": 93, "cobalt": [93, 305], "coca": [93, 305], "code": [1, 2, 4, 5, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 83, 86, 91, 304, 319, 322, 324, 325, 334, 338, 343, 354, 378, 380, 396], "code_ast": 338, "code_obj": 338, "codeclim": [352, 357], "coef": [31, 104, 110, 134, 307], "coeffici": [93, 104, 110, 114, 134, 170, 338], "coerc": 336, "coher": 2, "col": 196, "colab": [84, 346, 352, 372, 384, 393], "colaboratori": [84, 361, 372], "cold": [36, 39, 325], "collaps": 395, "collect": [6, 98, 239, 303, 374], "collection_length": 374, "collis": 328, "colomap": 328, "colon": [327, 337], "color": [31, 50, 59, 60, 63, 70, 74, 75, 79, 96, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 196, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 307, 309, 311, 328, 330, 331, 338, 345, 382], "color_map": [22, 112], "colorbar": [18, 37, 74, 90, 106, 196, 209, 211, 212, 214, 215, 220, 221, 222, 311, 312, 328, 329, 336, 340], "colorblind": [96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 328, 329], "colorblind10": [328, 329], "colormap": [17, 21, 50, 74, 90, 96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 311, 312, 328, 329, 331, 336, 340, 391], "colorscal": 345, "colorspec": 328, "column": [15, 19, 20, 21, 23, 47, 75, 95, 106, 112, 154, 160, 178, 196, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 303, 309, 310, 328, 337, 340], "columnwis": 309, "com": [5, 27, 42, 47, 84, 86, 88, 93, 309, 313, 315, 324, 331, 338, 385, 395], "combin": [93, 109, 305, 328], "come": [2, 97, 106, 226, 307, 314, 315, 318], "comfort": 322, "comma": [315, 327, 328, 337], "command": [15, 36, 39, 83, 84, 86, 89, 91, 94, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 314, 320, 322, 328, 331, 339, 393], "commenc": 2, "comment": [6, 12, 17, 30, 74, 75, 76, 79, 106, 307, 325], "commerci": [2, 91], "commissariat": 2, "commit": [2, 5, 11, 342], "common": [6, 30, 75, 90, 106, 170, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 318, 325, 329], "commonli": [118, 287, 307], "commonratio": 75, "commonwidth": 75, "commun": [2, 12, 83, 90, 91, 93], "como": [311, 318], "compact": 116, "compani": 91, "compar": [6, 15, 19, 20, 27, 97, 106, 150, 182, 309, 313, 317, 328, 331, 333, 335, 338, 353], "comparison": [6, 63, 66, 310, 329, 332, 334, 345, 348, 351], "comparti": 319, "compartmentdetector": 319, "compartmentextend": 319, "compat": [2, 42, 91, 97, 98, 103, 106, 116, 120, 123, 140, 182, 205, 207, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 273, 304, 309, 315, 318, 319, 325, 326, 328, 329, 340, 345, 352, 353, 360, 361, 368, 372, 373, 376, 379, 384, 389, 391, 393, 395], "compens": 2, "compil": 2, "complet": [4, 8, 83, 90, 91, 97, 105, 106, 111, 114, 163, 318, 325, 331, 378], "complex": [6, 60, 74, 75, 76, 97, 106, 121, 122, 125, 131, 161, 162, 192, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 254, 259, 274, 286, 307, 325, 326, 327, 330, 333, 334, 390], "complex128": [6, 60, 74, 76, 97, 106, 182, 327, 330, 333, 336], "complex64": 333, "complexwarn": 6, "compli": 2, "complianc": 2, "complic": 2, "compon": [2, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 63, 75, 84, 91, 95, 96, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 149, 177, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 303, 307, 308, 309, 313, 315, 321, 331], "components_": 112, "compos": [74, 116, 318], "composit": [106, 113, 146, 265, 275, 284, 303, 328], "compound": [16, 93, 97, 106, 116, 117, 155, 185, 281, 305], "comprehens": [92, 93, 321], "compress": [42, 96, 106, 115, 385], "compris": [2, 311], "compui": [99, 100, 105, 109, 111, 112, 114, 117, 118], "comput": [2, 18, 19, 20, 22, 84, 86, 93, 95, 96, 99, 100, 101, 105, 106, 109, 111, 112, 114, 116, 117, 118, 132, 135, 137, 146, 151, 154, 162, 172, 194, 258, 269, 274, 275, 286, 309, 310, 311, 315, 325, 328, 331, 336, 338], "compute_uv": 118, "concaten": [16, 42, 44, 74, 273, 309, 310, 315, 318, 319, 323, 370, 391], "concent": 303, "concentr": [15, 16, 19, 20, 21, 24, 95, 99, 102, 105, 113, 117, 303, 352], "concept": [311, 337], "concern": [2, 91], "concis": [8, 9, 395], "conda": [83, 87, 88, 346, 352, 371, 374], "condid": 331, "condit": [2, 20, 95, 109, 112, 154, 314, 390, 391], "config": [87, 90, 94, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 379], "configfil": 6, "configur": [2, 4, 85, 90, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 307, 310, 311, 312, 313, 315, 317, 318, 319, 321, 323, 325, 327, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 345, 352, 372, 379, 389], "confirm": [22, 317, 366], "conflict": [2, 98], "conform": 2, "confus": [106, 311, 318], "conj": [106, 142, 336], "conjug": [106, 141, 336], "connect": [2, 6, 86, 364, 385], "connectionstyl": [311, 328], "consecut": [97, 150, 336], "consequenti": 2, "consid": [6, 16, 95, 100, 102, 105, 154, 162, 309, 311, 331, 332, 338], "consider": [2, 91], "consist": [6, 9, 27, 96, 97, 101, 106, 186, 309, 313, 328, 331, 391], "consol": 379, "constant": [20, 74, 79, 93, 95, 96, 97, 101, 104, 106, 109, 110, 114, 151, 171, 207, 208, 258, 260, 268], "constantli": 323, "constantsum": 105, "constitu": 2, "constitut": 2, "constrain": [105, 246, 247], "constraint": [14, 25, 33, 93, 95, 97, 99, 105, 106, 111, 135, 229, 303, 306, 308, 309, 373, 384], "construct": [6, 97, 106, 152, 153, 163, 164, 287, 307], "constructor": [17, 21, 97, 106, 153, 160, 163, 164, 178, 304, 326, 355], "contact": 74, "contain": [2, 6, 8, 19, 20, 27, 35, 41, 42, 45, 49, 53, 54, 56, 58, 62, 65, 69, 72, 73, 90, 91, 95, 96, 97, 98, 100, 103, 106, 109, 112, 113, 115, 118, 119, 131, 135, 146, 150, 151, 162, 194, 205, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 274, 275, 286, 307, 309, 310, 311, 313, 315, 318, 319, 322, 325, 327, 330, 331, 351, 385, 392, 395], "conten": 140, "content": [11, 27, 42, 46, 90, 106, 115, 119, 187, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 309, 310, 313, 315, 322, 326, 337, 385], "content1": 239, "content2": 239, "context": [8, 93, 97, 116, 120, 257, 261, 303, 305, 315, 322], "contextlib": 314, "contigu": 154, "continu": [11, 30, 93, 106, 228, 305, 307, 309], "contour": [36, 39, 46, 106, 196, 209, 210, 211, 212, 214, 215, 220, 311, 328], "contour_alpha": 328, "contour_corner_mask": 328, "contour_negative_linestyl": 328, "contour_start": 328, "contrain": 244, "contrast": 304, "contribut": [1, 2, 11, 12, 88, 92, 102, 106, 135], "contributor": [2, 6, 106, 314], "control": [63, 79, 93, 95, 196, 265, 315, 328], "conveni": [6, 19, 20, 36, 39, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 309, 310, 318, 325], "convenin": 331, "convent": [5, 8, 36, 39, 96, 106, 205, 314, 325, 338], "converg": [19, 20, 21, 100, 105, 114, 117, 309], "convergencewarn": 21, "convers": [38, 94, 95, 97, 106, 278, 317, 325, 334, 335, 387], "convert": [96, 97, 106, 115, 116, 120, 121, 122, 124, 125, 126, 127, 139, 141, 142, 187, 192, 195, 278, 282, 313, 315, 327, 336, 338, 340, 387], "convert_to_html": 327, "convex": [93, 150], "convolut": [101, 268, 287, 307, 334], "coord": [4, 8, 16, 18, 20, 31, 36, 37, 38, 39, 54, 75, 90, 94, 98, 103, 106, 113, 115, 123, 134, 135, 163, 194, 241, 270, 304, 307, 310, 311, 318, 325, 326, 337, 345, 347, 387], "coord0": [36, 39, 98, 325], "coord1": [36, 39, 98, 325], "coord1b": [98, 325], "coord2": [36, 39, 98, 325], "coord_pc": 24, "coordin": [3, 4, 15, 16, 19, 20, 21, 23, 31, 35, 38, 40, 42, 44, 46, 50, 56, 60, 74, 75, 76, 79, 90, 96, 97, 98, 106, 109, 123, 125, 126, 143, 151, 153, 157, 158, 162, 163, 164, 167, 168, 192, 195, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 248, 258, 270, 297, 298, 306, 307, 309, 310, 311, 312, 315, 317, 318, 319, 326, 327, 328, 329, 330, 331, 333, 334, 338, 340, 345, 348, 350, 353, 360, 388, 390, 391], "coordmax": 106, "coordmin": 106, "coordnam": 106, "coordrang": 358, "coordset": [18, 31, 36, 37, 39, 74, 97, 106, 115, 157, 158, 160, 163, 167, 168, 178, 203, 204, 297, 298, 304, 307, 325, 391], "coordset_55366a75": 325, "coordset_55b08848": 325, "coordset_d1deeadf": 37, "coordset_d31e41f": 37, "coordset_fe433096": 18, "coordtitl": 106, "coordunit": 106, "coordx": 325, "copi": [2, 6, 11, 18, 37, 59, 74, 79, 97, 98, 106, 115, 123, 141, 142, 152, 157, 158, 167, 168, 177, 203, 204, 259, 297, 298, 309, 324, 326, 330, 336, 385], "copyright": [10, 20, 87, 89, 90, 289, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 345], "cor": 319, "core": [4, 6, 47, 54, 74, 82, 90, 106, 115, 261, 306, 321, 323, 327, 330, 335, 338, 393], "corn": [27, 42, 313, 315, 331, 385], "corner": [93, 352], "coro": 338, "corp": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 373], "corpor": 315, "corr": 79, "correct": [2, 6, 8, 62, 64, 67, 72, 73, 74, 77, 91, 93, 95, 96, 105, 106, 111, 117, 132, 134, 137, 147, 151, 165, 166, 172, 207, 208, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 269, 290, 291, 293, 303, 306, 311, 312, 318, 319, 321, 332, 334, 345, 346, 347, 348, 350, 351, 352, 374, 381, 389, 390], "correctli": [74, 97, 106, 115, 124, 125, 126, 127, 192, 194, 195, 226, 240, 274, 275, 286, 310, 315, 323, 324, 350, 368, 370, 382, 388, 390], "correl": 331, "correspond": [6, 13, 15, 16, 18, 19, 21, 37, 60, 74, 94, 95, 97, 98, 105, 106, 108, 112, 113, 114, 115, 118, 123, 140, 155, 303, 309, 310, 311, 313, 314, 315, 318, 328, 329, 337, 338, 340], "cosin": [60, 271, 330, 336], "cosmic": [65, 66, 68, 72, 106, 150, 229, 306, 334], "cost": 2, "coudrai": 93, "could": [3, 6, 67, 74, 100, 309, 310, 311, 314, 329, 332], "count": [46, 97, 106, 124, 127, 164, 337], "coupard": 93, "courier": 328, "cours": [10, 30, 38, 50, 86, 330, 331], "court": 2, "cousen": 93, "cov": [303, 313], "covari": [303, 313], "cover": [5, 87, 89, 114, 323], "coverag": [18, 352], "cp": [72, 73, 77, 97, 98, 106, 111, 156, 161, 207, 248, 269, 306, 391], "cp_model": 74, "cpg": 319, "cplex": 45, "cpure": [19, 24, 309, 310], "cpy": 319, "crack": [93, 305], "crash": 314, "creat": [5, 7, 10, 12, 18, 22, 23, 27, 30, 36, 39, 42, 44, 46, 54, 60, 74, 75, 76, 82, 83, 86, 87, 88, 90, 97, 98, 100, 101, 105, 106, 116, 128, 140, 163, 164, 171, 186, 189, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 236, 249, 250, 258, 268, 273, 307, 309, 310, 312, 313, 315, 317, 318, 319, 321, 323, 324, 326, 327, 330, 331, 333, 336, 337, 338, 340, 369, 391], "creation": [2, 35, 40, 53, 55, 56, 97, 106, 115, 119, 209, 220, 257, 306, 309, 318, 325, 326, 345, 358], "creator": [106, 318], "credit": 2, "criteria": [114, 162, 328], "criterion": [105, 117, 309, 311], "critic": [91, 314], "crop": 79, "cross": [82, 91, 92, 303], "cross_decomposit": 114, "crossdecomposit": 27, "crr": 319, "crucial": [9, 67, 332], "csel_matrix": [19, 24, 309, 310], "css": 395, "cstr": 113, "csv": [42, 90, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 315], "csv_delimit": [229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290], "cti": 113, "cti_fil": 113, "ctx_kwarg": [116, 120], "cube": [100, 336], "cubic": [63, 79, 93, 96, 151, 331], "cuccioloni": 93, "cultrera": [93, 102], "cultrera_callegaro": 102, "cumsum": 106, "cumul": [22, 23, 106, 112, 118, 146], "cumulative_explained_vari": [22, 118, 310], "curl": 84, "curli": 8, "current": [2, 6, 12, 18, 20, 37, 42, 82, 91, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 140, 173, 183, 184, 185, 187, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 261, 273, 278, 290, 291, 293, 314, 315, 318, 319, 322, 328], "cursiv": 328, "curv": [16, 18, 19, 63, 91, 92, 93, 102, 105, 111, 303, 305, 309, 310, 330, 352, 391], "curvatur": [18, 102], "curve1": [59, 60], "curve2": [59, 60], "curve3": 60, "curve4": 60, "curve5": 60, "curvefit": [30, 75, 76, 82], "custom": [2, 13, 50, 103, 109, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 328, 329, 355, 372], "customiz": [343, 396], "cut": [15, 16, 99, 307], "cutoff": [15, 16, 99], "cval": [101, 258, 268], "cwd": 315, "cycl": [6, 328], "cycler": 328, "cyclohexan": [93, 305], "c\u00e9dric": 93, "d": [2, 6, 8, 19, 20, 24, 27, 31, 36, 38, 39, 50, 76, 79, 90, 93, 95, 97, 106, 115, 133, 135, 140, 152, 154, 160, 163, 164, 169, 178, 190, 224, 264, 287, 291, 305, 307, 311, 312, 315, 318, 324, 325, 328, 340, 376, 395], "d0": [31, 307], "d1d": [325, 328], "d2": 307, "d2cy00311b": [93, 305], "d2d": 336, "d317": [44, 319], "d3cp01585h": [93, 305], "d3d": 325, "d3d_copi": 325, "d3dduplic": 325, "d3mr00013c": [93, 305], "d4nj03440f": [93, 305], "d55e00": 328, "d_0": 307, "d_plot": [52, 306], "da": 336, "daatset": 147, "dac": 336, "dad": [19, 309, 310], "dael": [93, 305], "dai": [2, 372], "damag": 2, "dan": [93, 305], "danger": 324, "daniel": 93, "daq": [319, 336], "dario": 93, "dark": [328, 329], "dark2": [311, 312, 340], "dark_background": [328, 329], "darkgrid": [328, 329], "darren": 93, "darwin": 6, "dash": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 322, 328, 382], "dashed_pattern": 328, "dask": 116, "data": [0, 1, 2, 3, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 27, 31, 38, 41, 42, 44, 46, 47, 48, 50, 54, 56, 59, 60, 63, 66, 67, 74, 75, 79, 84, 91, 93, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 121, 122, 123, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 138, 140, 143, 144, 146, 147, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 183, 184, 185, 186, 187, 188, 189, 192, 194, 195, 196, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 254, 258, 259, 268, 269, 271, 273, 274, 275, 278, 279, 285, 286, 289, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 317, 319, 320, 321, 322, 323, 325, 326, 327, 332, 333, 334, 335, 337, 338, 345, 346, 355, 361, 371, 387, 390, 391], "data_keyword": [106, 206], "data_onli": [60, 74, 75, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 311, 330], "dataarrai": [106, 282], "datadir": [4, 15, 19, 20, 42, 43, 45, 46, 51, 59, 60, 63, 74, 75, 76, 79, 86, 94, 229, 239, 240, 290, 309, 310, 318, 319, 325, 327, 333, 339, 371, 385], "datain": 101, "datapoint": 97, "datas": 138, "dataset": [3, 4, 6, 8, 14, 15, 20, 23, 24, 25, 27, 29, 31, 32, 33, 41, 43, 44, 45, 46, 47, 48, 51, 52, 54, 59, 60, 63, 66, 67, 74, 76, 79, 82, 86, 90, 92, 93, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 161, 162, 163, 165, 166, 168, 170, 172, 174, 175, 176, 177, 179, 180, 181, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 258, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 284, 285, 286, 289, 290, 291, 293, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 312, 315, 317, 318, 319, 321, 323, 326, 327, 330, 331, 332, 333, 334, 338, 339, 340, 345, 349, 351, 352, 353, 358, 360, 362, 366, 369, 383, 384, 388, 389, 390, 391, 395], "dataset1d": [59, 60], "dataset2": 336, "dataset_1": 115, "dataset_list": 42, "dataset_pca": 22, "datasets_nam": 115, "datastet": 303, "datatyp": 336, "date": [2, 6, 42, 90, 106, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 312, 315, 316, 317, 326, 337, 340, 369, 376], "date_autoformatter_dai": 328, "date_autoformatter_hour": 328, "date_autoformatter_microsecond": 328, "date_autoformatter_minut": 328, "date_autoformatter_month": 328, "date_autoformatter_second": 328, "date_autoformatter_year": 328, "datetim": [97, 106, 304, 325, 326, 327], "dattaset": 27, "daturi": 93, "david": 93, "dc": [335, 339], "dc_corrected_fid": 339, "dc_corrected_fid2": 339, "dcolor": 59, "dd_6": [315, 318], "ddof": [106, 274, 286], "ddr": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "de": [1, 2, 18, 37, 42, 93, 303, 305, 315, 317, 318, 337], "deal": [96, 303, 318], "debian": [84, 88], "debug": [96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 148, 258, 260, 268, 289, 314, 323], "debug_": 314, "decai": [207, 208, 333], "decemb": 93, "decid": 2, "decim": [95, 97, 106, 131, 254, 324, 328, 337, 387], "declar": 111, "decompos": 303, "decomposit": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 82, 95, 96, 99, 100, 102, 105, 109, 112, 117, 118, 303, 309, 310, 313, 331, 385], "decompositionanalysi": 309, "deconvolut": 74, "decor": 6, "decreas": [105, 335], "dedic": [84, 91, 315, 333], "deem": 2, "deep": [97, 106, 328, 329], "deepcopi": [97, 106], "deeper": 90, "def": [4, 6, 8, 74, 75, 76, 79, 96, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 136, 138, 156, 170, 174, 271, 285, 307, 325, 327, 338], "default": [8, 18, 36, 37, 39, 42, 45, 51, 59, 66, 70, 74, 75, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 138, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 174, 175, 176, 178, 179, 183, 186, 187, 189, 191, 192, 194, 195, 196, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 258, 259, 263, 265, 268, 269, 270, 271, 272, 274, 275, 276, 278, 283, 284, 285, 286, 289, 290, 291, 297, 307, 309, 310, 314, 318, 319, 321, 322, 325, 329, 330, 331, 332, 335, 337, 338, 348, 350, 352, 367, 371, 384, 389, 391, 395], "default_dim_nam": 98, "default_format": [116, 120], "default_suffix": [106, 108, 115], "defect": 2, "defens": 2, "defin": [2, 6, 17, 20, 21, 23, 30, 31, 38, 42, 46, 63, 74, 75, 76, 79, 90, 95, 96, 97, 98, 103, 104, 105, 106, 110, 111, 112, 114, 115, 123, 136, 140, 151, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 270, 273, 277, 289, 307, 309, 311, 312, 315, 325, 328, 331, 338, 388, 389, 391], "definit": [2, 30, 75, 106, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 265, 271, 284, 315, 318, 336, 391], "deflat": 100, "deg": 76, "degener": 100, "degrad": [93, 305], "degre": [63, 79, 96, 101, 106, 151, 207, 208, 224, 258, 268, 274, 286, 307, 331, 336], "dehydr": [21, 90], "dehydrogen": [93, 305], "dejavu": 328, "dejavusan": 328, "dejavuserif": 328, "del": 319, "delai": [2, 319], "delet": [106, 319, 379], "delete_coordset": 106, "delic": 310, "delimit": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291], "delimiteur": 231, "deliv": 314, "delphin": 93, "delta": [67, 74, 75, 101, 106, 150, 258, 274, 286, 332, 333], "delta_": [18, 303], "delta_clock": 230, "demand": [97, 106, 164, 343, 396], "demonstr": [50, 74, 79, 83, 312, 316, 328, 329, 331, 332, 333, 336, 338], "denni": 93, "denois": [68, 82, 106, 229, 260, 306, 321, 334, 389], "denot": [98, 307], "dense_output": 95, "dep": 88, "depart": 319, "depend": [5, 11, 84, 87, 96, 97, 100, 102, 106, 109, 111, 112, 117, 118, 141, 142, 151, 152, 162, 186, 233, 259, 263, 274, 286, 303, 307, 313, 315, 318, 328, 329, 332, 337, 345, 367, 384, 385, 391], "deprec": [6, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 265, 335, 345, 373, 376, 382], "deprecationwarn": 335, "depth": [2, 47, 86, 328], "der": 93, "deriv": [2, 70, 90, 91, 93, 95, 100, 101, 258, 303, 305, 309, 311, 338], "desc": 106, "descend": [106, 270, 303, 337], "descent": 109, "describ": [2, 4, 98, 106, 115, 150, 303, 310, 318, 323, 324, 325, 328, 331, 338], "descript": [4, 5, 6, 8, 36, 39, 42, 44, 46, 74, 76, 83, 90, 95, 104, 106, 110, 111, 120, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 309, 310, 312, 314, 315, 316, 317, 318, 319, 325, 327, 337, 340], "descriptor": [93, 305], "deseri": [106, 115], "design": [2, 90, 308, 315, 323, 328], "desir": [6, 12, 15, 67, 95, 97, 106, 109, 157, 167, 194, 203, 228, 286, 297, 310, 311, 318, 319, 328, 332], "desktop": 5, "despik": [66, 67, 93, 334, 384, 389], "despit": 323, "destin": [97, 106, 116, 183, 278], "destroi": 37, "detail": [4, 8, 9, 18, 20, 42, 63, 67, 83, 84, 85, 90, 91, 101, 106, 111, 112, 114, 137, 152, 172, 258, 268, 303, 311, 315, 318, 319, 320, 323, 331, 340, 342, 389], "detect": [2, 67, 90, 91, 95, 96, 132, 137, 150, 151, 162, 172, 269, 311, 315, 328, 331, 332], "determin": [2, 15, 22, 93, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 123, 163, 230, 269, 303, 310, 311, 312, 324, 325, 331, 335, 338], "detrend": [8, 50, 66, 96, 132, 137, 172, 269, 313, 334], "dev": [5, 85, 87, 89, 393], "develop": [1, 2, 4, 9, 10, 85, 86, 87, 88, 89, 91, 92, 99, 102, 304, 314, 317, 318, 319, 322, 323, 344, 393, 395], "developp": 394, "devguid": 92, "deviat": [67, 105, 106, 112, 117, 146, 150, 194, 274, 275, 286, 303, 309, 319, 323], "devot": 86, "df": 325, "dfit": 307, "diag": [105, 106, 118, 153, 160, 178, 325], "diagnos": 314, "diagon": [106, 152, 160, 178, 303], "dialog": [229, 230, 239, 240, 290, 291, 293, 328, 355, 366, 368, 395], "dic": [74, 106, 115], "dict": [6, 8, 95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 147, 162, 257], "dict_param_to_optim": 95, "dictionari": [95, 96, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 311, 319, 325, 327, 328], "did": [2, 327, 331], "dielectr": [93, 305], "diff": [6, 70, 106, 146, 312, 318, 337, 338], "differ": [15, 20, 27, 42, 50, 66, 67, 70, 79, 87, 89, 95, 96, 97, 101, 106, 108, 109, 113, 115, 116, 123, 134, 146, 150, 151, 162, 183, 184, 185, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 278, 289, 311, 312, 313, 317, 318, 319, 322, 325, 326, 328, 329, 331, 333, 335, 336, 338, 339, 348, 360, 368, 389], "differenti": [95, 101, 258, 352], "difficult": [91, 309, 310], "diffract": [93, 305], "diffus": [93, 103, 305, 352], "digit": [1, 95, 97, 317, 328, 387], "dilig": 2, "dill": [100, 105], "dim": [6, 15, 17, 20, 47, 70, 74, 76, 97, 98, 101, 106, 123, 124, 125, 126, 127, 129, 130, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 149, 153, 156, 161, 163, 165, 166, 170, 174, 175, 176, 179, 191, 192, 194, 195, 207, 208, 226, 253, 255, 258, 265, 268, 270, 271, 272, 274, 275, 283, 284, 285, 286, 289, 312, 313, 318, 325, 329, 338, 358, 370], "dim1": [106, 276], "dim2": [106, 276], "dimens": [6, 16, 18, 22, 23, 37, 42, 44, 46, 60, 74, 75, 76, 90, 96, 97, 98, 100, 101, 102, 106, 112, 116, 123, 124, 125, 126, 127, 132, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 149, 151, 153, 156, 161, 163, 165, 166, 170, 172, 174, 175, 176, 179, 185, 191, 192, 194, 195, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 259, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 283, 284, 285, 286, 289, 291, 309, 310, 311, 312, 313, 315, 317, 318, 319, 326, 327, 330, 331, 333, 334, 336, 337, 340, 345, 350, 354, 390], "dimension": [22, 23, 24, 90, 93, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 116, 117, 118, 120, 164, 209, 210, 211, 212, 214, 215, 220, 259, 272, 303, 304, 310, 321, 325, 331, 334, 336], "dimensionalityerror": [38, 97, 106, 116, 120, 278, 336, 340], "dimensionless": [36, 39, 97, 106, 116, 120, 136, 138, 170, 175, 176, 285, 330, 334, 340], "dir": 362, "direct": [2, 6, 8, 86, 106, 179, 261, 270, 309, 328, 331], "directli": [2, 6, 31, 97, 100, 105, 106, 163, 171, 189, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 303, 307, 309, 310, 318, 323, 324, 325, 328, 331, 338, 343, 396], "directori": [2, 4, 6, 9, 19, 42, 44, 45, 46, 47, 74, 79, 90, 94, 106, 108, 115, 187, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 307, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 385, 395], "disabl": 328, "disagr": 2, "disappear": 303, "disast": 2, "discard": [6, 79, 97], "discardbg": 230, "discharg": [93, 305], "disclaim": 2, "disclos": 91, "disconnect": [97, 98, 106], "discourag": [304, 323], "discov": 12, "discret": [106, 146], "discrimin": [93, 305], "discuss": [2, 10, 82, 90, 323, 365], "disk": 54, "dispatch": 338, "dispatch_queu": 338, "dispatch_shel": 338, "displai": [2, 18, 22, 23, 24, 36, 37, 39, 50, 90, 96, 97, 98, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 262, 309, 310, 314, 315, 318, 319, 322, 323, 324, 325, 327, 328, 330, 331, 335, 337, 338, 340, 355, 362, 363, 369, 378, 385, 391, 395], "disput": [2, 91], "disregard": [104, 110, 114], "distanc": [31, 75, 97, 98, 106, 109, 128, 162, 307, 311, 325, 328], "distance_fit": 31, "distance_fitted2": 31, "distance_fitted3": 31, "distinct": 233, "distinguish": 22, "distort": 338, "distribut": [1, 2, 84, 97, 100, 102, 106, 189, 190, 228, 274, 286, 307], "disturb": 2, "div": [315, 318, 324], "dive": 90, "diverg": [95, 109, 309], "divid": [106, 112, 194, 323, 335], "divis": 336, "divisor": [106, 274, 286, 319], "dk": [315, 318], "dlabel": [97, 106], "dly": 319, "dnf": 84, "do": [2, 6, 10, 12, 13, 15, 20, 22, 23, 37, 38, 51, 54, 63, 79, 86, 91, 94, 106, 112, 134, 158, 230, 303, 309, 310, 311, 312, 318, 319, 321, 322, 325, 328, 340, 366], "do_execut": 338, "doc": [5, 6, 9, 83, 111, 307, 315, 317, 327, 352, 355, 365, 369, 378, 389, 393], "docker": 359, "docstr": [4, 9], "doctest": 8, "doctestplu": 6, "document": [1, 2, 5, 7, 11, 31, 42, 67, 85, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 133, 152, 169, 190, 224, 258, 264, 287, 311, 319, 322, 323, 326, 328, 352, 353, 354, 358, 359, 373, 377, 378, 381, 385, 393, 395], "doe": [2, 19, 23, 24, 91, 97, 105, 106, 115, 124, 127, 128, 136, 157, 158, 309, 310, 314, 318, 323, 324, 331, 336, 343, 396], "doesn": [325, 336], "doi": [0, 1, 93, 305], "dollar": 324, "domain": [2, 59, 60, 136, 138, 147, 156, 161, 170, 175, 176, 179, 285, 321, 330, 334], "domenico": 93, "domin": 95, "dominguez": 93, "don": [5, 9, 63, 74, 75, 82, 91, 307, 311, 322, 323, 324, 328], "done": [6, 18, 37, 97, 106, 134, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 278, 280, 281, 310, 315, 325, 328, 331, 332, 348, 358, 383, 387, 388], "donn": [93, 305], "dop853": 95, "dorresteijn": 93, "dot": [16, 17, 109, 116, 196, 310, 327, 328], "dotted_pattern": 328, "doubl": [8, 109, 301, 315], "down": 345, "download": [2, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 84, 85, 87, 88, 89, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 309, 318, 339, 367, 371, 385], "download_nist_ir": 367, "download_onli": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "downlod": 20, "downstream": 112, "dpi": [106, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 329, 331], "dpm": 319, "dq": 102, "dr": 93, "draft": 2, "drag": [91, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 324], "draw": [196, 216, 328], "drawn": [2, 100, 106, 114, 228], "drift": [50, 151, 331], "driven": [4, 11], "drop": [91, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 324, 393], "dropdown": 322, "dry": [30, 93, 111, 305], "ds1": [115, 328], "ds2": [115, 328], "ds3": 115, "ds_correct": 8, "ds_list": 27, "ds_list_nam": 27, "dsc": 16, "dsint": 76, "dso": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "dss": 16, "dtc": 319, "dtype": [6, 16, 23, 97, 104, 106, 110, 116, 121, 122, 128, 146, 153, 154, 157, 158, 160, 163, 164, 167, 168, 171, 178, 186, 189, 194, 203, 204, 228, 274, 275, 286, 297, 298, 325, 333, 336, 345], "du": [315, 318], "due": [2, 16, 63, 134, 311, 319, 329, 339, 340, 387], "duli": 2, "dump": [106, 115, 374], "duplic": [2, 83, 325, 354], "dur": 319, "duran": [319, 395], "durat": 2, "dure": [2, 6, 9, 17, 21, 96, 97, 104, 106, 110, 113, 278, 304, 307, 309, 314, 325, 326, 328, 338, 345, 387], "dusan": 93, "dx": [90, 93, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 293, 315, 316, 320, 336], "dynam": [74, 93, 96, 114, 305], "dz": 325, "e": [2, 5, 6, 18, 19, 20, 37, 38, 50, 66, 83, 88, 91, 93, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 120, 133, 140, 156, 161, 167, 174, 179, 185, 196, 203, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 274, 281, 286, 297, 303, 304, 305, 307, 309, 310, 311, 314, 315, 318, 319, 322, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 337, 338, 340, 382, 391, 393, 395], "e2975": 93, "e501": 6, "e_i": [303, 313], "e_project": [54, 55, 306], "e_x": [303, 313], "ea": 95, "ea_1": 95, "ea_n": 95, "each": [2, 6, 8, 18, 23, 27, 37, 42, 74, 79, 82, 86, 95, 96, 97, 98, 100, 102, 104, 105, 106, 110, 111, 112, 115, 121, 122, 135, 150, 163, 164, 171, 196, 230, 303, 304, 307, 309, 310, 311, 312, 313, 315, 318, 324, 325, 326, 331, 332, 336, 337, 338, 342, 384], "earthquak": 2, "eas": 322, "easi": [91, 318, 322], "easier": [66, 323, 332, 372], "easiest": [6, 328], "easili": [2, 6, 24, 54, 90, 91, 307, 309, 311, 315, 323, 325, 327, 336, 337], "echantillon": 319, "econom": 2, "edg": [101, 106, 114, 139, 196, 258, 268, 328], "edgecolor": [114, 196, 328], "edit": [6, 91, 94, 393], "editor": [6, 93], "eelco": 93, "efa": [14, 20, 25, 33, 92, 97, 100, 102, 105, 106, 109, 112, 117, 118, 140, 154, 239, 303, 306, 310, 323, 352, 380, 385], "efa1": 15, "efa2": 15, "effect": [2, 66, 93, 161, 229, 239, 240, 271, 305, 308, 309, 325, 328, 330, 332, 338], "effici": [93, 100, 112, 305], "effort": 2, "eibar": 93, "eigenvalu": [99, 112], "eigenvector": [27, 42, 237, 238, 313, 315, 331, 385], "eigh": 100, "eignenvector": 331, "eiler": [63, 69, 71, 72, 93, 96, 101, 106, 132, 229, 258, 268, 289, 306, 334], "either": [2, 6, 18, 19, 42, 79, 90, 91, 95, 96, 97, 100, 106, 114, 134, 135, 239, 259, 303, 309, 310, 315, 325, 328], "elaps": [98, 318, 325], "elect": 2, "electr": 2, "electrolyt": [93, 305], "element": [2, 97, 106, 109, 116, 121, 122, 124, 125, 126, 127, 139, 146, 160, 178, 189, 192, 194, 195, 274, 275, 277, 286, 303, 318, 324, 326, 328, 335, 336, 337], "elementari": 95, "elementwis": 109, "elimin": [66, 332], "elizabeth": 93, "elnaz": 93, "els": [6, 42, 96, 97, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 187, 229, 239, 240, 311, 327, 328, 336], "elsevi": 93, "elsewher": [106, 160], "elut": [17, 24, 309, 310], "el\u017cbieta": 93, "em": [59, 74, 76, 174, 227, 266, 267, 271, 330, 333], "embrac": 6, "emerg": 2, "emi": [240, 319], "emiss": [240, 319], "emit": [328, 338], "emmerl": 93, "emphas": [96, 324], "emploi": 150, "empti": [97, 100, 106, 116, 158, 167, 168, 203, 204, 297, 298, 311, 323, 325, 327, 328], "empty_lik": [106, 157, 167, 168, 203, 204, 297, 298], "emptylik": [106, 158], "en": [2, 6, 311, 328], "enabl": [2, 30, 75, 112, 289, 307, 323, 372], "enclos": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251], "encod": [235, 317, 319], "encount": [2, 85, 87, 89, 331, 335, 336], "encourag": [2, 5, 6], "end": [8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 95, 96, 97, 101, 106, 128, 136, 147, 186, 189, 258, 268, 311, 318, 328, 331, 337, 338], "endeavor": 2, "endpoint": [97, 106, 128, 171, 186, 189], "energi": [2, 38, 303, 319, 325], "enforc": [2, 105, 395], "engin": 318, "english": 2, "enh": 5, "enhanc": [5, 6, 12, 318], "enough": [310, 337], "ensicaen": 323, "ensur": [2, 5, 6, 100, 106, 112, 139, 335, 389], "enter": [322, 324, 331], "entir": [2, 6, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "entireti": 2, "entiti": 2, "entitl": 2, "entri": [0, 6, 9, 106, 115, 157, 272, 324, 328, 338, 369], "entropi": 100, "enum": [123, 271], "enumer": [27, 74, 116, 338], "env": [87, 88, 345], "environ": [9, 83, 86, 88, 90, 93, 94, 305, 322], "environment": 93, "eq": 338, "equal": [23, 96, 97, 105, 106, 124, 135, 160, 161, 171, 186, 189, 196, 216, 224, 271, 303, 307, 309, 310, 325, 328, 330, 336], "equat": [29, 30, 32, 33, 95, 97, 100, 102, 103, 104, 105, 106, 303, 306, 308, 309, 310, 313], "equip": [2, 323], "equiv": [20, 303], "equival": [17, 22, 60, 70, 86, 88, 96, 101, 105, 106, 136, 138, 145, 149, 154, 156, 160, 161, 165, 166, 170, 174, 175, 176, 178, 179, 191, 196, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 227, 253, 255, 258, 265, 266, 267, 268, 271, 279, 284, 285, 289, 304, 314, 315, 325, 328, 330, 331, 336, 337, 338, 395], "eras": 325, "ermit": 331, "error": [2, 6, 74, 83, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 135, 136, 138, 156, 159, 161, 170, 175, 176, 179, 233, 239, 240, 258, 268, 272, 278, 285, 289, 303, 309, 310, 313, 315, 316, 319, 325, 328, 329, 335, 336, 337, 338, 339, 340, 345, 369, 379, 382, 391, 392], "error_": [38, 314, 318, 319, 325, 329, 336, 340], "errorbar_caps": 328, "esc": 322, "escap": 315, "especi": [106, 274, 286, 303, 323, 328], "essenti": [91, 317, 319, 323], "est": 325, "establish": [2, 303], "estim": [20, 79, 95, 96, 104, 106, 110, 112, 150, 274, 286, 303, 311, 313, 332], "et": [1, 2, 14, 17, 20, 24, 25, 33, 95, 96, 102, 105, 106, 112, 229, 269, 303, 305, 306, 309, 310, 331], "etc": [2, 36, 39, 74, 75, 91, 98, 105, 106, 114, 123, 224, 228, 233, 260, 303, 304, 307, 310, 311, 315, 323, 325, 326, 327, 328], "etienn": 93, "euclid": [105, 309], "euclidean": 309, "eugen": 22, "eugenio": 93, "euler": 328, "europ": 328, "ev": [16, 38, 118, 325], "ev_cum": 118, "ev_ratio": 118, "evalu": [20, 95, 96, 101, 106, 124, 127, 257, 258, 268], "even": [4, 20, 95, 97, 106, 183, 258, 259, 265, 274, 278, 315, 318, 325, 340, 370], "evenli": [97, 102, 106, 128, 131, 171, 186, 189, 254, 387], "event": [2, 24, 95, 338], "eventu": [96, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 240, 312, 319], "everi": [112, 372], "everybodi": 2, "everyon": 9, "everyth": 309, "everytim": [97, 387], "evid": 2, "evol": 311, "evolut": [15, 303, 311, 352], "evolv": [15, 93, 99, 100, 102, 105, 109, 112, 117, 118, 303, 309], "ev\u00b2": 325, "ev\u2070": 325, "ex": [30, 307], "exact": [94, 97, 98, 106, 112, 115, 154, 303, 311], "exactli": [19, 307, 318, 331, 340], "exagger": 311, "examin": [303, 309, 310, 311, 331, 338], "exampl": [4, 6, 9, 14, 20, 25, 26, 28, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 128, 133, 134, 135, 139, 146, 153, 157, 160, 162, 163, 164, 167, 168, 169, 178, 182, 187, 190, 194, 203, 204, 224, 230, 231, 233, 237, 241, 244, 245, 246, 247, 251, 261, 264, 265, 273, 274, 275, 278, 279, 284, 286, 287, 291, 293, 297, 298, 304, 306, 307, 308, 309, 311, 315, 318, 323, 324, 325, 327, 328, 330, 332, 334, 336, 337, 339, 340, 343, 346, 352, 380, 383, 385, 389, 390, 391, 396], "exce": 2, "excel": [86, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293], "exceot": 331, "except": [38, 95, 97, 106, 115, 116, 120, 124, 127, 128, 140, 154, 160, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 270, 311, 314, 318, 319, 323, 325, 328, 329, 331, 336, 340, 348, 355, 366], "exchang": [93, 316, 340], "exclud": [97, 106, 115, 150, 186], "exclus": 2, "excus": 2, "exec": 338, "execut": [2, 19, 25, 28, 32, 34, 40, 48, 52, 54, 55, 57, 61, 64, 68, 71, 77, 80, 81, 86, 95, 97, 106, 115, 119, 163, 164, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 256, 257, 306, 314, 315, 343, 384, 393, 396], "execute_request": 338, "exempl": 315, "exemplifi": 311, "exercis": [2, 331], "exhaust": [6, 304], "exist": [2, 4, 6, 12, 83, 94, 96, 99, 100, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 123, 187, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 310, 314, 318, 319, 322, 326, 331, 343, 366, 396], "exp": [19, 20, 36, 39, 74, 76, 100, 156, 169, 174, 264, 307, 309, 319], "exp_conc": 113, "exp_idx": 113, "expand": [90, 106], "expandus": 315, "expans": 333, "expect": [6, 12, 30, 75, 83, 104, 106, 110, 114, 206, 230, 307, 309, 311, 312, 313, 314, 315, 329, 331, 337, 348, 393], "experi": [37, 99, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 319, 325, 393, 395], "experienc": [2, 323], "experiment": [19, 20, 38, 41, 44, 48, 56, 95, 97, 99, 102, 103, 106, 113, 155, 188, 209, 229, 236, 239, 248, 270, 290, 304, 306, 308, 309, 310, 317, 325, 329, 330, 336, 345, 349, 391], "expert": 9, "explain": [8, 12, 15, 22, 23, 112, 118, 149, 303, 307, 310, 318, 323], "explained_vari": 118, "explained_variance_ratio": [118, 310], "explan": 339, "explanatori": [303, 313], "explicit": [2, 95, 97, 98, 106, 114, 318], "explicitli": [6, 97, 106, 311, 328], "exploit": 2, "explor": [92, 311], "explos": 2, "expno": [45, 59, 60, 74, 75, 76, 248, 325, 327, 330, 333, 339], "expon": [95, 271, 330], "exponenti": [58, 61, 72, 74, 95, 106, 156, 174, 207, 208, 248, 306, 333, 334, 336], "export": [82, 106, 108, 115, 316, 321, 323, 345, 395], "expos": [93, 304, 305, 323], "express": [2, 15, 38, 79, 102, 116, 156, 174, 196, 313, 328, 336], "expressli": 2, "exptc": [207, 208, 333], "extend": [8, 85, 162, 311, 317, 318, 337], "extens": [6, 19, 42, 47, 91, 101, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 290, 291, 293, 311, 315, 318], "extent": 303, "extern": [2, 45, 93, 95, 99, 100, 102, 103, 105, 109, 111, 112, 114, 117, 118, 305, 319, 326, 338, 346, 352], "extra": [6, 105, 112, 307, 325, 393], "extract": [47, 75, 85, 100, 106, 109, 112, 152, 153, 303, 308, 311, 315, 317, 318, 323, 331, 335, 367], "extraoutputgetconc": 105, "extraoutputgetspec": 105, "extrem": [6, 285, 309, 312, 338], "extrema": 331, "ey": [106, 178], "f": [4, 15, 19, 27, 30, 31, 42, 45, 70, 74, 75, 88, 90, 93, 95, 97, 102, 106, 115, 169, 187, 190, 224, 264, 290, 307, 309, 310, 311, 313, 314, 317, 318, 325, 327, 328, 338], "f0e442": 328, "f0f0f0": 328, "f1": [30, 60, 74, 75, 291, 307, 327, 330, 333], "f2": [16, 76, 291, 327], "f401": 314, "f403": 323, "f405": 323, "f_ev": [15, 16, 99], "f_expno": 74, "fabrizia": 93, "face": [114, 340], "facecolor": [114, 196, 328], "fact": [2, 63, 309, 323], "factor": [15, 93, 95, 96, 99, 100, 102, 105, 109, 112, 117, 118, 303, 319, 328, 336], "factoris": 310, "fail": [2, 6, 95, 106, 107, 115, 329, 331, 353], "failur": [2, 328], "faith": 2, "fall": 328, "fals": [6, 20, 24, 27, 30, 31, 39, 42, 54, 59, 60, 63, 67, 70, 74, 75, 79, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 120, 123, 124, 125, 126, 127, 134, 135, 136, 138, 145, 154, 156, 161, 165, 166, 170, 171, 174, 175, 176, 179, 182, 183, 186, 189, 191, 192, 194, 195, 196, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 270, 271, 272, 274, 275, 276, 278, 280, 281, 283, 285, 286, 299, 300, 301, 302, 307, 309, 310, 311, 313, 315, 317, 318, 319, 325, 328, 330, 331, 332, 333, 335, 336, 338, 387, 395], "falsesolid_capstyl": 328, "famili": [95, 328], "familiar": 328, "fanci": [74, 328, 388, 391], "fantasi": 328, "far": 95, "farid": 93, "fashion": 336, "fast": [6, 67, 84, 99, 100, 102, 105, 109, 112, 117, 118, 161, 179, 319, 322, 328, 329, 333, 391], "fast_ica": 17, "faster": [79, 87, 95, 100, 106, 109, 157, 158, 343, 391, 396], "fastest": 307, "fastica": [14, 25, 33, 99, 102, 105, 106, 109, 112, 117, 118, 154, 229, 306, 387, 391], "fault": 2, "favor": 389, "favorit": [322, 323], "fc": 311, "feasibl": 93, "featur": [4, 5, 6, 12, 21, 22, 83, 85, 90, 91, 92, 93, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 137, 154, 162, 172, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 289, 303, 308, 310, 318, 323, 325, 328, 336, 340], "federico": 93, "fedora": 84, "fee": 2, "felipa": 328, "fer": [93, 305], "fern": 93, "fernandez": [0, 1, 87, 89, 90, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "ferrihydrit": [93, 305], "ferrit": [93, 305], "fetch": 5, "few": [19, 27, 50, 114, 241, 309, 313, 325], "ff": 88, "ffmpeg": 328, "ffmpeg_fil": 328, "fft": [74, 76, 179, 323, 334, 335, 339], "fftbin": 338, "fhz": 261, "fi": 333, "fibr": [93, 305], "fibroin": [93, 305], "fid": [60, 74, 106, 115, 187, 315, 330, 333, 339], "fid2": [333, 339], "fid3": 333, "field": [2, 91, 95, 98, 325], "fifo": [16, 99], "fig": [8, 106, 328], "fignum": 106, "figsiz": [18, 37, 38, 50, 67, 70, 74, 106, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 309, 310, 312, 325, 328, 329, 331, 332, 333, 335, 336, 338, 339, 340, 343, 396], "figur": [16, 18, 22, 37, 38, 49, 52, 56, 67, 70, 74, 75, 91, 106, 112, 151, 196, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 229, 262, 306, 307, 309, 310, 311, 312, 321, 329, 331, 332, 333, 335, 336, 338, 339, 340, 343, 396], "figure_autolayout": 328, "figure_dpi": 328, "figure_edgecolor": 328, "figure_facecolor": 328, "figure_figs": [39, 328], "figure_frameon": 328, "figure_max_open_warn": 328, "figure_subplot_bottom": 328, "figure_subplot_hspac": 328, "figure_subplot_left": 328, "figure_subplot_right": 328, "figure_subplot_top": 328, "figure_subplot_wspac": 328, "figure_titles": 328, "figure_titleweight": 328, "file": [1, 2, 5, 6, 7, 9, 10, 19, 20, 25, 28, 32, 34, 40, 41, 48, 52, 55, 56, 57, 61, 64, 68, 70, 71, 74, 77, 80, 81, 89, 90, 93, 97, 106, 107, 108, 113, 115, 187, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 263, 270, 290, 291, 293, 306, 309, 310, 312, 313, 320, 324, 327, 328, 335, 337, 338, 340, 345, 346, 353, 362, 364, 366, 371, 378, 379, 385, 387, 388, 390, 391, 395], "filenam": [4, 42, 90, 106, 108, 115, 187, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 312, 315, 317, 318, 340, 353, 366, 391], "filename1": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251], "filename2": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251], "filenotfounderror": 318, "fileselector": 384, "filetyp": [4, 106, 115, 384], "fill": [101, 106, 109, 114, 145, 157, 158, 167, 168, 191, 203, 204, 255, 258, 268, 297, 298, 299, 300, 301, 302, 319, 328, 334, 335, 337], "fill_valu": [106, 158, 167, 168, 203, 298, 325, 336], "filter": [1, 8, 47, 67, 70, 71, 82, 162, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 289, 306, 315, 318, 319, 321, 333, 334, 389, 395], "final": [17, 19, 20, 23, 27, 31, 47, 50, 54, 63, 91, 97, 105, 106, 163, 164, 171, 189, 303, 307, 309, 311, 314, 315, 318, 323, 325, 326, 328, 331, 338], "financi": 2, "find": [15, 21, 30, 31, 42, 93, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 143, 144, 162, 226, 308, 312, 315, 321, 323, 329, 336, 338, 339, 390], "find_peak": [74, 75, 307, 308], "findfont": 328, "fine": [311, 338], "finit": 336, "fire": 2, "first": [2, 6, 8, 15, 18, 19, 20, 22, 23, 27, 37, 42, 47, 50, 51, 70, 79, 84, 90, 95, 96, 97, 98, 100, 102, 103, 105, 106, 109, 111, 112, 114, 116, 117, 118, 123, 124, 127, 134, 150, 196, 207, 226, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 259, 261, 265, 276, 303, 304, 307, 309, 310, 311, 312, 313, 314, 315, 318, 322, 323, 325, 327, 328, 331, 332, 333, 334, 336, 337, 338, 343, 385, 396], "firstli": 2, "fisher": 22, "fist": 311, "fit": [15, 16, 18, 20, 22, 23, 24, 27, 29, 31, 32, 33, 63, 72, 73, 74, 77, 79, 90, 91, 92, 95, 96, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 118, 132, 151, 180, 224, 239, 248, 258, 268, 287, 303, 306, 308, 309, 310, 311, 312, 313, 321, 323, 328, 331, 338, 345, 364, 383, 391], "fit_intercept": [104, 110], "fit_reduc": [99, 100, 102, 105, 109, 111, 112, 114, 117, 118], "fit_to_concentr": [20, 95], "fit_to_exp_idx": 113, "fit_to_gas_concentr": 113, "fit_transform": [15, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118], "fitter": [74, 76], "fivethirtyeight": [328, 329], "fivo": 93, "fix": [5, 6, 12, 30, 50, 75, 97, 106, 113, 131, 254, 303, 307, 309, 332, 336], "fixtur": 6, "flag": [97, 106, 141, 142, 216, 259, 270, 272, 276, 278, 283, 319], "flake8": 6, "flat": [162, 268, 311, 338], "flatten": [97, 106, 125, 126, 135, 146, 192, 194, 195, 274, 275, 286, 338], "flavor": 12, "flexibl": [137, 154, 172, 304, 309, 318, 322, 325, 326, 331], "float": [8, 15, 21, 23, 50, 63, 75, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 123, 128, 131, 132, 146, 147, 149, 150, 156, 160, 162, 163, 164, 165, 166, 170, 174, 178, 186, 189, 194, 196, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 228, 254, 258, 261, 268, 271, 274, 275, 286, 289, 311, 312, 325, 331, 337, 340], "float32": [6, 106, 228, 274, 286], "float64": [6, 16, 18, 22, 23, 31, 36, 37, 38, 39, 42, 44, 46, 54, 74, 76, 90, 97, 98, 106, 128, 134, 135, 146, 153, 160, 163, 164, 167, 168, 194, 203, 204, 228, 229, 230, 231, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 265, 273, 274, 275, 278, 284, 286, 297, 298, 309, 310, 312, 315, 317, 318, 319, 325, 331, 336, 337, 340], "floor": [97, 106, 131, 254], "flore": 93, "flow": [93, 305], "fm": 93, "fmax": [97, 106, 125, 126, 192, 195], "fmin": [97, 106, 125, 126, 192, 195], "fmt": 338, "fn": [97, 106, 163], "foc": 319, "focu": 338, "focus": [5, 91], "fold": 319, "folder": [1, 6, 9, 13, 46, 74, 75, 76, 79, 115, 229, 233, 239, 240, 315, 319, 322, 325, 378], "follow": [2, 4, 5, 6, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 67, 74, 75, 76, 79, 86, 90, 91, 94, 95, 96, 102, 105, 106, 114, 140, 233, 240, 256, 261, 270, 273, 304, 307, 309, 310, 311, 314, 315, 318, 319, 322, 323, 324, 325, 327, 328, 331, 338, 343, 396], "fonction": 21, "font": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328, 359], "font_famili": 328, "font_siz": 328, "font_styl": 328, "font_vari": 328, "font_weight": 328, "fontsiz": [70, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 311, 328, 338], "fopr": 310, "forbidden": [30, 75, 307, 319], "forc": [2, 6, 97, 98, 104, 106, 110, 182, 183, 262, 278, 324, 328, 340], "force_pound": 116, "force_stack": 370, "forego": 2, "forg": [87, 88], "forget": [15, 312, 323], "forgotten": 345, "fork": 5, "form": [2, 93, 96, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 156, 170, 174, 175, 176, 224, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 259, 271, 303, 309, 319, 325, 328, 330, 338], "formal": [303, 331], "formaldehyd": [93, 305], "format": [2, 6, 7, 12, 21, 24, 41, 42, 45, 47, 51, 56, 70, 90, 106, 107, 108, 114, 115, 148, 159, 180, 229, 230, 261, 288, 290, 291, 293, 315, 317, 318, 319, 320, 322, 324, 325, 328, 338, 345, 369, 374, 376, 390], "formatt": [6, 327, 328], "former": 391, "formula": 95, "forth": 2, "fortran": 106, "fortun": [315, 337], "fortunelli": 93, "forum": [10, 318, 323], "forward": [15, 16, 99, 100, 102, 105, 109, 112, 117, 118, 319], "found": [1, 2, 6, 20, 22, 42, 51, 82, 95, 98, 307, 311, 315, 318, 325, 328, 333, 338], "four": [309, 315, 329, 337], "fourier": [74, 161, 165, 166, 177, 179, 319, 321, 330, 334, 335], "fourier_transform": 319, "fourth": 150, "fp": 111, "fppm": 261, "fr": [0, 93, 314, 323, 333], "fr_fr": 328, "frac": [104, 110, 114, 136, 169, 170, 175, 176, 190, 264, 271, 303, 307, 330], "fraction": [196, 311, 328], "frame": [196, 328], "frameon": 196, "framework": [0, 3, 92, 93, 305, 314], "fran": 93, "franc": [1, 2], "francesco": 93, "francisco": 93, "frantz": [93, 305], "franziska": 93, "freder": 93, "fredholm": 103, "free": [2, 12, 86, 99, 331, 333], "freedom": [2, 106, 274, 286], "freeli": [2, 91], "freetyp": 328, "freita": 93, "french": 2, "freq": [315, 319], "frequenc": [38, 97, 161, 165, 166, 179, 261, 303, 319, 335], "frequent": 325, "friendli": [93, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 115, 117, 118], "fritsch": 93, "frobeniu": 109, "from": [1, 2, 4, 5, 6, 11, 12, 13, 14, 17, 20, 22, 25, 27, 28, 32, 33, 34, 36, 39, 40, 41, 44, 46, 47, 48, 50, 52, 54, 55, 56, 57, 61, 64, 65, 66, 68, 71, 72, 74, 76, 77, 80, 81, 82, 84, 85, 86, 87, 89, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 127, 128, 132, 137, 140, 150, 151, 153, 155, 157, 158, 160, 161, 163, 164, 167, 168, 171, 172, 177, 178, 179, 186, 187, 188, 189, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 261, 268, 269, 272, 273, 274, 277, 278, 279, 286, 290, 291, 293, 297, 298, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 322, 323, 324, 326, 328, 330, 331, 334, 335, 336, 337, 338, 339, 340, 343, 345, 364, 367, 371, 378, 382, 387, 389, 390, 391, 393, 395, 396], "from_": 120, "from_list": 116, "from_sequ": 116, "fromfunct": [97, 106, 164, 307, 325], "fromit": [97, 106, 163], "fsh": 253, "fsh2": [165, 253], "fssl": 84, "ft": 319, "ftir": [21, 90, 93, 99, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 251, 303, 305, 321, 331, 334, 361], "ftirinstru": 319, "fulfil": 2, "full": [2, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 84, 90, 91, 96, 106, 112, 153, 157, 158, 168, 203, 204, 297, 298, 311, 312, 315, 325, 328, 331, 332, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "full_lik": [106, 157, 158, 167, 203, 204, 297, 298, 325], "full_matric": 118, "fulli": [91, 331, 332, 338, 391], "fulllik": [106, 168], "fullscal": 310, "fun": 100, "fun_arg": 100, "func": [8, 106, 206, 307, 325], "func1": [97, 106, 163], "function": [2, 4, 6, 19, 20, 21, 36, 39, 58, 60, 70, 72, 74, 75, 79, 82, 83, 85, 90, 95, 97, 100, 101, 102, 103, 105, 106, 109, 111, 112, 113, 121, 122, 134, 136, 137, 138, 145, 152, 154, 156, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 174, 175, 176, 178, 179, 190, 191, 206, 207, 208, 216, 224, 226, 229, 239, 240, 253, 255, 258, 259, 264, 271, 274, 285, 289, 290, 303, 307, 311, 314, 315, 316, 318, 319, 323, 326, 327, 328, 334, 335, 338, 340, 343, 345, 351, 352, 358, 377, 383, 391, 395, 396], "further": [2, 106, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 311, 315], "futur": [2, 318, 322, 323, 328, 335, 387], "fv": [18, 22, 23, 42, 44, 46, 54, 60, 74, 75, 76, 90, 309, 310, 312, 315, 317, 318, 319, 323, 325, 327, 330, 333, 336, 337, 340], "fwhm": 79, "g": [6, 18, 31, 38, 60, 79, 83, 91, 93, 97, 98, 99, 106, 116, 120, 167, 174, 185, 203, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 281, 297, 303, 304, 307, 309, 311, 315, 318, 322, 324, 325, 326, 327, 328, 330, 331, 332, 335, 336, 338, 340, 382, 391], "ga": [93, 113], "gain": 319, "galact": [4, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 364], "galacticdata": 245, "galleri": [25, 28, 32, 34, 40, 48, 52, 55, 57, 61, 64, 68, 71, 77, 80, 81, 90, 91, 92, 306, 308, 323, 325, 328, 329, 389], "gappi": 328, "garcia": 93, "gard": 328, "gargallo": 93, "gasym": 307, "gather": 318, "gauss": 174, "gaussian": [169, 174, 307], "gaussianmodel": [287, 307], "gb": [174, 330], "gbw": 319, "gc": [99, 384], "ge": [271, 330], "gener": [2, 4, 6, 11, 19, 27, 36, 38, 39, 42, 51, 70, 75, 83, 91, 95, 97, 100, 105, 106, 109, 114, 115, 128, 170, 171, 175, 186, 189, 196, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 278, 290, 303, 304, 309, 310, 311, 313, 318, 320, 321, 323, 325, 328, 330, 336, 337, 338, 340, 370, 384], "general_ham": [175, 176], "generalprefer": 94, "genzel": [175, 335], "geometr": [97, 106, 171], "geometri": 328, "geomspac": [97, 106, 189], "geoscienc": 93, "gervilli\u00e9": 93, "get": [6, 11, 13, 15, 16, 18, 19, 20, 21, 22, 30, 42, 67, 74, 75, 85, 87, 89, 92, 97, 99, 104, 105, 106, 110, 114, 115, 116, 173, 187, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 311, 312, 318, 319, 321, 322, 325, 326, 328, 329, 331, 332, 337, 340], "get_axi": 106, "get_baselin": [96, 132, 137, 151, 269], "get_compon": [15, 22, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118], "get_label": [97, 106], "get_loglevel": 314, "get_real_method": 327, "get_scale_nam": 114, "get_spectra": 4, "get_timestamp": 4, "get_user_and_nod": 6, "get_wavelength": 4, "get_window": 338, "getc": 105, "getc_to_c_idx": 105, "getconc": [20, 105], "getcwd": 315, "getmessag": 338, "getspec": 105, "getst_to_st_idx": 105, "gettingstart": [25, 28, 32, 34, 40, 48, 52, 55, 57, 61, 64, 68, 71, 77, 80, 81, 92, 367], "gfw": 319, "ggplot": [328, 329], "ghaffari": 93, "gif": 324, "gilson": 93, "giovannetti": 93, "git": [5, 6, 10, 13, 394], "github": [5, 6, 12, 47, 85, 86, 88, 90, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 352, 365, 371, 385, 395], "githubusercont": 84, "gitpython": 5, "give": [2, 79, 95, 96, 97, 106, 115, 132, 271, 311, 312, 313, 318, 323, 324, 325, 327, 328, 330, 331, 338], "given": [2, 18, 23, 31, 37, 47, 74, 90, 91, 95, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 131, 135, 139, 140, 146, 155, 157, 158, 167, 168, 171, 178, 186, 189, 192, 195, 203, 204, 228, 230, 231, 233, 248, 254, 257, 258, 261, 263, 265, 268, 270, 273, 275, 283, 284, 297, 298, 299, 302, 303, 307, 308, 309, 310, 311, 315, 316, 318, 325, 331, 336, 337, 338, 387], "glob": [74, 315], "global": [343, 396], "gm": [156, 170, 227, 266, 267, 271, 285, 330, 333], "gmt": [18, 23, 37, 42, 44, 90, 312, 315, 317, 318, 319, 337, 340], "go": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 86, 318, 321, 322, 330, 333], "god": 2, "goe": [303, 314], "golai": [67, 69, 71, 72, 101, 106, 229, 258, 268, 289, 306, 334], "golden": 102, "gonzalez": 93, "good": [2, 3, 6, 19, 30, 70, 74, 79, 95, 313, 318, 319, 320, 328, 338], "googl": [84, 372, 384, 393], "got": 90, "govern": 2, "gradient": 307, "grai": 328, "gram": [4, 38, 245, 364], "grant": 2, "graph": [106, 112, 116, 209, 210, 211, 212, 214, 215, 220, 328], "graphen": [93, 305], "graphic": [3, 22, 23, 91, 93, 322, 328], "graphicx": 328, "graphviz": 116, "gratio": [30, 307], "grave": 324, "gravimetr": [93, 305], "grayscal": [328, 329], "greater": [23, 67, 106, 112, 149, 161, 179, 224, 271, 272, 307, 324, 330, 338], "greatli": [304, 323], "green": [6, 50, 63, 74, 75, 311, 324, 335], "grei": 311, "grepioni": 93, "greter": 318, "grid": [47, 95, 196, 328], "grid_alpha": 328, "grid_axi": 328, "grid_color": 328, "grid_linestyl": 328, "grid_linewidth": 328, "gridlin": 328, "griffin": 93, "group": [20, 42, 54, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 304, 311, 315, 317, 318, 319, 325, 328, 337, 340, 393, 395], "gt": [307, 309, 310, 311, 325, 327, 328, 335, 338], "guarante": [91, 95], "guaranti": 368, "guerin": 1, "guess": [19, 106, 112, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 303, 307, 308, 315, 337, 383], "gui": [3, 5, 91, 93, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 328], "guid": [2, 4, 5, 10, 83, 88, 90, 92, 324, 342], "guidelin": [5, 7, 88], "guilhau": [93, 99], "guillaum": [1, 93], "guinea": 93, "gustavo": 93, "gu\u00e9rin": 314, "gwidth": [30, 307], "g\u00fa": 315, "h": [31, 38, 93, 109, 289, 303, 307, 325, 328, 331, 333, 338], "h2o": 335, "h3po4": 339, "ha": [2, 11, 12, 18, 19, 23, 37, 47, 63, 66, 74, 86, 91, 97, 98, 100, 102, 104, 106, 110, 112, 115, 118, 153, 161, 163, 177, 229, 239, 240, 274, 286, 303, 309, 310, 311, 315, 317, 318, 323, 325, 327, 328, 330, 331, 332, 333, 335, 336, 337, 343, 347, 365, 385, 387, 389, 390, 391, 395, 396], "habit": 6, "haddad": 93, "hae": [315, 318], "hal": [93, 305], "half": [97, 106, 128, 186, 228, 311, 328], "halko": 112, "ham": [101, 156, 170, 174, 176, 227, 266, 267, 268, 271, 285, 335, 338], "hamid": 93, "han": [90, 93, 101, 268, 338], "hand": [86, 95, 106, 157, 309, 310, 311, 313], "handl": [4, 24, 38, 74, 90, 97, 106, 115, 128, 162, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 265, 316, 325, 328, 329, 331, 336, 337, 338, 358, 360, 368, 370, 374, 376, 382, 385, 390], "hann": [170, 175], "hannemos": 93, "happ": [175, 335], "happen": 307, "hard": [20, 105, 112, 303, 309], "hardc": 105, "hardconc": [20, 105], "hardspec": 105, "hardst": 105, "harri": 138, "has_complex_dim": [106, 259], "has_data": [97, 106, 325], "has_defined_nam": [97, 98, 106], "has_rais": 338, "has_unit": [97, 106], "hasattr": 116, "hat": [17, 19, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 303, 310], "hatch_color": 328, "hatch_linewidth": 328, "have": [1, 2, 6, 10, 12, 13, 16, 18, 19, 30, 31, 37, 42, 50, 54, 63, 74, 75, 82, 95, 97, 98, 100, 106, 108, 109, 115, 118, 123, 135, 140, 149, 154, 158, 168, 196, 204, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 271, 298, 304, 307, 309, 311, 312, 314, 315, 318, 319, 322, 323, 324, 325, 326, 328, 329, 330, 331, 333, 337, 338, 340, 348, 369, 379, 389, 395], "haven": 5, "hay": [93, 150], "hc": 93, "hdr": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "head": 84, "header": [231, 353], "health": 91, "heart": [91, 303], "height": [74, 75, 111, 162, 196, 311, 328], "heigth": 74, "heli": [93, 305], "hello": 119, "helmu": 1, "help": [6, 9, 12, 85, 87, 89, 90, 92, 314, 323, 328, 330, 331, 332, 365], "helper": 6, "helvet": 328, "helvetica": 328, "henc": [18, 37, 105, 112, 303, 309, 310, 315, 318, 337, 338], "henrik": 93, "her": 340, "here": [6, 13, 17, 18, 19, 21, 22, 23, 31, 36, 37, 38, 39, 43, 44, 46, 47, 50, 63, 70, 74, 75, 83, 90, 95, 100, 105, 106, 229, 239, 304, 307, 308, 309, 310, 311, 313, 314, 315, 317, 318, 319, 322, 325, 327, 328, 331, 333, 335, 337, 338, 339, 340], "herebi": 2, "herefrom": 2, "hereinabov": 2, "hereinaft": 2, "hereof": 2, "hereund": 2, "hermit": [63, 96, 331], "hesit": [82, 323], "hex": [324, 328], "hfl": 319, "hfq": 319, "hfw": 319, "hidden": [94, 315], "high": [9, 95, 289, 319, 391], "high_bound": [30, 74, 75, 76, 307], "higher": [84, 106, 123, 274, 286, 311, 331], "highest": [114, 311], "highli": [93, 304, 305, 323], "highlight": 324, "hilbert": 177, "hilvert": 177, "hint": 328, "hist_bin": 328, "histogram": 328, "histori": [4, 6, 22, 23, 42, 44, 46, 74, 76, 90, 91, 106, 239, 309, 310, 312, 315, 317, 318, 319, 326, 330, 333, 336, 337, 340, 369], "hold": [97, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 323], "holder": [2, 230], "home": [16, 21, 24, 42, 44, 45, 46, 47, 54, 74, 90, 94, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 379], "homebrew": [5, 84], "homepag": [19, 309, 310], "homogen": 355, "honour": 93, "hook": 6, "hope": [304, 325, 326], "hopefulli": [91, 325, 358, 365], "horizont": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 311, 328], "host": [12, 324], "hostedtoolcach": 338, "hot": [36, 39, 325], "hotfix": 363, "hour": [17, 24, 31, 38, 43, 97, 98, 106, 163, 307, 325, 340], "how": [6, 8, 22, 37, 38, 41, 47, 49, 53, 58, 62, 65, 69, 72, 73, 82, 90, 106, 265, 303, 304, 310, 311, 312, 313, 315, 316, 321, 325, 328, 334, 337, 338, 339], "howev": [2, 6, 18, 42, 66, 74, 97, 106, 124, 127, 224, 274, 278, 286, 304, 307, 309, 310, 318, 319, 322, 325, 327, 328, 332, 338], "hpa": 319, "hpf": 319, "hpl": 19, "hplc": [19, 309, 310], "hr": [38, 47, 98, 307], "hspace": 196, "html": [6, 9, 293, 324, 327, 395], "http": [0, 5, 6, 27, 38, 42, 47, 84, 86, 88, 93, 293, 309, 313, 314, 315, 323, 324, 328, 331, 338, 385, 395], "hua": 93, "hum": 319, "human": [95, 116], "humid": 319, "hydrodesulfur": [93, 305], "hydrogel": [93, 305], "hyperbol": 334, "hypercomplex": [97, 106, 125, 192, 334], "hyphen": [324, 328], "hypothet": [106, 286], "hz": [38, 59, 76, 97, 156, 174, 261, 330, 333], "h\u00ba": [315, 318], "h\u00e3\u00e0": [315, 318], "h\u2070": 325, "i": [1, 2, 4, 5, 6, 9, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 27, 30, 36, 37, 38, 39, 42, 46, 47, 50, 54, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 84, 85, 86, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 145, 146, 149, 150, 151, 152, 153, 154, 156, 161, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 178, 179, 183, 186, 187, 188, 189, 191, 192, 194, 195, 196, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 258, 259, 261, 265, 268, 270, 271, 272, 273, 274, 275, 278, 280, 281, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 340, 342, 343, 346, 355, 364, 366, 368, 371, 378, 382, 383, 385, 387, 388, 389, 390, 391, 394, 395, 396], "i0": [74, 76, 315, 318], "i2iexp": 95, "iadd": 325, "iana": 328, "ib": [106, 121, 122], "ibr": 2, "ica": [17, 100, 303], "icon": [13, 322], "id": [97, 98, 106, 115, 133, 169, 190, 224, 264, 287, 315, 323, 325, 327], "idea": [2, 12, 83], "ident": [2, 51, 106, 115, 160, 338], "identif": [93, 305], "identifi": [2, 50, 97, 98, 106, 115, 150, 162, 307, 325], "ie": 31, "iecewis": 331, "ieee": 93, "iexp": 95, "ifft": [161, 333], "ignor": [6, 97, 106, 114, 118, 123, 125, 126, 163, 192, 195, 207, 233, 236, 315, 366], "igrf": [240, 319], "igsm": [240, 319], "ii": [2, 75, 106, 141, 142, 309, 310, 327, 331, 336], "iia": 95, "iii": [2, 309, 310, 331], "ij": 303, "ik\u00ba": [315, 318], "ill": 93, "illustr": [6, 311, 315, 328, 337, 338], "im": 333, "imag": [6, 36, 39, 46, 47, 106, 114, 141, 142, 193, 196, 197, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 324, 328, 330, 333, 359, 391], "image_aspect": 328, "image_cmap": 328, "image_composite_imag": 328, "image_interpol": 328, "image_lut": 328, "image_origin": 328, "image_resampl": 328, "imaginari": [6, 97, 106, 131, 177, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 254, 333, 334, 336, 339], "imcompat": 319, "img": 324, "immedi": 8, "immeubl": 2, "impact": [311, 331, 343, 387, 396], "implement": [4, 8, 95, 99, 106, 124, 127, 150, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 289, 291, 303, 309, 310, 311, 313, 317, 318, 323, 325, 329, 331, 337, 338], "implicit": 95, "import": [4, 6, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 106, 115, 116, 120, 155, 187, 229, 239, 240, 260, 261, 307, 309, 310, 311, 312, 313, 314, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 358, 390, 395, 396], "import_optional_depend": 6, "importerror": [6, 85, 314], "importexport": [315, 317], "impos": 20, "improp": 328, "improv": [1, 6, 9, 21, 82, 83, 97, 106, 112, 164, 308, 309, 323, 328, 330, 332, 343, 345, 354, 358, 360, 361, 362, 365, 367, 369, 373, 377, 382, 384, 391, 393, 395, 396], "imshow": 328, "imul": 333, "ina": 93, "inaccur": [106, 274, 286], "inc": 319, "inch": [106, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "includ": [1, 2, 4, 6, 9, 12, 27, 83, 84, 85, 87, 89, 90, 95, 96, 97, 98, 106, 115, 128, 162, 171, 186, 189, 308, 318, 323, 324, 328, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "include_limit": [96, 331], "incompat": [38, 97, 106, 183, 240, 278, 328], "inconsist": 239, "incorpor": [2, 239], "incorrect": 21, "increas": [21, 66, 95, 96, 105, 106, 132, 307, 318, 328, 331, 332, 338, 372, 390, 393], "increment": [97, 337], "incur": 2, "inde": 309, "independ": [24, 99, 100, 102, 104, 105, 109, 110, 112, 117, 118, 196, 239, 303, 309, 318, 328, 333], "index": [9, 21, 36, 37, 39, 42, 74, 75, 92, 95, 97, 98, 102, 105, 106, 112, 113, 129, 130, 134, 141, 142, 155, 160, 231, 258, 270, 283, 307, 309, 310, 315, 318, 331, 334, 338, 340, 355, 378, 388, 390, 391], "index_pc": 24, "indic": [2, 17, 22, 50, 74, 96, 97, 102, 105, 106, 112, 120, 125, 126, 151, 162, 192, 195, 206, 270, 277, 303, 309, 310, 313, 318, 331, 335, 336, 337, 352], "indiffer": 330, "indirect": 248, "indirectli": 2, "individu": [1, 2, 6, 37, 42, 63, 104, 106, 110, 123, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 304, 307, 311, 319, 325, 328, 329, 371], "induct": 333, "industri": 2, "ine": 319, "ineffect": 2, "inf": [6, 106, 114, 167], "infer": [19, 97, 106, 121, 122, 128, 171, 186, 189, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 311], "infin": [106, 112, 124, 336], "infinit": [106, 274, 286], "info": [17, 18, 19, 20, 21, 24, 30, 54, 66, 74, 75, 76, 79, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 119, 180, 258, 268, 289, 307, 309, 311, 314, 324, 338, 352, 369, 383], "info_": [30, 54, 95, 119, 314, 338], "inform": [5, 6, 18, 19, 27, 30, 31, 66, 83, 90, 97, 106, 112, 114, 137, 172, 231, 303, 304, 308, 310, 311, 313, 315, 319, 321, 322, 325, 328, 335, 338, 369, 385], "informatiqu": 2, "infra": [93, 305], "infrar": [18, 37, 93, 94, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 316, 328], "infring": 2, "inherit": 328, "ini": 6, "init": [99, 106, 109, 383], "init_concentr": 95, "init_x": 113, "initalis": 331, "initi": [2, 6, 19, 20, 74, 91, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 153, 157, 158, 308, 317, 323, 325, 328, 331, 338, 343, 344, 345, 396], "initial_ind": 327, "initial_rt": [70, 79, 338], "initialis": [106, 109, 387], "inlet_f": 113, "inlet_x": 113, "inlin": 328, "inner": [123, 334], "innov": 2, "inplac": [38, 59, 60, 97, 106, 116, 134, 136, 138, 141, 142, 145, 156, 161, 165, 166, 170, 174, 175, 176, 179, 183, 184, 185, 191, 207, 208, 253, 255, 259, 270, 271, 272, 276, 278, 280, 281, 283, 285, 318, 325, 330, 333, 335, 340], "input": [16, 19, 31, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 121, 122, 124, 125, 126, 127, 128, 131, 132, 135, 136, 138, 139, 140, 141, 142, 146, 149, 150, 151, 153, 154, 156, 157, 158, 162, 167, 168, 170, 171, 175, 176, 186, 189, 192, 194, 195, 203, 204, 207, 208, 226, 254, 258, 268, 269, 272, 273, 274, 275, 277, 285, 286, 289, 297, 298, 299, 302, 309, 315, 334, 355, 390], "inquir": 328, "inria": 2, "ins": 319, "insensit": 96, "insert": [86, 324], "insid": [6, 324, 328], "insight": [90, 93, 305, 326], "inspac": [97, 106, 128], "inspect": [67, 308, 332], "inspir": 6, "instal": [5, 6, 85, 92, 102, 323, 328, 329, 342, 346, 354, 359, 367, 371, 374, 375, 384, 393, 394], "instanc": [36, 37, 38, 39, 50, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 119, 137, 157, 158, 163, 167, 168, 172, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 278, 282, 297, 298, 304, 307, 309, 310, 311, 313, 314, 315, 318, 319, 325, 328, 331, 333, 336, 337, 338, 340, 343, 396], "instanti": [114, 343, 396], "instead": [6, 12, 23, 31, 37, 38, 63, 74, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 125, 126, 135, 137, 154, 158, 161, 162, 164, 171, 172, 189, 192, 195, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 274, 286, 304, 315, 323, 324, 325, 328, 331, 336, 337, 338, 343, 345, 377, 383, 385, 387, 391, 396], "institut": 2, "instruct": [2, 83, 84, 90, 314, 342, 359], "instrument": [2, 27, 93, 313, 319], "instrument_statu": 319, "int": [8, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 119, 123, 124, 125, 126, 127, 131, 132, 134, 135, 136, 138, 140, 141, 142, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 186, 189, 191, 192, 194, 195, 196, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 230, 248, 253, 254, 255, 258, 260, 265, 268, 269, 270, 271, 272, 274, 275, 276, 284, 285, 286, 289, 297, 299, 301, 302, 325, 328, 331], "int64": [106, 157, 167, 203, 297], "int8": [106, 167, 203, 297], "int_": 102, "integ": [21, 23, 63, 79, 96, 97, 101, 106, 123, 128, 134, 136, 138, 145, 146, 149, 156, 161, 165, 166, 170, 174, 175, 176, 179, 191, 194, 207, 208, 224, 253, 255, 258, 265, 268, 271, 274, 275, 284, 285, 286, 289, 331, 336, 337], "integr": [2, 11, 20, 74, 76, 91, 95, 99, 100, 102, 103, 105, 106, 109, 112, 117, 118, 146, 265, 275, 284, 308, 321, 323, 338, 345, 354, 391], "intel": 24, "intellectu": 2, "intellig": [16, 93, 315], "intend": 2, "intens": [16, 36, 39, 60, 74, 75, 76, 90, 117, 150, 196, 239, 309, 311, 325, 327, 330, 332, 333, 335], "intention": 116, "interact": [63, 83, 85, 87, 89, 93, 99, 100, 102, 105, 109, 112, 117, 118, 328, 345], "interactiveanalysi": 117, "interactiveshel": 338, "intercept": [31, 104, 110, 307], "interchang": [106, 276, 283], "interest": [2, 3, 18, 19, 27, 37, 50, 63, 74, 75, 91, 97, 106, 309, 310, 313, 315, 318, 325, 331, 333, 336, 337, 338], "interfac": [2, 91, 93, 303, 322, 323, 328, 338], "interfero": 335, "interferogram": [232, 234, 240, 242, 243, 319, 321, 334, 361, 362, 367, 374], "interferomet": 319, "interlac": 336, "interleav": 106, "intermedi": [111, 331], "intern": [2, 4, 91, 96, 99, 100, 102, 103, 105, 109, 111, 112, 114, 115, 117, 118, 319, 323, 325, 369], "internet": 385, "interp": [101, 258, 268], "interphas": [93, 305], "interpol": [63, 93, 96, 123, 162, 241, 311, 329, 331, 338], "interpolate_method": 123, "interpolate_sampl": 123, "interpret": [2, 112, 115, 162, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "interrupt": 2, "intersect": [123, 311, 329], "interv": [97, 106, 112, 123, 128, 139, 171, 186, 189, 196, 228, 265, 311], "intervent": 2, "intialis": 387, "introduc": 383, "introduct": [49, 52, 56, 106, 216, 239, 306, 308, 321, 326, 334], "intsimp": 312, "inttrapz": 312, "intuit": [3, 90, 93, 305], "inv": [136, 138, 156, 161, 170, 174, 175, 176, 207, 208, 271, 285], "invalid": [2, 336], "invers": [90, 93, 96, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 136, 138, 156, 161, 170, 174, 175, 176, 179, 207, 208, 271, 285, 305, 318, 336], "inverse_transform": [17, 30, 75, 76, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 307, 383], "investig": [20, 93, 305], "invis": 328, "invok": 2, "involv": 102, "io": [38, 106, 115, 187], "io_loop": 338, "ion": [93, 305], "ion_curr": 241, "iop": 93, "ip": 311, "ipkernel": 338, "ipykernel": 338, "ipykernel_18040": 338, "ipykernel_launch": 338, "ipynb": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 315, 318], "ipython": [87, 89, 327, 338], "ipywidget": 382, "ir": [30, 41, 42, 48, 54, 56, 75, 93, 97, 106, 141, 142, 155, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 270, 290, 293, 305, 306, 307, 311, 312, 317, 320, 321, 323, 325, 327, 328, 331, 335, 336, 337, 340, 367], "ir4": 293, "ird": 335, "irdata": [15, 18, 21, 23, 30, 37, 42, 43, 44, 51, 63, 86, 90, 94, 97, 99, 106, 115, 118, 134, 135, 140, 146, 162, 187, 194, 229, 230, 231, 233, 239, 240, 244, 246, 247, 265, 273, 274, 275, 284, 286, 290, 291, 307, 311, 312, 315, 317, 318, 319, 325, 328, 329, 331, 335, 336, 337, 340], "irdh": 335, "iri": [14, 25, 33, 93, 97, 98, 99, 100, 103, 105, 106, 109, 112, 117, 118, 188, 229, 305, 306, 345, 352, 366, 367, 391], "iris1": 18, "iris2": 18, "iris3": 18, "iriskernel": [18, 90], "irt": 335, "irth": 335, "is_1d": 106, "is_compatible_with": [116, 120], "is_complex": [106, 141, 142, 259], "is_dir": [106, 108, 115], "is_empti": [97, 98, 106, 325], "is_fil": [106, 108, 115], "is_float": [97, 106], "is_integ": [97, 106], "is_interleav": 106, "is_label": [97, 98, 106], "is_mask": 106, "is_quaternion": [106, 259], "is_same_dim": 98, "is_units_compat": [97, 106], "isfloat": 45, "isinst": [4, 116, 120, 260], "isn": 9, "isobutanol": [93, 305], "isoformat": 106, "isol": 86, "isotherm": 95, "isotop": 345, "isp_matrix": [19, 24, 309, 310], "issu": [2, 5, 6, 85, 87, 89, 93, 106, 123, 274, 286, 314, 336, 345, 350, 353, 354, 355, 357, 366, 367, 370, 374, 376, 382, 384, 387, 388, 389, 391, 392], "ist": 319, "itakura": 109, "ital": [324, 328], "item": [6, 97, 106, 115, 116, 164, 315, 318, 324, 337], "item_to_attr": [106, 115], "iter": [19, 20, 21, 24, 30, 63, 90, 95, 96, 97, 98, 100, 103, 105, 106, 109, 111, 112, 114, 132, 137, 151, 163, 164, 172, 269, 309, 331, 384], "iterabbl": 112, "iterated_pow": 112, "ith": [54, 318], "ito": [38, 97, 106, 116, 182, 184, 185, 278, 312, 318, 328, 340, 350], "ito_base_unit": [97, 106, 116, 183, 185, 278], "ito_pref": 116, "ito_reduced_unit": [97, 106, 116, 183, 184, 278], "ito_root_unit": 116, "its": [2, 67, 90, 91, 95, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 135, 152, 154, 178, 202, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 237, 238, 263, 307, 309, 310, 311, 315, 318, 324, 325, 327, 328, 337, 338, 372, 387, 389], "itself": [2, 90, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 258, 268, 315], "ivp_solver_kwarg": [20, 95], "j": [1, 93, 97, 105, 106, 115, 116, 182, 185, 203, 204, 281, 305, 315, 318, 325], "j7": [315, 318], "j8": [315, 318], "jaap": 93, "jacobian": 95, "jafari": 93, "jaggi": 328, "jamil": 93, "jan": [93, 318], "jaroniec": 1, "jaroslava": 93, "jaumot": [14, 17, 24, 25, 33, 93, 105, 106, 229, 306, 309, 310], "ja\u0161\u00edk": 93, "jcamp": [90, 93, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 315, 316, 320], "jcat": [93, 305], "jdx": [90, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 317], "jean": 93, "jendrlin": 93, "jeroen": 93, "jet": [74, 328], "jeu": 315, "jianjun": 93, "jo": 93, "joanna": 93, "joaquim": 93, "job": 91, "john": 315, "join": [15, 30, 74, 90, 311, 315], "joint": 2, "joran": 93, "joren": 93, "josh": [319, 395], "joshduran": 395, "joul": [106, 203], "journal": 93, "jpeg": 328, "jr": 93, "json": [106, 115, 345], "jth": 318, "juan": [93, 303], "jul": [23, 42, 90, 312, 315, 340], "jupyt": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 85, 86, 87, 89, 90, 91, 303, 323, 324, 328, 384, 395], "jupyterlab": 322, "juraj": 93, "juri": 93, "jurisdict": 2, "just": [18, 31, 42, 47, 63, 100, 319, 327, 329, 335, 336, 340], "jz\u00bal": [315, 318], "k": [6, 15, 16, 18, 20, 21, 22, 23, 36, 39, 54, 59, 60, 89, 90, 93, 95, 98, 102, 103, 106, 113, 118, 152, 160, 196, 228, 303, 313, 325, 328, 333], "k0": 20, "k_1": 95, "k_dt": 95, "k_exp": 95, "k_n": 95, "kadam": [93, 305], "kalb\u00e1\u010d": 93, "karimvand": 93, "karol\u00edna": 93, "katsumo": 332, "katsumoto": [93, 150, 332, 384], "kbr": 319, "kbrdetector": 319, "kbrmeasur": 319, "kee": 93, "keep": [5, 18, 20, 63, 67, 74, 75, 79, 95, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 153, 307, 311, 328, 334], "keep_row": 47, "keepdim": [97, 106, 116, 124, 125, 126, 127, 135, 146, 192, 194, 195, 226, 274, 275, 286], "keepnam": [97, 98, 106], "kei": [4, 74, 92, 95, 98, 106, 115, 309, 311, 318, 353], "keller": [14, 25, 33, 97, 99, 106, 140, 154, 306], "kelvin": 95, "kept": [105, 112, 318, 387], "kernel": [18, 102, 103, 268, 328, 338, 352, 391], "kernelapp": 338, "kernelbas": 338, "kevin": 93, "keyword": [95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 128, 136, 137, 138, 140, 145, 149, 153, 156, 157, 158, 161, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 179, 186, 187, 189, 191, 203, 204, 206, 207, 208, 209, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 265, 268, 271, 274, 284, 285, 286, 289, 290, 297, 298, 307, 311, 315, 331, 370, 389, 395], "kg": [97, 106, 116, 185, 281], "khodadadi": 93, "khz": 261, "kilogram": 325, "kilomet": [31, 106, 160, 203, 307], "kin": 20, "kin_exp": 95, "kin_param_to_set": 113, "kind": [5, 97, 102, 103, 106, 154, 304, 307, 325, 326, 339], "kindli": 0, "kinet": [14, 25, 33, 85, 90, 93, 95, 97, 99, 105, 106, 113, 229, 305, 306, 384], "klass": 111, "kleibert": 93, "km": [31, 38, 97, 106, 160, 163, 164, 168, 203, 240, 307, 319], "know": [38, 91, 99, 100, 102, 109, 112, 117, 118, 303, 307, 318, 319, 331], "knowledg": [2, 90, 91, 318], "known": [12, 190, 231, 307, 309, 338], "kubelka": [239, 240, 319], "kubi\u010dka": 93, "kullback": 109, "kutta": 95, "kv\u00edtek": 93, "kwarg": [4, 8, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 125, 126, 128, 136, 137, 138, 139, 140, 145, 147, 148, 149, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 186, 187, 189, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 265, 266, 267, 268, 270, 271, 277, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 336, 338], "kwargsgetconc": [20, 105], "kwargsgetspec": 105, "l": [2, 18, 50, 60, 63, 67, 70, 74, 75, 76, 93, 102, 106, 165, 166, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 253, 303, 307, 310, 311, 313, 315, 318, 330, 331, 332, 333, 338, 352, 382], "l1": 109, "l1_ratio": 109, "l2": [109, 239], "l3": 239, "l_1": 310, "l_x": [303, 313], "l_y": [303, 313], "la": [2, 93, 305], "lab": [23, 24, 303, 323, 328, 384], "label": [4, 15, 16, 18, 21, 22, 23, 27, 31, 36, 37, 39, 42, 44, 46, 50, 51, 54, 59, 60, 70, 74, 75, 85, 87, 89, 90, 97, 98, 106, 112, 196, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 230, 270, 304, 307, 310, 311, 312, 313, 315, 317, 318, 319, 326, 328, 331, 333, 335, 337, 338, 340, 353, 382], "labelcolor": 328, "labels_column": [23, 112], "labels_everi": [112, 310], "labor": 2, "laboratoir": 1, "laboratori": [16, 93], "labspec": [46, 50, 66, 67, 70, 79, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 332, 338, 345, 366], "labspec6": [46, 315], "lack": 309, "laetitia": 93, "laid": 106, "lakeh": 93, "lamb": [70, 79, 96, 101, 132, 289, 331, 338], "lambda": [97, 102, 103, 106, 163, 190, 264, 303, 307, 324], "langmuir": [18, 90, 103], "languag": [2, 13, 84, 323], "laod": 22, "lapack": 112, "larg": [11, 15, 74, 117, 162, 289, 304, 311, 328, 331, 338, 358], "larger": [63, 79, 96, 101, 105, 106, 112, 132, 139, 150, 162, 289, 291, 309, 310, 314, 328, 338], "largest": [18, 300, 336, 338], "larmor": [97, 261], "laser": [97, 319, 335], "laser_frequ": [97, 335, 374], "last": [6, 18, 19, 75, 90, 97, 100, 101, 105, 106, 123, 124, 127, 136, 138, 140, 145, 153, 156, 161, 165, 166, 170, 171, 174, 175, 176, 179, 186, 189, 191, 207, 208, 230, 253, 255, 258, 265, 268, 270, 271, 278, 284, 285, 289, 307, 310, 311, 317, 318, 327, 328, 330, 331, 332, 334, 337, 338, 385, 393], "latent": [303, 313], "later": [37, 75, 90, 96, 97, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 115, 117, 118, 258, 268, 289, 328, 391], "latest": [9, 84, 393], "latex": 328, "latex_preambl": 328, "latter": [66, 318, 338], "launch": [89, 309, 322], "launch_inst": 338, "launch_new_inst": 338, "laura": 93, "law": 2, "lazi": [343, 396], "lb": [59, 74, 76, 156, 174, 330, 333], "lc": [1, 87, 89, 90, 91, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "lcsagh": 319, "lct": 319, "le": [2, 93, 229, 239, 240, 305, 315, 318], "lead": [21, 109, 311, 314, 328, 331, 338], "learn": [22, 86, 90, 92, 93, 96, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 188, 305, 310, 313, 322, 323, 328], "least": [2, 30, 31, 63, 93, 96, 101, 104, 105, 106, 110, 111, 114, 132, 137, 151, 172, 269, 289, 303, 305, 308, 309, 321, 328, 331, 385, 387, 391], "least_squar": [111, 391], "leastsq": [74, 76, 111], "leau": [93, 305], "leav": 328, "leblanc": 2, "left": [13, 74, 86, 90, 95, 97, 105, 106, 112, 114, 118, 124, 125, 126, 127, 131, 165, 166, 170, 191, 192, 194, 195, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 254, 274, 275, 286, 303, 309, 311, 328, 331, 338], "left_bas": [74, 311], "left_ip": [74, 311], "left_op": 95, "leftarrow": 105, "legaci": 328, "legal": 2, "legend": [15, 16, 21, 23, 27, 31, 50, 51, 60, 70, 74, 216, 307, 311, 312, 313, 328, 331, 333, 335, 338], "legend_borderaxespad": 328, "legend_borderpad": 328, "legend_columnspac": 328, "legend_edgecolor": 328, "legend_facecolor": 328, "legend_fancybox": 328, "legend_fonts": 328, "legend_framealpha": 328, "legend_frameon": 328, "legend_handleheight": 328, "legend_handlelength": 328, "legend_handletextpad": 328, "legend_labelspac": 328, "legend_loc": 328, "legend_markerscal": 328, "legend_numpoint": 328, "legend_scatterpoint": 328, "legend_shadow": 328, "legisl": 2, "leibler": 109, "leiden": 93, "len": [6, 42, 74, 105, 106, 116, 147, 162, 229, 233, 239, 240, 274, 286, 307, 311, 315, 318, 319, 328], "len_seq": 116, "length": [95, 97, 104, 106, 110, 114, 115, 116, 120, 128, 135, 162, 171, 189, 216, 272, 278, 291, 303, 309, 311, 319, 325, 328, 337, 338, 340], "leq": [170, 175, 176, 303], "less": [75, 95, 98, 101, 106, 109, 112, 114, 258, 307, 325, 328], "let": [5, 18, 20, 23, 27, 30, 31, 37, 38, 51, 54, 67, 74, 79, 90, 134, 307, 309, 310, 311, 312, 313, 314, 315, 318, 325, 327, 329, 331, 332, 333, 336, 337, 338, 340], "letter": [2, 102, 325, 328], "level": [9, 93, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 149, 173, 196, 258, 260, 268, 289, 305, 309, 314, 324, 328, 335, 383], "lf": [315, 318], "lfl": 319, "lfq": 319, "lfw": 319, "liabil": 2, "liabl": 2, "lib": [21, 24, 327, 338], "libor": 93, "librairi": [49, 52, 56, 106, 216, 239, 306], "librari": [3, 6, 31, 36, 39, 63, 86, 91, 100, 105, 106, 116, 282, 322, 323, 325, 328, 338, 382], "licenc": [1, 177], "licens": [0, 47, 91, 289, 314], "license": 2, "licensor": 2, "life": 315, "light": [97, 328], "lighter": 328, "lign": 325, "like": [5, 6, 8, 13, 31, 36, 39, 74, 75, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 118, 121, 122, 149, 150, 153, 158, 162, 168, 204, 230, 258, 263, 268, 289, 298, 303, 307, 310, 311, 322, 326, 328, 336, 343, 393, 396], "likelihood": [106, 274, 286], "lim": 333, "limit": [2, 21, 50, 79, 82, 96, 97, 106, 137, 139, 172, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 231, 235, 239, 307, 308, 310, 311, 312, 317, 319, 323, 325, 328, 331, 337, 338], "linalg": [31, 112], "line": [2, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 67, 74, 75, 76, 79, 91, 94, 96, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 133, 151, 156, 169, 190, 196, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 264, 287, 303, 307, 309, 310, 311, 317, 318, 319, 325, 327, 328, 334, 338, 343, 382, 383, 396], "line_1": [30, 75, 307], "line_2": [30, 75, 307], "line_3": 75, "line_4": 75, "line_5": 75, "linear": [8, 29, 30, 32, 33, 63, 79, 96, 97, 100, 104, 106, 110, 111, 114, 123, 151, 189, 207, 208, 224, 303, 306, 308, 345, 360, 387, 388, 390], "linear_model": [104, 110], "linearcoord": [348, 387], "linearize_below": 97, "linearli": 303, "linearregress": [104, 110], "linebreak": 324, "linei": 307, "lines_antialias": 328, "lines_color": 328, "lines_dash_capstyl": 328, "lines_dash_joinstyl": 328, "lines_dashdot_pattern": 328, "lines_dashed_pattern": 328, "lines_dotted_pattern": 328, "lines_linestyl": 328, "lines_linewidth": 328, "lines_mark": 328, "lines_markeredgecolor": 328, "lines_markeredgewidth": 328, "lines_markerfacecolor": 328, "lines_markers": 328, "lines_scale_dash": 328, "lines_solid_capstyl": 328, "lines_solid_joinstyl": 328, "linesantialias": 328, "linestyl": [20, 74, 75, 79, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 311, 328, 330, 335], "linetyp": 198, "linewidth": [106, 114, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 309, 310, 328], "linex": 307, "linez": 307, "link": [8, 9, 82, 323, 352], "linspac": [36, 39, 97, 98, 106, 128, 171, 189, 307, 325], "linter": 6, "linux": [5, 84, 88, 94, 315, 330, 359, 368], "lisa": 93, "list": [4, 8, 31, 37, 42, 50, 66, 83, 85, 90, 95, 96, 97, 98, 102, 105, 106, 111, 112, 114, 115, 116, 123, 155, 157, 158, 167, 168, 196, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 297, 298, 303, 304, 307, 309, 310, 311, 313, 315, 318, 319, 325, 328, 331, 334, 337, 342, 343, 352, 355, 390, 396], "list_al": 328, "list_fil": 318, "list_of_tz_database_time_zon": 325, "listnd": 239, "liter": 315, "literatur": 309, "littl": [23, 63, 340], "live": 9, "ll": [6, 90, 96, 102, 308, 331], "ln": [97, 106, 189, 319], "lnd": 24, "load": [2, 4, 15, 22, 23, 24, 36, 38, 39, 41, 48, 50, 54, 56, 63, 66, 67, 74, 97, 106, 112, 115, 118, 209, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 270, 290, 303, 306, 307, 308, 309, 316, 321, 325, 326, 331, 332, 336, 343, 374, 382, 384, 396], "load_iri": 22, "loader": [343, 396], "lob": 307, "loc": [27, 70, 97, 313, 331, 333, 338], "loc2index": [94, 97], "local": [4, 47, 86, 95, 106, 162, 257, 318, 325, 328], "local_timezon": [106, 325], "localvar": 257, "localvr": 257, "locat": [6, 9, 50, 51, 85, 86, 94, 96, 97, 115, 151, 233, 303, 311, 315, 319, 328, 331, 335, 338, 346, 347, 391], "log": [11, 15, 16, 19, 20, 86, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 149, 171, 173, 189, 239, 240, 258, 260, 268, 289, 309, 319, 323, 328, 338, 342, 366, 374, 379, 383, 387], "log10": 328, "log_bas": [97, 106, 189], "log_level": [17, 18, 19, 20, 21, 24, 30, 63, 74, 75, 76, 79, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 149, 258, 268, 289, 307, 309, 314, 383], "logarithm": 336, "logcosh": 100, "logfil": 113, "logger": 379, "logic": [106, 124, 127], "logit": 114, "loglevel": [18, 321], "lognorm": 328, "logspac": [97, 106, 171], "lollow": 318, "long": [23, 79, 116, 325, 328, 336], "longer": [2, 343, 377, 395, 396], "look": [3, 6, 16, 42, 63, 74, 75, 309, 310, 311, 315, 322, 325, 328, 331, 337], "lookup": 328, "loop": [105, 303], "lopez": [93, 305], "lorentz": 174, "lorentzian": [190, 307], "lorentzianmodel": [287, 307], "loss": 2, "lost": [106, 279, 390], "lot": [6, 304, 325, 326], "louwen": 93, "low": [95, 117, 309, 319, 331], "low_bound": [30, 74, 75, 76, 307], "lower": [22, 23, 24, 27, 105, 106, 112, 139, 160, 309, 310, 311, 313, 314, 328, 333], "lowest": [114, 311], "lpf": 319, "lrf": [240, 319], "lsdoa": 95, "lsoda": 95, "lst": [307, 385], "lstq": 307, "lstsq": [29, 32, 33, 97, 105, 106, 306, 308], "lt": [15, 309, 310, 311, 325, 328, 338], "lu": [95, 112], "luca": 93, "lucia": 93, "lw": [30, 50, 70, 74, 75, 106, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 307, 338], "lwn": 319, "lyu": 93, "lz": 319, "lz1": 319, "m": [5, 21, 38, 60, 74, 75, 84, 87, 88, 89, 93, 95, 97, 98, 99, 106, 116, 118, 135, 136, 146, 160, 170, 175, 176, 182, 185, 194, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 274, 275, 278, 281, 286, 289, 303, 311, 312, 313, 314, 315, 318, 322, 325, 328, 330, 333, 336, 340, 362, 376], "m1": [19, 24, 309, 310], "m5nb": [27, 42, 313, 315], "m5spec": [27, 42, 313, 315], "m_a": [54, 116], "m_b": 54, "m_from": 120, "m_p": 54, "ma": [106, 135, 154, 279, 391], "mac": [84, 94], "macchietti": [93, 305], "machin": [188, 318], "machinenam": 318, "maco": [5, 84, 87, 88], "made": [1, 2, 50, 97, 98, 102, 106, 150, 226, 239, 241, 303, 311, 313, 315, 318, 337, 365], "maeder": [93, 99, 303], "magazin": 93, "maghemit": [93, 305], "magic": 328, "magma": [90, 328, 336], "magma_r": 331, "magnet": [98, 325], "magnitud": [15, 97, 106, 116, 120, 307, 309, 311, 318, 325, 334, 338], "magnitudet": 116, "mahdi": 93, "mahdiyeh": 93, "mahsa": 93, "mai": [1, 2, 3, 38, 54, 63, 66, 67, 74, 85, 93, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 124, 127, 139, 157, 158, 161, 162, 189, 205, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 304, 307, 318, 323, 325, 326, 328, 331, 332, 338, 348, 364, 368, 379, 385, 395], "mail": 328, "mail\u00e4nder": [1, 314], "main": [1, 2, 4, 6, 54, 85, 94, 97, 98, 106, 115, 152, 153, 160, 178, 304, 310, 318, 321, 323, 324, 325, 326, 331, 338, 345], "main_glob": 338, "mainimum": [106, 144], "mainli": [16, 91, 111, 323], "maint": 5, "maintain": 6, "mainten": [2, 5], "majeur": 2, "major": [47, 98, 307, 324, 325, 328, 338, 393], "make": [2, 6, 9, 12, 21, 36, 37, 38, 39, 63, 75, 85, 90, 91, 94, 95, 96, 97, 98, 106, 112, 115, 116, 119, 132, 136, 138, 145, 151, 156, 161, 163, 165, 166, 170, 172, 174, 175, 176, 179, 191, 207, 208, 248, 253, 255, 269, 271, 285, 304, 307, 309, 311, 324, 325, 326, 328, 331, 335, 336, 338, 340, 367, 372], "makestyl": [328, 345], "mamba": [84, 85, 87, 88, 89, 90], "mambaforg": [87, 88, 89], "manag": [82, 83, 86, 115, 326], "mandatori": 328, "mani": [6, 38, 82, 90, 91, 95, 106, 304, 309, 311, 314, 315, 323, 325, 378, 380], "manipul": [3, 35, 40, 56, 85, 97, 106, 116, 159, 229, 306, 318], "manner": 2, "manual": [6, 85, 91, 106, 132, 134, 137, 151, 157, 172, 207, 208, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 269, 271, 308, 330], "map": [47, 100, 106, 112, 114, 196, 199, 209, 210, 211, 212, 214, 215, 220, 309, 325, 328, 391], "marcel": 93, "marco": 93, "margarita": 93, "margin": [106, 157, 158, 328], "mari": 93, "mark": [6, 216, 307, 311, 324], "markdown": [12, 311], "marker": [74, 75, 76, 106, 114, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 307, 311, 313, 328, 391], "markeredgecolor": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "markeredgewidth": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "markerfacecolor": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "markermarkerstyl": 114, "markers": [23, 30, 31, 106, 112, 114, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 328, 343, 396], "markers_fillstyl": 328, "market": 2, "markeveri": [30, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "markup": 9, "martin": 93, "mask": [6, 15, 21, 23, 30, 97, 106, 118, 123, 131, 154, 160, 178, 203, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 252, 254, 278, 279, 325, 326, 328, 329, 331, 334, 336, 374, 382], "masked_arrai": [106, 154, 203, 336], "masked_array_lik": 154, "masked_data": [106, 279], "maskedarrai": 106, "masoumeh": 93, "mass": [6, 93, 95, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "massart": [14, 25, 33, 97, 99, 106, 140, 154, 306], "massimiliano": 93, "massiv": [93, 305], "master": [5, 6, 47, 88, 303, 313, 322, 345], "mat": [17, 19, 20, 24, 27, 42, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 309, 310, 313, 315, 331], "mat_": [42, 315, 385], "match": [95, 106, 116, 134, 139, 140, 162, 315, 336], "materi": [93, 305], "math": [21, 99, 100, 105, 109, 111, 112, 114, 117, 118, 170, 175, 310, 324, 326, 328, 345, 360], "mathbf": 303, "mathemat": [106, 321, 323, 325, 326, 329, 334, 348, 358], "mathrm": [22, 23, 54, 106, 228, 328], "mathtext": 328, "mathtext_bf": 328, "mathtext_c": 328, "mathtext_default": 328, "mathtext_fallback_to_cm": 328, "mathtext_fontset": 328, "mathtext_it": 328, "mathtext_rm": 328, "mathtext_sf": 328, "mathtext_tt": 328, "matlab": [19, 24, 42, 93, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 315], "matlabdata": [17, 19, 20, 24, 237, 238, 309, 310], "matplolib": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "matplotlib": [3, 18, 22, 23, 27, 31, 50, 85, 90, 91, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 262, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 323, 325, 327, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 353, 355, 359, 367, 376, 379, 391], "matric": [17, 19, 95, 109, 237, 238, 289, 303, 309, 310, 313], "matrix": [18, 19, 20, 21, 24, 95, 96, 99, 100, 102, 103, 104, 105, 109, 110, 112, 117, 118, 303, 309, 310, 313, 325, 352], "matter": 310, "matthia": 1, "matur": 91, "maug": 93, "mauri": 93, "maurin": 93, "max": [15, 16, 20, 59, 60, 74, 93, 95, 97, 102, 105, 106, 112, 162, 224, 230, 307, 309, 311, 317, 318, 330, 333, 336, 340], "max_error": 317, "max_fun_cal": 111, "max_it": [30, 75, 96, 100, 105, 109, 111, 114, 132, 307, 309, 331], "max_lines_in_stack": 328, "max_rel_error": 317, "maxdiv": [105, 309], "maxim": [96, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 311], "maxima": [97, 106, 125, 126, 162, 192, 195, 308, 312, 321], "maximis": [303, 313], "maximum": [21, 30, 74, 96, 97, 100, 105, 106, 109, 111, 114, 117, 125, 126, 129, 132, 139, 143, 162, 192, 195, 226, 274, 285, 286, 303, 307, 309, 311, 328, 331, 333, 335, 340], "mayb": [36, 39, 317], "mb": [25, 28, 32, 34, 40, 48, 52, 55, 57, 61, 64, 68, 71, 77, 80, 81, 306], "mc": [93, 309, 333], "mcdonald": [93, 235, 317], "mcr": [14, 25, 33, 92, 93, 95, 97, 99, 100, 102, 105, 106, 109, 112, 117, 118, 229, 303, 305, 306, 308, 310, 321, 323, 352, 383, 384, 390], "mcr1": 309, "mcr2": 309, "mcr3": 309, "mcr4": 309, "mcr5": 309, "mcr_1": 20, "mcr_2": 20, "mcral": [19, 20, 99, 100, 102, 109, 112, 117, 118, 373, 374, 383, 384, 386], "mct": [44, 319], "md": 378, "mdpi": 93, "me": 328, "mean": [2, 17, 21, 47, 63, 96, 97, 98, 100, 101, 104, 106, 109, 110, 114, 123, 135, 151, 154, 164, 185, 258, 259, 274, 275, 281, 286, 313, 323, 325, 329, 331, 337, 343, 353, 396], "measur": [2, 20, 22, 27, 47, 72, 73, 77, 93, 106, 109, 111, 114, 248, 274, 286, 303, 306, 311, 313, 318, 319, 325, 331], "mec": [31, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 311], "mechan": [337, 343, 396], "mechanochem": [93, 305], "median": [101, 334], "medic": 93, "medium": [2, 328], "meet": 2, "mem": [25, 28, 32, 34, 40, 48, 52, 55, 57, 61, 64, 68, 71, 77, 80, 81, 306], "member": 54, "memorandum": 2, "memori": [100, 106, 123], "menger": 102, "menghao": 93, "mention": [2, 10, 311, 315, 318], "menu": [86, 322], "merg": [5, 6, 24, 27, 42, 44, 46, 66, 74, 106, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 259, 309, 310, 313, 315, 318, 319, 331, 395], "merit": [22, 24, 112, 310], "messag": [5, 6, 83, 95, 148, 159, 180, 288, 314, 324, 325, 338], "met": [6, 154, 328], "meta": [6, 95, 97, 106, 115, 319, 325, 335, 351, 374, 395], "metadata": [4, 6, 24, 31, 36, 39, 74, 90, 92, 97, 106, 115, 233, 239, 316, 325, 333, 351, 395], "metal": [93, 305], "meter": [38, 97, 106, 116, 182, 278, 325, 340], "meth": 8, "methan": [93, 305], "method": [6, 8, 9, 15, 17, 19, 22, 23, 30, 36, 38, 39, 42, 50, 51, 63, 66, 67, 70, 74, 75, 76, 79, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 127, 131, 132, 134, 136, 138, 141, 142, 145, 149, 150, 156, 161, 165, 166, 168, 170, 174, 175, 176, 179, 187, 191, 196, 197, 198, 199, 200, 201, 202, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 229, 239, 244, 246, 247, 253, 254, 255, 258, 259, 268, 270, 271, 272, 276, 278, 283, 285, 289, 292, 294, 295, 296, 303, 305, 308, 309, 310, 312, 313, 314, 315, 318, 323, 324, 326, 327, 328, 330, 334, 335, 336, 343, 345, 348, 350, 351, 353, 354, 355, 360, 365, 370, 373, 376, 383, 384, 385, 389, 390, 391, 395, 396], "method_1d": [106, 209, 210, 211, 212, 214, 215, 220, 311, 328], "method_2d": [106, 209, 210, 211, 212, 214, 215, 220, 311, 328], "method_3d": 328, "meting9": 20, "mew": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "mezzetti": 93, "mfc": [31, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 311], "mhvwert": 338, "mhz": 261, "michael": 93, "michel": 2, "micromamba": 84, "micromet": 239, "microsecond": 59, "microsoft": 84, "mid": [299, 300, 301, 302], "middl": [299, 300, 301, 302, 339], "might": [91, 95, 97, 106, 128, 314, 318, 333], "milagro": 93, "millinewton": 116, "millitesla": [98, 325], "mimic": [271, 304, 330, 331], "min": [21, 63, 79, 95, 97, 102, 106, 109, 112, 114, 118, 162, 163, 230, 303, 310, 311, 312, 315, 318, 328, 336, 337], "miniconda": 84, "miniforg": 88, "minim": [83, 84, 95, 104, 109, 110, 113, 134, 303, 308, 310, 311, 325, 338, 343, 396], "minima": 311, "minimis": 134, "minimum": [2, 6, 21, 97, 106, 112, 125, 126, 130, 135, 138, 139, 162, 192, 195, 226, 303, 307, 311, 328, 333, 393], "minka": 112, "minor": [328, 364], "minoux": 93, "minu": 328, "minut": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 92, 97, 106, 182, 311, 318, 328, 337, 385], "mirror": [101, 258, 268, 338], "mirscann": 319, "miscellan": 2, "mismatch": 329, "miss": [85, 91, 123, 162, 329, 331, 359, 390], "mit": [1, 47], "miter": 328, "mix": [60, 91, 100, 109, 271, 330], "mixing_": 100, "mixtur": [20, 93, 99, 100, 102, 105, 109, 112, 117, 118, 303, 305, 309], "mle": [22, 112], "mlstore": 319, "mmbeamsplitt": 319, "mo_al2o3": [18, 37, 42, 90, 311, 317, 318, 337], "mo_al2o3_0": 317, "mo_al2o3_bas": [42, 317, 318], "mode": [5, 101, 111, 258, 268, 319, 328, 338, 393], "model": [0, 15, 17, 18, 20, 22, 23, 24, 27, 30, 31, 63, 74, 75, 79, 90, 92, 93, 95, 96, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 118, 133, 169, 190, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 264, 287, 303, 308, 310, 312, 313, 314, 334, 364, 383], "modeldata": [106, 111], "modellinestyl": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "modern": [92, 328], "modif": [2, 106, 318, 319, 325, 352], "modifi": [2, 5, 47, 91, 94, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 153, 191, 266, 267, 278, 299, 302, 318, 325, 327, 328, 336, 340, 343, 369, 387, 396], "modififi": 319, "modl": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "modul": [2, 6, 7, 86, 315, 319, 331, 338, 358, 387], "modulu": 193, "mohammad": 93, "moistur": [27, 42, 313, 315], "molar": 93, "molecular": [93, 305], "moment": [79, 154, 322], "monodecconc": 105, "monodectol": 105, "monoincconc": 105, "monoinctol": 105, "monospac": 328, "monoton": [93, 105], "month": [0, 2], "more": [2, 6, 8, 10, 12, 19, 22, 36, 39, 54, 63, 79, 83, 84, 90, 91, 95, 98, 100, 101, 106, 112, 113, 114, 137, 139, 152, 162, 172, 258, 268, 303, 304, 307, 308, 315, 318, 319, 322, 323, 326, 328, 331, 338, 340, 347, 353, 369, 394, 395], "moreov": 338, "morin": 93, "mortim": [36, 39, 325], "mor\u00e1vkov\u00e1": 93, "most": [6, 84, 86, 93, 97, 106, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 278, 303, 305, 310, 311, 323, 325, 327, 328, 330, 338, 395], "mostli": [15, 325], "mount": 86, "mouravieff": 93, "mous": 311, "move": [101, 150, 268, 328, 334], "mp": 333, "mp5nb": [27, 42, 313, 315], "mp5spec": [27, 42, 313, 315], "mp6nb": [27, 42, 313, 315], "mp6spec": [27, 42, 313, 315], "mpl": [90, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "mpl_event": 196, "mplstyle": [329, 345], "msdata": 241, "msg": [148, 180, 288, 338], "mt": [325, 328], "mu": [63, 109], "much": [22, 79, 91, 311, 317, 325, 338, 343, 391, 396], "multi": [90, 92, 95, 390, 391], "multicoordin": [354, 374, 382, 394], "multidimension": [1, 106, 136, 138, 145, 156, 161, 165, 166, 170, 175, 176, 179, 191, 207, 208, 253, 255, 270, 271, 285, 337, 348], "multifil": 319, "multimod": 105, "multipl": [6, 8, 18, 22, 51, 58, 61, 72, 74, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 125, 126, 135, 156, 162, 171, 174, 192, 195, 196, 227, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 267, 271, 301, 306, 315, 325, 333, 334, 345, 350, 389], "multipli": [95, 106, 109, 112, 228, 319], "multiplot": [197, 198, 199, 200, 201, 210, 213, 217, 218, 219, 331], "multiplot_map": 329, "multisampl": 303, "multivari": [19, 63, 90, 93, 96, 102, 105, 303, 305, 309, 310, 334], "munk": [239, 240, 319], "muschi": 93, "must": [42, 74, 86, 95, 97, 98, 99, 100, 101, 103, 105, 106, 108, 109, 111, 112, 113, 114, 115, 117, 118, 128, 135, 136, 138, 140, 149, 153, 154, 156, 161, 162, 170, 175, 176, 179, 186, 196, 207, 216, 224, 229, 231, 239, 240, 258, 259, 268, 273, 282, 285, 304, 307, 313, 319, 323, 324, 325, 331, 338, 340], "mute": [328, 329], "mutivari": 348, "mvd": 319, "my": [5, 54, 86], "my_g": 100, "mycoord": [97, 106, 128], "mydatadir": 94, "mydataset": [36, 39, 307, 325], "mydefault": [328, 329], "myfil": [8, 291, 293], "mykhailo": 93, "mylabel": 97, "mynmrdata": 327, "myproj": 115, "myscript": 119, "m\u00e9gane": 93, "n": [4, 24, 34, 57, 63, 81, 84, 87, 88, 93, 97, 99, 102, 106, 114, 116, 118, 133, 136, 146, 151, 160, 163, 169, 170, 175, 176, 177, 178, 190, 196, 224, 228, 264, 265, 274, 286, 287, 301, 303, 305, 311, 313, 315, 318, 327, 328, 338], "n1": 325, "n_compon": [15, 16, 17, 20, 21, 22, 23, 24, 27, 30, 63, 90, 96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 303, 309, 310, 313, 331, 385], "n_cstr": 113, "n_featur": [22, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 258, 268, 289, 303], "n_iter": 100, "n_observ": [22, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 258, 268, 289, 303], "n_oversampl": 112, "n_pc": [16, 112], "n_reaction": 95, "n_sampl": [109, 114], "n_score": 112, "n_speci": 95, "n_target": [104, 105, 110, 114, 303], "n_time": 95, "na": 6, "naiv": 327, "nalidix": [93, 305], "name": [2, 5, 6, 9, 15, 18, 19, 20, 22, 23, 24, 27, 30, 36, 37, 39, 42, 44, 46, 47, 54, 60, 74, 75, 76, 89, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 125, 126, 128, 135, 141, 142, 146, 153, 171, 186, 187, 189, 192, 194, 195, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 270, 271, 274, 275, 283, 286, 290, 291, 293, 307, 309, 310, 312, 313, 314, 315, 317, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 333, 336, 337, 340, 383], "namespac": [304, 315, 323], "nan": [6, 97, 106, 114, 124, 125, 126, 192, 195, 336, 374], "nano": 94, "nano15010057": [93, 305], "nanohybrid": [93, 305], "nanomateri": 93, "nanomet": [37, 38], "nanoparticl": [93, 305], "nanosecond": 116, "narrow": [162, 335], "nat": 93, "nation": 2, "nativ": [106, 107, 115, 328], "natur": [2, 93, 305, 318, 335, 336], "navig": [9, 322], "nb": 311, "nb_trace": [17, 19, 20, 24, 63, 96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 310], "nblue": [96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118], "nbsp": [54, 90, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "nbsphinx": [310, 324], "ncol": [196, 329, 331], "nd": [6, 12, 30, 42, 63, 66, 98, 106, 108, 115, 135, 146, 153, 194, 203, 229, 239, 240, 259, 274, 275, 286, 290, 291, 297, 298, 303, 304, 307, 323, 330, 332, 336, 382], "nd1": [66, 74, 97, 106, 115, 182, 187, 327, 329, 332], "nd1a": 329, "nd2": [66, 74, 97, 106, 115, 182, 187, 325, 327, 329, 332], "nd2a": 329, "nd3": [66, 74, 97, 106, 329, 332], "nd4": [66, 74, 329, 332], "nd4a": 329, "nd5": 332, "nd5b": 332, "nd6": 332, "nd7": 332, "nd8": 332, "nd_data": [36, 39], "ndadd": 329, "ndarrai": [8, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 109, 111, 112, 114, 117, 118, 124, 127, 134, 149, 150, 154, 165, 166, 174, 177, 182, 186, 265, 278, 279, 284, 300, 301, 303, 304, 318, 325, 326, 327, 336, 345, 355, 392], "ndarrat": 177, "ndata": [177, 300, 301], "ndataset": 301, "ndax": 106, "ndcomplex": 6, "ndcomplexarrai": [106, 259], "ndd": [45, 97, 106, 278], "nddataset": [4, 6, 8, 12, 16, 18, 19, 21, 22, 23, 27, 31, 38, 40, 42, 43, 44, 46, 54, 58, 60, 62, 64, 65, 69, 74, 75, 76, 82, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 128, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 175, 176, 178, 179, 182, 187, 191, 194, 196, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 284, 285, 286, 289, 290, 291, 297, 298, 299, 302, 306, 308, 309, 310, 311, 312, 313, 315, 317, 318, 319, 321, 323, 327, 330, 333, 334, 335, 340, 343, 345, 377, 385, 395, 396], "nddataset_52678ba": 323, "nddataset_55366a7a": 325, "nddataset_55b0885c": 325, "nddataset_55b08880": 325, "nddataset_93f75d11": 336, "nddataset_99839850": 336, "nddataset_99839853": 336, "nddataset_99839854": 336, "nddataset_99839857": 336, "nddataset_e1a09527": 54, "nddataset_e1a09528": 54, "nddataset_ed24eed1": 74, "ndez": 93, "ndim": [97, 106, 125, 126, 192, 195, 325, 335], "ndlb": 330, "ndlg": 330, "ndmath": [345, 358], "ndoh": [30, 307], "ndohcorr": 307, "ndp": 63, "ndpanel": 345, "nearest": [101, 258, 268, 328, 336], "necessari": [2, 23, 74, 86, 104, 110, 123, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 273, 304, 309, 314, 322, 325, 329, 330, 331, 371, 379], "need": [6, 9, 12, 13, 19, 22, 31, 42, 47, 50, 63, 67, 74, 75, 79, 85, 86, 91, 94, 97, 100, 105, 112, 134, 149, 231, 307, 310, 311, 323, 325, 328, 332, 335, 338, 343, 394, 396], "neg": [24, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 112, 114, 117, 118, 124, 127, 131, 145, 151, 153, 160, 165, 166, 186, 253, 254, 258, 303, 308, 309, 318, 337, 390], "negat": [145, 253], "negative_axi": 106, "neglig": [303, 309], "neighbor": [162, 311, 338], "neighbour": 311, "neither": [2, 91, 114, 314], "nematollah": 93, "nest": 395, "nesterenko": 93, "network": [2, 6, 93, 95, 305], "neural": [93, 305], "neuroinflammatori": [93, 305], "never": [6, 328], "nevertheless": 2, "new": [2, 5, 6, 12, 31, 36, 39, 45, 63, 74, 79, 83, 86, 87, 91, 93, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 124, 127, 136, 138, 140, 145, 146, 150, 156, 157, 158, 161, 164, 165, 166, 167, 168, 170, 174, 175, 176, 179, 191, 194, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 231, 253, 255, 259, 270, 271, 272, 273, 274, 275, 276, 278, 283, 285, 286, 297, 298, 303, 309, 313, 314, 315, 319, 323, 324, 325, 327, 328, 330, 331, 333, 340, 342], "new1": [59, 60], "new2": [59, 60], "new3": 60, "new4": 60, "new5": 60, "new_func": 6, "new_wodg": [106, 108, 115], "newargsgetconc": 105, "newargsgetspec": 105, "newcom": 10, "newer": [87, 89], "newest": 352, "newfid": 333, "newproj": 54, "news0": 317, "next": [74, 75, 105, 300, 307, 310, 311, 314, 321, 324, 325, 328], "nfev": 95, "ngreen": [96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118], "nh": 328, "nh4_y": 15, "nh4y": [15, 21, 23, 30, 42, 43, 51, 63, 86, 90, 97, 99, 106, 115, 118, 134, 135, 140, 146, 162, 187, 194, 239, 246, 265, 273, 274, 275, 284, 286, 291, 307, 312, 325, 328, 329, 331, 336, 340], "nice": 10, "nicer": 24, "nicola": 93, "nicolet": [239, 244, 246, 247, 315], "nieto": 93, "nikolai": 93, "nipal": 114, "nir": [27, 313, 331], "nist": [155, 367], "njev": 95, "nl": 307, "nla": 319, "nlb": 319, "nli": 319, "nlu": 95, "nm": [4, 16, 24, 27, 37, 38, 239, 313, 331], "nmd": 333, "nmf": [14, 25, 33, 96, 99, 100, 102, 105, 106, 112, 117, 118, 239, 303, 306, 331], "nmr": [1, 41, 48, 56, 59, 60, 77, 82, 91, 94, 97, 98, 106, 111, 156, 161, 165, 166, 177, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 269, 300, 301, 306, 315, 321, 323, 325, 327, 330, 334, 336, 360, 361, 363, 390, 391], "nmr_1d": 327, "nmr_2d": 327, "nmrdata": [45, 59, 60, 74, 75, 76, 325, 327, 330, 333, 339], "nmrdir": [74, 75, 76], "nmrglue": [1, 6, 45, 177, 367], "nndsvd": 109, "nndsvda": 109, "nndsvdar": 109, "nnl": [104, 105, 308, 386], "nnmf": [354, 385], "nogrid": [328, 329], "nois": [15, 16, 24, 66, 67, 90, 93, 117, 150, 162, 330, 331, 332, 338], "noisi": [31, 162, 307, 331], "nomask": [6, 106], "nominal_valu": 116, "non": [2, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 124, 127, 132, 137, 140, 151, 172, 186, 233, 236, 258, 269, 285, 303, 308, 309, 315, 328, 331, 333, 336, 345, 366, 387, 390, 394, 395], "none": [6, 8, 16, 17, 20, 21, 24, 27, 30, 36, 39, 50, 74, 75, 76, 95, 96, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 133, 135, 139, 143, 144, 146, 151, 153, 154, 157, 158, 160, 161, 162, 163, 167, 168, 169, 170, 171, 177, 178, 179, 181, 186, 187, 189, 190, 192, 194, 195, 196, 203, 204, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 228, 230, 232, 233, 234, 236, 242, 243, 257, 260, 264, 271, 272, 274, 275, 286, 287, 290, 297, 298, 299, 302, 307, 309, 311, 313, 315, 325, 327, 328, 331, 338, 374, 376, 382], "nonemarkeredgecolor": 328, "nonexistent_fil": 318, "nonfinit": 114, "nonneg": [106, 109, 274, 286, 331], "nonnegconc": 105, "nonnegspec": [105, 374], "nonrandom": [309, 310], "noqa": [6, 90, 314, 323], "nor": [2, 91, 114, 116, 314], "norm": [109, 114, 309, 328, 391], "normal": [16, 36, 39, 59, 60, 90, 99, 100, 105, 106, 112, 114, 169, 274, 285, 286, 304, 307, 309, 318, 328, 330, 333, 338, 345, 391], "normaldistribut": 100, "normandi": [1, 93], "normspec": [105, 309], "notabl": 2, "notat": [328, 333], "note": [6, 8, 15, 21, 22, 23, 36, 39, 42, 50, 63, 70, 74, 75, 82, 95, 97, 98, 99, 100, 102, 105, 106, 108, 109, 111, 112, 114, 115, 117, 118, 124, 125, 137, 157, 158, 162, 164, 172, 186, 187, 189, 192, 194, 206, 229, 230, 239, 240, 241, 244, 246, 247, 258, 271, 274, 286, 307, 309, 311, 315, 317, 318, 319, 325, 328, 329, 330, 331, 335, 336, 337, 338, 340, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "notebook": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 86, 90, 91, 92, 303, 315, 319, 324, 328, 329, 333, 343, 395, 396], "noth": [91, 318, 325, 387], "notic": [2, 63], "notifi": 372, "notimplementederror": 325, "nouar": 93, "nov": [315, 318], "novel": [93, 305], "now": [6, 18, 20, 23, 30, 31, 36, 37, 39, 45, 46, 47, 50, 54, 63, 67, 74, 75, 79, 90, 98, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 261, 293, 307, 308, 309, 310, 311, 312, 314, 315, 318, 322, 324, 325, 327, 329, 331, 333, 335, 337, 338, 339, 340, 343, 345, 346, 347, 348, 350, 354, 355, 360, 365, 366, 368, 370, 373, 374, 375, 378, 383, 384, 385, 387, 388, 389, 390, 391, 393, 395, 396], "nozero": 319, "np": [6, 16, 20, 31, 36, 39, 47, 74, 76, 95, 97, 105, 106, 116, 135, 164, 167, 168, 203, 204, 228, 278, 279, 297, 298, 304, 307, 325, 331, 336, 337, 338, 377], "nr": 2, "nred": [96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118], "nria": 2, "nrow": [196, 329, 331], "nshape": [133, 169, 190, 224, 264, 287], "nspec": 328, "nsr": 319, "nss": 319, "nterpol": 331, "nth": [96, 151], "nuclear": 93, "nucleu": [97, 261], "null": [39, 285, 303], "num": [97, 102, 106, 171, 186, 189, 325], "number": [2, 6, 15, 17, 21, 22, 23, 30, 50, 63, 79, 82, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 128, 131, 132, 134, 136, 137, 140, 145, 149, 155, 160, 161, 162, 164, 165, 166, 170, 171, 172, 175, 176, 177, 178, 186, 189, 191, 194, 196, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 230, 237, 238, 239, 248, 253, 254, 255, 258, 259, 265, 268, 273, 274, 286, 289, 301, 303, 310, 311, 312, 319, 325, 328, 331, 334, 335, 338, 364, 387], "number_of_contour": 328, "number_of_x_label": 328, "number_of_y_label": 328, "number_of_z_label": 328, "numbr": 336, "numer": [90, 93, 96, 97, 100, 106, 109, 120, 270, 314, 315, 318, 325, 326, 336], "numpi": [4, 6, 8, 9, 16, 20, 31, 36, 39, 47, 74, 76, 90, 91, 97, 98, 101, 105, 106, 108, 115, 116, 131, 135, 136, 138, 145, 149, 152, 154, 156, 161, 165, 166, 170, 174, 175, 176, 179, 187, 191, 203, 207, 208, 253, 254, 255, 258, 265, 268, 271, 279, 284, 285, 289, 297, 304, 307, 318, 326, 328, 331, 334, 335, 337, 338, 376, 377, 382], "numpydoc": [8, 343, 396], "num\u00e9ro": [315, 318], "n\u00e9lieu": 93, "n\u00ef": [315, 318], "o": [15, 30, 31, 74, 83, 96, 114, 216, 313, 318, 320, 328], "obei": 20, "obj": [106, 115, 327], "object": [2, 6, 15, 16, 18, 20, 22, 23, 24, 27, 30, 31, 36, 39, 42, 63, 74, 75, 76, 79, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 136, 138, 139, 140, 141, 142, 149, 150, 153, 156, 157, 158, 160, 161, 163, 164, 167, 168, 170, 171, 174, 175, 176, 178, 179, 182, 183, 184, 185, 186, 187, 189, 192, 195, 203, 204, 206, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 259, 263, 270, 271, 272, 273, 276, 278, 282, 283, 285, 290, 291, 293, 297, 298, 303, 307, 309, 310, 312, 313, 314, 315, 318, 321, 323, 327, 328, 334, 337, 343, 352, 383, 387, 395, 396], "oblig": 2, "obliqu": 328, "observ": [2, 18, 93, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 258, 268, 289, 303, 305, 310, 313, 340], "obtain": [17, 20, 21, 23, 75, 94, 95, 96, 99, 105, 303, 307, 309, 310, 311, 313, 314, 318, 319, 332, 333, 336, 337, 391], "obviou": [16, 311], "obvious": [38, 50, 307, 315, 331, 336], "occas": 2, "occur": [95, 120, 391], "occurr": 2, "oct": 319, "od": [95, 97, 106], "odd": [101, 162, 258, 265, 268, 338], "odesolut": 95, "odesolv": 95, "off": [15, 97, 99, 106, 128], "offer": [2, 31, 304, 322, 323, 325, 326, 328], "offfouri": 319, "offici": 84, "offlin": 369, "offrefer": 319, "offset": [24, 50, 63, 74, 75, 79, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 152, 153, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 310, 311, 312, 327, 328, 329, 336, 339, 345], "often": [6, 22, 91, 100, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 303, 304, 310, 313, 329, 333], "ogiciel": 2, "oh": [30, 307, 328], "oil": [27, 42, 313, 315], "ois": 93, "ok": [63, 79], "okcharact": 319, "old": [343, 396], "old_func": 6, "older": 368, "oliviero": [93, 305], "olsz\u00f3wka": 93, "olynomi": 331, "om": 93, "omidikia": [93, 105], "omnic": [21, 41, 42, 48, 56, 90, 97, 106, 108, 115, 134, 140, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 270, 273, 290, 306, 312, 315, 316, 317, 320, 325, 328, 334, 340, 353], "omnic_seri": 247, "omnnic": 51, "onc": [6, 13, 42, 74, 98, 106, 301, 309, 311, 313, 328], "one": [2, 6, 8, 18, 19, 20, 22, 31, 36, 37, 38, 39, 51, 67, 84, 94, 95, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 124, 125, 126, 127, 135, 139, 140, 158, 160, 167, 168, 178, 185, 192, 194, 195, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 272, 274, 275, 281, 286, 290, 291, 298, 304, 307, 308, 309, 310, 311, 313, 314, 315, 318, 319, 323, 324, 325, 327, 328, 329, 331, 332, 336, 337, 338, 343, 347, 370, 383, 396], "ones": [27, 105, 106, 115, 157, 158, 160, 167, 168, 178, 204, 297, 298, 310, 313, 322, 325, 328], "ones_lik": [106, 157, 158, 167, 168, 203, 297, 298], "oneslik": [106, 204], "ongo": 6, "onli": [2, 6, 12, 16, 23, 30, 50, 63, 67, 74, 75, 85, 88, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 120, 123, 134, 135, 136, 138, 149, 154, 156, 163, 170, 174, 175, 176, 186, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 271, 285, 291, 293, 307, 309, 310, 311, 312, 314, 315, 318, 319, 323, 325, 327, 328, 329, 331, 332, 334, 338, 340, 343, 353, 372, 375, 390, 395, 396], "onlinelibrari": 93, "only_first": 106, "onto": [93, 100, 112, 305, 310], "oop": 314, "oordin": [106, 144], "op": [325, 333], "opaqu": 114, "open": [1, 2, 12, 13, 84, 89, 94, 97, 106, 115, 128, 186, 187, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 244, 246, 247, 248, 249, 250, 251, 290, 291, 293, 315, 317, 318, 319, 322, 327, 328, 333, 366, 395], "openpreamplifi": 319, "openrefer": 319, "oper": [2, 10, 21, 37, 38, 83, 97, 100, 102, 106, 125, 126, 135, 140, 146, 192, 194, 195, 226, 273, 274, 275, 286, 307, 316, 319, 321, 323, 326, 329, 330, 331, 334, 335, 337, 340, 345, 348, 360, 391], "operand": 329, "operando": [93, 99, 305], "opf": 319, "opinion": 91, "opportun": 2, "opposit": 261, "opt": 338, "optic": [91, 93, 97, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 315, 319, 335, 373], "optical_veloc": 374, "optim": [19, 20, 30, 74, 75, 76, 79, 95, 105, 113, 307, 308, 331, 343, 380, 387, 391, 396], "optimis": [19, 20, 308, 309], "optimizer_kwarg": 95, "optimum": [102, 310, 338], "option": [2, 4, 5, 8, 11, 19, 50, 84, 87, 89, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 178, 179, 183, 186, 187, 189, 191, 192, 194, 195, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 263, 265, 268, 269, 270, 271, 272, 274, 275, 276, 278, 283, 284, 285, 286, 289, 290, 291, 293, 297, 298, 307, 309, 314, 318, 320, 325, 328, 330, 331, 359, 391, 393], "opu": [1, 41, 48, 56, 106, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 306, 315, 316, 320, 353, 388, 395], "oral": 2, "orang": 3, "orcid": 1, "order": [2, 63, 67, 70, 74, 79, 90, 93, 95, 96, 97, 98, 101, 103, 106, 109, 151, 157, 207, 208, 224, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 268, 270, 289, 303, 307, 309, 312, 315, 316, 325, 331, 332, 335, 337, 338, 340, 354, 355, 359, 372, 383], "ordin": [150, 309], "ordinari": [104, 105, 110], "ored": 331, "org": [6, 84, 93, 293, 328], "organ": [93, 106, 305], "organis": 315, "orgin": [106, 115, 187], "origin": [2, 5, 6, 10, 14, 15, 18, 19, 20, 24, 25, 27, 31, 33, 37, 43, 47, 54, 66, 67, 70, 88, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 123, 140, 150, 154, 156, 174, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 278, 301, 303, 306, 307, 309, 310, 318, 319, 325, 328, 329, 331, 332, 333, 334, 335, 338, 340], "orphan": 91, "orthonorm": 303, "oserror": 315, "osqp": [102, 391], "osx": [84, 94, 315], "ot": 95, "other": [1, 10, 12, 19, 22, 50, 63, 74, 75, 83, 91, 94, 95, 96, 97, 98, 99, 100, 102, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 128, 136, 138, 140, 145, 147, 149, 156, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 178, 179, 182, 183, 186, 187, 189, 191, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 259, 265, 268, 271, 278, 279, 284, 285, 289, 290, 297, 298, 303, 304, 307, 309, 310, 311, 313, 315, 317, 318, 319, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 336, 338, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "other_data_typ": 319, "otherwis": [97, 106, 109, 112, 114, 118, 120, 136, 138, 162, 170, 171, 175, 176, 186, 189, 194, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 274, 283, 285, 286], "oto": 24, "ouput": 19, "our": [6, 23, 83, 90, 97, 309, 313, 318, 322, 325, 328, 335], "out": [2, 20, 97, 98, 100, 106, 109, 116, 117, 124, 128, 134, 140, 154, 161, 162, 179, 257, 273, 291, 293, 303, 309, 311, 323, 325, 327, 328, 336, 337, 338], "outer": [123, 329], "outil": [93, 305], "outlet": 113, "outlier": 67, "output": [17, 18, 21, 31, 74, 75, 79, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 121, 122, 128, 134, 154, 157, 160, 163, 164, 171, 178, 189, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 257, 258, 268, 290, 293, 304, 307, 309, 311, 314, 315, 318, 321, 327, 331, 336, 379, 395], "output_path": 290, "outsid": [2, 106, 139, 318, 337, 338], "over": [2, 79, 97, 100, 106, 116, 124, 125, 126, 127, 135, 163, 164, 171, 186, 189, 192, 194, 195, 228, 274, 275, 286, 303, 331, 338], "overal": [303, 343, 396], "overestim": 311, "overfit": 331, "overlap": [93, 99, 329], "overrid": [106, 111, 158, 168, 204, 298], "overview": [9, 321, 323, 324, 334, 367], "overwrit": [43, 98, 304, 323], "overwrite_data": 54, "own": [0, 2, 82, 91, 100, 321, 324], "owner": 2, "oxford": 93, "oxid": [93, 305], "ozaki": [93, 150], "p": [1, 74, 75, 93, 102, 103, 113, 208, 229, 239, 240, 303, 311, 315, 318, 328, 331, 333, 336, 338], "p15": 74, "p2a": 319, "p2k": 319, "p2l": 319, "p2r": 319, "p350": [54, 231, 251], "pa": [240, 319], "paavo": 93, "packag": [1, 6, 17, 19, 21, 22, 23, 24, 27, 42, 47, 83, 85, 86, 88, 91, 97, 106, 188, 320, 323, 325, 327, 328, 338, 343, 346, 352, 364, 371, 390, 393, 395, 396], "pad": [101, 258, 268, 311, 328], "page": [5, 6, 12, 83, 93, 308, 319, 339, 378], "pair": [20, 96, 134, 137, 172, 331], "palatino": 328, "palett": [328, 329], "panda": [3, 11, 345], "pane": 86, "panetso": 93, "paper": [19, 42, 43, 328, 329, 338, 352], "par": 327, "parabol": [224, 307], "paragraph": 2, "parallel": 100, "paralysi": 2, "param": [6, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 319, 331, 389], "param_to_optim": [20, 113], "param_to_set": 113, "paramet": [4, 6, 18, 30, 42, 47, 50, 60, 63, 66, 67, 74, 75, 76, 79, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182, 183, 186, 187, 189, 191, 192, 194, 195, 196, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 283, 284, 285, 286, 289, 290, 291, 293, 297, 298, 299, 300, 301, 302, 303, 310, 311, 315, 316, 321, 325, 330, 331, 332, 333, 338, 345, 373, 382, 384, 385, 387, 389, 391], "parameter": 95, "parameter_nam": 8, "parametersapod": 319, "parametersother_data_typ": 319, "parametr": 6, "parent": [106, 108, 115, 119, 338], "parenthes": 324, "pari": [2, 328], "pariti": [27, 313], "parityplot": [27, 114, 313], "part": [2, 6, 11, 12, 15, 21, 63, 75, 97, 106, 125, 131, 141, 142, 192, 254, 303, 308, 323, 328, 333, 336, 340, 390], "parti": [2, 317], "partial": [1, 2, 114, 303, 308, 321, 325, 385], "particular": [2, 91, 114, 116, 154, 304, 307, 311, 331, 332, 337], "particularli": [84, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 325, 330, 343, 396], "pass": [5, 6, 8, 15, 18, 31, 42, 47, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 124, 127, 153, 160, 161, 163, 164, 178, 206, 216, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 307, 311, 313, 314, 319, 325, 328, 331, 391], "passant": 311, "past": [101, 258, 268], "pastel": [328, 329], "patch": [114, 196, 328], "patch_antialias": 328, "patch_edgecolor": 328, "patch_facecolor": 328, "patch_force_edgecolor": 328, "patch_linewidth": 328, "patent": 2, "path": [4, 6, 9, 15, 30, 42, 45, 59, 60, 84, 85, 86, 97, 106, 107, 108, 115, 187, 205, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 318, 319, 320, 324, 325, 327, 328, 330, 333, 335, 339], "path1": 315, "path2": 315, "path3": 315, "path_a": 134, "path_simplifi": 328, "path_simplify_threshold": 328, "path_sketch": 328, "path_snap": 328, "pathclean": [106, 108, 115, 187, 327, 330, 345], "pathlib": [42, 106, 107, 108, 115, 187, 205, 229, 233, 239, 240, 290, 291, 293, 320, 327], "pathnam": [318, 320], "pattern": [6, 74, 93, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 315, 318, 395], "paul": [93, 235, 317], "pawel": 93, "pc": [22, 23, 112, 309, 310], "pca": [14, 15, 19, 20, 24, 25, 33, 92, 99, 100, 102, 105, 106, 109, 117, 118, 149, 188, 239, 303, 306, 308, 323, 331, 343, 353, 373, 382, 385, 389, 396], "pchip": [63, 90, 96, 123, 331], "pchipinterpol": [96, 331], "pd": 318, "pd_101": [239, 315, 318], "pd_102": [315, 318], "pd_103": [315, 318], "pd_104": [315, 318], "pd_21": [244, 315], "pd_3": [315, 318], "pd_4": [315, 318], "pd_5": [315, 318], "pdata": 75, "pdf": [93, 328], "peak": [66, 67, 72, 73, 74, 77, 79, 90, 91, 93, 96, 97, 99, 106, 111, 132, 134, 137, 150, 151, 162, 172, 226, 248, 269, 303, 305, 306, 308, 319, 321, 323, 331, 332, 338, 390], "peak_find": 307, "peak_height": [74, 311], "peak_posit": [74, 311], "peakslist": 311, "pecuniari": 2, "pellegrino": 93, "pen": [50, 106, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 311, 328, 338], "penal": [101, 289], "penalti": 109, "pengbo": 93, "per": [6, 97, 106, 116, 118, 185, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 274, 281, 325, 328], "percent": [96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 147, 309, 312], "percentag": [112, 149], "percet": 310, "perf": 5, "perfect": [63, 93, 332, 338], "perform": [2, 5, 15, 16, 18, 19, 20, 22, 23, 24, 27, 30, 37, 38, 59, 63, 74, 76, 90, 93, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 123, 124, 127, 132, 134, 136, 137, 138, 139, 145, 151, 154, 156, 161, 162, 164, 165, 166, 170, 172, 175, 176, 179, 191, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 265, 269, 271, 284, 285, 305, 307, 309, 312, 318, 322, 325, 328, 329, 330, 331, 332, 333, 335, 387, 389, 391], "perhap": [63, 322, 323], "period": [2, 8], "perman": [2, 315, 328], "permit": 319, "permittedsampl": 319, "permut": [106, 283], "perpendicular": 328, "persist": 116, "person": 2, "petal_length": 22, "petal_width": 22, "petr": 93, "petroff10": [328, 329], "pfeiffer": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 362], "pfr": 352, "pgn": 319, "pgr": 319, "phase": [74, 113, 165, 166, 207, 208, 240, 319], "phc0": [74, 76, 207, 208, 333], "phc1": [76, 207, 333], "phi": [271, 330], "philipp": 93, "photoacoust": [239, 240, 319], "photovolta": 319, "phr": 319, "phrf": [240, 319], "phsm": [240, 319], "phy": 93, "physic": [2, 93, 116], "physico": [102, 103], "phz": 319, "pi": [36, 39, 156, 169, 170, 174, 175, 176, 190, 271, 307, 324, 330], "pick": [72, 73, 77, 106, 111, 248, 306, 331], "piecewis": [63, 93, 96, 151, 331], "pierr": 93, "pii": 93, "pin": 382, "pint": [38, 97, 106, 116, 120, 278, 368, 373, 376, 384], "pip": [5, 6, 83, 84, 85, 86, 87, 88, 89, 90, 354, 367, 393], "pipe": [106, 328], "pivot": [207, 208, 333], "pix": 93, "pixel": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "pk": [74, 75, 76, 208, 307, 311, 333], "pka": 319, "pkl": 319, "pl": [26, 28, 33, 92, 106, 114, 229, 262, 303, 306, 313, 323], "place": [2, 6, 50, 95, 97, 106, 116, 131, 134, 185, 254, 280, 281, 331], "plai": 338, "plain": 116, "plainquant": [116, 120], "plainunit": [116, 120], "plane": [36, 39], "plant": 91, "plasma": [93, 305], "plateau": 162, "plateau_s": [162, 311], "platform": [6, 12, 84, 91, 92, 338, 368], "pleas": [5, 6, 10, 12, 82, 91, 323, 328], "plf": 319, "plot": [3, 8, 15, 16, 18, 20, 22, 23, 24, 27, 30, 31, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 52, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 85, 90, 92, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 151, 196, 197, 198, 199, 200, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 239, 306, 307, 308, 309, 310, 312, 313, 321, 323, 325, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 345, 366, 367, 376, 382, 383, 385, 389, 391, 395, 396], "plot1d": 216, "plot2d": [345, 347, 382], "plot_1d": [213, 217, 218, 219, 336], "plot_2d": [202, 212, 214, 215, 220, 221, 222, 223], "plot_3d": [221, 222], "plot_a_create_dataset": [36, 40, 306], "plot_b_coordin": [37, 40, 306], "plot_bar": [210, 217, 218, 219], "plot_baseline_correct": [63, 64, 306], "plot_c_unit": [38, 40, 306], "plot_denois": [66, 68, 306], "plot_despik": [67, 68, 306], "plot_efa": [15, 25, 306], "plot_efa_keller_massart": [16, 25, 306], "plot_fast_ica": [17, 25, 306], "plot_filt": [70, 71, 306], "plot_fit": [30, 32, 306], "plot_generic_read": [42, 48, 306], "plot_imag": [39, 46, 47, 211, 212, 215, 220, 221, 222, 328], "plot_iri": [18, 25, 306], "plot_lstsq_single_equ": [31, 32, 306], "plot_map": [18, 37, 46, 75, 211, 212, 214, 220, 221, 222, 328, 329], "plot_mcrals_chrom1": [19, 25, 306], "plot_mcrals_kinet": [20, 25, 306], "plot_model": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "plot_multipl": [49, 51, 52, 56, 106, 151, 210, 213, 217, 218, 219, 229, 306, 312, 328, 338, 356, 389], "plot_nmf": [21, 25, 306], "plot_pca_iri": [22, 25, 306], "plot_pca_spec": [23, 25, 306], "plot_pen": [31, 210, 213, 218, 219, 307, 311], "plot_pl": [27, 28, 306], "plot_plot": [51, 52, 306], "plot_plot_multipl": [50, 52, 306], "plot_prefer": [39, 40, 306], "plot_proc_em": [59, 61, 306], "plot_proc_sp": [60, 61, 306], "plot_processing_cp_nmr": [74, 77, 306], "plot_processing_nmr": [75, 77, 306], "plot_processing_nmr_relax": [76, 77, 306], "plot_processing_raman": [79, 80, 306], "plot_project": [54, 55, 306], "plot_read_ir_from_omn": [43, 48, 306], "plot_read_ir_from_opu": [44, 48, 306], "plot_read_nmr_from_bruk": [45, 48, 306], "plot_read_raman_from_labspec": [46, 48, 306], "plot_read_renishaw": [47, 48, 306], "plot_result": 79, "plot_scatt": [31, 54, 74, 75, 210, 213, 217, 219, 307, 311], "plot_scatter_pen": [210, 213, 217, 218], "plot_simplisma": [24, 25, 306], "plot_stack": [15, 36, 39, 43, 211, 212, 214, 215, 221, 222, 328, 340], "plot_surfac": [211, 212, 214, 215, 220, 222, 309, 310, 328], "plot_waterfal": [211, 212, 214, 215, 220, 221, 328], "plot_with_pp": 75, "plotdistribut": [18, 90, 102], "plotlcurv": [18, 102], "plotli": 328, "plotmerit": [17, 18, 19, 20, 24, 30, 74, 75, 76, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 307, 310, 373], "plotnonfinit": 114, "plottitl": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "plsregress": [27, 308, 321, 385], "plt": 31, "plu": 328, "pluggi": 6, "plugin": 6, "plural": 2, "plus_and_minus_sign": 328, "pl\u00e9del": 93, "pmid": 93, "png": 328, "pnnl": [105, 386], "po": [30, 75, 106, 133, 169, 190, 264, 270, 287, 307, 311, 319], "point": [20, 21, 63, 74, 75, 79, 90, 95, 97, 100, 105, 106, 112, 114, 123, 128, 131, 136, 145, 150, 161, 162, 165, 166, 170, 175, 176, 191, 194, 218, 239, 253, 254, 255, 274, 286, 307, 309, 311, 315, 323, 324, 328, 329, 331, 333, 335, 337, 338, 385], "polar": 328, "polaraxes_grid": 328, "polici": 112, "pollut": [93, 305], "polyfit": [8, 331], "polynom": [96, 224, 307], "polynomi": [8, 63, 79, 90, 96, 101, 132, 137, 151, 172, 224, 258, 268, 269, 307, 312, 338], "polynomialbaselin": 307, "polyolefin": [93, 305], "ponant": 2, "pool": 95, "poor": [66, 332], "popul": [106, 274, 286], "popular": [91, 309, 310], "port": [315, 318], "pose": 93, "poshb": [133, 169, 190, 264, 287], "posit": [18, 21, 63, 74, 75, 79, 97, 101, 104, 105, 106, 110, 124, 128, 131, 140, 153, 160, 162, 165, 166, 206, 254, 258, 268, 307, 311, 318, 336], "positiveoddinteg": [101, 258, 268], "posixpath": [42, 43, 54, 315, 317, 327], "poslb": [133, 169, 190, 264, 287], "possess": 325, "possibl": [2, 6, 8, 10, 22, 30, 31, 36, 39, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 123, 168, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 304, 309, 310, 311, 314, 318, 319, 325, 327, 328, 329, 331, 332, 338, 354, 355, 371, 387, 391], "possibli": [2, 97, 106, 311, 319], "post": [12, 318, 323], "poster": [328, 329], "postprocess": 112, "postscript": 328, "potenti": [6, 96, 132], "pow": [60, 227, 267, 271, 325, 330], "powder": [93, 305], "power": [90, 92, 97, 106, 112, 114, 161, 179, 189, 225, 300, 309, 334], "power_iteration_norm": 112, "pp": [22, 60, 74, 75, 76, 309, 310, 327, 330, 333], "ppm": [74, 75, 76, 94, 106, 161, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 261, 333], "pr": 319, "pra": 319, "practic": [9, 90, 93, 106, 274, 286, 318, 320], "pre": [11, 95, 97, 100, 103, 106, 164, 328], "preambl": [2, 328], "preamplifi": 319, "preced": [307, 315, 325], "precis": [95, 106, 274, 286, 311], "predefin": [96, 103], "predict": [27, 31, 74, 76, 104, 105, 110, 111, 112, 114, 303, 307, 313], "predmin": 303, "pref": [18, 23, 37, 38, 50, 67, 70, 74, 112, 231, 307, 311, 312, 327, 328, 329, 331, 332, 333, 335, 336, 338, 339, 340, 343, 396], "prefer": [4, 15, 18, 19, 23, 37, 38, 39, 42, 43, 45, 46, 50, 51, 59, 60, 63, 67, 70, 74, 75, 76, 79, 85, 86, 106, 112, 116, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 231, 233, 239, 260, 290, 291, 307, 311, 312, 315, 322, 323, 325, 327, 329, 331, 332, 333, 335, 336, 338, 339, 340, 343, 345, 371, 385, 396], "preferebl": [97, 106, 128], "preferred_unit": 116, "prefix": [5, 30, 75, 304, 323], "prepar": [90, 321, 323], "prepend": 315, "preprocess": [15, 79, 92, 162, 315, 330, 334], "prerequisit": [90, 311, 312, 331, 337], "presenc": [2, 91, 311, 325], "present": [6, 19, 20, 74, 88, 97, 106, 112, 229, 230, 232, 234, 239, 240, 242, 243, 304, 309, 310, 311, 315, 317, 318, 319, 323, 328, 332, 336, 370, 371, 374], "preserv": [90, 92, 332], "press": 324, "pressur": [18, 37, 90, 93, 102, 305], "pretermin": 331, "pretti": 311, "prevail": 2, "prevent": [5, 91, 94, 328, 364], "previou": [2, 23, 37, 74, 75, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 171, 307, 309, 311, 318, 319, 325, 328, 331, 333, 338, 348, 364, 389], "previous": [18, 31, 67, 106, 252, 309, 318, 319, 328, 331, 332, 343, 395, 396], "primer": 9, "princip": [2, 96, 99, 100, 102, 105, 109, 112, 117, 118, 303, 308, 321, 331], "principl": [2, 11, 94, 106, 123, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "print": [12, 18, 19, 20, 23, 24, 27, 31, 36, 37, 39, 42, 54, 74, 75, 76, 83, 88, 90, 97, 106, 111, 112, 115, 118, 251, 261, 263, 273, 278, 307, 309, 310, 311, 313, 314, 317, 318, 325, 327, 328, 329, 333, 335, 337], "print_hello_info": 119, "print_info": 54, "print_method": 327, "printabl": 315, "printev": [22, 112, 309, 310], "prior": [2, 310, 335], "prioriti": [119, 123, 161, 256], "privat": 6, "prl": 319, "probabl": [74, 91, 311, 325, 328, 331, 337], "probe": 93, "problem": [12, 22, 83, 93, 95, 100, 104, 110, 314, 315, 329, 331, 332, 340, 349, 355, 358, 359, 361, 362, 374, 378, 379, 389], "problemat": 91, "proce": [87, 89], "procedur": [67, 91, 109, 307, 309, 323, 332], "proceed": 2, "process": [0, 6, 18, 19, 63, 74, 77, 80, 82, 85, 91, 92, 96, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 149, 150, 236, 248, 271, 289, 306, 307, 309, 314, 315, 318, 321, 323, 326, 328, 329, 330, 333, 339, 343, 348, 358, 360, 361, 390, 391, 393, 396], "process_on": 338, "processor": [63, 70, 79, 96, 101, 132, 137, 151, 172, 269, 303, 334, 389], "processs": 323, "procno": [60, 74, 75, 76, 248, 330, 333], "procs_fil": 74, "prod": 116, "produc": [6, 22, 93, 116, 268, 305, 336, 382, 390], "product": [2, 91, 95, 103, 109, 116, 154, 310, 331], "profession": 2, "profil": [16, 19, 20, 24, 95, 99, 100, 105, 113, 303], "profit": 2, "program": [2, 74, 83, 84, 91, 102, 303, 322, 323, 339, 385], "programmat": 325, "progress": [97, 106, 171, 322, 352, 366], "proj": [54, 115, 327], "proj2": 327, "project": [1, 6, 12, 13, 55, 82, 83, 86, 91, 100, 106, 112, 119, 187, 209, 211, 212, 214, 215, 220, 221, 222, 256, 257, 303, 306, 310, 313, 315, 321, 323, 328, 345, 351], "project_1": [54, 115], "project_5a5136e": 327, "projects_nam": [54, 115], "promin": [74, 93, 162, 305], "prompt": [84, 89], "prone": [98, 325], "prop": 162, "prop_cycl": 328, "propag": [97, 106, 125, 126, 154, 192, 195], "proper": [4, 112, 309, 310], "properli": [2, 106, 115, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 353, 387], "properti": [2, 12, 27, 74, 93, 97, 98, 106, 115, 162, 196, 303, 305, 308, 309, 313, 323, 325, 331, 345], "proplbl": 315, "proport": [147, 307], "propos": [12, 83, 150, 331], "proprietari": [318, 319], "propval": [27, 42, 313, 315], "protect": 2, "protein": [27, 42, 313, 315], "protocol": [4, 134, 140, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 273, 290, 291, 293, 303], "provid": [2, 4, 9, 86, 90, 91, 92, 95, 96, 97, 99, 100, 102, 103, 105, 106, 109, 111, 112, 114, 115, 117, 118, 123, 137, 157, 158, 162, 163, 164, 167, 168, 172, 203, 204, 216, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 257, 265, 274, 284, 286, 290, 291, 293, 297, 298, 308, 309, 315, 318, 323, 324, 325, 328, 338, 339, 391], "provis": 2, "ps_exp": 207, "pscp": [54, 106, 115, 187, 327], "pseudo": [100, 248, 391], "pssnf": 328, "pt": [117, 145, 165, 166, 191, 253, 255], "pth": 330, "ptp": [21, 79, 97, 106], "public": [2, 323, 328, 378], "publicli": 304, "publish": [0, 2, 293, 352], "pull": [5, 6, 10, 12, 82, 83, 88, 365], "puls": [74, 339], "pure": [19, 20, 24, 105, 117, 271, 303, 307, 330], "purest": 117, "puriti": 117, "purpl": 311, "purpos": [2, 22, 86, 91, 310, 318, 323, 325, 337], "pursuant": 2, "push": [5, 6], "put": [6, 323, 328], "py": [4, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 74, 75, 76, 77, 79, 80, 94, 306, 314, 327, 338, 345], "py3": 345, "py_wdf_read": 390, "pycharm": 322, "pyplot": [31, 328], "pyqt": [85, 359], "pyqt5": 85, "pyrazol": [93, 305], "pyridin": 93, "python": [0, 1, 5, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 83, 85, 86, 87, 88, 89, 90, 92, 100, 105, 111, 205, 229, 233, 239, 240, 304, 314, 315, 318, 319, 322, 323, 328, 337, 338, 360, 368, 391, 393], "python3": [5, 21, 24, 84, 327, 338], "q": [18, 83, 90, 102, 103, 325], "qin": 93, "qp": 391, "qpsolver": 102, "qquad": [170, 175, 176], "qr": 112, "qsin": [60, 156, 170, 174, 266, 267, 271, 285, 330], "qt": [328, 355, 356], "quadera": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 362], "quadprog": [102, 366, 391], "quadrat": [79, 96, 151, 162, 307, 331], "qualiti": [17, 63, 328, 385], "quant_list": 116, "quantit": 93, "quantiti": [95, 97, 106, 120, 135, 146, 156, 160, 163, 174, 183, 185, 194, 203, 207, 208, 261, 274, 275, 278, 286, 298, 303, 311, 318, 355, 360], "quaternion": [75, 327, 336], "quatrat": 102, "question": [83, 106, 152, 321], "quick": [92, 323, 324], "quickli": [303, 323], "quickstart": [92, 325], "quit": [16, 82, 322, 331], "quot": 8, "quotat": 324, "r": [17, 24, 31, 54, 59, 60, 67, 70, 74, 76, 79, 93, 104, 106, 110, 114, 165, 166, 239, 253, 303, 307, 313, 315, 318, 323, 327, 328, 330, 331, 332, 333, 336, 338], "r1": [93, 331], "r2": 331, "rad": [325, 328], "radau": 95, "radian": [325, 334, 340], "rai": [65, 66, 68, 72, 93, 106, 150, 229, 305, 306, 334], "raimundo": 93, "rais": [6, 85, 97, 106, 115, 116, 123, 124, 127, 135, 136, 138, 154, 156, 161, 170, 175, 176, 179, 240, 272, 285, 319, 325, 337], "rajk": 93, "ram": [240, 319], "raman": [41, 47, 48, 50, 56, 65, 68, 69, 71, 80, 82, 93, 96, 101, 106, 149, 150, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 260, 305, 306, 319, 323, 334, 338], "ramandata": [46, 47, 50, 66, 67, 70, 79, 236, 332, 338, 345], "ramandir": [46, 79], "ramirez": 93, "ramo": 93, "rand": [307, 325, 337], "random": [16, 97, 106, 109, 112, 278, 304, 307, 310, 325, 328, 337, 338], "random_st": [100, 109, 112], "randomized_svd": 112, "randomli": 328, "randomst": [100, 109, 112], "rang": [16, 18, 21, 37, 50, 63, 74, 90, 96, 97, 105, 106, 112, 114, 118, 132, 134, 137, 162, 164, 172, 226, 307, 310, 311, 312, 318, 325, 328, 331, 337, 345, 351], "rank": [97, 106, 163, 303], "rapid": 383, "rapid_scan_reprocess": 247, "rare": [91, 332], "rate": [20, 93, 95, 113], "rather": [304, 307, 328], "ratio": [30, 66, 75, 79, 133, 149, 287, 307, 331, 332], "raw": [84, 91, 312, 315, 325], "rc": [196, 328], "rch": 319, "rcount": 328, "rcparam": 114, "rdx": 319, "rdy": 319, "re": [24, 317, 319, 323, 325, 331, 333, 338], "reach": [21, 95, 309, 311, 312], "reactant": [95, 103], "reaction": [20, 93, 95, 305], "reactiv": 113, "reactor": [95, 113], "read": [1, 2, 4, 8, 12, 17, 18, 19, 20, 27, 37, 38, 41, 46, 48, 50, 51, 56, 66, 67, 70, 74, 79, 86, 90, 94, 97, 98, 99, 106, 108, 115, 118, 134, 135, 140, 146, 155, 162, 164, 187, 188, 194, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 265, 273, 274, 275, 279, 284, 286, 291, 306, 307, 309, 310, 311, 312, 313, 316, 317, 318, 320, 325, 327, 328, 330, 331, 332, 333, 337, 338, 339, 343, 349, 366, 385, 390, 391, 395, 396], "read_": 395, "read_binari": 45, "read_bruker_nmr": 345, "read_byt": 239, "read_carroucel": [229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 361], "read_csv": [229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "read_ddr": 315, "read_dir": [229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 366, 395], "read_dso": 361, "read_dx": 315, "read_fid": 74, "read_galact": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "read_hdr": 315, "read_jcamp": [229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 316, 317], "read_labspec": [46, 70, 79, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 338, 366], "read_mat": 315, "read_matlab": [19, 24, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 309, 310, 315], "read_omn": [15, 21, 23, 30, 43, 51, 63, 90, 106, 108, 115, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 312, 315, 316, 317, 318, 319, 325, 329, 336, 337, 340, 374], "read_onli": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "read_opu": [44, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 315, 316, 319, 376, 395], "read_quadera": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 346, 362], "read_remot": 385, "read_scp": 315, "read_sdr": 315, "read_soc": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 315], "read_spa": [239, 246, 315, 318, 335, 367], "read_spc": 4, "read_spg": [239, 315], "read_sr": [239, 246, 315, 361, 367, 374, 384], "read_topspin": [45, 59, 60, 74, 75, 76, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 315, 325, 327, 330, 333, 339, 345, 391], "read_wdf": [47, 315, 390], "read_wir": [47, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 315, 390], "read_zip": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 315, 345], "readabl": [93, 95, 116, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 311, 319, 366], "readeabl": 385, "reader": [7, 11, 47, 74, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 317, 318, 319, 320, 331, 338, 345, 352, 353, 364, 373, 390], "reader_spc": 4, "reader_xxx": 4, "readi": [18, 319, 328], "readonli": [39, 97, 98, 106, 115, 319, 328, 395], "readquadera": 362, "readthedoc": 38, "real": [6, 59, 60, 75, 76, 97, 106, 125, 131, 141, 142, 192, 193, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 225, 254, 274, 286, 321, 334, 335, 336, 390], "realign": 329, "realiz": [150, 322], "realli": [16, 323, 328], "reason": [2, 91, 95, 310, 319, 340], "rebuild": 9, "receiv": [74, 75, 307, 311], "recent": [97, 106, 278, 303, 327, 338], "recherch": 2, "recogn": [237, 238, 335, 351], "recognit": 374, "recombin": 333, "recommend": [83, 85, 87, 88, 89, 95, 97, 98, 106, 304, 322, 323, 328], "recomput": [105, 309], "reconstrict": 17, "reconstruct": [19, 20, 24, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 149, 177, 303, 309, 310, 383], "record": [18, 20, 21, 27, 37, 42, 47, 303, 318, 337, 338], "recov": [96, 100], "rectangl": 328, "rectilinear": 328, "recurs": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "red": [6, 27, 31, 50, 63, 74, 75, 93, 305, 307, 309, 310, 311, 313, 324, 328, 331, 333, 335, 382], "redefin": 63, "redistribut": 2, "redraw": [74, 75, 307, 311], "reduc": [22, 59, 60, 85, 90, 93, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 116, 117, 118, 124, 125, 126, 127, 153, 183, 184, 185, 192, 194, 195, 226, 274, 275, 278, 281, 286, 303, 311, 328, 343, 353, 383, 396], "reduced_unit": [97, 106, 278], "reduct": [22, 23, 24, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 124, 127, 150, 303, 310, 311, 331], "redunc": [97, 106, 184], "ref": [16, 134, 318], "refactor": [345, 364, 367, 379, 383, 387, 389], "refer": [2, 5, 9, 10, 30, 75, 83, 90, 92, 96, 97, 98, 106, 123, 124, 132, 134, 137, 151, 160, 172, 240, 269, 303, 307, 311, 318, 319, 323, 324, 325, 328, 329, 331, 338, 365, 378, 395], "reference_numb": 324, "refin": 162, "reflect": [6, 27, 101, 239, 240, 258, 268, 318, 319, 378, 395], "reform": [93, 305], "reg": 311, "reg_par": [18, 90, 102], "regard": [2, 363], "regex_matching_test_nam": 6, "region": [23, 30, 50, 63, 66, 67, 75, 76, 79, 90, 96, 97, 106, 137, 172, 303, 307, 311, 312, 328, 329, 331, 332, 335, 336, 337, 338, 340, 351], "regist": [7, 12, 114], "registri": [38, 76, 325], "regress": [26, 28, 31, 33, 63, 93, 104, 106, 110, 114, 229, 262, 303, 305, 306, 307, 308, 321, 385], "regroup": 303, "regular": [90, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 289, 303, 328], "regularis": [63, 93], "regularli": [5, 97, 372], "reindex": 123, "reinit": 51, "reinstal": 88, "reject": [311, 319], "rejman": [93, 305], "rel": [9, 90, 95, 112, 123, 162, 229, 239, 240, 241, 261, 290, 309, 311, 317, 319, 320, 328], "rel_height": [162, 311], "relat": [2, 5, 9, 97, 106, 162, 278, 303, 318, 328, 355, 379, 384, 388], "relationship": 337, "relative_to": 315, "relax": [72, 73, 74, 77, 106, 111, 248, 306, 391], "releas": [6, 85, 314, 318, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "release_d": 314, "relev": [2, 4, 74, 83, 105, 112, 303], "reli": [6, 91, 309], "reliabl": [12, 91], "reload": 54, "reltim": 20, "rem": 89, "remain": [2, 6, 20, 27, 97, 106, 131, 151, 254, 303, 310, 313, 330], "rememb": [15, 23, 325, 331], "remot": [2, 5], "remov": [1, 2, 6, 8, 50, 63, 65, 66, 68, 72, 74, 75, 76, 79, 90, 93, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 132, 137, 150, 151, 172, 229, 252, 269, 272, 305, 306, 307, 311, 312, 326, 328, 329, 331, 334, 336, 338, 343, 345, 367, 382, 384, 385, 387, 389, 395, 396], "remove_all_dataset": 115, "remove_all_project": 115, "remove_dataset": [115, 327], "remove_digital_filt": [45, 59, 60, 325, 327, 330], "remove_limit": 96, "remove_mask": [106, 340], "remove_project": 115, "renam": [95, 322, 389], "render": [324, 328], "renishaw": [41, 48, 56, 106, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 306, 315, 390], "reorder": 318, "repeat": [67, 86, 101, 258, 268, 332, 338], "repeatedli": [96, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118], "repetit": 6, "rephas": 333, "replac": [2, 6, 23, 37, 94, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 139, 150, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 304, 324, 325, 326, 328, 352, 355, 374, 378, 385, 387], "replace_exist": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "replace_whitespac": 327, "reply_cont": 338, "report": [1, 5, 6, 83, 91, 93, 111, 309, 318, 365], "repositori": [5, 6, 13, 88, 318, 371, 385], "repres": [2, 31, 74, 90, 97, 106, 274, 286, 303, 304, 307, 315, 333], "represent": [63, 116, 327], "reproduc": [2, 12, 83, 91, 100, 109, 112, 322], "reproduct": 2, "request": [0, 5, 6, 10, 12, 82, 83, 268, 318, 328, 343, 365, 396], "requir": [2, 6, 22, 67, 79, 84, 85, 86, 91, 105, 106, 112, 116, 157, 162, 265, 309, 311, 318, 323, 329, 331, 332, 334, 343, 345, 368, 393, 395, 396], "rescal": [97, 100, 106, 116, 183, 184, 185, 273, 278, 280, 281], "research": [1, 2, 93], "reserv": [2, 196, 304, 328], "reset": [30, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 310, 314, 325, 328, 329], "reshap": [106, 204, 298, 336], "residu": [18, 19, 20, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 303, 309, 310, 313, 336], "resist": [93, 305], "resitua": 310, "resiz": [97, 106, 164], "resolut": [19, 79, 93, 95, 99, 105, 303, 305, 309, 310, 319], "resolv": [87, 105, 303, 309], "resourc": 91, "respect": [2, 102, 103, 105, 112, 118, 170, 303, 309, 310, 313, 318, 325, 327, 328, 337], "respons": [2, 91, 114], "rest": [9, 314], "restart": [13, 315], "restor": [318, 328], "restrict": [2, 106, 313, 324], "restructuredtext": 9, "result": [2, 6, 15, 18, 20, 22, 23, 30, 31, 63, 67, 70, 74, 75, 76, 79, 83, 91, 95, 97, 100, 106, 109, 111, 112, 124, 125, 126, 127, 131, 150, 152, 158, 163, 168, 182, 192, 194, 195, 204, 226, 228, 254, 265, 274, 275, 286, 298, 307, 309, 310, 312, 315, 319, 323, 325, 329, 331, 332, 333, 335, 336, 338, 340, 343, 396], "retain": 303, "retapod": [59, 60, 136, 138, 156, 170, 174, 175, 176, 271, 285, 330], "retriev": [96, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118, 319, 325], "retstep": [97, 106, 186], "return": [4, 8, 19, 31, 74, 76, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 186, 188, 189, 191, 192, 194, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 293, 297, 298, 299, 300, 301, 302, 307, 309, 310, 311, 313, 315, 318, 319, 323, 324, 325, 327, 328, 334, 337, 338, 340, 345, 352, 395], "return_bg": 247, "return_coef": 134, "return_error": 97, "return_ifg": [232, 234, 242, 243], "return_meta": 95, "return_nddataset": [20, 95], "reus": [75, 96, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 309], "rev": [136, 138, 156, 170, 174, 175, 176, 271, 285], "reverdi": 93, "revers": [94, 97, 99, 100, 102, 105, 106, 109, 112, 117, 118, 136, 138, 156, 161, 170, 174, 175, 176, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 270, 271, 283, 285, 318], "review": [308, 324], "revis": [10, 342], "revisit": [345, 358], "rewrit": 345, "rez": 93, "rf": [86, 240, 319], "rf_param": 319, "rfl": [240, 319], "rgb": 114, "rgba": 114, "rgn": 319, "ri": [75, 106, 141, 142, 327, 336], "ric": 93, "rich": [18, 92], "rieg": 93, "rieger": [93, 305], "right": [2, 12, 27, 74, 95, 105, 106, 112, 154, 165, 166, 170, 191, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 255, 303, 309, 311, 313, 318, 328, 333], "right_bas": [74, 311], "right_ip": [74, 311], "rigid": 63, "rigueiro": 93, "rint": [97, 106, 131, 254], "rir": 106, "risk": [2, 91, 304, 323], "rita": 93, "rk23": 95, "rk45": 95, "rm": 86, "roach": [93, 99], "robert": 93, "robust": [106, 135, 391], "rocio": 93, "rocquencourt": 2, "roi": [97, 106, 345], "rojo": 93, "role": [331, 338], "roll": [145, 165, 166, 191, 255], "rom": 93, "roman": 328, "ronald": 22, "root": [6, 106, 112, 116, 274, 315, 336], "rootdir": 6, "rossi": [93, 305], "rotat": [50, 74, 75, 311, 328, 366], "roue": [315, 318], "roughli": [20, 307], "round": [70, 97, 106, 128, 131, 328, 336, 338, 387], "round4": 311, "round_": [97, 106], "round_numb": 328, "rounddashdot_pattern": 328, "rounded_arrai": [97, 106, 131, 254], "roundsolid_joinstyl": 328, "routin": 358, "row": [19, 37, 75, 96, 98, 101, 106, 114, 134, 154, 160, 178, 196, 259, 270, 309, 310, 311, 312, 318, 328, 332, 336], "row10": 37, "rr": [75, 106, 141, 142, 327, 336], "rri": 106, "rrr": 106, "rsc": 93, "rse": [19, 20, 309], "rsn": 319, "rsquar": 31, "rst": [4, 6, 9, 289, 378], "rt": [18, 325], "rtol": 95, "rubberband": [8, 96, 132, 137, 151, 172, 269, 334, 389], "ruberband": 331, "rudiment": 322, "rue": 2, "ruff": 90, "rule": [2, 6, 106, 146, 233, 265, 275, 284, 312, 314, 318, 345], "run": [2, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 84, 86, 89, 90, 95, 96, 100, 106, 111, 112, 132, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 308, 309, 311, 312, 314, 315, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 385, 396], "run_ast_nod": 338, "run_cel": 338, "run_cell_async": 338, "run_cod": 338, "run_forev": 338, "run_glob": 338, "run_script": [54, 119], "rung": 95, "runnabl": 8, "runner": [16, 18, 21, 22, 23, 24, 42, 44, 45, 46, 47, 54, 60, 74, 75, 76, 90, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "runpi": 338, "runtim": 382, "runtimewarn": [335, 336], "ryan": [93, 96, 269], "r\u00ba": [315, 318], "r\u00e9solut": [315, 318], "r\u00e9sultat": [18, 37, 42, 317, 318, 337], "s0": [317, 325], "s0003": 93, "s0003267000852484": 93, "s0003267024001132": 93, "s0021951720300865": 93, "s0021951721000798": 93, "s0169": 93, "s0169743904002874": 93, "s0169743914002111": 93, "s0169743918301758": 93, "s0169743996000615": 93, "s0926337320311164": 93, "s1": [51, 75, 325, 328], "s10": [51, 328], "s10858": 1, "s2": [75, 325], "s20": [51, 328], "s3": 75, "s4": 75, "s41467": [93, 305], "s4p": 75, "s50": [51, 328], "s53": [51, 328], "s_0": 309, "s_1": 310, "s_copi": 315, "s_soft": 105, "s_x": [303, 313], "s_y": [303, 313], "sa": 75, "sabina": 93, "sadovnik": [93, 305], "safe": 2, "safer": 325, "safeti": 91, "sai": [97, 106, 259, 270, 272, 276, 278, 283, 307], "said": 2, "saito": 109, "sake": [74, 328, 329], "same": [2, 18, 19, 20, 22, 27, 31, 37, 42, 49, 52, 54, 56, 75, 79, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 123, 132, 135, 140, 141, 142, 146, 151, 158, 168, 183, 194, 204, 216, 229, 230, 259, 271, 274, 275, 286, 298, 306, 307, 309, 312, 315, 318, 319, 321, 323, 325, 330, 331, 333, 335, 336, 337, 338, 340], "samevalu": 109, "samira": 93, "sampl": [7, 22, 27, 51, 54, 70, 90, 97, 101, 104, 106, 110, 112, 114, 123, 171, 186, 189, 228, 230, 232, 234, 240, 242, 243, 258, 265, 311, 313, 319, 325, 328, 331, 338, 367], "sample_origin": 319, "sample_weight": [104, 110, 114], "san": [51, 328, 329], "sand": 328, "sandov": 93, "sanjai": 93, "sansmath": 328, "satisfi": 91, "satur": [21, 23, 328, 331, 336, 340], "save": [54, 89, 96, 99, 100, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 117, 118, 187, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 290, 291, 293, 318, 325, 326, 328, 368, 395], "save_a": [106, 107, 115, 327], "save_dialog": 356, "savefig": 328, "savefig_bbox": 328, "savefig_directori": 328, "savefig_dpi": 328, "savefig_edgecolor": 328, "savefig_facecolor": 328, "savefig_format": 328, "savefig_jpeg_qu": 328, "savefig_pad_inch": 328, "savefig_transpar": 328, "savez": [106, 108, 115], "savgol": [70, 101, 268, 289, 332, 334, 389], "savgol_filt": [101, 258, 268, 289, 338, 389], "savitki": [69, 71, 72, 101, 106, 229, 306], "savitski": [67, 338], "savitzki": [70, 101, 258, 268, 289, 334], "sazama": 93, "sb": 75, "sbb": [271, 330], "sc": 75, "scalar": [6, 97, 106, 114, 125, 126, 139, 167, 168, 192, 195, 328, 331, 335, 336], "scale": [95, 97, 102, 105, 106, 109, 112, 114, 116, 161, 171, 183, 185, 189, 224, 268, 281, 313, 328, 335, 338, 360, 362, 363], "scan": [47, 315, 319], "scatter": [30, 51, 54, 74, 76, 106, 112, 114, 196, 200, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 307, 311, 312, 328], "scatter_mark": 328, "scatter_pen": 219, "scheme": 91, "schoolbook": 328, "schuh": [93, 305], "sci": 93, "scienc": 93, "sciencedirect": 93, "scientif": [2, 12, 84, 91, 245, 315, 316, 318, 328], "scientifiqu": 2, "scikit": [22, 100, 188, 310, 313], "scikitlearn": 391, "scinot": 93, "scipi": [91, 96, 101, 111, 112, 113, 162, 258, 268, 311, 331, 338, 391], "scm": [5, 88], "scope": 2, "score": [15, 22, 23, 31, 104, 110, 112, 114, 303, 307, 309, 310, 313, 331, 343, 382, 396], "scoreplot": [22, 23, 112, 310, 343, 396], "scp": [4, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 86, 90, 95, 97, 99, 106, 107, 108, 115, 118, 119, 128, 134, 135, 140, 146, 153, 157, 160, 162, 163, 164, 167, 168, 178, 182, 187, 194, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 265, 273, 274, 275, 278, 279, 284, 286, 290, 291, 293, 297, 298, 304, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 323, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 343, 345, 374, 377, 383, 385, 393, 396], "scp_config_hom": 94, "scpy": [13, 17, 84, 87, 88, 89, 95, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 258, 265, 284, 309, 310, 311, 313, 315, 321, 328, 329], "scpy_suffix": [106, 108, 115], "scratch": [36, 39, 54, 325], "scree": [112, 310], "screeplot": [22, 23, 112, 309, 310, 343, 396], "script": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 84, 86, 88, 89, 91, 106, 111, 115, 133, 169, 190, 224, 256, 257, 264, 287, 314, 315, 321, 322, 328, 343, 391, 393, 395, 396], "script_sourc": 54, "script_source_2": 54, "scripts_nam": 115, "sdr": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315], "se": [106, 274], "seaborn": [3, 328, 329], "seamlessli": [18, 37], "search": [12, 83, 84, 102, 307, 311, 352], "sebastian": 93, "sec": 319, "second": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 93, 94, 97, 98, 105, 106, 116, 150, 182, 202, 223, 230, 241, 276, 278, 298, 303, 304, 309, 310, 311, 315, 318, 323, 325, 327, 328, 332, 333, 336, 337], "secondli": 2, "sect": 340, "section": [9, 10, 35, 36, 39, 41, 49, 53, 56, 58, 62, 65, 69, 72, 73, 74, 90, 93, 102, 315, 318, 323, 324, 325, 327, 328, 395], "secur": 2, "see": [4, 5, 6, 8, 9, 10, 12, 47, 50, 66, 67, 79, 83, 85, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 111, 112, 113, 114, 115, 117, 118, 135, 136, 137, 138, 140, 149, 152, 157, 158, 161, 167, 168, 170, 172, 175, 176, 179, 187, 189, 203, 204, 209, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 265, 268, 269, 271, 274, 284, 285, 286, 289, 290, 293, 297, 298, 303, 304, 307, 309, 310, 311, 312, 314, 315, 317, 318, 319, 324, 325, 328, 330, 331, 333, 335, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "seed": [97, 106, 278], "seek": 2, "seem": [15, 54, 63, 95], "seen": [23, 66, 309, 314, 319, 325, 336], "segment": [96, 151], "seitsonen": 93, "select": [13, 18, 27, 30, 37, 50, 63, 66, 67, 74, 75, 93, 96, 97, 98, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 125, 126, 135, 149, 155, 192, 195, 229, 239, 240, 258, 268, 272, 290, 291, 293, 305, 307, 311, 312, 313, 315, 318, 321, 331, 332, 336, 337, 338, 350, 368], "self": [6, 8, 93, 95, 96, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 206, 209, 311, 318, 327, 338], "send": [100, 338], "sens": [91, 151, 331, 340], "sensit": [91, 93], "sensor": [93, 305], "sent": 2, "sepal": 22, "sepal_length": 22, "separ": [2, 50, 95, 96, 97, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 131, 151, 162, 205, 254, 303, 311, 315, 319, 327, 328, 337, 346], "seq": 116, "seq_i": 116, "sequenc": [96, 97, 98, 106, 114, 116, 167, 171, 186, 189, 203, 283, 297, 311, 318, 325, 331], "sequenti": [63, 96, 105, 112, 331, 332, 348], "ser": [76, 315], "sergei": 93, "seri": [47, 67, 74, 97, 106, 112, 113, 115, 205, 216, 236, 239, 246, 247, 249, 250, 273, 312, 331, 332, 391], "serial": [100, 105, 319, 392], "serialis": 345, "serie190214": [50, 66, 67, 332], "serif": [328, 329], "serr": 93, "serra": 93, "server": [2, 42], "servic": [2, 86], "session": [6, 86], "set": [2, 4, 6, 9, 16, 17, 19, 21, 23, 27, 30, 42, 50, 74, 75, 79, 91, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 109, 110, 111, 112, 115, 124, 125, 126, 127, 134, 149, 150, 154, 155, 157, 158, 167, 168, 178, 186, 192, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 261, 274, 275, 286, 290, 291, 297, 298, 303, 304, 307, 309, 310, 311, 312, 313, 314, 315, 318, 319, 326, 328, 331, 332, 335, 336, 337, 338, 340, 343, 345, 348, 355, 366, 369, 387, 391, 395, 396], "set_bad": 114, "set_color": 328, "set_complex": [106, 141, 142, 336], "set_coord": 106, "set_coordset": [17, 24, 106, 309, 326], "set_coordtitl": [106, 309], "set_coordunit": 106, "set_fonts": 328, "set_fontstyl": 328, "set_hypercomplex": [106, 336], "set_laser_frequ": [97, 335], "set_log_level": [96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 258, 268, 289], "set_loglevel": [54, 66, 119, 314, 383], "set_quaternion": [106, 259, 336], "set_titl": [70, 98, 328], "set_unit": 98, "set_xlim": [74, 311, 335, 338], "set_xscal": 345, "set_ylim": [74, 311, 331, 335], "set_ytick": 21, "setosa": 22, "setup": [4, 88], "sever": [6, 37, 42, 44, 49, 52, 56, 74, 79, 83, 95, 96, 97, 105, 106, 112, 115, 150, 151, 216, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 306, 309, 310, 315, 318, 319, 321, 323, 326, 327, 330, 334, 336, 337, 338, 350, 352, 360, 385, 391, 393, 395], "sfm": 319, "sg": 70, "sgn": 319, "sh": 84, "shadow": 328, "shall": 2, "shape": [4, 6, 18, 19, 21, 22, 23, 24, 27, 30, 36, 39, 42, 44, 45, 46, 74, 75, 76, 90, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 134, 135, 139, 140, 146, 153, 157, 158, 160, 163, 167, 168, 178, 194, 203, 204, 228, 229, 230, 231, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 258, 268, 272, 273, 274, 275, 278, 286, 289, 297, 298, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 325, 327, 329, 336, 337, 338, 339, 340], "share": [83, 123, 196, 318, 326], "sharei": [196, 329], "sharex": [196, 329, 331], "sharez": 196, "sharp": 18, "shashik": 93, "sheet": 321, "shell": 338, "shift": [46, 50, 59, 60, 106, 145, 151, 156, 165, 166, 174, 191, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 239, 253, 255, 310, 311, 318, 322, 331, 333, 338], "short": [6, 8, 12, 23, 76, 86, 116, 325, 336], "shortcut": 330, "shorter": [106, 161, 179, 331], "shorthand": [106, 114, 121, 122], "should": [2, 6, 8, 12, 13, 30, 51, 66, 75, 87, 89, 91, 94, 95, 96, 97, 100, 102, 105, 106, 113, 114, 119, 132, 141, 142, 150, 157, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 241, 304, 307, 309, 310, 311, 319, 322, 323, 328, 337, 338, 343, 348, 378, 396], "shoulder": 311, "show": [8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 74, 75, 76, 79, 83, 90, 97, 99, 106, 112, 150, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 310, 311, 312, 313, 315, 318, 323, 328, 330, 331, 333, 337, 338, 339, 340, 352, 391], "show_complex": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 333, 336, 339], "show_datapoint": [97, 335], "show_label": [23, 112, 310], "show_mask": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 336], "show_project": 328, "show_projection_i": 328, "show_projection_x": 328, "show_region": [63, 331], "show_vers": [83, 365, 375, 393], "show_yaxi": 74, "show_z": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "show_zero": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "shown": [112, 224, 311, 314, 318, 325, 331, 338], "shrinkb": 328, "shuffl": 109, "si": [74, 161, 179, 333], "siam": 93, "side": [86, 90, 95, 196, 324, 328], "sidebar": 322, "sie": 93, "sigdigit": [97, 387], "sigma": [112, 118, 169, 303, 307], "sigma_1": 303, "sigma_i": 303, "sigmoid": 264, "sign": [2, 12, 165, 166, 322, 324], "signal": [59, 60, 66, 96, 101, 112, 162, 258, 268, 303, 311, 319, 330, 331, 332, 338], "signatur": [6, 327], "signific": [2, 16, 75, 97, 162, 309, 310, 328, 332, 387], "significantli": [87, 109, 311, 343, 396], "sigular": 303, "silent": 315, "silk": [93, 305], "silver": [93, 305], "similar": [31, 91, 97, 106, 171, 189, 310, 311, 313, 315, 319, 328, 331], "similarli": [2, 196, 337, 338], "simkovi\u010dov\u00e1": 93, "simon": 93, "simp": [265, 362], "simpl": [24, 30, 31, 74, 76, 93, 95, 96, 99, 100, 102, 105, 109, 112, 117, 118, 132, 137, 151, 172, 269, 307, 322, 323, 325, 328, 331, 337, 338, 339, 391], "simpler": [38, 54, 315, 331], "simplest": [37, 338], "simplex": 111, "simpli": [86, 315, 322, 328, 331, 332, 338, 340], "simplic": 324, "simplif": 328, "simplifi": [304, 323, 328, 338, 345], "simplisma": [14, 25, 33, 93, 99, 100, 102, 105, 106, 109, 112, 118, 238, 306, 309, 345, 373], "simpson": [74, 76, 284, 312, 345], "simul": 331, "simultan": [98, 337], "sin": [36, 39, 271, 330], "sinc": [20, 31, 91, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 318, 325], "sine": [58, 61, 72, 106, 156, 170, 174, 227, 248, 267, 271, 285, 306, 336], "singl": [9, 16, 19, 30, 31, 37, 47, 54, 74, 75, 79, 96, 97, 98, 101, 102, 106, 114, 115, 125, 126, 127, 135, 155, 162, 192, 195, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 272, 303, 307, 311, 315, 318, 319, 324, 326, 327, 328, 331, 335, 345, 354, 382], "single_spectrum": 291, "singlehplc": [309, 310], "singleton": 106, "singular": [2, 96, 99, 100, 102, 105, 109, 112, 114, 117, 118, 303], "singular_valu": 118, "sinm": [60, 156, 170, 174, 227, 266, 271, 285, 330], "sirotin": 93, "sisetup": 328, "site": [21, 24, 93, 305, 324, 327, 338], "situ": [93, 305], "situat": 335, "siunitx": 328, "size": [6, 18, 22, 23, 31, 36, 37, 38, 39, 42, 44, 46, 54, 60, 67, 70, 74, 75, 76, 85, 90, 97, 98, 100, 101, 105, 106, 114, 124, 125, 126, 127, 128, 134, 135, 146, 150, 153, 161, 162, 163, 164, 167, 168, 171, 179, 181, 182, 186, 189, 192, 194, 195, 203, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 258, 265, 268, 274, 275, 284, 286, 297, 299, 301, 302, 303, 307, 309, 310, 311, 312, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 340, 370], "sizeff": 161, "skip": [6, 354], "sklearn": [17, 21, 100, 104, 109, 110, 112, 114, 383], "slash": 315, "sleep": 345, "slice": [15, 23, 36, 39, 63, 72, 73, 77, 90, 106, 111, 248, 304, 306, 307, 311, 312, 317, 321, 323, 325, 326, 328, 334, 338, 340, 355, 382, 390], "slightli": [95, 313, 328, 387], "slow": [79, 345, 349], "slower": 109, "sm": [240, 319], "sma": 24, "small": [5, 74, 75, 91, 109, 307, 311, 328, 331], "smaller": [95, 96, 106, 132, 139, 161, 271, 311, 328, 330, 336, 338], "smallest": 112, "smc1": [70, 79, 338], "smild": 93, "smooth": [8, 63, 67, 69, 71, 72, 93, 96, 101, 105, 106, 132, 137, 151, 162, 172, 229, 258, 269, 289, 303, 306, 321, 331, 334, 389], "smoother": [63, 70, 79, 93, 101, 162, 258, 268, 289, 303, 338], "snap": 328, "sncorrel": 319, "snip": [63, 67, 74, 75, 79, 93, 96, 132, 137, 151, 172, 331, 332, 389], "snip_width": [63, 74, 75, 79, 96, 269, 331], "snippet": [8, 12, 334], "snm": 319, "so": [2, 6, 16, 19, 20, 23, 67, 79, 91, 95, 97, 105, 106, 112, 186, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 274, 278, 286, 303, 309, 310, 311, 314, 315, 318, 323, 324, 325, 328, 331, 332, 333, 335, 336, 338, 340, 343, 348, 396], "soft": [20, 105, 303, 309, 328, 352], "softwar": [0, 1, 2, 12, 83, 91, 106, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 271, 317, 318, 330, 390], "sol": 95, "solarize_light2": [328, 329], "sole": [2, 91], "solid": [50, 93, 106, 209, 210, 211, 212, 214, 215, 217, 219, 220, 305, 328, 335], "solut": [2, 30, 31, 86, 92, 94, 95, 307, 318], "solv": [18, 29, 32, 33, 95, 97, 102, 104, 105, 106, 306, 308, 349, 359], "solve_ivp": 95, "solver": [90, 95, 99, 100, 102, 105, 109, 112, 117, 118, 386, 391], "solverconc": 105, "solverspec": 105, "som": [30, 75, 76, 307], "somaiyeh": 93, "some": [6, 8, 16, 20, 21, 23, 24, 30, 31, 38, 46, 50, 63, 75, 90, 91, 95, 97, 98, 106, 108, 112, 115, 128, 231, 240, 303, 304, 307, 308, 309, 310, 311, 312, 313, 318, 322, 323, 325, 327, 328, 329, 331, 333, 335, 336, 338, 339, 340, 343, 345, 348, 354, 358, 380, 382, 388, 395, 396], "some_unit": 318, "someon": 325, "someth": [9, 13, 314, 323, 336, 340, 343, 345, 396], "sometim": [67, 91, 112, 231, 324, 325, 332, 353, 390], "son": 319, "sore": 112, "sort": [42, 43, 90, 106, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 312, 315, 317, 318, 325, 326, 337, 340, 391], "sortbyd": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 318], "sot": 319, "sourc": [1, 2, 5, 11, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 84, 87, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 315, 317, 325, 327], "sourcepackag": 1, "sourcetre": 5, "soustract": [18, 37, 42, 317, 318, 337], "sp": [47, 60, 156, 170, 174, 227, 266, 267, 285, 330, 333], "spa": [23, 42, 90, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 312, 315, 316, 335, 340, 353], "space": [2, 24, 97, 99, 100, 101, 102, 105, 106, 109, 111, 112, 114, 117, 118, 128, 171, 186, 189, 196, 258, 303, 311, 313, 318, 319, 324, 327, 328, 337, 387, 390], "span": [112, 303, 310, 313], "spars": [109, 112, 289], "sparsiti": 109, "spc": [4, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 364], "spc_data": 4, "speak": [79, 323], "spec": [16, 328, 333, 339], "spec2": [333, 339], "spec3": 333, "speci": [22, 74, 93, 95, 105, 303, 305], "special": [93, 170, 324, 325, 327, 328, 331], "specialis": 328, "speciat": 93, "species_concentr": [20, 95], "specif": [2, 4, 6, 8, 11, 19, 79, 84, 85, 90, 98, 106, 161, 162, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 304, 310, 313, 316, 318, 320, 328, 331, 336, 338], "specifispecta": [27, 313], "spectr": 335, "spectra": [4, 15, 19, 20, 21, 23, 24, 27, 42, 46, 47, 50, 63, 66, 67, 72, 73, 77, 78, 80, 90, 93, 96, 97, 98, 99, 100, 105, 106, 111, 117, 149, 150, 155, 156, 161, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 269, 303, 305, 306, 307, 309, 310, 311, 312, 313, 316, 325, 328, 330, 331, 334, 335, 337, 338, 339, 340, 361, 367, 373, 389, 390, 391, 395], "spectral": [4, 18, 19, 37, 47, 93, 100, 105, 162, 287, 303, 307, 315, 331], "spectrocat": [84, 85, 87, 89, 90, 360], "spectrochempi": [1, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 53, 54, 56, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 83, 85, 86, 94, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "spectrochempy_2025": 0, "spectrochempy_cfg": 94, "spectrochempy_data": [4, 51, 85, 318, 346, 347, 371, 385], "spectrochempyerror": [319, 328], "spectrochimi": 1, "spectrocop": 315, "spectromet": [27, 106, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 313, 315, 319, 331], "spectrometri": 93, "spectroscop": [0, 3, 4, 91, 99, 100, 102, 105, 109, 112, 117, 118, 162, 233, 303, 314, 322, 323, 325, 326], "spectroscopi": [3, 20, 90, 91, 93, 97, 133, 162, 305, 307, 310, 316, 317], "spectroscopist": [91, 337], "spectrum": [18, 20, 30, 46, 47, 50, 65, 68, 69, 71, 72, 74, 75, 79, 90, 93, 96, 101, 106, 112, 150, 155, 165, 166, 225, 229, 230, 236, 240, 249, 250, 260, 303, 306, 307, 310, 311, 318, 319, 331, 334, 337, 338, 339, 340, 367], "speed": [31, 97, 162, 289, 307, 328, 343, 380, 384, 391, 396], "spektrum": [315, 318], "spg": [8, 15, 18, 21, 23, 30, 37, 38, 41, 42, 48, 51, 56, 63, 86, 90, 97, 99, 106, 108, 115, 118, 134, 135, 140, 146, 162, 187, 194, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 265, 270, 273, 274, 275, 279, 284, 286, 290, 291, 306, 307, 311, 312, 315, 316, 317, 325, 328, 329, 331, 336, 337, 340], "sphinx": [6, 9], "sphinx_gallery_thumbnail_numb": [15, 36, 39, 59, 60, 66], "spike": [65, 68, 72, 93, 106, 150, 229, 305, 306, 311, 334, 339, 389], "spline": 331, "split": [123, 327, 328, 329], "splitlin": 327, "spread": [106, 274, 286], "spred": 74, "spure": [19, 24, 309, 310], "spyder": 322, "spz": 319, "sqrt": [106, 109, 121, 122, 169, 193, 274, 307, 323, 324, 325], "squar": [30, 31, 58, 61, 63, 72, 93, 96, 101, 104, 105, 106, 110, 111, 112, 114, 132, 134, 137, 151, 172, 178, 225, 227, 248, 267, 269, 271, 274, 286, 289, 303, 305, 306, 308, 309, 311, 321, 325, 330, 331, 385, 391], "squeez": [20, 37, 75, 106, 307, 311, 336], "sr": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 315, 318], "src": [16, 45, 47, 54, 74, 306, 314, 319, 324, 327, 328, 338], "srn": 319, "srt": 319, "ss": [315, 318], "ssb": [60, 227, 267, 271, 330], "ssdiff": 134, "ssm": 319, "ssp": 319, "st": [15, 17, 19, 20, 21, 24, 100, 105, 117, 303, 309, 311, 383, 384], "st0": 309, "st_constrained_list": 105, "st_l": 105, "st_ls_list": 105, "st_unconstrain": 105, "stabl": [6, 12, 85, 86, 87, 100], "stack": [36, 39, 43, 74, 106, 140, 196, 201, 202, 209, 210, 211, 212, 214, 215, 220, 223, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 311, 328, 338, 370, 376, 382], "stackoverflow": 323, "staff": [2, 91], "stai": 340, "stancik": [133, 307], "stand": [2, 12, 38, 303, 309, 310, 311, 313, 331], "standalon": 82, "standard": [9, 11, 67, 93, 98, 105, 106, 112, 117, 146, 190, 194, 274, 275, 286, 307, 309, 313, 314, 316, 323, 328, 336], "stanislav": 93, "starch": [27, 42, 313, 315], "start": [4, 6, 8, 11, 20, 30, 36, 39, 63, 79, 87, 89, 92, 96, 97, 102, 106, 111, 128, 171, 186, 189, 224, 307, 309, 311, 318, 321, 325, 328, 331, 337, 338], "startswith": 6, "startup": [96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 258, 268, 289, 328, 343, 396], "starzyk": 93, "state": [2, 6, 106, 228], "statement": [325, 328, 345], "statist": [90, 92, 93, 106, 274, 286, 303, 313, 323], "statu": [2, 95, 271, 319, 330, 331], "stcurr": 105, "std": [24, 70, 106, 194, 286, 313, 338], "stdout": 263, "stefania": 93, "stejskal": 391, "stelmachowski": [93, 102], "step": [7, 19, 95, 97, 105, 106, 128, 150, 171, 186, 189, 322, 328, 331, 337, 383], "steven": 93, "sthe": 119, "stiff": 95, "stiffer": [96, 132], "stijn": 93, "still": [323, 325, 328, 358, 368, 371, 379, 389, 391], "stix": 328, "stixsan": 328, "stoichiometri": 95, "stop": [97, 102, 106, 109, 114, 128, 171, 186, 189, 303, 309, 314, 325, 337], "storag": 2, "store": [2, 47, 63, 79, 84, 95, 105, 106, 231, 233, 309, 310, 313, 315, 322, 325, 327, 330, 335, 336, 343, 351, 369, 374, 384, 396], "storeiter": [105, 384], "stosic": 93, "strstraight": 151, "straightforward": [31, 337, 340], "strang": 379, "strategi": 100, "stream": [36, 39, 328, 338], "streamlin": 47, "strength": 338, "stress": 311, "strict": [105, 120, 154], "stricter": 309, "strictli": [79, 112, 266, 330, 338], "strike": 2, "string": [12, 79, 95, 96, 97, 98, 100, 102, 105, 106, 114, 115, 187, 206, 239, 248, 304, 313, 315, 318, 324, 325, 326, 328, 338, 391], "strip": 327, "strong": [2, 91], "stronger": 338, "strongli": [6, 87, 304], "structur": [4, 6, 11, 90, 91, 106, 158, 168, 204, 298, 303, 309, 310, 314, 326, 327], "studi": [2, 93, 303, 305], "style": [4, 5, 6, 42, 43, 50, 51, 106, 114, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 321, 330, 345, 382, 389, 395], "stylelib": [90, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "stylesheet": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328, 329], "stylist": 6, "sub": [54, 106, 115, 119, 124, 127, 277, 319, 324, 327], "subclass": [97, 98, 106, 111, 114, 355], "subcompon": 303, "subdir": [46, 239, 244, 315, 318, 345], "subdirectori": 315, "subfold": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "subhead": 324, "subject": [2, 91, 105, 106, 303, 304, 318, 325, 326], "submatric": 303, "submit": [2, 6, 83], "subplot": [96, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328, 337], "subproject": [54, 115], "subscrib": 2, "subsequ": [2, 96, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 324, 328], "subsequent_ind": 327, "subset": [6, 106, 272], "substep": 324, "subtitl": 196, "subtrack": 134, "subtract": [63, 90, 91, 96, 106, 132, 134, 137, 151, 172, 269, 304, 311, 318, 325, 326, 327, 329, 331, 394], "subtrat": 21, "succes": [106, 259], "success": [2, 95, 105, 106, 107, 115, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 303, 309, 324, 338], "successfulli": [20, 95, 329], "sudden": 6, "sudo": [5, 84, 88], "suffer": [2, 328], "suffici": 74, "suffix": [106, 108, 115, 187], "suggest": [1, 6, 82, 83, 90, 91], "suit": [11, 84], "suitabl": [2, 99, 114, 328], "sulf_oct": [18, 37, 42, 317, 318, 337], "sulfid": [18, 93, 305], "sum": [47, 104, 105, 106, 110, 114, 134, 135, 146, 194, 274, 286, 303, 312, 329, 338], "sum_": [224, 303, 307], "summ": 47, "summari": [6, 8, 18, 22, 23, 37, 38, 42, 44, 46, 54, 60, 74, 75, 76, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 133, 169, 190, 224, 264, 287, 309, 310, 312, 315, 317, 318, 319, 323, 326, 327, 330, 333, 336, 337, 340], "super": 338, "superpos": 333, "supplement": [2, 308], "supplementari": [2, 105], "suppli": [2, 42, 114], "support": [13, 87, 89, 90, 91, 93, 106, 162, 228, 305, 311, 315, 320, 328, 336, 346, 391, 393], "suppress": [196, 314, 328, 345, 369, 395], "supress": 79, "suptitl": [196, 328], "suptitle_color": 196, "sure": [21, 85, 95, 106, 115, 187], "surf": [309, 310], "surfac": [93, 106, 113, 209, 210, 211, 212, 214, 215, 220, 221, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 305, 309, 310, 315, 328, 373, 391], "surround": [162, 311, 324], "sust": [42, 317, 318], "sv": 118, "svd": [92, 96, 99, 100, 102, 105, 109, 112, 117, 303, 331], "svd_solver": 112, "svg": 328, "sw": [315, 318], "swapax": 106, "swapdim": [106, 259, 283], "swape": [106, 276], "switch": 95, "sy": 263, "sylvi": 93, "symbol": [95, 325, 328], "symlog": 114, "sync": 319, "synchron": 86, "syntax": [6, 9, 30, 36, 39, 54, 75, 105, 106, 304, 319, 323, 324, 326, 327, 328, 338], "synthes": [93, 305], "system": [2, 10, 16, 83, 93, 94, 95, 100, 162, 205, 314, 315, 345], "systemat": [303, 311], "s\u00e9rie": [315, 318], "t": [5, 9, 15, 16, 17, 19, 20, 21, 22, 24, 27, 31, 36, 39, 63, 74, 75, 76, 82, 91, 93, 95, 97, 98, 99, 100, 102, 105, 106, 109, 112, 113, 114, 117, 118, 156, 163, 174, 230, 271, 303, 307, 309, 310, 311, 313, 315, 318, 322, 323, 324, 325, 327, 328, 330, 332, 336, 340, 383], "t0": 174, "t1": 76, "t1_model": 76, "t1irho": 74, "t1rho": 74, "t201": 90, "t4": [315, 318], "t_0": [156, 309], "t_dataset": 340, "t_event": 95, "t_point": 95, "tab": 324, "tabl": [91, 134, 315, 326, 328], "table_po": [74, 311], "table_properti": [74, 311], "tableau": [328, 329], "tacit": 2, "tacitli": 2, "tag": [83, 323, 324, 325], "taht": [15, 21], "take": [2, 6, 10, 30, 31, 37, 50, 91, 97, 100, 106, 109, 147, 154, 161, 274, 325, 329, 332, 336, 337, 385], "taken": [6, 27, 47, 74, 75, 76, 97, 100, 106, 137, 161, 172, 194, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 286, 309, 310, 345], "talk": [328, 329, 331], "tangent": 336, "tanner": 391, "tarascon": 93, "target": [104, 110, 114, 303], "tarr": 97, "task": 322, "tast": 90, "tauler": 93, "tavakkoli": 93, "taxonom": 22, "tc_0": 309, "tcl": 319, "td": 333, "tdd": 6, "tdeff": 161, "tdl": 319, "team": 1, "technic": [2, 91], "techniqu": [303, 323, 332], "technol": 93, "technolog": 2, "tej": 93, "tel": [93, 305], "telecommun": 2, "telephon": 106, "tell": [83, 134, 216], "temperatur": [36, 39, 95, 98, 102, 230, 319, 325], "templat": [83, 231, 325, 365], "temporari": [2, 328, 345], "temporarili": 328, "terahertz": 38, "term": [2, 100, 104, 105, 109, 110, 116, 138, 303, 309, 313], "termin": [2, 20, 84, 94, 95, 322, 355, 393], "terrain": 328, "tesdata": 315, "test": [2, 5, 7, 9, 11, 19, 27, 44, 45, 59, 60, 74, 75, 76, 84, 104, 106, 110, 114, 124, 127, 229, 240, 313, 319, 325, 327, 330, 333, 336, 339, 345, 346, 351, 352, 361, 362, 364, 368, 371, 385, 393], "test_": 6, "test_1d_nddataset": 6, "test_cor": 4, "test_d": 6, "test_dataset": 6, "test_method": 6, "test_nddataset_real_imag": 6, "test_read": 4, "test_read_spc": 4, "test_sh": 354, "test_xxx": 4, "testclass": 6, "testdata": [4, 42, 44, 46, 90, 312, 315, 317, 318, 319, 325, 337, 340], "text": [2, 30, 46, 70, 75, 91, 94, 114, 271, 322, 324, 328, 330, 395], "text_antialias": 328, "text_color": 328, "text_hint": 328, "text_hinting_factor": 328, "text_usetex": 328, "textcomp": 328, "textcoord": [74, 75, 311, 328], "textil": 328, "textrm": [105, 303, 313], "textwrap": 327, "textwrapp": 327, "tf": 318, "tg": [54, 231], "tga": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 384], "tgair": 315, "tgscatter": 54, "th": [63, 106, 146, 152, 160, 303], "than": [2, 10, 24, 67, 95, 101, 105, 106, 112, 113, 114, 139, 149, 150, 158, 161, 162, 179, 258, 271, 272, 291, 309, 311, 313, 314, 322, 324, 325, 328, 330, 336, 338, 347, 390], "thank": [1, 38], "thei": [2, 6, 10, 91, 98, 100, 106, 115, 229, 239, 240, 304, 309, 310, 311, 312, 315, 318, 319, 323, 325, 328, 329, 332, 336, 338, 346, 369, 384, 387], "them": [5, 6, 16, 17, 19, 23, 37, 38, 46, 82, 91, 106, 240, 303, 309, 313, 315, 318, 323, 324, 325, 328, 329, 333, 343, 351, 389, 396], "themselv": [98, 318, 328], "theprocessor": 331, "therefor": [2, 6, 74, 97, 106, 154, 157, 163, 304, 323], "thereof": 2, "thermo": [4, 239, 244, 245, 246, 247, 315, 316, 318, 364, 391], "thermocoupl": 230, "thermodynam": 85, "theses": 93, "thet": [229, 239, 240], "thi": [0, 2, 4, 5, 6, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 58, 59, 60, 62, 63, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 79, 82, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 132, 134, 135, 140, 149, 150, 152, 154, 156, 158, 161, 162, 163, 168, 171, 174, 179, 185, 187, 192, 194, 195, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 259, 265, 268, 271, 273, 274, 275, 281, 286, 289, 292, 294, 295, 296, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 342, 343, 355, 364, 369, 383, 387, 388, 389, 390, 395, 396], "thibault": 93, "thid": 22, "thing": [54, 74, 75, 307, 311, 331, 336], "think": 6, "third": [2, 16, 23, 105, 150, 196, 303, 309, 313, 325], "thirti": 2, "those": [2, 20, 95, 97, 98, 99, 105, 106, 113, 115, 123, 139, 150, 310, 315, 322, 328, 331, 336, 340], "though": [20, 328], "three": [20, 22, 54, 74, 96, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 139, 307, 311, 324, 325, 337, 389], "threshold": [67, 150, 162, 311, 328, 332], "through": [4, 6, 86, 90, 106, 124, 127, 162, 307, 311, 318, 323, 325, 328], "throughout": [2, 6, 311, 318], "thse": 23, "thu": [6, 12, 19, 23, 42, 90, 96, 97, 98, 303, 307, 309, 310, 312, 313, 319, 328, 331, 338, 340], "ti": 74, "tia": 93, "tick": [106, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328, 329], "tight": 328, "time": [2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 90, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 132, 136, 138, 147, 156, 161, 163, 170, 174, 175, 176, 179, 241, 278, 285, 301, 303, 307, 309, 310, 311, 312, 313, 315, 318, 319, 321, 322, 326, 327, 328, 329, 330, 331, 334, 337, 340, 343, 382, 385, 396], "timedelta": 325, "timepoint": 20, "timeshift": 241, "timestamp": [4, 18, 23, 37, 42, 44, 74, 90, 241, 312, 315, 317, 318, 319, 337], "timezon": [106, 325, 328, 369], "timl": 95, "tip": [11, 324], "titl": [0, 4, 6, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 31, 36, 37, 38, 39, 42, 43, 44, 46, 54, 60, 66, 74, 75, 76, 90, 97, 98, 99, 102, 106, 123, 128, 134, 153, 171, 186, 189, 196, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 321, 323, 324, 325, 327, 329, 330, 331, 333, 335, 336, 337, 340, 384], "tk": [328, 355], "tmp": 338, "to_arrai": 106, "to_base_unit": [97, 106, 116, 183, 184, 185, 278], "to_compact": 116, "to_dict": [96, 98, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118], "to_pref": 116, "to_reduced_unit": [97, 106, 116, 183, 184, 185, 278], "to_root_unit": 116, "to_xarrai": 106, "todo": [79, 111, 134, 231, 241, 307, 311, 337], "togeth": [3, 27, 63, 97, 106, 114, 206, 303, 310, 313, 318, 329], "tol": [24, 96, 100, 105, 109, 112, 114, 117, 132, 309, 331, 383], "toler": [95, 96, 100, 105, 109, 112, 114, 132], "too": [15, 23, 36, 39, 63, 74, 75, 97, 307, 311, 328, 331, 336, 349], "tool": [6, 13, 91, 92, 93, 323, 333], "top": [93, 162, 196, 311, 328], "topic": [5, 109], "topspin": [1, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 271, 315, 330, 345], "topspin_1d": [45, 59, 60, 327, 330, 333], "topspin_2d": [45, 75, 325, 327], "tornado": 338, "torr": [18, 37, 90], "tort": 2, "toshift": [145, 253], "total": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 74, 75, 76, 77, 79, 80, 81, 97, 104, 105, 106, 110, 114, 303, 306, 313, 315], "toto": [115, 314], "touch": 136, "toward": [2, 340], "tqdm": 366, "tr": [240, 319], "trace": [50, 91], "traceback": [97, 106, 278, 314, 327, 338, 391], "track": [93, 305], "tracker": 12, "trademark": 2, "train": [27, 96, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 313], "trait": [111, 336], "traitement": [93, 305], "traitlet": [24, 96, 99, 100, 101, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 328, 338], "transfer": 2, "transfere": 2, "transform": [15, 16, 17, 20, 21, 22, 23, 38, 42, 74, 79, 90, 96, 99, 100, 101, 102, 105, 109, 111, 112, 114, 116, 117, 118, 120, 136, 138, 145, 156, 161, 165, 166, 170, 174, 175, 176, 177, 179, 191, 207, 208, 253, 255, 271, 285, 303, 309, 310, 319, 321, 323, 330, 331, 334, 335, 336, 338, 383], "transit": 383, "translat": [2, 91], "transmiss": 2, "transmissionfederico": 319, "transmit": 2, "transmitt": [38, 239, 240, 319, 339, 368, 370], "transpar": [114, 325, 328, 331, 394], "transport": 85, "transpos": [21, 74, 75, 99, 100, 106, 118, 209, 211, 212, 214, 215, 220, 221, 222, 259, 276, 309, 336, 340, 390], "transposit": [202, 223, 318, 334], "transpositon": 310, "trapezoid": [106, 146, 265, 275, 312], "trapz": [106, 275, 284, 312, 345, 362], "travel": [31, 307], "travert": [0, 1, 87, 89, 90, 93, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340], "travi": 352, "treat": [95, 116, 120, 311, 338], "treatment": [93, 309, 310, 319], "trend": [8, 79, 96, 132, 137, 151, 172, 269], "triang": [136, 156, 170, 174, 227, 266, 267, 271], "triangular": [136, 285, 338], "trigger": [102, 314, 331], "trigonometr": 334, "trim": 96, "tripl": 8, "true": [2, 18, 23, 30, 31, 37, 43, 45, 59, 60, 63, 74, 75, 79, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 120, 123, 124, 125, 126, 127, 134, 136, 138, 140, 145, 146, 154, 156, 161, 162, 165, 166, 170, 171, 174, 175, 176, 179, 182, 183, 186, 189, 191, 192, 194, 195, 196, 203, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 226, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 259, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 283, 285, 286, 299, 300, 301, 302, 307, 309, 310, 311, 312, 315, 318, 319, 325, 327, 328, 329, 330, 331, 333, 335, 336, 339, 340, 366], "true_divid": 336, "truecolor": 328, "truediv": [325, 330], "truli": 311, "trunc": [97, 106, 131, 254], "truncat": [112, 336], "trust": 91, "truth": [6, 336], "try": [6, 18, 38, 42, 63, 79, 83, 86, 95, 106, 116, 120, 157, 158, 167, 168, 203, 204, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 297, 298, 307, 314, 315, 318, 319, 323, 325, 328, 329, 331, 336, 338, 340, 387], "tsc": 319, "tspan": 95, "tune": [67, 74, 303, 314, 332, 338], "tupl": [95, 96, 97, 98, 99, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 123, 125, 126, 127, 135, 137, 155, 157, 162, 163, 172, 192, 195, 196, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 228, 237, 238, 272, 303, 325, 328, 392], "turnhout": [93, 305], "tutori": [36, 39, 83, 91, 92, 307, 308, 309, 310, 311, 312, 313, 314, 315, 319, 320, 323, 325, 328, 331, 333, 337, 338, 345, 389, 395], "twin": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "twinx": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "two": [2, 10, 16, 18, 23, 37, 54, 63, 67, 74, 75, 93, 97, 98, 102, 106, 109, 112, 116, 125, 126, 128, 149, 154, 161, 179, 192, 195, 231, 259, 265, 276, 283, 300, 303, 304, 307, 309, 310, 311, 314, 315, 318, 319, 324, 325, 328, 331, 332, 336, 337, 383], "txt": [46, 50, 66, 67, 70, 79, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 332, 338, 345, 366], "type": [2, 6, 8, 18, 19, 38, 42, 47, 74, 79, 90, 94, 95, 97, 101, 104, 106, 108, 110, 112, 114, 115, 120, 121, 122, 125, 128, 133, 135, 146, 153, 154, 157, 158, 160, 163, 164, 167, 168, 169, 171, 178, 186, 189, 190, 192, 194, 196, 197, 199, 200, 201, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 264, 268, 274, 275, 286, 287, 290, 297, 298, 311, 314, 315, 316, 318, 321, 322, 323, 324, 325, 331, 333, 336, 338, 395], "type1cm": 328, "typecod": [97, 106], "typeerror": [106, 115, 135, 327, 338], "typewrit": 328, "typic": [6, 8, 91, 94, 96, 132, 241, 271, 303, 311, 330, 331], "typograph": 114, "tz": 325, "tzinfo": 106, "t\u00e9": [315, 318], "u": [12, 23, 36, 38, 39, 42, 44, 59, 74, 76, 90, 97, 98, 104, 106, 110, 114, 116, 118, 134, 135, 146, 156, 174, 194, 207, 208, 229, 230, 239, 240, 244, 245, 246, 247, 251, 265, 273, 274, 275, 284, 286, 297, 303, 311, 312, 315, 317, 318, 319, 323, 325, 328, 330, 331, 337, 340], "u_": 114, "u_i": 114, "ub": 74, "ubic": 331, "ubuntu": [84, 88], "ufunc": [325, 334, 377], "umasked_data": [97, 106], "un": [100, 336], "unalign": 329, "unamed_script": 119, "unari": 334, "unavoid": 6, "unbias": [106, 274, 286], "unchang": [97, 106, 131, 254, 330], "uncom": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 94, 327], "unconstrain": [96, 132], "uncorrel": 112, "undefin": [325, 328], "under": [1, 2, 91, 94, 308, 315, 354], "underli": [97, 100, 106, 303, 311, 331], "underscor": [74, 76, 307, 324, 327, 328], "understand": [2, 93, 305, 323, 383], "understood": 2, "undertak": 2, "undesir": 340, "unexplain": [24, 117], "unicod": [100, 105, 328], "unidimension": 326, "uniform": [97, 106, 189, 228, 338], "uniformli": [97, 106, 189], "unimod": [105, 303, 309, 373], "unimodconc": [105, 309], "unimodconcmod": 105, "unimodconctol": 105, "unimodmod": 373, "unimodspec": 105, "unimodspecmod": 105, "unimodspectol": 105, "unimodtol": [105, 373], "uniniti": [106, 157, 158, 167, 168, 203, 204, 297, 298], "union": [123, 260, 329], "uniqu": [119, 233, 325], "unit": [4, 16, 17, 18, 24, 27, 31, 35, 36, 37, 39, 40, 43, 56, 59, 74, 76, 90, 94, 95, 97, 98, 100, 104, 106, 110, 112, 116, 123, 128, 140, 153, 156, 157, 158, 159, 160, 162, 163, 164, 167, 168, 171, 174, 178, 182, 183, 184, 185, 186, 189, 203, 204, 207, 228, 229, 239, 261, 273, 278, 280, 281, 297, 298, 306, 307, 309, 310, 312, 313, 318, 326, 328, 330, 331, 333, 334, 335, 355, 368, 370, 391], "unit_item": 116, "unitari": 118, "unitless": [18, 22, 23, 42, 46, 54, 97, 106, 116, 160, 167, 168, 203, 231, 237, 238, 297, 309, 310, 315, 319, 325, 334], "unitregistri": 116, "unitsa": 318, "unitscm": [307, 311], "unitscontain": 116, "unitsmin": 318, "unitss": 318, "univari": 102, "univers": [20, 93, 106, 325, 334], "universit": 93, "universiteit": 20, "universit\u00e9": 1, "unix": [205, 229, 239, 240, 318], "unknown": [42, 315], "unless": [2, 96, 97, 106, 124, 127, 171, 186, 189, 228, 387], "unlik": [106, 157, 325], "unlink": [106, 108, 115], "unmask": 340, "unmodifi": 2, "unread": 315, "unresolv": 323, "unrest": 2, "unset": 319, "until": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 311, 324, 343, 382, 396], "untitl": 6, "unusu": 95, "unwant": 340, "unweight": 338, "up": [4, 6, 9, 12, 84, 91, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 293, 307, 314, 328], "upb": 307, "updat": [2, 4, 5, 6, 84, 85, 87, 98, 105, 106, 109, 115, 261, 345, 352, 361, 364, 369, 372, 381, 384], "upgrad": [5, 85, 87, 89, 342], "upload": [15, 42, 86, 155, 188, 315, 385], "upon": 2, "upper": [106, 139, 160, 328, 331, 338], "upstream": [5, 6], "ur": [38, 59, 76, 97, 106, 157, 158, 167, 168, 203, 204, 261, 297, 298, 307, 325, 330, 335], "ureg": 116, "url": [0, 42, 93, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 314, 324, 385], "us": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 32, 33, 36, 37, 38, 39, 42, 47, 49, 52, 54, 60, 63, 66, 67, 70, 74, 75, 76, 79, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 125, 126, 128, 132, 133, 134, 135, 137, 146, 152, 157, 158, 162, 169, 171, 172, 174, 179, 186, 189, 190, 192, 194, 195, 196, 206, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 228, 230, 231, 232, 234, 235, 237, 241, 242, 243, 244, 245, 246, 247, 251, 258, 261, 264, 265, 268, 274, 275, 284, 286, 287, 289, 291, 293, 303, 305, 306, 308, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 323, 324, 326, 327, 329, 332, 333, 334, 335, 336, 337, 339, 340, 343, 345, 352, 359, 376, 377, 383, 385, 387, 389, 391, 393, 395, 396], "usabl": 91, "usag": [8, 83, 85, 325, 334, 394], "use_coord": 162, "use_jac": 95, "use_list": [76, 248], "use_plotli": 328, "used_compon": 385, "used_rang": [96, 331], "uselabel_x": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "useless": [37, 311], "useoffset": 328, "usepackag": 328, "user": [1, 2, 5, 6, 10, 19, 20, 83, 90, 91, 93, 94, 97, 103, 106, 111, 115, 157, 160, 178, 241, 309, 310, 311, 312, 315, 322, 325, 326, 328, 331, 337, 338, 369, 375, 391, 393], "user_global_n": 338, "user_n": 338, "userguid": [9, 87, 89, 91, 92, 304, 307, 315, 317, 327, 391], "usermodel": [74, 76, 111], "usernam": 318, "userwarn": [16, 24, 45, 47, 74, 325, 327, 336, 339], "usetex": 328, "usual": [19, 36, 39, 50, 63, 79, 86, 91, 101, 136, 138, 145, 149, 156, 161, 165, 166, 170, 174, 175, 176, 179, 191, 207, 208, 253, 255, 258, 268, 271, 285, 289, 309, 310, 311, 314, 315, 325, 327, 328], "utc": [106, 239, 318, 325, 328, 369], "utf": 324, "util": [6, 317, 327, 352, 375], "uv": [19, 20, 93, 309, 310], "v": [19, 20, 31, 38, 74, 75, 83, 87, 89, 90, 93, 95, 97, 98, 104, 106, 110, 114, 118, 152, 163, 289, 303, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 322, 323, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 349], "v0_8": [328, 329], "v_1": [98, 325], "vacuum": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 362], "vaidulych": 93, "vajda": 93, "val": [98, 106, 115, 307, 318], "valentin": 93, "valid": [2, 17, 27, 67, 91, 98, 106, 109, 111, 140, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 273, 313, 315, 318, 332, 389], "valtchev": 93, "valtera": 93, "valu": [2, 6, 15, 16, 18, 20, 21, 22, 23, 24, 27, 30, 42, 44, 46, 50, 54, 59, 60, 67, 70, 74, 75, 76, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 139, 146, 150, 151, 154, 157, 158, 160, 162, 163, 165, 166, 167, 168, 171, 182, 186, 189, 192, 194, 195, 203, 204, 226, 228, 232, 234, 240, 242, 243, 247, 254, 258, 268, 270, 271, 274, 275, 283, 285, 286, 297, 298, 303, 307, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 323, 325, 327, 328, 329, 330, 331, 333, 336, 337, 338, 340, 345, 374, 387, 390, 391], "valueerror": [106, 116, 123, 272, 319, 325], "van": [20, 93, 305], "var": [106, 194, 274, 307], "vardiff": 134, "variabl": [30, 74, 75, 76, 94, 95, 100, 102, 103, 105, 106, 114, 117, 137, 172, 274, 286, 303, 304, 307, 313, 314, 315, 323, 328], "varianc": [22, 23, 24, 100, 106, 112, 117, 118, 134, 149, 194, 274, 286, 303, 310, 332, 391], "variat": [63, 97, 307, 331, 390], "variou": [4, 41, 56, 75, 79, 90, 96, 101, 106, 115, 123, 162, 187, 229, 258, 268, 289, 303, 311, 314, 323, 325, 327, 331, 338, 389], "vast": 338, "vdlist": [76, 248, 391], "ve": 90, "vector": [75, 96, 105, 112, 114, 118, 151, 289, 303, 310, 328, 331, 336], "vegg": 93, "vei": 74, "vel": 319, "veloc": 319, "velopp": [93, 305], "ven": [315, 318], "venv": [5, 21, 24, 84, 87, 88, 89, 327, 338], "verbos": [17, 19, 21, 373], "veri": [6, 12, 20, 79, 91, 307, 308, 309, 311, 318, 328, 331, 335, 340], "verifi": [2, 6, 84, 85], "verkn\u00fcpft": [315, 318], "versicolor": 22, "version": [0, 2, 6, 10, 12, 47, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 135, 152, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 263, 314, 319, 322, 338, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "versu": [6, 31, 307], "vertex": 319, "vertic": [50, 106, 196, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 311, 328, 331], "vi": [2, 20], "via": [5, 88, 93, 112, 177, 305], "vibrat": [133, 307], "vide": [315, 318], "view": [9, 45, 50, 106, 116, 152, 303, 325, 328, 338], "view_init": 22, "viginica": 22, "vijaysekhar": 93, "vilmin": 331, "vimont": 93, "vincent": 93, "violat": 21, "violet": [50, 75], "virginica": 22, "viridi": [112, 114, 328, 329], "virtual": [5, 89, 323], "viru": 2, "visibl": [93, 196, 328, 329], "visit": 83, "visual": [21, 92, 116, 310, 312, 313, 340], "vk": [315, 318], "vladimir": 93, "vmax": [114, 328], "vmin": [114, 328], "vogt": 93, "voic": 9, "void": 311, "voigt": [133, 287, 307], "voigtmodel": [75, 133, 307], "vollmer": 93, "volt": [38, 239], "voluceau": 2, "volum": 113, "vscode": 13, "vshift": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "vsn": 319, "vt": 118, "vz0466": [23, 42, 90, 312, 340], "vz0467": [42, 90, 312, 340], "vz0468": 315, "vz0470": 315, "vz0471": 23, "vz0512": 23, "vz0517": 23, "vz0520": [42, 90, 312, 340], "vz0521": [42, 90, 312, 340], "v\u00e2\u00ba": [315, 318], "v\u00fc\u00f6": [315, 318], "w": [16, 74, 93, 97, 104, 106, 109, 110, 114, 116, 136, 170, 175, 176, 303, 311, 314, 315, 318], "w1": [104, 110], "w_init": 100, "wa": [2, 20, 37, 91, 95, 98, 154, 309, 314, 315, 318, 323, 325, 340, 345, 348, 349, 353, 383, 387, 388, 390, 391], "waal": 93, "wai": [0, 6, 10, 37, 54, 83, 93, 98, 106, 168, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 304, 314, 315, 318, 322, 323, 325, 328, 331, 332, 340, 369, 389], "waiver": 2, "walczak": 93, "wang": 93, "want": [6, 27, 36, 37, 39, 70, 86, 87, 89, 91, 94, 96, 97, 106, 114, 123, 134, 151, 174, 182, 271, 278, 307, 312, 315, 318, 319, 322, 323, 324, 325, 328, 329, 330, 331, 332, 338, 340], "war": 2, "warg": 98, "warm": 111, "warm_start": [96, 99, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118], "warn": [6, 21, 22, 42, 63, 74, 79, 96, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 149, 258, 260, 268, 282, 288, 289, 309, 314, 324, 325, 327, 328, 330, 331, 335, 336, 337, 339, 348, 354, 376, 381, 382], "warning_": 47, "warrant": [2, 311], "warranti": 2, "wassim": 93, "water": 2, "waterfal": [106, 209, 210, 211, 212, 214, 215, 220, 222, 328, 345], "watt": 116, "wavelength": [4, 16, 17, 19, 20, 24, 27, 37, 38, 94, 239, 303, 309, 310, 313, 331], "wavenumb": [18, 36, 37, 38, 39, 42, 44, 47, 63, 90, 94, 97, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 239, 311, 312, 315, 317, 318, 319, 325, 328, 331, 337, 338, 340], "wdf": [47, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 315, 390], "we": [1, 3, 5, 6, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 79, 82, 83, 84, 87, 90, 91, 97, 106, 108, 115, 123, 134, 136, 138, 145, 153, 156, 161, 165, 166, 170, 174, 175, 176, 179, 182, 191, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 229, 239, 240, 253, 255, 259, 261, 271, 278, 285, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 336, 338, 339, 340, 364], "web": [91, 324, 328], "webbook": [155, 367], "websit": [2, 20, 42, 86], "weckhuysen": 93, "wed": [23, 42, 90, 312, 315, 340], "weight": [63, 104, 105, 106, 110, 114, 135, 194, 303, 328, 338], "welcom": [5, 10, 12, 83], "weleas": 315, "well": [2, 12, 19, 43, 114, 162, 309, 310, 328, 395], "were": [2, 31, 102, 105, 106, 111, 118, 307, 315, 318, 328, 339, 343, 353, 388, 390, 396], "wert": [289, 338], "wh": 109, "whan": 303, "what": [3, 12, 50, 75, 90, 106, 152, 304, 307, 321, 331, 334, 340, 342], "whatev": [94, 106, 323], "whatsnew": [4, 6, 378], "whatsoev": 2, "when": [0, 2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 67, 74, 75, 76, 79, 83, 85, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 109, 110, 111, 112, 114, 115, 117, 118, 123, 128, 135, 150, 151, 162, 163, 171, 186, 189, 196, 206, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 268, 271, 303, 307, 309, 311, 314, 318, 324, 325, 328, 330, 331, 333, 337, 338, 340, 343, 347, 351, 355, 369, 374, 376, 383, 385, 390, 391, 396], "whenev": [114, 123, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 329], "where": [2, 6, 9, 13, 46, 47, 63, 74, 75, 76, 79, 97, 98, 99, 100, 101, 102, 104, 105, 106, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 128, 136, 137, 139, 156, 160, 163, 169, 170, 172, 174, 175, 176, 186, 190, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 268, 271, 274, 286, 289, 290, 291, 293, 303, 304, 307, 312, 315, 318, 321, 325, 326, 328, 330, 331, 335, 336, 339, 343, 396], "wherebi": 309, "whether": [2, 95, 96, 97, 98, 102, 104, 105, 106, 110, 111, 114, 118, 124, 127, 152, 154, 162, 186, 241, 248, 309, 310, 328, 337], "which": [2, 10, 15, 20, 22, 38, 54, 60, 63, 74, 75, 79, 86, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 123, 124, 125, 126, 127, 134, 135, 136, 138, 140, 141, 142, 145, 146, 149, 153, 156, 158, 161, 163, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 179, 182, 189, 191, 192, 194, 195, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 226, 228, 253, 255, 256, 258, 265, 268, 270, 271, 274, 275, 284, 285, 286, 289, 298, 303, 304, 307, 309, 310, 311, 313, 315, 318, 319, 322, 323, 325, 328, 329, 331, 332, 336, 337, 338, 340, 364, 385, 387, 388, 389], "while": [5, 22, 90, 91, 95, 104, 105, 110, 303, 309, 310, 313, 328, 331, 338], "whitak": [67, 93, 150, 332, 384], "white": [196, 328, 329], "whitegrid": [328, 329], "whiten": [100, 112, 391], "whiten_solv": 100, "whitespac": 328, "whittak": [69, 71, 72, 101, 106, 229, 258, 268, 306, 334, 389], "whn": [229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "whnever": [290, 291, 293], "who": [1, 2, 322], "whole": [2, 42, 75, 154, 307, 311, 331], "whose": [2, 100, 102, 105, 106, 109, 111, 112, 114, 117, 118, 160, 194, 286, 315], "why": [6, 12, 92, 307, 364], "wich": [21, 22], "wide": [84, 91], "widget": [86, 328, 367, 372, 384], "width": [22, 30, 50, 74, 75, 79, 93, 96, 106, 133, 162, 169, 174, 190, 196, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 269, 287, 305, 307, 327, 328], "width_height": [74, 311], "wiggl": 328, "wiki": [6, 328], "wikipedia": [328, 338], "wild": 323, "wilei": 93, "wilk": [93, 235, 317], "william": 1, "wilson": 93, "windig": [93, 117], "window": [5, 58, 61, 72, 79, 84, 86, 88, 90, 96, 101, 106, 136, 150, 156, 162, 170, 174, 175, 176, 205, 227, 229, 239, 240, 248, 258, 267, 268, 269, 271, 289, 290, 306, 311, 315, 318, 321, 322, 332, 334, 335, 354, 359, 368], "window_length": [101, 162, 258, 268], "wire": [41, 48, 56, 106, 112, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 306, 315, 390], "wise": [97, 106, 112, 121, 122, 125, 126, 192, 195, 336], "wish": [106, 152, 322], "with_suffix": [106, 115, 187], "with_transpos": [196, 202, 223], "within": [2, 9, 97, 106, 128, 241, 309, 311, 323, 324], "without": [2, 6, 86, 101, 106, 145, 157, 161, 179, 191, 229, 231, 239, 240, 255, 258, 303, 304, 309, 311, 314, 323, 328, 329, 331, 337, 364], "wittaker_smooth_licens": 289, "wl": 311, "wlen": [74, 162, 311], "wodger": [38, 106, 108, 115, 239, 279, 315], "won": [22, 311], "word": [2, 100, 102, 105, 109, 111, 112, 114, 117, 118, 324], "wordpress": 309, "work": [0, 1, 2, 6, 16, 18, 21, 24, 37, 42, 45, 47, 54, 63, 74, 75, 82, 83, 85, 91, 96, 106, 111, 132, 149, 154, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 289, 308, 314, 315, 317, 322, 323, 325, 327, 328, 334, 338, 343, 345, 347, 348, 350, 355, 358, 364, 368, 369, 375, 382, 387, 390, 391, 393, 394, 396], "workflow": [343, 352, 357, 396], "workspac": 322, "worldwid": 2, "wors": [104, 110, 114], "worth": [6, 311, 318, 328], "worthwhil": 323, "would": [6, 18, 21, 31, 37, 63, 70, 100, 102, 104, 105, 109, 110, 111, 112, 114, 117, 118, 154, 309, 311, 319, 331, 337, 338, 383], "wp": [42, 104, 110, 315, 385], "wr": 311, "wrap": [101, 114, 116, 258, 268], "wrapper": [100, 258, 265, 284, 319, 336, 338], "wrapper1": 327, "write": [2, 4, 8, 11, 43, 91, 106, 108, 115, 152, 291, 293, 307, 318, 322, 330, 331, 336, 366, 383], "write_csv": [362, 391], "write_excel": 296, "write_jcamp": 317, "write_jdx": 317, "write_matlab": 294, "writer": [317, 328, 345], "written": [2, 8, 9, 118, 317, 323, 343, 396], "wrong": [12, 314, 379], "wrongli": [348, 388], "wrt": [104, 110, 314], "wspace": 196, "www": [0, 27, 42, 93, 293, 313, 314, 323, 331], "x": [1, 6, 17, 18, 19, 20, 22, 23, 24, 27, 31, 36, 37, 38, 39, 42, 44, 46, 50, 60, 67, 70, 74, 75, 76, 79, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 114, 117, 118, 123, 134, 135, 136, 138, 140, 141, 142, 145, 146, 149, 153, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 178, 179, 190, 191, 194, 196, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 224, 229, 230, 231, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 253, 255, 264, 265, 271, 273, 274, 275, 278, 284, 285, 286, 293, 297, 298, 303, 304, 305, 307, 309, 310, 311, 312, 313, 315, 317, 318, 319, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 340, 343, 362, 363, 383, 390, 396], "x1": [67, 331, 336], "x2": [67, 309, 318, 331, 336], "x3": [67, 331], "x4": [67, 331], "x5": 331, "x6": 331, "x64": 338, "x7": 331, "x8": 331, "x9b": 20, "x_": [18, 37, 313], "x_bckg_yyybg": 230, "x_coord": 4, "x_correct": 318, "x_data": 4, "x_hat": [20, 99, 100, 102, 105, 109, 111, 112, 114, 117, 118], "x_hat_a": 17, "x_hat_b": 17, "x_load": 313, "x_normal": 318, "x_origin": [100, 102, 105, 109, 111, 112, 114, 117, 118], "x_revers": [106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222], "x_samplename_yyi": 230, "x_score": [114, 313], "x_test": [27, 313], "x_train": [27, 313], "x_transform": [100, 102, 105, 109, 111, 112, 114, 117, 118], "xand": 109, "xarrai": [3, 106, 282], "xavier": 93, "xaxi": [239, 388], "xc": [79, 331], "xcm": 79, "xcode": [5, 88], "xcorr": 312, "xcp": 79, "xfail": 6, "xhan": 338, "xiang": 93, "xlabel": [18, 22, 23, 31, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "xlim": [74, 76, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 330, 333, 335, 338, 339], "xm": [70, 338], "xn": 338, "xpmlocat": 319, "xpp": 319, "xsg": 338, "xsm": 338, "xsm2": 338, "xtick_bottom": 328, "xtick_color": 328, "xtick_direct": 328, "xtick_labels": 328, "xtick_major_bottom": 328, "xtick_major_pad": 328, "xtick_major_s": 328, "xtick_major_top": 328, "xtick_major_width": 328, "xtick_minor_bottom": 328, "xtick_minor_pad": 328, "xtick_minor_s": 328, "xtick_minor_top": 328, "xtick_minor_vis": 328, "xtick_minor_width": 328, "xtick_top": 328, "xw": 338, "xwhit": 338, "xx": [155, 328], "xxx": 319, "xxx_data": 4, "xxxx": 155, "xxxxxxx": 155, "xy": [47, 74, 75, 311, 328], "xytext": [74, 75, 311, 328], "y": [15, 17, 18, 20, 22, 23, 24, 27, 30, 31, 36, 37, 39, 42, 43, 44, 46, 74, 75, 76, 90, 93, 95, 97, 98, 99, 100, 102, 104, 105, 106, 109, 110, 111, 112, 113, 114, 117, 118, 134, 135, 146, 153, 157, 160, 162, 163, 167, 194, 196, 204, 209, 211, 212, 214, 215, 220, 221, 222, 229, 230, 231, 237, 238, 239, 240, 241, 244, 245, 246, 247, 251, 273, 274, 275, 278, 286, 297, 298, 303, 305, 307, 309, 310, 311, 312, 313, 315, 316, 317, 319, 325, 327, 328, 329, 336, 337, 338, 340, 347, 376, 391], "y_coord": 4, "y_data": 4, "y_event": 95, "y_hat": 114, "y_load": 313, "y_pred": [104, 110, 114], "y_revers": [106, 209, 211, 212, 214, 215, 220, 221, 222, 328], "y_score": [114, 313], "y_std": 313, "y_test": [27, 313], "y_test_hat": 313, "y_train": [27, 313], "y_transform": [105, 114], "y_true": [104, 110, 114], "year": 0, "yellow": 324, "yet": [13, 106, 270, 322, 323, 325, 329], "yield": [6, 8, 311, 314], "ylabel": [18, 22, 23, 31, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "ylim": [74, 75, 106, 112, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 307, 311, 338], "yml": [88, 345], "yonesi": [93, 305], "you": [0, 3, 5, 6, 9, 10, 12, 13, 38, 42, 82, 83, 85, 86, 87, 89, 90, 91, 94, 95, 96, 97, 100, 106, 114, 151, 152, 304, 307, 308, 312, 315, 318, 319, 322, 323, 324, 325, 328, 335, 337, 339, 340, 348, 379], "your": [0, 4, 6, 13, 82, 83, 84, 85, 86, 90, 91, 94, 95, 100, 106, 259, 318, 321, 322, 323, 324, 325, 331, 335], "yourmambaforgefold": 89, "yourself": 6, "yourworkingfold": 89, "yscale": [15, 16], "ytick_color": 328, "ytick_direct": 328, "ytick_labels": 328, "ytick_left": 328, "ytick_major_left": 328, "ytick_major_pad": 328, "ytick_major_right": 328, "ytick_major_s": 328, "ytick_major_width": 328, "ytick_minor_left": 328, "ytick_minor_pad": 328, "ytick_minor_right": 328, "ytick_minor_s": 328, "ytick_minor_vis": 328, "ytick_minor_width": 328, "ytick_right": 328, "yu": 93, "yukihiro": 93, "yukiteru": 93, "yyi": 230, "z": [36, 39, 44, 47, 93, 97, 98, 106, 163, 196, 273, 305, 315, 318, 319, 325, 328, 336], "z1": 319, "zapf": 328, "zden\u011bk": 93, "zenodo": [0, 93, 305], "zeolit": [21, 90, 93, 305], "zeorslik": [106, 298], "zero": [16, 106, 109, 124, 135, 136, 145, 157, 158, 160, 167, 168, 191, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 255, 274, 286, 298, 299, 300, 301, 302, 312, 325, 334, 335], "zerodivisionerror": [106, 135], "zeros_lik": [106, 157, 158, 167, 168, 203, 204, 297], "zeroto": 109, "zeynep": 93, "zf": 335, "zf_size": 333, "zff": 319, "zhang": 93, "zholobenko": [93, 303], "zip": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 50, 51, 54, 59, 60, 63, 66, 67, 70, 74, 75, 76, 79, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 320, 345, 385], "zlabel": [23, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328], "zlim": [59, 60, 106, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 328, 330], "zmqshell": 338, "zoom": [74, 311, 328, 335, 338], "zo\u00e9": 93, "zpd": 335, "zscore": 150, "zsm": 319, "zuberbuehl": [93, 99, 303], "\u00b2": [315, 318], "\u00b2\u00f8": [315, 318], "\u00b3": [315, 318], "\u00b3\u00ba": [315, 318], "\u00b5": [60, 74, 76, 315, 318, 327, 330, 333], "\u00b5\u00f6": [315, 318], "\u00b9": [18, 37, 42, 44, 46, 74, 90, 106, 135, 194, 311, 312, 315, 317, 318, 319, 325, 335, 337, 340], "\u00ba": [315, 318], "\u00bab": [315, 318], "\u00bajq": [315, 318], "\u00bal\u00ea\u00f0\u00bas\u00f6\u00fe\u00bav\u00f0m\u00ba\u00eeg4\u00bac\u00e0": [315, 318], "\u00bam\u00bcb\u00ba\u00e2\u00fe\u00e57\u00fb\u00ed": [315, 318], "\u00baq": [315, 318], "\u00ba\u00e1r\u00ef\u00b9\u00e7": [315, 318], "\u00ba\u00ed9\u00f4\u00ba\u00f3\u00e0\u00b3\u00baou": [315, 318], "\u00ba\u00f0\u00b9": [315, 318], "\u00ba\u00f3": [315, 318], "\u00ba\u00f4": [315, 318], "\u00ba\u00fc": [315, 318], "\u00bc": [315, 318], "\u00bd": [315, 318], "\u00bd\u00b2\u00f2": [315, 318], "\u00be": [315, 318], "\u00bec\u00f6": [315, 318], "\u00df": [315, 318], "\u00e0": [93, 315, 318], "\u00e0p": [315, 318], "\u00e1": 93, "\u00e1\u00f8": [315, 318], "\u00e2": [315, 318], "\u00e2\u00bd\u00e4": [315, 318], "\u00e3": [315, 318], "\u00e3i\u00b9": [315, 318], "\u00e4": [315, 318], "\u00e4\u00e4": [315, 318], "\u00e5": [315, 318], "\u00e5o": [315, 318], "\u00e6": [315, 318], "\u00e6\u00bap": [315, 318], "\u00e7": [93, 315, 318], "\u00e7e": [315, 318], "\u00e8x": [315, 318], "\u00e9": [93, 315, 318], "\u00e9chantillon": [315, 318], "\u00e9cran": [315, 318], "\u00ea": [315, 318], "\u00eap": [315, 318], "\u00ea\u00b9x\u00f5\u00bd": [315, 318], "\u00ea\u00f2\u00ba": [315, 318], "\u00eb": [315, 318], "\u00eb\u00ba": [315, 318], "\u00eb\u00e1\u00ba\u00e0": [315, 318], "\u00eb\u00f0": [315, 318], "\u00ec": [315, 318], "\u00ecncrement": 97, "\u00ecrdata": 315, "\u00ec\u00ba": [315, 318], "\u00ed": [315, 318], "\u00edn": [315, 318], "\u00edu": [315, 318], "\u00ed\u00b9": [315, 318], "\u00ee": [315, 318], "\u00ee\u00e2": [315, 318], "\u00ee\u00f6": [315, 318], "\u00efk\u00aa": [315, 318], "\u00efq9o\u00ec": [315, 318], "\u00f1": [315, 318], "\u00f1m\u00e0": [315, 318], "\u00f1\u00e8": [315, 318], "\u00f1\u00f1": [315, 318], "\u00f2": [315, 318], "\u00f249": [315, 318], "\u00f2\u00f9": [315, 318], "\u00f3": [93, 315, 318], "\u00f3\u00e5\u00ba": [315, 318], "\u00f3\u00e6": [315, 318], "\u00f4\u00ed\u00ba": [315, 318], "\u00f5": [315, 318], "\u00f6": [315, 318], "\u00f6\u00fe": [315, 318], "\u00f8": 93, "\u00f8\u00ba": [315, 318], "\u00f8\u00e31": [315, 318], "\u00fa": [315, 318], "\u00fa2": [315, 318], "\u00fa\u00bay": [315, 318], "\u00fa\u00eb": [315, 318], "\u00fb": [315, 318], "\u00fby\u00ee": [315, 318], "\u00fb\u00ba": [315, 318], "\u00fb\u00e6": [315, 318], "\u00fb\u00fd\u00e0": [315, 318], "\u00fc": [315, 318], "\u00fc\u00b9": [315, 318], "\u00fd": [315, 318], "\u00fdh": [315, 318], "\u00fd\u00e9\u00ba\u00f9h": [315, 318], "\u00fd\u00f3\u00e9\u00ba": [315, 318], "\u00fe": [315, 318], "\u00ff\u00e9\u00ba": [315, 318], "\u00ff\u00f0\u00e6": [315, 318], "\u0161tefan": 93, "\u03bb": 338, "\u2075": 325}, "titles": ["Citing SpectroChemPy", "Contributors", "SpectroChempy License", "See also", "Adding a Reader", "Contributing to SpectroChemPy", "Contributing to the code", "Contributing to specific parts of the code", "SpectroChemPy Docstring Guide", "Contributing to Documentation", "Adding your examples to the gallery", "Developer\u2019s Guide", "Reporting Issues", "Editors", "Decomposition", "EFA example", "EFA (Keller and Massart original example)", "FastICA example", "2D-IRIS analysis example", "MCR-ALS example (adapted from Jaumot et al. 2005)", "MCR-ALS with kinetic constraints", "NMF analysis example", "PCA example (iris dataset)", "PCA analysis example", "SIMPLISMA example", "Computation times", "Cross-decomposition", "PLS regression example", "Computation times", "Curvefitting", "Fitting 1D dataset", "Solve a linear equation using LSTSQ", "Computation times", "Analysis NDDataset", "Computation times", "How to use NDDataset", "NDDataset creation and plotting example", "NDDataset coordinates example", "Units manipulation examples", "NDDataset creation and plotting example", "Computation times", "Import / Export", "Reading datasets", "Loading an IR (omnic SPG) experimental file", "Loading Bruker OPUS files", "Loading of experimental 1D NMR data", "Loading RAMAN experimental file", "Reading Renishaw WiRE files", "Computation times", "Plotting datasets", "Using <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plot_multiple</span></code> to plot several datasets on the same figure", "Introduction to the plotting librairie", "Computation times", "Project Management", "Project creation", "Computation times", "Core functionalities", "Computation times", "Apodization", "Exponential window multiplication", "Sine bell and squared Sine bell window multiplication", "Computation times", "Baseline", "NDDataset baseline correction", "Computation times", "Denoising", "Denoising a 2D Raman spectrum", "Removing cosmic ray spikes from a Raman spectrum", "Computation times", "filtering", "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum", "Computation times", "Processing NDDataset", "Processing NMR datasets", "Analysis CP NMR spectra", "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)", "Processing Relaxation measurement", "Computation times", "Processing Raman datasets", "Processing RAMAN spectra", "Computation times", "Computation times", "Example\u2019s gallery", "Getting Help", "Installation Guide", "Optional Dependencies", "Install in Google Colaboratory (Colab)", "Installation Guide for Mac OSX and Linux", "Installation from Sources", "Installation Guide for Windows", "Quickstart Tutorial \ud83d\ude80", "Why SpectroChemPy?", "SpectroChemPy: Advanced Spectroscopic Data Analysis", "Bibliography", "Frequently asked questions (FAQ)", "spectrochempy.ActionMassKinetics", "spectrochempy.Baseline", "spectrochempy.Coord", "spectrochempy.CoordSet", "spectrochempy.EFA", "spectrochempy.FastICA", "spectrochempy.Filter", "spectrochempy.IRIS", "spectrochempy.IrisKernel", "spectrochempy.LSTSQ", "spectrochempy.MCRALS", "spectrochempy.NDDataset", "spectrochempy.NDDataset.save", "spectrochempy.NDDataset.save_as", "spectrochempy.NMF", "spectrochempy.NNLS", "spectrochempy.Optimize", "spectrochempy.PCA", "spectrochempy.PFR", "spectrochempy.PLSRegression", "spectrochempy.Project", "spectrochempy.Quantity", "spectrochempy.SIMPLISMA", "spectrochempy.SVD", "spectrochempy.Script", "spectrochempy.Unit", "spectrochempy.abs", "spectrochempy.absolute", "spectrochempy.align", "spectrochempy.all", "spectrochempy.amax", "spectrochempy.amin", "spectrochempy.any", "spectrochempy.arange", "spectrochempy.argmax", "spectrochempy.argmin", "spectrochempy.around", "spectrochempy.asls", "spectrochempy.asymmetricvoigtmodel", "spectrochempy.autosub", "spectrochempy.average", "spectrochempy.bartlett", "spectrochempy.basc", "spectrochempy.blackmanharris", "spectrochempy.clip", "spectrochempy.concatenate", "spectrochempy.conj", "spectrochempy.conjugate", "spectrochempy.coordmax", "spectrochempy.coordmin", "spectrochempy.cs", "spectrochempy.cumsum", "spectrochempy.dc", "spectrochempy.debug_", "spectrochempy.denoise", "spectrochempy.despike", "spectrochempy.detrend", "spectrochempy.diag", "spectrochempy.diagonal", "spectrochempy.dot", "spectrochempy.download_nist_ir", "spectrochempy.em", "spectrochempy.empty", "spectrochempy.empty_like", "spectrochempy.error_", "spectrochempy.eye", "spectrochempy.fft", "spectrochempy.find_peaks", "spectrochempy.fromfunction", "spectrochempy.fromiter", "spectrochempy.fsh", "spectrochempy.fsh2", "spectrochempy.full", "spectrochempy.full_like", "spectrochempy.gaussianmodel", "spectrochempy.general_hamming", "spectrochempy.geomspace", "spectrochempy.get_baseline", "spectrochempy.get_loglevel", "spectrochempy.gm", "spectrochempy.hamming", "spectrochempy.hann", "spectrochempy.ht", "spectrochempy.identity", "spectrochempy.ifft", "spectrochempy.info_", "spectrochempy.interpolate", "spectrochempy.is_units_compatible", "spectrochempy.ito", "spectrochempy.ito_base_units", "spectrochempy.ito_reduced_units", "spectrochempy.linspace", "spectrochempy.load", "spectrochempy.load_iris", "spectrochempy.logspace", "spectrochempy.lorentzianmodel", "spectrochempy.ls", "spectrochempy.max", "spectrochempy.mc", "spectrochempy.mean", "spectrochempy.min", "spectrochempy.multiplot", "spectrochempy.multiplot_image", "spectrochempy.multiplot_lines", "spectrochempy.multiplot_map", "spectrochempy.multiplot_scatter", "spectrochempy.multiplot_stack", "spectrochempy.multiplot_with_transposed", "spectrochempy.ones", "spectrochempy.ones_like", "spectrochempy.pathclean", "spectrochempy.pipe", "spectrochempy.pk", "spectrochempy.pk_exp", "spectrochempy.plot", "spectrochempy.plot_1D", "spectrochempy.plot_2D", "spectrochempy.plot_3D", "spectrochempy.plot_bar", "spectrochempy.plot_image", "spectrochempy.plot_map", "spectrochempy.plot_multiple", "spectrochempy.plot_pen", "spectrochempy.plot_scatter", "spectrochempy.plot_scatter_pen", "spectrochempy.plot_stack", "spectrochempy.plot_surface", "spectrochempy.plot_waterfall", "spectrochempy.plot_with_transposed", "spectrochempy.polynomialbaseline", "spectrochempy.ps", "spectrochempy.ptp", "spectrochempy.qsin", "spectrochempy.random", "spectrochempy.read", "spectrochempy.read_carroucell", "spectrochempy.read_csv", "spectrochempy.read_ddr", "spectrochempy.read_dir", "spectrochempy.read_hdr", "spectrochempy.read_jcamp", "spectrochempy.read_labspec", "spectrochempy.read_mat", "spectrochempy.read_matlab", "spectrochempy.read_omnic", "spectrochempy.read_opus", "spectrochempy.read_quadera", "spectrochempy.read_sdr", "spectrochempy.read_soc", "spectrochempy.read_spa", "spectrochempy.read_spc", "spectrochempy.read_spg", "spectrochempy.read_srs", "spectrochempy.read_topspin", "spectrochempy.read_wdf", "spectrochempy.read_wire", "spectrochempy.read_zip", "spectrochempy.remove_masks", "spectrochempy.roll", "spectrochempy.round", "spectrochempy.rs", "spectrochempy.run_all_scripts", "spectrochempy.run_script", "spectrochempy.savgol", "spectrochempy.set_complex", "spectrochempy.set_loglevel", "spectrochempy.set_nmr_context", "spectrochempy.show", "spectrochempy.show_versions", "spectrochempy.sigmoidmodel", "spectrochempy.simpson", "spectrochempy.sine", "spectrochempy.sinm", "spectrochempy.smooth", "spectrochempy.snip", "spectrochempy.sort", "spectrochempy.sp", "spectrochempy.squeeze", "spectrochempy.stack", "spectrochempy.std", "spectrochempy.sum", "spectrochempy.swapdims", "spectrochempy.take", "spectrochempy.to", "spectrochempy.to_array", "spectrochempy.to_base_units", "spectrochempy.to_reduced_units", "spectrochempy.to_xarray", "spectrochempy.transpose", "spectrochempy.trapezoid", "spectrochempy.triang", "spectrochempy.var", "spectrochempy.voigtmodel", "spectrochempy.warning_", "spectrochempy.whittaker", "spectrochempy.write", "spectrochempy.write_csv", "spectrochempy.write_excel", "spectrochempy.write_jcamp", "spectrochempy.write_mat", "spectrochempy.write_matlab", "spectrochempy.write_xls", "spectrochempy.zeros", "spectrochempy.zeros_like", "spectrochempy.zf", "spectrochempy.zf_auto", "spectrochempy.zf_double", "spectrochempy.zf_size", "Glossary", "Public API reference", "Papers citing <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Computation times", "Fitting", "Analysis", "MCR ALS", "Principal Component Analysis", "Peak Maxima Finding", "Peak Integration", "Partial Least Squares Regression (PLSRegression)", "API Configuration", "Import Data in SpectroChemPy", "Import IR Data", "Import/Export of JCAMP-DX files", "Import of OMNIC files", "Import of Bruker OPUS files", "Import &amp; Export", "User Guide and Tutorials", "Starting Jupyter lab", "Introduction", "Markdown Cheat Sheet", "The NDDataset object", "Core objects", "Project management", "Plotting", "Alignment of datasets", "Apodization", "Baseline corrections", "Denoising", "One-dimensional (1D) Fourier transformation", "Processing", "FTIR interferogram processing", "Mathematical operations", "Slicing NDDatasets", "Filtering, Smoothing and Denoising", "Time domain baseline correction (NMR)", "Basic transformations", "What\u2019s New in Revision", "Release notes", "What\u2019s New in Revision 0.8.0", "Revisions 0.1.0 to 0.1.19", "What\u2019s new in revision 0.2.0", "What\u2019s new in revision 0.2.10 [2021-02-14]", "What\u2019s new in revision 0.2.11 [2021-02-17]", "What\u2019s new in revision 0.2.12 [2021-02-23]", "What\u2019s new in revision 0.2.13 [2021-02-23]", "What\u2019s new in revision 0.2.14 [2021-02-25]", "What\u2019s new in revision 0.2.15 [2021-03-29]", "What\u2019s new in revision 0.2.16 [2021-11-11]", "What\u2019s new in revision 0.2.17 [2021-11-29]", "What\u2019s new in revision 0.2.18 [2022-01-05]", "What\u2019s new in revision 0.2.21 [2022-01-09]", "What\u2019s new in revision 0.2.22 [2022-01-10]", "What\u2019s new in revision 0.2.23 [2022-01-16]", "What\u2019s new in revision 0.2.4", "What\u2019s new in revision 0.2.5", "What\u2019s new in revision 0.2.6", "What\u2019s new in revision 0.2.7", "What\u2019s new in revision 0.2.8", "What\u2019s new in revision 0.2.9 [2021-11-29]", "What\u2019s new in revision 0.3.0 [2022-01-20]", "What\u2019s new in revision 0.3.1 [2022-01-21]", "What\u2019s new in revision 0.3.2 [2022-01-31]", "What\u2019s new in revision 0.3.3 [2022-03-9]", "What\u2019s new in revision 0.4.1 [2022-03-14]", "What\u2019s new in revision 0.4.10 [2023-01-07]", "What\u2019s new in revision 0.4.2 [2022-03-16]", "What\u2019s new in revision 0.4.3 [2022-03-20]", "What\u2019s new in revision 0.4.4 [2022-03-22]", "What\u2019s new in revision 0.4.5 [2022-04-09]", "What\u2019s new in revision 0.4.6 [2022-05-16]", "What\u2019s new in revision 0.4.7 [2022-05-16]", "What\u2019s new in revision 0.4.9 [2023-01-05]", "What\u2019s new in revision 0.5.0 [2023-01-11]", "What\u2019s new in revision 0.5.1", "What\u2019s new in revision 0.5.2", "What\u2019s new in revision 0.5.3", "What\u2019s new in revision 0.5.4", "What\u2019s new in revision 0.5.5", "What\u2019s new in revision 0.6.1", "What\u2019s new in revision 0.6.10", "What\u2019s new in revision 0.6.2", "What\u2019s new in revision 0.6.3", "What\u2019s new in revision 0.6.4", "What\u2019s new in revision 0.6.5", "What\u2019s new in revision 0.6.6", "What\u2019s new in revision 0.6.7", "What\u2019s new in revision 0.6.8", "What\u2019s new in revision 0.6.9", "What\u2019s new in revision 0.7.0", "What\u2019s new in revision 0.7.1", "What\u2019s new in revision 0.7.2", "What\u2019s New in Revision 0.8.0"], "titleterms": {"": [11, 82, 94, 323, 327, 336, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "0": [342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "01": [354, 355, 356, 357, 364, 365, 366, 369, 376, 377], "02": [346, 347, 348, 349, 350], "03": [351, 367, 368, 370, 371, 372], "04": 373, "05": [354, 374, 375, 376], "07": 369, "09": [355, 373], "1": [4, 16, 325, 342, 344, 365, 368, 378, 383, 394], "10": [346, 356, 369, 384], "11": [347, 352, 353, 363, 377], "12": 348, "13": 349, "14": [346, 350, 368], "15": 351, "16": [352, 357, 370, 374, 375], "17": [347, 353], "18": 354, "19": 344, "1d": [30, 45, 79, 325, 328, 333], "2": [4, 16, 325, 342, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 366, 370, 379, 385, 395], "20": [364, 371], "2005": 19, "2021": [305, 346, 347, 348, 349, 350, 351, 352, 353, 363], "2022": [305, 354, 355, 356, 357, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375], "2023": [305, 369, 376, 377], "2024": 305, "2025": 305, "21": [355, 365], "22": [356, 372], "23": [348, 349, 357], "25": 350, "29": [351, 353, 363], "2d": [18, 66, 75, 76, 79, 332], "3": [4, 16, 342, 364, 365, 366, 367, 371, 380, 386], "31": 366, "4": [4, 16, 342, 358, 368, 369, 370, 371, 372, 373, 374, 375, 376, 381, 387], "5": [4, 342, 359, 373, 377, 378, 379, 380, 381, 382, 388], "6": [342, 360, 374, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392], "7": [342, 361, 375, 390, 393, 394, 395], "8": [342, 343, 362, 391, 396], "9": [363, 367, 376, 392], "A": [309, 311], "NOT": 91, "One": 333, "The": [304, 309, 318, 325, 331, 338], "To": 309, "With": 18, "ab": [121, 336], "about": [309, 323, 325], "abscissa": 94, "absolut": [122, 315, 336], "absorpt": 16, "acquisit": 318, "act": 319, "actionmasskinet": 95, "ad": [4, 10, 325, 328], "adapt": 19, "add": [4, 336], "addit": [84, 89, 315], "advanc": [90, 92, 318, 331], "affect": 336, "al": [19, 20, 309], "algebra": 304, "alia": 336, "align": [123, 304, 329], "all": 124, "along": 329, "also": [3, 336], "altern": [84, 304], "amax": 125, "ambigu": 309, "amin": 126, "an": [43, 311, 327], "analys": [75, 76], "analysi": [16, 18, 21, 23, 33, 74, 90, 91, 92, 304, 308, 310], "angl": 336, "ani": 127, "annot": 328, "anoth": 315, "api": [9, 74, 75, 76, 304, 314, 323, 328, 331, 338], "apod": [58, 72, 304, 330], "applic": 322, "approach": 331, "ar": 94, "arang": 128, "arcco": 336, "arccosh": 336, "archiv": 315, "arcsin": 336, "arcsinh": 336, "arctan": 336, "arctanh": 336, "argmax": 129, "argmin": 130, "aris": 323, "arithmet": 336, "around": 131, "arrai": 336, "ascend": 94, "ask": 94, "asl": 132, "aspect": 328, "assess": 309, "asymmetr": 79, "asymmetricvoigtmodel": 133, "attribut": 325, "augment": 309, "autom": 311, "automat": 18, "autosub": 134, "averag": [135, 338], "axi": 318, "backend": 85, "backward": 6, "bartlett": 136, "basc": [137, 331], "baselin": [62, 63, 72, 75, 79, 90, 96, 304, 307, 331, 333, 339], "basic": [8, 304, 309, 319, 340], "behaviour": 311, "bell": 60, "between": [38, 325], "bibliographi": 93, "binari": 336, "blackmanharri": 138, "box": 324, "break": [324, 341, 343, 368, 377, 383, 384, 385, 387, 391, 393, 395, 396], "broaden": 333, "browser": 322, "bruker": [44, 319], "bug": [341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395], "build": 9, "bullet": 324, "c": 145, "calcul": 333, "cantera": 85, "case": 309, "cbrt": 336, "ceil": 336, "chang": [5, 6, 304, 328, 340, 341, 343, 368, 377, 383, 384, 385, 387, 391, 393, 395, 396], "cheat": [322, 324], "chromatogram": 16, "cite": [0, 305], "clip": [139, 304], "co": 336, "code": [6, 7, 88, 94, 311, 331], "colab": 86, "colaboratori": 86, "color": 324, "command": 315, "commit": 6, "comparison": 335, "compat": 6, "complex": [304, 336], "compon": [304, 310], "comput": [25, 28, 32, 34, 40, 48, 52, 55, 57, 61, 64, 68, 71, 77, 80, 81, 85, 306], "concaten": 140, "concentr": 309, "conda": 84, "configur": [13, 309, 314, 328], "conj": 141, "conjug": 142, "constant": 331, "constraint": [20, 307], "constructor": 325, "content": [4, 5, 6, 8, 9, 84, 86, 87, 88, 89, 91, 94, 304, 321, 325], "continu": 6, "contribut": [5, 6, 7, 9, 83], "contributor": 1, "control": [5, 13], "convers": 336, "convert": 38, "convolut": 338, "coord": 97, "coordin": [18, 36, 37, 39, 94, 304, 325, 337], "coordmax": 143, "coordmin": 144, "coordset": 98, "copi": 325, "core": [56, 326], "correct": [63, 75, 79, 90, 304, 307, 331, 333, 339], "cosh": 336, "cosmic": [67, 332], "cp": 74, "creat": [4, 17, 19, 21, 38, 84, 89, 304, 322, 325, 328], "creation": [36, 39, 54, 304, 327], "cross": [26, 33], "cumsum": 146, "curv": 304, "curvefit": [29, 33], "data": [4, 16, 36, 39, 45, 76, 85, 86, 90, 92, 304, 315, 316, 318, 328, 330, 331, 336, 340], "datadir": 315, "dataset": [16, 17, 18, 19, 21, 22, 30, 36, 37, 38, 39, 42, 49, 50, 56, 72, 73, 75, 78, 304, 309, 310, 311, 313, 325, 328, 329, 336], "date": [318, 325], "dc": 147, "debug_": 148, "decomposit": [14, 26, 33, 304], "default": [311, 315, 328], "definit": 307, "deg2rad": 336, "denois": [65, 66, 72, 79, 149, 304, 332, 338], "depend": [6, 85, 341, 343, 393, 395, 396], "deprec": [341, 370, 374, 383, 384, 385, 387, 389, 395], "descend": 94, "design": 91, "despik": [150, 332], "detail": 316, "determin": 309, "detrend": [79, 151, 331], "develop": [5, 6, 11], "diag": 152, "diagon": 153, "differ": [304, 309], "dimens": [304, 325, 329], "dimension": 333, "dimensionless": 336, "directli": 86, "directori": 315, "discuss": 83, "displai": 311, "divid": 336, "do": 323, "docstr": 8, "document": [4, 6, 8, 9, 83], "domain": [304, 333, 339], "dot": 154, "download_nist_ir": 155, "drive": 86, "driven": 6, "dx": 317, "edit": 13, "editor": 13, "efa": [15, 16, 99, 309], "eiler": [70, 338], "element": 327, "em": 156, "emphasi": 324, "empti": 157, "empty_lik": 158, "environ": [5, 84, 87, 89], "equat": [31, 307], "error": [314, 318], "error_": 159, "estim": 309, "et": 19, "evolv": [16, 304], "exampl": [8, 10, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 36, 37, 38, 39, 82, 85, 86, 90, 140, 149, 150, 151, 154, 156, 159, 161, 180, 188, 207, 209, 216, 220, 227, 229, 236, 238, 239, 240, 248, 249, 250, 257, 260, 262, 267, 269, 270, 271, 290, 329, 331], "execut": 323, "exist": [304, 325], "exp": 336, "exp2": 336, "experiment": [43, 45, 46, 311], "explor": [86, 90], "expm1": 336, "exponenti": [59, 330], "export": [41, 56, 304, 317, 320], "extens": 85, "extern": [304, 324, 325], "ey": 160, "fab": 336, "factor": [16, 21, 304], "faq": 94, "fastica": [17, 100], "featur": [341, 343, 345, 346, 350, 351, 352, 353, 354, 355, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 389, 390, 391, 393, 395, 396], "fft": [161, 333], "figur": [50, 328], "file": [4, 42, 43, 44, 46, 47, 86, 94, 304, 315, 316, 317, 318, 319], "fill": [304, 333], "filter": [69, 72, 101, 304, 332, 338], "find": [304, 307, 311], "find_peak": [162, 311], "first": 329, "fit": [17, 19, 21, 30, 75, 76, 304, 307], "fix": [341, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 373, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395], "float": 336, "floor": 336, "floor_divid": 336, "font": 324, "format": [4, 8, 316], "fourier": [304, 333], "free": 91, "frequent": 94, "from": [19, 42, 67, 88, 94, 304, 315, 325, 327, 332], "fromfunct": 163, "fromit": 164, "fsh": 165, "fsh2": 166, "ftir": 335, "full": 167, "full_lik": 168, "function": [56, 304, 324, 325, 330, 336], "galleri": [10, 82], "gaussian": 330, "gaussianmodel": 169, "gener": [5, 16, 94, 314, 315], "general_ham": 170, "geometr": 324, "geomspac": 171, "get": [5, 17, 83, 88, 90, 94, 309, 323, 327], "get_baselin": 172, "get_loglevel": 173, "git": [86, 88], "github": 83, "given": 319, "glossari": 303, "gm": 174, "go": 323, "golai": [70, 338], "good": 315, "googl": 86, "graphic": 324, "guess": 309, "gui": 85, "guid": [8, 9, 11, 84, 87, 89, 321, 323], "guidelin": 4, "ham": 175, "handl": [314, 318], "hann": 176, "head": 324, "help": [83, 309], "histori": 325, "horizont": 324, "how": [35, 56, 94, 323, 331], "ht": 177, "hyperbol": 336, "hypercomplex": 336, "i": 337, "ident": 178, "ifft": 179, "illustr": 309, "imaginari": 330, "import": [41, 42, 56, 74, 75, 76, 79, 304, 315, 316, 317, 318, 319, 320, 325], "indent": 324, "independ": [304, 331], "index": [94, 304, 337], "influenc": 338, "info_": 180, "inform": [309, 314], "initi": 309, "inner": 329, "input": 336, "insight": 325, "inspect": 311, "instal": [13, 84, 86, 87, 88, 89, 90], "integ": 304, "integr": [6, 304, 312], "interact": 304, "interferogram": 335, "intern": 324, "interpol": [181, 304], "introduct": [51, 86, 309, 310, 313, 323, 325, 330], "invers": 304, "ir": [43, 316], "iri": [18, 22, 90, 102], "iriskernel": 103, "is_units_compat": 182, "isfinit": 336, "isinf": 336, "isnan": 336, "issu": [12, 83], "ito": 183, "ito_base_unit": 184, "ito_reduced_unit": 185, "jaumot": 19, "jcamp": 317, "join": 304, "jupyt": 322, "keep": 336, "keller": 16, "kinet": [20, 304], "l": 191, "lab": 322, "label": 325, "last": 329, "least": [79, 304, 307, 313], "librairi": 51, "licens": [1, 2], "like": [304, 325], "line": [324, 333], "linear": [31, 304, 307, 331], "lineshap": 304, "link": 324, "linspac": 186, "linux": 87, "list": [324, 336], "load": [17, 19, 20, 43, 44, 45, 46, 86, 90, 187, 304, 310, 311, 313, 319, 323, 327, 328], "load_iri": 188, "local": 42, "log": [6, 304, 336], "log10": 336, "log1p": 336, "log2": 336, "logic": 304, "logical_not": 336, "loglevel": 314, "logspac": 189, "lorentzian": 330, "lorentzianmodel": 190, "lstsq": [31, 104, 307], "mac": 87, "magnitud": [333, 336], "main": 328, "maintain": 5, "make": 5, "manag": [53, 56, 84, 304, 327], "manipul": [38, 90, 304], "manual": [18, 311], "markdown": [322, 324], "mask": [304, 340], "massart": 16, "math": 325, "mathemat": [90, 304, 324, 336], "matplotlib": 328, "matrix": [16, 304], "max": 192, "maxima": 311, "maximum": 304, "mc": 193, "mcr": [19, 20, 309], "mcral": [105, 309], "mean": 194, "measur": 76, "median": 332, "metadata": [318, 319], "method": [84, 88, 304, 307, 311, 325, 329, 331, 332, 338], "min": 195, "minim": 309, "minimum": 304, "misc": 304, "miscellan": 304, "mix": 17, "mixtur": 304, "model": [19, 21, 76, 304, 307, 331], "modul": 4, "monospac": 324, "more": [309, 311, 325], "move": 338, "multidimension": 325, "multipl": [59, 60, 330], "multipli": 336, "multiplot": 196, "multiplot_imag": 197, "multiplot_lin": 198, "multiplot_map": 199, "multiplot_scatt": 200, "multiplot_stack": 201, "multiplot_with_transpos": 202, "multivari": [304, 331], "nd": [36, 39, 325], "ndataset": 304, "nddataset": [20, 33, 35, 36, 37, 39, 56, 63, 72, 90, 106, 107, 108, 304, 307, 325, 326, 328, 331, 336, 337, 338], "neg": [304, 307, 336], "new": [18, 37, 322, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "next": [87, 89, 90, 323], "nmd": 75, "nmf": [21, 109], "nmr": [45, 72, 73, 74, 75, 76, 333, 339], "nnl": [110, 307], "non": [304, 307], "note": [324, 342], "notebook": 322, "number": [304, 309, 324, 336], "numer": 304, "numpi": [325, 336], "o": 315, "object": [17, 19, 21, 90, 304, 325, 326, 336], "offset": 304, "omnic": [43, 318, 335], "ones": 203, "ones_lik": 204, "onli": 336, "open": 91, "oper": [90, 304, 318, 325, 336], "optim": [111, 304, 309], "optimis": 307, "option": [6, 9, 85, 311, 315], "opu": [44, 319], "order": [94, 318], "origin": [16, 330], "osx": 87, "other": [2, 90, 330, 331], "output": 328, "overflow": 83, "overview": [85, 328, 331], "own": 328, "p": 225, "packag": [84, 315], "paper": 305, "paramet": [8, 307, 309, 319, 328], "part": 7, "parti": 1, "partial": [304, 313], "path": 315, "pathclean": 205, "pathlib": 315, "pathnam": 315, "pca": [22, 23, 112, 309, 310], "peak": [75, 304, 307, 311, 312], "pep8": 6, "perman": 89, "pfr": 113, "phase": 304, "pick": 75, "pipe": 206, "pk": 207, "pk_exp": 208, "pl": 27, "plot": [17, 19, 21, 36, 39, 49, 50, 51, 56, 94, 209, 304, 311, 328, 330], "plot_1d": 210, "plot_2d": 211, "plot_3d": 212, "plot_bar": 213, "plot_imag": 214, "plot_map": 215, "plot_multipl": [50, 216], "plot_pen": 217, "plot_scatt": 218, "plot_scatter_pen": 219, "plot_stack": 220, "plot_surfac": 221, "plot_waterfal": 222, "plot_with_transpos": 223, "plsregress": [114, 313], "polynomi": 331, "polynomialbaselin": 224, "power": [91, 333], "pr": 5, "practic": 315, "pre": 6, "prefer": [94, 328], "prepar": [17, 21, 328], "preprocess": 333, "prerequisit": [84, 88], "princip": [304, 310], "principl": 5, "process": [72, 73, 75, 76, 78, 79, 90, 304, 324, 334, 335], "processor": [331, 338], "profil": [17, 309], "project": [53, 54, 56, 115, 304, 326, 327], "promin": 311, "properti": 311, "pseudo": 76, "ptp": 226, "public": 304, "pure": 309, "pytest": 6, "python": [6, 84, 91], "qsin": 227, "qt": 85, "quantiti": [38, 116], "question": [94, 323], "quick": [9, 86], "quickstart": 90, "r": 255, "rad2deg": 336, "radian": 336, "rai": [67, 332], "raman": [46, 66, 67, 70, 72, 78, 79, 332], "random": 228, "rang": 304, "read": [42, 47, 229, 315, 319], "read_carroucel": 230, "read_csv": 231, "read_ddr": 232, "read_dir": 233, "read_hdr": 234, "read_jcamp": 235, "read_labspec": 236, "read_mat": 237, "read_matlab": 238, "read_omn": 239, "read_opu": 240, "read_quadera": 241, "read_sdr": 242, "read_soc": 243, "read_spa": 244, "read_spc": 245, "read_spg": 246, "read_sr": 247, "read_topspin": 248, "read_wdf": 249, "read_wir": 250, "read_zip": 251, "reader": [4, 315], "real": [330, 333], "reciproc": 336, "recommend": 84, "reconstruct": 17, "refer": 304, "regist": 4, "regress": [27, 304, 313], "regular": 18, "rel": 315, "relat": 304, "relax": 76, "releas": 342, "remot": 42, "remov": [67, 327, 332], "remove_mask": 252, "renishaw": 47, "report": 12, "repositori": 86, "requir": [87, 89, 336], "resolut": 304, "resourc": 84, "result": [19, 21], "return": 336, "revis": [341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "rint": 336, "roll": [253, 304], "rotat": 309, "round": [254, 304], "rubberband": 331, "ruff": 6, "rule": 8, "run": [6, 310, 313], "run_all_script": 256, "run_script": 257, "same": [50, 328], "sampl": 4, "save": [94, 107, 327], "save_a": 108, "savgol": [258, 338], "savitki": 70, "savitzki": 338, "scienc": 91, "scientif": 85, "script": [119, 304, 307, 323, 326], "search": [18, 315], "section": 8, "see": 3, "segment": 331, "select": [90, 304, 328], "self": 304, "seri": 79, "set": [5, 18, 37, 325], "set_complex": 259, "set_coordset": 325, "set_loglevel": 260, "set_nmr_context": 261, "setup": [5, 87, 89], "sever": [50, 325, 328, 329, 331], "shape": 324, "share": 325, "sheet": [322, 324, 328], "shift": 330, "shortcut": 89, "show": 262, "show_vers": 263, "sigmoidmodel": 264, "sign": 336, "signbit": 336, "simpl": 304, "simplisma": [24, 117], "simpson": 265, "simul": 16, "sin": 336, "sine": [60, 266, 330], "singl": 325, "singular": 304, "sinh": 336, "sinm": 267, "size": 338, "slice": [75, 337], "smooth": [70, 79, 90, 268, 304, 338], "snip": 269, "snippet": [311, 331], "solut": 309, "solv": [31, 307], "solver": 304, "sort": [270, 304], "sourc": [9, 13, 17, 88, 91, 304], "sp": 271, "spa": 318, "speci": 309, "specif": [7, 315], "specifi": 94, "spectra": [16, 74, 75, 76, 79, 318, 319, 332, 333], "spectral": [17, 90, 309], "spectrochempi": [0, 2, 5, 8, 84, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 315, 323], "spectroscop": [90, 92, 304], "spectrum": [66, 67, 70, 333], "spg": [43, 318], "spike": [67, 332], "split": 304, "sqrt": 336, "squar": [60, 79, 304, 307, 313, 336], "squeez": 272, "stack": [83, 273], "standard": 6, "start": [5, 9, 13, 86, 90, 322, 323], "statist": 304, "std": 274, "step": [4, 84, 87, 89, 90], "structur": [8, 9], "studio": 13, "style": 328, "subtract": 336, "success": 5, "suit": 6, "sum": [275, 304], "summari": 325, "support": [85, 316], "svd": 118, "swapdim": 276, "symbol": 324, "syntax": [307, 325], "system": 17, "tabl": [5, 6, 84, 86, 87, 89, 94, 304, 325], "take": 277, "tan": 336, "tanh": 336, "techniqu": 90, "test": [4, 6, 16, 85], "thi": 323, "third": 1, "time": [25, 28, 32, 34, 40, 48, 52, 55, 57, 61, 64, 68, 71, 77, 80, 81, 304, 306, 325, 333, 339], "tip": [5, 9, 89], "titl": 328, "to_arrai": 279, "to_base_unit": 280, "to_reduced_unit": 281, "to_xarrai": 282, "todo": 326, "transform": [304, 333, 340], "transpos": [283, 304], "transposit": 340, "trapezoid": 284, "trend": 331, "triang": 285, "trigonometr": 336, "troubleshoot": 85, "trunc": 336, "tutori": [9, 90, 316, 321], "type": [304, 319, 328], "ufunc": 336, "unari": 336, "understand": 90, "unidimension": 325, "unit": [38, 120, 304, 325, 336, 340], "unitless": 336, "univers": 336, "up": 5, "updat": [88, 341, 343, 393, 395, 396], "upload": [18, 37], "us": [6, 31, 35, 50, 56, 86, 140, 149, 150, 151, 154, 156, 159, 161, 180, 188, 207, 209, 216, 220, 227, 229, 236, 238, 239, 240, 248, 249, 250, 257, 260, 262, 267, 269, 270, 271, 290, 304, 307, 309, 315, 322, 325, 328, 330, 331, 338], "usag": [94, 336], "user": [321, 323], "util": 304, "valu": 304, "var": 286, "verifi": [87, 88, 89], "version": [5, 342], "visual": [13, 90], "voigtmodel": 287, "warning_": 288, "web": 322, "what": [323, 337, 341, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396], "where": [94, 323], "whittak": [70, 289, 338], "why": 91, "width": 311, "window": [59, 60, 89, 328, 330, 338], "wire": 47, "without": 18, "work": [86, 90, 331, 336], "write": [6, 9, 290, 323], "write_csv": 291, "write_excel": 292, "write_jcamp": 293, "write_mat": 294, "write_matlab": 295, "write_xl": 296, "y": 318, "your": [5, 10, 328], "zero": [297, 304, 333], "zeros_lik": 298, "zf": 299, "zf_auto": 300, "zf_doubl": 301, "zf_size": 302, "zip": 315}})