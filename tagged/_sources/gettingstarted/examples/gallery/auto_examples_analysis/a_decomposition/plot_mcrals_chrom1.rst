
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_mcrals_chrom1.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_mcrals_chrom1.py:


MCR-ALS example (adapted from Jaumot et al. 2005)
=================================================

In this example, we perform the MCR ALS optimization of a dataset
corresponding to a HPLC-DAD run, from :cite:t:`jaumot:2005` and :cite:t:`jaumot:2015`.

This dataset (and others) can be downloaded from the
`Multivariate Curve Resolution Homepage
<https://mcrals.wordpress.com/download/example-data-sets>`_.

For the user convenience, this dataset is present in the test data directory
`scp.preferences.datadir` of SpectroChemPy as ``als2004dataset.MAT``.

.. GENERATED FROM PYTHON SOURCE LINES 24-25

Import the spectrochempy API package

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: Python

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 28-34

Loading the example dataset
---------------------------

The file type (matlab) is inferred from the extension ``.mat``, so we
can use the generic API function `read`.  Alternatively, one can be more
specific by using the `read_matlab` function. Both have exactly the same behavior.

.. GENERATED FROM PYTHON SOURCE LINES 34-36

.. code-block:: Python

    datasets = scp.read("matlabdata/als2004dataset.MAT")








.. GENERATED FROM PYTHON SOURCE LINES 37-38

As the ``.mat`` file contains 6 matrices, 6 `NDDataset` objects are returned.

.. GENERATED FROM PYTHON SOURCE LINES 38-42

.. code-block:: Python

    print("NDDataset names:")
    for ds in datasets:
        print(f"{ds.name} : {ds.shape}")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    NDDataset names:
    cpure : (204, 4)
    MATRIX : (204, 96)
    isp_matrix : (4, 4)
    spure : (4, 96)
    csel_matrix : (51, 4)
    m1 : (51, 96)




.. GENERATED FROM PYTHON SOURCE LINES 43-56

We are interested in the last dataset (``"m1"``) that contains a single HPLS-DAD run
``(51x96)``  dataset.

As usual, the 51 rows correspond to the ``time axis`` of the HPLC run, and the 96
columns to the ``wavelength`` axis of the UV spectra. The original dataset does not
contain information as to the actual time and wavelength coordinates.

MCR-ALS needs also an initial guess for either concentration profiles or pure spectra
concentration profiles.
The 4th dataset in the example (``"spure"``) contains (4x96) guess of spectral
profiles.

The experimental data as :math:`X` (``X``) and the ``guess`` are thus:

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: Python

    X = datasets[-1]
    guess = datasets[3]








.. GENERATED FROM PYTHON SOURCE LINES 60-61

Plot of X and of the guess:

.. GENERATED FROM PYTHON SOURCE LINES 61-64

.. code-block:: Python

    _ = X.plot()
    _ = guess.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_001.png
         :alt: plot mcrals chrom1
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_002.png
         :alt: plot mcrals chrom1
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_002.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 65-72

Create a MCR-ALS object
-----------------------

We first create a MCR-ALS object named here ``mcr``.

The `log_level` option can be set to ``"INFO"`` to get verbose ouput of
the MCR-ALS optimization steps.

.. GENERATED FROM PYTHON SOURCE LINES 72-74

.. code-block:: Python

    mcr = scp.MCRALS(log_level="INFO")








.. GENERATED FROM PYTHON SOURCE LINES 75-80

Fit the MCR-ALS model
-----------------------

Then we execute the optimization process using the `fit` method with
the ``X`` and ``guess`` dataset as input arguments.

.. GENERATED FROM PYTHON SOURCE LINES 80-82

.. code-block:: Python

    _ = mcr.fit(X, guess)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

     Spectra profile initialized with 4 components
     Initial concentration profile computed
     ***           ALS optimisation log            ***
     #iter     RSE / PCA        RSE / Exp      %change
     -------------------------------------------------
       1        0.000442        0.002807      -97.747926
       2        0.000433        0.002805       -0.048763
     converged !




.. GENERATED FROM PYTHON SOURCE LINES 83-88

Plotting the results
--------------------

The optimization has converged. We can get the concentration :math:`C` (C) and
pure spectra profiles :math:`S^T` (St) and plot them

.. GENERATED FROM PYTHON SOURCE LINES 88-92

.. code-block:: Python


    _ = mcr.C.T.plot()
    _ = mcr.St.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_003.png
         :alt: plot mcrals chrom1
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_004.png
         :alt: plot mcrals chrom1
         :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_004.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 93-98

Finally, plots the reconstructed dataset (:math:`\hat{X} = C.S^T`)
*vs.* original dataset
(:math:`X`) as well as the residuals (:math:`E`) for few spectra.

The fit is good and comparable to the original paper (:cite:t:`jaumot:2005`).

.. GENERATED FROM PYTHON SOURCE LINES 98-100

.. code-block:: Python

    _ = mcr.plotmerit(nb_traces=5)




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_005.png
   :alt: MCRALS plot of merit
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_mcrals_chrom1_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 101-103

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 103-105

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.553 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_mcrals_chrom1.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_mcrals_chrom1.ipynb <plot_mcrals_chrom1.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_mcrals_chrom1.py <plot_mcrals_chrom1.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_mcrals_chrom1.zip <plot_mcrals_chrom1.zip>`
