
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_b_coordinates.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_b_coordinates.py:


NDDataset coordinates example
=============================

In this example, we show how coordinates can be used in SpectroChemPy

.. GENERATED FROM PYTHON SOURCE LINES 16-18

.. code-block:: Python

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 19-21

Uploading a dataset
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 21-23

.. code-block:: Python

    X = scp.read("irdata/CO@Mo_Al2O3.SPG")








.. GENERATED FROM PYTHON SOURCE LINES 24-27

`X` has two coordinates:
* `wavenumbers` named "x"
* and `timestamps` (*i.e.,* the time of recording) named "y".

.. GENERATED FROM PYTHON SOURCE LINES 27-29

.. code-block:: Python

    print(X.coordset)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    CoordSet: [x:wavenumbers, y:acquisition timestamp (GMT)]




.. GENERATED FROM PYTHON SOURCE LINES 30-32

To display them individually use the `x` and `y` attributes of
the dataset `X`:

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: Python


    X.x






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='background:transparent'>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>         size</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> 3112</td><tr>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>        title</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> wavenumbers</td><tr>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>  coordinates</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> <div><font color='blue'>[    4000     3999 ...     1001    999.9] cm⁻¹</font></div></td><tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 37-40

.. code-block:: Python


    X.y






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='background:transparent'>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>         size</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> 19</td><tr>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>        title</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> acquisition timestamp (GMT)</td><tr>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>  coordinates</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> <div><font color='blue'>[1.477e+09 1.477e+09 ... 1.477e+09 1.477e+09] s</font></div></td><tr>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>       labels</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> <div><font color='darkcyan'>         [[  2016-10-18 13:49:35+00:00   2016-10-18 13:54:06+00:00 ...   2016-10-18 16:01:33+00:00   2016-10-18 16:06:37+00:00]<br/>          [  *Résultat de Soustraction:04_Mo_Al2O3_calc_0.003torr_LT_after sulf_Oct 18 15:46:42 2016 (GMT+02:00)<br/>             *Résultat de Soustraction:04_Mo_Al2O3_calc_0.004torr_LT_after sulf_Oct 18 15:51:12 2016 (GMT+02:00) ...<br/>             *Résultat de Soustraction:04_Mo_Al2O3_calc_0.905torr_LT_after sulf_Oct 18 17:58:42 2016 (GMT+02:00)<br/>             *Résultat de Soustraction:04_Mo_Al2O3_calc_1.004torr_LT_after sulf_Oct 18 18:03:41 2016 (GMT+02:00)]]</font></div></td><tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 41-49

Setting new coordinates
-----------------------

In this example, each experiment have a timestamp corresponds to the time
when a given pressure of CO in the infrared cell was set.

Hence, it would be interesting to replace the "useless" timestamps (`y` )
by a pressure coordinates:

.. GENERATED FROM PYTHON SOURCE LINES 49-72

.. code-block:: Python


    pressures = [
        0.00300,
        0.00400,
        0.00900,
        0.01400,
        0.02100,
        0.02600,
        0.03600,
        0.05100,
        0.09300,
        0.15000,
        0.20300,
        0.30000,
        0.40400,
        0.50300,
        0.60200,
        0.70200,
        0.80100,
        0.90500,
        1.00400,
    ]








.. GENERATED FROM PYTHON SOURCE LINES 73-75

1. A first way to do this is to replace the time coordinates by the pressure
   coordinate

.. GENERATED FROM PYTHON SOURCE LINES 77-79

*(we first make a copy of the time coordinates for later use the original will
be destroyed by the following operation)*

.. GENERATED FROM PYTHON SOURCE LINES 79-82

.. code-block:: Python


    c_times = X.y.copy()








.. GENERATED FROM PYTHON SOURCE LINES 83-84

Now we perform the replacement with this new coordinate:

.. GENERATED FROM PYTHON SOURCE LINES 84-89

.. code-block:: Python


    c_pressures = scp.Coord(pressures, title="pressure", units="torr")
    X.y = c_pressures
    print(X.y)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coord: [float64] torr (size: 19)




.. GENERATED FROM PYTHON SOURCE LINES 90-92

2. A second way is to affect several coordinates to the corresponding dimension.
   To do this, the simplest is to affect a list of coordinates instead of a single one:

.. GENERATED FROM PYTHON SOURCE LINES 92-96

.. code-block:: Python


    X.y = [c_times, c_pressures]
    print(X.y)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    CoordSet: [_1:acquisition timestamp (GMT), _2:pressure]




.. GENERATED FROM PYTHON SOURCE LINES 97-99

By default, the current coordinate is the first one (here `c_times` ).
For example, it will be used for plotting:

.. GENERATED FROM PYTHON SOURCE LINES 99-105

.. code-block:: Python


    prefs = X.preferences
    prefs.figure.figsize = (7, 3)
    _ = X.plot(colorbar=True)
    _ = X.plot_map(colorbar=True)




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_001.png
         :alt: plot b coordinates
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_002.png
         :alt: plot b coordinates
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_002.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 106-108

To seamlessly work with the second coordinates (pressures),
we can change the default coordinate:

.. GENERATED FROM PYTHON SOURCE LINES 108-112

.. code-block:: Python


    X.y.select(2)  # to select coordinate `_2`
    X.y.default






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <table style='background:transparent'>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>         size</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> 19</td><tr>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>        title</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> pressure</td><tr>
    <tr><td style='padding-right:5px; padding-bottom:0px; padding-top:0px; width:124px'><font color='green'>  coordinates</font> </td><td style='text-align:left; padding-bottom:0px; padding-top:0px; border:.5px solid lightgray;  '> <div><font color='blue'>[   0.003    0.004 ...    0.905    1.004] torr</font></div></td><tr>
    </table>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 113-114

Let's now plot the spectral range of interest. The default coordinate is now used:

.. GENERATED FROM PYTHON SOURCE LINES 114-119

.. code-block:: Python

    X_ = X[:, 2250.0:1950.0]
    print(X_.y.default)
    _ = X_.plot()
    _ = X_.plot_map()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_003.png
         :alt: plot b coordinates
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_004.png
         :alt: plot b coordinates
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coord: [float64] torr (size: 19)




.. GENERATED FROM PYTHON SOURCE LINES 120-123

The same can be done for the x coordinates.

Let's take for instance row with index 10 of the previous dataset

.. GENERATED FROM PYTHON SOURCE LINES 123-128

.. code-block:: Python


    row10 = X_[10].squeeze()
    row10.plot()
    print(row10.coordset)




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_005.png
   :alt: plot b coordinates
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    CoordSet: [x:wavenumbers]




.. GENERATED FROM PYTHON SOURCE LINES 129-130

Now we wants to add a coordinate with the wavelength instead of wavenumber.

.. GENERATED FROM PYTHON SOURCE LINES 130-138

.. code-block:: Python


    c_wavenumber = row10.x.copy()
    c_wavelength = row10.x.to("nanometer")
    print(c_wavenumber, c_wavelength)
    row10.x = [c_wavenumber, c_wavelength]
    row10.x.select(2)
    _ = row10.plot()




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_006.png
   :alt: plot b coordinates
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_b_coordinates_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coord: [float64] cm⁻¹ (size: 312) Coord: [float64] nm (size: 312)




.. GENERATED FROM PYTHON SOURCE LINES 139-141

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 141-143

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.029 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_b_coordinates.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_b_coordinates.ipynb <plot_b_coordinates.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_b_coordinates.py <plot_b_coordinates.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_b_coordinates.zip <plot_b_coordinates.zip>`
