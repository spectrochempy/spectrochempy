
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_c_units.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_c_units.py:


Units manipulation examples
===========================

In this example, we show how units can be used in SpectroChemPy

.. GENERATED FROM PYTHON SOURCE LINES 16-21

.. code-block:: Python


    import pint

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 22-24

Spectrochempy can do calculations with units - it uses [pint](https://pint.readthedocs.io) to define and perform
operation on data with units.

.. GENERATED FROM PYTHON SOURCE LINES 26-29

Create quantities
-----------------
To create quantity, use for instance, one of the following expression:

.. GENERATED FROM PYTHON SOURCE LINES 29-35

.. code-block:: Python


    scp.Quantity("10.0 cm^-1")

    ""
    scp.Quantity(1.0, "cm^-1/hour")






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    1.0 cm<sup>-1</sup>⋅h<sup>-1</sup>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 36-37

or may be simpler using `ur`:

.. GENERATED FROM PYTHON SOURCE LINES 37-41

.. code-block:: Python


    ur = scp.ur
    10.0 * ur.meter / ur.gram / ur.volt






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    10.0 m⋅g<sup>-1</sup>⋅V<sup>-1</sup>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 42-43

`ur` stands for **unit registry**, which handle many type of units (and conversion between them)

.. GENERATED FROM PYTHON SOURCE LINES 45-49

Units for dataset
-----------------

When loading experimental dataset using the `read` method, units are generally attributed to coordinates and data

.. GENERATED FROM PYTHON SOURCE LINES 49-55

.. code-block:: Python


    ds = scp.read("wodger.spg")[0]
    prefs = ds.preferences
    prefs.figure.figsize = (7, 3)
    _ = ds.plot()




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_001.png
   :alt: plot c units
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 56-58

* `wavenumbers` (`x` ) coordinates are here expressed in $cm^{-1}$
* and `data` are in absorbance ($a.u.$) units.

.. GENERATED FROM PYTHON SOURCE LINES 60-64

Convert between units
----------------------

Here are some examples

.. GENERATED FROM PYTHON SOURCE LINES 64-68

.. code-block:: Python


    x = 36 * ur("km/hr")
    x.to("cm/s")






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    1000.0 cm⋅s<sup>-1</sup>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 69-70

We can make the conversion *inplace* using *ito* instead of *to*

.. GENERATED FROM PYTHON SOURCE LINES 70-74

.. code-block:: Python


    x.ito("m/s")
    x






.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    10.0 m⋅s<sup>-1</sup>
    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 75-76

Obviously you cannot convert between incompatible units

.. GENERATED FROM PYTHON SOURCE LINES 76-83

.. code-block:: Python


    try:
        x.to("hour")
    except pint.DimensionalityError as e:
        print(e)
        # scp.error_(pint.DimensionalityError, e)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Cannot convert from 'meter / second' ([length] / [time]) to 'hour' ([time])




.. GENERATED FROM PYTHON SOURCE LINES 84-86

This, of course, also applies to NDDataset.
Let's try for the `x` coordinate. It is `wavenumber` in $cm^{-1}$ that can be transformed in $Hz$ for instance:

.. GENERATED FROM PYTHON SOURCE LINES 86-90

.. code-block:: Python


    ds.x.ito("terahertz")
    _ = ds.plot()




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_002.png
   :alt: plot c units
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 91-93

We can also change the wavenumbers (or frequency units), to energy units or wavelength as
Spectrochempy (thanks to [pint](https://pint.readthedocs.io)) knows how to make the transformation.

.. GENERATED FROM PYTHON SOURCE LINES 93-108

.. code-block:: Python


    ds.x.ito("eV")
    _ = ds.plot()

    ""
    try:
        ds.x.ito("nanometer")
    except Exception as e:
        scp.error_(Exception, e)

    ""
    ds.x = ds.x.to("nanometer")
    print(ds.x)
    _ = ds.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_003.png
         :alt: plot c units
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_004.png
         :alt: plot c units
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_004.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coord: [float64] nm (size: 5549)




.. GENERATED FROM PYTHON SOURCE LINES 109-110

`absorbance` units (the units of the data) can also be transformed into `transmittance`

.. GENERATED FROM PYTHON SOURCE LINES 110-119

.. code-block:: Python


    ds.ito("transmittance")
    _ = ds.plot()

    ""
    ds.ito("absorbance")
    ds.x.ito("cm^-1")
    _ = ds.plot()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_005.png
         :alt: plot c units
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_005.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_006.png
         :alt: plot c units
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_c_units_006.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 120-122

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 122-124

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.634 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_c_units.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_c_units.ipynb <plot_c_units.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_c_units.py <plot_c_units.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_c_units.zip <plot_c_units.zip>`
