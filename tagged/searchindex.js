Search.setIndex({"alltitles": {"1) simulated chromatogram": [[18, "simulated-chromatogram"]], "1. Add a test and sample files": [[5, "add-a-test-and-sample-files"]], "1D-Dataset (unidimensional dataset)": [[334, "1D-Dataset-(unidimensional-dataset)"]], "2) absorption spectra": [[18, "absorption-spectra"]], "2. Complete FILETYPES and ALIAS": [[5, "complete-filetypes-and-alias"]], "2021": [[318, "id18"]], "2022": [[318, "id15"]], "2023": [[318, "id10"]], "2024": [[318, "id4"]], "2025": [[318, "id1"]], "2D-IRIS analysis example": [[20, null]], "3) simulated data matrix": [[18, "simulated-data-matrix"]], "3. Create the reader_xxx.py file": [[5, "create-the-reader-xxx-py-file"]], "3. General Guidelines for data and metadata format": [[5, "general-guidelines-for-data-and-metadata-format"]], "4) evolving factor analysis (EFA)": [[18, "evolving-factor-analysis-efa"]], "4. Polish your code and make the Pull Requests": [[5, "polish-your-code-and-make-the-pull-requests"]], "A basic illustration of the rotational ambiguity": [[322, "A-basic-illustration-of-the-rotational-ambiguity"]], "A code snippet to display properties": [[324, "A-code-snippet-to-display-properties"]], "A good practice: use relative paths": [[328, "A-good-practice:-use-relative-paths"]], "ALS Optimization": [[322, "ALS-Optimization"]], "API Configuration": [[327, null]], "About docstrings and standards": [[9, "about-docstrings-and-standards"]], "About the dates and times": [[334, "About-the-dates-and-times"]], "About the history attribute": [[334, "About-the-history-attribute"]], "About the spectrochempy documentation": [[10, "about-the-spectrochempy-documentation"]], "About this user\u2019s guide": [[332, "About-this-user's-guide"]], "Acknowledgments": [[1, null]], "Acquisition dates and y axis": [[329, "Acquisition-dates-and-y-axis"]], "Adding a Reader": [[5, null]], "Adding several coordinates to a single dimension": [[334, "Adding-several-coordinates-to-a-single-dimension"]], "Adding titles and annotations": [[337, "Adding-titles-and-annotations"]], "Adding your examples to the gallery": [[12, null]], "Additional steps on windows": [[87, "additional-steps-on-windows"]], "Algebra": [[317, "algebra"]], "Alignment along several dimensions": [[338, "Alignment-along-several-dimensions"]], "Alignment of datasets": [[338, null]], "Alignment, interpolation": [[317, "alignment-interpolation"]], "Analysing the 2D NMD dataset": [[76, "analysing-the-2d-nmd-dataset"]], "Analysing the data": [[77, "analysing-the-data"]], "Analysis": [[91, "Analysis"], [317, "analysis"], [321, null]], "Analysis CP NMR spectra": [[75, null]], "Analysis NDDataset": [[35, null]], "Angle units conversion": [[345, "Angle-units-conversion"]], "Another default search directory: datadir": [[328, "Another-default-search-directory:-datadir"]], "Apodization": [[59, null], [73, "apodization"], [317, "apodization"], [339, null]], "Apodization using sine window multiplication": [[339, "Apodization-using-sine-window-multiplication"]], "Arithmetic": [[345, "Arithmetic"]], "Asymmetric Least Squares smoothing": [[80, "asymmetric-least-squares-smoothing"]], "Augmented datasets": [[322, "Augmented-datasets"]], "Automatic search": [[20, "automatic-search"]], "Automatically fix formatting errors": [[6, "automatically-fix-formatting-errors"]], "Backwards compatibility": [[7, "backwards-compatibility"]], "Baseline": [[63, null], [73, "baseline"]], "Baseline correction": [[80, "baseline-correction"], [91, "Baseline-correction"], [317, "baseline-correction"], [320, "Baseline-correction"]], "Baseline correction 2D spectra (series of spectra)": [[80, "baseline-correction-2d-spectra-series-of-spectra"]], "Baseline correction using NDDataset or API methods": [[340, "Baseline-correction-using-NDDataset-or-API-methods"]], "Baseline corrections": [[340, null]], "Basic creation methods": [[317, "basic-creation-methods"]], "Basic transformations": [[349, null]], "Be prepared to work on the code": [[6, "be-prepared-to-work-on-the-code"]], "Bibliography": [[94, null]], "Binary Ufuncs": [[345, "Binary-Ufuncs"]], "Binary functions": [[345, "Binary-functions"]], "Breaking changes": [[350, "breaking-changes"], [352, "breaking-changes"], [377, "breaking-changes"], [386, "breaking-changes"], [392, "breaking-changes"], [393, "breaking-changes"], [394, "breaking-changes"], [396, "breaking-changes"], [400, "breaking-changes"]], "Bug fixes": [[350, "bug-fixes"], [352, "bug-fixes"], [354, "bug-fixes"], [355, "bug-fixes"], [356, "bug-fixes"], [357, "bug-fixes"], [358, "bug-fixes"], [359, "bug-fixes"], [360, "bug-fixes"], [361, "bug-fixes"], [362, "bug-fixes"], [363, "bug-fixes"], [364, "bug-fixes"], [365, "bug-fixes"], [366, "bug-fixes"], [367, "bug-fixes"], [368, "bug-fixes"], [369, "bug-fixes"], [370, "bug-fixes"], [371, "bug-fixes"], [372, "bug-fixes"], [373, "bug-fixes"], [375, "bug-fixes"], [376, "bug-fixes"], [377, "bug-fixes"], [378, "bug-fixes"], [379, "bug-fixes"], [382, "bug-fixes"], [383, "bug-fixes"], [384, "bug-fixes"], [385, "bug-fixes"], [387, "bug-fixes"], [388, "bug-fixes"], [389, "bug-fixes"], [390, "bug-fixes"], [391, "bug-fixes"], [393, "bug-fixes"], [394, "bug-fixes"], [396, "bug-fixes"], [397, "bug-fixes"], [398, "bug-fixes"], [399, "bug-fixes"], [400, "bug-fixes"], [401, "bug-fixes"]], "Building Docker images": [[11, null]], "Building master branch documentation": [[10, "building-master-branch-documentation"]], "Building the documentation": [[10, "building-the-documentation"]], "Building the environment image locally": [[11, "building-the-environment-image-locally"]], "Bullets": [[333, "Bullets"]], "Cantera": [[85, "cantera"]], "Case of initial spectral profiles": [[322, "Case-of-initial-spectral-profiles"]], "Change the NDDataset.preferences": [[337, "Change-the-NDDataset.preferences"]], "Changing number of dimensions": [[317, "changing-number-of-dimensions"]], "Changing the aspect of the plot": [[337, "Changing-the-aspect-of-the-plot"]], "Changing the plot style using matplotlib style sheets": [[337, "Changing-the-plot-style-using-matplotlib-style-sheets"]], "Changing the type of plot": [[337, "Changing-the-type-of-plot"]], "Changing type": [[317, "changing-type"]], "Changing units": [[349, "Changing-units"]], "Check the Installation": [[88, "check-the-installation"], [90, "check-the-installation"]], "Citing  SpectroChemPy": [[0, null]], "Clipping and rounding": [[317, "clipping-and-rounding"]], "Cloning the repository locally": [[89, "cloning-the-repository-locally"]], "Code snippet for \u2018advanced\u2019 baseline correction": [[340, "Code-snippet-for-'advanced'-baseline-correction"]], "Code standards": [[7, "code-standards"]], "Code usage": [[95, "code-usage"]], "Colored note boxes": [[333, "Colored-note-boxes"]], "Commit your code": [[6, "commit-your-code"]], "Comparison with the OMNIC processing.": [[344, "Comparison-with-the-OMNIC-processing."]], "Complex": [[317, "complex"]], "Complex or hypercomplex NDDatasets": [[345, "Complex-or-hypercomplex-NDDatasets"]], "Computation times": [[27, null], [30, null], [34, null], [36, null], [41, null], [49, null], [53, null], [56, null], [58, null], [62, null], [65, null], [69, null], [72, null], [78, null], [81, null], [82, null], [319, null]], "Configuration": [[15, "configuration"]], "Constant trend": [[340, "Constant-trend"]], "Contribute": [[93, "contribute"]], "Contributing to SpectroChemPy": [[6, null]], "Contributing to specific parts of the code": [[8, null]], "Contributing to the code": [[7, null]], "Contributing to the documentation": [[10, null]], "Contributing your changes to SpectroChemPy": [[6, "contributing-your-changes-to-spectrochempy"]], "Controlling the environments": [[6, "controlling-the-environments"]], "Conventions for the examples": [[9, "conventions-for-the-examples"]], "Convert between units": [[40, "convert-between-units"]], "Convolution with window filters": [[347, "Convolution-with-window-filters"]], "Convolution with windows": [[347, "Convolution-with-windows"]], "Coordinates": [[38, "coordinates"], [334, "Coordinates"]], "Coordinates-related objects": [[317, "coordinates-related-objects"]], "Copying existing NDDataset": [[334, "Copying-existing-NDDataset"]], "Core functionalities": [[57, null]], "Core objects": [[335, null]], "Create a MCR-ALS object": [[21, "create-a-mcr-als-object"]], "Create a NMF object": [[23, "create-a-nmf-object"]], "Create a conda environment": [[89, "create-a-conda-environment"]], "Create a dataset from a function": [[334, "Create-a-dataset-from-a-function"]], "Create a new Jupyter notebook": [[331, "Create-a-new-Jupyter-notebook"]], "Create and fit a FastICA object": [[19, "create-and-fit-a-fastica-object"]], "Create quantities": [[40, "create-quantities"]], "Create your own style": [[337, "Create-your-own-style"]], "Creating NDDataset": [[317, "creating-nddataset"]], "Creating a Python development environment": [[6, "creating-a-python-development-environment"]], "Creating a branch": [[6, "creating-a-branch"]], "Creating and executing a Docker container": [[11, "creating-and-executing-a-docker-container"]], "Creation": [[38, "creation"]], "Creation from existing data": [[317, "creation-from-existing-data"]], "Creation from numerical ranges": [[317, "creation-from-numerical-ranges"]], "Credits": [[93, "credits"]], "Cross-decomposition": [[28, null], [35, "cross-decomposition"]], "Curvefitting": [[31, null], [35, "curvefitting"]], "Data": [[38, "data"]], "Decomposition": [[16, null], [35, "decomposition"]], "Default behaviour": [[324, "Default-behaviour"]], "Default plotting": [[337, "Default-plotting"]], "Delete your merged branch (optional)": [[6, "delete-your-merged-branch-optional"]], "Denoising": [[66, null], [73, "denoising"], [80, "denoising"], [341, null]], "Denoising 2D spectra": [[341, "Denoising-2D-spectra"]], "Denoising a 2D Raman spectrum": [[67, null]], "Dependency updates": [[350, "dependency-updates"], [352, "dependency-updates"]], "Deprecations": [[350, "deprecations"], [352, "deprecations"], [379, "deprecations"], [383, "deprecations"], [392, "deprecations"], [393, "deprecations"], [394, "deprecations"], [396, "deprecations"], [398, "deprecations"]], "Designed for Open Science": [[92, "designed-for-open-science"]], "Determination of initial concentrations using EFA": [[322, "Determination-of-initial-concentrations-using-EFA"]], "Detrend independently on several data segment": [[340, "Detrend-independently-on-several-data-segment"]], "Detrending": [[80, "detrending"], [340, "Detrending"]], "Developer\u2019s Guide": [[13, null]], "Dialog boxes": [[328, "Dialog-boxes"]], "Display dataset information": [[91, "Display-dataset-information"]], "Do not use pytest.xfail": [[4, "do-not-use-pytest-xfail"]], "Docker Installation": [[11, "docker-installation"]], "Documentation:": [[10, "documentation"]], "Documenting change log": [[7, "documenting-change-log"]], "EFA (Keller and Massart original example)": [[18, null]], "EFA example": [[17, null]], "Editors": [[15, null]], "Emphasis": [[333, "Emphasis"]], "Error handling": [[327, "Error-handling"]], "Evolving factor analysis": [[317, "evolving-factor-analysis"]], "Example": [[338, "Example"], [340, "Example"]], "Examples": [[83, null]], "Examples and test data": [[85, "examples-and-test-data"]], "Examples using spectrochempy.concatenate": [[148, "examples-using-spectrochempy-concatenate"]], "Examples using spectrochempy.denoise": [[158, "examples-using-spectrochempy-denoise"]], "Examples using spectrochempy.despike": [[159, "examples-using-spectrochempy-despike"]], "Examples using spectrochempy.detrend": [[160, "examples-using-spectrochempy-detrend"]], "Examples using spectrochempy.dot": [[163, "examples-using-spectrochempy-dot"]], "Examples using spectrochempy.em": [[165, "examples-using-spectrochempy-em"]], "Examples using spectrochempy.error_": [[168, "examples-using-spectrochempy-error"]], "Examples using spectrochempy.fft": [[170, "examples-using-spectrochempy-fft"]], "Examples using spectrochempy.info_": [[190, "examples-using-spectrochempy-info"]], "Examples using spectrochempy.load_iris": [[198, "examples-using-spectrochempy-load-iris"]], "Examples using spectrochempy.pk": [[217, "examples-using-spectrochempy-pk"]], "Examples using spectrochempy.plot": [[219, "examples-using-spectrochempy-plot"]], "Examples using spectrochempy.plot_multiple": [[226, "examples-using-spectrochempy-plot-multiple"]], "Examples using spectrochempy.plot_stack": [[230, "examples-using-spectrochempy-plot-stack"]], "Examples using spectrochempy.qsin": [[237, "examples-using-spectrochempy-qsin"]], "Examples using spectrochempy.read": [[239, "examples-using-spectrochempy-read"]], "Examples using spectrochempy.read_labspec": [[246, "examples-using-spectrochempy-read-labspec"]], "Examples using spectrochempy.read_matlab": [[248, "examples-using-spectrochempy-read-matlab"]], "Examples using spectrochempy.read_omnic": [[249, "examples-using-spectrochempy-read-omnic"]], "Examples using spectrochempy.read_opus": [[250, "examples-using-spectrochempy-read-opus"]], "Examples using spectrochempy.read_topspin": [[258, "examples-using-spectrochempy-read-topspin"]], "Examples using spectrochempy.read_wdf": [[259, "examples-using-spectrochempy-read-wdf"]], "Examples using spectrochempy.read_wire": [[260, "examples-using-spectrochempy-read-wire"]], "Examples using spectrochempy.run_script": [[268, "examples-using-spectrochempy-run-script"]], "Examples using spectrochempy.set_loglevel": [[272, "examples-using-spectrochempy-set-loglevel"]], "Examples using spectrochempy.sinm": [[280, "examples-using-spectrochempy-sinm"]], "Examples using spectrochempy.snip": [[282, "examples-using-spectrochempy-snip"]], "Examples using spectrochempy.sp": [[284, "examples-using-spectrochempy-sp"]], "Example\u2019s gallery": [[83, null]], "Executing a SpectroChemPy Docker container": [[87, "executing-a-spectrochempy-docker-container"]], "Exponential multiplication": [[339, "Exponential-multiplication"]], "Exponential window multiplication": [[60, null]], "Export a NDDataset": [[317, "export-a-nddataset"]], "External links": [[333, "External-links"]], "FFT of 1D NMR spectra": [[342, "FFT-of-1D-NMR-spectra"]], "FTIR interferogram processing": [[344, null]], "Failing tests": [[4, "failing-tests"]], "FastICA example": [[19, null]], "File": [[317, "file"]], "Filtering using API or NDDataset methods.": [[347, "Filtering-using-API-or-NDDataset-methods."]], "Filtering, Smoothing and Denoising": [[347, null]], "Find maxima by manual inspection of the plot": [[324, "Find-maxima-by-manual-inspection-of-the-plot"]], "Find maxima with an automated method: find_peaks()": [[324, "Find-maxima-with-an-automated-method:-find_peaks()"]], "Find peaks": [[317, "find-peaks"]], "Fit a model": [[77, "fit-a-model"]], "Fit the MCR-ALS model": [[21, "fit-the-mcr-als-model"]], "Fit the model": [[23, "fit-the-model"]], "Fitting": [[320, null]], "Fitting 1D dataset": [[32, null]], "Fitting script": [[320, "Fitting-script"]], "Forking the spectrochempy repository": [[6, "forking-the-spectrochempy-repository"]], "Fourier transform": [[317, "fourier-transform"]], "Frequently asked questions (FAQ)": [[95, null]], "Functions affecting magnitudes of the number but also units": [[345, "Functions-affecting-magnitudes-of-the-number-but-also-units"], [345, "id2"]], "Functions affecting magnitudes of the number but keeping units": [[345, "Functions-affecting-magnitudes-of-the-number-but-keeping-units"], [345, "id1"]], "Functions that require no units or dimensionless units for inputs. Returns dimensionless objects.": [[345, "Functions-that-require-no-units-or-dimensionless-units-for-inputs.-Returns-dimensionless-objects."], [345, "id3"]], "Functions that return numpy arrays (Work only for NDDataset)": [[345, "Functions-that-return-numpy-arrays-(Work-only-for-NDDataset)"], [345, "id4"]], "Gaussian-Lorentzian apodization": [[339, "Gaussian-Lorentzian-apodization"]], "General": [[95, "general"]], "General Principles": [[6, "general-principles"]], "General information": [[327, "General-information"]], "General rules": [[9, "general-rules"]], "Generate a test dataset": [[18, "generate-a-test-dataset"]], "Geometric shapes": [[333, "Geometric-shapes"]], "Get project\u2019s elements": [[336, "Get-project's-elements"]], "Get the mixing system and source spectral profiles": [[19, "get-the-mixing-system-and-source-spectral-profiles"]], "Getting Started": [[93, "getting-started"]], "Glossary": [[316, null]], "Good practice: use os or pathlib modules": [[328, "Good-practice:-use-os-or-pathlib-modules"]], "Graphics": [[333, "Graphics"]], "Guessing the concentration profile with PCA + EFA": [[322, "Guessing-the-concentration-profile-with-PCA-+-EFA"]], "Headings": [[333, "Headings"]], "Horizontal lines": [[333, "Horizontal-lines"]], "How it works?": [[340, "How-it-works?"]], "How to build the spectrochempy documentation": [[10, "how-to-build-the-spectrochempy-documentation"]], "How to get started": [[332, "How-to-get-started"]], "How to get the index from a coordinate?": [[95, "how-to-get-the-index-from-a-coordinate"]], "How to specify a plot with abscissa in ascending or descending order?": [[95, "how-to-specify-a-plot-with-abscissa-in-ascending-or-descending-order"]], "How to use NDDataset": [[37, null], [57, "how-to-use-nddataset"]], "Hyperbolic functions": [[345, "Hyperbolic-functions"], [345, "id5"]], "IRIS analysis without regularization": [[20, "iris-analysis-without-regularization"]], "IRIS processing": [[91, "IRIS-processing"]], "Import & Export": [[330, null]], "Import / Export": [[42, null], [57, "import-export"]], "Import API": [[75, "import-api"], [76, "import-api"], [77, "import-api"]], "Import Data": [[328, null]], "Import IR Data": [[329, null]], "Import NMR spectra": [[75, "import-nmr-spectra"]], "Import a NDataset from external source": [[317, "import-a-ndataset-from-external-source"]], "Import dataset from local files": [[43, "import-dataset-from-local-files"]], "Import dataset from remote files": [[43, "import-dataset-from-remote-files"]], "Import of Bruker OPUS files": [[329, "Import-of-Bruker-OPUS-files"]], "Import of OMNIC files": [[329, "Import-of-OMNIC-files"]], "Import with explicit directory or file pathnames": [[328, "Import-with-explicit-directory-or-file-pathnames"]], "Import/Export of JCAMP-DX files": [[329, "Import/Export-of-JCAMP-DX-files"]], "Import/export": [[317, "import-export"]], "Importing a 1D spectra": [[80, "importing-a-1d-spectra"]], "Importing a 2D NMR spectra": [[76, "importing-a-2d-nmr-spectra"]], "Importing a pseudo 2D NMR spectra": [[77, "importing-a-pseudo-2d-nmr-spectra"]], "Importing from external dataset": [[334, "Importing-from-external-dataset"]], "Indenting": [[333, "Indenting"]], "Independant Component Analysis": [[317, "independant-component-analysis"]], "Indexing": [[317, "indexing"]], "Initial guess and MCR ALS optimization": [[322, "Initial-guess-and-MCR-ALS-optimization"]], "Install SpectroChemPy in this environment": [[89, "install-spectrochempy-in-this-environment"]], "Install a Docker container": [[87, null]], "Install in Google Colaboratory (Colab)": [[86, null]], "Install optional dependencies": [[85, null]], "Installation": [[87, "installation"]], "Installation Guide for Mac OSX": [[88, null]], "Installation Guide for Windows": [[90, null]], "Installation from sources (master or develop versions)": [[89, null]], "Installation guide": [[84, null]], "Installation of SpectroChemPy": [[84, "installation-of-spectrochempy"]], "Installation using Conda": [[88, "installation-using-conda"], [90, "installation-using-conda"]], "Installation using pip": [[88, "installation-using-pip"], [90, "installation-using-pip"]], "Installing git": [[6, "installing-git"], [89, "installing-git"]], "Integral inversion solver for spectroscopic data": [[317, "integral-inversion-solver-for-spectroscopic-data"]], "Internal links": [[333, "Internal-links"]], "Introduction": [[322, "Introduction"], [323, "Introduction"], [326, "Introduction"], [332, null], [339, "Introduction"]], "Introduction to the plotting librairie": [[52, null]], "Joining or splitting datasets": [[317, "joining-or-splitting-datasets"]], "Kinetic": [[317, "kinetic"]], "Labels": [[334, "Labels"]], "Least square with non-negativity constraint (NNLS)": [[320, "Least-square-with-non-negativity-constraint-(NNLS)"]], "Line breaks": [[333, "Line-breaks"]], "Line broadening": [[342, "Line-broadening"]], "Linear regression": [[317, "linear-regression"]], "Linear trend": [[340, "Linear-trend"]], "Lineshape models": [[317, "lineshape-models"]], "List of UFuncs working on NDDataset:": [[345, "List-of-UFuncs-working-on-NDDataset:"]], "Load and install SpectroChemPy with pip": [[86, "load-and-install-spectrochempy-with-pip"]], "Load data files": [[86, "load-data-files"]], "Load the API": [[337, "Load-the-API"]], "Load, prepare and plot the dataset": [[19, "load-prepare-and-plot-the-dataset"]], "Loading": [[336, "Loading"]], "Loading Bruker OPUS files": [[45, null]], "Loading RAMAN experimental file": [[47, null]], "Loading a NDDataset": [[22, "loading-a-nddataset"]], "Loading an IR (omnic SPG) experimental file": [[44, null]], "Loading an experimental dataset": [[324, "Loading-an-experimental-dataset"]], "Loading of experimental 1D NMR data": [[46, null]], "Loading of the dataset": [[323, "Loading-of-the-dataset"], [326, "Loading-of-the-dataset"]], "Loading the API": [[317, "loading-the-api"], [332, "Loading-the-API"]], "Loading the data": [[337, "Loading-the-data"]], "Loading the example dataset": [[21, "loading-the-example-dataset"]], "Logging": [[317, "logging"]], "Logic functions": [[317, "logic-functions"]], "Loglevel": [[327, "Loglevel"]], "MCR ALS": [[322, null]], "MCR-ALS example (adapted from Jaumot et al. 2005)": [[21, null]], "MCR-ALS with kinetic constraints": [[22, null]], "Magnitude calculation": [[342, "Magnitude-calculation"]], "Make the pull request (PR)": [[6, "make-the-pull-request-pr"]], "Markdown Cheat Sheet": [[333, null]], "Markdown cheat sheet": [[331, "Markdown-cheat-sheet"]], "Masking data": [[349, "Masking-data"]], "Masks": [[317, "masks"]], "Mathematical operations": [[317, "mathematical-operations"], [345, null]], "Mathematical symbols": [[333, "Mathematical-symbols"]], "Maths on datasets": [[91, "Maths-on-datasets"]], "Median filter": [[341, "Median-filter"]], "Methods for alignments": [[338, "Methods-for-alignments"]], "Methods to create NDDataset": [[334, "Methods-to-create-NDDataset"]], "Minimum and maximum": [[317, "minimum-and-maximum"]], "Misc": [[317, "misc"]], "Miscellaneous": [[317, "miscellaneous"]], "Monospace font": [[333, "Monospace-font"]], "More information about the MCRALS estimator": [[322, "More-information-about-the-MCRALS-estimator"]], "More insight on coordinates": [[334, "More-insight-on-coordinates"]], "More on peak properties": [[324, "More-on-peak-properties"]], "Moving average": [[347, "Moving-average"]], "Multivariate Curve Resolution - Alternating Least Squares": [[317, "multivariate-curve-resolution-alternating-least-squares"]], "Multivariate approach": [[340, "Multivariate-approach"]], "NDDataset": [[335, "nddataset"]], "NDDataset baseline correction": [[64, null]], "NDDataset coordinates example": [[39, null]], "NDDataset creation and plotting example": [[38, null]], "NDDataset modelling using non-linear optimisation method": [[320, "NDDataset-modelling-using-non-linear-optimisation-method"]], "NDDataset, the main object": [[91, "NDDataset,-the-main-object"]], "NMF analysis example": [[23, null]], "New features": [[350, "new-features"], [352, "new-features"], [354, "new-features"], [355, "new-features"], [359, "new-features"], [360, "new-features"], [361, "new-features"], [362, "new-features"], [363, "new-features"], [364, "new-features"], [367, "new-features"], [368, "new-features"], [369, "new-features"], [370, "new-features"], [371, "new-features"], [373, "new-features"], [374, "new-features"], [375, "new-features"], [376, "new-features"], [377, "new-features"], [378, "new-features"], [379, "new-features"], [380, "new-features"], [381, "new-features"], [382, "new-features"], [383, "new-features"], [385, "new-features"], [386, "new-features"], [387, "new-features"], [388, "new-features"], [389, "new-features"], [391, "new-features"], [393, "new-features"], [394, "new-features"], [395, "new-features"], [396, "new-features"], [398, "new-features"], [399, "new-features"], [400, "new-features"]], "Non-Negative Matrix Factorization": [[317, "non-negative-matrix-factorization"]], "Non-linear optimization and curve fit": [[317, "non-linear-optimization-and-curve-fit"]], "Numbered lists": [[333, "Numbered-lists"]], "Offset correction": [[317, "offset-correction"]], "One-dimensional (1D) Fourier transformation": [[342, null]], "Open Source Software on an Open-Source Platform": [[92, "open-source-software-on-an-open-source-platform"]], "Optional dependencies": [[7, "optional-dependencies"]], "Optional: installing a GUI git client": [[6, "optional-installing-a-gui-git-client"]], "Options of find_peaks()": [[324, "Options-of-find_peaks()"]], "Other Licenses": [[2, "other-licenses"]], "Other apodization functions": [[339, "Other-apodization-functions"]], "Overview": [[91, null]], "Overview of the main configuration parameters": [[337, "Overview-of-the-main-configuration-parameters"]], "Overview of the other model": [[340, "Overview-of-the-other-model"]], "PCA analysis example": [[25, null]], "PCA example (iris dataset)": [[24, null]], "PLS regression example": [[29, null]], "Papers citing SpectroChemPy": [[318, null]], "Parameter types": [[9, "parameter-types"]], "Partial Least Square regression": [[317, "partial-least-square-regression"]], "Partial Least Squares Regression (PLSRegression)": [[326, null]], "Peak Integration": [[325, null]], "Peak Maxima Finding": [[324, null]], "Peak finding": [[320, "Peak-finding"]], "Peak fitting": [[76, "peak-fitting"]], "Peak picking": [[76, "peak-picking"]], "Phasing": [[317, "phasing"]], "Plot of the Real and Imaginary original data": [[339, "Plot-of-the-Real-and-Imaginary-original-data"]], "Plot results": [[23, "plot-results"]], "Plots in examples": [[9, "plots-in-examples"]], "Plotting": [[317, "plotting"], [337, null]], "Plotting 1D datasets": [[337, "Plotting-1D-datasets"]], "Plotting a dataset": [[91, "Plotting-a-dataset"]], "Plotting datasets": [[50, null], [57, "plotting-datasets"]], "Plotting several dataset on the same figure": [[337, "Plotting-several-dataset-on-the-same-figure"]], "Plotting the results": [[21, "plotting-the-results"]], "Polynomial": [[340, "Polynomial"]], "Polynomial trend": [[340, "Polynomial-trend"]], "Power spectrum": [[342, "Power-spectrum"]], "Powered by Python": [[92, "powered-by-python"]], "Pre-commit": [[7, "pre-commit"]], "Prepare the dataset to NMF factorize": [[23, "prepare-the-dataset-to-nmf-factorize"]], "Preparing the data": [[337, "Preparing-the-data"]], "Preprocessing": [[342, "Preprocessing"]], "Prerequisites": [[84, "prerequisites"]], "Principal Component Analysis": [[323, null]], "Processing": [[317, "processing"], [343, null]], "Processing NDDataset": [[73, null]], "Processing NMR datasets": [[73, "processing-nmr-datasets"], [74, null]], "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)": [[76, null]], "Processing RAMAN spectra": [[80, null]], "Processing Raman datasets": [[73, "processing-raman-datasets"], [79, null]], "Processing Relaxation measurement": [[77, null]], "Processing a dataset": [[91, "Processing-a-dataset"]], "Processing functions": [[333, "Processing-functions"]], "Processing, analyzing and modeling spectroscopic data": [[93, null]], "Project": [[335, "project"]], "Project Management": [[54, null], [57, "project-management"]], "Project creation": [[55, null], [336, "Project-creation"]], "Project management": [[317, "project-management"], [336, null]], "Prominence": [[324, "Prominence"]], "Public API reference": [[317, null]], "Push your changes": [[6, "push-your-changes"]], "Python (PEP8 / black)": [[7, "python-pep8-black"]], "QT": [[85, "qt"]], "Reading Renishaw WiRE files": [[48, null]], "Reading datasets": [[43, null]], "Real Fourier transform": [[342, "Real-Fourier-transform"]], "Reconstruct the dataset": [[19, "reconstruct-the-dataset"]], "Reference": [[93, "reference"]], "Release notes": [[351, null]], "Remove an element from a project": [[336, "Remove-an-element-from-a-project"]], "Removing cosmic ray spikes from a Raman spectrum": [[68, null]], "Removing cosmic rays spike from Raman spectra": [[341, "Removing-cosmic-rays-spike-from-Raman-spectra"]], "Reporting Issues": [[14, null]], "Requirements": [[10, "requirements"]], "Review Your Code": [[6, "review-your-code"]], "Revisions 0.1.0 to 0.1.19": [[353, null]], "Rolling": [[317, "rolling"]], "Rubberband": [[340, "Rubberband"]], "Running PLSRegression": [[326, "Running-PLSRegression"]], "Running a PCA": [[323, "Running-a-PCA"]], "Running the test suite": [[7, "running-the-test-suite"]], "SIMPLISMA example": [[26, null]], "SIMPLe to use Interactive Self-modeling Mixture Analysis": [[317, "simple-to-use-interactive-self-modeling-mixture-analysis"]], "Saving": [[336, "Saving"]], "Saving and loading projects": [[336, "Saving-and-loading-projects"]], "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum": [[71, null]], "Savitzky-Golay filter": [[347, "Savitzky-Golay-filter"]], "Savitzky-Golay filter:savgol": [[347, "Savitzky-Golay-filter:savgol"]], "Script": [[335, "script"]], "Scripting": [[317, "scripting"]], "Section 1: short summary": [[9, "section-1-short-summary"]], "Section 2: extended summary": [[9, "section-2-extended-summary"]], "Section 3: parameters": [[9, "section-3-parameters"]], "Section 4: returns or yields": [[9, "section-4-returns-or-yields"]], "Section 5: see also": [[9, "section-5-see-also"]], "Section 6: notes": [[9, "section-6-notes"]], "Section 7: examples": [[9, "section-7-examples"]], "See also": [[3, null]], "Select data in a NDDataset": [[317, "select-data-in-a-nddataset"]], "Selecting the output window": [[337, "Selecting-the-output-window"]], "Setting coordinates using set_coordset": [[334, "Setting-coordinates-using-set_coordset"]], "Setting new coordinates": [[20, "setting-new-coordinates"], [39, "setting-new-coordinates"]], "Sharing coordinates between dimensions": [[334, "Sharing-coordinates-between-dimensions"]], "Shifted Gaussian-Lorentzian apodization": [[339, "Shifted-Gaussian-Lorentzian-apodization"]], "Shifted apodization": [[339, "Shifted-apodization"]], "Sine bell and squared Sine bell window multiplication": [[61, null]], "Singular value decomposition and Principal component analysis": [[317, "singular-value-decomposition-and-principal-component-analysis"]], "Slicing NDDatasets": [[346, null]], "Slicing a dataset": [[91, "Slicing-a-dataset"]], "Slicing of NDDatasets": [[346, "Slicing-of-NDDatasets"]], "Slicing with coordinates": [[346, "Slicing-with-coordinates"]], "Slicing with indexes": [[346, "Slicing-with-indexes"]], "Smoothing": [[91, "Smoothing"]], "Smoothing, filtering, denoising": [[317, "smoothing-filtering-denoising"]], "Solutions": [[322, "Solutions"]], "Solve a linear equation using LSTSQ": [[33, null]], "Solving a linear equation using the least square method (LSTSQ)": [[320, "Solving-a-linear-equation-using-the-least-square-method-(LSTSQ)"]], "Sorting": [[317, "sorting"]], "Source control": [[15, "source-control"]], "SpectroChemPy Docstring Guide": [[9, null]], "SpectroChemPy code style guide": [[4, null]], "SpectroChempy License": [[2, null]], "Start editing": [[15, "start-editing"]], "Starting Jupyter lab": [[331, null]], "Statistical operations": [[317, "statistical-operations"]], "Summary of the coordinate setting syntax": [[334, "Summary-of-the-coordinate-setting-syntax"]], "Sums, integal, difference": [[317, "sums-integal-difference"]], "Supported file formats": [[329, "Supported-file-formats"]], "Syntax 1": [[334, "Syntax-1"]], "Syntax 2": [[334, "Syntax-2"]], "Syntax for parameters definition": [[320, "Syntax-for-parameters-definition"]], "Table of Contents": [[95, "table-of-contents"], [317, "table-of-contents"]], "Table of Contents:": [[5, "table-of-contents"], [7, "table-of-contents"]], "Table of contents:": [[4, "table-of-contents"], [6, "table-of-contents"]], "Test-driven development/code writing": [[7, "test-driven-development-code-writing"]], "Testing": [[4, "testing"]], "Testing with continuous integration": [[7, "testing-with-continuous-integration"]], "The (minimal) dataset": [[322, "The-(minimal)-dataset"]], "The Baseline processor": [[340, "The-Baseline-processor"]], "The Filter processor": [[347, "The-Filter-processor"]], "The NDDataset Object": [[317, "the-nddataset-object"]], "The NDDataset object": [[334, null]], "The order of spectra": [[329, "The-order-of-spectra"]], "The smooth method": [[347, "The-smooth-method"]], "Third-party Licences": [[1, "third-party-licences"]], "Time domain baseline correction": [[342, "Time-domain-baseline-correction"]], "Time domain baseline correction (NMR)": [[348, null]], "Time-domain processing": [[317, "time-domain-processing"]], "Tips for a successful pull request": [[6, "tips-for-a-successful-pull-request"]], "Tips for getting your examples pass the doctests": [[9, "tips-for-getting-your-examples-pass-the-doctests"]], "To get help about the different configuration parameters": [[322, "To-get-help-about-the-different-configuration-parameters"]], "Todo": [[335, "id1"]], "Transpose-like operations": [[317, "transpose-like-operations"]], "Transposition": [[349, "Transposition"]], "Trigonometric functions. Require dimensionless/unitless dataset or radians.": [[345, "Trigonometric-functions.-Require-dimensionless/unitless-dataset-or-radians."]], "Trigonometric functions. Require unitless data or radian units.": [[345, "Trigonometric-functions.-Require-unitless-data-or-radian-units."]], "Ufuncs (Universal Numpy\u2019s functions)": [[345, "Ufuncs-(Universal-Numpy's-functions)"]], "Unary functions": [[345, "Unary-functions"]], "Unit conversions": [[345, "Unit-conversions"]], "Units": [[334, "Units"]], "Units for dataset": [[40, "units-for-dataset"]], "Units manipulation": [[317, "units-manipulation"]], "Units manipulation examples": [[40, null]], "Update your pull request": [[6, "update-your-pull-request"]], "Updating SpectroChemPy": [[89, "updating-spectrochempy"]], "Updating a spectrochempy docstring": [[10, "updating-a-spectrochempy-docstring"]], "Uploading a dataset": [[39, "uploading-a-dataset"]], "Uploading dataset": [[20, "uploading-dataset"]], "Usage": [[345, "Usage"]], "Use of PCA to assess the number of pure species": [[322, "Use-of-PCA-to-assess-the-number-of-pure-species"]], "User\u2019s Guide & Tutorials": [[93, "user-s-guide-tutorials"]], "Using numpy-like constructors of NDDatasets": [[334, "Using-numpy-like-constructors-of-NDDatasets"]], "Using plot_multiple to plot several datasets on the same figure": [[51, null]], "Using pytest": [[7, "using-pytest"]], "Using pytest.mark.xfail": [[4, "using-pytest-mark-xfail"]], "Utilities": [[317, "utilities"], [317, "id7"]], "Version 0.1": [[351, "version-0-1"]], "Version 0.2": [[351, "version-0-2"]], "Version 0.3": [[351, "version-0-3"]], "Version 0.4": [[351, "version-0-4"]], "Version 0.5": [[351, "version-0-5"]], "Version 0.6": [[351, "version-0-6"]], "Version control, Git, and GitHub": [[6, "version-control-git-and-github"]], "Visual Studio Installation": [[15, "visual-studio-installation"]], "What is the slicing ?": [[346, "What-is-the-slicing-?"]], "What\u2019s new in revision": [[350, null]], "What\u2019s new in revision 0.2.0": [[354, null]], "What\u2019s new in revision 0.2.10 [2021-02-14]": [[355, null]], "What\u2019s new in revision 0.2.11 [2021-02-17]": [[356, null]], "What\u2019s new in revision 0.2.12 [2021-02-23]": [[357, null]], "What\u2019s new in revision 0.2.13 [2021-02-23]": [[358, null]], "What\u2019s new in revision 0.2.14 [2021-02-25]": [[359, null]], "What\u2019s new in revision 0.2.15 [2021-03-29]": [[360, null]], "What\u2019s new in revision 0.2.16 [2021-11-11]": [[361, null]], "What\u2019s new in revision 0.2.17 [2021-11-29]": [[362, null]], "What\u2019s new in revision 0.2.18 [2022-01-05]": [[363, null]], "What\u2019s new in revision 0.2.21 [2022-01-09]": [[364, null]], "What\u2019s new in revision 0.2.22 [2022-01-10]": [[365, null]], "What\u2019s new in revision 0.2.23 [2022-01-16]": [[366, null]], "What\u2019s new in revision 0.2.4": [[367, null]], "What\u2019s new in revision 0.2.5": [[368, null]], "What\u2019s new in revision 0.2.6": [[369, null]], "What\u2019s new in revision 0.2.7": [[370, null]], "What\u2019s new in revision 0.2.8": [[371, null]], "What\u2019s new in revision 0.2.9 [2021-11-29]": [[372, null]], "What\u2019s new in revision 0.3.0 [2022-01-20]": [[373, null]], "What\u2019s new in revision 0.3.1 [2022-01-21]": [[374, null]], "What\u2019s new in revision 0.3.2 [2022-01-31]": [[375, null]], "What\u2019s new in revision 0.3.3 [2022-03-9]": [[376, null]], "What\u2019s new in revision 0.4.1 [2022-03-14]": [[377, null]], "What\u2019s new in revision 0.4.10 [2023-01-07]": [[378, null]], "What\u2019s new in revision 0.4.2 [2022-03-16]": [[379, null]], "What\u2019s new in revision 0.4.3 [2022-03-20]": [[380, null]], "What\u2019s new in revision 0.4.4 [2022-03-22]": [[381, null]], "What\u2019s new in revision 0.4.5 [2022-04-09]": [[382, null]], "What\u2019s new in revision 0.4.6 [2022-05-16]": [[383, null]], "What\u2019s new in revision 0.4.7 [2022-05-16]": [[384, null]], "What\u2019s new in revision 0.4.9 [2023-01-05]": [[385, null]], "What\u2019s new in revision 0.5.0 [2023-01-11]": [[386, null]], "What\u2019s new in revision 0.5.1": [[387, null]], "What\u2019s new in revision 0.5.2": [[388, null]], "What\u2019s new in revision 0.5.3": [[389, null]], "What\u2019s new in revision 0.5.4": [[390, null]], "What\u2019s new in revision 0.5.5": [[391, null]], "What\u2019s new in revision 0.6.1": [[392, null]], "What\u2019s new in revision 0.6.10": [[393, null]], "What\u2019s new in revision 0.6.11.dev": [[352, null]], "What\u2019s new in revision 0.6.2": [[394, null]], "What\u2019s new in revision 0.6.3": [[395, null]], "What\u2019s new in revision 0.6.4": [[396, null]], "What\u2019s new in revision 0.6.5": [[397, null]], "What\u2019s new in revision 0.6.6": [[398, null]], "What\u2019s new in revision 0.6.7": [[399, null]], "What\u2019s new in revision 0.6.8": [[400, null]], "What\u2019s new in revision 0.6.9": [[401, null]], "Where are the preference\u2019s files saved?": [[95, "where-are-the-preference-s-files-saved"]], "Where to go next?": [[332, "Where-to-go-next?"]], "Whittaker-Eilers filter": [[347, "Whittaker-Eilers-filter"]], "Whittaker-eilers filter : whittaker": [[347, "Whittaker-eilers-filter-:-whittaker"]], "Why NOT SpectroChemPy ?": [[92, "why-not-spectrochempy"]], "Why SpectroChemPy  ?": [[92, null]], "Width": [[324, "Width"]], "Window size influence": [[347, "Window-size-influence"]], "With regularization and a manual search": [[20, "with-regularization-and-a-manual-search"]], "Writing a docstring": [[9, "writing-a-docstring"]], "Writing and executing SpectroChemPy scripts": [[332, "Writing-and-executing-SpectroChemPy-scripts"]], "Writing tests": [[7, "writing-tests"]], "Zero-filling": [[317, "zero-filling"], [342, "Zero-filling"]], "a) import spg file": [[329, "a)-import-spg-file"]], "abs": [[345, "abs"]], "absolute (alias of abs)": [[345, "absolute-(alias-of-abs)"]], "add": [[345, "add"]], "arccos": [[345, "arccos"]], "arccosh": [[345, "arccosh"]], "arcsin": [[345, "arcsin"]], "arcsinh": [[345, "arcsinh"]], "arctan": [[345, "arctan"]], "arctanh": [[345, "arctanh"]], "b) Import of .spa files": [[329, "b)-Import-of-.spa-files"]], "basc": [[340, "basc"]], "cbrt": [[345, "cbrt"]], "ceil": [[345, "ceil"]], "cos": [[345, "cos"]], "cosh": [[345, "cosh"]], "deg2rad": [[345, "deg2rad"]], "despike method": [[341, "despike-method"]], "divide": [[345, "divide"]], "exp": [[345, "exp"]], "exp2": [[345, "exp2"]], "expm1": [[345, "expm1"]], "fabs (absolute for float arrays)": [[345, "fabs-(absolute-for-float-arrays)"]], "filtering": [[70, null], [73, "filtering"]], "first method": [[338, "first-method"]], "floor": [[345, "floor"]], "floor_divide": [[345, "floor_divide"]], "inner method": [[338, "inner-method"]], "isfinite": [[345, "isfinite"]], "isinf": [[345, "isinf"]], "isnan": [[345, "isnan"]], "last method": [[338, "last-method"]], "log": [[345, "log"]], "log10": [[345, "log10"]], "log1p": [[345, "log1p"]], "log2": [[345, "log2"]], "logical_not": [[345, "logical_not"]], "multiply": [[345, "multiply"]], "nD-Dataset (multidimensional dataset)": [[334, "nD-Dataset-(multidimensional-dataset)"]], "nd-Dataset": [[38, "nd-dataset"]], "negative": [[345, "negative"]], "rad2deg": [[345, "rad2deg"]], "reciprocal": [[345, "reciprocal"]], "rint": [[345, "rint"]], "sign": [[345, "sign"]], "signbit": [[345, "signbit"]], "sin": [[345, "sin"]], "sinh": [[345, "sinh"]], "spectrochempy.ActionMassKinetics": [[96, null]], "spectrochempy.Baseline": [[97, null]], "spectrochempy.BaselineCorrector": [[98, null]], "spectrochempy.Coord": [[99, null]], "spectrochempy.CoordSet": [[100, null]], "spectrochempy.EFA": [[101, null]], "spectrochempy.FastICA": [[102, null]], "spectrochempy.FileSelector": [[103, null]], "spectrochempy.Filter": [[104, null]], "spectrochempy.II": [[105, null]], "spectrochempy.IR": [[106, null]], "spectrochempy.IRIS": [[107, null]], "spectrochempy.IrisKernel": [[108, null]], "spectrochempy.LSTSQ": [[109, null]], "spectrochempy.MCRALS": [[110, null]], "spectrochempy.NDDataset": [[111, null]], "spectrochempy.NDDataset.save": [[112, null]], "spectrochempy.NDDataset.save_as": [[113, null]], "spectrochempy.NMF": [[114, null]], "spectrochempy.NNLS": [[115, null]], "spectrochempy.Optimize": [[116, null]], "spectrochempy.PCA": [[117, null]], "spectrochempy.PFR": [[118, null]], "spectrochempy.PLSRegression": [[119, null]], "spectrochempy.Project": [[120, null]], "spectrochempy.Quantity": [[121, null]], "spectrochempy.RI": [[122, null]], "spectrochempy.RR": [[123, null]], "spectrochempy.SIMPLISMA": [[124, null]], "spectrochempy.SVD": [[125, null]], "spectrochempy.Script": [[126, null]], "spectrochempy.Unit": [[127, null]], "spectrochempy.abs": [[128, null]], "spectrochempy.absolute": [[129, null]], "spectrochempy.align": [[130, null]], "spectrochempy.all": [[131, null]], "spectrochempy.amax": [[132, null]], "spectrochempy.amin": [[133, null]], "spectrochempy.any": [[134, null]], "spectrochempy.arange": [[135, null]], "spectrochempy.argmax": [[136, null]], "spectrochempy.argmin": [[137, null]], "spectrochempy.around": [[138, null]], "spectrochempy.asls": [[139, null]], "spectrochempy.asymmetricvoigtmodel": [[140, null]], "spectrochempy.autosub": [[141, null]], "spectrochempy.average": [[142, null]], "spectrochempy.bartlett": [[143, null]], "spectrochempy.basc": [[144, null]], "spectrochempy.blackmanharris": [[145, null]], "spectrochempy.clip": [[146, null]], "spectrochempy.component": [[147, null]], "spectrochempy.concatenate": [[148, null]], "spectrochempy.conj": [[149, null]], "spectrochempy.conjugate": [[150, null]], "spectrochempy.coordmax": [[151, null]], "spectrochempy.coordmin": [[152, null]], "spectrochempy.copy": [[153, null]], "spectrochempy.cs": [[154, null]], "spectrochempy.cumsum": [[155, null]], "spectrochempy.dc": [[156, null]], "spectrochempy.debug_": [[157, null]], "spectrochempy.denoise": [[158, null]], "spectrochempy.despike": [[159, null]], "spectrochempy.detrend": [[160, null]], "spectrochempy.diag": [[161, null]], "spectrochempy.diagonal": [[162, null]], "spectrochempy.dot": [[163, null]], "spectrochempy.download_nist_ir": [[164, null]], "spectrochempy.em": [[165, null]], "spectrochempy.empty": [[166, null]], "spectrochempy.empty_like": [[167, null]], "spectrochempy.error_": [[168, null]], "spectrochempy.eye": [[169, null]], "spectrochempy.fft": [[170, null]], "spectrochempy.find_peaks": [[171, null]], "spectrochempy.fromfunction": [[172, null]], "spectrochempy.fromiter": [[173, null]], "spectrochempy.fsh": [[174, null]], "spectrochempy.fsh2": [[175, null]], "spectrochempy.full": [[176, null]], "spectrochempy.full_like": [[177, null]], "spectrochempy.gaussianmodel": [[178, null]], "spectrochempy.general_hamming": [[179, null]], "spectrochempy.geomspace": [[180, null]], "spectrochempy.get_baseline": [[181, null]], "spectrochempy.get_loglevel": [[182, null]], "spectrochempy.gm": [[183, null]], "spectrochempy.hamming": [[184, null]], "spectrochempy.hann": [[185, null]], "spectrochempy.ht": [[186, null]], "spectrochempy.identity": [[187, null]], "spectrochempy.ifft": [[188, null]], "spectrochempy.imag": [[189, null]], "spectrochempy.info_": [[190, null]], "spectrochempy.interpolate": [[191, null]], "spectrochempy.is_units_compatible": [[192, null]], "spectrochempy.ito": [[193, null]], "spectrochempy.ito_base_units": [[194, null]], "spectrochempy.ito_reduced_units": [[195, null]], "spectrochempy.linspace": [[196, null]], "spectrochempy.load": [[197, null]], "spectrochempy.load_iris": [[198, null]], "spectrochempy.logspace": [[199, null]], "spectrochempy.lorentzianmodel": [[200, null]], "spectrochempy.ls": [[201, null]], "spectrochempy.max": [[202, null]], "spectrochempy.mc": [[203, null]], "spectrochempy.mean": [[204, null]], "spectrochempy.min": [[205, null]], "spectrochempy.multiplot": [[206, null]], "spectrochempy.multiplot_image": [[207, null]], "spectrochempy.multiplot_lines": [[208, null]], "spectrochempy.multiplot_map": [[209, null]], "spectrochempy.multiplot_scatter": [[210, null]], "spectrochempy.multiplot_stack": [[211, null]], "spectrochempy.multiplot_with_transposed": [[212, null]], "spectrochempy.ones": [[213, null]], "spectrochempy.ones_like": [[214, null]], "spectrochempy.pathclean": [[215, null]], "spectrochempy.pipe": [[216, null]], "spectrochempy.pk": [[217, null]], "spectrochempy.pk_exp": [[218, null]], "spectrochempy.plot": [[219, null]], "spectrochempy.plot_1D": [[220, null]], "spectrochempy.plot_2D": [[221, null]], "spectrochempy.plot_3D": [[222, null]], "spectrochempy.plot_bar": [[223, null]], "spectrochempy.plot_image": [[224, null]], "spectrochempy.plot_map": [[225, null]], "spectrochempy.plot_multiple": [[226, null]], "spectrochempy.plot_pen": [[227, null]], "spectrochempy.plot_scatter": [[228, null]], "spectrochempy.plot_scatter_pen": [[229, null]], "spectrochempy.plot_stack": [[230, null]], "spectrochempy.plot_surface": [[231, null]], "spectrochempy.plot_waterfall": [[232, null]], "spectrochempy.plot_with_transposed": [[233, null]], "spectrochempy.polynomialbaseline": [[234, null]], "spectrochempy.ps": [[235, null]], "spectrochempy.ptp": [[236, null]], "spectrochempy.qsin": [[237, null]], "spectrochempy.random": [[238, null]], "spectrochempy.read": [[239, null]], "spectrochempy.read_carroucell": [[240, null]], "spectrochempy.read_csv": [[241, null]], "spectrochempy.read_ddr": [[242, null]], "spectrochempy.read_dir": [[243, null]], "spectrochempy.read_hdr": [[244, null]], "spectrochempy.read_jcamp": [[245, null]], "spectrochempy.read_labspec": [[246, null]], "spectrochempy.read_mat": [[247, null]], "spectrochempy.read_matlab": [[248, null]], "spectrochempy.read_omnic": [[249, null]], "spectrochempy.read_opus": [[250, null]], "spectrochempy.read_quadera": [[251, null]], "spectrochempy.read_sdr": [[252, null]], "spectrochempy.read_soc": [[253, null]], "spectrochempy.read_spa": [[254, null]], "spectrochempy.read_spc": [[255, null]], "spectrochempy.read_spg": [[256, null]], "spectrochempy.read_srs": [[257, null]], "spectrochempy.read_topspin": [[258, null]], "spectrochempy.read_wdf": [[259, null]], "spectrochempy.read_wire": [[260, null]], "spectrochempy.read_zip": [[261, null]], "spectrochempy.real": [[262, null]], "spectrochempy.remove_masks": [[263, null]], "spectrochempy.roll": [[264, null]], "spectrochempy.round": [[265, null]], "spectrochempy.rs": [[266, null]], "spectrochempy.run_all_scripts": [[267, null]], "spectrochempy.run_script": [[268, null]], "spectrochempy.savgol": [[269, null]], "spectrochempy.set_complex": [[270, null]], "spectrochempy.set_hypercomplex": [[271, null]], "spectrochempy.set_loglevel": [[272, null]], "spectrochempy.set_nmr_context": [[273, null]], "spectrochempy.set_quaternion": [[274, null]], "spectrochempy.show": [[275, null]], "spectrochempy.show_versions": [[276, null]], "spectrochempy.sigmoidmodel": [[277, null]], "spectrochempy.simpson": [[278, null]], "spectrochempy.sine": [[279, null]], "spectrochempy.sinm": [[280, null]], "spectrochempy.smooth": [[281, null]], "spectrochempy.snip": [[282, null]], "spectrochempy.sort": [[283, null]], "spectrochempy.sp": [[284, null]], "spectrochempy.squeeze": [[285, null]], "spectrochempy.stack": [[286, null]], "spectrochempy.std": [[287, null]], "spectrochempy.sum": [[288, null]], "spectrochempy.swapdims": [[289, null]], "spectrochempy.take": [[290, null]], "spectrochempy.to": [[291, null]], "spectrochempy.to_array": [[292, null]], "spectrochempy.to_base_units": [[293, null]], "spectrochempy.to_reduced_units": [[294, null]], "spectrochempy.to_xarray": [[295, null]], "spectrochempy.transpose": [[296, null]], "spectrochempy.trapezoid": [[297, null]], "spectrochempy.triang": [[298, null]], "spectrochempy.var": [[299, null]], "spectrochempy.voigtmodel": [[300, null]], "spectrochempy.warning_": [[301, null]], "spectrochempy.whittaker": [[302, null]], "spectrochempy.write": [[303, null]], "spectrochempy.write_csv": [[304, null]], "spectrochempy.write_excel": [[305, null]], "spectrochempy.write_jcamp": [[306, null]], "spectrochempy.write_mat": [[307, null]], "spectrochempy.write_matlab": [[308, null]], "spectrochempy.write_xls": [[309, null]], "spectrochempy.zeros": [[310, null]], "spectrochempy.zeros_like": [[311, null]], "spectrochempy.zf": [[312, null]], "spectrochempy.zf_auto": [[313, null]], "spectrochempy.zf_double": [[314, null]], "spectrochempy.zf_size": [[315, null]], "sqrt": [[345, "sqrt"]], "square": [[345, "square"]], "subtract": [[345, "subtract"]], "tan": [[345, "tan"]], "tanh": [[345, "tanh"]], "trunc": [[345, "trunc"]]}, "docnames": ["credits/citing", "credits/credits", "credits/license", "credits/seealso", "devguide/code_style", "devguide/codespec_adding_reader", "devguide/contributing", "devguide/contributing_codebase", "devguide/contributing_codespecifics", "devguide/contributing_docstring", "devguide/contributing_documentation", "devguide/docker", "devguide/examples", "devguide/index", "devguide/issues", "devguide/visualcode", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/index", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/e_project/index", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/index", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/index", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/plot_baseline_correction", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/raman/index", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times", "gettingstarted/examples/index", "gettingstarted/install/index", "gettingstarted/install/install_adds", "gettingstarted/install/install_colab", "gettingstarted/install/install_docker", "gettingstarted/install/install_mac", "gettingstarted/install/install_sources", "gettingstarted/install/install_win", "gettingstarted/overview", "gettingstarted/whyscpy", "index", "reference/bibliography", "reference/faq", "reference/generated/spectrochempy.ActionMassKinetics", "reference/generated/spectrochempy.Baseline", "reference/generated/spectrochempy.BaselineCorrector", "reference/generated/spectrochempy.Coord", "reference/generated/spectrochempy.CoordSet", "reference/generated/spectrochempy.EFA", "reference/generated/spectrochempy.FastICA", "reference/generated/spectrochempy.FileSelector", "reference/generated/spectrochempy.Filter", "reference/generated/spectrochempy.II", "reference/generated/spectrochempy.IR", "reference/generated/spectrochempy.IRIS", "reference/generated/spectrochempy.IrisKernel", "reference/generated/spectrochempy.LSTSQ", "reference/generated/spectrochempy.MCRALS", "reference/generated/spectrochempy.NDDataset", "reference/generated/spectrochempy.NDDataset.save", "reference/generated/spectrochempy.NDDataset.save_as", "reference/generated/spectrochempy.NMF", "reference/generated/spectrochempy.NNLS", "reference/generated/spectrochempy.Optimize", "reference/generated/spectrochempy.PCA", "reference/generated/spectrochempy.PFR", "reference/generated/spectrochempy.PLSRegression", "reference/generated/spectrochempy.Project", "reference/generated/spectrochempy.Quantity", "reference/generated/spectrochempy.RI", "reference/generated/spectrochempy.RR", "reference/generated/spectrochempy.SIMPLISMA", "reference/generated/spectrochempy.SVD", "reference/generated/spectrochempy.Script", "reference/generated/spectrochempy.Unit", "reference/generated/spectrochempy.abs", "reference/generated/spectrochempy.absolute", "reference/generated/spectrochempy.align", "reference/generated/spectrochempy.all", "reference/generated/spectrochempy.amax", "reference/generated/spectrochempy.amin", "reference/generated/spectrochempy.any", "reference/generated/spectrochempy.arange", "reference/generated/spectrochempy.argmax", "reference/generated/spectrochempy.argmin", "reference/generated/spectrochempy.around", "reference/generated/spectrochempy.asls", "reference/generated/spectrochempy.asymmetricvoigtmodel", "reference/generated/spectrochempy.autosub", "reference/generated/spectrochempy.average", "reference/generated/spectrochempy.bartlett", "reference/generated/spectrochempy.basc", "reference/generated/spectrochempy.blackmanharris", "reference/generated/spectrochempy.clip", "reference/generated/spectrochempy.component", "reference/generated/spectrochempy.concatenate", "reference/generated/spectrochempy.conj", "reference/generated/spectrochempy.conjugate", "reference/generated/spectrochempy.coordmax", "reference/generated/spectrochempy.coordmin", "reference/generated/spectrochempy.copy", "reference/generated/spectrochempy.cs", "reference/generated/spectrochempy.cumsum", "reference/generated/spectrochempy.dc", "reference/generated/spectrochempy.debug_", "reference/generated/spectrochempy.denoise", "reference/generated/spectrochempy.despike", "reference/generated/spectrochempy.detrend", "reference/generated/spectrochempy.diag", "reference/generated/spectrochempy.diagonal", "reference/generated/spectrochempy.dot", "reference/generated/spectrochempy.download_nist_ir", "reference/generated/spectrochempy.em", "reference/generated/spectrochempy.empty", "reference/generated/spectrochempy.empty_like", "reference/generated/spectrochempy.error_", "reference/generated/spectrochempy.eye", "reference/generated/spectrochempy.fft", "reference/generated/spectrochempy.find_peaks", "reference/generated/spectrochempy.fromfunction", "reference/generated/spectrochempy.fromiter", "reference/generated/spectrochempy.fsh", "reference/generated/spectrochempy.fsh2", "reference/generated/spectrochempy.full", "reference/generated/spectrochempy.full_like", "reference/generated/spectrochempy.gaussianmodel", "reference/generated/spectrochempy.general_hamming", "reference/generated/spectrochempy.geomspace", "reference/generated/spectrochempy.get_baseline", "reference/generated/spectrochempy.get_loglevel", "reference/generated/spectrochempy.gm", "reference/generated/spectrochempy.hamming", "reference/generated/spectrochempy.hann", "reference/generated/spectrochempy.ht", "reference/generated/spectrochempy.identity", "reference/generated/spectrochempy.ifft", "reference/generated/spectrochempy.imag", "reference/generated/spectrochempy.info_", "reference/generated/spectrochempy.interpolate", "reference/generated/spectrochempy.is_units_compatible", "reference/generated/spectrochempy.ito", "reference/generated/spectrochempy.ito_base_units", "reference/generated/spectrochempy.ito_reduced_units", "reference/generated/spectrochempy.linspace", "reference/generated/spectrochempy.load", "reference/generated/spectrochempy.load_iris", "reference/generated/spectrochempy.logspace", "reference/generated/spectrochempy.lorentzianmodel", "reference/generated/spectrochempy.ls", "reference/generated/spectrochempy.max", "reference/generated/spectrochempy.mc", "reference/generated/spectrochempy.mean", "reference/generated/spectrochempy.min", "reference/generated/spectrochempy.multiplot", "reference/generated/spectrochempy.multiplot_image", "reference/generated/spectrochempy.multiplot_lines", "reference/generated/spectrochempy.multiplot_map", "reference/generated/spectrochempy.multiplot_scatter", "reference/generated/spectrochempy.multiplot_stack", "reference/generated/spectrochempy.multiplot_with_transposed", "reference/generated/spectrochempy.ones", "reference/generated/spectrochempy.ones_like", "reference/generated/spectrochempy.pathclean", "reference/generated/spectrochempy.pipe", "reference/generated/spectrochempy.pk", "reference/generated/spectrochempy.pk_exp", "reference/generated/spectrochempy.plot", "reference/generated/spectrochempy.plot_1D", "reference/generated/spectrochempy.plot_2D", "reference/generated/spectrochempy.plot_3D", "reference/generated/spectrochempy.plot_bar", "reference/generated/spectrochempy.plot_image", "reference/generated/spectrochempy.plot_map", "reference/generated/spectrochempy.plot_multiple", "reference/generated/spectrochempy.plot_pen", "reference/generated/spectrochempy.plot_scatter", "reference/generated/spectrochempy.plot_scatter_pen", "reference/generated/spectrochempy.plot_stack", "reference/generated/spectrochempy.plot_surface", "reference/generated/spectrochempy.plot_waterfall", "reference/generated/spectrochempy.plot_with_transposed", "reference/generated/spectrochempy.polynomialbaseline", "reference/generated/spectrochempy.ps", "reference/generated/spectrochempy.ptp", "reference/generated/spectrochempy.qsin", "reference/generated/spectrochempy.random", "reference/generated/spectrochempy.read", "reference/generated/spectrochempy.read_carroucell", "reference/generated/spectrochempy.read_csv", "reference/generated/spectrochempy.read_ddr", "reference/generated/spectrochempy.read_dir", "reference/generated/spectrochempy.read_hdr", "reference/generated/spectrochempy.read_jcamp", "reference/generated/spectrochempy.read_labspec", "reference/generated/spectrochempy.read_mat", "reference/generated/spectrochempy.read_matlab", "reference/generated/spectrochempy.read_omnic", "reference/generated/spectrochempy.read_opus", "reference/generated/spectrochempy.read_quadera", "reference/generated/spectrochempy.read_sdr", "reference/generated/spectrochempy.read_soc", "reference/generated/spectrochempy.read_spa", "reference/generated/spectrochempy.read_spc", "reference/generated/spectrochempy.read_spg", "reference/generated/spectrochempy.read_srs", "reference/generated/spectrochempy.read_topspin", "reference/generated/spectrochempy.read_wdf", "reference/generated/spectrochempy.read_wire", "reference/generated/spectrochempy.read_zip", "reference/generated/spectrochempy.real", "reference/generated/spectrochempy.remove_masks", "reference/generated/spectrochempy.roll", "reference/generated/spectrochempy.round", "reference/generated/spectrochempy.rs", "reference/generated/spectrochempy.run_all_scripts", "reference/generated/spectrochempy.run_script", "reference/generated/spectrochempy.savgol", "reference/generated/spectrochempy.set_complex", "reference/generated/spectrochempy.set_hypercomplex", "reference/generated/spectrochempy.set_loglevel", "reference/generated/spectrochempy.set_nmr_context", "reference/generated/spectrochempy.set_quaternion", "reference/generated/spectrochempy.show", "reference/generated/spectrochempy.show_versions", "reference/generated/spectrochempy.sigmoidmodel", "reference/generated/spectrochempy.simpson", "reference/generated/spectrochempy.sine", "reference/generated/spectrochempy.sinm", "reference/generated/spectrochempy.smooth", "reference/generated/spectrochempy.snip", "reference/generated/spectrochempy.sort", "reference/generated/spectrochempy.sp", "reference/generated/spectrochempy.squeeze", "reference/generated/spectrochempy.stack", "reference/generated/spectrochempy.std", "reference/generated/spectrochempy.sum", "reference/generated/spectrochempy.swapdims", "reference/generated/spectrochempy.take", "reference/generated/spectrochempy.to", "reference/generated/spectrochempy.to_array", "reference/generated/spectrochempy.to_base_units", "reference/generated/spectrochempy.to_reduced_units", "reference/generated/spectrochempy.to_xarray", "reference/generated/spectrochempy.transpose", "reference/generated/spectrochempy.trapezoid", "reference/generated/spectrochempy.triang", "reference/generated/spectrochempy.var", "reference/generated/spectrochempy.voigtmodel", "reference/generated/spectrochempy.warning_", "reference/generated/spectrochempy.whittaker", "reference/generated/spectrochempy.write", "reference/generated/spectrochempy.write_csv", "reference/generated/spectrochempy.write_excel", "reference/generated/spectrochempy.write_jcamp", "reference/generated/spectrochempy.write_mat", "reference/generated/spectrochempy.write_matlab", "reference/generated/spectrochempy.write_xls", "reference/generated/spectrochempy.zeros", "reference/generated/spectrochempy.zeros_like", "reference/generated/spectrochempy.zf", "reference/generated/spectrochempy.zf_auto", "reference/generated/spectrochempy.zf_double", "reference/generated/spectrochempy.zf_size", "reference/glossary", "reference/index", "reference/papers", "sg_execution_times", "userguide/analysis/fitting", "userguide/analysis/index", "userguide/analysis/mcr_als", "userguide/analysis/pca", "userguide/analysis/peak_finding", "userguide/analysis/peak_integration", "userguide/analysis/pls", "userguide/api/api", "userguide/importexport/import", "userguide/importexport/importIR", "userguide/importexport/index", "userguide/introduction/interface", "userguide/introduction/introduction", "userguide/introduction/mdcheatsheet", "userguide/objects/dataset/dataset", "userguide/objects/index", "userguide/objects/project/project", "userguide/plotting/plotting", "userguide/processing/alignment", "userguide/processing/apodization", "userguide/processing/baseline", "userguide/processing/denoising", "userguide/processing/fourier", "userguide/processing/index", "userguide/processing/interferogram", "userguide/processing/math_operations", "userguide/processing/slicing", "userguide/processing/smoothing", "userguide/processing/td_baseline", "userguide/processing/transformations", "whatsnew/changelog", "whatsnew/index", "whatsnew/latest", "whatsnew/v0.1.0", "whatsnew/v0.2.0", "whatsnew/v0.2.10", "whatsnew/v0.2.11", "whatsnew/v0.2.12", "whatsnew/v0.2.13", "whatsnew/v0.2.14", "whatsnew/v0.2.15", "whatsnew/v0.2.16", "whatsnew/v0.2.17", "whatsnew/v0.2.18", "whatsnew/v0.2.21", "whatsnew/v0.2.22", "whatsnew/v0.2.23", "whatsnew/v0.2.4", "whatsnew/v0.2.5", "whatsnew/v0.2.6", "whatsnew/v0.2.7", "whatsnew/v0.2.8", "whatsnew/v0.2.9", "whatsnew/v0.3.0", "whatsnew/v0.3.1", "whatsnew/v0.3.2", "whatsnew/v0.3.3", "whatsnew/v0.4.1", "whatsnew/v0.4.10", "whatsnew/v0.4.2", "whatsnew/v0.4.3", "whatsnew/v0.4.4", "whatsnew/v0.4.5", "whatsnew/v0.4.6", "whatsnew/v0.4.7", "whatsnew/v0.4.9", "whatsnew/v0.5.0", "whatsnew/v0.5.1", "whatsnew/v0.5.2", "whatsnew/v0.5.3", "whatsnew/v0.5.4", "whatsnew/v0.5.5", "whatsnew/v0.6.1", "whatsnew/v0.6.10", "whatsnew/v0.6.2", "whatsnew/v0.6.3", "whatsnew/v0.6.4", "whatsnew/v0.6.5", "whatsnew/v0.6.6", "whatsnew/v0.6.7", "whatsnew/v0.6.8", "whatsnew/v0.6.9"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["credits/citing.rst", "credits/credits.rst", "credits/license.rst", "credits/seealso.rst", "devguide/code_style.rst", "devguide/codespec_adding_reader.rst", "devguide/contributing.rst", "devguide/contributing_codebase.rst", "devguide/contributing_codespecifics.rst", "devguide/contributing_docstring.rst", "devguide/contributing_documentation.rst", "devguide/docker.rst", "devguide/examples.rst", "devguide/index.rst", "devguide/issues.rst", "devguide/visualcode.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/index.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/index.rst", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/plot_baseline_correction.rst", "gettingstarted/examples/gallery/auto_examples_processing/d_baseline/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times.rst", "gettingstarted/examples/index.rst", "gettingstarted/install/index.rst", "gettingstarted/install/install_adds.rst", "gettingstarted/install/install_colab.rst", "gettingstarted/install/install_docker.rst", "gettingstarted/install/install_mac.rst", "gettingstarted/install/install_sources.rst", "gettingstarted/install/install_win.rst", "gettingstarted/overview.ipynb", "gettingstarted/whyscpy.rst", "index.rst", "reference/bibliography.rst", "reference/faq.rst", "reference/generated/spectrochempy.ActionMassKinetics.rst", "reference/generated/spectrochempy.Baseline.rst", "reference/generated/spectrochempy.BaselineCorrector.rst", "reference/generated/spectrochempy.Coord.rst", "reference/generated/spectrochempy.CoordSet.rst", "reference/generated/spectrochempy.EFA.rst", "reference/generated/spectrochempy.FastICA.rst", "reference/generated/spectrochempy.FileSelector.rst", "reference/generated/spectrochempy.Filter.rst", "reference/generated/spectrochempy.II.rst", "reference/generated/spectrochempy.IR.rst", "reference/generated/spectrochempy.IRIS.rst", "reference/generated/spectrochempy.IrisKernel.rst", "reference/generated/spectrochempy.LSTSQ.rst", "reference/generated/spectrochempy.MCRALS.rst", "reference/generated/spectrochempy.NDDataset.rst", "reference/generated/spectrochempy.NDDataset.save.rst", "reference/generated/spectrochempy.NDDataset.save_as.rst", "reference/generated/spectrochempy.NMF.rst", "reference/generated/spectrochempy.NNLS.rst", "reference/generated/spectrochempy.Optimize.rst", "reference/generated/spectrochempy.PCA.rst", "reference/generated/spectrochempy.PFR.rst", "reference/generated/spectrochempy.PLSRegression.rst", "reference/generated/spectrochempy.Project.rst", "reference/generated/spectrochempy.Quantity.rst", "reference/generated/spectrochempy.RI.rst", "reference/generated/spectrochempy.RR.rst", "reference/generated/spectrochempy.SIMPLISMA.rst", "reference/generated/spectrochempy.SVD.rst", "reference/generated/spectrochempy.Script.rst", "reference/generated/spectrochempy.Unit.rst", "reference/generated/spectrochempy.abs.rst", "reference/generated/spectrochempy.absolute.rst", "reference/generated/spectrochempy.align.rst", "reference/generated/spectrochempy.all.rst", "reference/generated/spectrochempy.amax.rst", "reference/generated/spectrochempy.amin.rst", "reference/generated/spectrochempy.any.rst", "reference/generated/spectrochempy.arange.rst", "reference/generated/spectrochempy.argmax.rst", "reference/generated/spectrochempy.argmin.rst", "reference/generated/spectrochempy.around.rst", "reference/generated/spectrochempy.asls.rst", "reference/generated/spectrochempy.asymmetricvoigtmodel.rst", "reference/generated/spectrochempy.autosub.rst", "reference/generated/spectrochempy.average.rst", "reference/generated/spectrochempy.bartlett.rst", "reference/generated/spectrochempy.basc.rst", "reference/generated/spectrochempy.blackmanharris.rst", "reference/generated/spectrochempy.clip.rst", "reference/generated/spectrochempy.component.rst", "reference/generated/spectrochempy.concatenate.rst", "reference/generated/spectrochempy.conj.rst", "reference/generated/spectrochempy.conjugate.rst", "reference/generated/spectrochempy.coordmax.rst", "reference/generated/spectrochempy.coordmin.rst", "reference/generated/spectrochempy.copy.rst", "reference/generated/spectrochempy.cs.rst", "reference/generated/spectrochempy.cumsum.rst", "reference/generated/spectrochempy.dc.rst", "reference/generated/spectrochempy.debug_.rst", "reference/generated/spectrochempy.denoise.rst", "reference/generated/spectrochempy.despike.rst", "reference/generated/spectrochempy.detrend.rst", "reference/generated/spectrochempy.diag.rst", "reference/generated/spectrochempy.diagonal.rst", "reference/generated/spectrochempy.dot.rst", "reference/generated/spectrochempy.download_nist_ir.rst", "reference/generated/spectrochempy.em.rst", "reference/generated/spectrochempy.empty.rst", "reference/generated/spectrochempy.empty_like.rst", "reference/generated/spectrochempy.error_.rst", "reference/generated/spectrochempy.eye.rst", "reference/generated/spectrochempy.fft.rst", "reference/generated/spectrochempy.find_peaks.rst", "reference/generated/spectrochempy.fromfunction.rst", "reference/generated/spectrochempy.fromiter.rst", "reference/generated/spectrochempy.fsh.rst", "reference/generated/spectrochempy.fsh2.rst", "reference/generated/spectrochempy.full.rst", "reference/generated/spectrochempy.full_like.rst", "reference/generated/spectrochempy.gaussianmodel.rst", "reference/generated/spectrochempy.general_hamming.rst", "reference/generated/spectrochempy.geomspace.rst", "reference/generated/spectrochempy.get_baseline.rst", "reference/generated/spectrochempy.get_loglevel.rst", "reference/generated/spectrochempy.gm.rst", "reference/generated/spectrochempy.hamming.rst", "reference/generated/spectrochempy.hann.rst", "reference/generated/spectrochempy.ht.rst", "reference/generated/spectrochempy.identity.rst", "reference/generated/spectrochempy.ifft.rst", "reference/generated/spectrochempy.imag.rst", "reference/generated/spectrochempy.info_.rst", "reference/generated/spectrochempy.interpolate.rst", "reference/generated/spectrochempy.is_units_compatible.rst", "reference/generated/spectrochempy.ito.rst", "reference/generated/spectrochempy.ito_base_units.rst", "reference/generated/spectrochempy.ito_reduced_units.rst", "reference/generated/spectrochempy.linspace.rst", "reference/generated/spectrochempy.load.rst", "reference/generated/spectrochempy.load_iris.rst", "reference/generated/spectrochempy.logspace.rst", "reference/generated/spectrochempy.lorentzianmodel.rst", "reference/generated/spectrochempy.ls.rst", "reference/generated/spectrochempy.max.rst", "reference/generated/spectrochempy.mc.rst", "reference/generated/spectrochempy.mean.rst", "reference/generated/spectrochempy.min.rst", "reference/generated/spectrochempy.multiplot.rst", "reference/generated/spectrochempy.multiplot_image.rst", "reference/generated/spectrochempy.multiplot_lines.rst", "reference/generated/spectrochempy.multiplot_map.rst", "reference/generated/spectrochempy.multiplot_scatter.rst", "reference/generated/spectrochempy.multiplot_stack.rst", "reference/generated/spectrochempy.multiplot_with_transposed.rst", "reference/generated/spectrochempy.ones.rst", "reference/generated/spectrochempy.ones_like.rst", "reference/generated/spectrochempy.pathclean.rst", "reference/generated/spectrochempy.pipe.rst", "reference/generated/spectrochempy.pk.rst", "reference/generated/spectrochempy.pk_exp.rst", "reference/generated/spectrochempy.plot.rst", "reference/generated/spectrochempy.plot_1D.rst", "reference/generated/spectrochempy.plot_2D.rst", "reference/generated/spectrochempy.plot_3D.rst", "reference/generated/spectrochempy.plot_bar.rst", "reference/generated/spectrochempy.plot_image.rst", "reference/generated/spectrochempy.plot_map.rst", "reference/generated/spectrochempy.plot_multiple.rst", "reference/generated/spectrochempy.plot_pen.rst", "reference/generated/spectrochempy.plot_scatter.rst", "reference/generated/spectrochempy.plot_scatter_pen.rst", "reference/generated/spectrochempy.plot_stack.rst", "reference/generated/spectrochempy.plot_surface.rst", "reference/generated/spectrochempy.plot_waterfall.rst", "reference/generated/spectrochempy.plot_with_transposed.rst", "reference/generated/spectrochempy.polynomialbaseline.rst", "reference/generated/spectrochempy.ps.rst", "reference/generated/spectrochempy.ptp.rst", "reference/generated/spectrochempy.qsin.rst", "reference/generated/spectrochempy.random.rst", "reference/generated/spectrochempy.read.rst", "reference/generated/spectrochempy.read_carroucell.rst", "reference/generated/spectrochempy.read_csv.rst", "reference/generated/spectrochempy.read_ddr.rst", "reference/generated/spectrochempy.read_dir.rst", "reference/generated/spectrochempy.read_hdr.rst", "reference/generated/spectrochempy.read_jcamp.rst", "reference/generated/spectrochempy.read_labspec.rst", "reference/generated/spectrochempy.read_mat.rst", "reference/generated/spectrochempy.read_matlab.rst", "reference/generated/spectrochempy.read_omnic.rst", "reference/generated/spectrochempy.read_opus.rst", "reference/generated/spectrochempy.read_quadera.rst", "reference/generated/spectrochempy.read_sdr.rst", "reference/generated/spectrochempy.read_soc.rst", "reference/generated/spectrochempy.read_spa.rst", "reference/generated/spectrochempy.read_spc.rst", "reference/generated/spectrochempy.read_spg.rst", "reference/generated/spectrochempy.read_srs.rst", "reference/generated/spectrochempy.read_topspin.rst", "reference/generated/spectrochempy.read_wdf.rst", "reference/generated/spectrochempy.read_wire.rst", "reference/generated/spectrochempy.read_zip.rst", "reference/generated/spectrochempy.real.rst", "reference/generated/spectrochempy.remove_masks.rst", "reference/generated/spectrochempy.roll.rst", "reference/generated/spectrochempy.round.rst", "reference/generated/spectrochempy.rs.rst", "reference/generated/spectrochempy.run_all_scripts.rst", "reference/generated/spectrochempy.run_script.rst", "reference/generated/spectrochempy.savgol.rst", "reference/generated/spectrochempy.set_complex.rst", "reference/generated/spectrochempy.set_hypercomplex.rst", "reference/generated/spectrochempy.set_loglevel.rst", "reference/generated/spectrochempy.set_nmr_context.rst", "reference/generated/spectrochempy.set_quaternion.rst", "reference/generated/spectrochempy.show.rst", "reference/generated/spectrochempy.show_versions.rst", "reference/generated/spectrochempy.sigmoidmodel.rst", "reference/generated/spectrochempy.simpson.rst", "reference/generated/spectrochempy.sine.rst", "reference/generated/spectrochempy.sinm.rst", "reference/generated/spectrochempy.smooth.rst", "reference/generated/spectrochempy.snip.rst", "reference/generated/spectrochempy.sort.rst", "reference/generated/spectrochempy.sp.rst", "reference/generated/spectrochempy.squeeze.rst", "reference/generated/spectrochempy.stack.rst", "reference/generated/spectrochempy.std.rst", "reference/generated/spectrochempy.sum.rst", "reference/generated/spectrochempy.swapdims.rst", "reference/generated/spectrochempy.take.rst", "reference/generated/spectrochempy.to.rst", "reference/generated/spectrochempy.to_array.rst", "reference/generated/spectrochempy.to_base_units.rst", "reference/generated/spectrochempy.to_reduced_units.rst", "reference/generated/spectrochempy.to_xarray.rst", "reference/generated/spectrochempy.transpose.rst", "reference/generated/spectrochempy.trapezoid.rst", "reference/generated/spectrochempy.triang.rst", "reference/generated/spectrochempy.var.rst", "reference/generated/spectrochempy.voigtmodel.rst", "reference/generated/spectrochempy.warning_.rst", "reference/generated/spectrochempy.whittaker.rst", "reference/generated/spectrochempy.write.rst", "reference/generated/spectrochempy.write_csv.rst", "reference/generated/spectrochempy.write_excel.rst", "reference/generated/spectrochempy.write_jcamp.rst", "reference/generated/spectrochempy.write_mat.rst", "reference/generated/spectrochempy.write_matlab.rst", "reference/generated/spectrochempy.write_xls.rst", "reference/generated/spectrochempy.zeros.rst", "reference/generated/spectrochempy.zeros_like.rst", "reference/generated/spectrochempy.zf.rst", "reference/generated/spectrochempy.zf_auto.rst", "reference/generated/spectrochempy.zf_double.rst", "reference/generated/spectrochempy.zf_size.rst", "reference/glossary.rst", "reference/index.rst", "reference/papers.rst", "sg_execution_times.rst", "userguide/analysis/fitting.ipynb", "userguide/analysis/index.rst", "userguide/analysis/mcr_als.ipynb", "userguide/analysis/pca.ipynb", "userguide/analysis/peak_finding.ipynb", "userguide/analysis/peak_integration.ipynb", "userguide/analysis/pls.ipynb", "userguide/api/api.ipynb", "userguide/importexport/import.ipynb", "userguide/importexport/importIR.ipynb", "userguide/importexport/index.rst", "userguide/introduction/interface.ipynb", "userguide/introduction/introduction.ipynb", "userguide/introduction/mdcheatsheet.ipynb", "userguide/objects/dataset/dataset.ipynb", "userguide/objects/index.rst", "userguide/objects/project/project.ipynb", "userguide/plotting/plotting.ipynb", "userguide/processing/alignment.ipynb", "userguide/processing/apodization.ipynb", "userguide/processing/baseline.ipynb", "userguide/processing/denoising.ipynb", "userguide/processing/fourier.ipynb", "userguide/processing/index.rst", "userguide/processing/interferogram.ipynb", "userguide/processing/math_operations.ipynb", "userguide/processing/slicing.ipynb", "userguide/processing/smoothing.ipynb", "userguide/processing/td_baseline.ipynb", "userguide/processing/transformations.ipynb", "whatsnew/changelog.rst", "whatsnew/index.rst", "whatsnew/latest.rst", "whatsnew/v0.1.0.rst", "whatsnew/v0.2.0.rst", "whatsnew/v0.2.10.rst", "whatsnew/v0.2.11.rst", "whatsnew/v0.2.12.rst", "whatsnew/v0.2.13.rst", "whatsnew/v0.2.14.rst", "whatsnew/v0.2.15.rst", "whatsnew/v0.2.16.rst", "whatsnew/v0.2.17.rst", "whatsnew/v0.2.18.rst", "whatsnew/v0.2.21.rst", "whatsnew/v0.2.22.rst", "whatsnew/v0.2.23.rst", "whatsnew/v0.2.4.rst", "whatsnew/v0.2.5.rst", "whatsnew/v0.2.6.rst", "whatsnew/v0.2.7.rst", "whatsnew/v0.2.8.rst", "whatsnew/v0.2.9.rst", "whatsnew/v0.3.0.rst", "whatsnew/v0.3.1.rst", "whatsnew/v0.3.2.rst", "whatsnew/v0.3.3.rst", "whatsnew/v0.4.1.rst", "whatsnew/v0.4.10.rst", "whatsnew/v0.4.2.rst", "whatsnew/v0.4.3.rst", "whatsnew/v0.4.4.rst", "whatsnew/v0.4.5.rst", "whatsnew/v0.4.6.rst", "whatsnew/v0.4.7.rst", "whatsnew/v0.4.9.rst", "whatsnew/v0.5.0.rst", "whatsnew/v0.5.1.rst", "whatsnew/v0.5.2.rst", "whatsnew/v0.5.3.rst", "whatsnew/v0.5.4.rst", "whatsnew/v0.5.5.rst", "whatsnew/v0.6.1.rst", "whatsnew/v0.6.10.rst", "whatsnew/v0.6.2.rst", "whatsnew/v0.6.3.rst", "whatsnew/v0.6.4.rst", "whatsnew/v0.6.5.rst", "whatsnew/v0.6.6.rst", "whatsnew/v0.6.7.rst", "whatsnew/v0.6.8.rst", "whatsnew/v0.6.9.rst"], "indexentries": {"a (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.A", false]], "a (fastica attribute)": [[102, "spectrochempy.FastICA.A", false]], "abs() (in module spectrochempy)": [[128, "spectrochempy.abs", false]], "abs() (nddataset method)": [[111, "spectrochempy.NDDataset.abs", false]], "absolute() (in module spectrochempy)": [[129, "spectrochempy.absolute", false]], "absolute() (nddataset method)": [[111, "spectrochempy.NDDataset.absolute", false]], "acquisition_date (nddataset attribute)": [[111, "spectrochempy.NDDataset.acquisition_date", false]], "actionmasskinetics (class in spectrochempy)": [[96, "spectrochempy.ActionMassKinetics", false]], "add_coordset() (nddataset method)": [[111, "spectrochempy.NDDataset.add_coordset", false]], "add_dataset() (project method)": [[120, "spectrochempy.Project.add_dataset", false]], "add_datasets() (project method)": [[120, "spectrochempy.Project.add_datasets", false]], "add_project() (project method)": [[120, "spectrochempy.Project.add_project", false]], "add_projects() (project method)": [[120, "spectrochempy.Project.add_projects", false]], "add_script() (project method)": [[120, "spectrochempy.Project.add_script", false]], "add_scripts() (project method)": [[120, "spectrochempy.Project.add_scripts", false]], "algorithm (fastica attribute)": [[102, "spectrochempy.FastICA.algorithm", false]], "align() (in module spectrochempy)": [[130, "spectrochempy.align", false]], "align() (nddataset method)": [[111, "spectrochempy.NDDataset.align", false]], "all() (in module spectrochempy)": [[131, "spectrochempy.all", false]], "all() (nddataset method)": [[111, "spectrochempy.NDDataset.all", false]], "allitems (project attribute)": [[120, "spectrochempy.Project.allitems", false]], "allnames (project attribute)": [[120, "spectrochempy.Project.allnames", false]], "alpha_h (nmf attribute)": [[114, "spectrochempy.NMF.alpha_H", false]], "alpha_w (nmf attribute)": [[114, "spectrochempy.NMF.alpha_W", false]], "als": [[316, "term-ALS", true]], "amax() (coord method)": [[99, "spectrochempy.Coord.amax", false]], "amax() (in module spectrochempy)": [[132, "spectrochempy.amax", false]], "amax() (nddataset method)": [[111, "spectrochempy.NDDataset.amax", false]], "amin() (coord method)": [[99, "spectrochempy.Coord.amin", false]], "amin() (in module spectrochempy)": [[133, "spectrochempy.amin", false]], "amin() (nddataset method)": [[111, "spectrochempy.NDDataset.amin", false]], "amplitude_mode (optimize attribute)": [[116, "spectrochempy.Optimize.amplitude_mode", false]], "any() (in module spectrochempy)": [[134, "spectrochempy.any", false]], "any() (nddataset method)": [[111, "spectrochempy.NDDataset.any", false]], "api": [[316, "term-API", true]], "arange() (coord method)": [[99, "spectrochempy.Coord.arange", false]], "arange() (in module spectrochempy)": [[135, "spectrochempy.arange", false]], "arange() (nddataset method)": [[111, "spectrochempy.NDDataset.arange", false]], "argmax() (in module spectrochempy)": [[136, "spectrochempy.argmax", false]], "argmax() (nddataset method)": [[111, "spectrochempy.NDDataset.argmax", false]], "argmin() (in module spectrochempy)": [[137, "spectrochempy.argmin", false]], "argmin() (nddataset method)": [[111, "spectrochempy.NDDataset.argmin", false]], "args (asymmetricvoigtmodel attribute)": [[140, "spectrochempy.asymmetricvoigtmodel.args", false]], "args (gaussianmodel attribute)": [[178, "spectrochempy.gaussianmodel.args", false]], "args (lorentzianmodel attribute)": [[200, "spectrochempy.lorentzianmodel.args", false]], "args (polynomialbaseline attribute)": [[234, "spectrochempy.polynomialbaseline.args", false]], "args (sigmoidmodel attribute)": [[277, "spectrochempy.sigmoidmodel.args", false]], "args (voigtmodel attribute)": [[300, "spectrochempy.voigtmodel.args", false]], "argsgetconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.argsGetConc", false]], "argsgetspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.argsGetSpec", false]], "around() (coord method)": [[99, "spectrochempy.Coord.around", false]], "around() (in module spectrochempy)": [[138, "spectrochempy.around", false]], "around() (nddataset method)": [[111, "spectrochempy.NDDataset.around", false]], "array-like": [[316, "term-array-like", true]], "asfortranarray() (nddataset method)": [[111, "spectrochempy.NDDataset.asfortranarray", false]], "asls": [[316, "term-AsLS", true]], "asls() (in module spectrochempy)": [[139, "spectrochempy.asls", false]], "asls() (nddataset method)": [[111, "spectrochempy.NDDataset.asls", false]], "astype() (coord method)": [[99, "spectrochempy.Coord.astype", false]], "astype() (nddataset method)": [[111, "spectrochempy.NDDataset.astype", false]], "asymmetricvoigtmodel (class in spectrochempy)": [[140, "spectrochempy.asymmetricvoigtmodel", false]], "asymmetry (baseline attribute)": [[97, "spectrochempy.Baseline.asymmetry", false]], "atleast_2d() (nddataset method)": [[111, "spectrochempy.NDDataset.atleast_2d", false]], "author (nddataset attribute)": [[111, "spectrochempy.NDDataset.author", false]], "autoampl (optimize attribute)": [[116, "spectrochempy.Optimize.autoampl", false]], "autobase (optimize attribute)": [[116, "spectrochempy.Optimize.autobase", false]], "autosub() (in module spectrochempy)": [[141, "spectrochempy.autosub", false]], "autosub() (nddataset method)": [[111, "spectrochempy.NDDataset.autosub", false]], "available_names (coordset attribute)": [[100, "spectrochempy.CoordSet.available_names", false]], "average() (in module spectrochempy)": [[142, "spectrochempy.average", false]], "average() (nddataset method)": [[111, "spectrochempy.NDDataset.average", false]], "ax (nddataset attribute)": [[111, "spectrochempy.NDDataset.ax", false]], "axec (nddataset attribute)": [[111, "spectrochempy.NDDataset.axec", false]], "axect (nddataset attribute)": [[111, "spectrochempy.NDDataset.axecT", false]], "axex (nddataset attribute)": [[111, "spectrochempy.NDDataset.axex", false]], "axey (nddataset attribute)": [[111, "spectrochempy.NDDataset.axey", false]], "axt (nddataset attribute)": [[111, "spectrochempy.NDDataset.axT", false]], "b (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.B", false]], "b_ev (efa attribute)": [[101, "spectrochempy.EFA.b_ev", false]], "bartlett() (in module spectrochempy)": [[143, "spectrochempy.bartlett", false]], "bartlett() (nddataset method)": [[111, "spectrochempy.NDDataset.bartlett", false]], "basc() (in module spectrochempy)": [[144, "spectrochempy.basc", false]], "basc() (nddataset method)": [[111, "spectrochempy.NDDataset.basc", false]], "baseline (baseline attribute)": [[97, "spectrochempy.Baseline.baseline", false]], "baseline (baselinecorrector attribute)": [[98, "spectrochempy.BaselineCorrector.baseline", false]], "baseline (class in spectrochempy)": [[97, "spectrochempy.Baseline", false]], "baselinecorrector (class in spectrochempy)": [[98, "spectrochempy.BaselineCorrector", false]], "beta_loss (nmf attribute)": [[114, "spectrochempy.NMF.beta_loss", false]], "blackmanharris() (in module spectrochempy)": [[145, "spectrochempy.blackmanharris", false]], "blackmanharris() (nddataset method)": [[111, "spectrochempy.NDDataset.blackmanharris", false]], "breakpoints (baseline attribute)": [[97, "spectrochempy.Baseline.breakpoints", false]], "c (mcrals attribute)": [[110, "spectrochempy.MCRALS.C", false]], "c (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.C", false]], "c_constrained (mcrals attribute)": [[110, "spectrochempy.MCRALS.C_constrained", false]], "c_constrained_list (mcrals attribute)": [[110, "spectrochempy.MCRALS.C_constrained_list", false]], "c_ls_list (mcrals attribute)": [[110, "spectrochempy.MCRALS.C_ls_list", false]], "callback_every (optimize attribute)": [[116, "spectrochempy.Optimize.callback_every", false]], "carroucell": [[316, "term-Carroucell", true]], "check() (quantity method)": [[121, "spectrochempy.Quantity.check", false]], "clip() (in module spectrochempy)": [[146, "spectrochempy.clip", false]], "clip() (nddataset method)": [[111, "spectrochempy.NDDataset.clip", false]], "close_figure() (nddataset method)": [[111, "spectrochempy.NDDataset.close_figure", false]], "closure": [[316, "term-closure", true]], "closureconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.closureConc", false]], "closuremethod (mcrals attribute)": [[110, "spectrochempy.MCRALS.closureMethod", false]], "closures": [[316, "term-closures", true]], "closuretarget (mcrals attribute)": [[110, "spectrochempy.MCRALS.closureTarget", false]], "coef (lstsq attribute)": [[109, "spectrochempy.LSTSQ.coef", false]], "coef (nnls attribute)": [[115, "spectrochempy.NNLS.coef", false]], "comment (nddataset attribute)": [[111, "spectrochempy.NDDataset.comment", false]], "component() (in module spectrochempy)": [[147, "spectrochempy.component", false]], "component() (nddataset method)": [[111, "spectrochempy.NDDataset.component", false]], "components (efa attribute)": [[101, "spectrochempy.EFA.components", false]], "components (fastica attribute)": [[102, "spectrochempy.FastICA.components", false]], "components (iris attribute)": [[107, "spectrochempy.IRIS.components", false]], "components (mcrals attribute)": [[110, "spectrochempy.MCRALS.components", false]], "components (nmf attribute)": [[114, "spectrochempy.NMF.components", false]], "components (optimize attribute)": [[116, "spectrochempy.Optimize.components", false]], "components (pca attribute)": [[117, "spectrochempy.PCA.components", false]], "components (plsregression attribute)": [[119, "spectrochempy.PLSRegression.components", false]], "components (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.components", false]], "components (svd attribute)": [[125, "spectrochempy.SVD.components", false]], "compute() (quantity method)": [[121, "spectrochempy.Quantity.compute", false]], "compute_uv (svd attribute)": [[125, "spectrochempy.SVD.compute_uv", false]], "concatenate() (in module spectrochempy)": [[148, "spectrochempy.concatenate", false]], "concatenate() (nddataset method)": [[111, "spectrochempy.NDDataset.concatenate", false]], "config (baseline attribute)": [[97, "spectrochempy.Baseline.config", false]], "config (efa attribute)": [[101, "spectrochempy.EFA.config", false]], "config (fastica attribute)": [[102, "spectrochempy.FastICA.config", false]], "config (filter attribute)": [[104, "spectrochempy.Filter.config", false]], "config (iris attribute)": [[107, "spectrochempy.IRIS.config", false]], "config (lstsq attribute)": [[109, "spectrochempy.LSTSQ.config", false]], "config (mcrals attribute)": [[110, "spectrochempy.MCRALS.config", false]], "config (nmf attribute)": [[114, "spectrochempy.NMF.config", false]], "config (nnls attribute)": [[115, "spectrochempy.NNLS.config", false]], "config (optimize attribute)": [[116, "spectrochempy.Optimize.config", false]], "config (pca attribute)": [[117, "spectrochempy.PCA.config", false]], "config (plsregression attribute)": [[119, "spectrochempy.PLSRegression.config", false]], "config (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.config", false]], "config (svd attribute)": [[125, "spectrochempy.SVD.config", false]], "conj() (in module spectrochempy)": [[149, "spectrochempy.conj", false]], "conj() (nddataset method)": [[111, "spectrochempy.NDDataset.conj", false]], "conjugate() (in module spectrochempy)": [[150, "spectrochempy.conjugate", false]], "conjugate() (nddataset method)": [[111, "spectrochempy.NDDataset.conjugate", false]], "constraints (optimize attribute)": [[116, "spectrochempy.Optimize.constraints", false]], "coord (class in spectrochempy)": [[99, "spectrochempy.Coord", false]], "coord() (nddataset method)": [[111, "spectrochempy.NDDataset.coord", false]], "coordmax() (in module spectrochempy)": [[151, "spectrochempy.coordmax", false]], "coordmax() (nddataset method)": [[111, "spectrochempy.NDDataset.coordmax", false]], "coordmin() (in module spectrochempy)": [[152, "spectrochempy.coordmin", false]], "coordmin() (nddataset method)": [[111, "spectrochempy.NDDataset.coordmin", false]], "coordnames (nddataset attribute)": [[111, "spectrochempy.NDDataset.coordnames", false]], "coords (coordset attribute)": [[100, "spectrochempy.CoordSet.coords", false]], "coordset (class in spectrochempy)": [[100, "spectrochempy.CoordSet", false]], "coordset (nddataset attribute)": [[111, "spectrochempy.NDDataset.coordset", false]], "coordtitles (nddataset attribute)": [[111, "spectrochempy.NDDataset.coordtitles", false]], "coordunits (nddataset attribute)": [[111, "spectrochempy.NDDataset.coordunits", false]], "copy() (coord method)": [[99, "spectrochempy.Coord.copy", false]], "copy() (coordset method)": [[100, "spectrochempy.CoordSet.copy", false]], "copy() (in module spectrochempy)": [[153, "spectrochempy.copy", false]], "copy() (nddataset method)": [[111, "spectrochempy.NDDataset.copy", false]], "copy() (project method)": [[120, "spectrochempy.Project.copy", false]], "corrected (baseline attribute)": [[97, "spectrochempy.Baseline.corrected", false]], "corrected (baselinecorrector attribute)": [[98, "spectrochempy.BaselineCorrector.corrected", false]], "created (nddataset attribute)": [[111, "spectrochempy.NDDataset.created", false]], "cs() (in module spectrochempy)": [[154, "spectrochempy.cs", false]], "cs() (nddataset method)": [[111, "spectrochempy.NDDataset.cs", false]], "cumsum() (in module spectrochempy)": [[155, "spectrochempy.cumsum", false]], "cumsum() (nddataset method)": [[111, "spectrochempy.NDDataset.cumsum", false]], "cumulative_explained_variance (svd attribute)": [[125, "spectrochempy.SVD.cumulative_explained_variance", false]], "cutoff (efa attribute)": [[101, "spectrochempy.EFA.cutoff", false]], "cval (filter attribute)": [[104, "spectrochempy.Filter.cval", false]], "data (coord attribute)": [[99, "spectrochempy.Coord.data", false]], "data (nddataset attribute)": [[111, "spectrochempy.NDDataset.data", false]], "datasets (project attribute)": [[120, "spectrochempy.Project.datasets", false]], "datasets_names (project attribute)": [[120, "spectrochempy.Project.datasets_names", false]], "dc() (in module spectrochempy)": [[156, "spectrochempy.dc", false]], "dc() (nddataset method)": [[111, "spectrochempy.NDDataset.dc", false]], "debug_() (in module spectrochempy)": [[157, "spectrochempy.debug_", false]], "default (coordset attribute)": [[100, "spectrochempy.CoordSet.default", false]], "default_format (quantity attribute)": [[121, "spectrochempy.Quantity.default_format", false]], "default_format (unit attribute)": [[127, "spectrochempy.Unit.default_format", false]], "delete_coordset() (nddataset method)": [[111, "spectrochempy.NDDataset.delete_coordset", false]], "delta (filter attribute)": [[104, "spectrochempy.Filter.delta", false]], "denoise() (in module spectrochempy)": [[158, "spectrochempy.denoise", false]], "denoise() (nddataset method)": [[111, "spectrochempy.NDDataset.denoise", false]], "deriv (filter attribute)": [[104, "spectrochempy.Filter.deriv", false]], "description (lstsq attribute)": [[109, "spectrochempy.LSTSQ.description", false]], "description (nddataset attribute)": [[111, "spectrochempy.NDDataset.description", false]], "description (nnls attribute)": [[115, "spectrochempy.NNLS.description", false]], "despike() (in module spectrochempy)": [[159, "spectrochempy.despike", false]], "despike() (nddataset method)": [[111, "spectrochempy.NDDataset.despike", false]], "detrend() (in module spectrochempy)": [[160, "spectrochempy.detrend", false]], "detrend() (nddataset method)": [[111, "spectrochempy.NDDataset.detrend", false]], "diag() (in module spectrochempy)": [[161, "spectrochempy.diag", false]], "diag() (nddataset method)": [[111, "spectrochempy.NDDataset.diag", false]], "diagonal() (in module spectrochempy)": [[162, "spectrochempy.diagonal", false]], "diagonal() (nddataset method)": [[111, "spectrochempy.NDDataset.diagonal", false]], "dimensionality (quantity attribute)": [[121, "spectrochempy.Quantity.dimensionality", false]], "dimensionality (unit attribute)": [[127, "spectrochempy.Unit.dimensionality", false]], "dimensionless (coord attribute)": [[99, "spectrochempy.Coord.dimensionless", false]], "dimensionless (nddataset attribute)": [[111, "spectrochempy.NDDataset.dimensionless", false]], "dimensionless (quantity attribute)": [[121, "spectrochempy.Quantity.dimensionless", false]], "dimensionless (unit attribute)": [[127, "spectrochempy.Unit.dimensionless", false]], "dims (nddataset attribute)": [[111, "spectrochempy.NDDataset.dims", false]], "directory (nddataset attribute)": [[111, "spectrochempy.NDDataset.directory", false]], "divider (nddataset attribute)": [[111, "spectrochempy.NDDataset.divider", false]], "dot() (in module spectrochempy)": [[163, "spectrochempy.dot", false]], "dot() (nddataset method)": [[111, "spectrochempy.NDDataset.dot", false]], "dot() (quantity method)": [[121, "spectrochempy.Quantity.dot", false]], "download_nist_ir() (in module spectrochempy)": [[164, "spectrochempy.download_nist_ir", false]], "download_nist_ir() (nddataset method)": [[111, "spectrochempy.NDDataset.download_nist_ir", false]], "dry (optimize attribute)": [[116, "spectrochempy.Optimize.dry", false]], "dtype (coord attribute)": [[99, "spectrochempy.Coord.dtype", false]], "dtype (nddataset attribute)": [[111, "spectrochempy.NDDataset.dtype", false]], "dump() (nddataset method)": [[111, "spectrochempy.NDDataset.dump", false]], "dump() (project method)": [[120, "spectrochempy.Project.dump", false]], "efa": [[316, "term-EFA", true]], "efa (class in spectrochempy)": [[101, "spectrochempy.EFA", false]], "em() (in module spectrochempy)": [[165, "spectrochempy.em", false]], "em() (nddataset method)": [[111, "spectrochempy.NDDataset.em", false]], "empty() (in module spectrochempy)": [[166, "spectrochempy.empty", false]], "empty() (nddataset method)": [[111, "spectrochempy.NDDataset.empty", false]], "empty_like() (in module spectrochempy)": [[167, "spectrochempy.empty_like", false]], "empty_like() (nddataset method)": [[111, "spectrochempy.NDDataset.empty_like", false]], "error_() (in module spectrochempy)": [[168, "spectrochempy.error_", false]], "ev (svd attribute)": [[125, "spectrochempy.SVD.ev", false]], "ev_cum (svd attribute)": [[125, "spectrochempy.SVD.ev_cum", false]], "ev_ratio (svd attribute)": [[125, "spectrochempy.SVD.ev_ratio", false]], "explained_variance (svd attribute)": [[125, "spectrochempy.SVD.explained_variance", false]], "explained_variance_ratio (svd attribute)": [[125, "spectrochempy.SVD.explained_variance_ratio", false]], "extraoutputgetconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.extraOutputGetConc", false]], "extraoutputgetspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.extraOutputGetSpec", false]], "eye() (in module spectrochempy)": [[169, "spectrochempy.eye", false]], "eye() (nddataset method)": [[111, "spectrochempy.NDDataset.eye", false]], "f_ev (efa attribute)": [[101, "spectrochempy.EFA.f_ev", false]], "fastica (class in spectrochempy)": [[102, "spectrochempy.FastICA", false]], "fft() (in module spectrochempy)": [[170, "spectrochempy.fft", false]], "fft() (nddataset method)": [[111, "spectrochempy.NDDataset.fft", false]], "fig (nddataset attribute)": [[111, "spectrochempy.NDDataset.fig", false]], "fignum (nddataset attribute)": [[111, "spectrochempy.NDDataset.fignum", false]], "filename (coord attribute)": [[99, "spectrochempy.Coord.filename", false]], "filename (nddataset attribute)": [[111, "spectrochempy.NDDataset.filename", false]], "filename (project attribute)": [[120, "spectrochempy.Project.filename", false]], "fileselector (class in spectrochempy)": [[103, "spectrochempy.FileSelector", false]], "filetype (nddataset attribute)": [[111, "spectrochempy.NDDataset.filetype", false]], "filetype (project attribute)": [[120, "spectrochempy.Project.filetype", false]], "filter (class in spectrochempy)": [[104, "spectrochempy.Filter", false]], "find_peaks() (in module spectrochempy)": [[171, "spectrochempy.find_peaks", false]], "find_peaks() (nddataset method)": [[111, "spectrochempy.NDDataset.find_peaks", false]], "fit() (baseline method)": [[97, "spectrochempy.Baseline.fit", false]], "fit() (efa method)": [[101, "spectrochempy.EFA.fit", false]], "fit() (fastica method)": [[102, "spectrochempy.FastICA.fit", false]], "fit() (iris method)": [[107, "spectrochempy.IRIS.fit", false]], "fit() (lstsq method)": [[109, "spectrochempy.LSTSQ.fit", false]], "fit() (mcrals method)": [[110, "spectrochempy.MCRALS.fit", false]], "fit() (nmf method)": [[114, "spectrochempy.NMF.fit", false]], "fit() (nnls method)": [[115, "spectrochempy.NNLS.fit", false]], "fit() (optimize method)": [[116, "spectrochempy.Optimize.fit", false]], "fit() (pca method)": [[117, "spectrochempy.PCA.fit", false]], "fit() (plsregression method)": [[119, "spectrochempy.PLSRegression.fit", false]], "fit() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.fit", false]], "fit() (svd method)": [[125, "spectrochempy.SVD.fit", false]], "fit_intercept (lstsq attribute)": [[109, "spectrochempy.LSTSQ.fit_intercept", false]], "fit_intercept (nnls attribute)": [[115, "spectrochempy.NNLS.fit_intercept", false]], "fit_to_concentrations() (actionmasskinetics method)": [[96, "spectrochempy.ActionMassKinetics.fit_to_concentrations", false]], "fit_to_gas_concentrations() (pfr method)": [[118, "spectrochempy.PFR.fit_to_gas_concentrations", false]], "fit_transform() (efa method)": [[101, "spectrochempy.EFA.fit_transform", false]], "fit_transform() (fastica method)": [[102, "spectrochempy.FastICA.fit_transform", false]], "fit_transform() (iris method)": [[107, "spectrochempy.IRIS.fit_transform", false]], "fit_transform() (mcrals method)": [[110, "spectrochempy.MCRALS.fit_transform", false]], "fit_transform() (nmf method)": [[114, "spectrochempy.NMF.fit_transform", false]], "fit_transform() (optimize method)": [[116, "spectrochempy.Optimize.fit_transform", false]], "fit_transform() (pca method)": [[117, "spectrochempy.PCA.fit_transform", false]], "fit_transform() (plsregression method)": [[119, "spectrochempy.PLSRegression.fit_transform", false]], "fit_transform() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.fit_transform", false]], "fit_transform() (svd method)": [[125, "spectrochempy.SVD.fit_transform", false]], "fp (optimize attribute)": [[116, "spectrochempy.Optimize.fp", false]], "from_() (unit method)": [[127, "spectrochempy.Unit.from_", false]], "from_list() (quantity class method)": [[121, "spectrochempy.Quantity.from_list", false]], "from_sequence() (quantity class method)": [[121, "spectrochempy.Quantity.from_sequence", false]], "fromfunction() (coord method)": [[99, "spectrochempy.Coord.fromfunction", false]], "fromfunction() (in module spectrochempy)": [[172, "spectrochempy.fromfunction", false]], "fromfunction() (nddataset method)": [[111, "spectrochempy.NDDataset.fromfunction", false]], "fromiter() (coord method)": [[99, "spectrochempy.Coord.fromiter", false]], "fromiter() (in module spectrochempy)": [[173, "spectrochempy.fromiter", false]], "fromiter() (nddataset method)": [[111, "spectrochempy.NDDataset.fromiter", false]], "fsh() (in module spectrochempy)": [[174, "spectrochempy.fsh", false]], "fsh() (nddataset method)": [[111, "spectrochempy.NDDataset.fsh", false]], "fsh2() (in module spectrochempy)": [[175, "spectrochempy.fsh2", false]], "fsh2() (nddataset method)": [[111, "spectrochempy.NDDataset.fsh2", false]], "full() (in module spectrochempy)": [[176, "spectrochempy.full", false]], "full() (nddataset method)": [[111, "spectrochempy.NDDataset.full", false]], "full_like() (in module spectrochempy)": [[177, "spectrochempy.full_like", false]], "full_like() (nddataset method)": [[111, "spectrochempy.NDDataset.full_like", false]], "full_matrices (svd attribute)": [[125, "spectrochempy.SVD.full_matrices", false]], "fun (fastica attribute)": [[102, "spectrochempy.FastICA.fun", false]], "fun_args (fastica attribute)": [[102, "spectrochempy.FastICA.fun_args", false]], "gaussianmodel (class in spectrochempy)": [[178, "spectrochempy.gaussianmodel", false]], "general_hamming() (in module spectrochempy)": [[179, "spectrochempy.general_hamming", false]], "general_hamming() (nddataset method)": [[111, "spectrochempy.NDDataset.general_hamming", false]], "geomspace() (coord method)": [[99, "spectrochempy.Coord.geomspace", false]], "geomspace() (in module spectrochempy)": [[180, "spectrochempy.geomspace", false]], "geomspace() (nddataset method)": [[111, "spectrochempy.NDDataset.geomspace", false]], "get_axis() (nddataset method)": [[111, "spectrochempy.NDDataset.get_axis", false]], "get_baseline() (in module spectrochempy)": [[181, "spectrochempy.get_baseline", false]], "get_baseline() (nddataset method)": [[111, "spectrochempy.NDDataset.get_baseline", false]], "get_components() (efa method)": [[101, "spectrochempy.EFA.get_components", false]], "get_components() (fastica method)": [[102, "spectrochempy.FastICA.get_components", false]], "get_components() (iris method)": [[107, "spectrochempy.IRIS.get_components", false]], "get_components() (mcrals method)": [[110, "spectrochempy.MCRALS.get_components", false]], "get_components() (nmf method)": [[114, "spectrochempy.NMF.get_components", false]], "get_components() (optimize method)": [[116, "spectrochempy.Optimize.get_components", false]], "get_components() (pca method)": [[117, "spectrochempy.PCA.get_components", false]], "get_components() (plsregression method)": [[119, "spectrochempy.PLSRegression.get_components", false]], "get_components() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.get_components", false]], "get_components() (svd method)": [[125, "spectrochempy.SVD.get_components", false]], "get_labels() (coord method)": [[99, "spectrochempy.Coord.get_labels", false]], "get_labels() (nddataset method)": [[111, "spectrochempy.NDDataset.get_labels", false]], "get_loglevel() (in module spectrochempy)": [[182, "spectrochempy.get_loglevel", false]], "getc_to_c_idx (mcrals attribute)": [[110, "spectrochempy.MCRALS.getC_to_C_idx", false]], "getconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.getConc", false]], "getspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.getSpec", false]], "getst_to_st_idx (mcrals attribute)": [[110, "spectrochempy.MCRALS.getSt_to_St_idx", false]], "gm() (in module spectrochempy)": [[183, "spectrochempy.gm", false]], "gm() (nddataset method)": [[111, "spectrochempy.NDDataset.gm", false]], "hamming() (in module spectrochempy)": [[184, "spectrochempy.hamming", false]], "hamming() (nddataset method)": [[111, "spectrochempy.NDDataset.hamming", false]], "hann() (in module spectrochempy)": [[185, "spectrochempy.hann", false]], "hann() (nddataset method)": [[111, "spectrochempy.NDDataset.hann", false]], "hardconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.hardConc", false]], "hardspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.hardSpec", false]], "has_complex_dims (nddataset attribute)": [[111, "spectrochempy.NDDataset.has_complex_dims", false]], "has_data (coord attribute)": [[99, "spectrochempy.Coord.has_data", false]], "has_data (nddataset attribute)": [[111, "spectrochempy.NDDataset.has_data", false]], "has_defined_name (coord attribute)": [[99, "spectrochempy.Coord.has_defined_name", false]], "has_defined_name (coordset attribute)": [[100, "spectrochempy.CoordSet.has_defined_name", false]], "has_defined_name (nddataset attribute)": [[111, "spectrochempy.NDDataset.has_defined_name", false]], "has_units (coord attribute)": [[99, "spectrochempy.Coord.has_units", false]], "has_units (nddataset attribute)": [[111, "spectrochempy.NDDataset.has_units", false]], "history (nddataset attribute)": [[111, "spectrochempy.NDDataset.history", false]], "ht() (in module spectrochempy)": [[186, "spectrochempy.ht", false]], "ht() (nddataset method)": [[111, "spectrochempy.NDDataset.ht", false]], "ica": [[316, "term-ICA", true]], "id (coord attribute)": [[99, "spectrochempy.Coord.id", false]], "id (coordset attribute)": [[100, "spectrochempy.CoordSet.id", false]], "id (nddataset attribute)": [[111, "spectrochempy.NDDataset.id", false]], "id (project attribute)": [[120, "spectrochempy.Project.id", false]], "identity() (in module spectrochempy)": [[187, "spectrochempy.identity", false]], "identity() (nddataset method)": [[111, "spectrochempy.NDDataset.identity", false]], "ifft() (in module spectrochempy)": [[188, "spectrochempy.ifft", false]], "ifft() (nddataset method)": [[111, "spectrochempy.NDDataset.ifft", false]], "ii (in module spectrochempy)": [[105, "spectrochempy.II", false]], "ii (nddataset attribute)": [[111, "spectrochempy.NDDataset.II", false]], "imag (in module spectrochempy)": [[189, "spectrochempy.imag", false]], "imag (nddataset attribute)": [[111, "spectrochempy.NDDataset.imag", false]], "include_limits (baseline attribute)": [[97, "spectrochempy.Baseline.include_limits", false]], "info_() (in module spectrochempy)": [[190, "spectrochempy.info_", false]], "init (nmf attribute)": [[114, "spectrochempy.NMF.init", false]], "init_concentrations (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.init_concentrations", false]], "integrate() (actionmasskinetics method)": [[96, "spectrochempy.ActionMassKinetics.integrate", false]], "interactive (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.interactive", false]], "intercept (lstsq attribute)": [[109, "spectrochempy.LSTSQ.intercept", false]], "intercept (nnls attribute)": [[115, "spectrochempy.NNLS.intercept", false]], "interpolate() (in module spectrochempy)": [[191, "spectrochempy.interpolate", false]], "inverse_transform() (efa method)": [[101, "spectrochempy.EFA.inverse_transform", false]], "inverse_transform() (fastica method)": [[102, "spectrochempy.FastICA.inverse_transform", false]], "inverse_transform() (iris method)": [[107, "spectrochempy.IRIS.inverse_transform", false]], "inverse_transform() (mcrals method)": [[110, "spectrochempy.MCRALS.inverse_transform", false]], "inverse_transform() (nmf method)": [[114, "spectrochempy.NMF.inverse_transform", false]], "inverse_transform() (optimize method)": [[116, "spectrochempy.Optimize.inverse_transform", false]], "inverse_transform() (pca method)": [[117, "spectrochempy.PCA.inverse_transform", false]], "inverse_transform() (plsregression method)": [[119, "spectrochempy.PLSRegression.inverse_transform", false]], "inverse_transform() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.inverse_transform", false]], "inverse_transform() (svd method)": [[125, "spectrochempy.SVD.inverse_transform", false]], "ir (in module spectrochempy)": [[106, "spectrochempy.IR", false]], "ir (nddataset attribute)": [[111, "spectrochempy.NDDataset.IR", false]], "iris (class in spectrochempy)": [[107, "spectrochempy.IRIS", false]], "iriskernel (class in spectrochempy)": [[108, "spectrochempy.IrisKernel", false]], "is_1d (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_1d", false]], "is_compatible_with() (quantity method)": [[121, "spectrochempy.Quantity.is_compatible_with", false]], "is_compatible_with() (unit method)": [[127, "spectrochempy.Unit.is_compatible_with", false]], "is_complex (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_complex", false]], "is_empty (coord attribute)": [[99, "spectrochempy.Coord.is_empty", false]], "is_empty (coordset attribute)": [[100, "spectrochempy.CoordSet.is_empty", false]], "is_empty (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_empty", false]], "is_float (coord attribute)": [[99, "spectrochempy.Coord.is_float", false]], "is_float (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_float", false]], "is_integer (coord attribute)": [[99, "spectrochempy.Coord.is_integer", false]], "is_integer (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_integer", false]], "is_interleaved (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_interleaved", false]], "is_labeled (coord attribute)": [[99, "spectrochempy.Coord.is_labeled", false]], "is_labeled (coordset attribute)": [[100, "spectrochempy.CoordSet.is_labeled", false]], "is_labeled (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_labeled", false]], "is_masked (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_masked", false]], "is_quaternion (nddataset attribute)": [[111, "spectrochempy.NDDataset.is_quaternion", false]], "is_same_dim (coordset attribute)": [[100, "spectrochempy.CoordSet.is_same_dim", false]], "is_units_compatible() (coord method)": [[99, "spectrochempy.Coord.is_units_compatible", false]], "is_units_compatible() (in module spectrochempy)": [[192, "spectrochempy.is_units_compatible", false]], "is_units_compatible() (nddataset method)": [[111, "spectrochempy.NDDataset.is_units_compatible", false]], "iterated_power (pca attribute)": [[117, "spectrochempy.PCA.iterated_power", false]], "ito() (coord method)": [[99, "spectrochempy.Coord.ito", false]], "ito() (in module spectrochempy)": [[193, "spectrochempy.ito", false]], "ito() (nddataset method)": [[111, "spectrochempy.NDDataset.ito", false]], "ito() (quantity method)": [[121, "spectrochempy.Quantity.ito", false]], "ito_base_units() (coord method)": [[99, "spectrochempy.Coord.ito_base_units", false]], "ito_base_units() (in module spectrochempy)": [[194, "spectrochempy.ito_base_units", false]], "ito_base_units() (nddataset method)": [[111, "spectrochempy.NDDataset.ito_base_units", false]], "ito_base_units() (quantity method)": [[121, "spectrochempy.Quantity.ito_base_units", false]], "ito_preferred() (quantity method)": [[121, "spectrochempy.Quantity.ito_preferred", false]], "ito_reduced_units() (coord method)": [[99, "spectrochempy.Coord.ito_reduced_units", false]], "ito_reduced_units() (in module spectrochempy)": [[195, "spectrochempy.ito_reduced_units", false]], "ito_reduced_units() (nddataset method)": [[111, "spectrochempy.NDDataset.ito_reduced_units", false]], "ito_reduced_units() (quantity method)": [[121, "spectrochempy.Quantity.ito_reduced_units", false]], "ito_root_units() (quantity method)": [[121, "spectrochempy.Quantity.ito_root_units", false]], "keys() (coordset method)": [[100, "spectrochempy.CoordSet.keys", false]], "kwargsgetconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.kwargsGetConc", false]], "kwargsgetspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.kwargsGetSpec", false]], "l1_ratio (nmf attribute)": [[114, "spectrochempy.NMF.l1_ratio", false]], "labels (coord attribute)": [[99, "spectrochempy.Coord.labels", false]], "labels (coordset attribute)": [[100, "spectrochempy.CoordSet.labels", false]], "labels (nddataset attribute)": [[111, "spectrochempy.NDDataset.labels", false]], "lamb (baseline attribute)": [[97, "spectrochempy.Baseline.lamb", false]], "lamb (filter attribute)": [[104, "spectrochempy.Filter.lamb", false]], "larmor (coord attribute)": [[99, "spectrochempy.Coord.larmor", false]], "laser_frequency (coord attribute)": [[99, "spectrochempy.Coord.laser_frequency", false]], "limits (coord attribute)": [[99, "spectrochempy.Coord.limits", false]], "limits (nddataset attribute)": [[111, "spectrochempy.NDDataset.limits", false]], "linear (coord attribute)": [[99, "spectrochempy.Coord.linear", false]], "linearize() (coord method)": [[99, "spectrochempy.Coord.linearize", false]], "linspace() (coord method)": [[99, "spectrochempy.Coord.linspace", false]], "linspace() (in module spectrochempy)": [[196, "spectrochempy.linspace", false]], "linspace() (nddataset method)": [[111, "spectrochempy.NDDataset.linspace", false]], "lls (baseline attribute)": [[97, "spectrochempy.Baseline.lls", false]], "load() (in module spectrochempy)": [[197, "spectrochempy.load", false]], "load() (nddataset class method)": [[111, "spectrochempy.NDDataset.load", false]], "load() (project class method)": [[120, "spectrochempy.Project.load", false]], "load_iris() (in module spectrochempy)": [[198, "spectrochempy.load_iris", false]], "load_iris() (nddataset method)": [[111, "spectrochempy.NDDataset.load_iris", false]], "loading": [[316, "term-loading", true]], "loadings": [[316, "term-loadings", true]], "loadings (pca attribute)": [[117, "spectrochempy.PCA.loadings", false]], "loads() (nddataset class method)": [[111, "spectrochempy.NDDataset.loads", false]], "loads() (project class method)": [[120, "spectrochempy.Project.loads", false]], "loc2index() (coord method)": [[99, "spectrochempy.Coord.loc2index", false]], "local_timezone (nddataset attribute)": [[111, "spectrochempy.NDDataset.local_timezone", false]], "log (baseline attribute)": [[97, "spectrochempy.Baseline.log", false]], "log (efa attribute)": [[101, "spectrochempy.EFA.log", false]], "log (fastica attribute)": [[102, "spectrochempy.FastICA.log", false]], "log (filter attribute)": [[104, "spectrochempy.Filter.log", false]], "log (iris attribute)": [[107, "spectrochempy.IRIS.log", false]], "log (lstsq attribute)": [[109, "spectrochempy.LSTSQ.log", false]], "log (mcrals attribute)": [[110, "spectrochempy.MCRALS.log", false]], "log (nmf attribute)": [[114, "spectrochempy.NMF.log", false]], "log (nnls attribute)": [[115, "spectrochempy.NNLS.log", false]], "log (optimize attribute)": [[116, "spectrochempy.Optimize.log", false]], "log (pca attribute)": [[117, "spectrochempy.PCA.log", false]], "log (plsregression attribute)": [[119, "spectrochempy.PLSRegression.log", false]], "log (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.log", false]], "log (svd attribute)": [[125, "spectrochempy.SVD.log", false]], "logspace() (coord method)": [[99, "spectrochempy.Coord.logspace", false]], "logspace() (in module spectrochempy)": [[199, "spectrochempy.logspace", false]], "logspace() (nddataset method)": [[111, "spectrochempy.NDDataset.logspace", false]], "lorentzianmodel (class in spectrochempy)": [[200, "spectrochempy.lorentzianmodel", false]], "ls() (in module spectrochempy)": [[201, "spectrochempy.ls", false]], "ls() (nddataset method)": [[111, "spectrochempy.NDDataset.ls", false]], "lstsq (class in spectrochempy)": [[109, "spectrochempy.LSTSQ", false]], "m (coord attribute)": [[99, "spectrochempy.Coord.m", false]], "m (nddataset attribute)": [[111, "spectrochempy.NDDataset.m", false]], "m (quantity attribute)": [[121, "spectrochempy.Quantity.m", false]], "m_as() (quantity method)": [[121, "spectrochempy.Quantity.m_as", false]], "m_from() (unit method)": [[127, "spectrochempy.Unit.m_from", false]], "magnitude (coord attribute)": [[99, "spectrochempy.Coord.magnitude", false]], "magnitude (nddataset attribute)": [[111, "spectrochempy.NDDataset.magnitude", false]], "magnitude (quantity attribute)": [[121, "spectrochempy.Quantity.magnitude", false]], "mask (nddataset attribute)": [[111, "spectrochempy.NDDataset.mask", false]], "masked_data (nddataset attribute)": [[111, "spectrochempy.NDDataset.masked_data", false]], "max() (coord method)": [[99, "spectrochempy.Coord.max", false]], "max() (in module spectrochempy)": [[202, "spectrochempy.max", false]], "max() (nddataset method)": [[111, "spectrochempy.NDDataset.max", false]], "max_fun_calls (optimize attribute)": [[116, "spectrochempy.Optimize.max_fun_calls", false]], "max_iter (baseline attribute)": [[97, "spectrochempy.Baseline.max_iter", false]], "max_iter (fastica attribute)": [[102, "spectrochempy.FastICA.max_iter", false]], "max_iter (mcrals attribute)": [[110, "spectrochempy.MCRALS.max_iter", false]], "max_iter (nmf attribute)": [[114, "spectrochempy.NMF.max_iter", false]], "max_iter (optimize attribute)": [[116, "spectrochempy.Optimize.max_iter", false]], "max_iter (plsregression attribute)": [[119, "spectrochempy.PLSRegression.max_iter", false]], "maxdiv (mcrals attribute)": [[110, "spectrochempy.MCRALS.maxdiv", false]], "mc() (in module spectrochempy)": [[203, "spectrochempy.mc", false]], "mc() (nddataset method)": [[111, "spectrochempy.NDDataset.mc", false]], "mcr-als": [[316, "term-MCR-ALS", true]], "mcrals (class in spectrochempy)": [[110, "spectrochempy.MCRALS", false]], "mean (fastica attribute)": [[102, "spectrochempy.FastICA.mean", false]], "mean() (in module spectrochempy)": [[204, "spectrochempy.mean", false]], "mean() (nddataset method)": [[111, "spectrochempy.NDDataset.mean", false]], "meta (coord attribute)": [[99, "spectrochempy.Coord.meta", false]], "meta (nddataset attribute)": [[111, "spectrochempy.NDDataset.meta", false]], "meta (project attribute)": [[120, "spectrochempy.Project.meta", false]], "method (filter attribute)": [[104, "spectrochempy.Filter.method", false]], "method (optimize attribute)": [[116, "spectrochempy.Optimize.method", false]], "min() (coord method)": [[99, "spectrochempy.Coord.min", false]], "min() (in module spectrochempy)": [[205, "spectrochempy.min", false]], "min() (nddataset method)": [[111, "spectrochempy.NDDataset.min", false]], "mixing (fastica attribute)": [[102, "spectrochempy.FastICA.mixing", false]], "mode (filter attribute)": [[104, "spectrochempy.Filter.mode", false]], "model (baseline attribute)": [[97, "spectrochempy.Baseline.model", false]], "modeldata (nddataset attribute)": [[111, "spectrochempy.NDDataset.modeldata", false]], "modeldata (optimize attribute)": [[116, "spectrochempy.Optimize.modeldata", false]], "modified (nddataset attribute)": [[111, "spectrochempy.NDDataset.modified", false]], "monodecconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.monoDecConc", false]], "monodectol (mcrals attribute)": [[110, "spectrochempy.MCRALS.monoDecTol", false]], "monoincconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.monoIncConc", false]], "monoinctol (mcrals attribute)": [[110, "spectrochempy.MCRALS.monoIncTol", false]], "multiplot() (in module spectrochempy)": [[206, "spectrochempy.multiplot", false]], "multiplot_image() (in module spectrochempy)": [[207, "spectrochempy.multiplot_image", false]], "multiplot_lines() (in module spectrochempy)": [[208, "spectrochempy.multiplot_lines", false]], "multiplot_map() (in module spectrochempy)": [[209, "spectrochempy.multiplot_map", false]], "multiplot_scatter() (in module spectrochempy)": [[210, "spectrochempy.multiplot_scatter", false]], "multiplot_stack() (in module spectrochempy)": [[211, "spectrochempy.multiplot_stack", false]], "multiplot_with_transposed() (in module spectrochempy)": [[212, "spectrochempy.multiplot_with_transposed", false]], "multivariate (baseline attribute)": [[97, "spectrochempy.Baseline.multivariate", false]], "n_components": [[316, "term-n_components", true]], "n_components (baseline attribute)": [[97, "spectrochempy.Baseline.n_components", false]], "n_components (efa attribute)": [[101, "spectrochempy.EFA.n_components", false]], "n_components (fastica attribute)": [[102, "spectrochempy.FastICA.n_components", false]], "n_components (iris attribute)": [[107, "spectrochempy.IRIS.n_components", false]], "n_components (mcrals attribute)": [[110, "spectrochempy.MCRALS.n_components", false]], "n_components (nmf attribute)": [[114, "spectrochempy.NMF.n_components", false]], "n_components (optimize attribute)": [[116, "spectrochempy.Optimize.n_components", false]], "n_components (pca attribute)": [[117, "spectrochempy.PCA.n_components", false]], "n_components (plsregression attribute)": [[119, "spectrochempy.PLSRegression.n_components", false]], "n_components (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.n_components", false]], "n_components (svd attribute)": [[125, "spectrochempy.SVD.n_components", false]], "n_features": [[316, "term-n_features", true]], "n_iter (fastica attribute)": [[102, "spectrochempy.FastICA.n_iter", false]], "n_observations": [[316, "term-n_observations", true]], "n_oversamples (pca attribute)": [[117, "spectrochempy.PCA.n_oversamples", false]], "n_reactions (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.n_reactions", false]], "n_species (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.n_species", false]], "n_targets": [[316, "term-n_targets", true]], "name (baseline attribute)": [[97, "spectrochempy.Baseline.name", false]], "name (coord attribute)": [[99, "spectrochempy.Coord.name", false]], "name (efa attribute)": [[101, "spectrochempy.EFA.name", false]], "name (fastica attribute)": [[102, "spectrochempy.FastICA.name", false]], "name (filter attribute)": [[104, "spectrochempy.Filter.name", false]], "name (iris attribute)": [[107, "spectrochempy.IRIS.name", false]], "name (lstsq attribute)": [[109, "spectrochempy.LSTSQ.name", false]], "name (mcrals attribute)": [[110, "spectrochempy.MCRALS.name", false]], "name (nddataset attribute)": [[111, "spectrochempy.NDDataset.name", false]], "name (nmf attribute)": [[114, "spectrochempy.NMF.name", false]], "name (nnls attribute)": [[115, "spectrochempy.NNLS.name", false]], "name (optimize attribute)": [[116, "spectrochempy.Optimize.name", false]], "name (pca attribute)": [[117, "spectrochempy.PCA.name", false]], "name (plsregression attribute)": [[119, "spectrochempy.PLSRegression.name", false]], "name (project attribute)": [[120, "spectrochempy.Project.name", false]], "name (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.name", false]], "name (svd attribute)": [[125, "spectrochempy.SVD.name", false]], "names (coordset attribute)": [[100, "spectrochempy.CoordSet.names", false]], "ndaxes (nddataset attribute)": [[111, "spectrochempy.NDDataset.ndaxes", false]], "nddataset (class in spectrochempy)": [[111, "spectrochempy.NDDataset", false]], "ndim (nddataset attribute)": [[111, "spectrochempy.NDDataset.ndim", false]], "nmf": [[316, "term-NMF", true]], "nmf (class in spectrochempy)": [[114, "spectrochempy.NMF", false]], "nnls (class in spectrochempy)": [[115, "spectrochempy.NNLS", false]], "noise (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.noise", false]], "nonnegconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.nonnegConc", false]], "nonnegspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.nonnegSpec", false]], "normspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.normSpec", false]], "ones() (in module spectrochempy)": [[213, "spectrochempy.ones", false]], "ones() (nddataset method)": [[111, "spectrochempy.NDDataset.ones", false]], "ones_like() (in module spectrochempy)": [[214, "spectrochempy.ones_like", false]], "ones_like() (nddataset method)": [[111, "spectrochempy.NDDataset.ones_like", false]], "optimize (class in spectrochempy)": [[116, "spectrochempy.Optimize", false]], "order (baseline attribute)": [[97, "spectrochempy.Baseline.order", false]], "order (filter attribute)": [[104, "spectrochempy.Filter.order", false]], "origin (nddataset attribute)": [[111, "spectrochempy.NDDataset.origin", false]], "original (baselinecorrector attribute)": [[98, "spectrochempy.BaselineCorrector.original", false]], "parameters() (baseline method)": [[97, "spectrochempy.Baseline.parameters", false]], "parameters() (efa method)": [[101, "spectrochempy.EFA.parameters", false]], "parameters() (fastica method)": [[102, "spectrochempy.FastICA.parameters", false]], "parameters() (filter method)": [[104, "spectrochempy.Filter.parameters", false]], "parameters() (iris method)": [[107, "spectrochempy.IRIS.parameters", false]], "parameters() (lstsq method)": [[109, "spectrochempy.LSTSQ.parameters", false]], "parameters() (mcrals method)": [[110, "spectrochempy.MCRALS.parameters", false]], "parameters() (nmf method)": [[114, "spectrochempy.NMF.parameters", false]], "parameters() (nnls method)": [[115, "spectrochempy.NNLS.parameters", false]], "parameters() (optimize method)": [[116, "spectrochempy.Optimize.parameters", false]], "parameters() (pca method)": [[117, "spectrochempy.PCA.parameters", false]], "parameters() (plsregression method)": [[119, "spectrochempy.PLSRegression.parameters", false]], "parameters() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.parameters", false]], "parameters() (svd method)": [[125, "spectrochempy.SVD.parameters", false]], "params() (baseline method)": [[97, "spectrochempy.Baseline.params", false]], "params() (efa method)": [[101, "spectrochempy.EFA.params", false]], "params() (fastica method)": [[102, "spectrochempy.FastICA.params", false]], "params() (filter method)": [[104, "spectrochempy.Filter.params", false]], "params() (iris method)": [[107, "spectrochempy.IRIS.params", false]], "params() (lstsq method)": [[109, "spectrochempy.LSTSQ.params", false]], "params() (mcrals method)": [[110, "spectrochempy.MCRALS.params", false]], "params() (nmf method)": [[114, "spectrochempy.NMF.params", false]], "params() (nnls method)": [[115, "spectrochempy.NNLS.params", false]], "params() (optimize method)": [[116, "spectrochempy.Optimize.params", false]], "params() (pca method)": [[117, "spectrochempy.PCA.params", false]], "params() (plsregression method)": [[119, "spectrochempy.PLSRegression.params", false]], "params() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.params", false]], "params() (svd method)": [[125, "spectrochempy.SVD.params", false]], "parent (nddataset attribute)": [[111, "spectrochempy.NDDataset.parent", false]], "parent (project attribute)": [[120, "spectrochempy.Project.parent", false]], "parityplot() (plsregression method)": [[119, "spectrochempy.PLSRegression.parityplot", false]], "pathclean() (in module spectrochempy)": [[215, "spectrochempy.pathclean", false]], "pca": [[316, "term-PCA", true]], "pca (class in spectrochempy)": [[117, "spectrochempy.PCA", false]], "pep 8#imports": [[9, "index-0", false]], "persist() (quantity method)": [[121, "spectrochempy.Quantity.persist", false]], "pfr (class in spectrochempy)": [[118, "spectrochempy.PFR", false]], "pipe() (in module spectrochempy)": [[216, "spectrochempy.pipe", false]], "pipe() (nddataset method)": [[111, "spectrochempy.NDDataset.pipe", false]], "pk() (in module spectrochempy)": [[217, "spectrochempy.pk", false]], "pk() (nddataset method)": [[111, "spectrochempy.NDDataset.pk", false]], "pk_exp() (in module spectrochempy)": [[218, "spectrochempy.pk_exp", false]], "pk_exp() (nddataset method)": [[111, "spectrochempy.NDDataset.pk_exp", false]], "plot() (baseline method)": [[97, "spectrochempy.Baseline.plot", false]], "plot() (in module spectrochempy)": [[219, "spectrochempy.plot", false]], "plot() (nddataset method)": [[111, "spectrochempy.NDDataset.plot", false]], "plot_1d() (in module spectrochempy)": [[220, "spectrochempy.plot_1D", false]], "plot_1d() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_1D", false]], "plot_2d() (in module spectrochempy)": [[221, "spectrochempy.plot_2D", false]], "plot_2d() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_2D", false]], "plot_3d() (in module spectrochempy)": [[222, "spectrochempy.plot_3D", false]], "plot_3d() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_3D", false]], "plot_bar() (in module spectrochempy)": [[223, "spectrochempy.plot_bar", false]], "plot_bar() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_bar", false]], "plot_image() (in module spectrochempy)": [[224, "spectrochempy.plot_image", false]], "plot_image() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_image", false]], "plot_map() (in module spectrochempy)": [[225, "spectrochempy.plot_map", false]], "plot_map() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_map", false]], "plot_multiple() (in module spectrochempy)": [[226, "spectrochempy.plot_multiple", false]], "plot_multiple() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_multiple", false]], "plot_pen() (in module spectrochempy)": [[227, "spectrochempy.plot_pen", false]], "plot_pen() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_pen", false]], "plot_scatter() (in module spectrochempy)": [[228, "spectrochempy.plot_scatter", false]], "plot_scatter() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_scatter", false]], "plot_scatter_pen() (in module spectrochempy)": [[229, "spectrochempy.plot_scatter_pen", false]], "plot_scatter_pen() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_scatter_pen", false]], "plot_stack() (in module spectrochempy)": [[230, "spectrochempy.plot_stack", false]], "plot_stack() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_stack", false]], "plot_surface() (in module spectrochempy)": [[231, "spectrochempy.plot_surface", false]], "plot_surface() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_surface", false]], "plot_waterfall() (in module spectrochempy)": [[232, "spectrochempy.plot_waterfall", false]], "plot_waterfall() (nddataset method)": [[111, "spectrochempy.NDDataset.plot_waterfall", false]], "plot_with_transposed() (in module spectrochempy)": [[233, "spectrochempy.plot_with_transposed", false]], "plotdistribution() (iris method)": [[107, "spectrochempy.IRIS.plotdistribution", false]], "plotlcurve() (iris method)": [[107, "spectrochempy.IRIS.plotlcurve", false]], "plotmerit() (efa method)": [[101, "spectrochempy.EFA.plotmerit", false]], "plotmerit() (fastica method)": [[102, "spectrochempy.FastICA.plotmerit", false]], "plotmerit() (iris method)": [[107, "spectrochempy.IRIS.plotmerit", false]], "plotmerit() (mcrals method)": [[110, "spectrochempy.MCRALS.plotmerit", false]], "plotmerit() (nmf method)": [[114, "spectrochempy.NMF.plotmerit", false]], "plotmerit() (optimize method)": [[116, "spectrochempy.Optimize.plotmerit", false]], "plotmerit() (pca method)": [[117, "spectrochempy.PCA.plotmerit", false]], "plotmerit() (plsregression method)": [[119, "spectrochempy.PLSRegression.plotmerit", false]], "plotmerit() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.plotmerit", false]], "plotmerit() (svd method)": [[125, "spectrochempy.SVD.plotmerit", false]], "pls": [[316, "term-PLS", true]], "plsregression (class in spectrochempy)": [[119, "spectrochempy.PLSRegression", false]], "polynomialbaseline (class in spectrochempy)": [[234, "spectrochempy.polynomialbaseline", false]], "positive (lstsq attribute)": [[109, "spectrochempy.LSTSQ.positive", false]], "positive (nnls attribute)": [[115, "spectrochempy.NNLS.positive", false]], "power_iteration_normalizer (pca attribute)": [[117, "spectrochempy.PCA.power_iteration_normalizer", false]], "predict() (lstsq method)": [[109, "spectrochempy.LSTSQ.predict", false]], "predict() (nnls method)": [[115, "spectrochempy.NNLS.predict", false]], "predict() (optimize method)": [[116, "spectrochempy.Optimize.predict", false]], "predict() (plsregression method)": [[119, "spectrochempy.PLSRegression.predict", false]], "preferences (nddataset attribute)": [[111, "spectrochempy.NDDataset.preferences", false]], "printev() (pca method)": [[117, "spectrochempy.PCA.printev", false]], "prod() (quantity method)": [[121, "spectrochempy.Quantity.prod", false]], "project (class in spectrochempy)": [[120, "spectrochempy.Project", false]], "projects (project attribute)": [[120, "spectrochempy.Project.projects", false]], "projects_names (project attribute)": [[120, "spectrochempy.Project.projects_names", false]], "ps() (in module spectrochempy)": [[235, "spectrochempy.ps", false]], "ps() (nddataset method)": [[111, "spectrochempy.NDDataset.ps", false]], "pt (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.Pt", false]], "ptp() (coord method)": [[99, "spectrochempy.Coord.ptp", false]], "ptp() (in module spectrochempy)": [[236, "spectrochempy.ptp", false]], "ptp() (nddataset method)": [[111, "spectrochempy.NDDataset.ptp", false]], "python enhancement proposals": [[9, "index-0", false]], "qpsolver (iris attribute)": [[107, "spectrochempy.IRIS.qpsolver", false]], "qsin() (in module spectrochempy)": [[237, "spectrochempy.qsin", false]], "qsin() (nddataset method)": [[111, "spectrochempy.NDDataset.qsin", false]], "quantity (class in spectrochempy)": [[121, "spectrochempy.Quantity", false]], "random() (in module spectrochempy)": [[238, "spectrochempy.random", false]], "random() (nddataset method)": [[111, "spectrochempy.NDDataset.random", false]], "random_state (fastica attribute)": [[102, "spectrochempy.FastICA.random_state", false]], "random_state (nmf attribute)": [[114, "spectrochempy.NMF.random_state", false]], "random_state (pca attribute)": [[117, "spectrochempy.PCA.random_state", false]], "ranges (baseline attribute)": [[97, "spectrochempy.Baseline.ranges", false]], "rank": [[316, "term-rank", true]], "read() (in module spectrochempy)": [[239, "spectrochempy.read", false]], "read() (nddataset method)": [[111, "spectrochempy.NDDataset.read", false]], "read_carroucell() (in module spectrochempy)": [[240, "spectrochempy.read_carroucell", false]], "read_carroucell() (nddataset method)": [[111, "spectrochempy.NDDataset.read_carroucell", false]], "read_csv() (in module spectrochempy)": [[241, "spectrochempy.read_csv", false]], "read_csv() (nddataset method)": [[111, "spectrochempy.NDDataset.read_csv", false]], "read_ddr() (in module spectrochempy)": [[242, "spectrochempy.read_ddr", false]], "read_ddr() (nddataset method)": [[111, "spectrochempy.NDDataset.read_ddr", false]], "read_dir() (in module spectrochempy)": [[243, "spectrochempy.read_dir", false]], "read_dir() (nddataset method)": [[111, "spectrochempy.NDDataset.read_dir", false]], "read_hdr() (in module spectrochempy)": [[244, "spectrochempy.read_hdr", false]], "read_hdr() (nddataset method)": [[111, "spectrochempy.NDDataset.read_hdr", false]], "read_jcamp() (in module spectrochempy)": [[245, "spectrochempy.read_jcamp", false]], "read_jcamp() (nddataset method)": [[111, "spectrochempy.NDDataset.read_jcamp", false]], "read_labspec() (in module spectrochempy)": [[246, "spectrochempy.read_labspec", false]], "read_labspec() (nddataset method)": [[111, "spectrochempy.NDDataset.read_labspec", false]], "read_mat() (in module spectrochempy)": [[247, "spectrochempy.read_mat", false]], "read_mat() (nddataset method)": [[111, "spectrochempy.NDDataset.read_mat", false]], "read_matlab() (in module spectrochempy)": [[248, "spectrochempy.read_matlab", false]], "read_matlab() (nddataset method)": [[111, "spectrochempy.NDDataset.read_matlab", false]], "read_omnic() (in module spectrochempy)": [[249, "spectrochempy.read_omnic", false]], "read_omnic() (nddataset method)": [[111, "spectrochempy.NDDataset.read_omnic", false]], "read_opus() (in module spectrochempy)": [[250, "spectrochempy.read_opus", false]], "read_opus() (nddataset method)": [[111, "spectrochempy.NDDataset.read_opus", false]], "read_quadera() (in module spectrochempy)": [[251, "spectrochempy.read_quadera", false]], "read_quadera() (nddataset method)": [[111, "spectrochempy.NDDataset.read_quadera", false]], "read_sdr() (in module spectrochempy)": [[252, "spectrochempy.read_sdr", false]], "read_sdr() (nddataset method)": [[111, "spectrochempy.NDDataset.read_sdr", false]], "read_soc() (in module spectrochempy)": [[253, "spectrochempy.read_soc", false]], "read_soc() (nddataset method)": [[111, "spectrochempy.NDDataset.read_soc", false]], "read_spa() (in module spectrochempy)": [[254, "spectrochempy.read_spa", false]], "read_spa() (nddataset method)": [[111, "spectrochempy.NDDataset.read_spa", false]], "read_spc() (in module spectrochempy)": [[255, "spectrochempy.read_spc", false]], "read_spc() (nddataset method)": [[111, "spectrochempy.NDDataset.read_spc", false]], "read_spg() (in module spectrochempy)": [[256, "spectrochempy.read_spg", false]], "read_spg() (nddataset method)": [[111, "spectrochempy.NDDataset.read_spg", false]], "read_srs() (in module spectrochempy)": [[257, "spectrochempy.read_srs", false]], "read_srs() (nddataset method)": [[111, "spectrochempy.NDDataset.read_srs", false]], "read_topspin() (in module spectrochempy)": [[258, "spectrochempy.read_topspin", false]], "read_topspin() (nddataset method)": [[111, "spectrochempy.NDDataset.read_topspin", false]], "read_wdf() (in module spectrochempy)": [[259, "spectrochempy.read_wdf", false]], "read_wdf() (nddataset method)": [[111, "spectrochempy.NDDataset.read_wdf", false]], "read_wire() (in module spectrochempy)": [[260, "spectrochempy.read_wire", false]], "read_wire() (nddataset method)": [[111, "spectrochempy.NDDataset.read_wire", false]], "read_zip() (in module spectrochempy)": [[261, "spectrochempy.read_zip", false]], "read_zip() (nddataset method)": [[111, "spectrochempy.NDDataset.read_zip", false]], "real (in module spectrochempy)": [[262, "spectrochempy.real", false]], "real (nddataset attribute)": [[111, "spectrochempy.NDDataset.real", false]], "reconstruct() (efa method)": [[101, "spectrochempy.EFA.reconstruct", false]], "reconstruct() (fastica method)": [[102, "spectrochempy.FastICA.reconstruct", false]], "reconstruct() (iris method)": [[107, "spectrochempy.IRIS.reconstruct", false]], "reconstruct() (mcrals method)": [[110, "spectrochempy.MCRALS.reconstruct", false]], "reconstruct() (nmf method)": [[114, "spectrochempy.NMF.reconstruct", false]], "reconstruct() (optimize method)": [[116, "spectrochempy.Optimize.reconstruct", false]], "reconstruct() (pca method)": [[117, "spectrochempy.PCA.reconstruct", false]], "reconstruct() (plsregression method)": [[119, "spectrochempy.PLSRegression.reconstruct", false]], "reconstruct() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.reconstruct", false]], "reconstruct() (svd method)": [[125, "spectrochempy.SVD.reconstruct", false]], "reduce() (efa method)": [[101, "spectrochempy.EFA.reduce", false]], "reduce() (fastica method)": [[102, "spectrochempy.FastICA.reduce", false]], "reduce() (iris method)": [[107, "spectrochempy.IRIS.reduce", false]], "reduce() (mcrals method)": [[110, "spectrochempy.MCRALS.reduce", false]], "reduce() (nmf method)": [[114, "spectrochempy.NMF.reduce", false]], "reduce() (optimize method)": [[116, "spectrochempy.Optimize.reduce", false]], "reduce() (pca method)": [[117, "spectrochempy.PCA.reduce", false]], "reduce() (plsregression method)": [[119, "spectrochempy.PLSRegression.reduce", false]], "reduce() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.reduce", false]], "reduce() (svd method)": [[125, "spectrochempy.SVD.reduce", false]], "reg_par (iris attribute)": [[107, "spectrochempy.IRIS.reg_par", false]], "regularization": [[316, "term-regularization", true]], "remove_all_dataset() (project method)": [[120, "spectrochempy.Project.remove_all_dataset", false]], "remove_all_project() (project method)": [[120, "spectrochempy.Project.remove_all_project", false]], "remove_dataset() (project method)": [[120, "spectrochempy.Project.remove_dataset", false]], "remove_masks() (in module spectrochempy)": [[263, "spectrochempy.remove_masks", false]], "remove_masks() (nddataset method)": [[111, "spectrochempy.NDDataset.remove_masks", false]], "remove_project() (project method)": [[120, "spectrochempy.Project.remove_project", false]], "reset() (baseline method)": [[97, "spectrochempy.Baseline.reset", false]], "reset() (efa method)": [[101, "spectrochempy.EFA.reset", false]], "reset() (fastica method)": [[102, "spectrochempy.FastICA.reset", false]], "reset() (filter method)": [[104, "spectrochempy.Filter.reset", false]], "reset() (iris method)": [[107, "spectrochempy.IRIS.reset", false]], "reset() (lstsq method)": [[109, "spectrochempy.LSTSQ.reset", false]], "reset() (mcrals method)": [[110, "spectrochempy.MCRALS.reset", false]], "reset() (nmf method)": [[114, "spectrochempy.NMF.reset", false]], "reset() (nnls method)": [[115, "spectrochempy.NNLS.reset", false]], "reset() (optimize method)": [[116, "spectrochempy.Optimize.reset", false]], "reset() (pca method)": [[117, "spectrochempy.PCA.reset", false]], "reset() (plsregression method)": [[119, "spectrochempy.PLSRegression.reset", false]], "reset() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.reset", false]], "reset() (svd method)": [[125, "spectrochempy.SVD.reset", false]], "reversed (coord attribute)": [[99, "spectrochempy.Coord.reversed", false]], "ri (in module spectrochempy)": [[122, "spectrochempy.RI", false]], "ri (nddataset attribute)": [[111, "spectrochempy.NDDataset.RI", false]], "roi (coord attribute)": [[99, "spectrochempy.Coord.roi", false]], "roi (nddataset attribute)": [[111, "spectrochempy.NDDataset.roi", false]], "roll() (in module spectrochempy)": [[264, "spectrochempy.roll", false]], "roll() (nddataset method)": [[111, "spectrochempy.NDDataset.roll", false]], "round() (coord method)": [[99, "spectrochempy.Coord.round", false]], "round() (in module spectrochempy)": [[265, "spectrochempy.round", false]], "round() (nddataset method)": [[111, "spectrochempy.NDDataset.round", false]], "round_() (coord method)": [[99, "spectrochempy.Coord.round_", false]], "round_() (nddataset method)": [[111, "spectrochempy.NDDataset.round_", false]], "rr (in module spectrochempy)": [[123, "spectrochempy.RR", false]], "rr (nddataset attribute)": [[111, "spectrochempy.NDDataset.RR", false]], "rs() (in module spectrochempy)": [[266, "spectrochempy.rs", false]], "rs() (nddataset method)": [[111, "spectrochempy.NDDataset.rs", false]], "rubberband() (nddataset method)": [[111, "spectrochempy.NDDataset.rubberband", false]], "run_all_scripts() (in module spectrochempy)": [[267, "spectrochempy.run_all_scripts", false]], "run_script() (in module spectrochempy)": [[268, "spectrochempy.run_script", false]], "s (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.s", false]], "s (svd attribute)": [[125, "spectrochempy.SVD.s", false]], "s_soft (mcrals attribute)": [[110, "spectrochempy.MCRALS.S_soft", false]], "save() (nddataset method)": [[111, "spectrochempy.NDDataset.save", false]], "save() (project method)": [[120, "spectrochempy.Project.save", false]], "save_as() (nddataset method)": [[111, "spectrochempy.NDDataset.save_as", false]], "save_as() (project method)": [[120, "spectrochempy.Project.save_as", false]], "savgol() (in module spectrochempy)": [[269, "spectrochempy.savgol", false]], "savgol() (nddataset method)": [[111, "spectrochempy.NDDataset.savgol", false]], "savgol_filter() (nddataset method)": [[111, "spectrochempy.NDDataset.savgol_filter", false]], "scale (plsregression attribute)": [[119, "spectrochempy.PLSRegression.scale", false]], "scaled (pca attribute)": [[117, "spectrochempy.PCA.scaled", false]], "score": [[316, "term-score", true]], "score() (lstsq method)": [[109, "spectrochempy.LSTSQ.score", false]], "score() (nnls method)": [[115, "spectrochempy.NNLS.score", false]], "score() (plsregression method)": [[119, "spectrochempy.PLSRegression.score", false]], "scoreplot() (pca method)": [[117, "spectrochempy.PCA.scoreplot", false]], "scores": [[316, "term-scores", true]], "scores (pca attribute)": [[117, "spectrochempy.PCA.scores", false]], "screeplot() (pca method)": [[117, "spectrochempy.PCA.screeplot", false]], "script (asymmetricvoigtmodel attribute)": [[140, "spectrochempy.asymmetricvoigtmodel.script", false]], "script (class in spectrochempy)": [[126, "spectrochempy.Script", false]], "script (gaussianmodel attribute)": [[178, "spectrochempy.gaussianmodel.script", false]], "script (lorentzianmodel attribute)": [[200, "spectrochempy.lorentzianmodel.script", false]], "script (optimize attribute)": [[116, "spectrochempy.Optimize.script", false]], "script (polynomialbaseline attribute)": [[234, "spectrochempy.polynomialbaseline.script", false]], "script (sigmoidmodel attribute)": [[277, "spectrochempy.sigmoidmodel.script", false]], "script (voigtmodel attribute)": [[300, "spectrochempy.voigtmodel.script", false]], "scripts (project attribute)": [[120, "spectrochempy.Project.scripts", false]], "scripts_names (project attribute)": [[120, "spectrochempy.Project.scripts_names", false]], "select() (coordset method)": [[100, "spectrochempy.CoordSet.select", false]], "set() (coordset method)": [[100, "spectrochempy.CoordSet.set", false]], "set_complex() (in module spectrochempy)": [[270, "spectrochempy.set_complex", false]], "set_complex() (nddataset method)": [[111, "spectrochempy.NDDataset.set_complex", false]], "set_coordset() (nddataset method)": [[111, "spectrochempy.NDDataset.set_coordset", false]], "set_coordtitles() (nddataset method)": [[111, "spectrochempy.NDDataset.set_coordtitles", false]], "set_coordunits() (nddataset method)": [[111, "spectrochempy.NDDataset.set_coordunits", false]], "set_hypercomplex() (in module spectrochempy)": [[271, "spectrochempy.set_hypercomplex", false]], "set_hypercomplex() (nddataset method)": [[111, "spectrochempy.NDDataset.set_hypercomplex", false]], "set_laser_frequency() (coord method)": [[99, "spectrochempy.Coord.set_laser_frequency", false]], "set_loglevel() (in module spectrochempy)": [[272, "spectrochempy.set_loglevel", false]], "set_nmr_context() (in module spectrochempy)": [[273, "spectrochempy.set_nmr_context", false]], "set_quaternion() (in module spectrochempy)": [[274, "spectrochempy.set_quaternion", false]], "set_quaternion() (nddataset method)": [[111, "spectrochempy.NDDataset.set_quaternion", false]], "set_titles() (coordset method)": [[100, "spectrochempy.CoordSet.set_titles", false]], "set_units() (coordset method)": [[100, "spectrochempy.CoordSet.set_units", false]], "shape (coord attribute)": [[99, "spectrochempy.Coord.shape", false]], "shape (nddataset attribute)": [[111, "spectrochempy.NDDataset.shape", false]], "show() (in module spectrochempy)": [[275, "spectrochempy.show", false]], "show_datapoints (coord attribute)": [[99, "spectrochempy.Coord.show_datapoints", false]], "show_versions() (in module spectrochempy)": [[276, "spectrochempy.show_versions", false]], "shuffle (nmf attribute)": [[114, "spectrochempy.NMF.shuffle", false]], "sigdigits (coord attribute)": [[99, "spectrochempy.Coord.sigdigits", false]], "sigmoidmodel (class in spectrochempy)": [[277, "spectrochempy.sigmoidmodel", false]], "simplisma (class in spectrochempy)": [[124, "spectrochempy.SIMPLISMA", false]], "simps() (nddataset method)": [[111, "spectrochempy.NDDataset.simps", false]], "simpson() (in module spectrochempy)": [[278, "spectrochempy.simpson", false]], "simpson() (nddataset method)": [[111, "spectrochempy.NDDataset.simpson", false]], "sine() (in module spectrochempy)": [[279, "spectrochempy.sine", false]], "sine() (nddataset method)": [[111, "spectrochempy.NDDataset.sine", false]], "singular_values (svd attribute)": [[125, "spectrochempy.SVD.singular_values", false]], "sinm() (in module spectrochempy)": [[280, "spectrochempy.sinm", false]], "sinm() (nddataset method)": [[111, "spectrochempy.NDDataset.sinm", false]], "size (coord attribute)": [[99, "spectrochempy.Coord.size", false]], "size (coordset attribute)": [[100, "spectrochempy.CoordSet.size", false]], "size (filter attribute)": [[104, "spectrochempy.Filter.size", false]], "size (nddataset attribute)": [[111, "spectrochempy.NDDataset.size", false]], "sizes (coordset attribute)": [[100, "spectrochempy.CoordSet.sizes", false]], "smooth() (in module spectrochempy)": [[281, "spectrochempy.smooth", false]], "smooth() (nddataset method)": [[111, "spectrochempy.NDDataset.smooth", false]], "snip() (in module spectrochempy)": [[282, "spectrochempy.snip", false]], "snip() (nddataset method)": [[111, "spectrochempy.NDDataset.snip", false]], "snip_width (baseline attribute)": [[97, "spectrochempy.Baseline.snip_width", false]], "solver (nmf attribute)": [[114, "spectrochempy.NMF.solver", false]], "solverconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.solverConc", false]], "solverspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.solverSpec", false]], "sort() (in module spectrochempy)": [[283, "spectrochempy.sort", false]], "sort() (nddataset method)": [[111, "spectrochempy.NDDataset.sort", false]], "sp() (in module spectrochempy)": [[284, "spectrochempy.sp", false]], "sp() (nddataset method)": [[111, "spectrochempy.NDDataset.sp", false]], "spacing (coord attribute)": [[99, "spectrochempy.Coord.spacing", false]], "species (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.species", false]], "squeeze() (in module spectrochempy)": [[285, "spectrochempy.squeeze", false]], "squeeze() (nddataset method)": [[111, "spectrochempy.NDDataset.squeeze", false]], "st (fastica attribute)": [[102, "spectrochempy.FastICA.St", false]], "st (mcrals attribute)": [[110, "spectrochempy.MCRALS.St", false]], "st (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.St", false]], "st_constrained_list (mcrals attribute)": [[110, "spectrochempy.MCRALS.St_constrained_list", false]], "st_ls (mcrals attribute)": [[110, "spectrochempy.MCRALS.St_ls", false]], "st_ls_list (mcrals attribute)": [[110, "spectrochempy.MCRALS.St_ls_list", false]], "st_unconstrained (mcrals attribute)": [[110, "spectrochempy.MCRALS.St_unconstrained", false]], "stack() (in module spectrochempy)": [[286, "spectrochempy.stack", false]], "stack() (nddataset method)": [[111, "spectrochempy.NDDataset.stack", false]], "standardized (pca attribute)": [[117, "spectrochempy.PCA.standardized", false]], "std() (in module spectrochempy)": [[287, "spectrochempy.std", false]], "std() (nddataset method)": [[111, "spectrochempy.NDDataset.std", false]], "storeiterations (mcrals attribute)": [[110, "spectrochempy.MCRALS.storeIterations", false]], "suffix (nddataset attribute)": [[111, "spectrochempy.NDDataset.suffix", false]], "suffix (project attribute)": [[120, "spectrochempy.Project.suffix", false]], "sum() (in module spectrochempy)": [[288, "spectrochempy.sum", false]], "sum() (nddataset method)": [[111, "spectrochempy.NDDataset.sum", false]], "sv (svd attribute)": [[125, "spectrochempy.SVD.sv", false]], "svd": [[316, "term-SVD", true]], "svd (class in spectrochempy)": [[125, "spectrochempy.SVD", false]], "svd_solver (pca attribute)": [[117, "spectrochempy.PCA.svd_solver", false]], "swapaxes() (nddataset method)": [[111, "spectrochempy.NDDataset.swapaxes", false]], "swapdims() (in module spectrochempy)": [[289, "spectrochempy.swapdims", false]], "swapdims() (nddataset method)": [[111, "spectrochempy.NDDataset.swapdims", false]], "t (nddataset attribute)": [[111, "spectrochempy.NDDataset.T", false]], "take() (in module spectrochempy)": [[290, "spectrochempy.take", false]], "take() (nddataset method)": [[111, "spectrochempy.NDDataset.take", false]], "timezone (nddataset attribute)": [[111, "spectrochempy.NDDataset.timezone", false]], "title (coord attribute)": [[99, "spectrochempy.Coord.title", false]], "title (nddataset attribute)": [[111, "spectrochempy.NDDataset.title", false]], "titles (coordset attribute)": [[100, "spectrochempy.CoordSet.titles", false]], "to() (coord method)": [[99, "spectrochempy.Coord.to", false]], "to() (in module spectrochempy)": [[291, "spectrochempy.to", false]], "to() (nddataset method)": [[111, "spectrochempy.NDDataset.to", false]], "to() (quantity method)": [[121, "spectrochempy.Quantity.to", false]], "to_array() (in module spectrochempy)": [[292, "spectrochempy.to_array", false]], "to_array() (nddataset method)": [[111, "spectrochempy.NDDataset.to_array", false]], "to_base_units() (coord method)": [[99, "spectrochempy.Coord.to_base_units", false]], "to_base_units() (in module spectrochempy)": [[293, "spectrochempy.to_base_units", false]], "to_base_units() (nddataset method)": [[111, "spectrochempy.NDDataset.to_base_units", false]], "to_base_units() (quantity method)": [[121, "spectrochempy.Quantity.to_base_units", false]], "to_compact() (quantity method)": [[121, "spectrochempy.Quantity.to_compact", false]], "to_dict() (baseline method)": [[97, "spectrochempy.Baseline.to_dict", false]], "to_dict() (coordset method)": [[100, "spectrochempy.CoordSet.to_dict", false]], "to_dict() (efa method)": [[101, "spectrochempy.EFA.to_dict", false]], "to_dict() (fastica method)": [[102, "spectrochempy.FastICA.to_dict", false]], "to_dict() (filter method)": [[104, "spectrochempy.Filter.to_dict", false]], "to_dict() (iris method)": [[107, "spectrochempy.IRIS.to_dict", false]], "to_dict() (lstsq method)": [[109, "spectrochempy.LSTSQ.to_dict", false]], "to_dict() (mcrals method)": [[110, "spectrochempy.MCRALS.to_dict", false]], "to_dict() (nmf method)": [[114, "spectrochempy.NMF.to_dict", false]], "to_dict() (nnls method)": [[115, "spectrochempy.NNLS.to_dict", false]], "to_dict() (optimize method)": [[116, "spectrochempy.Optimize.to_dict", false]], "to_dict() (pca method)": [[117, "spectrochempy.PCA.to_dict", false]], "to_dict() (plsregression method)": [[119, "spectrochempy.PLSRegression.to_dict", false]], "to_dict() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.to_dict", false]], "to_dict() (svd method)": [[125, "spectrochempy.SVD.to_dict", false]], "to_preferred() (quantity method)": [[121, "spectrochempy.Quantity.to_preferred", false]], "to_reduced_units() (coord method)": [[99, "spectrochempy.Coord.to_reduced_units", false]], "to_reduced_units() (in module spectrochempy)": [[294, "spectrochempy.to_reduced_units", false]], "to_reduced_units() (nddataset method)": [[111, "spectrochempy.NDDataset.to_reduced_units", false]], "to_reduced_units() (quantity method)": [[121, "spectrochempy.Quantity.to_reduced_units", false]], "to_root_units() (quantity method)": [[121, "spectrochempy.Quantity.to_root_units", false]], "to_xarray() (in module spectrochempy)": [[295, "spectrochempy.to_xarray", false]], "to_xarray() (nddataset method)": [[111, "spectrochempy.NDDataset.to_xarray", false]], "tol (baseline attribute)": [[97, "spectrochempy.Baseline.tol", false]], "tol (fastica attribute)": [[102, "spectrochempy.FastICA.tol", false]], "tol (mcrals attribute)": [[110, "spectrochempy.MCRALS.tol", false]], "tol (nmf attribute)": [[114, "spectrochempy.NMF.tol", false]], "tol (pca attribute)": [[117, "spectrochempy.PCA.tol", false]], "tol (plsregression attribute)": [[119, "spectrochempy.PLSRegression.tol", false]], "tol (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.tol", false]], "transform() (baseline method)": [[97, "spectrochempy.Baseline.transform", false]], "transform() (efa method)": [[101, "spectrochempy.EFA.transform", false]], "transform() (fastica method)": [[102, "spectrochempy.FastICA.transform", false]], "transform() (filter method)": [[104, "spectrochempy.Filter.transform", false]], "transform() (iris method)": [[107, "spectrochempy.IRIS.transform", false]], "transform() (mcrals method)": [[110, "spectrochempy.MCRALS.transform", false]], "transform() (nmf method)": [[114, "spectrochempy.NMF.transform", false]], "transform() (optimize method)": [[116, "spectrochempy.Optimize.transform", false]], "transform() (pca method)": [[117, "spectrochempy.PCA.transform", false]], "transform() (plsregression method)": [[119, "spectrochempy.PLSRegression.transform", false]], "transform() (simplisma method)": [[124, "spectrochempy.SIMPLISMA.transform", false]], "transform() (svd method)": [[125, "spectrochempy.SVD.transform", false]], "transpose() (in module spectrochempy)": [[296, "spectrochempy.transpose", false]], "transpose() (nddataset method)": [[111, "spectrochempy.NDDataset.transpose", false]], "trapezoid() (in module spectrochempy)": [[297, "spectrochempy.trapezoid", false]], "trapezoid() (nddataset method)": [[111, "spectrochempy.NDDataset.trapezoid", false]], "trapz() (nddataset method)": [[111, "spectrochempy.NDDataset.trapz", false]], "triang() (in module spectrochempy)": [[298, "spectrochempy.triang", false]], "triang() (nddataset method)": [[111, "spectrochempy.NDDataset.triang", false]], "type (asymmetricvoigtmodel attribute)": [[140, "spectrochempy.asymmetricvoigtmodel.type", false]], "type (gaussianmodel attribute)": [[178, "spectrochempy.gaussianmodel.type", false]], "type (lorentzianmodel attribute)": [[200, "spectrochempy.lorentzianmodel.type", false]], "type (polynomialbaseline attribute)": [[234, "spectrochempy.polynomialbaseline.type", false]], "type (sigmoidmodel attribute)": [[277, "spectrochempy.sigmoidmodel.type", false]], "type (voigtmodel attribute)": [[300, "spectrochempy.voigtmodel.type", false]], "u (quantity attribute)": [[121, "spectrochempy.Quantity.u", false]], "u (svd attribute)": [[125, "spectrochempy.SVD.U", false]], "umasked_data (coord attribute)": [[99, "spectrochempy.Coord.umasked_data", false]], "umasked_data (nddataset attribute)": [[111, "spectrochempy.NDDataset.umasked_data", false]], "unimodality": [[316, "term-unimodality", true]], "unimodconc (mcrals attribute)": [[110, "spectrochempy.MCRALS.unimodConc", false]], "unimodconcmod (mcrals attribute)": [[110, "spectrochempy.MCRALS.unimodConcMod", false]], "unimodconctol (mcrals attribute)": [[110, "spectrochempy.MCRALS.unimodConcTol", false]], "unimodspec (mcrals attribute)": [[110, "spectrochempy.MCRALS.unimodSpec", false]], "unimodspecmod (mcrals attribute)": [[110, "spectrochempy.MCRALS.unimodSpecMod", false]], "unimodspectol (mcrals attribute)": [[110, "spectrochempy.MCRALS.unimodSpecTol", false]], "unit (class in spectrochempy)": [[127, "spectrochempy.Unit", false]], "unit_items() (quantity method)": [[121, "spectrochempy.Quantity.unit_items", false]], "unitless (coord attribute)": [[99, "spectrochempy.Coord.unitless", false]], "unitless (nddataset attribute)": [[111, "spectrochempy.NDDataset.unitless", false]], "unitless (quantity attribute)": [[121, "spectrochempy.Quantity.unitless", false]], "units (coord attribute)": [[99, "spectrochempy.Coord.units", false]], "units (coordset attribute)": [[100, "spectrochempy.CoordSet.units", false]], "units (nddataset attribute)": [[111, "spectrochempy.NDDataset.units", false]], "units (quantity attribute)": [[121, "spectrochempy.Quantity.units", false]], "update() (coordset method)": [[100, "spectrochempy.CoordSet.update", false]], "used_ranges (baseline attribute)": [[97, "spectrochempy.Baseline.used_ranges", false]], "usermodels (optimize attribute)": [[116, "spectrochempy.Optimize.usermodels", false]], "value (coord attribute)": [[99, "spectrochempy.Coord.value", false]], "value (nddataset attribute)": [[111, "spectrochempy.NDDataset.value", false]], "values (coord attribute)": [[99, "spectrochempy.Coord.values", false]], "values (nddataset attribute)": [[111, "spectrochempy.NDDataset.values", false]], "var() (in module spectrochempy)": [[299, "spectrochempy.var", false]], "var() (nddataset method)": [[111, "spectrochempy.NDDataset.var", false]], "visualize() (quantity method)": [[121, "spectrochempy.Quantity.visualize", false]], "voigtmodel (class in spectrochempy)": [[300, "spectrochempy.voigtmodel", false]], "vt (svd attribute)": [[125, "spectrochempy.SVD.VT", false]], "w_init (fastica attribute)": [[102, "spectrochempy.FastICA.w_init", false]], "warning_() (in module spectrochempy)": [[301, "spectrochempy.warning_", false]], "whiten (fastica attribute)": [[102, "spectrochempy.FastICA.whiten", false]], "whiten (pca attribute)": [[117, "spectrochempy.PCA.whiten", false]], "whiten_solver (fastica attribute)": [[102, "spectrochempy.FastICA.whiten_solver", false]], "whitening (fastica attribute)": [[102, "spectrochempy.FastICA.whitening", false]], "whittaker() (in module spectrochempy)": [[302, "spectrochempy.whittaker", false]], "whittaker() (nddataset method)": [[111, "spectrochempy.NDDataset.whittaker", false]], "write() (in module spectrochempy)": [[303, "spectrochempy.write", false]], "write() (nddataset method)": [[111, "spectrochempy.NDDataset.write", false]], "write_csv() (in module spectrochempy)": [[304, "spectrochempy.write_csv", false]], "write_csv() (nddataset method)": [[111, "spectrochempy.NDDataset.write_csv", false]], "write_excel() (in module spectrochempy)": [[305, "spectrochempy.write_excel", false]], "write_excel() (nddataset method)": [[111, "spectrochempy.NDDataset.write_excel", false]], "write_jcamp() (in module spectrochempy)": [[306, "spectrochempy.write_jcamp", false]], "write_jcamp() (nddataset method)": [[111, "spectrochempy.NDDataset.write_jcamp", false]], "write_mat() (in module spectrochempy)": [[307, "spectrochempy.write_mat", false]], "write_mat() (nddataset method)": [[111, "spectrochempy.NDDataset.write_mat", false]], "write_matlab() (in module spectrochempy)": [[308, "spectrochempy.write_matlab", false]], "write_matlab() (nddataset method)": [[111, "spectrochempy.NDDataset.write_matlab", false]], "write_xls() (in module spectrochempy)": [[309, "spectrochempy.write_xls", false]], "write_xls() (nddataset method)": [[111, "spectrochempy.NDDataset.write_xls", false]], "x (baseline attribute)": [[97, "spectrochempy.Baseline.X", false]], "x (efa attribute)": [[101, "spectrochempy.EFA.X", false]], "x (fastica attribute)": [[102, "spectrochempy.FastICA.X", false]], "x (iris attribute)": [[107, "spectrochempy.IRIS.X", false]], "x (lstsq attribute)": [[109, "spectrochempy.LSTSQ.X", false]], "x (mcrals attribute)": [[110, "spectrochempy.MCRALS.X", false]], "x (nmf attribute)": [[114, "spectrochempy.NMF.X", false]], "x (nnls attribute)": [[115, "spectrochempy.NNLS.X", false]], "x (optimize attribute)": [[116, "spectrochempy.Optimize.X", false]], "x (pca attribute)": [[117, "spectrochempy.PCA.X", false]], "x (plsregression attribute)": [[119, "spectrochempy.PLSRegression.X", false]], "x (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.X", false]], "x (svd attribute)": [[125, "spectrochempy.SVD.X", false]], "y (efa attribute)": [[101, "spectrochempy.EFA.Y", false]], "y (fastica attribute)": [[102, "spectrochempy.FastICA.Y", false]], "y (iris attribute)": [[107, "spectrochempy.IRIS.Y", false]], "y (lstsq attribute)": [[109, "spectrochempy.LSTSQ.Y", false]], "y (mcrals attribute)": [[110, "spectrochempy.MCRALS.Y", false]], "y (nmf attribute)": [[114, "spectrochempy.NMF.Y", false]], "y (nnls attribute)": [[115, "spectrochempy.NNLS.Y", false]], "y (optimize attribute)": [[116, "spectrochempy.Optimize.Y", false]], "y (pca attribute)": [[117, "spectrochempy.PCA.Y", false]], "y (plsregression attribute)": [[119, "spectrochempy.PLSRegression.Y", false]], "y (simplisma attribute)": [[124, "spectrochempy.SIMPLISMA.Y", false]], "y (svd attribute)": [[125, "spectrochempy.SVD.Y", false]], "zeros() (in module spectrochempy)": [[310, "spectrochempy.zeros", false]], "zeros() (nddataset method)": [[111, "spectrochempy.NDDataset.zeros", false]], "zeros_like() (in module spectrochempy)": [[311, "spectrochempy.zeros_like", false]], "zeros_like() (nddataset method)": [[111, "spectrochempy.NDDataset.zeros_like", false]], "zf() (in module spectrochempy)": [[312, "spectrochempy.zf", false]], "zf() (nddataset method)": [[111, "spectrochempy.NDDataset.zf", false]], "zf_auto() (in module spectrochempy)": [[313, "spectrochempy.zf_auto", false]], "zf_auto() (nddataset method)": [[111, "spectrochempy.NDDataset.zf_auto", false]], "zf_double() (in module spectrochempy)": [[314, "spectrochempy.zf_double", false]], "zf_double() (nddataset method)": [[111, "spectrochempy.NDDataset.zf_double", false]], "zf_size() (in module spectrochempy)": [[315, "spectrochempy.zf_size", false]], "zf_size() (nddataset method)": [[111, "spectrochempy.NDDataset.zf_size", false]]}, "objects": {"spectrochempy": [[96, 0, 1, "", "ActionMassKinetics"], [97, 0, 1, "", "Baseline"], [98, 0, 1, "", "BaselineCorrector"], [99, 0, 1, "", "Coord"], [100, 0, 1, "", "CoordSet"], [101, 0, 1, "", "EFA"], [102, 0, 1, "", "FastICA"], [103, 0, 1, "", "FileSelector"], [104, 0, 1, "", "Filter"], [105, 3, 1, "", "II"], [106, 3, 1, "", "IR"], [107, 0, 1, "", "IRIS"], [108, 0, 1, "", "IrisKernel"], [109, 0, 1, "", "LSTSQ"], [110, 0, 1, "", "MCRALS"], [111, 0, 1, "", "NDDataset"], [114, 0, 1, "", "NMF"], [115, 0, 1, "", "NNLS"], [116, 0, 1, "", "Optimize"], [117, 0, 1, "", "PCA"], [118, 0, 1, "", "PFR"], [119, 0, 1, "", "PLSRegression"], [120, 0, 1, "", "Project"], [121, 0, 1, "", "Quantity"], [122, 3, 1, "", "RI"], [123, 3, 1, "", "RR"], [124, 0, 1, "", "SIMPLISMA"], [125, 0, 1, "", "SVD"], [126, 0, 1, "", "Script"], [127, 0, 1, "", "Unit"], [128, 4, 1, "", "abs"], [129, 4, 1, "", "absolute"], [130, 4, 1, "", "align"], [131, 4, 1, "", "all"], [132, 4, 1, "", "amax"], [133, 4, 1, "", "amin"], [134, 4, 1, "", "any"], [135, 4, 1, "", "arange"], [136, 4, 1, "", "argmax"], [137, 4, 1, "", "argmin"], [138, 4, 1, "", "around"], [139, 4, 1, "", "asls"], [140, 0, 1, "", "asymmetricvoigtmodel"], [141, 4, 1, "", "autosub"], [142, 4, 1, "", "average"], [143, 4, 1, "", "bartlett"], [144, 4, 1, "", "basc"], [145, 4, 1, "", "blackmanharris"], [146, 4, 1, "", "clip"], [147, 4, 1, "", "component"], [148, 4, 1, "", "concatenate"], [149, 4, 1, "", "conj"], [150, 4, 1, "", "conjugate"], [151, 4, 1, "", "coordmax"], [152, 4, 1, "", "coordmin"], [153, 4, 1, "", "copy"], [154, 4, 1, "", "cs"], [155, 4, 1, "", "cumsum"], [156, 4, 1, "", "dc"], [157, 4, 1, "", "debug_"], [158, 4, 1, "", "denoise"], [159, 4, 1, "", "despike"], [160, 4, 1, "", "detrend"], [161, 4, 1, "", "diag"], [162, 4, 1, "", "diagonal"], [163, 4, 1, "", "dot"], [164, 4, 1, "", "download_nist_ir"], [165, 4, 1, "", "em"], [166, 4, 1, "", "empty"], [167, 4, 1, "", "empty_like"], [168, 4, 1, "", "error_"], [169, 4, 1, "", "eye"], [170, 4, 1, "", "fft"], [171, 4, 1, "", "find_peaks"], [172, 4, 1, "", "fromfunction"], [173, 4, 1, "", "fromiter"], [174, 4, 1, "", "fsh"], [175, 4, 1, "", "fsh2"], [176, 4, 1, "", "full"], [177, 4, 1, "", "full_like"], [178, 0, 1, "", "gaussianmodel"], [179, 4, 1, "", "general_hamming"], [180, 4, 1, "", "geomspace"], [181, 4, 1, "", "get_baseline"], [182, 4, 1, "", "get_loglevel"], [183, 4, 1, "", "gm"], [184, 4, 1, "", "hamming"], [185, 4, 1, "", "hann"], [186, 4, 1, "", "ht"], [187, 4, 1, "", "identity"], [188, 4, 1, "", "ifft"], [189, 3, 1, "", "imag"], [190, 4, 1, "", "info_"], [191, 4, 1, "", "interpolate"], [192, 4, 1, "", "is_units_compatible"], [193, 4, 1, "", "ito"], [194, 4, 1, "", "ito_base_units"], [195, 4, 1, "", "ito_reduced_units"], [196, 4, 1, "", "linspace"], [197, 4, 1, "", "load"], [198, 4, 1, "", "load_iris"], [199, 4, 1, "", "logspace"], [200, 0, 1, "", "lorentzianmodel"], [201, 4, 1, "", "ls"], [202, 4, 1, "", "max"], [203, 4, 1, "", "mc"], [204, 4, 1, "", "mean"], [205, 4, 1, "", "min"], [206, 4, 1, "", "multiplot"], [207, 4, 1, "", "multiplot_image"], [208, 4, 1, "", "multiplot_lines"], [209, 4, 1, "", "multiplot_map"], [210, 4, 1, "", "multiplot_scatter"], [211, 4, 1, "", "multiplot_stack"], [212, 4, 1, "", "multiplot_with_transposed"], [213, 4, 1, "", "ones"], [214, 4, 1, "", "ones_like"], [215, 4, 1, "", "pathclean"], [216, 4, 1, "", "pipe"], [217, 4, 1, "", "pk"], [218, 4, 1, "", "pk_exp"], [219, 4, 1, "", "plot"], [220, 4, 1, "", "plot_1D"], [221, 4, 1, "", "plot_2D"], [222, 4, 1, "", "plot_3D"], [223, 4, 1, "", "plot_bar"], [224, 4, 1, "", "plot_image"], [225, 4, 1, "", "plot_map"], [226, 4, 1, "", "plot_multiple"], [227, 4, 1, "", "plot_pen"], [228, 4, 1, "", "plot_scatter"], [229, 4, 1, "", "plot_scatter_pen"], [230, 4, 1, "", "plot_stack"], [231, 4, 1, "", "plot_surface"], [232, 4, 1, "", "plot_waterfall"], [233, 4, 1, "", "plot_with_transposed"], [234, 0, 1, "", "polynomialbaseline"], [235, 4, 1, "", "ps"], [236, 4, 1, "", "ptp"], [237, 4, 1, "", "qsin"], [238, 4, 1, "", "random"], [239, 4, 1, "", "read"], [240, 4, 1, "", "read_carroucell"], [241, 4, 1, "", "read_csv"], [242, 4, 1, "", "read_ddr"], [243, 4, 1, "", "read_dir"], [244, 4, 1, "", "read_hdr"], [245, 4, 1, "", "read_jcamp"], [246, 4, 1, "", "read_labspec"], [247, 4, 1, "", "read_mat"], [248, 4, 1, "", "read_matlab"], [249, 4, 1, "", "read_omnic"], [250, 4, 1, "", "read_opus"], [251, 4, 1, "", "read_quadera"], [252, 4, 1, "", "read_sdr"], [253, 4, 1, "", "read_soc"], [254, 4, 1, "", "read_spa"], [255, 4, 1, "", "read_spc"], [256, 4, 1, "", "read_spg"], [257, 4, 1, "", "read_srs"], [258, 4, 1, "", "read_topspin"], [259, 4, 1, "", "read_wdf"], [260, 4, 1, "", "read_wire"], [261, 4, 1, "", "read_zip"], [262, 3, 1, "", "real"], [263, 4, 1, "", "remove_masks"], [264, 4, 1, "", "roll"], [265, 4, 1, "", "round"], [266, 4, 1, "", "rs"], [267, 4, 1, "", "run_all_scripts"], [268, 4, 1, "", "run_script"], [269, 4, 1, "", "savgol"], [270, 4, 1, "", "set_complex"], [271, 4, 1, "", "set_hypercomplex"], [272, 4, 1, "", "set_loglevel"], [273, 4, 1, "", "set_nmr_context"], [274, 4, 1, "", "set_quaternion"], [275, 4, 1, "", "show"], [276, 4, 1, "", "show_versions"], [277, 0, 1, "", "sigmoidmodel"], [278, 4, 1, "", "simpson"], [279, 4, 1, "", "sine"], [280, 4, 1, "", "sinm"], [281, 4, 1, "", "smooth"], [282, 4, 1, "", "snip"], [283, 4, 1, "", "sort"], [284, 4, 1, "", "sp"], [285, 4, 1, "", "squeeze"], [286, 4, 1, "", "stack"], [287, 4, 1, "", "std"], [288, 4, 1, "", "sum"], [289, 4, 1, "", "swapdims"], [290, 4, 1, "", "take"], [291, 4, 1, "", "to"], [292, 4, 1, "", "to_array"], [293, 4, 1, "", "to_base_units"], [294, 4, 1, "", "to_reduced_units"], [295, 4, 1, "", "to_xarray"], [296, 4, 1, "", "transpose"], [297, 4, 1, "", "trapezoid"], [298, 4, 1, "", "triang"], [299, 4, 1, "", "var"], [300, 0, 1, "", "voigtmodel"], [301, 4, 1, "", "warning_"], [302, 4, 1, "", "whittaker"], [303, 4, 1, "", "write"], [304, 4, 1, "", "write_csv"], [305, 4, 1, "", "write_excel"], [306, 4, 1, "", "write_jcamp"], [307, 4, 1, "", "write_mat"], [308, 4, 1, "", "write_matlab"], [309, 4, 1, "", "write_xls"], [310, 4, 1, "", "zeros"], [311, 4, 1, "", "zeros_like"], [312, 4, 1, "", "zf"], [313, 4, 1, "", "zf_auto"], [314, 4, 1, "", "zf_double"], [315, 4, 1, "", "zf_size"]], "spectrochempy.ActionMassKinetics": [[96, 1, 1, "", "A"], [96, 1, 1, "", "B"], [96, 2, 1, "", "fit_to_concentrations"], [96, 1, 1, "", "init_concentrations"], [96, 2, 1, "", "integrate"], [96, 1, 1, "", "n_reactions"], [96, 1, 1, "", "n_species"], [96, 1, 1, "", "species"]], "spectrochempy.Baseline": [[97, 1, 1, "", "X"], [97, 1, 1, "", "asymmetry"], [97, 1, 1, "", "baseline"], [97, 1, 1, "", "breakpoints"], [97, 1, 1, "", "config"], [97, 1, 1, "", "corrected"], [97, 2, 1, "", "fit"], [97, 1, 1, "", "include_limits"], [97, 1, 1, "", "lamb"], [97, 1, 1, "", "lls"], [97, 1, 1, "", "log"], [97, 1, 1, "", "max_iter"], [97, 1, 1, "", "model"], [97, 1, 1, "", "multivariate"], [97, 1, 1, "", "n_components"], [97, 1, 1, "", "name"], [97, 1, 1, "", "order"], [97, 2, 1, "", "parameters"], [97, 2, 1, "", "params"], [97, 2, 1, "", "plot"], [97, 1, 1, "", "ranges"], [97, 2, 1, "", "reset"], [97, 1, 1, "", "snip_width"], [97, 2, 1, "", "to_dict"], [97, 1, 1, "", "tol"], [97, 2, 1, "", "transform"], [97, 1, 1, "", "used_ranges"]], "spectrochempy.BaselineCorrector": [[98, 1, 1, "", "baseline"], [98, 1, 1, "", "corrected"], [98, 1, 1, "", "original"]], "spectrochempy.Coord": [[99, 2, 1, "", "amax"], [99, 2, 1, "", "amin"], [99, 2, 1, "", "arange"], [99, 2, 1, "", "around"], [99, 2, 1, "", "astype"], [99, 2, 1, "", "copy"], [99, 1, 1, "", "data"], [99, 1, 1, "", "dimensionless"], [99, 1, 1, "", "dtype"], [99, 1, 1, "", "filename"], [99, 2, 1, "", "fromfunction"], [99, 2, 1, "", "fromiter"], [99, 2, 1, "", "geomspace"], [99, 2, 1, "", "get_labels"], [99, 1, 1, "", "has_data"], [99, 1, 1, "", "has_defined_name"], [99, 1, 1, "", "has_units"], [99, 1, 1, "", "id"], [99, 1, 1, "", "is_empty"], [99, 1, 1, "", "is_float"], [99, 1, 1, "", "is_integer"], [99, 1, 1, "", "is_labeled"], [99, 2, 1, "", "is_units_compatible"], [99, 2, 1, "", "ito"], [99, 2, 1, "", "ito_base_units"], [99, 2, 1, "", "ito_reduced_units"], [99, 1, 1, "", "labels"], [99, 1, 1, "", "larmor"], [99, 1, 1, "", "laser_frequency"], [99, 1, 1, "", "limits"], [99, 1, 1, "", "linear"], [99, 2, 1, "", "linearize"], [99, 2, 1, "", "linspace"], [99, 2, 1, "", "loc2index"], [99, 2, 1, "", "logspace"], [99, 1, 1, "", "m"], [99, 1, 1, "", "magnitude"], [99, 2, 1, "", "max"], [99, 1, 1, "", "meta"], [99, 2, 1, "", "min"], [99, 1, 1, "", "name"], [99, 2, 1, "", "ptp"], [99, 1, 1, "", "reversed"], [99, 1, 1, "", "roi"], [99, 2, 1, "", "round"], [99, 2, 1, "", "round_"], [99, 2, 1, "", "set_laser_frequency"], [99, 1, 1, "", "shape"], [99, 1, 1, "", "show_datapoints"], [99, 1, 1, "", "sigdigits"], [99, 1, 1, "", "size"], [99, 1, 1, "", "spacing"], [99, 1, 1, "", "title"], [99, 2, 1, "", "to"], [99, 2, 1, "", "to_base_units"], [99, 2, 1, "", "to_reduced_units"], [99, 1, 1, "", "umasked_data"], [99, 1, 1, "", "unitless"], [99, 1, 1, "", "units"], [99, 1, 1, "", "value"], [99, 1, 1, "", "values"]], "spectrochempy.CoordSet": [[100, 1, 1, "", "available_names"], [100, 1, 1, "", "coords"], [100, 2, 1, "", "copy"], [100, 1, 1, "", "default"], [100, 1, 1, "", "has_defined_name"], [100, 1, 1, "", "id"], [100, 1, 1, "", "is_empty"], [100, 1, 1, "", "is_labeled"], [100, 1, 1, "", "is_same_dim"], [100, 2, 1, "", "keys"], [100, 1, 1, "", "labels"], [100, 1, 1, "", "names"], [100, 2, 1, "", "select"], [100, 2, 1, "", "set"], [100, 2, 1, "", "set_titles"], [100, 2, 1, "", "set_units"], [100, 1, 1, "", "size"], [100, 1, 1, "", "sizes"], [100, 1, 1, "", "titles"], [100, 2, 1, "", "to_dict"], [100, 1, 1, "", "units"], [100, 2, 1, "", "update"]], "spectrochempy.EFA": [[101, 1, 1, "", "X"], [101, 1, 1, "", "Y"], [101, 1, 1, "", "b_ev"], [101, 1, 1, "", "components"], [101, 1, 1, "", "config"], [101, 1, 1, "", "cutoff"], [101, 1, 1, "", "f_ev"], [101, 2, 1, "", "fit"], [101, 2, 1, "", "fit_transform"], [101, 2, 1, "", "get_components"], [101, 2, 1, "", "inverse_transform"], [101, 1, 1, "", "log"], [101, 1, 1, "", "n_components"], [101, 1, 1, "", "name"], [101, 2, 1, "", "parameters"], [101, 2, 1, "", "params"], [101, 2, 1, "", "plotmerit"], [101, 2, 1, "", "reconstruct"], [101, 2, 1, "", "reduce"], [101, 2, 1, "", "reset"], [101, 2, 1, "", "to_dict"], [101, 2, 1, "", "transform"]], "spectrochempy.FastICA": [[102, 1, 1, "", "A"], [102, 1, 1, "", "St"], [102, 1, 1, "", "X"], [102, 1, 1, "", "Y"], [102, 1, 1, "", "algorithm"], [102, 1, 1, "", "components"], [102, 1, 1, "", "config"], [102, 2, 1, "", "fit"], [102, 2, 1, "", "fit_transform"], [102, 1, 1, "", "fun"], [102, 1, 1, "", "fun_args"], [102, 2, 1, "", "get_components"], [102, 2, 1, "", "inverse_transform"], [102, 1, 1, "", "log"], [102, 1, 1, "", "max_iter"], [102, 1, 1, "", "mean"], [102, 1, 1, "", "mixing"], [102, 1, 1, "", "n_components"], [102, 1, 1, "", "n_iter"], [102, 1, 1, "", "name"], [102, 2, 1, "", "parameters"], [102, 2, 1, "", "params"], [102, 2, 1, "", "plotmerit"], [102, 1, 1, "", "random_state"], [102, 2, 1, "", "reconstruct"], [102, 2, 1, "", "reduce"], [102, 2, 1, "", "reset"], [102, 2, 1, "", "to_dict"], [102, 1, 1, "", "tol"], [102, 2, 1, "", "transform"], [102, 1, 1, "", "w_init"], [102, 1, 1, "", "whiten"], [102, 1, 1, "", "whiten_solver"], [102, 1, 1, "", "whitening"]], "spectrochempy.Filter": [[104, 1, 1, "", "config"], [104, 1, 1, "", "cval"], [104, 1, 1, "", "delta"], [104, 1, 1, "", "deriv"], [104, 1, 1, "", "lamb"], [104, 1, 1, "", "log"], [104, 1, 1, "", "method"], [104, 1, 1, "", "mode"], [104, 1, 1, "", "name"], [104, 1, 1, "", "order"], [104, 2, 1, "", "parameters"], [104, 2, 1, "", "params"], [104, 2, 1, "", "reset"], [104, 1, 1, "", "size"], [104, 2, 1, "", "to_dict"], [104, 2, 1, "", "transform"]], "spectrochempy.IRIS": [[107, 1, 1, "", "X"], [107, 1, 1, "", "Y"], [107, 1, 1, "", "components"], [107, 1, 1, "", "config"], [107, 2, 1, "", "fit"], [107, 2, 1, "", "fit_transform"], [107, 2, 1, "", "get_components"], [107, 2, 1, "", "inverse_transform"], [107, 1, 1, "", "log"], [107, 1, 1, "", "n_components"], [107, 1, 1, "", "name"], [107, 2, 1, "", "parameters"], [107, 2, 1, "", "params"], [107, 2, 1, "", "plotdistribution"], [107, 2, 1, "", "plotlcurve"], [107, 2, 1, "", "plotmerit"], [107, 1, 1, "", "qpsolver"], [107, 2, 1, "", "reconstruct"], [107, 2, 1, "", "reduce"], [107, 1, 1, "", "reg_par"], [107, 2, 1, "", "reset"], [107, 2, 1, "", "to_dict"], [107, 2, 1, "", "transform"]], "spectrochempy.LSTSQ": [[109, 1, 1, "", "X"], [109, 1, 1, "", "Y"], [109, 1, 1, "", "coef"], [109, 1, 1, "", "config"], [109, 1, 1, "", "description"], [109, 2, 1, "", "fit"], [109, 1, 1, "", "fit_intercept"], [109, 1, 1, "", "intercept"], [109, 1, 1, "", "log"], [109, 1, 1, "", "name"], [109, 2, 1, "", "parameters"], [109, 2, 1, "", "params"], [109, 1, 1, "", "positive"], [109, 2, 1, "", "predict"], [109, 2, 1, "", "reset"], [109, 2, 1, "", "score"], [109, 2, 1, "", "to_dict"]], "spectrochempy.MCRALS": [[110, 1, 1, "", "C"], [110, 1, 1, "", "C_constrained"], [110, 1, 1, "", "C_constrained_list"], [110, 1, 1, "", "C_ls_list"], [110, 1, 1, "", "S_soft"], [110, 1, 1, "", "St"], [110, 1, 1, "", "St_constrained_list"], [110, 1, 1, "", "St_ls"], [110, 1, 1, "", "St_ls_list"], [110, 1, 1, "", "St_unconstrained"], [110, 1, 1, "", "X"], [110, 1, 1, "", "Y"], [110, 1, 1, "", "argsGetConc"], [110, 1, 1, "", "argsGetSpec"], [110, 1, 1, "", "closureConc"], [110, 1, 1, "", "closureMethod"], [110, 1, 1, "", "closureTarget"], [110, 1, 1, "", "components"], [110, 1, 1, "", "config"], [110, 1, 1, "", "extraOutputGetConc"], [110, 1, 1, "", "extraOutputGetSpec"], [110, 2, 1, "", "fit"], [110, 2, 1, "", "fit_transform"], [110, 1, 1, "", "getC_to_C_idx"], [110, 1, 1, "", "getConc"], [110, 1, 1, "", "getSpec"], [110, 1, 1, "", "getSt_to_St_idx"], [110, 2, 1, "", "get_components"], [110, 1, 1, "", "hardConc"], [110, 1, 1, "", "hardSpec"], [110, 2, 1, "", "inverse_transform"], [110, 1, 1, "", "kwargsGetConc"], [110, 1, 1, "", "kwargsGetSpec"], [110, 1, 1, "", "log"], [110, 1, 1, "", "max_iter"], [110, 1, 1, "", "maxdiv"], [110, 1, 1, "", "monoDecConc"], [110, 1, 1, "", "monoDecTol"], [110, 1, 1, "", "monoIncConc"], [110, 1, 1, "", "monoIncTol"], [110, 1, 1, "", "n_components"], [110, 1, 1, "", "name"], [110, 1, 1, "", "nonnegConc"], [110, 1, 1, "", "nonnegSpec"], [110, 1, 1, "", "normSpec"], [110, 2, 1, "", "parameters"], [110, 2, 1, "", "params"], [110, 2, 1, "", "plotmerit"], [110, 2, 1, "", "reconstruct"], [110, 2, 1, "", "reduce"], [110, 2, 1, "", "reset"], [110, 1, 1, "", "solverConc"], [110, 1, 1, "", "solverSpec"], [110, 1, 1, "", "storeIterations"], [110, 2, 1, "", "to_dict"], [110, 1, 1, "", "tol"], [110, 2, 1, "", "transform"], [110, 1, 1, "", "unimodConc"], [110, 1, 1, "", "unimodConcMod"], [110, 1, 1, "", "unimodConcTol"], [110, 1, 1, "", "unimodSpec"], [110, 1, 1, "", "unimodSpecMod"], [110, 1, 1, "", "unimodSpecTol"]], "spectrochempy.NDDataset": [[111, 1, 1, "", "II"], [111, 1, 1, "", "IR"], [111, 1, 1, "", "RI"], [111, 1, 1, "", "RR"], [111, 1, 1, "", "T"], [111, 2, 1, "", "abs"], [111, 2, 1, "", "absolute"], [111, 1, 1, "", "acquisition_date"], [111, 2, 1, "", "add_coordset"], [111, 2, 1, "", "align"], [111, 2, 1, "", "all"], [111, 2, 1, "", "amax"], [111, 2, 1, "", "amin"], [111, 2, 1, "", "any"], [111, 2, 1, "", "arange"], [111, 2, 1, "", "argmax"], [111, 2, 1, "", "argmin"], [111, 2, 1, "", "around"], [111, 2, 1, "", "asfortranarray"], [111, 2, 1, "", "asls"], [111, 2, 1, "", "astype"], [111, 2, 1, "", "atleast_2d"], [111, 1, 1, "", "author"], [111, 2, 1, "", "autosub"], [111, 2, 1, "", "average"], [111, 1, 1, "", "ax"], [111, 1, 1, "", "axT"], [111, 1, 1, "", "axec"], [111, 1, 1, "", "axecT"], [111, 1, 1, "", "axex"], [111, 1, 1, "", "axey"], [111, 2, 1, "", "bartlett"], [111, 2, 1, "", "basc"], [111, 2, 1, "", "blackmanharris"], [111, 2, 1, "", "clip"], [111, 2, 1, "", "close_figure"], [111, 1, 1, "", "comment"], [111, 2, 1, "", "component"], [111, 2, 1, "", "concatenate"], [111, 2, 1, "", "conj"], [111, 2, 1, "", "conjugate"], [111, 2, 1, "", "coord"], [111, 2, 1, "", "coordmax"], [111, 2, 1, "", "coordmin"], [111, 1, 1, "", "coordnames"], [111, 1, 1, "", "coordset"], [111, 1, 1, "", "coordtitles"], [111, 1, 1, "", "coordunits"], [111, 2, 1, "", "copy"], [111, 1, 1, "", "created"], [111, 2, 1, "", "cs"], [111, 2, 1, "", "cumsum"], [111, 1, 1, "", "data"], [111, 2, 1, "", "dc"], [111, 2, 1, "", "delete_coordset"], [111, 2, 1, "", "denoise"], [111, 1, 1, "", "description"], [111, 2, 1, "", "despike"], [111, 2, 1, "", "detrend"], [111, 2, 1, "", "diag"], [111, 2, 1, "", "diagonal"], [111, 1, 1, "", "dimensionless"], [111, 1, 1, "", "dims"], [111, 1, 1, "", "directory"], [111, 1, 1, "", "divider"], [111, 2, 1, "", "dot"], [111, 2, 1, "", "download_nist_ir"], [111, 1, 1, "", "dtype"], [111, 2, 1, "", "dump"], [111, 2, 1, "", "em"], [111, 2, 1, "", "empty"], [111, 2, 1, "", "empty_like"], [111, 2, 1, "", "eye"], [111, 2, 1, "", "fft"], [111, 1, 1, "", "fig"], [111, 1, 1, "", "fignum"], [111, 1, 1, "", "filename"], [111, 1, 1, "", "filetype"], [111, 2, 1, "", "find_peaks"], [111, 2, 1, "", "fromfunction"], [111, 2, 1, "", "fromiter"], [111, 2, 1, "", "fsh"], [111, 2, 1, "", "fsh2"], [111, 2, 1, "", "full"], [111, 2, 1, "", "full_like"], [111, 2, 1, "", "general_hamming"], [111, 2, 1, "", "geomspace"], [111, 2, 1, "", "get_axis"], [111, 2, 1, "", "get_baseline"], [111, 2, 1, "", "get_labels"], [111, 2, 1, "", "gm"], [111, 2, 1, "", "hamming"], [111, 2, 1, "", "hann"], [111, 1, 1, "", "has_complex_dims"], [111, 1, 1, "", "has_data"], [111, 1, 1, "", "has_defined_name"], [111, 1, 1, "", "has_units"], [111, 1, 1, "", "history"], [111, 2, 1, "", "ht"], [111, 1, 1, "", "id"], [111, 2, 1, "", "identity"], [111, 2, 1, "", "ifft"], [111, 1, 1, "", "imag"], [111, 1, 1, "", "is_1d"], [111, 1, 1, "", "is_complex"], [111, 1, 1, "", "is_empty"], [111, 1, 1, "", "is_float"], [111, 1, 1, "", "is_integer"], [111, 1, 1, "", "is_interleaved"], [111, 1, 1, "", "is_labeled"], [111, 1, 1, "", "is_masked"], [111, 1, 1, "", "is_quaternion"], [111, 2, 1, "", "is_units_compatible"], [111, 2, 1, "", "ito"], [111, 2, 1, "", "ito_base_units"], [111, 2, 1, "", "ito_reduced_units"], [111, 1, 1, "", "labels"], [111, 1, 1, "", "limits"], [111, 2, 1, "", "linspace"], [111, 2, 1, "", "load"], [111, 2, 1, "", "load_iris"], [111, 2, 1, "", "loads"], [111, 1, 1, "", "local_timezone"], [111, 2, 1, "", "logspace"], [111, 2, 1, "", "ls"], [111, 1, 1, "", "m"], [111, 1, 1, "", "magnitude"], [111, 1, 1, "", "mask"], [111, 1, 1, "", "masked_data"], [111, 2, 1, "", "max"], [111, 2, 1, "", "mc"], [111, 2, 1, "", "mean"], [111, 1, 1, "", "meta"], [111, 2, 1, "", "min"], [111, 1, 1, "", "modeldata"], [111, 1, 1, "", "modified"], [111, 1, 1, "", "name"], [111, 1, 1, "", "ndaxes"], [111, 1, 1, "", "ndim"], [111, 2, 1, "", "ones"], [111, 2, 1, "", "ones_like"], [111, 1, 1, "", "origin"], [111, 1, 1, "", "parent"], [111, 2, 1, "", "pipe"], [111, 2, 1, "", "pk"], [111, 2, 1, "", "pk_exp"], [111, 2, 1, "", "plot"], [111, 2, 1, "", "plot_1D"], [111, 2, 1, "", "plot_2D"], [111, 2, 1, "", "plot_3D"], [111, 2, 1, "", "plot_bar"], [111, 2, 1, "", "plot_image"], [111, 2, 1, "", "plot_map"], [111, 2, 1, "", "plot_multiple"], [111, 2, 1, "", "plot_pen"], [111, 2, 1, "", "plot_scatter"], [111, 2, 1, "", "plot_scatter_pen"], [111, 2, 1, "", "plot_stack"], [111, 2, 1, "", "plot_surface"], [111, 2, 1, "", "plot_waterfall"], [111, 1, 1, "", "preferences"], [111, 2, 1, "", "ps"], [111, 2, 1, "", "ptp"], [111, 2, 1, "", "qsin"], [111, 2, 1, "", "random"], [111, 2, 1, "", "read"], [111, 2, 1, "", "read_carroucell"], [111, 2, 1, "", "read_csv"], [111, 2, 1, "", "read_ddr"], [111, 2, 1, "", "read_dir"], [111, 2, 1, "", "read_hdr"], [111, 2, 1, "", "read_jcamp"], [111, 2, 1, "", "read_labspec"], [111, 2, 1, "", "read_mat"], [111, 2, 1, "", "read_matlab"], [111, 2, 1, "", "read_omnic"], [111, 2, 1, "", "read_opus"], [111, 2, 1, "", "read_quadera"], [111, 2, 1, "", "read_sdr"], [111, 2, 1, "", "read_soc"], [111, 2, 1, "", "read_spa"], [111, 2, 1, "", "read_spc"], [111, 2, 1, "", "read_spg"], [111, 2, 1, "", "read_srs"], [111, 2, 1, "", "read_topspin"], [111, 2, 1, "", "read_wdf"], [111, 2, 1, "", "read_wire"], [111, 2, 1, "", "read_zip"], [111, 1, 1, "", "real"], [111, 2, 1, "", "remove_masks"], [111, 1, 1, "", "roi"], [111, 2, 1, "", "roll"], [111, 2, 1, "", "round"], [111, 2, 1, "", "round_"], [111, 2, 1, "", "rs"], [111, 2, 1, "", "rubberband"], [111, 2, 1, "", "save"], [111, 2, 1, "", "save_as"], [111, 2, 1, "", "savgol"], [111, 2, 1, "", "savgol_filter"], [111, 2, 1, "", "set_complex"], [111, 2, 1, "", "set_coordset"], [111, 2, 1, "", "set_coordtitles"], [111, 2, 1, "", "set_coordunits"], [111, 2, 1, "", "set_hypercomplex"], [111, 2, 1, "", "set_quaternion"], [111, 1, 1, "", "shape"], [111, 2, 1, "", "simps"], [111, 2, 1, "", "simpson"], [111, 2, 1, "", "sine"], [111, 2, 1, "", "sinm"], [111, 1, 1, "", "size"], [111, 2, 1, "", "smooth"], [111, 2, 1, "", "snip"], [111, 2, 1, "", "sort"], [111, 2, 1, "", "sp"], [111, 2, 1, "", "squeeze"], [111, 2, 1, "", "stack"], [111, 2, 1, "", "std"], [111, 1, 1, "", "suffix"], [111, 2, 1, "", "sum"], [111, 2, 1, "", "swapaxes"], [111, 2, 1, "", "swapdims"], [111, 2, 1, "", "take"], [111, 1, 1, "", "timezone"], [111, 1, 1, "", "title"], [111, 2, 1, "", "to"], [111, 2, 1, "", "to_array"], [111, 2, 1, "", "to_base_units"], [111, 2, 1, "", "to_reduced_units"], [111, 2, 1, "", "to_xarray"], [111, 2, 1, "", "transpose"], [111, 2, 1, "", "trapezoid"], [111, 2, 1, "", "trapz"], [111, 2, 1, "", "triang"], [111, 1, 1, "", "umasked_data"], [111, 1, 1, "", "unitless"], [111, 1, 1, "", "units"], [111, 1, 1, "", "value"], [111, 1, 1, "", "values"], [111, 2, 1, "", "var"], [111, 2, 1, "", "whittaker"], [111, 2, 1, "", "write"], [111, 2, 1, "", "write_csv"], [111, 2, 1, "", "write_excel"], [111, 2, 1, "", "write_jcamp"], [111, 2, 1, "", "write_mat"], [111, 2, 1, "", "write_matlab"], [111, 2, 1, "", "write_xls"], [111, 2, 1, "", "zeros"], [111, 2, 1, "", "zeros_like"], [111, 2, 1, "", "zf"], [111, 2, 1, "", "zf_auto"], [111, 2, 1, "", "zf_double"], [111, 2, 1, "", "zf_size"]], "spectrochempy.NMF": [[114, 1, 1, "", "X"], [114, 1, 1, "", "Y"], [114, 1, 1, "", "alpha_H"], [114, 1, 1, "", "alpha_W"], [114, 1, 1, "", "beta_loss"], [114, 1, 1, "", "components"], [114, 1, 1, "", "config"], [114, 2, 1, "", "fit"], [114, 2, 1, "", "fit_transform"], [114, 2, 1, "", "get_components"], [114, 1, 1, "", "init"], [114, 2, 1, "", "inverse_transform"], [114, 1, 1, "", "l1_ratio"], [114, 1, 1, "", "log"], [114, 1, 1, "", "max_iter"], [114, 1, 1, "", "n_components"], [114, 1, 1, "", "name"], [114, 2, 1, "", "parameters"], [114, 2, 1, "", "params"], [114, 2, 1, "", "plotmerit"], [114, 1, 1, "", "random_state"], [114, 2, 1, "", "reconstruct"], [114, 2, 1, "", "reduce"], [114, 2, 1, "", "reset"], [114, 1, 1, "", "shuffle"], [114, 1, 1, "", "solver"], [114, 2, 1, "", "to_dict"], [114, 1, 1, "", "tol"], [114, 2, 1, "", "transform"]], "spectrochempy.NNLS": [[115, 1, 1, "", "X"], [115, 1, 1, "", "Y"], [115, 1, 1, "", "coef"], [115, 1, 1, "", "config"], [115, 1, 1, "", "description"], [115, 2, 1, "", "fit"], [115, 1, 1, "", "fit_intercept"], [115, 1, 1, "", "intercept"], [115, 1, 1, "", "log"], [115, 1, 1, "", "name"], [115, 2, 1, "", "parameters"], [115, 2, 1, "", "params"], [115, 1, 1, "", "positive"], [115, 2, 1, "", "predict"], [115, 2, 1, "", "reset"], [115, 2, 1, "", "score"], [115, 2, 1, "", "to_dict"]], "spectrochempy.Optimize": [[116, 1, 1, "", "X"], [116, 1, 1, "", "Y"], [116, 1, 1, "", "amplitude_mode"], [116, 1, 1, "", "autoampl"], [116, 1, 1, "", "autobase"], [116, 1, 1, "", "callback_every"], [116, 1, 1, "", "components"], [116, 1, 1, "", "config"], [116, 1, 1, "", "constraints"], [116, 1, 1, "", "dry"], [116, 2, 1, "", "fit"], [116, 2, 1, "", "fit_transform"], [116, 1, 1, "", "fp"], [116, 2, 1, "", "get_components"], [116, 2, 1, "", "inverse_transform"], [116, 1, 1, "", "log"], [116, 1, 1, "", "max_fun_calls"], [116, 1, 1, "", "max_iter"], [116, 1, 1, "", "method"], [116, 1, 1, "", "modeldata"], [116, 1, 1, "", "n_components"], [116, 1, 1, "", "name"], [116, 2, 1, "", "parameters"], [116, 2, 1, "", "params"], [116, 2, 1, "", "plotmerit"], [116, 2, 1, "", "predict"], [116, 2, 1, "", "reconstruct"], [116, 2, 1, "", "reduce"], [116, 2, 1, "", "reset"], [116, 1, 1, "", "script"], [116, 2, 1, "", "to_dict"], [116, 2, 1, "", "transform"], [116, 1, 1, "", "usermodels"]], "spectrochempy.PCA": [[117, 1, 1, "", "X"], [117, 1, 1, "", "Y"], [117, 1, 1, "", "components"], [117, 1, 1, "", "config"], [117, 2, 1, "", "fit"], [117, 2, 1, "", "fit_transform"], [117, 2, 1, "", "get_components"], [117, 2, 1, "", "inverse_transform"], [117, 1, 1, "", "iterated_power"], [117, 1, 1, "", "loadings"], [117, 1, 1, "", "log"], [117, 1, 1, "", "n_components"], [117, 1, 1, "", "n_oversamples"], [117, 1, 1, "", "name"], [117, 2, 1, "", "parameters"], [117, 2, 1, "", "params"], [117, 2, 1, "", "plotmerit"], [117, 1, 1, "", "power_iteration_normalizer"], [117, 2, 1, "", "printev"], [117, 1, 1, "", "random_state"], [117, 2, 1, "", "reconstruct"], [117, 2, 1, "", "reduce"], [117, 2, 1, "", "reset"], [117, 1, 1, "", "scaled"], [117, 2, 1, "", "scoreplot"], [117, 1, 1, "", "scores"], [117, 2, 1, "", "screeplot"], [117, 1, 1, "", "standardized"], [117, 1, 1, "", "svd_solver"], [117, 2, 1, "", "to_dict"], [117, 1, 1, "", "tol"], [117, 2, 1, "", "transform"], [117, 1, 1, "", "whiten"]], "spectrochempy.PFR": [[118, 2, 1, "", "fit_to_gas_concentrations"]], "spectrochempy.PLSRegression": [[119, 1, 1, "", "X"], [119, 1, 1, "", "Y"], [119, 1, 1, "", "components"], [119, 1, 1, "", "config"], [119, 2, 1, "", "fit"], [119, 2, 1, "", "fit_transform"], [119, 2, 1, "", "get_components"], [119, 2, 1, "", "inverse_transform"], [119, 1, 1, "", "log"], [119, 1, 1, "", "max_iter"], [119, 1, 1, "", "n_components"], [119, 1, 1, "", "name"], [119, 2, 1, "", "parameters"], [119, 2, 1, "", "params"], [119, 2, 1, "", "parityplot"], [119, 2, 1, "", "plotmerit"], [119, 2, 1, "", "predict"], [119, 2, 1, "", "reconstruct"], [119, 2, 1, "", "reduce"], [119, 2, 1, "", "reset"], [119, 1, 1, "", "scale"], [119, 2, 1, "", "score"], [119, 2, 1, "", "to_dict"], [119, 1, 1, "", "tol"], [119, 2, 1, "", "transform"]], "spectrochempy.Project": [[120, 2, 1, "", "add_dataset"], [120, 2, 1, "", "add_datasets"], [120, 2, 1, "", "add_project"], [120, 2, 1, "", "add_projects"], [120, 2, 1, "", "add_script"], [120, 2, 1, "", "add_scripts"], [120, 1, 1, "", "allitems"], [120, 1, 1, "", "allnames"], [120, 2, 1, "", "copy"], [120, 1, 1, "", "datasets"], [120, 1, 1, "", "datasets_names"], [120, 2, 1, "", "dump"], [120, 1, 1, "", "filename"], [120, 1, 1, "", "filetype"], [120, 1, 1, "", "id"], [120, 2, 1, "", "load"], [120, 2, 1, "", "loads"], [120, 1, 1, "", "meta"], [120, 1, 1, "", "name"], [120, 1, 1, "", "parent"], [120, 1, 1, "", "projects"], [120, 1, 1, "", "projects_names"], [120, 2, 1, "", "remove_all_dataset"], [120, 2, 1, "", "remove_all_project"], [120, 2, 1, "", "remove_dataset"], [120, 2, 1, "", "remove_project"], [120, 2, 1, "", "save"], [120, 2, 1, "", "save_as"], [120, 1, 1, "", "scripts"], [120, 1, 1, "", "scripts_names"], [120, 1, 1, "", "suffix"]], "spectrochempy.Quantity": [[121, 2, 1, "", "check"], [121, 2, 1, "", "compute"], [121, 1, 1, "", "default_format"], [121, 1, 1, "", "dimensionality"], [121, 1, 1, "", "dimensionless"], [121, 2, 1, "", "dot"], [121, 2, 1, "", "from_list"], [121, 2, 1, "", "from_sequence"], [121, 2, 1, "", "is_compatible_with"], [121, 2, 1, "", "ito"], [121, 2, 1, "", "ito_base_units"], [121, 2, 1, "", "ito_preferred"], [121, 2, 1, "", "ito_reduced_units"], [121, 2, 1, "", "ito_root_units"], [121, 1, 1, "", "m"], [121, 2, 1, "", "m_as"], [121, 1, 1, "", "magnitude"], [121, 2, 1, "", "persist"], [121, 2, 1, "", "prod"], [121, 2, 1, "", "to"], [121, 2, 1, "", "to_base_units"], [121, 2, 1, "", "to_compact"], [121, 2, 1, "", "to_preferred"], [121, 2, 1, "", "to_reduced_units"], [121, 2, 1, "", "to_root_units"], [121, 1, 1, "", "u"], [121, 2, 1, "", "unit_items"], [121, 1, 1, "", "unitless"], [121, 1, 1, "", "units"], [121, 2, 1, "", "visualize"]], "spectrochempy.SIMPLISMA": [[124, 1, 1, "", "C"], [124, 1, 1, "", "Pt"], [124, 1, 1, "", "St"], [124, 1, 1, "", "X"], [124, 1, 1, "", "Y"], [124, 1, 1, "", "components"], [124, 1, 1, "", "config"], [124, 2, 1, "", "fit"], [124, 2, 1, "", "fit_transform"], [124, 2, 1, "", "get_components"], [124, 1, 1, "", "interactive"], [124, 2, 1, "", "inverse_transform"], [124, 1, 1, "", "log"], [124, 1, 1, "", "n_components"], [124, 1, 1, "", "name"], [124, 1, 1, "", "noise"], [124, 2, 1, "", "parameters"], [124, 2, 1, "", "params"], [124, 2, 1, "", "plotmerit"], [124, 2, 1, "", "reconstruct"], [124, 2, 1, "", "reduce"], [124, 2, 1, "", "reset"], [124, 1, 1, "", "s"], [124, 2, 1, "", "to_dict"], [124, 1, 1, "", "tol"], [124, 2, 1, "", "transform"]], "spectrochempy.SVD": [[125, 1, 1, "", "U"], [125, 1, 1, "", "VT"], [125, 1, 1, "", "X"], [125, 1, 1, "", "Y"], [125, 1, 1, "", "components"], [125, 1, 1, "", "compute_uv"], [125, 1, 1, "", "config"], [125, 1, 1, "", "cumulative_explained_variance"], [125, 1, 1, "", "ev"], [125, 1, 1, "", "ev_cum"], [125, 1, 1, "", "ev_ratio"], [125, 1, 1, "", "explained_variance"], [125, 1, 1, "", "explained_variance_ratio"], [125, 2, 1, "", "fit"], [125, 2, 1, "", "fit_transform"], [125, 1, 1, "", "full_matrices"], [125, 2, 1, "", "get_components"], [125, 2, 1, "", "inverse_transform"], [125, 1, 1, "", "log"], [125, 1, 1, "", "n_components"], [125, 1, 1, "", "name"], [125, 2, 1, "", "parameters"], [125, 2, 1, "", "params"], [125, 2, 1, "", "plotmerit"], [125, 2, 1, "", "reconstruct"], [125, 2, 1, "", "reduce"], [125, 2, 1, "", "reset"], [125, 1, 1, "", "s"], [125, 1, 1, "", "singular_values"], [125, 1, 1, "", "sv"], [125, 2, 1, "", "to_dict"], [125, 2, 1, "", "transform"]], "spectrochempy.Unit": [[127, 1, 1, "", "default_format"], [127, 1, 1, "", "dimensionality"], [127, 1, 1, "", "dimensionless"], [127, 2, 1, "", "from_"], [127, 2, 1, "", "is_compatible_with"], [127, 2, 1, "", "m_from"]], "spectrochempy.asymmetricvoigtmodel": [[140, 1, 1, "", "args"], [140, 1, 1, "", "script"], [140, 1, 1, "", "type"]], "spectrochempy.gaussianmodel": [[178, 1, 1, "", "args"], [178, 1, 1, "", "script"], [178, 1, 1, "", "type"]], "spectrochempy.lorentzianmodel": [[200, 1, 1, "", "args"], [200, 1, 1, "", "script"], [200, 1, 1, "", "type"]], "spectrochempy.polynomialbaseline": [[234, 1, 1, "", "args"], [234, 1, 1, "", "script"], [234, 1, 1, "", "type"]], "spectrochempy.sigmoidmodel": [[277, 1, 1, "", "args"], [277, 1, 1, "", "script"], [277, 1, 1, "", "type"]], "spectrochempy.voigtmodel": [[300, 1, 1, "", "args"], [300, 1, 1, "", "script"], [300, 1, 1, "", "type"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:data", "4": "py:function"}, "terms": {"": [2, 5, 6, 9, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 38, 39, 40, 43, 52, 55, 68, 71, 75, 76, 77, 80, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 127, 135, 141, 148, 162, 164, 166, 195, 197, 214, 215, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 291, 294, 297, 311, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 351], "0": [0, 2, 5, 7, 9, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 87, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 124, 125, 126, 135, 138, 139, 140, 141, 142, 146, 148, 149, 150, 154, 160, 161, 162, 163, 165, 169, 171, 172, 173, 176, 177, 178, 179, 183, 184, 185, 187, 191, 192, 199, 200, 201, 206, 217, 218, 221, 222, 224, 225, 226, 230, 231, 232, 234, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 277, 281, 284, 287, 299, 300, 302, 304, 310, 311, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "00": [20, 24, 25, 27, 30, 33, 34, 36, 39, 41, 43, 49, 53, 56, 58, 62, 64, 65, 69, 72, 75, 76, 77, 78, 81, 82, 91, 94, 319, 322, 323, 325, 329, 332, 334, 336, 339, 342, 345, 346, 349], "000": [36, 58, 82, 273], "0000": [32, 45, 111, 239, 250, 320, 329], "000000": 22, "0001": [45, 99, 102, 111, 114, 135, 239, 250, 329], "000116": [329, 346], "00011600926518440247": 329, "00012439075792817795": 23, "0001341": 322, "0001386702060699463": 329, "0001387": [329, 346], "00015827733519297973": 23, "0001980997622013092": 329, "0001981": [329, 346], "00019825804790407907": 23, "0002": [45, 111, 239, 250, 329], "00020397296743805037": 64, "00024636638593841743": 23, "0002631": [322, 323], "0003": 45, "000302683562040329": 329, "0003027": [329, 346], "0003032579084427101": 23, "0003036": 339, "0003089": [329, 346], "0003089122474193573": 329, "0003178": [322, 323], "0003702011951281": 94, "000370203321558236": 94, "0003702884428734": [94, 329], "0003744959831237793": 329, "0003745": [329, 346], "00037487235479899866": 23, "00040794593487610074": 64, "000427": 322, "000428": 322, "000429": 322, "000433": [21, 322], "000442": [21, 322], "00046362862409556424": 23, "00047": 94, "0004896376456529366": 23, "0004904596528542114": 23, "0004912871202793567": 23, "0004921226355845338": 23, "0004929673596843698": 23, "0004938210437307322": 23, "0004946901218458283": 23, "0004955753197882315": 23, "0004964417296743154": 23, "0004973147318190536": 23, "0004981962000748055": 23, "0004990872395196795": 23, "0004999974962486426": 23, "0005009224423800434": 23, "0005018650428479086": 23, "0005028222129274776": 23, "000503795893365037": 23, "0005047767175615129": 23, "0005057740763560194": 23, "0005067909112021698": 23, "0005078236610584996": 23, "000508875361378858": 23, "0005099447315065913": 23, "0005110364330891297": 23, "0005121515266403545": 23, "0005132891688193577": 23, "0005144616554312984": 23, "0005156608680271693": 23, "0005168846752737034": 23, "0005181813428111964": 23, "0005195265168844998": 23, "0005208942964235875": 23, "0005221": [329, 346], "0005221068859100342": 329, "0005222955570666999": 23, "0005237318107589177": 23, "0005251860718893411": 23, "0005266549474162346": 23, "0005281469649351055": 23, "0005296374901748336": 23, "0005311700256181299": 23, "0005327134944357388": 23, "0005342566446342794": 23, "0005358628850811336": 23, "0005376381718607317": 23, "0005396329582221352": 23, "0005416726314725979": 23, "0005437570853969101": 23, "0005458976082891286": 23, "0005480875748007953": 23, "0005503237863513085": 23, "0005526263090688457": 23, "0005549930907511363": 23, "0005574208102720299": 23, "0005599281471046596": 23, "0005624480584370743": 23, "0005650176785171586": 23, "0005654506385326385": 329, "0005655": [329, 346], "000567605378718093": 23, "0005699768662452698": 329, "00057": [329, 346], "0005702968600982863": 23, "0005706218431927061": 23, "0005730546137309978": 23, "0005759087479600565": 23, "0005778": 20, "0005788624242478594": 23, "0005819472966806089": 23, "0005851626197890011": 23, "0005884735105283722": 23, "0005919356405961484": 23, "0005955122189367684": 23, "000599225577188736": 23, "0006030938520874124": 23, "0006071251736134508": 23, "00061": 94, "0006113918151773189": 23, "0006119189023141512": 64, "0006161518203756256": 23, "0006215236000711757": 23, "0006273957420689654": 23, "000630699098110199": 329, "0006307": [329, 346], "0006335488650772826": 23, "0006399762615474049": 23, "0006466641120995258": 23, "0006536091296355372": 23, "000660689339823285": 23, "0006679795936491825": 23, "0006754181243926692": 23, "000682": [322, 323], "0006830298779798798": 23, "0006907733550827166": 23, "0006987637535247382": 23, "0006991377766200215": 23, "0007069372346699917": 23, "0007125": [322, 323], "0007151920055395387": 23, "0007235915691686049": 23, "0007322966170539948": 23, "0007412456856969442": 23, "0007504652538893616": 23, "0007597179067853135": 23, "0007683": 20, "0007691414390019042": 23, "0007791326607915317": 23, "0007893350738955173": 23, "0007904": 75, "0007997522484738236": 23, "000803191214799881": 329, "0008032": [329, 346], "0008104269807765611": 23, "0008158918697522015": 64, "0008208847158802718": 23, "0008315536804371594": 23, "0008356980979442596": 329, "0008357": [329, 346], "0008428706003287968": 23, "000845": 322, "000854351749993845": 23, "0008573236692761593": 23, "0008660457470918699": 23, "0008780499311870413": 23, "0008902182357106479": 23, "0009015875006376751": 23, "0009140262172602579": 23, "0009266599168144502": 23, "0009396363331386859": 23, "0009545966012006977": 23, "0009699922960877186": 23, "000975": 125, "0009841318528817098": 23, "0009988201809300774": 23, "001": [97, 111, 139, 322, 324, 340, 392], "001015079232123467": 23, "001019864837190252": 64, "001031824410260781": 23, "001043867511137741": 23, "0010491933694701545": 23, "001066136369230753": 23, "0010832777040277759": 23, "001089": 125, "0011006754884539721": 23, "001119912492936129": 23, "001121": [329, 346], "001121222972869873": 329, "0011389415923630179": 23, "0011582609085414397": 23, "0011698119342327118": 329, "00117": [75, 329, 346], "001177562262451393": 23, "001199211654450196": 23, "0012190114699551333": 23, "0012238378046283023": 64, "0012238378046283025": 64, "001236365872739903": 23, "0012488601974044676": 23, "0012569657401119059": 23, "0012813357494812598": 23, "0013065923988232764": 23, "001332": 20, "0013328464824001918": 23, "001341": [322, 323], "0013601582805157673": 23, "00139075976580911": 23, "0014262081321618617": 23, "0014278107720663525": 64, "0014278107720663528": 64, "001427810772066353": 64, "0014629272012159785": 23, "0014925716272857186": 23, "0015014385431312133": 23, "001535": 336, "001541896030927319": 23, "0015839173329698123": 23, "0016274950351468248": 23, "001631783739504403": 64, "0016317837395044032": 64, "0016731692686995194": 23, "001699": 322, "0017204657491192705": 23, "0017692749012867797": 23, "0017697484695161614": 23, "00177": 20, "0018195678200695691": 23, "0018357567069424532": 64, "0018357567069424536": 64, "001871326163205898": 23, "001875": 75, "0019243270194359884": 23, "001980664359350659": 23, "002": [64, 340], "002012": 75, "002039729674380504": 64, "0020436678052480795": 23, "002085162862784038": 23, "0021084094490922173": 23, "002175116992578672": 23, "0022437026418185542": 64, "0022437367434810095": 23, "002262": 24, "002313303909478555": 23, "002384202690790909": 23, "0023865056940469637": 23, "0024476756092566047": 64, "002447675609256605": 64, "002458740363438075": 23, "002508": 75, "002535164470212059": 23, "002612954828907622": 23, "002651648576694655": 64, "0026927116687368506": 23, "002714": 75, "0027272537391466937": 23, "0027738912186800807": 23, "002804": 322, "002805": [21, 322], "002807": [21, 322], "002810": 22, "002813": 22, "002855621544132705": 64, "0028556215441327055": 64, "0028561158500455203": 23, "002867": 22, "0029389646390341052": 23, "003": [20, 39, 77, 94], "00300": [39, 91], "0030221674035498043": 23, "003032319034755823": 23, "0030595945115707555": 64, "003059594511570756": 64, "003104947029333527": 23, "003153": 75, "003194164813272309": 23, "003263567479008806": 64, "003292520557980553": 23, "003312": 336, "0033965138303582404": 23, "003414": 336, "003428962811660757": 23, "0034675404464468563": 64, "0034675404464468568": 64, "0035147101661542834": 23, "003521": 75, "003604": 322, "003612": 75, "003637": 75, "0036375148218626414": 23, "0036715134138849063": 64, "003671513413884907": 64, "003700": 322, "00374430260366872": 23, "003765260270042736": 23, "003875486381322957": 64, "0038914653519267982": 23, "003973": 322, "003torr_lt_aft": [20, 39, 329, 346], "004": [20, 39], "00400": [39, 91], "004007": 22, "004012755928138604": 23, "004053115751123256": 23, "004079459348761008": 64, "004092": 75, "004133928133015981": 23, "004219": 75, "004267124138925793": 23, "004283432316199058": 64, "0042834323161990585": 64, "004296": [322, 323], "004302": 75, "0043937174771749585": 23, "004421": 322, "0044874052836371085": 64, "0044907574796564514": 23, "004527642308383119": 23, "004657040705272495": 23, "0046913782510751584": 64, "004691378251075159": 64, "0047786109167946384": 23, "004867": 77, "004889401944567163": 23, "0048953512185132084": 64, "004895351218513209": 64, "00489535121851321": 64, "004torr_lt_aft": [20, 39, 329, 346], "005004969613317401": 23, "005099324185951259": 64, "00509932418595126": 64, "005110269931845416": 23, "005124394633030057": 23, "00516": 336, "00520328493961151": 23, "005205": 322, "0052880544420751165": 23, "00530329715338931": 64, "005303297153389311": 64, "0053751946734517855": 23, "005460760674075951": 23, "00550727012082736": 64, "005529135183167127": 23, "005587736630048323": 23, "005607": 75, "005667827078790933": 23, "005700606624644948": 23, "00571124308826541": 64, "005711243088265411": 64, "005733332889919035": 23, "005756947971778068": 23, "005772367658829965": 23, "00580291802853402": 23, "005861": 22, "005863": 22, "00586835789130887": 23, "005886": 22, "00591521605570346": 64, "005915216055703461": 64, "005915216055703462": 64, "006000777806339381": 23, "0060572389744578": 23, "00611918902314151": 64, "006119189023141511": 64, "006191": 75, "006191115125282162": 23, "006238616114828256": 23, "006323161990579561": 64, "006323161990579562": 64, "0064574143703549965": 23, "006515": 336, "006527134958017611": 64, "006527134958017612": 64, "006566": 336, "006731107925455662": 64, "006731107925455663": 64, "006776": 25, "006849": 75, "006935080892893713": 64, "0069350808928937135": 64, "006957471610159306": 23, "007": 94, "007001": [322, 323], "007104": 75, "007139053860331762": 64, "0071390538603317635": 64, "007139053860331764": 64, "007194": 322, "0072": 26, "007200": 337, "007262": [111, 299], "007299": [111, 299], "0072b2": 337, "007331": [322, 323], "007343026827769813": 64, "0075469997952078635": 64, "007546999795207864": 64, "007750972762645915": 64, "0077705025299143705": 23, "007919": 75, "007954945730083965": 64, "007954945730083967": 64, "008016534827385702": 23, "008121": [322, 323], "008158918697522015": 64, "008362891664960065": 64, "008362891664960067": 64, "008566864632398115": 64, "008682": 322, "008770837599836167": 64, "008843": 75, "008974810567274217": 64, "009": [20, 94], "00900": [39, 91], "009178783534712267": 64, "009201": 75, "009261179153190077": 23, "009276": 76, "009586729469588367": 64, "009790702437026419": 64, "009994675404464467": 64, "009994675404464469": 64, "009e73": 337, "01": [20, 27, 30, 39, 41, 53, 64, 69, 80, 319, 320, 322, 323, 324, 327, 329, 334, 346, 351], "010": 75, "0100": 26, "010198648371902519": 64, "010402621339340569": 64, "0105": 94, "01060659430677862": 64, "010606594306778622": 64, "010676123451468641": 23, "010810567274216669": 64, "01081056727421667": 64, "01094": 336, "011014540241654722": 64, "01139": [322, 323], "011422486176530822": 64, "011626459143968872": 64, "011732197722809702": 23, "01183": 76, "011830432111406922": 64, "012": [18, 27, 43, 91, 319, 325, 349], "012238378046283024": 64, "012442351013721074": 64, "012646323981159122": 64, "012646323981159124": 64, "01285": [322, 323], "012850296948597174": 64, "012850296948597175": 64, "0129": 77, "012e": 322, "013": [1, 43, 91, 325, 349], "013054269916035224": 64, "013258242883473277": 64, "013462215850911324": 64, "013666188818349375": 64, "013870161785787427": 64, "014": 20, "01400": [39, 91], "01425": 76, "014278107720663527": 64, "014282427091628174": 23, "0144": [322, 323], "014686053655539629": 64, "0147": 32, "014890026622977677": 64, "015": 75, "01501": 77, "01525": [322, 323], "015297972557853779": 64, "015501945525291825": 64, "015501945525291829": 64, "015705918492729877": 64, "01611386442760598": 64, "01617": [322, 323], "016289564836607325": 23, "01631783739504403": 64, "016521810362482077": 64, "01652181036248208": 64, "01672578332992013": 64, "0168": 94, "0168583x88900638": 94, "01713372926479623": 64, "01733770223223428": 64, "01754167519967233": 64, "017541675199672334": 64, "01774564816711038": 64, "017745648167110387": 64, "01794962113454843": 64, "017949621134548434": 64, "018": [94, 318, 324], "01835756706942453": 64, "018357567069424534": 64, "01868": 75, "01870505431885559": 23, "018765513004300634": 64, "018765513004300637": 64, "01885": 75, "01917345893917673": 64, "019377431906614787": 64, "01969": [322, 323], "019989350808928937": 64, "02": [20, 24, 25, 27, 39, 41, 43, 49, 53, 69, 75, 76, 77, 78, 91, 94, 318, 319, 322, 323, 324, 325, 329, 332, 334, 336, 339, 342, 345, 346, 347, 349, 351], "020193323776366987": 64, "02025": [24, 25, 77, 322, 323, 334, 339, 342, 345, 346], "020397296743805037": 64, "02039729674380504": 64, "02067": 336, "020846": 22, "021": 20, "02100": [39, 91], "021009215646119187": 64, "02100921564611919": 64, "02111": 75, "02121318861355724": 64, "02124": 334, "021417161580995294": 64, "02162113454843334": 64, "021torr_lt_aft": 346, "022012": 322, "022029080483309437": 64, "02243702641818554": 64, "022640999385623594": 64, "02284497235306164": 64, "022844972353061644": 64, "023155912689776983": 23, "02345689125537579": 64, "023456891255375794": 64, "02366086422281384": 64, "023660864222813844": 64, "023864837190251897": 64, "024": [94, 318], "024000077998569787": 23, "024476756092566044": 64, "024884702027442147": 64, "025": [51, 53, 78, 319], "025004": 94, "025088674994880197": 64, "025292647962318247": 64, "025496620929756297": 64, "02556": 75, "026": 20, "02600": [39, 91], "02603": 77, "0263": 26, "02654": 336, "0267204587343846": 64, "02692443170182265": 64, "027128404669260704": 64, "02719": 75, "02733237763669875": 64, "027740323571574854": 64, "02791": 24, "02799": 76, "028": 75, "0282": 336, "028556215441327054": 64, "02896416137620315": 64, "029": [39, 41, 319], "02949": 336, "029576080278517308": 64, "029984026213393408": 64, "03": [20, 25, 39, 43, 49, 64, 81, 91, 94, 319, 325, 329, 334, 336, 346, 349, 351], "030324671559648467": 23, "03049": 76, "030595945115707558": 64, "03067": 334, "03068": 336, "03083": 76, "031003891050583657": 64, "03161580995289781": 64, "03181978292033586": 64, "03181978292033587": 64, "03222772885521196": 64, "03262": 336, "03283964775752612": 64, "033": [43, 91, 325, 329, 349], "03365553962727831": 64, "03406348556215441": 64, "03426745852959247": 64, "03438": 76, "03447143149703052": 64, "03467540446446856": 64, "03477774452872524": 23, "03487937743190662": 64, "03528732336678271": 64, "03528732336678272": 64, "03569526930165882": 64, "036": 20, "03600": [39, 91], "03651116117141102": 64, "036715134138849075": 64, "03691910710628712": 64, "036919107106287125": 64, "037": [43, 91, 325, 349], "03712308007372517": 64, "037123080073725175": 64, "037327053041163225": 64, "037531026008601275": 64, "03773499897603932": 64, "0377627010107243": 23, "03793897194347737": 64, "03804": 25, "038142944910915424": 64, "03814294491091543": 64, "038550890845791524": 64, "038754863813229574": 64, "039366782715543724": 64, "039570755682981774": 64, "03977472865041982": 64, "039774728650419824": 64, "039978701617857874": 64, "03j": 336, "04": [20, 25, 43, 64, 75, 77, 91, 125, 325, 334, 336, 339, 342, 344, 349, 351], "04018267458529593": 64, "040386647552733974": 64, "04044": 76, "04077817": [94, 318], "04079459348761008": 64, "04099856645504813": 64, "041202539422486174": 64, "04120253942248618": 64, "041406512389924224": 64, "04140651238992423": 64, "041814458324800324": 64, "042018431292238374": 64, "04222240425967643": 64, "04242637722711448": 64, "042630350194552524": 64, "04283432316199059": 64, "043242269096866674": 64, "04324226909686668": 64, "04344624206430473": 64, "04385418799918083": 64, "04405816096661888": 64, "04405816096661889": 64, "044452701": 94, "04446610690149498": 64, "0446": 24, "04467007986893304": 64, "04476": 75, "04528199877124719": 64, "04565": 336, "04568994470612329": 64, "04589391767356134": 64, "04616": 76, "046397106968950975": 23, "04650583657587549": 64, "046709809543313545": 64, "04691378251075158": 64, "047117755478189645": 64, "04772967438050378": 64, "04772967438050379": 64, "047729674380503795": 64, "048": [76, 78, 319], "04854556625025599": 64, "048763": [21, 322], "048953512185132095": 64, "049565431087446245": 64, "04_mo_al2o3_calc_0": [20, 39, 329, 346], "04_mo_al2o3_calc_1": [20, 39, 329, 346], "04e": 336, "05": [2, 22, 23, 25, 49, 77, 97, 111, 118, 139, 319, 320, 322, 324, 329, 334, 337, 339, 346, 351], "050177349989760395": 64, "05061": 324, "05078": 20, "0509932418595126": 64, "051": 20, "05100": [39, 91], "05134": 336, "051605160761826745": 64, "052013106696702845": 64, "05201310669670285": 64, "05227": 20, "05242": 76, "05273": [336, 342], "0527j": 336, "05323694450133115": 64, "05339": 76, "05341": 76, "053644890436207245": 64, "05364489043620726": 64, "05405283637108335": 64, "05486872824083556": 64, "05609256604546385": 64, "0563": 336, "056704484947778015": 64, "05685": 336, "057": [43, 91, 325, 349], "0572630488363914": 23, "058": 324, "05831": 336, "05854024165472045": 64, "058744214622158515": 64, "059": 125, "05957": 75, "05969": 336, "05994": 336, "06": [20, 24, 25, 39, 43, 65, 75, 76, 77, 91, 94, 119, 125, 319, 322, 323, 325, 329, 332, 334, 336, 339, 342, 345, 346, 349, 394], "06006": 76, "06098791726397707": 64, "061": [43, 91, 325, 349], "061191890231415115": 64, "06158195065493269": 23, "062007782101167315": 64, "06200778210116732": 64, "06203": [336, 342], "06219": [76, 336], "06241572803604341": 64, "06261970100348146": 64, "06282367397091952": 64, "06298": [111, 299], "062j": 336, "06343559287323366": 64, "06344": 76, "06363956584067172": 64, "06366": 76, "06389": 76, "064": 324, "06404751177554782": 64, "06424": 20, "06425148474298586": 64, "06438": [111, 299], "06445545771042394": 64, "06481": 334, "06486340364530002": 64, "06506737661273808": 64, "06527134958017612": 64, "06547532254761418": 64, "0659": 20, "06608724144992832": 64, "06629121441736636": 64, "06649518738480444": 64, "06669916035224248": 64, "06717": 336, "06731107925455662": 64, "06793": 76, "06812697112430882": 64, "06853491705918492": 64, "0689": 324, "0689001083": 324, "069": [75, 324], "0690": 324, "06914683596149908": 64, "06948": 76, "06996272783125128": 64, "07": [25, 43, 75, 91, 325, 329, 349, 351], "07037067376612738": 64, "07098259266844155": 64, "07123": 76, "0714": 20, "0717021": 94, "0732": 76, "07322629531026009": 64, "07383821421257424": 64, "07386553913526465": 23, "07434": 76, "07485807904976449": 64, "07546999795207865": 64, "07548": [24, 76], "07624": 24, "07648986278926889": 64, "07666": 96, "07669383575670694": 64, "07689780872414499": 64, "07779": 76, "07791767356133524": 64, "07812164652877329": 64, "0785295924636494": 64, "07914151136596355": 64, "0793454843334016": 64, "07951": 76, "07955": 76, "0797534302682777": 64, "08": 324, "0805693221380299": 64, "08058": 336, "08065": 76, "081": 324, "08118124104034405": 64, "0817931599426582": 64, "08239": 336, "08240507884497236": 64, "0826090518124104": 64, "08260905181241042": 64, "08281302477984845": 64, "083": 324, "08362891664960066": 64, "08434": 75, "08437": 77, "08444480851935286": 64, "08452": 24, "08463": 76, "0847": 76, "08521": [111, 287], "08543": [111, 287], "08574": 76, "08668851116117142": 64, "08693": 77, "08752": 336, "08770837599836166": 64, "08804": 76, "08905": 76, "08995207864018022": 64, "08e": 336, "09": [2, 20, 24, 25, 27, 39, 43, 75, 76, 77, 91, 319, 322, 323, 325, 329, 332, 334, 336, 339, 342, 345, 346, 349, 351], "090": 324, "091": 329, "0913": 76, "092": 75, "09219578128199876": 64, "09235": 77, "093": 20, "09300": [39, 91], "09386": 76, "09448": 76, "09539": 76, "09555": 76, "09588": 76, "09689398092857987": 23, "09699": 76, "098": [29, 30, 319], "099": 77, "09903": 24, "09e": 20, "0a": 334, "0co": 346, "0concaten": 75, "0dataset": 334, "0e3": 96, "0e8": 96, "0f": 324, "0integr": 77, "0j": [7, 345], "0k": 96, "0omnic": [43, 91, 325, 329, 349], "0px": 336, "0some": 334, "0x7efd0c0b0690": 9, "0x7f53ce5040b0": 323, "0x7f53ce58c7d0": 323, "0x7fbe503a7710": 322, "0x7fbe5040eb70": 322, "0x7fbe50435970": 322, "0x7fbe5172cf20": 322, "0x7fc63bbf7350": 22, "0x7fc63f0b5850": 18, "0x7fc6511a4b30": 20, "0x7fc6511dc470": 26, "0x7fc651974350": 33, "0x7fc651a480b0": 24, "0x7fc651a49ac0": 25, "1": [2, 7, 8, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 38, 39, 40, 43, 46, 47, 48, 51, 52, 55, 56, 60, 61, 64, 65, 67, 68, 71, 72, 75, 76, 77, 80, 81, 86, 87, 88, 90, 91, 94, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 132, 133, 135, 139, 140, 142, 143, 146, 148, 153, 155, 160, 161, 162, 165, 166, 169, 171, 173, 177, 179, 180, 183, 184, 185, 187, 192, 196, 199, 202, 204, 205, 206, 213, 214, 220, 223, 226, 227, 228, 229, 234, 237, 238, 239, 241, 249, 250, 254, 255, 269, 277, 278, 280, 281, 283, 284, 285, 287, 288, 297, 298, 299, 300, 302, 304, 310, 311, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 385, 394, 399, 400], "10": [0, 1, 2, 6, 7, 9, 20, 22, 24, 27, 33, 39, 40, 43, 52, 64, 71, 75, 76, 77, 78, 80, 84, 90, 91, 94, 96, 99, 100, 107, 111, 116, 117, 121, 148, 171, 172, 176, 199, 221, 222, 224, 225, 230, 231, 232, 234, 251, 273, 310, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 329, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 352, 377], "100": [7, 24, 38, 52, 60, 75, 76, 77, 98, 100, 111, 117, 125, 155, 249, 254, 273, 288, 316, 320, 322, 323, 325, 329, 334, 337, 338, 342, 347, 348], "1000": [32, 38, 40, 51, 77, 100, 320, 334, 337, 339, 346, 347], "10000": [60, 75, 87, 273, 337], "100000": [97, 337], "1000000000": 340, "1001": [20, 39, 76, 329, 346], "1002": 94, "10031": 75, "1007": 1, "1008": [336, 342], "100_pd_101": 329, "100_pd_102": 329, "100_pd_103": 329, "100_pd_104": 329, "101": [26, 94, 320, 322, 323, 336], "1012": 76, "1014": 342, "1016": [94, 318], "102": [76, 336], "1021": [46, 94, 318], "1024": [46, 76, 334, 336, 342, 347, 348], "103": [75, 336], "1031": [75, 342], "1037": [336, 342], "1038": [94, 318], "1039": [94, 318], "104": [273, 336], "105": 2, "1055": 76, "1056": 20, "106": 324, "1068": 76, "107": 336, "1071": 94, "1075": [76, 347], "1076": 94, "1078": [336, 342], "1079": 342, "108": 336, "1084": [20, 334], "1088": 94, "1091": 76, "1092": 76, "1093": 342, "1094": 76, "10x10": 346, "11": [0, 2, 18, 25, 64, 68, 75, 91, 94, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 351, 400], "110": [26, 75, 94, 322, 323, 336], "1100": 349, "1106": 75, "1108": 76, "1109": 94, "11098": [111, 148, 240], "111111111111": 337, "1112355f": 329, "1114": 76, "1116": 76, "1117": 76, "112": 336, "1134": 76, "1137": 94, "114": [55, 56, 319, 336], "11463": 75, "115": 77, "1152": 77, "1155": 76, "116": 336, "1160": 347, "1161": [76, 324], "1165": 76, "1166": 24, "1174": 336, "118": [75, 76], "1188": 76, "1194": 76, "119699": [94, 318], "12": [2, 6, 18, 20, 23, 26, 39, 46, 48, 49, 64, 75, 91, 94, 99, 320, 322, 323, 324, 326, 327, 329, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 349, 351, 358, 400], "120": 329, "1200": 337, "1201353750": 347, "1206": 76, "1210271017": 94, "1229": 76, "1230": 17, "1234": [6, 7, 340], "12345": [99, 111, 291], "12381159123489659": 64, "12411": [336, 339, 342], "12487289": 324, "125": 75, "1250": [111, 278, 297, 325, 340], "12544337497440097": 64, "1259": 76, "126": 342, "12638124502857215": 23, "1265": 20, "1266672127790293": 64, "1269": 76, "127": 87, "12707515871390537": 64, "1271": 334, "12727913168134342": 64, "1274831046487815": 64, "128": [344, 347], "1280": [23, 25], "1281": 25, "1287": 76, "129": 75, "1290": [337, 345, 349], "1291": 64, "1292": 76, "1295": 94, "129522834323162": 64, "12972680729060004": 64, "1299307802580381": 64, "13": [2, 7, 20, 39, 43, 64, 75, 78, 91, 94, 320, 322, 323, 324, 325, 326, 329, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 349, 350, 351], "1300": [111, 171, 325, 334, 340], "13013475322547613": 64, "1303": 20, "13033872619291417": 64, "1305": [76, 340], "13095064509522836": 64, "131": 329, "13135859103010444": 64, "132": [324, 346], "13217448289985662": 64, "13217448289985664": 64, "1323784558672947": 64, "133": [273, 329], "134": [99, 111, 172], "1340102396067991": 64, "13401023960679911": 64, "13421421257423713": 64, "1344": 336, "1344181855416752": 64, "1347": 320, "13484": 94, "135": 324, "13505": 94, "13523407741142743": 64, "13543805037886547": 64, "1357": 94, "1359924945": 75, "1359949976": 75, "135e": 339, "1360100375": 75, "1360112954": 75, "13625394224861764": 64, "1366": [94, 329], "1368658611509318": 64, "137": [77, 329, 346], "13706983411836987": 64, "13747778005324596": 64, "1380": 76, "13808969895556011": 64, "13870161785787424": 64, "13890559082531231": 64, "139": 329, "14": [25, 43, 64, 75, 77, 91, 94, 320, 322, 323, 324, 325, 329, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 349, 351], "140": [77, 94, 322, 323], "14017421024502064": 23, "14074134753225476": 64, "14094532049969283": 64, "1413532664345689": 64, "14155723940200696": 64, "14155723940200698": 64, "14176121236944503": 64, "14196518533688307": 64, "14237313127175916": 64, "14237313127175918": 64, "1425": 334, "1428": 20, "1429850501740733": 64, "143": 20, "14359696907638747": 64, "144": 324, "14441286094613967": 64, "1454327257833299": 64, "14563669875076798": 64, "14570219": 94, "14658624": 94, "14665656358795823": 64, "1467": 336, "147": [46, 334, 336], "1470645095228343": 64, "1476798575": 329, "1476798846": 329, "1476806493": 329, "1476806797": 329, "1487": 334, "149": 347, "14e": 20, "15": [18, 19, 20, 25, 39, 64, 75, 76, 77, 94, 124, 320, 322, 323, 324, 329, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 349, 351], "150": [20, 24, 29], "1500": [77, 111, 141], "15000": [39, 60, 61, 91, 339, 342], "151": [94, 329], "152": 7, "1529": 48, "1529cm": 48, "155": 24, "1550": [98, 325, 340], "1555": [98, 340], "1556": [64, 77, 346], "1568": [26, 64], "1570": 325, "15798": [99, 344], "16": [2, 20, 25, 39, 64, 75, 90, 94, 99, 111, 173, 320, 322, 323, 324, 327, 329, 334, 336, 337, 338, 340, 342, 345, 346, 347, 351], "1600": [111, 141, 334], "16000": 75, "1600437": 324, "162": [75, 94, 329, 334], "1622": 75, "1623": 336, "16365897573754795": 23, "16384": 342, "1644": 99, "165": [111, 148], "1662": 336, "167": 324, "16975": [111, 251], "17": [20, 22, 25, 39, 43, 88, 91, 94, 320, 322, 323, 324, 325, 329, 334, 336, 337, 338, 340, 342, 345, 346, 347, 349, 351], "171": 75, "1734": 24, "174": 75, "1740": 325, "1742": 23, "175": [25, 334], "1750": 334, "177": [24, 52, 53, 75, 319], "179": [24, 94], "1795": 64, "18": [20, 39, 94, 320, 322, 324, 329, 334, 336, 337, 338, 340, 342, 345, 346, 347, 351, 377], "180": 346, "1800": [111, 171, 278, 297, 325], "181": 94, "1842": [5, 111, 255], "1856": 340, "185e": 125, "186": 75, "1868": 328, "187": 342, "1879": 96, "188": 24, "189": 320, "1899": 324, "19": [20, 25, 27, 39, 43, 75, 91, 94, 320, 322, 324, 325, 329, 334, 336, 337, 338, 340, 342, 345, 346, 347, 349, 351, 382], "190": 48, "1900": [324, 346], "191216": 47, "1936": 24, "19403": 94, "19417": 94, "1947": 75, "1950": [20, 39, 91], "1956": 64, "196": 75, "196608": [46, 334, 336], "1970": 329, "198": [43, 91, 325, 347, 349, 364], "1980": 94, "1982": 77, "1985": 336, "1986": [94, 101, 316], "1988": [94, 97, 111, 245, 282, 329], "199": [324, 369], "1992": [18, 94, 101, 347], "199456453": 324, "1995": 324, "1997": [94, 124], "1999": 95, "19e": 329, "1d": [5, 7, 31, 34, 35, 42, 49, 51, 57, 97, 99, 104, 108, 109, 111, 115, 116, 140, 141, 142, 162, 171, 172, 178, 190, 200, 206, 208, 210, 219, 223, 226, 227, 228, 229, 234, 241, 243, 258, 277, 300, 304, 316, 319, 320, 335, 343, 346, 347, 354, 361, 369, 371, 398], "1e": [75, 96, 111, 118, 119, 121, 139, 345], "1e4": 75, "1e5": [111, 139], "1e9": [97, 111, 139], "1f": [75, 76], "1j": 7, "1mm": 329, "1r": 75, "1st": [108, 110, 324, 329, 346], "2": [0, 2, 6, 7, 8, 17, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 34, 38, 39, 43, 47, 48, 51, 53, 55, 60, 61, 62, 64, 68, 69, 71, 75, 76, 77, 80, 87, 90, 91, 94, 96, 97, 98, 99, 101, 102, 104, 107, 108, 109, 110, 111, 114, 115, 117, 119, 120, 121, 124, 128, 129, 143, 148, 153, 159, 160, 161, 162, 163, 166, 169, 176, 178, 179, 183, 184, 185, 187, 192, 195, 200, 203, 206, 213, 214, 234, 235, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 278, 281, 284, 286, 287, 294, 299, 302, 304, 310, 311, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 352, 373, 396], "20": [9, 26, 52, 60, 76, 77, 80, 94, 99, 100, 111, 135, 171, 247, 248, 249, 254, 320, 322, 324, 325, 327, 329, 334, 336, 337, 338, 340, 342, 345, 347, 351, 385], "200": [23, 38, 64, 75, 102, 114, 121, 320, 334, 337, 339, 340, 346], "2000": [91, 95, 98, 320, 338, 339, 340], "20000": 337, "2001": [22, 94], "2003": [94, 111, 159, 302, 341, 347], "2004": 94, "2005": [16, 19, 22, 26, 27, 35, 64, 94, 97, 110, 111, 139, 239, 319, 322, 323], "2006": 2, "2008": [140, 320], "2009": [94, 96, 316], "200e": 121, "2013": [1, 94, 107], "2014": [88, 90, 91, 94, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "2015": [21, 94, 322, 323, 340], "2016": [20, 25, 39, 43, 91, 325, 329, 346, 349], "2017": [111, 302], "2018": [94, 110, 111, 159, 329, 341], "2019": [43, 394], "202": 53, "2020": [88, 94, 107, 316, 318], "2021": [90, 94, 351], "2022": [94, 351], "2023": [94, 351], "2024": 94, "2025": [0, 20, 24, 25, 43, 75, 76, 77, 91, 94, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "203": 20, "20300": [39, 91], "204": [21, 26, 322, 323], "2048": 76, "205": [25, 347], "2072": 324, "2073": 324, "2074": [95, 324], "2075": 324, "2079": 94, "209": 18, "2090": 324, "2093": 324, "21": [25, 43, 68, 76, 91, 94, 322, 324, 325, 329, 334, 336, 337, 340, 341, 345, 347, 349, 351], "2100": 340, "2105": 24, "2110383927344171": 23, "2115": 324, "2129": 75, "2140": 324, "2142": 324, "2144": 338, "215": 347, "2152": 324, "2157": 324, "216": [25, 342], "2162": 324, "2166": 324, "2173": 324, "2179": 324, "2180": 324, "2186": 324, "2191": 324, "2192": 96, "21e": 334, "22": [22, 76, 94, 111, 142, 322, 324, 329, 334, 336, 337, 340, 345, 351, 385], "2200": [336, 339, 342], "222": [77, 111, 142], "2220": 324, "222e": 334, "2238": 336, "224": 18, "225": [75, 334], "2250": [20, 39, 91], "2266": 324, "228": [33, 34, 319], "2283": 339, "2284": [336, 342], "229": 342, "2299": 324, "23": [14, 22, 25, 75, 76, 94, 322, 323, 324, 328, 329, 334, 337, 340, 345, 351], "230": 324, "2300": [91, 324, 346], "2310": 324, "232": 324, "234": 336, "2342": [336, 342], "23482": 75, "236": 96, "23660864222813846": 64, "23742453409789066": 64, "238": [43, 91, 94, 325, 349, 356], "239": [69, 356], "24": [43, 75, 76, 91, 94, 111, 306, 322, 325, 329, 334, 337, 340, 345, 349, 352, 393], "240": 324, "24089207454433748": 64, "24130002047921362": 64, "242": 75, "24211591234896584": 64, "24293180421871802": 64, "243": 75, "24354372312103217": 64, "2441556420233463": 64, "2442": 334, "2447675609256604": 64, "24497153389309853": 64, "24517550686053655": 64, "24599139873028875": 64, "246": [94, 342], "24619537169772682": 64, "2465": 324, "246501869": 324, "24660331763260296": 64, "2467": [77, 334], "247": 324, "2472": 77, "24741920950235513": 64, "248": [324, 359], "248123825": 324, "24884702027442143": 64, "249": [25, 27, 319], "2490509932418595": 64, "2498668851116117": 64, "24e": 349, "25": [2, 9, 25, 75, 76, 77, 94, 100, 111, 156, 322, 324, 329, 334, 337, 340, 344, 345, 351], "250": 334, "2500": 334, "25000": 339, "25027483104648784": 64, "25085858": [111, 142, 204], "251": [111, 287], "25109072291624": 64, "2512946958836781": 64, "2517026418185541": 64, "2519066147859922": 64, "25211058775343026": 64, "25251853368830635": 64, "2527225066557444": 64, "2529264796231825": 64, "253": 342, "25313045259062056": 64, "25353839852549664": 64, "2537": [111, 287], "25394634446037273": 64, "2541503174278108": 64, "255": 359, "25517018226500104": 64, "2553741552324391": 64, "2555781281998771": 64, "256": 337, "2565979930370674": 64, "2567": [45, 111, 239, 250, 329], "257": [9, 324], "2574138849068196": 64, "25843374974400984": 64, "25863772271144786": 64, "259045668646324": 64, "25924964161376207": 64, "2596575875486381": 64, "259765625": 344, "26": [25, 64, 75, 94, 99, 322, 324, 329, 334, 337, 340, 344, 345], "26006553348351424": 64, "26026950645095226": 64, "2602695064509523": 64, "2604734794183903": 64, "26067745238582835": 64, "261": 94, "26169731722301864": 64, "2633": 94, "26434": [94, 318], "2670": 94, "267e": 77, "268e": 77, "27": [22, 43, 75, 76, 94, 322, 329, 334, 337, 340, 345, 347], "271": 329, "2717": 75, "27170": 94, "27180": 94, "2725078844972353": 64, "274": 94, "27811881011284817": 23, "28": [7, 20, 24, 25, 76, 77, 91, 94, 322, 329, 334, 337, 345], "2827": [24, 76], "284": 94, "284101": 22, "2843": [111, 261], "2855": 334, "287": 94, "28e": 336, "29": [26, 75, 94, 322, 323, 325, 329, 334, 337, 345, 351], "2907": 75, "291": 94, "293919": 22, "295": [45, 49, 319], "296": 375, "2975": 94, "298": [96, 118], "299": 75, "2a": 96, "2d": [5, 16, 24, 27, 35, 38, 46, 51, 64, 66, 69, 73, 94, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 122, 123, 124, 125, 147, 158, 162, 171, 206, 207, 209, 211, 212, 221, 222, 224, 225, 230, 231, 232, 233, 239, 243, 258, 272, 316, 319, 320, 325, 334, 337, 340, 342, 343, 345, 347, 354, 370, 391, 398, 400], "2e": 336, "2f": 33, "2fp": 324, "2j": [7, 345], "2nd": 110, "2rr": 76, "3": [2, 6, 7, 8, 17, 20, 21, 22, 24, 25, 26, 29, 33, 38, 39, 40, 41, 43, 55, 75, 76, 77, 78, 80, 84, 88, 89, 90, 91, 94, 96, 97, 99, 101, 102, 107, 108, 110, 111, 114, 116, 117, 119, 120, 124, 125, 139, 148, 153, 169, 171, 176, 177, 187, 192, 213, 214, 220, 223, 227, 228, 229, 239, 249, 250, 273, 291, 304, 310, 311, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 362, 369, 377, 381, 385, 388, 400], "30": [2, 25, 60, 64, 94, 110, 322, 324, 327, 329, 332, 334, 336, 337, 338, 339, 345], "300": [20, 22, 38, 337, 339], "3000": 98, "30000": [39, 91], "302": 77, "3037": 346, "3039": 346, "3063": 334, "3077": 347, "308": [76, 96], "31": [24, 76, 94, 322, 334, 337, 342, 345, 346, 351], "310": 363, "3106": 76, "3112": [20, 39, 43, 329, 346], "312": [20, 39], "3132": 347, "3155": 24, "316": 362, "317": 94, "3194": 24, "3197": 24, "32": [76, 94, 322, 334, 337, 342, 345, 346, 349], "322": [94, 362], "323": 320, "3247": [111, 241], "325": 334, "3250": 334, "3251": 334, "32768": 342, "33": [20, 25, 39, 75, 94, 322, 329, 334, 337, 345, 346], "3300": [32, 320], "333": 273, "3336": 347, "335": 328, "338": 319, "3390": [94, 318], "34": [75, 94, 334, 336, 337, 345, 347], "3400": 32, "342312": [94, 318], "343": 334, "345": [41, 43, 49, 75, 319], "3458": 32, "346": 75, "35": [20, 22, 39, 75, 319, 324, 329, 334, 337, 345, 346], "3500": [32, 340], "3505": 32, "3519": 347, "3520": 320, "3536": 32, "3537": 320, "3540": 32, "3541": 320, "3548": [178, 320], "3549": 338, "355": [1, 320], "3560": 320, "3579": 347, "3583": 24, "36": [40, 76, 94, 334, 337, 345], "360": 375, "3600": 337, "3610": 320, "3614": 24, "362": 347, "3620": 32, "3622": 320, "3623": 32, "3624": 320, "3629": 24, "3631": [94, 347], "3636": [94, 347], "364": [64, 65, 319], "3640": 320, "3641": 75, "367": 1, "3678": 320, "369": 320, "3693": 320, "37": [20, 25, 39, 325, 329, 334, 337, 345, 346], "3700": [32, 111, 141, 320], "372": 324, "3734": [111, 257], "3736": 43, "375": 375, "3750": 340, "3766": 64, "3780": 340, "379": 75, "38": [25, 43, 75, 76, 91, 325, 334, 337, 345, 349], "3800": [32, 91], "3805": 346, "3807": 346, "381755": [111, 155, 288], "3823841": 0, "383064516033j": 339, "385": [61, 62, 94, 319], "3854": 334, "3868": 76, "3873": 75, "38e": 329, "39": [24, 25, 320, 323, 324, 325, 326, 327, 328, 329, 334, 336, 337, 338, 340, 342, 345, 347, 349], "3900": [91, 111, 141], "390168": 22, "3915": 64, "392": 347, "396": 94, "3999": [20, 39, 329, 344, 346], "3c02592": [94, 318], "3d": [24, 25, 38, 100, 111, 117, 221, 222, 224, 225, 230, 231, 232, 334, 337], "3d_dataset": 334, "3e": 349, "3f": [33, 75, 140, 178, 200, 273, 277, 300, 320, 324], "3fp": 324, "3g": [234, 329], "3j": [7, 345], "3rd": [110, 329], "4": [2, 7, 8, 19, 21, 22, 23, 24, 25, 26, 29, 33, 43, 45, 51, 55, 68, 71, 75, 76, 77, 88, 90, 91, 94, 96, 99, 100, 111, 120, 121, 145, 173, 220, 223, 227, 228, 229, 239, 243, 249, 250, 254, 311, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "40": [25, 76, 327, 329, 334, 337, 345], "400": [84, 334, 337, 344, 346, 347], "4000": [20, 38, 39, 91, 329, 334, 337, 338, 340, 344, 345, 346], "402": [94, 376], "403": 94, "403400": 22, "403e": [334, 339], "404": [20, 77, 336], "40400": [39, 91], "4044": 32, "4046": 121, "405": 336, "406": 336, "407": 336, "4070": 338, "4071": 338, "408": [75, 336], "409": [24, 27, 319], "4096": 75, "41": [20, 25, 39, 43, 91, 325, 329, 334, 337, 345, 346, 349], "414": 345, "4160": 344, "417": [324, 379], "418": [60, 62, 319], "42": [20, 23, 39, 94, 329, 334, 337, 345, 346], "4223": 77, "4230": 340, "4253": 77, "426": [111, 247, 248], "4262": 75, "4284": 77, "43": [22, 25, 32, 91, 334, 345], "433": 75, "4330": 340, "437": [77, 334, 347], "43836": 342, "4394": 32, "44": [76, 334, 345, 346], "440": 75, "441": 75, "4432": 334, "4446": 75, "446": 324, "44822162": 121, "449": [345, 347], "45": [22, 75, 111, 148, 334, 338, 345, 346], "450": 27, "4500": 340, "4517": 99, "454": [47, 49, 319], "4550": 340, "456": 25, "4574": 64, "458": 75, "45bf716d7cf02f1b7157448de04db163df5e80eb78920004": 87, "46": [20, 25, 39, 75, 329, 334, 345, 346], "4616": 64, "462": 383, "466": [17, 27, 319], "468": 383, "468e": [25, 43, 91, 325], "47": [75, 140, 320, 324, 334, 345, 346], "471": 77, "4713": 334, "4717": 339, "472": [44, 49, 319, 334], "473": [77, 78, 319], "474": 324, "477": 334, "477e": [20, 39, 329], "47878161267252": 24, "4798": 24, "48": [94, 320, 334, 336, 345], "481e": 334, "4824": 334, "4888": 32, "49": [20, 39, 329, 334, 345, 346], "490": 385, "4913": 76, "49133114889": 64, "49194306778": 64, "49337087855": 64, "49357485153": 64, "49398279747": 64, "49439074339": 64, "49581855418": 64, "496": 77, "49602252714": 64, "49622650011": 64, "49643047307": 64, "496838419": 64, "49765431088": 64, "4980": 64, "49847020274": 64, "49867417572": 64, "4991": 94, "49928609462": 64, "4998": 64, "4c72b0": 337, "4f": 324, "4fq4v": [94, 318], "4th": [17, 21, 29, 322, 323, 333], "4x96": 21, "5": [2, 17, 18, 21, 22, 24, 25, 26, 29, 32, 33, 48, 51, 64, 68, 71, 75, 76, 77, 88, 90, 91, 94, 96, 97, 98, 99, 100, 104, 110, 111, 119, 120, 125, 148, 162, 171, 173, 179, 185, 213, 269, 281, 310, 311, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 362, 385], "50": [20, 25, 32, 52, 64, 75, 77, 89, 91, 96, 97, 99, 102, 110, 111, 126, 139, 171, 180, 196, 199, 254, 261, 282, 322, 324, 327, 334, 337, 339, 340, 342, 345], "500": [22, 116, 119, 337], "5000": [75, 76, 339, 342, 345], "50010198649": 64, "500x500": 117, "50152979726": 64, "50234568912": 64, "503": 20, "50300": [39, 91], "50356952693": 64, "505": [75, 78, 319], "50724104035": 64, "50785295924": 64, "50887282408": 64, "5096153847107": 339, "50968871596": 64, "51": [20, 21, 26, 39, 91, 322, 323, 329, 334, 339, 345, 346], "51009666189": 64, "51030063485": 64, "51132049969": 64, "5119324186": 64, "513": 77, "51376817531": 64, "51397214826": 64, "51397214828": 64, "514": [80, 81, 319], "5143800942": 64, "51478804015": 64, "51560393201": 64, "51580790499": 64, "516": 75, "51601187795": 64, "51621585092": 64, "51662379685": 64, "517": [329, 346], "51723571574": 64, "51784763465": 64, "51805160762": 64, "51825558058": 64, "519": [46, 49, 319], "51907147246": 64, "51927544542": 64, "51968339135": 64, "51x96": 21, "52": [64, 75, 76, 94, 96, 334, 342, 345], "52049928323": 64, "52090722916": 64, "52090722918": 64, "52111120212": 64, "52437476961": 64, "52498668851": 64, "52539463446": 64, "5281": [0, 94, 318], "5282": 75, "528x336": [322, 323], "529": [71, 72, 319], "53": [25, 52, 76, 95, 334, 337, 345], "5315": 334, "532nm": 47, "533e": 339, "534": 347, "5342": 75, "53572": [94, 318], "54": [20, 22, 32, 39, 111, 125, 179, 184, 329, 334, 345, 346], "5400": [98, 340], "541e": 336, "543": [329, 391], "5437": 64, "544": 329, "5448": 96, "544e": 329, "545": 347, "5458": 24, "546e": 336, "5474": 320, "549": 347, "55": [1, 43, 76, 80, 91, 94, 111, 125, 141, 142, 148, 155, 204, 249, 256, 278, 286, 287, 288, 297, 299, 325, 328, 329, 334, 338, 345, 349], "5522": 77, "553": [21, 26, 27, 319], "55339": [94, 318], "5549": [25, 40, 43, 91, 111, 125, 141, 142, 148, 155, 204, 239, 249, 254, 256, 286, 287, 288, 299, 320, 325, 328, 329, 338, 349], "556": 340, "5566": 25, "5582": 338, "5584": 334, "56": [25, 75, 334, 345], "562": [75, 324], "563": 324, "5669": 320, "569": 75, "56b4e9": 337, "57": [29, 75, 94, 111, 148, 249, 326, 329, 334], "571": 324, "575": 75, "579": 75, "58": [20, 39, 329, 334, 346], "582": 24, "583x": 94, "588": 336, "589": 336, "59": 334, "590": 336, "5900": [98, 340], "591": 336, "592": 336, "593": 336, "594": 336, "5949": 76, "595": [68, 69, 319], "596": 336, "597": 336, "5979": 24, "598": 336, "599": 336, "5993": 17, "5994": 64, "5995": 32, "5997": [17, 340], "5999": [43, 64, 91, 325, 329, 338, 340, 349], "5e": 75, "5j": [7, 345], "5px": 336, "5th": [29, 64], "6": [0, 2, 7, 18, 21, 25, 49, 64, 75, 76, 77, 88, 90, 91, 94, 96, 99, 100, 101, 102, 107, 110, 111, 114, 116, 117, 119, 120, 124, 125, 172, 177, 183, 214, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 310, 311, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 377], "60": [22, 38, 51, 67, 77, 80, 94, 99, 111, 172, 192, 320, 334, 346], "600": [334, 336, 337, 349], "6000": [43, 91, 325, 329, 338, 349], "601": 336, "602": 20, "60200": [39, 91], "603": [77, 336], "606": 75, "6077": 25, "607943654060364e": 329, "608e": [329, 346], "61": [77, 320, 334], "61108960661693e": 23, "62": 334, "622": 324, "623": [55, 77], "627": 340, "63": 334, "634": [40, 41, 125, 319], "6369": 320, "64": [75, 334, 342], "640": 347, "641": [48, 49, 319], "643": [67, 69, 111, 257, 319, 396], "647": 396, "649": [43, 91, 325, 329, 338, 340, 349], "6497": 77, "64th": 344, "65": 334, "650": [43, 91, 325, 329, 337, 338, 349], "6500": 341, "651": 340, "652818786": [111, 299], "65536": 342, "6566": 24, "66": [140, 320, 334], "663": 397, "664": 397, "6676": 94, "668": 397, "6686": 94, "67": 334, "671": [22, 27, 319], "68": [320, 334], "681": [38, 41, 319], "684": 24, "6855": 334, "6865": 334, "687": 398, "687e": 125, "688": 398, "69": [77, 140, 320, 334], "693": 320, "694": 25, "695": 77, "6956": 336, "7": [2, 7, 20, 24, 26, 39, 40, 43, 71, 76, 77, 91, 94, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 155, 220, 223, 227, 228, 229, 288, 317, 320, 322, 323, 324, 325, 326, 327, 329, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 351, 354, 388, 394], "70": [64, 68, 75, 334, 341], "700": [43, 326, 334, 337, 340], "702": 20, "70200": [39, 91], "703": [32, 34, 319, 347], "7030": 336, "706": 400, "708": 334, "71": [25, 334], "7139": 76, "714": [24, 400], "7153": 76, "716": 400, "719": 320, "72": [119, 334], "7233": 24, "726": [49, 77], "7281": 334, "73": [111, 155, 288, 334], "7302": 24, "732": 345, "733": 77, "734": 324, "7355": 96, "739": 347, "74": [111, 155, 288, 334, 336], "741e": 334, "7439": 94, "746": 324, "747926": [21, 322], "7494": 320, "749519": 322, "749798": 322, "749865": 22, "75": [24, 64, 94, 273, 324, 334, 337, 347], "75015": 2, "753": 347, "7537": 24, "757": 94, "75794": 2, "758": 401, "7584": 76, "7588": 334, "76": [26, 75, 94, 322, 323, 334], "7625": 334, "763": 75, "765": [75, 352, 393], "767": [20, 27, 319], "769": [352, 393], "77": [94, 320, 334], "7716": 32, "7725": 77, "7742": 75, "777": [350, 352], "778": 347, "779e": 125, "78": [94, 334], "78153": 2, "783": [75, 111, 155, 288], "7838": 334, "784": [352, 393], "787875175476074e": 329, "7883": 25, "788e": [329, 346], "789": [111, 142], "79": [32, 76, 334], "791": [43, 91, 325, 349], "7918": 329, "7921117": [94, 318], "794": [43, 91, 325, 349], "7952": 334, "796": 75, "7_cz0": [111, 249, 254, 329], "8": [2, 7, 9, 18, 20, 25, 32, 51, 61, 67, 68, 71, 75, 76, 80, 87, 91, 94, 96, 111, 120, 125, 158, 317, 320, 322, 323, 324, 325, 326, 327, 329, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 351, 393], "80": [6, 29, 43, 75, 117, 326, 334, 340, 346], "800": [75, 334, 337, 340], "8000": 32, "801": [20, 334], "80100": [39, 91], "803": 62, "805": 324, "807972021": [111, 287], "807e": 334, "8080601692199707": 349, "8086": 334, "81": [64, 75, 334], "812": 334, "815": [43, 91, 325, 349], "816": [43, 91, 325, 349], "82": [26, 94, 334], "8202": 334, "8222": 329, "824e": 75, "826e": 75, "83": [94, 334], "832": 340, "8366": 342, "839": [20, 24, 25, 43, 75, 76, 77, 91, 322, 323, 325, 329, 332, 334, 336, 339, 342, 345, 346, 349], "84": [94, 334], "840": 340, "85": [334, 337], "850": 340, "85248": 94, "853": [19, 27, 319], "856": 336, "8567": 24, "857": [20, 75, 320, 336], "86": 75, "87": [25, 94], "87261": 121, "873": 334, "8741": 334, "8757": 76, "877": 273, "88": [18, 75, 94, 347], "881": 324, "882": [23, 25], "8842": 320, "88615": 324, "8888": [11, 87], "890": [345, 349], "891": [75, 340], "8h": 329, "8pfk5": [94, 318], "9": [2, 7, 20, 23, 25, 33, 39, 43, 64, 75, 76, 77, 84, 91, 94, 99, 111, 120, 121, 159, 173, 240, 317, 320, 322, 323, 324, 325, 326, 327, 329, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 350, 351, 377], "90": [67, 75, 76, 77, 324, 337, 341], "900": [334, 337], "9001": 32, "90063": 94, "901": [24, 320], "904": 340, "905": [20, 39], "90500": [39, 91], "9059": 320, "905torr_lt_aft": [20, 39, 329, 346], "9089": 334, "911": [43, 91, 325, 349], "913": [43, 91, 325, 349], "916": [23, 27, 319], "92": [75, 341], "920": [17, 337], "93": 75, "931": 34, "932926": 94, "9335": 94, "9342": 94, "94": [75, 125], "945": 75, "9456": 94, "948": 336, "9499999999999995": 33, "95": [33, 67, 273, 322, 337], "956": 348, "959": 77, "96": [21, 26, 76, 94, 322, 323, 336, 337, 340], "964e": [336, 339, 342], "9664": 333, "967": 329, "968": [324, 326], "96e": 339, "97": [21, 94, 322], "9718": 1, "975": 324, "9755": 26, "976": 75, "98": [26, 80, 111, 155, 288, 337], "982": 75, "982b516d00bd": 87, "984": 326, "99": [22, 24, 25, 67, 75, 77, 111, 125, 158, 337, 341], "990": 33, "9900990099009901": 33, "9949": 334, "9964": 26, "997": 320, "9977": 32, "9981": 26, "999": [20, 24, 25, 39, 329, 346, 347], "99999": 64, "999999": [111, 213], "9999999999999997": 33, "A": [1, 2, 5, 6, 7, 9, 10, 13, 19, 22, 24, 36, 39, 47, 51, 58, 68, 80, 82, 88, 90, 91, 94, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 131, 134, 141, 143, 148, 155, 200, 204, 221, 224, 225, 230, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 277, 286, 287, 288, 290, 293, 294, 295, 299, 300, 303, 304, 306, 316, 317, 318, 320, 323, 325, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 359, 378, 398, 399], "AND": [2, 111, 131], "And": [10, 68, 327, 337, 341], "As": [5, 9, 19, 21, 23, 25, 38, 51, 64, 71, 80, 86, 88, 111, 159, 162, 234, 316, 320, 322, 323, 324, 325, 326, 327, 329, 334, 336, 337, 339, 340, 345, 346, 347, 349], "At": [6, 88, 89, 90, 111, 322, 328, 329], "BE": 87, "Be": [13, 111, 269], "But": [6, 9, 38, 64, 80, 95, 111, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 317, 324, 329, 332, 334, 335, 337, 338, 340], "By": [6, 20, 39, 43, 86, 95, 97, 99, 101, 102, 104, 107, 110, 111, 114, 116, 117, 119, 124, 125, 132, 133, 142, 155, 156, 162, 170, 172, 202, 205, 220, 223, 227, 228, 229, 239, 269, 281, 283, 287, 288, 291, 296, 299, 302, 303, 304, 320, 328, 329, 332, 337, 344], "For": [2, 4, 5, 6, 7, 9, 11, 12, 20, 21, 22, 23, 39, 51, 64, 67, 68, 76, 80, 84, 85, 87, 89, 91, 93, 96, 97, 99, 110, 111, 114, 119, 128, 129, 132, 135, 143, 144, 145, 146, 147, 148, 154, 155, 165, 170, 171, 174, 175, 179, 181, 184, 185, 188, 201, 202, 204, 217, 218, 220, 264, 266, 284, 286, 287, 288, 298, 299, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 336, 337, 338, 340, 341, 342, 344, 345, 346, 347, 349, 351, 392], "If": [2, 3, 4, 6, 7, 9, 10, 11, 12, 14, 15, 43, 83, 85, 86, 87, 88, 90, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 138, 141, 142, 143, 144, 145, 146, 147, 153, 154, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 172, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 188, 193, 196, 199, 201, 202, 204, 205, 206, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 273, 278, 281, 283, 284, 285, 287, 288, 291, 293, 294, 297, 298, 299, 302, 303, 304, 306, 310, 311, 322, 324, 327, 328, 332, 333, 334, 336, 337, 339, 340, 344, 349, 388, 396], "In": [2, 5, 6, 7, 9, 10, 17, 18, 20, 21, 22, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 46, 51, 55, 60, 61, 64, 67, 68, 71, 75, 85, 86, 88, 90, 92, 94, 95, 96, 97, 98, 99, 102, 104, 107, 110, 111, 114, 116, 117, 119, 124, 125, 141, 159, 163, 180, 196, 199, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 268, 287, 299, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 335, 340, 342, 345, 347, 348, 391], "It": [4, 5, 6, 9, 10, 11, 24, 38, 40, 87, 92, 93, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 135, 139, 167, 171, 172, 173, 198, 215, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 281, 302, 316, 320, 322, 323, 324, 325, 327, 328, 329, 331, 332, 334, 336, 337, 339, 340, 341, 344, 347, 357, 391, 398, 400], "Its": [92, 93, 125, 316, 324, 378], "NOT": [86, 111, 251, 269, 328, 345], "No": [2, 9, 111, 119, 146, 220, 221, 223, 224, 225, 227, 228, 229, 230], "Not": [101, 111, 117, 131, 146, 283, 327, 333, 338], "OF": [2, 337], "OR": [111, 134], "Of": [89, 339, 340], "On": [6, 9, 95, 111, 166, 322, 324, 333], "One": [2, 6, 7, 89, 99, 111, 334, 340, 343, 344, 349, 350, 352], "Or": [7, 19, 87, 323], "Such": 2, "THAT": 327, "THE": 2, "TO": [2, 87, 337], "That": 345, "The": [2, 5, 6, 7, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 148, 156, 158, 159, 160, 161, 162, 164, 165, 167, 170, 171, 172, 173, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 192, 196, 197, 198, 199, 202, 204, 205, 206, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 273, 278, 281, 282, 284, 285, 286, 287, 292, 298, 299, 302, 306, 310, 311, 316, 320, 321, 323, 324, 325, 326, 327, 328, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 348, 363, 394, 396, 398, 400], "Then": [6, 10, 21, 29, 85, 86, 88, 90, 320, 324, 326, 328, 329, 331, 338, 340], "There": [6, 9, 12, 86, 99, 111, 196, 329, 334, 342], "These": [2, 9, 10, 24, 89, 92, 320, 323, 324, 328, 332, 334, 337, 341, 347, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "Theses": 94, "To": [4, 6, 7, 9, 11, 20, 22, 24, 38, 39, 40, 43, 51, 75, 76, 86, 87, 88, 89, 90, 96, 111, 121, 170, 188, 220, 238, 317, 320, 325, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 344, 345, 347, 349, 350], "WILL": 337, "WITH": 2, "Will": [109, 115], "With": [9, 99, 111, 131, 132, 133, 134, 202, 204, 205, 236, 287, 288, 299, 317, 320, 322, 328, 329, 332, 340], "_": [17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 91, 101, 316, 320, 322, 323, 324, 326, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349], "_1": [20, 39, 75, 100, 316, 334], "_2": [20, 39, 75, 100, 334], "_3": 75, "_4": 337, "__": 333, "__all__": 5, "__call__": 336, "__dataset_methods__": 5, "__init__": [327, 347], "__main__": 5, "__name__": 5, "__string___": 333, "_active_ctx": [121, 127], "_arg": 347, "_ax": [17, 18, 26, 33, 38, 51, 61, 111, 219, 320, 323, 325, 326], "_callback": 347, "_classic_test_patch": 337, "_context": 347, "_creat": 336, "_cstr": 336, "_dtype": 7, "_html_output": 336, "_i": 316, "_importer_method": 5, "_j": 316, "_modifi": 336, "_mpl": 337, "_nmf": 23, "_novalu": 121, "_optim": 77, "_plot1d_doc": [111, 220], "_plot2d_doc": [111, 221], "_plot3d_doc": [111, 222], "_prod_dispatch": 121, "_pseudo_sync_runn": 347, "_read_spc": 5, "_registri": [121, 127], "_repr_html_": 336, "_run": 347, "_run_cel": 347, "_run_cod": 347, "_run_module_as_main": 347, "_run_onc": 347, "_string_": 333, "_subplot": [9, 346], "_text_width": 336, "_y": 5, "a1": 340, "a2": 340, "a3": 340, "a350": 55, "a5": 7, "a6": 7, "a_1": 96, "a_decomposit": [18, 27, 319], "a_max": [111, 146], "a_min": [111, 146], "a_n": 96, "a_nddataset": [41, 319], "aa": 340, "ab": [9, 94, 96, 111, 129, 250, 287, 299, 329, 334, 340, 398], "abad0d": 94, "abc": [111, 141, 320, 398], "abcdef": 99, "abdelhafid": 94, "abdollahi": 94, "abil": 329, "abl": [6, 10, 14, 89, 92, 111, 239, 316, 340], "about": [1, 6, 7, 13, 88, 104, 111, 269, 281, 317, 326, 335, 337, 340, 354, 378], "abov": [6, 9, 10, 17, 25, 47, 86, 111, 161, 171, 317, 322, 323, 324, 328, 329, 331, 333, 334, 337, 338, 340, 341, 345, 347], "abscissa": [111, 159, 322], "absent": [111, 242, 244, 252, 253, 344], "absolut": [96, 111, 128, 287, 299, 322, 328, 329, 337], "absorb": [17, 19, 26, 38, 40, 43, 91, 111, 142, 155, 204, 249, 250, 287, 288, 299, 310, 320, 322, 323, 324, 325, 326, 329, 334, 337, 340, 345, 346, 347, 349, 377, 379], "absorpt": 94, "abstract": [18, 101], "ac": 94, "ac034173t": 94, "aca": [94, 318], "academ": 92, "acc": 329, "acceler": 320, "accent": 333, "accept": [2, 6, 9, 87, 111, 119, 127, 352, 354, 364, 391, 393, 394, 398, 399], "access": [2, 15, 55, 86, 87, 90, 95, 111, 317, 329, 332], "accompani": 2, "accord": [2, 100, 107, 111, 142, 243, 296, 316, 326, 327, 337, 378], "accordingli": [99, 111, 364], "account": [6, 12, 14, 111, 144, 156, 170, 181, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 322, 323, 354], "accumul": [111, 287, 299], "accur": [9, 114], "accuraci": [96, 99, 111, 117, 287, 299, 329], "aceto": 94, "achiev": [11, 88, 90, 96, 111, 130, 334, 338], "acid": [94, 318], "acknowledg": [2, 93], "acqdat": 5, "acquir": [2, 334], "acquisit": [5, 17, 20, 22, 25, 39, 43, 44, 61, 75, 77, 91, 111, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 284, 324, 325, 336, 339, 340, 342, 346], "acquisition_d": 111, "acqus_fil": 75, "acr": 121, "acronym": [99, 111, 236], "across": [102, 114, 117], "acscat": [94, 318], "act": 2, "acta": [94, 340], "action": [6, 7, 94, 96, 111, 361], "actionmasskinet": [22, 396, 400], "activ": [2, 6, 14, 17, 23, 25, 32, 43, 44, 47, 52, 64, 80, 83, 86, 88, 89, 90, 91, 93, 94, 98, 99, 101, 111, 120, 125, 141, 142, 148, 155, 171, 197, 204, 246, 249, 256, 278, 286, 287, 288, 297, 299, 304, 318, 320, 325, 334, 337, 338, 340, 345, 349], "activation_pca": 25, "actual": [6, 7, 20, 21, 29, 68, 91, 97, 99, 111, 320, 322, 323, 324, 326, 328, 334, 338, 340, 346], "actul": 17, "ad": [2, 6, 7, 8, 9, 13, 20, 22, 86, 92, 93, 97, 111, 120, 167, 171, 177, 214, 228, 241, 306, 311, 316, 335, 340, 350, 354, 360, 361, 368, 369, 370, 371, 374, 394, 398, 399], "adam": 96, "adapt": [2, 10, 13, 14, 16, 27, 35, 85, 110, 111, 113, 120, 124, 197, 239, 319, 333], "adata": 7, "add": [1, 3, 6, 7, 8, 9, 12, 20, 22, 25, 26, 29, 39, 55, 75, 76, 77, 88, 89, 90, 111, 120, 238, 320, 322, 323, 324, 326, 329, 333, 334, 336, 337, 338, 340, 344, 346, 347, 350, 352, 354, 362, 375, 376, 382, 383, 393, 395, 396, 400], "add_coordset": 111, "add_dataset": [120, 336], "add_mark": 4, "add_project": [120, 336], "add_script": 120, "add_valu": 9, "addit": [2, 6, 7, 9, 38, 51, 85, 92, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 143, 145, 156, 162, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 241, 278, 297, 316, 317, 324, 334, 335, 338, 345, 347, 354, 369, 391], "addition": [7, 84, 234, 328, 334, 345], "address": [2, 87, 111, 346], "adjac": [99, 111, 135], "adjust": [80, 111, 141, 241, 337], "admin": 87, "administr": 87, "adob": 337, "adrian": 94, "adsorb": 94, "adsorpt": [20, 94, 318, 324, 329, 346], "advanc": [6, 9, 92, 94, 111, 171, 318, 324, 328, 332, 343, 346], "advantag": 89, "advis": [3, 32, 111, 144, 181], "affect": [39, 92, 99, 111, 135, 171, 322, 324, 337, 340, 343, 354, 378], "affn": [111, 245, 329], "after": [2, 6, 7, 9, 10, 11, 12, 26, 64, 96, 110, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 312, 315, 316, 320, 324, 326, 328, 329, 337, 340, 341, 342, 346, 347, 349, 361, 376], "afterward": [117, 341], "ag": 94, "again": [6, 24, 64, 87, 89, 111, 239, 249, 250, 322, 329, 337], "against": [2, 6, 99, 111, 131, 132, 133, 134, 202, 204, 205, 236, 287, 288, 299], "agg": 337, "agg_path_chunks": 337, "aggreg": 335, "agir": 94, "agirdata": [111, 241, 261], "agre": 2, "agreement": 2, "ahap": [109, 115], "ahead": 7, "aim": 215, "ait": [94, 318, 327], "aka": 114, "akbari": 94, "al": [16, 19, 26, 27, 35, 76, 93, 94, 96, 97, 99, 101, 102, 107, 110, 111, 114, 117, 124, 125, 239, 282, 316, 318, 319, 321, 323, 332, 340, 352, 361, 393, 399], "al2o3": 329, "alberto": 94, "alchem0x2a": 48, "alert": 333, "alessandro": 94, "alexandr": 94, "algorithm": [9, 64, 68, 75, 92, 94, 96, 97, 101, 102, 107, 110, 111, 114, 117, 119, 124, 125, 139, 144, 160, 181, 269, 281, 282, 302, 316, 322, 324, 340, 347, 361, 398], "alia": [8, 9, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 170, 207, 208, 209, 210, 211, 212, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 254, 256, 257, 269, 271, 274, 278, 281, 297, 302, 305, 307, 308, 309, 339, 398, 399], "alias": 9, "align": [93, 111, 337, 343, 357, 359], "alinaghi": 94, "alk1100494": 329, "all": [2, 6, 7, 9, 10, 11, 14, 15, 23, 25, 33, 47, 48, 51, 75, 76, 86, 87, 88, 90, 91, 92, 93, 97, 99, 100, 101, 102, 103, 107, 110, 111, 114, 116, 117, 119, 120, 124, 125, 130, 132, 133, 134, 142, 147, 148, 164, 166, 169, 171, 173, 180, 187, 196, 199, 202, 205, 206, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 267, 284, 285, 286, 316, 317, 319, 320, 321, 322, 324, 327, 328, 331, 332, 333, 334, 337, 339, 340, 345, 346, 347, 350, 355, 359, 387], "alladio": 94, "allevi": [111, 287, 299], "allitem": 120, "allnam": 120, "alloc": [99, 111, 173], "allow": [2, 3, 6, 7, 9, 11, 12, 14, 24, 38, 86, 87, 92, 96, 98, 99, 100, 101, 111, 141, 173, 241, 283, 320, 322, 326, 328, 329, 331, 334, 335, 336, 338, 339, 340, 345, 349, 352, 376, 378, 393, 398, 400], "allows_non": 111, "almost": [6, 10, 97, 111, 139, 187, 325, 334], "alon": [14, 329], "along": [6, 43, 75, 76, 77, 93, 97, 99, 102, 104, 110, 111, 130, 131, 132, 133, 134, 136, 137, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 159, 160, 165, 179, 181, 183, 184, 185, 202, 204, 205, 206, 236, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 270, 278, 281, 282, 283, 284, 286, 287, 288, 297, 298, 299, 302, 329, 337, 340, 343, 346, 347, 359], "alpha": [102, 111, 119, 179, 184, 185], "alpha_h": 114, "alpha_w": 114, "alphabet": 100, "alreadi": [6, 14, 15, 17, 25, 89, 100, 102, 111, 317, 320, 328, 329, 331, 332, 345, 375, 396], "als2004dataset": [19, 21, 26, 322, 323], "also": [6, 7, 10, 11, 15, 19, 21, 24, 29, 40, 43, 51, 61, 64, 68, 75, 84, 88, 89, 90, 92, 93, 95, 96, 99, 101, 102, 110, 111, 114, 116, 117, 119, 124, 125, 130, 135, 160, 172, 200, 226, 239, 249, 317, 320, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 344, 347, 391, 394, 397, 398], "alt": 333, "alter": [2, 337], "altern": [6, 21, 71, 80, 85, 89, 94, 110, 111, 114, 120, 197, 216, 316, 318, 322, 332, 333, 334, 337, 342, 347], "although": 92, "alwai": [7, 9, 10, 92, 96, 97, 98, 99, 109, 111, 115, 119, 234, 287, 299, 317, 320, 323, 327, 328, 332, 337], "amax": [99, 111, 133, 202, 205], "ambigu": 334, "amend": 2, "amic": 2, "amin": [99, 111, 132, 202, 205], "among": [80, 92, 93, 96, 97, 99, 100, 107, 108, 111, 160, 206, 220, 221, 222, 224, 225, 226, 230, 231, 232, 283, 316, 324], "amount": [5, 7, 9, 24, 111, 117, 158, 165, 183, 206, 316, 337, 341], "amp": 327, "ampl": [32, 76, 140, 178, 200, 234, 277, 300, 320], "amplitud": [116, 320, 337], "amplitude_mod": 116, "amsterdam": 22, "an": [1, 2, 5, 6, 7, 9, 10, 11, 20, 21, 22, 32, 38, 42, 45, 48, 49, 57, 75, 76, 77, 80, 85, 86, 87, 88, 89, 90, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 154, 158, 159, 160, 163, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 183, 184, 185, 188, 190, 201, 202, 205, 206, 213, 214, 217, 218, 224, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 278, 281, 282, 284, 285, 287, 290, 291, 293, 294, 295, 297, 298, 299, 302, 305, 307, 308, 309, 310, 311, 316, 318, 319, 320, 321, 322, 323, 325, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 394, 396, 399, 400], "ana": 94, "anaconda": [6, 84, 89, 90, 369], "anal": 347, "analog": 7, "analys": [92, 93, 322, 327], "analysi": [1, 16, 17, 22, 24, 26, 27, 73, 74, 78, 83, 86, 92, 93, 94, 99, 100, 101, 102, 107, 108, 110, 111, 114, 116, 117, 124, 125, 165, 170, 171, 217, 239, 249, 258, 282, 316, 318, 319, 322, 326, 332, 340, 362, 392, 396, 398, 399, 400], "analyt": 94, "analytica": [94, 340], "analyticalsciencejourn": 94, "analyz": [0, 111, 171, 332], "anamysi": 117, "andrea": 94, "ang": 2, "angle3": 324, "ani": [2, 6, 7, 9, 12, 14, 51, 86, 88, 89, 92, 93, 95, 97, 99, 101, 102, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 131, 132, 133, 135, 141, 148, 160, 202, 205, 217, 221, 224, 225, 230, 268, 269, 278, 281, 286, 302, 316, 322, 324, 328, 329, 331, 332, 333, 337, 338, 340, 394], "anim": 337, "anna": 94, "annal": 24, "annemi": 94, "annex": 2, "annot": [75, 76, 117, 324], "anomal": [111, 159], "anoth": [6, 9, 55, 67, 68, 87, 88, 99, 111, 162, 192, 323, 326, 329, 330, 334, 337, 340, 346, 349], "answer": [340, 346], "antialias": 337, "anyio": 7, "anymor": [352, 393], "anyth": [9, 337], "anytim": 337, "anywai": 84, "apach": 92, "apcatb": [94, 318], "api": [6, 10, 12, 14, 19, 21, 23, 24, 25, 26, 29, 43, 48, 80, 83, 88, 89, 90, 91, 92, 93, 99, 111, 177, 316, 320, 322, 323, 324, 325, 326, 328, 329, 334, 336, 338, 339, 341, 342, 343, 344, 345, 346, 348, 349, 354, 362, 367, 374, 387], "apod": [60, 61, 62, 83, 93, 111, 143, 145, 165, 170, 179, 183, 184, 185, 188, 237, 280, 284, 298, 319, 342, 343, 344, 383], "apod_arr": [111, 143, 145, 165, 179, 183, 184, 185, 284, 298], "app": 347, "appar": [67, 341], "appear": [6, 43, 75, 80, 88, 90, 111, 163, 316, 329, 338], "append": [75, 111, 113, 120, 334, 347], "appl": [329, 337], "appli": [2, 7, 25, 40, 60, 61, 71, 76, 80, 94, 97, 100, 101, 102, 104, 107, 110, 111, 114, 116, 117, 119, 124, 125, 143, 145, 148, 149, 150, 154, 158, 159, 165, 170, 174, 175, 179, 183, 184, 185, 188, 201, 216, 217, 218, 264, 266, 269, 270, 281, 284, 286, 298, 302, 318, 322, 324, 332, 334, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 398], "applic": [2, 6, 11, 77, 84, 87, 88, 91, 92, 94, 95, 99, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 316, 317, 322, 331, 332, 334, 335, 340, 347, 354], "approach": [10, 64, 92, 94, 97, 318, 343], "appropri": [4, 5, 6, 7, 111, 171, 334], "approxim": [22, 96, 102, 109, 111, 114, 115, 278, 297, 324], "apt": [6, 89, 329], "aq": [111, 284, 339], "ar": [0, 2, 3, 5, 6, 7, 9, 10, 11, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 29, 32, 33, 40, 47, 51, 55, 60, 68, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 141, 142, 144, 146, 159, 160, 161, 163, 169, 170, 171, 172, 173, 179, 180, 181, 192, 196, 199, 202, 204, 205, 206, 216, 220, 221, 224, 225, 230, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 269, 270, 278, 281, 283, 284, 287, 288, 292, 299, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 329, 331, 332, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "arang": [18, 96, 99, 111, 142, 172, 177, 180, 199, 214, 311, 323, 334, 345, 346], "arbitrari": [96, 102, 111, 166, 234, 320, 338, 400], "arbitrarili": [109, 115, 119], "arc3": 337, "archiv": [29, 85, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260], "area": [48, 75, 77, 110, 111, 116, 118, 220, 223, 227, 228, 229, 325], "arg": [5, 9, 100, 110, 111, 117, 120, 124, 127, 140, 157, 168, 178, 190, 200, 216, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 277, 278, 279, 300, 301, 304, 305, 306, 307, 308, 309, 347], "argmax": [99, 111, 132, 133, 202, 205, 316, 326], "argmin": [99, 111, 132, 133, 202, 205], "argnam": 120, "argsgetconc": [22, 110], "argsgetspec": 110, "argument": [4, 7, 9, 19, 21, 23, 33, 43, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 128, 129, 130, 135, 148, 163, 180, 196, 199, 207, 208, 209, 210, 211, 212, 216, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 320, 326, 327, 328, 329, 334, 337, 345, 347, 354, 364, 391, 398], "ari": 94, "aris": [2, 332, 334], "arithmet": [99, 111, 142, 180, 204, 287, 288, 299, 334], "armin": 94, "arnaud": [0, 94], "around": [7, 93, 99, 104, 111, 159, 265, 269, 281, 332, 334, 337, 341, 344, 349], "arpack": 117, "arr": [7, 9], "arrai": [7, 9, 18, 22, 25, 33, 38, 43, 75, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 131, 132, 133, 134, 135, 142, 143, 145, 146, 147, 149, 150, 155, 156, 161, 162, 163, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 189, 196, 199, 202, 204, 205, 206, 213, 214, 216, 221, 222, 238, 240, 241, 243, 247, 248, 262, 263, 269, 270, 281, 284, 285, 287, 288, 290, 292, 293, 294, 298, 299, 302, 310, 311, 313, 314, 316, 317, 329, 334, 336, 338, 343, 344, 346, 354, 396, 399], "arrang": [2, 206, 346], "array_lik": [96, 99, 111, 131, 132, 133, 134, 142, 146, 149, 150, 155, 160, 161, 196, 199, 202, 204, 205, 287, 288, 299], "arrheniu": 96, "arrowprop": [324, 337], "arrowstyl": [324, 337], "art": [2, 92], "articl": [2, 6, 94, 318, 337], "artifact": [337, 348], "artifici": 345, "arxiv": 94, "asc": [111, 251, 355], "ascend": 346, "ascii_lowercas": 9, "asfortranarrai": 111, "asi": 347, "ask": 6, "asl": [64, 80, 97, 111, 144, 160, 181, 282, 316, 340, 398], "aspect": 9, "assert": [5, 7, 17, 33, 55, 111, 113, 120], "assert_array_equ": 7, "assert_dataset_equ": 7, "assess": 324, "assign": [29, 111, 240, 328, 334, 346], "assist": 2, "associ": [2, 6, 100, 111, 120, 142, 316, 324], "assum": [9, 17, 48, 55, 75, 88, 90, 96, 97, 100, 111, 142, 165, 183, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 270, 273, 323, 328, 332, 334, 338, 345], "assumpt": 117, "assymetri": 64, "asterisk": 333, "astyp": [7, 9, 99, 111, 342], "asym": [32, 140, 277, 320], "asymmetr": [64, 94, 97, 111, 139, 140, 144, 160, 181, 282, 316, 320, 340], "asymmetri": [64, 80, 97, 111, 139, 340], "asymmetricvoigtmodel": [32, 320], "async_": 347, "async_help": 347, "asyncio": 347, "asyncio_loop": 347, "atleast_2d": 111, "atmospher": [94, 318], "atol": 96, "atom": 94, "atomiqu": 2, "atr": [94, 318], "attach": [2, 12, 333], "attack": 2, "attempt": [111, 163, 239, 249, 328, 332], "attent": [2, 9], "attribut": [2, 5, 17, 20, 24, 25, 26, 39, 40, 55, 64, 80, 91, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 127, 140, 178, 200, 234, 269, 277, 281, 292, 300, 302, 322, 323, 324, 326, 329, 335, 336, 337, 338, 340, 344, 378, 383, 392, 394], "aug": 94, "augment": 321, "authent": 2, "author": [0, 2, 7, 20, 22, 24, 25, 38, 43, 75, 76, 77, 91, 92, 111, 322, 323, 325, 327, 329, 332, 334, 336, 339, 342, 345, 346, 349], "auto": [7, 10, 111, 117, 130, 220, 223, 226, 227, 228, 229, 337], "auto_examples_analysi": [27, 30, 34, 36], "auto_examples_cor": [41, 49, 53, 56, 58], "auto_examples_process": [62, 65, 69, 72, 78, 81, 82], "autoampl": 116, "autobas": [32, 116, 320], "autohint": 337, "autolayout": [111, 221, 222, 224, 225, 230, 231, 232, 322, 323, 337], "autom": [5, 7, 20, 321], "automat": [2, 4, 7, 9, 10, 24, 26, 43, 92, 93, 96, 97, 99, 107, 111, 116, 120, 130, 139, 141, 144, 158, 160, 171, 181, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 282, 286, 306, 320, 324, 334, 336, 337, 340, 342, 344, 361, 378, 380, 387, 394, 396], "automatiqu": 2, "automobil": [94, 318], "autoposit": 337, "autoscal": [32, 76, 320], "autosub": [97, 111, 139, 144, 160, 181, 282], "avail": [2, 5, 6, 7, 29, 32, 51, 68, 75, 76, 84, 104, 111, 119, 164, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 295, 306, 328, 334, 337, 340, 341, 394, 398, 400], "available_nam": 100, "available_styl": [111, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 337], "avant": 337, "averag": [102, 104, 111, 114, 159, 204, 206, 278, 281, 287, 299, 337, 343], "avers": 92, "avg": [104, 111, 142, 278, 281, 347], "avoid": [7, 9, 11, 43, 76, 87, 100, 110, 324, 327, 328, 334, 337, 339, 345, 346, 363, 391], "await": 347, "awar": [111, 171, 269, 317, 334, 335, 336, 338, 378], "ax": [9, 20, 23, 24, 29, 32, 52, 64, 71, 75, 76, 97, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 131, 132, 134, 202, 206, 212, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 320, 322, 323, 324, 326, 329, 334, 337, 340, 342, 344, 345, 346, 347, 349, 364], "ax1": 337, "axe21": 340, "axec": 111, "axect": 111, "axei": 111, "axes3d_grid": 337, "axes_autolimit_mod": 337, "axes_axisbelow": 337, "axes_edgecolor": 337, "axes_facecolor": 337, "axes_formatter_limit": 337, "axes_formatter_offset_threshold": 337, "axes_formatter_use_local": 337, "axes_formatter_use_mathtext": 337, "axes_formatter_useoffset": 337, "axes_grid": 337, "axes_grid_axi": 337, "axes_grid_which": 337, "axes_labelcolor": 337, "axes_labelpad": 337, "axes_labels": 337, "axes_labelweight": 337, "axes_linewidth": 337, "axes_prop_cycl": 337, "axes_spines_bottom": 337, "axes_spines_left": 337, "axes_spines_right": 337, "axes_spines_top": 337, "axes_titlei": 337, "axes_titlepad": 337, "axes_titles": 337, "axes_titleweight": 337, "axes_unicode_minu": 337, "axes_xmargin": 337, "axes_ymargin": 337, "axessubplot": [9, 346], "axex": 111, "axhlin": 324, "axi": [5, 9, 17, 21, 22, 32, 38, 44, 48, 76, 98, 99, 100, 102, 104, 111, 117, 121, 130, 131, 134, 136, 137, 141, 142, 143, 145, 148, 151, 152, 154, 155, 158, 165, 170, 174, 175, 179, 183, 184, 185, 188, 191, 201, 204, 206, 217, 218, 220, 223, 227, 228, 229, 264, 266, 269, 278, 281, 283, 284, 286, 287, 288, 289, 297, 298, 299, 302, 320, 322, 323, 337, 340, 344, 345, 346, 349, 356, 400], "axrrai": [111, 295], "axt": 111, "axvlin": [75, 324], "az1787": [20, 24, 25, 43, 75, 76, 77, 91, 322, 323, 325, 329, 332, 334, 336, 339, 342, 345, 346, 349], "azzolina": 94, "b": [0, 2, 6, 17, 22, 47, 51, 60, 61, 71, 80, 92, 94, 96, 99, 111, 121, 128, 129, 140, 141, 148, 163, 238, 241, 243, 286, 320, 327, 330, 333, 334, 337, 339, 347], "b1": [2, 51], "b2": [18, 51], "b3": 51, "b350": 55, "b4": 51, "b978": 94, "b9780444527011000478": 94, "b_1": 96, "b_crossdecomposit": [30, 319], "b_ev": [17, 18, 101], "b_n": 96, "ba": 80, "back": [99, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 172, 327, 333, 337, 339], "backend": [85, 98, 337, 376], "background": [4, 94, 111, 240, 242, 244, 252, 253, 257, 329, 337, 376], "backgroung": [111, 242, 244, 252, 253], "backslash": [87, 328], "backtick": 9, "backward": [17, 18, 96, 101, 111, 329, 337, 346, 398], "bad": [9, 119, 396], "badli": [68, 341], "bai": 324, "balan": 94, "balanc": 347, "banc": 329, "band": 344, "bar": [9, 15, 19, 87, 102, 111, 117, 220, 223, 328, 337, 375], "bare": 7, "barrier": [94, 318], "bartlett": [104, 111, 165, 179, 183, 237, 279, 280, 281, 284, 298, 347], "basc": [64, 97, 111, 139, 160, 181, 282, 320, 343, 360, 398], "base": [1, 2, 3, 6, 9, 18, 64, 75, 85, 87, 88, 89, 90, 94, 96, 97, 99, 101, 111, 117, 139, 159, 171, 180, 194, 199, 215, 219, 239, 269, 281, 293, 302, 318, 323, 324, 326, 328, 329, 332, 337, 340, 341, 342, 345, 347, 355, 398, 399, 400], "base64": [102, 110], "base_ev": 347, "baseconfigur": [97, 101, 102, 104, 107, 109, 110, 114, 115, 117, 119, 124, 125], "basefileselector": [352, 393], "baseformatt": 336, "baselin": [65, 68, 74, 75, 78, 83, 92, 93, 94, 98, 111, 116, 139, 141, 144, 156, 160, 171, 181, 220, 223, 227, 228, 229, 234, 258, 282, 316, 319, 325, 332, 341, 343, 354, 357, 359, 360, 361, 398], "baselinecorrect": [98, 398], "baselinecorrector": 376, "baseobject": 336, "bash": 7, "bash_profil": 88, "bashrc": 88, "basi": [2, 7, 111, 220, 223, 227, 228, 229, 316], "basic": [6, 9, 51, 64, 67, 92, 111, 171, 327, 332, 334, 337, 340, 343], "basinhop": 116, "bastl": 94, "bat": 90, "batch": 90, "bazin": 94, "bbox": [324, 337], "bd": 80, "bdf": 96, "beadapt": 90, "beam": [94, 329], "beata": 94, "becaus": [7, 10, 92, 109, 111, 115, 119, 131, 324, 328, 329, 331, 334, 337, 338, 346, 347], "becom": [2, 9, 111, 146, 345], "been": [2, 5, 6, 10, 11, 13, 14, 20, 43, 48, 75, 84, 87, 88, 90, 92, 98, 99, 100, 111, 162, 186, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 322, 324, 328, 329, 332, 334, 336, 337, 339, 340, 342, 344, 345, 346, 349, 356, 374, 378, 394, 396, 398, 399, 400], "beequal": 334, "befor": [6, 7, 9, 11, 14, 80, 87, 88, 90, 91, 92, 97, 99, 102, 110, 111, 114, 119, 132, 133, 142, 143, 145, 165, 179, 183, 184, 185, 202, 205, 270, 284, 287, 298, 299, 322, 326, 329, 332, 333, 337, 339, 340, 342, 344, 346, 347, 348, 357, 392], "beforehand": 7, "begin": [9, 75, 320], "beginn": 332, "behav": [320, 328, 334, 336], "behavior": [4, 7, 9, 14, 21, 99, 111, 153, 327, 354, 367, 378, 388, 396], "behaviour": [111, 284, 327, 334, 339, 373, 400], "behind": 2, "being": [2, 4, 7, 9, 11, 33, 87, 92, 111, 285, 324], "belarra": 94, "bell": [59, 62, 73, 111, 237, 258, 280, 284, 319, 339, 347], "belong": [97, 340], "below": [5, 6, 9, 32, 76, 86, 88, 89, 90, 99, 111, 161, 199, 234, 284, 287, 299, 317, 320, 322, 324, 325, 327, 328, 329, 331, 334, 337, 339, 340, 345, 347, 350], "benefici": 96, "benzen": [5, 111, 255], "bernstein": 94, "bert": 94, "besid": [2, 9, 327, 347], "best": [2, 6, 51, 52, 61, 64, 71, 75, 86, 109, 111, 115, 119, 160, 320, 323, 325, 337, 347], "beta": 114, "beta_loss": 114, "better": [9, 11, 22, 24, 51, 64, 75, 80, 97, 111, 114, 139, 324, 326, 335, 337, 340, 341, 347, 350, 354], "between": [2, 6, 9, 24, 25, 68, 96, 97, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 124, 125, 130, 135, 139, 159, 171, 196, 199, 206, 226, 240, 322, 324, 325, 335, 337, 346, 347, 348, 351], "bevel": 337, "bewar": [7, 337], "beyond": [84, 329, 346, 347], "beyramysoltan": 94, "bhat": 94, "bi": 5, "bibliographi": 93, "bibtex": 0, "bidimension": 117, "big": [46, 84, 334], "bijlsma": [22, 94], "bilinear": 337, "billion": 329, "bin": [88, 337], "binari": [2, 111, 120, 197, 317, 329, 334, 335, 338, 339, 343], "bind": [2, 87], "biomol": 1, "biosystem": 22, "bird": 9, "bit": [88, 90], "bitbucket": [6, 89], "black": [4, 6, 33, 51, 75, 76, 320, 324, 337], "blackman": [104, 111, 145, 281, 347], "blackmanharri": [111, 165, 179, 183, 237, 279, 280, 284, 298], "blake": [38, 334], "blal": [94, 318, 327], "blank": [6, 9, 48, 206, 333, 337], "blc": [64, 80, 91, 325, 340], "blend": 119, "blob": 48, "block": [7, 9, 32, 76, 86, 92, 320, 329, 333], "blocker": 10, "blue": [9, 51, 322, 324, 333, 337], "bm": [329, 337], "bmh": 337, "bodi": [6, 347], "boelen": [64, 94, 97, 111, 139], "bogaert": 94, "bokeh": 3, "bokhoven": 94, "bold": [9, 333, 337], "bolder": 337, "bole": 94, "bookman": 337, "bool": [9, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 127, 130, 131, 132, 133, 134, 141, 143, 145, 153, 154, 163, 165, 170, 171, 174, 175, 179, 180, 183, 184, 185, 188, 193, 196, 199, 201, 202, 204, 205, 206, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 270, 283, 284, 285, 287, 288, 289, 291, 293, 294, 296, 298, 299, 312, 313, 314, 315, 346], "boolean": [9, 97, 102, 111, 127, 131, 134, 345], "border": [324, 337], "both": [2, 6, 9, 18, 21, 29, 97, 98, 100, 110, 111, 119, 123, 170, 179, 220, 223, 227, 228, 229, 316, 322, 323, 325, 326, 329, 334, 337, 338, 340, 341, 342, 347, 397], "bottom": [80, 83, 206, 336, 337], "bound": 396, "boundari": [119, 337, 347], "boussard": 94, "box": [111, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 324, 330, 337], "boxstyl": 324, "bp": [2, 340], "br": 333, "bracket": [9, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 334], "braga": 94, "braket": [111, 249], "branch": [89, 110], "braun": [140, 320], "breach": 2, "break": [7, 340, 351, 373], "breakag": 7, "breakpoint": [97, 111, 160, 340], "brian": 328, "brief": [324, 337], "bright": 337, "bring": 6, "broad": [2, 9], "broadcast": [99, 111, 131, 132, 133, 134, 146, 202, 204, 205, 236, 287, 288, 299, 338, 345], "broaden": [60, 111, 165, 183, 341, 343], "broken": 361, "brought": 2, "brown": 94, "browser": [10, 86, 87, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 331], "bruker": [42, 46, 49, 57, 60, 61, 75, 76, 77, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 284, 319, 328, 330, 334, 336, 339, 342, 348, 354], "brukeropusread": [1, 329], "bsd": 92, "bsd3": [111, 186], "bug": [6, 14, 92, 93, 327, 329, 346, 351, 374], "buggi": 4, "build": [6, 7, 9, 13, 20, 361, 368, 387, 390], "built": [9, 10, 14, 75, 77], "builtin": 347, "bunch": 96, "burden": 92, "busi": 2, "buten": [94, 318], "butt": 337, "button": [6, 15, 87, 90, 98, 103], "byte": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "bytesio": 5, "b\u00f6r": 94, "c": [1, 2, 18, 21, 22, 23, 26, 29, 33, 51, 61, 68, 75, 80, 85, 87, 88, 89, 90, 91, 94, 95, 96, 99, 100, 101, 102, 107, 110, 111, 114, 117, 119, 124, 125, 148, 163, 174, 175, 220, 223, 227, 228, 229, 264, 286, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 352, 354, 392, 393], "c0": [22, 38, 99, 322, 334], "c1": [17, 38, 99, 334], "c2": [17, 38], "c3": 17, "c3cp51146d": 94, "c_": [22, 110], "c_0": 322, "c_10": 234, "c_2": [234, 320], "c_3": [234, 320], "c_4": [234, 320], "c_5": 234, "c_6": 234, "c_7": 234, "c_8": 234, "c_9": 234, "c_constrain": [22, 110], "c_constrained_list": 110, "c_curvefit": [34, 319], "c_exp": 96, "c_i": [234, 320], "c_import": [49, 319], "c_l": 110, "c_ls_list": 110, "c_name": 96, "c_pressur": [20, 39], "c_t": 110, "c_time": [20, 39], "c_wavelength": 39, "c_wavenumb": 39, "ca": [108, 111, 164, 340], "cach": 11, "cadmium": 348, "calc": 324, "calcul": [18, 33, 40, 80, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 128, 129, 142, 143, 145, 155, 159, 165, 170, 171, 179, 181, 183, 184, 196, 203, 234, 235, 284, 287, 288, 298, 299, 320, 324, 334, 343, 344, 345, 346], "calibr": [29, 326], "call": [2, 7, 9, 24, 85, 90, 97, 99, 101, 102, 103, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 172, 177, 197, 239, 249, 250, 291, 316, 323, 326, 328, 329, 332, 333, 336, 340, 344, 345, 347, 386, 392], "callabl": [96, 99, 102, 108, 110, 111, 172, 216], "callback": 116, "callback_everi": 116, "callegaro": 94, "can": [2, 5, 6, 7, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 131, 132, 133, 134, 142, 146, 148, 149, 150, 159, 160, 162, 164, 167, 171, 177, 196, 197, 202, 205, 214, 220, 221, 228, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 268, 269, 273, 281, 286, 287, 291, 299, 302, 311, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 359, 360, 364, 380, 385, 386, 400], "cancel": [2, 328], "cannot": [24, 40, 46, 92, 99, 111, 114, 120, 121, 291, 322, 324, 327, 329, 333, 334, 336, 337, 338, 345, 348, 349], "cantera": [6, 7, 88, 90, 350, 352, 361, 368], "cantera_util": 85, "cap": 337, "capabl": [93, 111, 317, 334, 335, 337, 340], "capit": [2, 9], "caption": 333, "captur": [4, 94, 316, 318], "care": [7, 68, 99, 111, 135, 341], "carefulli": [75, 333], "cargil": 29, "carlson": 94, "carmen": 94, "carolin": 94, "carri": [2, 124, 316, 322], "carriag": 333, "carrier": 94, "carroucel": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 316], "carroucell_samp": [111, 240], "casali": 94, "case": [2, 5, 6, 7, 9, 24, 38, 43, 75, 76, 85, 87, 92, 96, 97, 99, 101, 102, 104, 107, 110, 111, 114, 116, 117, 119, 124, 125, 131, 134, 135, 141, 142, 179, 180, 196, 199, 238, 269, 316, 320, 324, 325, 327, 329, 331, 332, 334, 340, 341, 342, 344, 347, 349, 397], "cast": [7, 9, 99, 109, 111, 115, 345], "castillejo": 94, "cat": 9, "catal": 94, "catalina": 88, "catalysi": [94, 318], "catalyst": [20, 94, 318, 324], "catalyt": [94, 318], "catch": [7, 111, 141, 324, 327], "categor": 327, "categori": 321, "catherin": 94, "cauchi": [200, 320], "caught": 327, "caus": [2, 7, 111, 287, 299, 327, 337], "caution": [111, 166], "caveat": 7, "cc79a7": 337, "ccount": [322, 323, 337], "ccurr": 110, "cd": [6, 11, 89, 90, 95, 114, 331], "cdot": [102, 110, 316, 325, 352, 393], "ce": 2, "cea": 2, "cecil": [0, 2, 92, 327], "cedex": 2, "ceil": [99, 111, 138, 265], "cell": [20, 39, 86, 94, 316, 318, 327, 328, 331, 333, 337, 340], "cell_nam": 347, "cem": 94, "center": [17, 18, 20, 26, 33, 109, 115, 320, 323, 324, 337, 362], "centerednorm": 337, "centimet": 324, "centr": [2, 94], "central": [337, 347], "centuri": 337, "certain": 337, "certainli": [328, 332], "cexp": 96, "cfbruker": [111, 284, 339], "chain": [111, 216, 322], "chanc": [6, 347], "chanceri": 337, "chang": [10, 13, 17, 20, 21, 22, 39, 40, 44, 55, 64, 75, 87, 88, 89, 92, 93, 95, 96, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 193, 196, 220, 221, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 281, 291, 302, 322, 324, 327, 328, 329, 334, 336, 340, 343, 345, 347, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 391, 395, 397, 398, 399, 401], "changelog": [7, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "channel": [6, 20, 88, 90, 111, 251, 369], "channel_prior": 6, "char": [6, 99, 100, 320], "charact": [328, 333, 336], "character_cod": 337, "characterist": [2, 80, 332], "charg": 2, "charlott": 94, "charter": 337, "check": [4, 6, 7, 10, 19, 23, 52, 64, 84, 87, 89, 92, 93, 99, 111, 113, 116, 120, 121, 127, 146, 192, 251, 269, 283, 316, 324, 328, 332, 334, 336, 340, 369, 370, 378, 381, 390], "check_upd": 373, "checkout": 6, "chellaboina": [94, 96], "chem": [93, 94, 347], "chemic": [85, 92, 94, 96, 107, 108, 318], "chemistri": [0, 94, 327], "chemolab": [94, 322, 323], "chemometr": [18, 26, 94, 332], "chemrxiv": [94, 318], "chen": 94, "chesnai": 2, "chevali": 94, "chimica": [94, 340], "chn": 329, "choic": [3, 9, 64, 85, 89, 96, 323], "choos": [2, 71, 84, 111, 219, 324, 331, 332, 340, 347], "chose": 88, "chosen": [68, 87, 108, 111, 158, 220, 223, 226, 227, 228, 229, 316, 328, 341], "christian": [0, 94], "chromatograph": 94, "chromatographi": 94, "chrome": 86, "ci": [6, 11, 361], "circular": [111, 154, 333], "circumcircl": 107, "circumst": 2, "citat": 92, "cite": [93, 107, 341, 361], "ckin": 22, "cl": [99, 111, 121, 172, 196, 199], "claim": [2, 332], "clarifi": 6, "clariti": [322, 323, 340], "class": [9, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 131, 134, 139, 140, 144, 160, 178, 181, 197, 200, 234, 239, 249, 250, 277, 282, 300, 317, 321, 322, 333, 334, 340, 396, 398, 400], "classic": [9, 24, 52, 99, 111, 198, 322, 328, 337, 340, 346], "classif": 24, "classmethod": [111, 120, 121, 177, 239, 249, 250], "clayton": 94, "clean": [10, 97, 215, 354, 389], "cleanup": 6, "clear": [6, 22, 29, 32, 33, 60, 61, 64, 68, 71, 75, 76, 80, 111, 119, 220, 221, 223, 224, 225, 227, 228, 229, 230, 320, 322, 324, 326, 337, 339, 340, 341, 342, 344, 347, 349], "clearli": [7, 322, 323, 340, 341, 347], "click": [6, 7, 15, 87, 92, 103, 331], "climat": 363, "clip": 111, "clock": [111, 240], "clone": [6, 7, 15, 86], "close": [5, 9, 32, 96, 99, 111, 196, 316, 324, 325, 340, 344, 347, 398], "close_figur": 111, "closer": [111, 171, 340], "closest": [95, 111, 170, 188, 346], "closur": [94, 110, 316], "closureconc": 110, "closuremethod": 110, "closuretarget": 110, "cloud": [84, 369], "cm": [17, 19, 20, 22, 25, 38, 39, 40, 43, 51, 75, 91, 99, 111, 142, 204, 249, 278, 297, 320, 324, 325, 329, 334, 337, 340, 344, 346, 347, 349], "cmap": [22, 29, 51, 119, 322, 326, 337, 340, 385, 391], "cmd": 90, "cnr": 2, "co": [20, 39, 91, 94, 111, 179, 184, 185, 318, 324, 329, 346], "co2": 94, "cobalt": [94, 318], "coca": [94, 318], "code": [2, 9, 10, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 86, 89, 92, 317, 331, 333, 334, 343, 347, 363, 387, 389], "code_ast": 347, "code_obj": 347, "codeclim": [361, 366], "coef": [33, 109, 111, 115, 141, 320], "coeffici": [94, 109, 111, 115, 119, 141, 179, 347], "coerc": 345, "coher": 2, "col": 206, "colab": [84, 350, 352, 355, 361, 381, 393], "colaboratori": [84, 370, 381], "cold": [38, 334], "colleagu": 92, "collect": [4, 7, 100, 111, 249, 316, 383], "collection_length": 383, "collis": 337, "colomap": 337, "colon": [9, 336, 346], "color": [9, 33, 51, 60, 61, 64, 71, 75, 76, 80, 97, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 206, 220, 223, 226, 227, 228, 229, 320, 322, 324, 337, 339, 340, 347, 354, 391], "color_map": [24, 117], "colorbar": [20, 39, 47, 75, 91, 111, 206, 221, 222, 224, 225, 230, 231, 232, 324, 325, 337, 338, 345, 349], "colorblind": [97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 337], "colorblind10": 337, "colormap": [19, 23, 51, 75, 91, 97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 324, 325, 337, 338, 340, 345, 349, 400], "colorscal": 354, "colorspec": 337, "column": [9, 17, 21, 22, 23, 25, 48, 76, 96, 111, 117, 163, 169, 187, 206, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 316, 322, 323, 337, 346, 349], "columnwis": 322, "com": [6, 29, 43, 48, 86, 89, 94, 322, 326, 333, 340, 347, 394], "combin": [4, 6, 94, 114, 318, 328, 337], "come": [2, 5, 99, 111, 236, 320, 327, 328, 329], "comfort": 331, "comma": [9, 336, 337, 346], "command": [6, 7, 11, 17, 38, 84, 86, 87, 88, 89, 90, 92, 95, 111, 220, 223, 227, 228, 229, 327, 328, 331, 337, 340, 348, 350, 352], "commenc": 2, "comment": [6, 9, 10, 14, 19, 32, 75, 76, 77, 80, 111, 320, 334], "commerci": [2, 92], "commissariat": 2, "commit": [2, 4, 13, 351], "common": [4, 6, 7, 9, 32, 76, 89, 111, 179, 220, 223, 227, 228, 229, 320, 329, 334, 338], "commonli": [125, 300, 320], "commonratio": 76, "commonwidth": 76, "commun": [2, 6, 14, 92, 94], "como": [324, 329], "compact": 121, "compani": 92, "compar": [6, 7, 17, 21, 22, 29, 99, 111, 159, 192, 322, 326, 337, 340, 342, 344, 347, 362], "comparison": [7, 64, 67, 323, 338, 341, 343, 354, 357, 360], "compart": 329, "comparti": 329, "compat": [2, 9, 43, 99, 100, 108, 111, 121, 127, 130, 148, 192, 215, 217, 239, 243, 249, 250, 286, 317, 322, 329, 334, 335, 337, 338, 349, 350, 352, 354, 361, 362, 369, 370, 377, 381, 382, 385, 388, 393, 398, 400], "compens": 2, "compil": 2, "complementari": 9, "complet": [6, 7, 8, 84, 85, 87, 92, 93, 99, 110, 111, 116, 119, 172, 329, 334, 340, 387], "complex": [7, 9, 10, 75, 76, 77, 99, 111, 128, 129, 132, 138, 147, 170, 171, 202, 220, 223, 227, 228, 229, 265, 270, 287, 299, 320, 334, 335, 336, 339, 342, 343, 399], "complex128": [7, 99, 111, 153, 192, 342], "complex64": 342, "complexwarn": 7, "compli": 2, "complianc": 2, "complic": 2, "compon": [2, 9, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 32, 64, 76, 92, 96, 97, 101, 102, 105, 106, 107, 110, 111, 114, 116, 117, 119, 122, 123, 124, 125, 158, 186, 189, 220, 223, 227, 228, 229, 262, 316, 320, 321, 322, 326, 328, 340], "components_": 117, "componr": 87, "compos": [75, 121, 329], "composit": [111, 118, 155, 278, 288, 297, 316, 337], "compound": [18, 94, 99, 111, 121, 124, 164, 195, 294, 318], "comprehens": 94, "compress": [9, 43, 97, 111, 120, 394], "compris": [2, 324], "compui": [101, 102, 110, 114, 116, 117, 119, 124, 125], "comput": [2, 20, 21, 22, 24, 86, 92, 94, 96, 97, 98, 101, 102, 104, 110, 111, 114, 116, 117, 119, 121, 124, 125, 142, 144, 155, 160, 163, 171, 181, 204, 269, 287, 288, 299, 322, 323, 324, 328, 334, 337, 340, 345, 347], "compute_uv": 125, "compuut": [97, 111, 139, 144, 160, 282], "concaten": [18, 93, 111, 286, 328, 329, 332, 379, 400], "concent": 316, "concentr": [17, 18, 21, 22, 23, 26, 96, 101, 107, 110, 118, 124, 316, 361], "concept": [9, 324, 346], "concern": [2, 6, 92], "concis": 9, "conda": [6, 355, 361, 380, 383], "condid": 340, "condit": [2, 22, 96, 111, 114, 117, 163, 327, 399, 400], "config": [6, 88, 90, 95, 97, 101, 102, 104, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 347, 388], "configfil": 7, "configur": [2, 6, 88, 97, 101, 102, 104, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 354, 361, 381, 388, 398], "confirm": [24, 329, 375], "conflict": [2, 6, 100], "conform": 2, "confus": [111, 324, 329], "conj": [111, 150, 345], "conjug": [111, 149, 345], "connect": [2, 6, 7, 86, 89, 373, 394], "connectionstyl": [324, 337], "consecut": [99, 111, 159, 345], "consequenti": 2, "consid": [7, 9, 18, 96, 102, 107, 110, 111, 163, 171, 322, 324, 340, 341, 347], "consider": [2, 92], "consist": [4, 5, 7, 10, 29, 97, 99, 104, 111, 196, 322, 326, 328, 337, 340, 400], "consol": [10, 388], "constant": [22, 75, 80, 94, 96, 97, 99, 104, 109, 111, 114, 115, 119, 160, 180, 217, 218, 269, 272, 281], "constantli": 332, "constantsum": 110, "constitu": 2, "constitut": 2, "constrain": [110, 111, 256, 257], "constraint": [16, 27, 35, 92, 94, 96, 99, 101, 110, 111, 116, 142, 239, 316, 319, 321, 322, 352, 382, 393], "construct": [7, 99, 111, 161, 162, 172, 173, 300, 320], "constructor": [19, 23, 99, 111, 162, 169, 172, 173, 187, 317, 335, 364], "consult": [6, 89, 91], "contact": 75, "contain": [2, 5, 6, 7, 21, 22, 29, 43, 46, 55, 84, 91, 92, 96, 97, 99, 100, 102, 108, 111, 114, 117, 118, 120, 125, 126, 138, 142, 155, 159, 160, 171, 204, 215, 219, 221, 224, 225, 230, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 287, 288, 299, 320, 322, 323, 324, 326, 329, 331, 334, 336, 339, 340, 360, 394, 401], "conten": [111, 148], "content": [10, 13, 29, 43, 86, 92, 111, 120, 126, 197, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 322, 323, 326, 331, 334, 346, 394], "content1": [111, 249], "content2": [111, 249], "context": [9, 94, 99, 121, 127, 268, 273, 316, 318, 328, 331], "contextlib": 327, "contigu": [111, 163], "continu": [6, 9, 13, 32, 94, 111, 238, 318, 320, 322], "contour": [38, 111, 206, 225, 324, 337], "contour_alpha": 337, "contour_corner_mask": 337, "contour_negative_linestyl": 337, "contour_start": 337, "contrain": [111, 254], "contrast": 317, "contribut": [2, 5, 13, 14, 89, 92, 107, 111, 142], "contributor": [2, 5, 7, 111, 327], "control": [64, 80, 89, 94, 96, 111, 206, 278, 337], "conveni": [7, 21, 22, 38, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 322, 323, 329, 334], "convenin": 340, "convent": [6, 38, 97, 111, 215, 327, 328, 334, 347], "converg": [21, 22, 23, 64, 102, 110, 119, 124, 322], "convergencewarn": 23, "convers": [40, 95, 96, 99, 111, 291, 329, 334, 343, 344, 396], "convert": [97, 99, 111, 121, 127, 128, 129, 131, 132, 133, 134, 146, 149, 150, 202, 205, 291, 295, 345, 347, 349, 396], "convert_to_html": 336, "convex": [94, 111, 159], "convolut": [104, 111, 281, 300, 320, 343], "coo_matrix": 9, "coord": [5, 9, 18, 20, 22, 33, 38, 39, 40, 55, 76, 91, 95, 100, 108, 111, 118, 130, 141, 142, 172, 204, 251, 283, 317, 320, 323, 324, 329, 334, 335, 346, 354, 356, 396], "coord0": [38, 100, 334], "coord1": [38, 100, 334], "coord1b": [100, 334], "coord2": [38, 100, 334], "coord_pc": 26, "coordin": [3, 5, 17, 18, 21, 22, 23, 25, 33, 37, 40, 41, 43, 51, 57, 75, 76, 77, 80, 91, 93, 97, 98, 99, 100, 111, 114, 130, 132, 133, 151, 160, 162, 166, 167, 171, 172, 173, 176, 177, 202, 205, 213, 214, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 258, 269, 283, 310, 311, 319, 320, 322, 323, 324, 325, 329, 335, 336, 337, 338, 339, 340, 342, 343, 349, 354, 357, 359, 362, 369, 397, 399, 400], "coordinated_universal_tim": 334, "coordmax": 111, "coordmin": 111, "coordnam": 111, "coordrang": 367, "coordset": [9, 20, 33, 38, 39, 75, 99, 111, 166, 167, 169, 172, 176, 177, 187, 213, 214, 310, 311, 317, 320, 334, 400], "coordtitl": 111, "coordunit": 111, "coordx": 334, "copi": [2, 6, 7, 9, 10, 13, 20, 39, 60, 75, 80, 87, 92, 99, 100, 111, 120, 130, 149, 150, 161, 166, 167, 176, 177, 186, 213, 214, 270, 310, 311, 322, 333, 335, 339, 345, 394], "copyright": [12, 22, 88, 90, 91, 111, 302, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 354], "core": [5, 7, 48, 55, 75, 83, 93, 111, 120, 273, 319, 332, 336, 339, 344, 347, 350], "corn": [29, 43, 326, 340, 394], "corner": [94, 361], "coro": 347, "corp": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 382], "corr": 80, "correct": [2, 4, 6, 7, 10, 63, 65, 68, 73, 74, 75, 78, 88, 90, 92, 93, 94, 96, 97, 98, 110, 111, 116, 124, 139, 141, 144, 156, 160, 174, 175, 181, 217, 218, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 303, 304, 306, 316, 319, 324, 325, 329, 341, 343, 354, 355, 356, 357, 359, 360, 361, 383, 390, 398, 399], "correctli": [5, 6, 75, 89, 99, 111, 120, 131, 132, 133, 134, 202, 204, 205, 236, 287, 288, 299, 323, 332, 333, 359, 377, 379, 391, 397, 399], "correl": 340, "correspond": [5, 7, 15, 17, 18, 20, 21, 23, 39, 61, 75, 95, 96, 99, 100, 110, 111, 117, 118, 119, 125, 130, 148, 164, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 316, 322, 323, 324, 326, 327, 329, 337, 338, 346, 347, 349], "cosin": [61, 111, 284, 339, 345], "cosmic": [66, 67, 69, 73, 111, 159, 239, 319, 343], "cost": [2, 92], "coudrai": 94, "could": [3, 5, 7, 9, 68, 75, 102, 322, 323, 324, 327, 334, 338, 341], "count": [51, 92, 99, 111, 131, 134, 173, 346], "counter": 9, "countri": 92, "coupard": 94, "courier": 337, "cours": [6, 12, 32, 40, 51, 86, 88, 89, 90, 328, 339, 340], "court": 2, "cousen": 94, "cov": [316, 326], "covari": [316, 326], "cover": [92, 93, 119, 332], "coverag": [20, 361], "cp": [73, 74, 78, 99, 100, 111, 116, 165, 170, 217, 258, 282, 319, 400], "cp_model": 75, "cplex": 46, "cpu": 9, "cpure": [21, 26, 322, 323], "crack": [92, 94, 318], "crash": [93, 327], "creat": [8, 9, 10, 12, 14, 20, 24, 25, 29, 32, 38, 43, 55, 75, 76, 77, 83, 86, 87, 88, 90, 91, 99, 100, 102, 104, 110, 111, 121, 135, 148, 172, 173, 180, 196, 199, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 238, 246, 259, 260, 269, 281, 286, 320, 322, 323, 325, 326, 329, 332, 333, 335, 336, 339, 340, 342, 345, 346, 347, 349, 378, 400], "creation": [2, 37, 41, 54, 56, 57, 87, 99, 111, 120, 126, 230, 268, 319, 322, 329, 334, 335, 354, 367], "creator": [111, 329], "credit": 2, "criteria": [111, 119, 171, 337], "criterion": [110, 124, 322, 324], "critic": [92, 327], "crop": 80, "cross": [9, 83, 92, 93, 103, 316], "cross_decomposit": 119, "crucial": [68, 341], "csel_matrix": [21, 26, 322, 323], "cstr": 118, "csv": [93, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 328, 329], "csv_delimit": [111, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303], "cti": 118, "cti_fil": 118, "ctx_kwarg": [121, 127], "cube": [102, 345], "cubic": [64, 80, 94, 97, 111, 160, 340], "cuccioloni": 94, "cultrera": [94, 107], "cultrera_callegaro": 107, "cumbersom": 9, "cumsum": 111, "cumul": [24, 111, 117, 125, 155], "cumulative_explained_vari": [24, 125, 323], "curli": 9, "current": [2, 7, 9, 14, 20, 22, 39, 43, 83, 92, 93, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 124, 125, 148, 153, 182, 193, 194, 195, 197, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 268, 273, 286, 291, 303, 304, 306, 327, 328, 329, 331, 337], "cursiv": 337, "curv": [18, 20, 21, 64, 92, 93, 94, 107, 110, 116, 316, 318, 322, 323, 339, 361, 400], "curvatur": [20, 107], "curve1": [60, 61], "curve2": [60, 61], "curve3": 61, "curve4": 61, "curve5": 61, "curvefit": 83, "custom": [2, 15, 51, 108, 111, 114, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 337, 364, 381], "cut": [17, 18, 101, 320], "cutoff": [17, 18, 101], "cval": [104, 111, 269, 281], "cwd": 328, "cycl": [7, 337], "cycler": 337, "cyclohexan": [94, 318], "c\u00e9dric": 94, "d": [2, 6, 7, 21, 22, 26, 33, 38, 40, 51, 77, 80, 86, 91, 94, 96, 99, 111, 120, 140, 142, 148, 161, 163, 169, 172, 173, 178, 187, 200, 234, 277, 300, 304, 318, 320, 324, 325, 333, 334, 337, 349, 385], "d0": [33, 320], "d1d": [334, 337], "d2": 320, "d2cy00311b": [94, 318], "d2d": 345, "d3cp01585h": [94, 318], "d3d": 334, "d3d_copi": 334, "d3dduplic": 334, "d3mr00013c": [94, 318], "d4nj03440f": [94, 318], "d55e00": 337, "d_0": 320, "d_baselin": [65, 319], "d_plot": [53, 319], "da": 345, "daatset": [111, 156], "dac": 345, "dad": [21, 322, 323], "dael": [94, 318], "dai": [2, 6, 328, 381], "daili": 6, "damag": 2, "dan": [94, 318], "danger": 333, "daniel": 94, "daq": 345, "dario": 94, "dark": 337, "dark2": [324, 325, 349], "dark_background": 337, "darkgrid": 337, "darren": 94, "darwin": 7, "dash": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 331, 337, 391], "dash_capstyl": 337, "dash_joinstyl": 337, "dashdot_pattern": 337, "dashed_pattern": 337, "dask": 121, "data": [0, 1, 2, 3, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 29, 33, 40, 42, 43, 48, 49, 51, 55, 57, 60, 61, 64, 67, 68, 75, 76, 80, 87, 91, 92, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 145, 148, 151, 152, 155, 156, 158, 159, 160, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 206, 213, 214, 219, 220, 223, 227, 228, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 269, 270, 281, 282, 284, 286, 287, 288, 291, 292, 298, 299, 302, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 327, 330, 331, 332, 334, 335, 336, 341, 342, 343, 344, 346, 347, 354, 355, 364, 370, 380, 396, 399, 400], "data_keyword": [111, 216], "data_onli": [61, 75, 76, 111, 220, 221, 223, 224, 225, 227, 228, 229, 230, 320, 324, 339], "dataarrai": [111, 295], "datadir": [5, 17, 21, 22, 43, 44, 46, 47, 52, 60, 61, 64, 75, 76, 77, 80, 86, 95, 111, 239, 249, 250, 303, 322, 323, 329, 330, 334, 336, 342, 348, 380, 394], "datafil": [86, 328, 329], "datafram": 9, "datain": 104, "datapoint": 99, "datas": [111, 145], "dataset": [3, 5, 7, 9, 16, 17, 22, 25, 26, 27, 29, 31, 33, 34, 35, 42, 44, 46, 48, 49, 52, 53, 55, 60, 61, 64, 67, 68, 75, 77, 80, 83, 93, 94, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 167, 170, 171, 172, 174, 175, 177, 179, 181, 183, 184, 185, 186, 188, 189, 190, 191, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 269, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 292, 297, 298, 299, 302, 303, 304, 306, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 325, 328, 329, 332, 335, 336, 339, 340, 341, 342, 343, 347, 348, 349, 352, 354, 358, 360, 361, 362, 367, 369, 371, 375, 378, 392, 393, 397, 398, 399, 400], "dataset1d": [60, 61], "dataset2": 345, "dataset_1": 120, "dataset_list": 43, "dataset_pca": 24, "datasets_nam": 120, "datastet": 316, "datatyp": 345, "date": [2, 5, 6, 7, 9, 10, 43, 89, 91, 111, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 325, 335, 346, 349, 378, 385], "date_autoformatter_dai": 337, "date_autoformatter_hour": 337, "date_autoformatter_microsecond": 337, "date_autoformatter_minut": 337, "date_autoformatter_month": 337, "date_autoformatter_second": 337, "date_autoformatter_year": 337, "datetim": [5, 9, 99, 111, 317, 334, 335, 336], "dattaset": 29, "daturi": 94, "david": 94, "dc": [111, 344, 348], "dc_corrected_fid": 348, "dc_corrected_fid2": 348, "dcolor": 60, "ddof": [111, 287, 299], "ddr": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "de": [2, 20, 39, 94, 316, 318, 329, 346], "deactiv": [6, 89], "deal": [9, 88, 90, 97, 316, 329], "debian": [6, 89], "debug": [97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 157, 269, 272, 281, 302, 327, 332], "debug_": 327, "decai": [111, 217, 218, 342], "decemb": 94, "decid": [2, 9], "decim": [9, 96, 99, 111, 138, 265, 333, 337, 346, 396], "declar": 116, "decompos": 316, "decomposit": [18, 20, 22, 23, 24, 25, 26, 83, 96, 97, 101, 102, 107, 110, 114, 117, 124, 125, 316, 322, 323, 326, 340, 394], "decompositionanalysi": 322, "deconvolut": 75, "decor": [4, 7, 26], "decreas": [110, 344], "dedic": [88, 90, 92, 328, 342], "deduc": [111, 221, 224, 225, 230, 329], "deem": 2, "deep": [99, 111, 153, 337], "deepcopi": [99, 111, 153], "def": [4, 5, 7, 9, 75, 76, 77, 80, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 143, 145, 165, 179, 183, 220, 221, 222, 284, 298, 320, 329, 334, 336, 347], "default": [5, 6, 9, 20, 38, 39, 43, 46, 52, 60, 67, 71, 75, 76, 87, 88, 90, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 145, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 183, 184, 185, 187, 188, 193, 196, 199, 201, 202, 204, 205, 206, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 276, 278, 281, 282, 283, 284, 285, 287, 288, 289, 291, 296, 297, 298, 299, 302, 303, 304, 310, 320, 322, 323, 327, 329, 330, 331, 334, 338, 339, 340, 341, 344, 346, 347, 352, 357, 359, 361, 376, 380, 393, 398, 400], "default_dim_nam": 100, "default_format": [121, 127], "defect": 2, "defens": 2, "defin": [2, 6, 7, 9, 19, 22, 23, 25, 32, 33, 40, 43, 47, 64, 75, 76, 77, 80, 96, 97, 99, 100, 108, 109, 110, 111, 115, 116, 119, 120, 130, 143, 148, 160, 220, 223, 227, 228, 229, 240, 241, 269, 281, 283, 286, 290, 302, 320, 322, 324, 325, 328, 334, 337, 340, 347, 397, 398, 400], "definit": [2, 9, 32, 76, 88, 89, 90, 111, 220, 223, 226, 227, 228, 229, 278, 284, 297, 328, 329, 345, 400], "deflat": 102, "deg": 77, "degener": 102, "degrad": [94, 318], "degre": [64, 80, 97, 104, 111, 160, 217, 218, 234, 269, 281, 287, 299, 320, 340, 345], "dehydr": 23, "dehydrat": 91, "dehydrogen": [94, 318], "dejavu": 337, "dejavusan": 337, "dejavuserif": 337, "delai": 2, "delet": [7, 111, 388], "delete_coordset": 111, "delic": 323, "delimit": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304], "delimiteur": [111, 241], "deliv": 327, "delphin": 94, "delta": [68, 75, 76, 104, 111, 159, 269, 287, 299, 341, 342], "delta_": [20, 316], "delta_clock": [111, 240], "demand": [99, 111, 173], "demonstr": [51, 75, 80, 325, 337, 338, 340, 341, 342, 345, 347], "denni": 94, "denois": [69, 83, 111, 239, 272, 319, 343, 398], "denot": [100, 320], "dense_output": 96, "depend": [6, 13, 84, 88, 89, 90, 97, 99, 102, 107, 111, 114, 116, 117, 124, 125, 149, 150, 160, 161, 171, 196, 243, 270, 276, 287, 299, 316, 320, 326, 328, 329, 337, 338, 341, 346, 351, 354, 376, 393, 394, 400], "deprec": [7, 26, 91, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 344, 351, 354, 382, 385, 391], "deprecationwarn": [26, 91, 344], "depth": [2, 48, 86, 89, 337], "der": 94, "deriv": [2, 71, 86, 94, 96, 102, 104, 111, 269, 316, 318, 322, 324, 347], "desc": 111, "descend": [111, 283, 316, 346], "descent": 114, "describ": [2, 5, 6, 9, 100, 111, 120, 159, 316, 323, 329, 332, 333, 334, 337, 340, 347], "descript": [5, 6, 7, 9, 38, 43, 75, 77, 87, 91, 93, 96, 109, 111, 115, 116, 127, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 325, 327, 329, 334, 336, 346, 349], "descriptor": [94, 318], "deseri": [111, 120], "design": [2, 5, 93, 321, 332, 337], "desir": [4, 7, 14, 17, 68, 96, 99, 111, 114, 166, 176, 204, 213, 238, 299, 310, 323, 324, 328, 337, 341], "desktop": [6, 87], "despik": [67, 68, 94, 111, 343, 352, 393, 398], "despit": [9, 332], "destin": [99, 111, 121, 193, 291], "destroi": 39, "detail": [9, 10, 20, 22, 43, 64, 68, 91, 92, 93, 98, 104, 111, 116, 117, 119, 144, 161, 181, 269, 281, 316, 324, 328, 329, 332, 340, 349, 350, 351, 398], "detect": [2, 68, 87, 92, 96, 97, 111, 139, 144, 159, 160, 171, 181, 282, 324, 337, 340, 341], "determin": [2, 5, 17, 24, 94, 97, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 130, 172, 221, 222, 240, 282, 316, 323, 324, 325, 333, 334, 340, 344, 347], "determinist": [9, 10], "detrend": [51, 67, 97, 111, 139, 144, 181, 282, 326, 343], "dev": [6, 85, 88, 90, 329, 350, 351], "dev80": [0, 91, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "develop": [2, 5, 10, 11, 12, 84, 85, 86, 88, 90, 92, 93, 101, 107, 317, 327, 329, 331, 332, 350, 352, 353], "deviat": [68, 110, 111, 117, 124, 155, 159, 204, 287, 288, 299, 316, 322, 332], "devot": 86, "df": [9, 334], "dfit": 320, "diag": [110, 111, 125, 162, 169, 187, 334], "diagnos": 327, "diagon": [111, 161, 169, 187, 316], "dialog": [47, 111, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 303, 304, 306, 329, 330, 337, 364, 375, 377], "dic": [75, 111, 120], "dict": [7, 9, 96, 97, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 156, 171, 268], "dict_param_to_optim": 96, "dictionari": [96, 97, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 324, 329, 334, 336, 337], "did": [2, 328, 336, 340], "dielectr": [94, 318], "diff": [7, 71, 111, 155, 325, 329, 346, 347], "differ": [6, 9, 17, 22, 29, 43, 47, 51, 67, 68, 71, 80, 84, 87, 88, 89, 96, 97, 99, 104, 111, 112, 113, 114, 118, 120, 121, 130, 141, 155, 159, 160, 171, 193, 194, 195, 240, 291, 302, 324, 325, 326, 329, 331, 334, 335, 337, 338, 340, 342, 344, 345, 347, 348, 357, 369, 377, 398], "differenti": [96, 104, 111, 269, 361], "difficult": [92, 322, 323], "difficulti": 6, "diffract": [94, 318], "diffus": [94, 108, 318, 361], "digit": [1, 96, 99, 329, 337, 396], "dilig": 2, "dill": [102, 110], "dim": [7, 17, 19, 22, 48, 71, 75, 77, 99, 100, 104, 111, 130, 131, 132, 133, 134, 136, 137, 141, 142, 143, 145, 148, 149, 150, 151, 152, 154, 155, 158, 162, 165, 170, 172, 174, 175, 179, 183, 184, 185, 188, 201, 202, 204, 205, 217, 218, 236, 264, 266, 269, 278, 281, 283, 284, 285, 287, 288, 296, 297, 298, 299, 302, 325, 326, 329, 334, 338, 347, 367, 379], "dim1": [111, 289], "dim2": [111, 289], "dimens": [5, 7, 18, 20, 24, 25, 39, 43, 75, 76, 77, 91, 93, 97, 98, 99, 100, 102, 104, 107, 111, 117, 121, 123, 130, 131, 132, 133, 134, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 154, 155, 158, 160, 162, 165, 170, 172, 174, 175, 179, 181, 183, 184, 185, 188, 195, 201, 202, 204, 205, 217, 218, 220, 223, 227, 228, 229, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 270, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 294, 296, 297, 298, 299, 302, 304, 322, 323, 324, 325, 326, 328, 329, 335, 336, 339, 340, 342, 343, 345, 346, 349, 354, 359, 363, 399], "dimension": [5, 24, 25, 26, 94, 97, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 121, 124, 125, 127, 173, 219, 220, 270, 285, 316, 317, 323, 334, 340, 343, 345], "dimensionalityerror": [40, 99, 111, 121, 127, 291, 345, 349], "dimensionless": [38, 99, 111, 121, 127, 143, 145, 179, 184, 185, 298, 343, 349], "dir": 371, "direct": [2, 7, 9, 86, 111, 188, 273, 283, 322, 328, 329, 337, 340], "directli": [2, 7, 9, 33, 86, 87, 92, 99, 102, 110, 111, 172, 180, 199, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 316, 320, 322, 323, 329, 332, 333, 334, 337, 340, 347], "directori": [2, 6, 7, 10, 11, 21, 43, 45, 46, 47, 48, 75, 80, 85, 87, 89, 90, 95, 111, 113, 120, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 329, 330, 334, 337, 394], "disabl": 337, "disagr": 2, "disappear": 316, "disast": 2, "disc": 84, "discard": [7, 80, 99], "discardbg": [111, 240], "discharg": [94, 318], "disclaim": 2, "disclos": 92, "disconnect": [99, 100, 111, 153], "discourag": [317, 332], "discov": [9, 14], "discret": [111, 155], "discrimin": [94, 318], "discuss": [2, 6, 9, 12, 83, 332, 374], "disk": [55, 84], "dism": 87, "dispatch": 347, "dispatch_queu": 347, "dispatch_shel": 347, "displai": [2, 9, 20, 24, 25, 26, 38, 39, 51, 87, 97, 99, 100, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 206, 220, 223, 227, 228, 229, 275, 322, 323, 327, 328, 329, 331, 332, 333, 334, 336, 337, 339, 340, 344, 346, 347, 349, 364, 371, 372, 378, 387, 394, 400], "disput": [2, 92], "disregard": [109, 115, 119], "distanc": [33, 76, 99, 100, 111, 114, 135, 171, 320, 324, 334, 337], "distance_fit": 33, "distance_fitted2": 33, "distance_fitted3": 33, "distant": 9, "distinct": [111, 243], "distinguish": 24, "distort": 347, "distribut": [2, 6, 9, 84, 87, 89, 90, 99, 102, 107, 111, 199, 200, 238, 287, 299, 320], "disturb": 2, "div": 333, "diverg": [96, 114, 322], "divid": [111, 117, 204, 332, 344], "divis": 345, "divisor": [111, 287, 299], "dlabel": [99, 111], "do": [2, 6, 7, 9, 10, 11, 12, 14, 15, 17, 22, 24, 25, 39, 40, 52, 55, 64, 80, 86, 87, 88, 89, 90, 92, 95, 111, 117, 141, 167, 240, 316, 322, 323, 324, 325, 328, 329, 331, 332, 334, 337, 349, 350, 375], "do_execut": 347, "doc": [4, 6, 7, 10, 116, 329, 336, 350, 361, 364, 374, 378, 387, 398], "docker": [84, 368], "dockerfil": 11, "docstr": 13, "doctest": 10, "doctestplu": 7, "document": [2, 6, 9, 13, 33, 43, 68, 84, 85, 88, 90, 92, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 161, 178, 200, 234, 269, 277, 300, 324, 331, 332, 335, 337, 350, 361, 362, 363, 367, 368, 382, 386, 387, 390, 394], "doe": [2, 4, 7, 9, 21, 25, 26, 92, 93, 98, 99, 110, 111, 120, 131, 134, 135, 143, 166, 167, 322, 323, 327, 328, 329, 332, 333, 340, 345], "doesn": [9, 10, 334, 345], "dog": 9, "doi": [0, 1, 94, 318, 329], "dollar": 333, "domain": [2, 60, 61, 111, 143, 145, 156, 165, 170, 179, 184, 185, 188, 298, 339, 343], "domenico": 94, "domin": 96, "dominguez": 94, "don": [6, 7, 10, 64, 75, 76, 83, 92, 320, 324, 331, 332, 333, 337], "done": [6, 7, 11, 20, 39, 87, 89, 91, 99, 111, 141, 220, 221, 223, 224, 225, 227, 228, 229, 230, 291, 293, 294, 323, 328, 334, 337, 340, 341, 357, 367, 392, 396, 397], "done_callback": 103, "donn": [94, 318], "dop853": 96, "dorresteijn": 94, "dot": [9, 18, 19, 111, 114, 121, 206, 221, 222, 224, 225, 230, 231, 232, 323, 336, 337], "dotted_pattern": 337, "doubl": [9, 111, 114, 314, 328], "down": 354, "download": [2, 6, 9, 11, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 85, 87, 88, 89, 90, 111, 239, 322, 348, 376, 380, 394], "download_iri": 9, "download_nist_ir": [111, 376], "download_onli": [111, 239], "downlod": 22, "downstream": 117, "dpi": [111, 206, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 338, 340], "dq": 107, "dr": 94, "draft": 2, "drag": [92, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 333], "draw": [111, 206, 220, 226, 337], "drawn": [2, 102, 111, 119, 220, 238], "drift": [51, 111, 160, 340], "drive": [86, 328], "driven": [5, 13], "drop": [88, 90, 92, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 333, 350], "dropdown": [98, 328, 331], "dropna": 9, "dry": [32, 94, 116, 318], "ds1": [120, 337], "ds2": [120, 337], "ds3": 120, "ds_list": 29, "dsc": 18, "dsint": 77, "dso": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "dss": 18, "dtc": 329, "dtype": [7, 9, 18, 25, 99, 109, 111, 115, 121, 128, 129, 135, 155, 162, 163, 166, 167, 169, 172, 173, 176, 177, 180, 187, 196, 199, 204, 213, 214, 238, 287, 288, 299, 310, 311, 334, 342, 345, 354], "du": 329, "due": [2, 4, 11, 18, 64, 87, 111, 141, 324, 338, 348, 349, 396], "duli": 2, "dump": [111, 120, 383], "duplic": [2, 334, 363], "durat": 2, "dure": [2, 4, 7, 10, 19, 23, 87, 97, 99, 109, 111, 115, 118, 291, 317, 320, 322, 327, 334, 335, 337, 347, 354, 396], "dusan": 94, "dx": [93, 94, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 306, 328, 330, 345], "dynam": [75, 92, 94, 97, 119, 318], "dz": 334, "e": [2, 5, 6, 7, 9, 20, 21, 22, 39, 40, 51, 67, 84, 85, 88, 89, 90, 92, 94, 97, 98, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 127, 140, 148, 165, 170, 176, 183, 188, 195, 206, 213, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 272, 287, 294, 299, 310, 316, 317, 318, 320, 322, 323, 324, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 340, 341, 344, 345, 346, 347, 349, 350, 352, 391, 400], "e2975": 94, "e402": 329, "e_i": [316, 326], "e_project": [55, 56, 319], "e_x": [316, 326], "ea": 96, "ea_1": 96, "ea_n": 96, "each": [2, 7, 9, 20, 25, 29, 39, 75, 80, 83, 86, 96, 97, 98, 99, 100, 102, 107, 109, 110, 111, 115, 116, 117, 120, 128, 129, 142, 147, 159, 172, 173, 180, 206, 240, 316, 317, 320, 322, 323, 324, 325, 326, 328, 329, 333, 334, 335, 340, 341, 345, 346, 347, 351, 352, 393], "earthquak": 2, "eas": 331, "easi": [6, 9, 92, 328, 329, 331], "easier": [9, 67, 332, 341, 381], "easiest": [6, 7, 88, 90, 337], "easili": [2, 7, 9, 26, 55, 89, 90, 92, 320, 322, 324, 328, 332, 334, 336, 345, 346], "echantillon": 329, "econom": 2, "edg": [104, 111, 119, 146, 206, 269, 281, 337], "edgecolor": [119, 206, 337], "edit": [7, 88, 92, 95, 350, 352], "editor": [7, 94], "eelco": 94, "efa": [16, 22, 27, 35, 93, 99, 102, 107, 110, 111, 114, 117, 124, 125, 148, 163, 249, 316, 319, 323, 332, 361, 389, 394], "efa1": 17, "efa2": 17, "effect": [2, 6, 67, 94, 111, 170, 239, 249, 250, 284, 318, 321, 322, 334, 337, 339, 341, 347], "effici": [94, 102, 117, 318, 328], "effort": 2, "eibar": 94, "eigenvalu": [101, 117], "eigenvector": [29, 43, 111, 247, 248, 326, 340, 394], "eigh": 102, "eignenvector": 340, "eiler": [64, 70, 72, 73, 94, 97, 104, 111, 139, 239, 269, 281, 302, 319, 343], "eingenvector": 328, "either": [2, 6, 7, 20, 21, 43, 80, 89, 92, 96, 97, 99, 102, 111, 119, 141, 142, 249, 270, 316, 322, 323, 328, 334, 337], "elaps": [100, 329, 334], "elect": 2, "electr": 2, "electrolyt": [94, 318], "element": [2, 99, 111, 114, 121, 128, 129, 131, 132, 133, 134, 146, 155, 169, 187, 199, 202, 204, 205, 287, 288, 290, 299, 316, 329, 333, 335, 337, 344, 345, 346], "elementari": 96, "elementwis": 114, "elimin": [67, 341], "elizabeth": 94, "elnaz": 94, "els": [5, 7, 10, 43, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 147, 239, 249, 250, 324, 336, 337, 345], "elsevi": 94, "elsewher": [111, 169], "elut": [19, 26, 322, 323], "el\u017cbieta": 94, "em": [60, 75, 77, 111, 183, 237, 279, 280, 284, 339, 342], "emb": 93, "embrac": [5, 7], "emerg": 2, "emit": [337, 347], "emmerl": 94, "emphas": [97, 333], "emploi": [111, 159], "empti": [99, 102, 111, 121, 167, 176, 177, 213, 214, 310, 311, 324, 332, 334, 336, 337], "empty_lik": [111, 166, 176, 177, 213, 214, 310, 311], "emptylik": [111, 167], "en": [2, 4, 7, 324, 337], "enabl": [2, 32, 76, 87, 111, 117, 302, 320, 332, 381], "enclos": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261], "encod": [9, 111, 245, 329], "encount": [2, 6, 340, 344, 345], "encourag": [2, 4, 5, 6, 7, 10], "end": [7, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 87, 88, 96, 97, 98, 99, 103, 104, 111, 135, 143, 156, 196, 199, 269, 281, 324, 329, 337, 340, 346, 347], "endeavor": 2, "endpoint": [99, 111, 135, 180, 196, 199], "energi": [2, 40, 316, 334], "enforc": [2, 110], "engin": [87, 329], "english": [2, 10], "enh": 6, "enhanc": [6, 7, 14, 329], "enough": [323, 346], "ensicaen": 332, "ensur": [2, 4, 5, 7, 87, 102, 111, 117, 146, 344, 398], "enter": [86, 98, 331, 333, 340], "entir": [2, 7, 92, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "entireti": 2, "entiti": 2, "entitl": 2, "entri": [7, 98, 111, 120, 166, 285, 333, 337, 347, 378], "entropi": 102, "enum": [111, 130, 284], "enumer": [75, 121, 347], "env": [6, 23, 26, 46, 48, 75, 88, 89, 90, 327, 336, 337, 347, 354], "env_creat": 6, "environ": [10, 87, 88, 90, 92, 94, 95, 98, 318, 331], "environment": 94, "environment_nam": 88, "eq": 347, "equal": [25, 97, 99, 110, 111, 131, 142, 169, 170, 180, 196, 199, 206, 226, 234, 284, 316, 320, 322, 323, 334, 337, 339, 345], "equat": [31, 32, 34, 35, 96, 99, 102, 107, 108, 109, 110, 111, 316, 319, 321, 322, 323, 326], "equip": [2, 332], "equiv": [22, 316], "equival": [9, 19, 24, 61, 71, 86, 97, 104, 110, 111, 123, 143, 145, 154, 158, 163, 165, 169, 170, 174, 175, 179, 183, 184, 185, 187, 188, 201, 206, 217, 218, 237, 264, 266, 269, 278, 279, 280, 281, 284, 292, 297, 298, 302, 317, 327, 328, 334, 337, 339, 340, 345, 346, 347], "eras": 334, "ermit": 340, "error": [2, 4, 7, 10, 75, 92, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 142, 143, 145, 165, 168, 170, 179, 184, 185, 188, 243, 249, 250, 269, 281, 285, 291, 298, 302, 316, 322, 323, 326, 328, 329, 334, 337, 338, 344, 345, 346, 347, 348, 349, 354, 378, 388, 391, 400, 401], "error_": [40, 327, 334, 338, 345, 349], "errorbar_caps": 337, "esc": 331, "escap": 328, "especi": [9, 111, 287, 299, 316, 332, 337], "essenti": [6, 92, 329, 332], "est": 334, "establish": [2, 316], "estim": [22, 80, 96, 97, 109, 111, 115, 117, 159, 287, 299, 316, 324, 326, 341], "et": [2, 16, 19, 22, 26, 27, 35, 96, 97, 107, 110, 111, 117, 239, 282, 316, 318, 319, 322, 323, 340], "etc": [2, 5, 9, 10, 38, 75, 76, 92, 100, 110, 111, 119, 130, 234, 238, 243, 272, 316, 317, 320, 323, 324, 328, 332, 334, 335, 336, 337], "etienn": 94, "euclid": [110, 322], "euclidean": 322, "eugen": 24, "eugenio": 94, "euler": 337, "europ": 337, "ev": [18, 40, 125, 334], "ev_cum": 125, "ev_ratio": 125, "evalu": [6, 22, 96, 97, 104, 111, 131, 134, 268, 269, 281], "even": [5, 22, 90, 96, 99, 111, 193, 269, 270, 278, 287, 291, 328, 329, 334, 349, 379], "evenli": [99, 107, 111, 135, 138, 180, 196, 199, 265, 396], "event": [2, 26, 96, 347], "eventu": [6, 89, 97, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 250, 325], "everi": [6, 9, 117, 381], "everybodi": 2, "everyth": [6, 322], "everytim": [99, 396], "evid": 2, "evoc": 10, "evol": 324, "evolut": [17, 316, 324, 361], "evolv": [17, 94, 101, 102, 107, 110, 114, 117, 124, 125, 316, 322], "ev\u00b2": 334, "ev\u2070": 334, "ex": [32, 87, 90, 320], "exact": [6, 9, 88, 95, 99, 100, 111, 117, 120, 153, 163, 316, 324], "exactli": [21, 320, 329, 340, 349], "exagger": 324, "examin": [316, 322, 323, 324, 340, 347], "exampl": [5, 6, 7, 10, 16, 22, 27, 28, 30, 32, 33, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 135, 140, 141, 142, 146, 153, 155, 162, 166, 169, 171, 172, 173, 176, 177, 178, 187, 192, 197, 200, 204, 213, 214, 234, 240, 241, 243, 247, 251, 254, 255, 256, 257, 261, 273, 277, 278, 286, 287, 288, 291, 292, 297, 299, 300, 303, 304, 306, 310, 311, 317, 319, 320, 321, 322, 324, 329, 332, 333, 334, 336, 337, 339, 341, 343, 345, 346, 348, 349, 355, 361, 389, 392, 394, 398, 399, 400], "exce": 2, "excel": [1, 10, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306], "exceot": 340, "except": [4, 9, 40, 84, 87, 96, 99, 111, 120, 121, 127, 131, 134, 135, 147, 148, 163, 169, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 283, 324, 327, 332, 334, 337, 338, 340, 345, 349, 357, 364, 375], "excess": 9, "exchang": [92, 94, 329, 349], "exclud": [99, 111, 120, 159, 196], "exclus": 2, "excus": 2, "exec": 347, "exectut": 87, "execut": [2, 21, 27, 30, 34, 36, 41, 49, 53, 55, 56, 58, 62, 65, 69, 72, 78, 81, 82, 86, 88, 90, 96, 99, 111, 120, 126, 172, 173, 220, 223, 227, 228, 229, 267, 268, 319, 327, 328, 350, 352, 393], "execute_request": 347, "exemplifi": 324, "exercis": [2, 340], "exhaust": [7, 317], "exhibit": 4, "exist": [2, 5, 6, 7, 9, 14, 88, 89, 90, 95, 97, 101, 102, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 124, 125, 130, 239, 323, 327, 329, 331, 335, 340, 375], "exit": [6, 88, 89], "exp": [21, 22, 38, 75, 77, 102, 111, 165, 178, 183, 277, 320, 322], "exp_conc": 118, "exp_idx": 118, "expand": 111, "expand_dim": 5, "expandus": 328, "expans": 342, "expect": [5, 7, 14, 32, 76, 103, 109, 111, 115, 119, 216, 240, 320, 322, 324, 325, 326, 327, 329, 338, 340, 346, 350, 352, 357], "experi": [39, 91, 93, 101, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 334, 350], "experienc": [2, 9, 332], "experiment": [9, 21, 22, 40, 42, 45, 49, 57, 93, 96, 99, 101, 107, 108, 111, 118, 164, 198, 219, 239, 246, 249, 258, 283, 317, 319, 321, 322, 323, 329, 334, 338, 339, 345, 354, 358, 400], "expert": 10, "explain": [9, 14, 17, 24, 25, 98, 111, 117, 125, 158, 316, 320, 323, 329, 332], "explained_vari": 125, "explained_variance_ratio": [125, 323], "explan": [6, 9, 10, 348], "explanatori": [6, 316, 326], "explicit": [2, 96, 99, 100, 111, 119, 330], "explicitli": [7, 9, 87, 99, 111, 324, 328, 337], "exploit": 2, "explor": [86, 93, 324], "exploratori": 93, "explos": 2, "expno": [46, 60, 61, 75, 76, 77, 111, 258, 334, 336, 339, 342, 348], "expon": [96, 111, 284, 339], "exponenti": [59, 62, 73, 75, 96, 111, 165, 183, 217, 218, 258, 319, 342, 343, 345], "export": [9, 83, 93, 111, 112, 113, 120, 328, 332, 354], "expos": [94, 317, 318, 332], "express": [2, 9, 17, 40, 80, 107, 111, 121, 165, 183, 206, 221, 222, 224, 225, 230, 231, 232, 326, 337, 345], "expressli": 2, "exptc": [111, 217, 218, 342], "extend": [111, 171, 324, 329, 346], "extens": [5, 7, 9, 21, 43, 48, 87, 92, 103, 104, 111, 221, 224, 225, 230, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 281, 303, 304, 306, 324, 328, 329], "extent": 316, "extern": [2, 6, 46, 94, 96, 101, 102, 107, 108, 110, 114, 116, 117, 119, 124, 125, 318, 335, 347, 355, 361], "extra": [7, 110, 117, 320, 334, 350], "extra_msg": 26, "extract": [48, 76, 102, 111, 114, 117, 161, 162, 250, 316, 321, 324, 329, 332, 340, 344, 376], "extraoutputgetconc": 110, "extraoutputgetspec": 110, "extrem": [92, 111, 298, 322, 325, 347], "extrema": 340, "ey": [111, 187], "f": [6, 7, 17, 21, 32, 33, 43, 46, 71, 75, 76, 89, 94, 96, 99, 107, 111, 120, 178, 197, 200, 234, 277, 303, 320, 322, 323, 324, 326, 327, 329, 334, 336, 337, 347], "f0e442": 337, "f0f0f0": 337, "f1": [32, 61, 75, 76, 111, 304, 320, 336, 339, 342], "f2": [18, 77, 111, 304, 336], "f401": 327, "f403": 332, "f405": 332, "f_ev": [17, 18, 101], "f_expno": 75, "fabrizia": 94, "face": [119, 349], "facecolor": [119, 206, 337], "fact": [2, 64, 322, 332], "factor": [17, 94, 96, 97, 101, 102, 107, 110, 114, 117, 124, 125, 316, 337, 345], "factoris": 323, "fail": [2, 5, 6, 7, 9, 10, 96, 338, 340, 362], "failur": [2, 4, 337], "faith": 2, "fall": 337, "fals": [4, 5, 7, 22, 26, 29, 32, 33, 43, 55, 60, 61, 64, 68, 71, 75, 76, 80, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 127, 130, 131, 132, 133, 134, 141, 142, 143, 145, 153, 154, 163, 165, 170, 174, 175, 179, 180, 183, 184, 185, 188, 192, 193, 196, 199, 201, 202, 204, 205, 206, 213, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 236, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 270, 271, 274, 283, 284, 285, 287, 288, 289, 291, 293, 294, 296, 298, 299, 312, 313, 314, 315, 320, 322, 323, 324, 326, 329, 334, 337, 339, 340, 341, 342, 344, 345, 347, 396], "famili": [96, 337], "familiar": [9, 337], "fanci": [75, 337, 397, 400], "fantasi": 337, "far": 96, "farid": 94, "fashion": 345, "fast": [68, 101, 102, 107, 110, 111, 114, 117, 124, 125, 170, 188, 329, 331, 337, 342, 400], "faster": [6, 11, 80, 96, 102, 111, 114, 166, 167, 400], "fastest": [6, 89, 320], "fastica": [16, 27, 35, 101, 107, 110, 111, 114, 117, 124, 125, 163, 239, 319, 396, 400], "fault": 2, "favor": 398, "favorit": [331, 332], "fc": 324, "feasibl": 94, "featur": [4, 5, 6, 7, 14, 23, 24, 87, 92, 93, 94, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 144, 163, 171, 181, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 281, 302, 316, 321, 323, 329, 332, 334, 337, 345, 349, 351], "featurenam": 87, "federico": 94, "fee": 2, "feedback": 6, "feel": 9, "felipa": 337, "fer": [94, 318], "fern": 94, "fernandez": [0, 88, 90, 91, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "ferrihydrit": [94, 318], "ferrit": [94, 318], "fetch": 6, "few": [6, 21, 29, 51, 91, 111, 119, 251, 322, 326, 334], "ff": [6, 89], "ffmpeg": 337, "ffmpeg_fil": 337, "fft": [75, 77, 111, 188, 332, 343, 344, 348], "fftbin": 347, "fhz": 273, "fi": 342, "fibr": [94, 318], "fibroin": [94, 318], "fid": [5, 75, 339, 342, 348], "fid2": [342, 348], "fid3": 342, "field": [0, 2, 92, 96, 98, 100, 111, 250, 328, 334], "fifo": [18, 101], "fig": [9, 111, 337], "fignum": 111, "figsiz": [20, 39, 40, 51, 68, 71, 75, 111, 206, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 320, 322, 323, 325, 334, 337, 338, 340, 341, 342, 344, 345, 347, 348, 349], "figur": [18, 20, 24, 39, 40, 50, 53, 57, 68, 71, 75, 76, 92, 111, 117, 160, 206, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 275, 319, 320, 322, 323, 324, 325, 338, 340, 341, 342, 344, 345, 347, 348, 349], "figure_autolayout": 337, "figure_dpi": 337, "figure_edgecolor": 337, "figure_facecolor": 337, "figure_figs": 337, "figure_frameon": 337, "figure_max_open_warn": 337, "figure_subplot_bottom": 337, "figure_subplot_hspac": 337, "figure_subplot_left": 337, "figure_subplot_right": 337, "figure_subplot_top": 337, "figure_subplot_wspac": 337, "figure_titles": 337, "figure_titleweight": 337, "file": [1, 2, 6, 7, 8, 9, 10, 12, 21, 22, 27, 30, 34, 36, 41, 42, 49, 53, 56, 57, 58, 62, 65, 69, 71, 72, 75, 78, 81, 82, 87, 88, 90, 94, 98, 99, 103, 111, 112, 113, 118, 120, 197, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 276, 303, 304, 306, 319, 322, 323, 326, 330, 333, 336, 337, 344, 346, 347, 354, 355, 362, 371, 373, 375, 380, 387, 388, 394, 396, 397, 399, 400], "filenam": [5, 43, 99, 111, 112, 113, 120, 197, 221, 224, 225, 230, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 328, 329, 362, 375, 400], "filename1": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261], "filename2": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261], "fileselector": [352, 393], "filetyp": [8, 111, 120, 352, 393], "fill": [104, 111, 114, 119, 154, 166, 167, 176, 177, 201, 213, 214, 266, 269, 281, 310, 311, 312, 313, 314, 315, 337, 343, 344, 346], "fill_valu": [111, 167, 176, 177, 213, 311, 334, 345], "fillna": 9, "filter": [1, 48, 68, 71, 72, 83, 103, 111, 171, 269, 281, 302, 319, 342, 343, 398], "final": [6, 9, 19, 21, 22, 25, 29, 33, 48, 51, 55, 64, 92, 93, 99, 110, 111, 172, 173, 180, 199, 316, 320, 322, 324, 327, 328, 329, 332, 334, 335, 337, 340, 347], "financi": [2, 92], "find": [10, 17, 23, 32, 33, 43, 92, 93, 94, 97, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 151, 152, 171, 236, 321, 325, 328, 332, 334, 338, 345, 347, 348, 399], "find_peak": [75, 76, 111, 320, 321], "findfont": 337, "fine": [6, 324, 347], "finish": 9, "finit": 345, "fire": 2, "first": [2, 5, 6, 7, 9, 10, 11, 17, 20, 21, 22, 24, 29, 39, 43, 48, 51, 52, 71, 80, 85, 86, 87, 89, 91, 96, 97, 99, 100, 102, 107, 108, 110, 111, 114, 116, 117, 119, 121, 124, 125, 130, 131, 134, 141, 159, 206, 217, 236, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 270, 273, 278, 289, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 336, 337, 340, 341, 342, 343, 345, 346, 347, 394], "firstli": 2, "fisher": 24, "fist": 324, "fit": [9, 17, 18, 20, 22, 24, 25, 26, 29, 31, 33, 34, 35, 64, 73, 74, 75, 78, 80, 91, 92, 93, 96, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 124, 125, 139, 160, 190, 234, 258, 269, 281, 300, 316, 319, 321, 322, 323, 324, 325, 326, 332, 337, 340, 347, 354, 373, 392, 400], "fit_intercept": [109, 115], "fit_reduc": [101, 102, 107, 110, 114, 116, 117, 119, 124, 125], "fit_to_concentr": [22, 96], "fit_to_exp_idx": 118, "fit_to_gas_concentr": 118, "fit_transform": [17, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125], "fitter": [75, 77], "fivethirtyeight": 337, "fivo": 94, "fix": [7, 9, 14, 32, 51, 76, 99, 111, 118, 138, 265, 316, 320, 322, 341, 345, 351], "fixtur": [4, 7], "flag": [7, 99, 111, 149, 150, 226, 270, 283, 285, 289, 291, 296], "flake8": [4, 6, 7], "flaki": 4, "flat": [111, 171, 281, 324, 347], "flatten": [99, 111, 132, 133, 142, 155, 202, 204, 205, 287, 288, 299, 347], "flavor": 14, "flexibl": [6, 111, 144, 163, 181, 317, 322, 331, 334, 335, 340], "float": [9, 17, 23, 25, 51, 64, 76, 96, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 130, 135, 138, 139, 155, 156, 158, 159, 165, 169, 171, 172, 173, 174, 175, 179, 183, 187, 196, 199, 204, 206, 214, 217, 218, 220, 223, 226, 227, 228, 229, 238, 265, 269, 273, 281, 284, 287, 288, 299, 302, 324, 325, 334, 340, 346, 349], "float32": [7, 111, 238, 287, 299], "float64": [5, 7, 18, 20, 25, 33, 38, 39, 40, 43, 45, 55, 99, 100, 111, 135, 141, 142, 155, 162, 169, 172, 173, 176, 177, 204, 213, 214, 238, 239, 240, 241, 247, 248, 249, 250, 251, 254, 255, 256, 257, 261, 278, 286, 287, 288, 291, 297, 299, 310, 311, 328, 329, 334, 340, 345, 346], "floor": [99, 111, 138, 265], "flore": 94, "flow": [94, 318], "fm": 94, "fmax": [99, 111, 132, 133, 202, 205], "fmin": [99, 111, 132, 133, 202, 205], "fmt": 347, "fn": [99, 111, 172], "focu": 347, "focus": 92, "folder": [5, 6, 7, 10, 15, 47, 75, 76, 77, 80, 90, 111, 120, 239, 243, 249, 250, 328, 331, 334, 387], "follow": [2, 4, 5, 6, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 84, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 107, 110, 111, 119, 148, 243, 267, 273, 283, 286, 317, 320, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 336, 337, 340, 347, 350], "fonction": 23, "font": [111, 221, 222, 224, 225, 230, 231, 232, 337, 368], "font_famili": 337, "font_siz": 337, "font_styl": 337, "font_vari": 337, "font_weight": 337, "fontsiz": [71, 111, 221, 222, 224, 225, 230, 231, 232, 324, 337, 347], "foo": 9, "fopr": 323, "forbidden": [32, 76, 320], "forc": [2, 7, 99, 100, 109, 111, 115, 192, 193, 275, 291, 333, 337, 349], "force_pound": 121, "force_stack": 379, "forego": 2, "foreground": 328, "forg": [6, 88, 89, 90], "forget": [17, 325, 332], "forgotten": 354, "fork": 5, "form": [2, 9, 94, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 165, 179, 183, 184, 185, 234, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 270, 284, 316, 322, 328, 329, 334, 337, 339, 347], "formal": [316, 340], "formaldehyd": [94, 318], "format": [2, 4, 7, 8, 9, 10, 14, 23, 26, 43, 46, 48, 52, 71, 93, 98, 111, 112, 113, 119, 120, 157, 168, 190, 221, 224, 225, 230, 239, 240, 273, 301, 303, 304, 306, 330, 331, 333, 334, 337, 347, 354, 378, 383, 385, 399], "formatt": [336, 337], "former": [329, 400], "formula": 96, "forth": 2, "fortran": 111, "fortun": [328, 346], "fortunelli": 94, "forum": [12, 329, 332], "forward": [17, 18, 101, 102, 107, 110, 114, 117, 124, 125], "found": [2, 7, 9, 22, 24, 43, 52, 83, 96, 100, 320, 324, 328, 334, 337, 342, 347], "four": [322, 338, 346], "fourier": [75, 111, 170, 174, 175, 186, 188, 329, 339, 343, 344], "fourth": [111, 159], "fp": 116, "fppm": 273, "fr": [0, 10, 88, 90, 94, 327, 329, 332, 342], "fr_fr": 337, "frac": [109, 111, 115, 119, 143, 178, 179, 184, 185, 200, 277, 284, 316, 320, 339], "fraction": [206, 324, 337], "frame": [206, 337], "frameon": 206, "framework": [0, 3, 93, 94, 318, 327], "fran": 94, "franc": 2, "francesco": 94, "francisco": 94, "frantz": [94, 318], "franziska": 94, "freder": 94, "fredholm": 108, "free": [2, 6, 9, 14, 89, 92, 101, 340, 342], "freedom": [2, 111, 287, 299], "freeli": 2, "freetyp": 337, "freita": 94, "french": 2, "frequenc": [5, 40, 99, 111, 170, 174, 175, 188, 273, 316, 344], "friendli": [94, 97, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 120, 124, 125, 328], "fritsch": 94, "frobeniu": 114, "from": [2, 5, 6, 7, 9, 10, 13, 14, 15, 16, 19, 22, 24, 27, 29, 30, 34, 35, 36, 38, 40, 41, 48, 49, 51, 53, 55, 56, 58, 62, 65, 66, 67, 69, 72, 73, 75, 77, 78, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 134, 135, 139, 144, 148, 159, 160, 162, 164, 166, 167, 169, 170, 172, 173, 176, 177, 180, 181, 186, 187, 188, 196, 197, 198, 199, 213, 214, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 273, 281, 282, 285, 286, 287, 290, 291, 292, 299, 303, 304, 306, 310, 311, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 337, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 373, 376, 380, 387, 391, 396, 398, 399, 400], "from_": 127, "from_list": 121, "from_sequ": 121, "fromfunct": [99, 111, 173, 320, 334], "fromit": [99, 111, 172], "frozen": 347, "fsh": [111, 264], "fsh2": [111, 174, 264], "ftir": [23, 91, 94, 101, 111, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 261, 316, 318, 340, 343, 370], "fulfil": 2, "full": [2, 6, 9, 10, 11, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 92, 97, 111, 117, 162, 166, 167, 177, 213, 214, 310, 311, 324, 325, 328, 329, 334, 337, 340, 341, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "full_lik": [111, 166, 167, 176, 213, 214, 310, 311, 334], "full_matric": 125, "fulli": [92, 328, 340, 341, 347, 400], "fulllik": [111, 177], "fullscal": 323, "fun": 102, "fun_arg": 102, "func": [9, 103, 111, 216, 320, 334], "func1": [99, 111, 172], "function": [2, 5, 7, 9, 10, 21, 22, 23, 38, 61, 71, 75, 76, 80, 83, 85, 88, 90, 96, 99, 102, 103, 104, 107, 108, 110, 111, 114, 116, 117, 118, 128, 129, 141, 143, 144, 145, 154, 161, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 183, 184, 185, 187, 188, 200, 201, 216, 217, 218, 226, 234, 236, 239, 249, 250, 264, 266, 269, 270, 277, 284, 287, 298, 302, 303, 316, 320, 324, 327, 328, 329, 332, 335, 336, 337, 343, 344, 347, 349, 354, 360, 361, 367, 386, 392, 400], "further": [2, 6, 9, 11, 86, 87, 89, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 324], "futur": [2, 7, 328, 329, 331, 332, 337, 344, 396], "fv": [20, 24, 25, 43, 75, 76, 77, 91, 322, 323, 325, 329, 332, 334, 336, 339, 342, 345, 346, 349], "fwhm": 80, "g": [5, 7, 9, 20, 33, 40, 61, 80, 84, 85, 90, 92, 94, 98, 99, 100, 101, 111, 121, 127, 176, 183, 195, 213, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 272, 294, 310, 316, 317, 320, 322, 324, 328, 329, 331, 333, 334, 335, 336, 337, 339, 340, 341, 344, 345, 347, 349, 391, 400], "ga": [94, 118], "galact": [5, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 373], "galacticdata": [5, 111, 255], "galleri": [27, 30, 34, 36, 41, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 91, 92, 93, 319, 321, 332, 337, 398], "gappi": 337, "garcia": 94, "gard": 337, "gargallo": 94, "gasym": 320, "gather": 329, "gauss": [111, 183], "gaussian": [111, 178, 183, 320], "gaussianmodel": [300, 320], "gb": [84, 111, 183, 339], "gc": [101, 352, 393], "ge": [111, 284, 339], "gener": [2, 7, 8, 10, 11, 13, 21, 29, 38, 40, 43, 52, 71, 76, 87, 92, 96, 99, 102, 110, 111, 114, 119, 120, 135, 179, 180, 184, 196, 199, 206, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 268, 291, 303, 316, 317, 322, 323, 324, 326, 328, 329, 332, 334, 337, 339, 345, 346, 347, 349, 352, 379, 393], "general_ham": [111, 184, 185], "generalprefer": 95, "genzel": [111, 184, 344], "geometr": [99, 111, 180], "geometri": 337, "geomspac": [99, 111, 199], "geoscienc": 94, "gervilli\u00e9": 94, "get": [5, 6, 7, 10, 15, 17, 18, 20, 21, 22, 23, 24, 32, 43, 68, 75, 76, 84, 89, 90, 99, 101, 109, 110, 111, 115, 119, 121, 182, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 320, 324, 325, 329, 331, 334, 335, 337, 338, 340, 341, 346, 349], "get_axi": 111, "get_baselin": [97, 111, 139, 144, 160, 282], "get_compon": [17, 24, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125], "get_label": [99, 111], "get_loglevel": 327, "get_real_method": 336, "get_scale_nam": 119, "get_user_and_nod": 7, "get_window": 347, "getc": 110, "getc_to_c_idx": 110, "getconc": [22, 110], "getcwd": 328, "getmessag": 347, "getspec": 110, "getst_to_st_idx": 110, "gettingstart": [27, 30, 34, 36, 41, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 376], "ggplot": 337, "gh1234": 6, "ghaffari": 94, "gif": 333, "gilson": 94, "giovannetti": 94, "git": [4, 5, 7, 12, 15, 86], "github": [7, 10, 14, 48, 85, 86, 88, 89, 90, 333, 347, 361, 374, 380, 394], "give": [2, 6, 9, 80, 91, 93, 96, 97, 99, 111, 120, 139, 284, 324, 325, 326, 329, 332, 333, 334, 336, 337, 339, 340, 347], "given": [2, 6, 9, 20, 25, 33, 39, 48, 75, 87, 92, 93, 96, 98, 99, 100, 101, 102, 104, 107, 110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 138, 142, 146, 148, 155, 164, 166, 167, 176, 177, 180, 187, 196, 199, 202, 205, 213, 214, 221, 238, 240, 241, 243, 258, 265, 268, 269, 273, 276, 278, 281, 283, 286, 288, 296, 297, 310, 311, 312, 315, 316, 320, 321, 322, 323, 324, 328, 329, 334, 340, 345, 346, 347, 396], "glob": 75, "glossari": 93, "gm": [111, 165, 179, 237, 279, 280, 284, 298, 339, 342], "gmt": [5, 17, 20, 25, 39, 43, 91, 325, 329, 346, 349], "go": [6, 7, 9, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 84, 86, 87, 88, 89, 329, 331, 339, 342], "god": 2, "goe": [88, 90, 316, 327], "golai": [68, 70, 72, 73, 104, 111, 239, 269, 281, 302, 319, 343], "golden": 107, "gonzalez": 94, "good": [2, 3, 6, 7, 9, 10, 21, 32, 71, 75, 80, 96, 326, 329, 330, 337, 347], "googl": [84, 350, 352, 381, 393], "govern": 2, "gradient": 320, "grai": 337, "gram": [5, 40, 111, 255, 373], "grant": 2, "graph": [111, 117, 121, 220, 337], "graphen": [94, 318], "graphic": [3, 24, 25, 92, 94, 98, 331, 337], "graphicx": 337, "graphviz": 121, "gratio": [32, 320], "grave": 333, "gravimetr": [94, 318], "grayscal": 337, "great": 10, "greater": [25, 68, 111, 117, 158, 170, 188, 234, 284, 285, 320, 333, 339, 347], "greatli": [317, 332], "green": [6, 7, 51, 64, 75, 76, 324, 333, 344], "grei": 324, "grepioni": 94, "grid": [48, 96, 206, 337], "grid_alpha": 337, "grid_axi": 337, "grid_color": 337, "grid_linestyl": 337, "grid_linewidth": 337, "gridlin": 337, "griffin": 94, "group": [5, 22, 55, 92, 111, 240, 249, 250, 256, 317, 324, 329, 334, 337, 346, 349, 350], "gt": [320, 322, 323, 324, 325, 326, 334, 336, 337, 344, 347], "guarante": [92, 96], "guaranti": 377, "guess": [21, 111, 117, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 316, 320, 321, 346, 392], "gui": [3, 92, 94, 98, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 337], "guid": [2, 6, 7, 10, 12, 89, 91, 92, 98, 317, 333, 351], "guidelin": [6, 8, 9], "guilhau": [94, 101], "guillaum": 94, "guinea": 94, "gustavo": 94, "gu\u00e9rin": 327, "gwidth": [32, 320], "h": [33, 40, 94, 111, 114, 221, 222, 224, 225, 230, 231, 232, 302, 316, 320, 334, 337, 340, 342, 347], "h2o": 344, "h3po4": 348, "ha": [2, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 39, 48, 64, 67, 75, 84, 88, 90, 92, 98, 99, 100, 102, 107, 109, 111, 115, 117, 120, 125, 147, 162, 170, 172, 186, 221, 224, 225, 230, 239, 249, 250, 287, 299, 316, 322, 323, 324, 328, 329, 332, 334, 336, 337, 339, 340, 341, 342, 344, 345, 346, 356, 374, 394, 396, 398, 399, 400], "habit": 7, "haddad": 94, "hal": [94, 318], "half": [99, 111, 135, 196, 238, 324, 337], "halko": 117, "ham": [104, 111, 165, 179, 183, 185, 237, 279, 280, 281, 284, 298, 344, 347], "hamid": 94, "han": [91, 94, 104, 111, 281, 347], "hand": [86, 96, 111, 166, 322, 323, 324, 326], "handl": [5, 9, 26, 40, 75, 99, 111, 120, 135, 171, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 329, 334, 337, 338, 340, 345, 346, 347, 367, 369, 377, 379, 383, 385, 391, 394, 399], "hann": [111, 179, 184], "hannemos": 94, "happ": [111, 184, 344], "happen": [4, 6, 320], "hard": [22, 110, 117, 316, 322], "hardc": 110, "hardconc": [22, 110], "hardspec": 110, "hardst": 110, "harri": [111, 145], "has_complex_dim": [111, 270], "has_data": [99, 111, 334], "has_defined_nam": [99, 100, 111], "has_rais": 347, "has_unit": [99, 111], "hasattr": 121, "hash": 9, "hasn": 6, "hat": [19, 21, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 316, 323], "hatch_color": 337, "hatch_linewidth": 337, "have": [2, 5, 6, 7, 9, 10, 11, 12, 14, 15, 18, 20, 21, 32, 33, 39, 43, 51, 55, 64, 75, 76, 83, 85, 86, 87, 88, 90, 92, 96, 99, 100, 102, 111, 114, 125, 130, 142, 148, 158, 163, 167, 177, 206, 214, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 267, 284, 311, 317, 320, 322, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 342, 346, 347, 349, 357, 378, 388, 398], "hay": [94, 111, 159], "hc": 94, "hdr": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "head": [7, 9], "header": [9, 111, 241, 362], "health": 92, "heart": [92, 316], "heavi": 10, "height": [75, 76, 111, 116, 171, 206, 324, 337], "heigth": 75, "heli": [94, 318], "hello": 126, "helmu": 1, "help": [6, 7, 9, 10, 11, 14, 93, 327, 332, 337, 339, 340, 341, 374], "helper": 7, "helvet": 337, "helvetica": 337, "henc": [20, 39, 110, 117, 316, 322, 323, 328, 329, 346, 347], "henrik": 94, "her": 349, "here": [4, 5, 6, 7, 9, 10, 15, 19, 20, 21, 23, 24, 25, 33, 38, 39, 40, 44, 45, 47, 48, 51, 64, 71, 75, 76, 84, 87, 88, 90, 91, 96, 102, 110, 111, 239, 249, 250, 317, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 334, 336, 337, 340, 342, 344, 346, 347, 348, 349], "herebi": 2, "herefrom": 2, "hereinabov": 2, "hereinaft": 2, "hereof": 2, "hereund": 2, "hermit": [64, 97, 340], "hesit": [6, 83, 332], "hex": [333, 337], "hidden": [87, 95, 328], "high": [9, 96, 111, 302, 400], "high_bound": [32, 75, 76, 77, 320], "higher": [111, 130, 287, 299, 324, 340], "highest": [119, 324], "highli": [84, 88, 90, 94, 317, 318, 332], "highlight": 333, "hilbert": [111, 186], "hilvert": [111, 186], "hint": 337, "hist_bin": 337, "histogram": 337, "histori": [7, 24, 25, 77, 92, 111, 249, 322, 323, 329, 335, 339, 342, 345, 346, 378], "hit": 6, "hold": [99, 111, 220, 223, 227, 228, 229, 236, 332], "holder": [2, 111, 240], "home": [11, 18, 23, 26, 43, 46, 48, 55, 75, 87, 95, 327, 328, 329, 331, 336, 337, 346, 347, 388], "homepag": [21, 322, 323], "homogen": 364, "honour": 94, "hook": 7, "hope": [317, 334, 335], "hopefulli": [88, 92, 328, 334, 367, 374], "horizont": [111, 220, 223, 227, 228, 229, 324, 337], "host": [6, 10, 11, 14, 86, 87, 333], "hot": [38, 334], "hotfix": 372, "hour": [19, 26, 33, 40, 44, 99, 100, 111, 172, 320, 334, 349], "hous": 10, "how": [6, 7, 9, 11, 13, 24, 39, 40, 48, 83, 86, 111, 278, 316, 317, 323, 324, 325, 326, 328, 337, 343, 346, 347, 348], "howev": [2, 6, 7, 9, 10, 20, 43, 67, 75, 99, 111, 131, 134, 234, 287, 291, 299, 317, 320, 322, 323, 328, 329, 331, 334, 336, 337, 341, 347], "hpf": 329, "hpl": 21, "hplc": [21, 322, 323], "hr": [40, 48, 100, 320], "hspace": 206, "ht": 111, "html": [4, 5, 7, 9, 10, 87, 111, 306, 329, 333], "http": [0, 4, 6, 7, 29, 40, 43, 48, 86, 87, 88, 89, 90, 94, 111, 306, 322, 326, 327, 329, 332, 333, 337, 340, 347, 394], "hua": 94, "human": [96, 121], "hydrodesulfur": [94, 318], "hydrogel": [94, 318], "hyperbol": 343, "hypercomplex": [99, 105, 106, 111, 122, 123, 132, 147, 202, 343], "hyphen": [9, 333, 337], "hypothet": [111, 299], "hz": [40, 60, 77, 99, 111, 165, 183, 273, 339, 342], "i": [1, 2, 4, 5, 6, 7, 9, 10, 11, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 38, 39, 40, 43, 48, 51, 55, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 153, 154, 155, 158, 159, 160, 161, 162, 163, 165, 170, 172, 173, 174, 175, 176, 179, 180, 181, 183, 184, 185, 187, 188, 193, 196, 198, 199, 201, 202, 204, 205, 206, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 270, 273, 278, 281, 283, 284, 285, 286, 287, 288, 291, 293, 294, 297, 298, 299, 302, 303, 304, 305, 306, 307, 308, 309, 310, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 351, 355, 364, 373, 375, 377, 380, 387, 391, 392, 394, 396, 397, 398, 399, 400], "i0": [75, 77], "i2iexp": 96, "iadd": 334, "iana": 337, "ib": [111, 128, 129], "ibr": 2, "ica": [19, 102, 316], "icon": [15, 87, 331], "id": [6, 99, 100, 111, 120, 140, 178, 200, 234, 277, 300, 332, 333, 334], "idea": [2, 9, 14], "ident": [2, 52, 111, 120, 169, 347], "identif": [94, 318], "identifi": [2, 51, 99, 100, 111, 120, 159, 171, 320, 334], "ie": 33, "iecewis": 340, "ieee": 94, "iexp": 96, "ifft": [111, 170, 342], "ignor": [99, 111, 119, 125, 130, 132, 133, 172, 202, 205, 217, 243, 246, 328, 375], "igrf": 329, "igsm": 329, "ii": [2, 76, 111, 149, 150, 322, 323, 336, 340, 345], "iia": 96, "iii": [2, 322, 323, 340], "ij": 316, "ill": 94, "illustr": [5, 7, 9, 324, 328, 337, 346, 347], "iloc": 9, "im": 342, "imag": [7, 38, 48, 87, 111, 119, 149, 150, 203, 206, 207, 220, 221, 223, 224, 225, 227, 228, 229, 230, 235, 328, 333, 337, 339, 342, 368, 400], "image_aspect": 337, "image_cmap": 337, "image_composite_imag": 337, "image_interpol": 337, "image_lut": 337, "image_origin": 337, "image_resampl": 337, "imagin": 328, "imaginari": [7, 99, 105, 106, 111, 122, 138, 147, 186, 189, 220, 223, 227, 228, 229, 265, 342, 343, 345, 348], "img": 333, "imit": 7, "immedi": [4, 9], "immeubl": 2, "impact": [324, 340, 396], "implement": [4, 5, 9, 96, 101, 111, 131, 134, 159, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 302, 304, 316, 322, 323, 324, 326, 329, 332, 338, 340, 346, 347], "implicit": 96, "import": [4, 5, 6, 7, 9, 10, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 83, 84, 86, 88, 89, 90, 91, 92, 93, 99, 100, 111, 120, 121, 127, 164, 197, 239, 249, 250, 273, 320, 322, 323, 324, 325, 326, 327, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 367, 399], "import_optional_depend": 7, "importerror": [7, 85, 327], "importexport": 329, "impos": [22, 92], "improp": 337, "improv": [6, 7, 10, 23, 83, 92, 99, 111, 117, 173, 321, 322, 332, 337, 339, 341, 350, 352, 354, 363, 367, 369, 370, 371, 374, 376, 378, 382, 386, 391, 393, 400], "imshow": 337, "ina": 94, "inaccur": [111, 287, 299], "inch": [111, 206, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 337], "includ": [1, 2, 5, 7, 9, 10, 14, 29, 84, 96, 97, 99, 100, 111, 120, 135, 171, 180, 196, 199, 321, 328, 329, 332, 333, 337, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "include_limit": [97, 340], "incompat": [40, 99, 111, 193, 250, 291, 337], "inconsist": [111, 249], "incorpor": [2, 92, 111, 249], "incorrect": [7, 23], "increas": [23, 67, 96, 97, 110, 111, 139, 320, 328, 329, 337, 340, 341, 347, 350, 381, 399], "increment": [99, 346], "incur": 2, "inde": [10, 322], "indent": 9, "independ": [26, 101, 102, 107, 109, 110, 111, 114, 115, 117, 124, 125, 206, 249, 316, 322, 337, 342], "index": [9, 10, 23, 38, 39, 75, 76, 96, 98, 99, 100, 107, 110, 111, 117, 118, 136, 137, 141, 149, 150, 164, 169, 241, 269, 283, 296, 320, 321, 322, 323, 329, 340, 343, 349, 364, 387, 397, 399, 400], "index_pc": 26, "indic": [2, 4, 9, 10, 19, 24, 51, 75, 88, 90, 97, 99, 107, 110, 111, 117, 127, 132, 133, 147, 160, 171, 202, 205, 216, 283, 290, 316, 322, 323, 326, 328, 329, 340, 344, 345, 346, 361], "indiffer": 339, "indirect": [111, 258], "indirectli": 2, "individu": [2, 5, 7, 10, 39, 43, 64, 109, 111, 115, 130, 220, 223, 227, 228, 229, 317, 320, 324, 334, 337, 338, 380], "induct": 342, "industri": 2, "ineffect": 2, "inf": [7, 111, 119, 176], "infer": [21, 99, 111, 128, 129, 135, 180, 196, 199, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 324], "infin": [111, 117, 131, 345], "infinit": [9, 111, 287, 299], "info": [6, 19, 20, 21, 22, 23, 26, 32, 55, 64, 67, 75, 76, 77, 80, 88, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 126, 190, 269, 281, 302, 320, 322, 324, 327, 333, 347, 361, 378, 392], "info_": [32, 55, 91, 96, 126, 327, 347], "inform": [5, 6, 7, 10, 20, 21, 29, 32, 33, 67, 87, 99, 111, 117, 119, 144, 181, 241, 316, 317, 321, 323, 324, 326, 328, 329, 331, 334, 337, 344, 347, 378, 394], "informatiqu": 2, "infra": [94, 318], "infrar": [20, 39, 94, 95, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 329, 337], "infring": 2, "inherit": 337, "ini": 7, "init": [101, 111, 114, 392], "init_concentr": 96, "init_x": 118, "initalis": 340, "initi": [2, 5, 7, 21, 22, 75, 92, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 124, 125, 162, 166, 167, 321, 329, 332, 334, 337, 340, 347, 353, 354], "initial_ind": 336, "initial_rang": 98, "initial_rt": [47, 71, 80, 347], "initialis": [111, 114, 396], "inlet_f": 118, "inlet_x": 118, "inlin": [9, 337], "inner": [111, 130, 343], "innov": 2, "inplac": [40, 60, 61, 99, 111, 121, 141, 143, 145, 149, 150, 154, 165, 170, 174, 175, 179, 183, 184, 185, 188, 193, 194, 195, 201, 217, 218, 264, 266, 270, 271, 274, 283, 284, 285, 289, 291, 293, 294, 296, 298, 329, 334, 339, 344, 349], "input": [18, 21, 33, 97, 98, 99, 101, 102, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 128, 129, 131, 132, 133, 134, 135, 138, 139, 142, 143, 145, 146, 148, 149, 150, 155, 158, 159, 160, 162, 163, 165, 166, 167, 171, 176, 177, 179, 180, 184, 185, 196, 199, 202, 204, 205, 213, 214, 217, 218, 236, 265, 269, 281, 282, 285, 286, 287, 288, 290, 298, 299, 302, 310, 311, 312, 315, 322, 328, 343, 364, 399], "inquir": 337, "inria": 2, "insensit": 97, "insert": [86, 333], "insid": [7, 333, 337], "insight": [94, 318, 335], "inspac": [99, 111, 135], "inspect": [68, 321, 341], "inspir": 7, "instal": [7, 10, 93, 107, 332, 337, 350, 351, 352, 355, 363, 368, 376, 380, 383, 384, 393], "instanc": [5, 38, 39, 40, 51, 86, 87, 90, 91, 95, 96, 97, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 126, 144, 147, 166, 167, 172, 176, 177, 181, 213, 214, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 267, 268, 291, 295, 310, 311, 317, 320, 322, 323, 324, 326, 327, 328, 329, 334, 337, 340, 342, 345, 346, 347, 349], "instanti": 119, "instead": [4, 7, 9, 14, 25, 26, 33, 39, 40, 64, 75, 88, 90, 91, 99, 100, 104, 111, 119, 120, 132, 133, 142, 144, 163, 167, 170, 171, 173, 180, 181, 199, 202, 205, 220, 221, 223, 224, 225, 227, 228, 229, 230, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 281, 287, 299, 317, 332, 333, 334, 337, 340, 345, 346, 347, 354, 386, 392, 394, 396, 400], "institut": 2, "instruct": [2, 6, 10, 84, 86, 89, 327, 351, 368], "instrument": [2, 5, 29, 92, 94, 326, 329], "int": [9, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 126, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 145, 148, 149, 150, 154, 155, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 196, 199, 201, 202, 204, 205, 206, 213, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 236, 238, 240, 258, 264, 265, 266, 269, 272, 278, 281, 282, 283, 284, 285, 287, 288, 289, 297, 298, 299, 302, 310, 312, 314, 315, 334, 337, 340], "int64": [111, 166, 176, 213, 310], "int8": [111, 176, 213, 310], "int_": 107, "integ": [9, 23, 25, 64, 80, 97, 99, 104, 111, 130, 135, 141, 143, 145, 154, 155, 158, 165, 170, 174, 175, 179, 183, 184, 185, 188, 201, 204, 217, 218, 234, 264, 266, 269, 278, 281, 284, 287, 288, 297, 298, 299, 302, 340, 345, 346], "integr": [2, 6, 13, 22, 75, 77, 92, 96, 101, 102, 107, 108, 110, 111, 114, 117, 124, 125, 155, 278, 288, 297, 321, 332, 347, 354, 363, 400], "intel": 26, "intellectu": 2, "intellig": [18, 94, 328], "intend": [2, 84, 88], "intens": [18, 38, 75, 76, 77, 111, 124, 159, 206, 249, 322, 324, 334, 336, 339, 341, 342], "intention": 121, "interact": [64, 94, 101, 102, 107, 110, 114, 117, 124, 125, 337, 354], "interactiveanalysi": 124, "interactiveshel": 347, "intercept": [33, 109, 115, 320], "interchang": [111, 289, 296], "interest": [2, 3, 6, 9, 20, 21, 29, 39, 51, 64, 75, 76, 92, 99, 111, 322, 323, 326, 328, 329, 334, 340, 342, 345, 346, 347], "interfac": [2, 87, 88, 90, 91, 92, 94, 103, 316, 331, 332, 337, 347], "interfero": 344, "interferogram": [111, 242, 244, 252, 253, 343, 370, 371, 376, 383], "interlac": 345, "interleav": 111, "intermedi": [116, 340], "intern": [2, 87, 92, 97, 101, 102, 107, 108, 110, 114, 116, 117, 119, 120, 124, 125, 329, 332, 334, 378], "internet": 394, "interp": [104, 111, 269, 281], "interphas": [94, 318], "interpol": [64, 94, 97, 98, 111, 130, 171, 251, 324, 338, 340, 347], "interpolate_method": [111, 130], "interpolate_sampl": [111, 130], "interpret": [2, 6, 89, 111, 117, 120, 171, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "interrupt": 2, "intersect": [111, 130, 324, 338], "interv": [98, 99, 111, 117, 130, 135, 146, 180, 196, 199, 206, 238, 278, 324], "intervent": 2, "intialis": 396, "introduc": 392, "introduct": [10, 50, 53, 57, 93, 111, 226, 319, 321, 343], "intsimp": 325, "inttrapz": 325, "intuit": [3, 9, 94, 318], "inv": [111, 143, 145, 165, 170, 179, 183, 184, 185, 217, 218, 284, 298], "invalid": [2, 4, 345], "invers": [94, 97, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 143, 145, 165, 170, 179, 183, 184, 185, 188, 217, 218, 284, 298, 318, 329, 345], "inverse_transform": [19, 32, 76, 77, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 320, 392], "investig": [22, 94, 318], "invis": 337, "invok": 2, "involv": [4, 85, 107], "io": [5, 40], "io_loop": 347, "ion": [94, 318], "ion_curr": [111, 251], "iop": 94, "ip": 324, "ipkernel": 347, "ipykernel": 347, "ipykernel_16143": 347, "ipykernel_launch": 347, "ipynb": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 328], "ipython": [85, 88, 90, 98, 336, 347], "ipython3": 329, "ipywidget": [103, 391], "ir": [32, 42, 43, 49, 55, 57, 76, 94, 99, 111, 149, 150, 164, 241, 249, 306, 318, 319, 320, 324, 325, 328, 330, 332, 334, 336, 337, 340, 344, 345, 346, 349, 376], "ir4": [111, 306], "ird": 344, "irdata": [17, 20, 23, 25, 32, 39, 43, 44, 45, 52, 64, 86, 91, 95, 98, 99, 101, 111, 120, 125, 141, 142, 148, 155, 171, 197, 204, 239, 240, 241, 243, 249, 250, 254, 256, 257, 278, 286, 287, 288, 297, 299, 303, 304, 320, 324, 325, 328, 329, 334, 337, 338, 340, 344, 345, 346, 349], "irdh": 344, "iri": [9, 16, 27, 35, 94, 99, 100, 101, 102, 108, 110, 111, 114, 117, 124, 125, 198, 239, 318, 319, 354, 361, 375, 376, 400], "iris1": 20, "iris2": 20, "iris3": 20, "iriskernel": [20, 91], "irt": 344, "irth": 344, "is_1d": 111, "is_compatible_with": [121, 127], "is_complex": [111, 149, 150, 270], "is_empti": [99, 100, 111, 334], "is_fil": [111, 113, 120], "is_float": [99, 111], "is_integ": [99, 111], "is_interleav": 111, "is_label": [99, 100, 111], "is_mask": 111, "is_quaternion": [111, 270], "is_same_dim": 100, "is_units_compat": [99, 111], "isfloat": 46, "ishow": 14, "isinst": [121, 127, 272], "isobutanol": [94, 318], "isoformat": 111, "isol": [86, 88, 92], "isotherm": 96, "isotop": 354, "isp_matrix": [21, 26, 322, 323], "issu": [2, 6, 7, 88, 90, 92, 93, 94, 111, 130, 287, 299, 327, 328, 329, 345, 352, 354, 359, 362, 363, 364, 366, 375, 376, 379, 383, 385, 391, 393, 396, 397, 398, 400, 401], "istri": 93, "itakura": 114, "ital": [9, 333, 337], "item": [7, 9, 99, 111, 120, 121, 173, 329, 333, 346], "item_to_attr": [111, 120], "iter": [9, 21, 22, 23, 26, 32, 64, 96, 97, 99, 100, 102, 108, 110, 111, 114, 116, 117, 119, 139, 144, 160, 172, 173, 181, 282, 322, 340, 352, 393], "iterabbl": 117, "iterated_pow": 117, "iterdir": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "iterrow": 9, "itertupl": 9, "ith": [55, 329], "ito": [40, 99, 111, 121, 192, 194, 195, 291, 325, 329, 337, 349, 359], "ito_base_unit": [99, 111, 121, 193, 195, 291], "ito_pref": 121, "ito_reduced_unit": [99, 111, 121, 193, 194, 291], "ito_root_unit": 121, "its": [2, 6, 7, 9, 68, 88, 92, 93, 96, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 142, 161, 163, 187, 212, 220, 223, 227, 228, 229, 233, 247, 248, 276, 320, 322, 323, 324, 329, 333, 334, 336, 337, 346, 347, 381, 396, 398], "itself": [2, 10, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 269, 281, 328], "ivp_solver_kwarg": [22, 96], "j": [1, 94, 99, 110, 111, 120, 121, 153, 192, 195, 213, 214, 294, 318, 329, 334], "jaap": 94, "jacobian": 96, "jafari": 94, "jaggi": 337, "jamil": 94, "jan": [94, 329], "jaroniec": 1, "jaroslava": 94, "jaumot": [16, 19, 26, 27, 35, 94, 110, 111, 239, 319, 322, 323], "ja\u0161\u00edk": 94, "jcamp": [93, 94, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 328, 330], "jcat": [94, 318], "jdx": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 329], "jean": 94, "jendrlin": 94, "jeroen": 94, "jet": [75, 337], "jianjun": 94, "jinja2": 6, "jo": 94, "joanna": 94, "joaquim": 94, "job": 92, "john": 328, "join": [9, 17, 32, 61, 75, 324, 328], "joint": 2, "joran": 94, "joren": 94, "joul": [111, 213], "journal": 94, "jovyan": [11, 87], "jpeg": 337, "jpserver": 87, "jr": 94, "json": [111, 120, 354], "jth": 329, "juan": [94, 316], "jul": [25, 43, 91, 325, 349], "jupyt": [10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 84, 86, 87, 92, 98, 316, 332, 333, 337, 352, 393], "jupyterlab": 331, "juraj": 94, "juri": 94, "jurisdict": 2, "just": [6, 9, 10, 20, 33, 43, 48, 64, 84, 88, 90, 91, 102, 336, 338, 344, 345, 349], "k": [7, 9, 17, 18, 20, 22, 23, 24, 25, 38, 55, 60, 61, 90, 91, 94, 96, 100, 107, 108, 111, 118, 125, 161, 169, 206, 238, 316, 326, 334, 337, 342], "k0": 22, "k_1": 96, "k_dt": 96, "k_exp": 96, "k_n": 96, "kadam": [94, 318], "kalb\u00e1\u010d": 94, "karimvand": 94, "karol\u00edna": 94, "katsumo": 341, "katsumoto": [94, 111, 159, 341, 352, 393], "kbr": 329, "kee": 94, "keep": [6, 9, 20, 22, 64, 68, 75, 76, 80, 96, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 153, 162, 320, 324, 337, 343], "keep_row": 48, "keepdim": [99, 111, 121, 131, 132, 133, 134, 142, 155, 202, 204, 205, 236, 287, 288, 299], "keepnam": [99, 100, 111, 153], "kei": [5, 9, 75, 96, 100, 322, 324, 329, 362], "keller": [16, 27, 35, 99, 101, 111, 148, 163, 319], "kelvin": 96, "kept": [110, 111, 117, 221, 224, 225, 230, 329, 396], "kernel": [20, 87, 107, 108, 111, 281, 337, 347, 361, 400], "kernelapp": 347, "kernelbas": 347, "kevin": 94, "keyerror": 334, "keyword": [9, 47, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 135, 143, 144, 145, 148, 154, 158, 162, 165, 166, 167, 170, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 188, 196, 197, 199, 201, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 278, 281, 284, 287, 297, 298, 299, 302, 303, 310, 311, 320, 324, 329, 340, 379, 398], "kg": [99, 111, 121, 195, 294], "khodadadi": 94, "khz": 273, "kilogram": 334, "kilomet": [33, 111, 169, 213, 320], "kin": 22, "kin_exp": 96, "kin_param_to_set": 118, "kind": [6, 9, 26, 99, 107, 108, 111, 163, 317, 320, 328, 334, 335, 348], "kindli": 0, "kinet": [16, 27, 35, 85, 88, 94, 96, 99, 101, 110, 111, 118, 239, 318, 319, 352, 393], "klass": 116, "kleibert": 94, "km": [33, 40, 99, 111, 169, 172, 173, 177, 213, 320], "know": [6, 9, 40, 92, 101, 102, 107, 114, 117, 124, 125, 316, 320, 329, 340], "knowledg": [2, 92, 329], "known": [4, 6, 14, 89, 111, 200, 241, 320, 322, 347], "kubelka": [111, 249], "kubi\u010dka": 94, "kullback": 114, "kutta": 96, "kv\u00edtek": 94, "kwarg": [5, 9, 96, 97, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 132, 133, 135, 143, 144, 145, 146, 148, 153, 154, 156, 157, 158, 160, 161, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 190, 196, 197, 199, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 278, 279, 280, 281, 283, 284, 290, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 345, 347], "kwargsgetconc": [22, 110], "kwargsgetspec": 110, "l": [2, 20, 51, 61, 64, 68, 71, 75, 76, 77, 94, 107, 111, 174, 175, 220, 223, 226, 227, 228, 229, 264, 316, 320, 323, 324, 326, 339, 340, 341, 342, 347, 361, 391], "l1": 114, "l1_ratio": 114, "l2": [111, 114, 249], "l3": [111, 249], "l_1": 323, "l_x": [316, 326], "l_y": [316, 326], "la": [2, 94, 318], "lab": [11, 25, 26, 87, 98, 316, 332, 337, 352, 393], "label": [5, 17, 18, 20, 23, 24, 25, 29, 33, 38, 39, 43, 51, 52, 55, 60, 61, 71, 75, 76, 85, 88, 90, 91, 99, 100, 111, 117, 206, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 240, 283, 317, 320, 323, 324, 325, 326, 329, 335, 337, 340, 342, 344, 346, 347, 349, 362, 391], "labelcolor": 337, "labels_column": [25, 117], "labels_everi": [117, 323], "labor": 2, "laboratori": [18, 94], "labspec": [47, 51, 67, 68, 71, 80, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 341, 347, 354, 375], "labspec6": 328, "lack": 322, "laetitia": 94, "laid": 111, "lakeh": 94, "lamb": [71, 80, 97, 104, 111, 139, 302, 340, 347], "lambda": [99, 107, 108, 111, 172, 200, 277, 316, 320, 333], "langmuir": [20, 91, 108], "languag": [2, 9, 15, 92, 332], "laod": 24, "lapack": 117, "larg": [6, 11, 13, 17, 75, 111, 124, 171, 302, 317, 324, 337, 340, 347, 367], "larger": [64, 80, 97, 104, 110, 111, 117, 139, 146, 159, 171, 302, 304, 322, 323, 327, 337, 347], "largest": [20, 111, 313, 345, 347], "larmor": [99, 273], "laser": [99, 344], "laser_frequ": [99, 344, 383], "last": [6, 7, 9, 20, 21, 76, 88, 91, 99, 102, 104, 110, 111, 130, 131, 134, 143, 145, 147, 148, 154, 162, 165, 170, 174, 175, 179, 180, 183, 184, 185, 188, 196, 199, 201, 217, 218, 240, 264, 266, 269, 278, 281, 283, 284, 291, 297, 298, 302, 320, 323, 324, 328, 329, 336, 337, 339, 340, 341, 343, 346, 347, 350, 394], "latent": [316, 326], "later": [39, 76, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 269, 281, 302, 337, 400], "latest": [4, 6, 10, 11, 87, 88, 90, 350], "latex": 337, "latex_preambl": 337, "latter": [67, 329, 347], "launch": [90, 98, 322, 331], "launch_inst": 347, "launch_new_inst": 347, "laura": 94, "law": 2, "layout": [111, 221, 222, 224, 225, 230, 231, 232], "lb": [60, 75, 77, 111, 165, 183, 339, 342], "lc": [88, 90, 91, 92, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "le": [2, 94, 111, 239, 249, 250, 318], "lead": [23, 114, 324, 327, 337, 340, 347], "learn": [6, 24, 94, 97, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 198, 318, 323, 326, 331, 332, 337], "least": [2, 5, 32, 33, 64, 94, 97, 104, 109, 110, 111, 115, 116, 119, 139, 144, 160, 181, 282, 302, 316, 318, 321, 322, 337, 340, 394, 396, 400], "least_squar": [116, 400], "leastsq": [75, 77, 116], "leau": [94, 318], "leav": [92, 337], "leblanc": 2, "left": [9, 15, 75, 86, 96, 99, 110, 111, 117, 119, 125, 131, 132, 133, 134, 138, 174, 175, 179, 201, 202, 204, 205, 206, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 236, 265, 287, 288, 299, 316, 322, 324, 337, 340, 347], "left_bas": [75, 324], "left_ip": [75, 324], "left_op": 96, "leftarrow": 110, "legaci": 337, "legal": 2, "legend": [17, 18, 23, 25, 29, 33, 51, 52, 61, 71, 75, 111, 226, 320, 324, 325, 326, 337, 340, 342, 344, 347], "legend_borderaxespad": 337, "legend_borderpad": 337, "legend_columnspac": 337, "legend_edgecolor": 337, "legend_facecolor": 337, "legend_fancybox": 337, "legend_fonts": 337, "legend_framealpha": 337, "legend_frameon": 337, "legend_handleheight": 337, "legend_handlelength": 337, "legend_handletextpad": 337, "legend_labelspac": 337, "legend_loc": 337, "legend_markerscal": 337, "legend_numpoint": 337, "legend_scatterpoint": 337, "legend_shadow": 337, "legisl": 2, "leibler": 114, "leiden": 94, "len": [7, 75, 110, 111, 121, 156, 171, 239, 243, 249, 250, 287, 299, 320, 324, 337], "len_seq": 121, "length": [9, 40, 96, 99, 109, 111, 115, 119, 120, 121, 127, 135, 142, 171, 180, 199, 226, 285, 291, 304, 316, 322, 324, 334, 337, 346, 347, 349], "leq": [111, 179, 184, 185, 316], "less": [9, 76, 86, 96, 100, 104, 111, 114, 117, 119, 269, 320, 334, 337], "let": [9, 20, 22, 25, 29, 32, 33, 39, 40, 52, 55, 68, 75, 80, 111, 141, 320, 322, 323, 324, 325, 326, 327, 328, 329, 334, 336, 338, 340, 341, 342, 345, 346, 347, 349], "letter": [2, 6, 9, 107, 334, 337], "level": [9, 87, 94, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 158, 182, 206, 269, 272, 281, 302, 318, 322, 327, 333, 337, 344, 392], "liabil": 2, "liabl": 2, "lib": [23, 26, 46, 48, 75, 327, 336, 337, 347], "libor": 94, "librairi": [50, 53, 57, 111, 226, 319], "librari": [3, 7, 9, 33, 38, 64, 85, 86, 88, 92, 102, 110, 111, 121, 295, 331, 332, 334, 337, 347, 391], "licenc": [111, 186], "licens": [0, 48, 92, 93, 111, 302, 327], "license": 2, "licensor": 2, "life": 328, "light": [99, 337], "lighter": [84, 337], "lign": 334, "like": [6, 7, 9, 10, 11, 15, 33, 38, 75, 76, 85, 88, 90, 96, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 124, 125, 128, 129, 158, 159, 162, 167, 171, 177, 214, 240, 269, 276, 281, 302, 311, 316, 320, 323, 324, 328, 329, 331, 335, 337, 345, 350, 352], "likelihood": [111, 287, 299], "lim": 342, "limit": [2, 23, 51, 80, 83, 97, 99, 111, 144, 146, 181, 220, 223, 227, 228, 229, 234, 241, 245, 249, 320, 321, 323, 324, 325, 329, 332, 334, 337, 340, 346, 347], "linalg": [33, 117], "line": [2, 6, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 85, 88, 92, 95, 97, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 140, 160, 165, 178, 200, 206, 208, 220, 223, 226, 227, 228, 229, 277, 300, 316, 320, 322, 323, 324, 329, 334, 336, 337, 343, 347, 391, 392], "line_1": [32, 76, 320], "line_2": [32, 76, 320], "line_3": 76, "line_4": 76, "line_5": 76, "linear": [31, 32, 34, 35, 64, 80, 97, 98, 99, 102, 109, 111, 115, 116, 119, 130, 160, 199, 217, 218, 234, 316, 319, 321, 354, 369, 396, 397, 399], "linear_model": [109, 115], "linearcoord": [357, 396], "linearize_below": 99, "linearli": 316, "linearregress": [109, 115], "linebreak": 333, "linei": 320, "lines_antialias": 337, "lines_color": 337, "lines_dash_capstyl": 337, "lines_dash_joinstyl": 337, "lines_dashdot_pattern": 337, "lines_dashed_pattern": 337, "lines_dotted_pattern": 337, "lines_linestyl": 337, "lines_linewidth": 337, "lines_mark": 337, "lines_markeredgecolor": 337, "lines_markeredgewidth": 337, "lines_markerfacecolor": 337, "lines_markers": 337, "lines_scale_dash": 337, "lines_solid_capstyl": 337, "lines_solid_joinstyl": 337, "linestyl": [22, 75, 76, 80, 111, 220, 223, 227, 228, 229, 324, 337, 339, 344], "linetyp": 208, "linewidth": [111, 119, 206, 220, 223, 227, 228, 229, 322, 323, 337], "linex": 320, "linez": 320, "link": [9, 83, 88, 90, 332, 361], "linspac": [9, 38, 99, 100, 111, 135, 180, 199, 320, 334], "linux": [6, 84, 87, 88, 89, 93, 95, 328, 339, 368, 377], "lisa": 94, "list": [5, 9, 33, 39, 51, 67, 89, 96, 97, 98, 99, 100, 103, 107, 110, 111, 116, 117, 119, 120, 121, 130, 164, 166, 167, 176, 177, 206, 213, 214, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 310, 311, 316, 317, 320, 322, 323, 324, 326, 328, 329, 334, 337, 340, 343, 346, 351, 361, 364, 399], "list_fil": 329, "list_of_tz_database_time_zon": 334, "listdir": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "listnd": [111, 249], "liter": [9, 328], "literatur": 322, "littl": [25, 64, 349], "ll": [6, 7, 10, 97, 107, 321, 340], "ln": [99, 111, 199, 329], "lnd": 26, "load": [2, 5, 17, 24, 25, 26, 38, 40, 42, 49, 51, 55, 57, 64, 67, 68, 75, 91, 98, 99, 111, 117, 120, 125, 219, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 316, 319, 320, 321, 322, 328, 334, 335, 340, 341, 345, 352, 383, 391, 393], "load_iri": [24, 111], "lob": 320, "loc": [9, 29, 71, 99, 326, 340, 342, 347], "loc2index": [95, 99], "local": [5, 6, 7, 10, 48, 86, 87, 96, 111, 171, 268, 334, 337], "local_timezon": [111, 334], "localfold": 6, "localvar": 268, "localvr": 268, "locat": [5, 7, 9, 11, 51, 52, 86, 87, 95, 97, 99, 111, 120, 160, 243, 316, 324, 328, 337, 340, 344, 347, 355, 356, 400], "log": [13, 17, 18, 21, 22, 86, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 158, 180, 182, 199, 249, 269, 272, 281, 302, 322, 332, 337, 347, 351, 375, 383, 388, 392, 396], "log10": 337, "log_bas": [99, 111, 199], "log_level": [19, 20, 21, 22, 23, 26, 32, 64, 75, 76, 77, 80, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 158, 269, 281, 302, 320, 322, 327, 392], "logarithm": 345, "logcosh": 102, "logfil": 118, "logger": 388, "logic": [111, 131, 134], "logit": 119, "loglevel": 20, "lognorm": 337, "logspac": [99, 111, 180], "long": [9, 10, 11, 25, 80, 121, 334, 337, 345], "longer": [2, 6, 7, 386], "look": [3, 6, 7, 9, 18, 43, 47, 64, 75, 76, 322, 323, 324, 328, 329, 331, 334, 337, 340, 346], "lookup": 337, "loop": [110, 316], "lopez": [94, 318], "lorentz": [111, 183], "lorentzian": [200, 320], "lorentzianmodel": [300, 320], "loss": 2, "lost": [111, 292, 399], "lot": [6, 7, 317, 334, 335], "louwen": 94, "low": [9, 96, 124, 322, 340], "low_bound": [32, 75, 76, 77, 320], "lower": [24, 25, 26, 29, 110, 111, 117, 146, 169, 322, 323, 324, 326, 327, 337, 342], "lowercas": 6, "lowest": [119, 324], "lpf": 329, "lsdoa": 96, "lsoda": 96, "lst": [320, 394], "lstq": 320, "lstsq": [31, 34, 35, 99, 110, 111, 319, 321], "lt": [17, 320, 322, 323, 324, 325, 326, 336, 347], "lu": [96, 117], "luca": 94, "lucia": 94, "lw": [32, 51, 71, 75, 76, 111, 220, 223, 226, 227, 228, 229, 320, 347], "lyu": 94, "m": [6, 23, 40, 61, 75, 76, 88, 89, 90, 94, 96, 99, 100, 101, 111, 121, 125, 142, 143, 155, 169, 179, 184, 185, 192, 195, 204, 220, 223, 227, 228, 229, 238, 287, 288, 291, 294, 299, 302, 316, 324, 325, 326, 327, 331, 334, 337, 339, 342, 345, 349, 371, 385], "m1": [21, 26, 322, 323], "m5nb": [43, 326], "m5spec": [29, 43, 326], "m_a": [55, 121], "m_b": 55, "m_from": 127, "m_p": 55, "ma": [111, 142, 163, 292, 400], "mac": [6, 84, 95], "macchietti": [94, 318], "machin": [6, 7, 87, 89, 111, 198, 329], "machinenam": 329, "maco": [6, 7, 89], "made": [2, 5, 6, 51, 88, 99, 100, 107, 111, 159, 236, 249, 251, 316, 324, 326, 328, 329, 346, 374], "maeder": [94, 101, 316], "magazin": 94, "maghemit": [94, 318], "magic": [85, 98, 337], "magma": [91, 337, 345], "magma_r": 340, "magnet": [100, 334], "magnitud": [17, 99, 111, 121, 127, 320, 322, 324, 329, 343, 347], "magnitudet": 121, "mahdi": 94, "mahdiyeh": 94, "mahsa": 94, "mai": [1, 2, 3, 6, 7, 9, 14, 40, 55, 64, 67, 68, 75, 85, 87, 88, 89, 94, 97, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 131, 134, 146, 166, 167, 170, 171, 199, 215, 243, 317, 320, 329, 332, 334, 335, 337, 340, 341, 347, 357, 373, 377, 388, 394], "mail": 337, "mail\u00e4nder": 327, "main": [2, 5, 6, 9, 10, 55, 93, 95, 99, 100, 111, 120, 161, 162, 169, 187, 317, 323, 329, 332, 333, 334, 335, 340, 347, 354], "mainimum": [111, 152], "mainli": [9, 11, 18, 84, 92, 116, 332], "maint": 6, "maintain": [6, 7, 10], "mainten": 2, "majeur": 2, "major": [48, 93, 100, 320, 333, 334, 337, 347, 350], "make": [2, 4, 7, 8, 9, 10, 14, 23, 38, 39, 40, 64, 76, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 111, 117, 120, 121, 126, 139, 143, 145, 153, 154, 160, 165, 170, 172, 174, 175, 179, 181, 183, 184, 185, 188, 201, 217, 218, 258, 264, 266, 282, 284, 298, 317, 320, 322, 324, 333, 334, 335, 337, 340, 344, 345, 347, 349, 376, 381], "makestyl": [337, 354], "mamba": [6, 7, 85, 88, 89, 90], "manag": [83, 86, 93, 120, 335], "mandatori": 337, "mani": [5, 6, 7, 9, 40, 83, 87, 92, 96, 111, 317, 322, 324, 327, 328, 332, 334, 387, 389], "manipul": [3, 37, 41, 57, 93, 99, 111, 121, 168, 239, 319, 329], "manner": [2, 4], "manual": [7, 9, 92, 111, 139, 141, 144, 160, 166, 181, 217, 218, 282, 284, 321, 339], "manufactur": 92, "map": [48, 87, 102, 111, 117, 119, 206, 209, 221, 224, 225, 230, 322, 334, 337, 400], "marcel": 94, "marco": 94, "margarita": 94, "margin": [111, 166, 167, 337], "mari": 94, "mark": [7, 111, 226, 320, 324, 333], "markdown": [14, 324], "marker": [75, 76, 77, 111, 119, 220, 223, 226, 227, 228, 229, 320, 324, 326, 337, 400], "markeredgecolor": [111, 220, 223, 227, 228, 229, 337], "markeredgewidth": [111, 220, 223, 227, 228, 229, 337], "markerfacecolor": [111, 220, 223, 227, 228, 229, 337], "markermarkerstyl": 119, "markers": [32, 33, 111, 119, 220, 223, 227, 228, 229, 320, 337], "markers_fillstyl": 337, "market": 2, "markeveri": [32, 111, 220, 223, 227, 228, 229], "markup": 9, "martin": 94, "mask": [7, 17, 23, 25, 32, 99, 111, 125, 130, 138, 163, 169, 187, 213, 220, 223, 227, 228, 229, 263, 265, 291, 292, 334, 335, 337, 338, 340, 343, 345, 383, 391], "masked_arrai": [111, 163, 213, 345], "masked_array_lik": [111, 163], "masked_data": [111, 292], "maskedarrai": 111, "masoumeh": 94, "mass": [7, 94, 96, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "massart": [16, 27, 35, 99, 101, 111, 148, 163, 319], "massimiliano": 94, "massiv": [94, 318], "master": [6, 7, 48, 84, 316, 326, 331, 354], "mat": [19, 21, 22, 26, 29, 43, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 322, 323, 326, 328, 329, 340], "mat_": [43, 394], "match": [96, 111, 121, 141, 146, 148, 171, 345], "materi": [94, 318], "math": [23, 101, 102, 110, 111, 114, 116, 117, 119, 124, 125, 179, 184, 323, 333, 337, 354, 369], "mathbf": 316, "mathemat": [111, 332, 334, 335, 338, 343, 357, 367], "mathrm": [17, 18, 26, 33, 38, 51, 55, 61, 111, 238, 320, 323, 325, 326], "mathtext": 337, "mathtext_bf": 337, "mathtext_c": 337, "mathtext_default": 337, "mathtext_fallback_to_cm": 337, "mathtext_fontset": 337, "mathtext_it": 337, "mathtext_rm": 337, "mathtext_sf": 337, "mathtext_tt": 337, "matlab": [21, 26, 43, 92, 94, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 328], "matlabdata": [19, 21, 22, 26, 111, 247, 248, 322, 323], "matplotib": 84, "matplotlib": [3, 9, 33, 51, 85, 92, 97, 98, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 275, 324, 332, 346, 362, 364, 368, 376, 385, 388, 400], "matplotlibrc": [111, 221, 222, 224, 225, 230, 231, 232], "matric": [19, 21, 96, 111, 114, 247, 248, 302, 316, 322, 323, 326], "matrix": [20, 21, 22, 23, 26, 96, 97, 101, 102, 107, 108, 109, 110, 114, 115, 117, 124, 125, 316, 322, 323, 326, 334, 361], "matter": 323, "matur": 92, "maug": 94, "mauri": 94, "maurin": 94, "max": [9, 17, 18, 22, 60, 61, 75, 94, 96, 99, 107, 110, 111, 117, 171, 234, 240, 320, 322, 324, 329, 339, 342, 345, 349], "max_compon": 26, "max_error": 329, "max_fun_cal": 116, "max_it": [32, 76, 97, 102, 110, 111, 114, 116, 119, 139, 320, 322, 340], "max_lines_in_stack": 337, "max_rel_error": 329, "max_relative_error": 329, "maxdiv": [110, 322], "maxim": [97, 101, 102, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 324], "maxima": [99, 111, 132, 133, 171, 202, 205, 321, 325], "maximis": [316, 326], "maximum": [23, 32, 75, 97, 99, 102, 110, 111, 114, 116, 119, 124, 132, 133, 136, 139, 146, 151, 171, 202, 205, 236, 287, 298, 299, 316, 320, 322, 324, 337, 340, 342, 344, 349], "mayb": [38, 86, 329], "mb": [27, 30, 34, 36, 41, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 84, 319], "mc": [94, 111, 322, 342], "mcdonald": [94, 111, 245, 329], "mcr": [16, 27, 35, 93, 94, 96, 99, 101, 102, 107, 110, 111, 114, 117, 124, 125, 239, 316, 318, 319, 321, 323, 332, 352, 361, 392, 393, 399], "mcr1": 322, "mcr2": 322, "mcr3": 322, "mcr4": 322, "mcr5": 322, "mcr_1": 22, "mcr_2": 22, "mcral": [21, 22, 101, 102, 107, 114, 117, 124, 125, 352, 382, 383, 392, 393, 395], "mct": 329, "md": [7, 387], "mdpi": 94, "me": 337, "mean": [2, 9, 10, 19, 23, 48, 64, 97, 99, 100, 102, 104, 109, 111, 114, 115, 119, 130, 142, 160, 163, 173, 195, 269, 270, 287, 288, 294, 299, 326, 332, 338, 340, 346, 362], "meaning": 9, "meant": 4, "measur": [2, 22, 24, 29, 48, 73, 74, 78, 94, 111, 114, 116, 119, 258, 287, 299, 316, 319, 324, 326, 334, 340], "mec": [33, 111, 220, 223, 227, 228, 229, 320, 324], "mechan": 346, "mechanochem": [94, 318], "median": [104, 343], "medic": 94, "medium": [2, 9, 337], "meet": 2, "mem": [27, 30, 34, 36, 41, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 319], "member": [55, 92], "memorandum": 2, "memori": [102, 111, 130], "menger": 107, "menghao": 94, "mention": [2, 5, 12, 324, 328, 329], "menu": [86, 87, 90, 331], "merg": [7, 9, 10, 26, 43, 67, 75, 111, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 270], "merit": [24, 26, 117, 320, 323], "messag": [4, 6, 7, 96, 157, 168, 190, 301, 327, 333, 334, 347], "met": [7, 111, 163, 337], "meta": [5, 7, 96, 99, 111, 120, 334, 344, 360, 383], "metadata": [7, 8, 26, 33, 38, 75, 91, 93, 99, 111, 120, 243, 249, 329, 334, 337, 342, 360], "metal": [94, 318], "meter": [40, 99, 111, 121, 192, 291, 334, 349], "meth": 9, "methan": [94, 318], "method": [4, 6, 7, 9, 10, 17, 19, 21, 24, 25, 32, 38, 40, 43, 51, 52, 64, 67, 68, 71, 75, 76, 77, 80, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 130, 131, 134, 138, 139, 141, 143, 145, 149, 150, 154, 158, 159, 165, 170, 174, 175, 177, 179, 183, 184, 185, 188, 197, 201, 206, 207, 208, 209, 210, 211, 212, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 249, 254, 256, 257, 264, 265, 266, 269, 270, 281, 283, 284, 285, 289, 291, 296, 298, 302, 305, 307, 308, 309, 316, 318, 321, 322, 323, 325, 326, 327, 328, 329, 332, 333, 335, 336, 337, 339, 343, 344, 345, 352, 354, 357, 359, 360, 362, 363, 364, 369, 374, 379, 382, 385, 392, 393, 394, 398, 399, 400], "method_1d": [111, 220, 324, 337], "method_2d": [111, 221, 324, 337], "method_3d": 337, "meting9": 22, "mew": [111, 220, 223, 227, 228, 229], "mezzetti": 94, "mfc": [33, 111, 220, 223, 227, 228, 229, 320, 324], "mhvwert": 347, "mhz": 273, "michael": 94, "michel": 2, "micromamba": [23, 26, 46, 48, 75, 327, 336, 337, 347], "micromet": [111, 249], "microsecond": 60, "microsoft": 87, "mid": [111, 312, 313, 314, 315], "middl": [111, 312, 313, 314, 315, 348], "might": [6, 9, 92, 96, 99, 111, 135, 327, 329, 342], "milagro": 94, "millinewton": 121, "millitesla": [100, 334], "mimic": [111, 284, 317, 339, 340], "min": [9, 23, 38, 64, 80, 96, 99, 107, 111, 114, 117, 119, 125, 171, 172, 240, 316, 323, 324, 325, 329, 345, 346], "mingw": 7, "miniconda": [6, 84, 89, 90], "miniforg": [6, 89], "minim": [5, 96, 109, 111, 114, 115, 118, 141, 316, 321, 323, 324, 334, 347], "minima": 324, "minimis": [111, 141], "minimum": [2, 5, 7, 23, 84, 99, 111, 117, 132, 133, 137, 142, 145, 146, 171, 202, 205, 236, 316, 320, 324, 337, 342, 350, 352], "minka": 117, "minor": [337, 373], "minoux": 94, "minu": 337, "minut": [7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 86, 99, 111, 192, 324, 329, 337, 346, 394], "mir": 329, "mirror": [104, 111, 269, 281, 347], "miscellan": 2, "mismatch": 338, "miss": [9, 88, 90, 92, 111, 130, 171, 338, 340, 368, 399], "mistak": 9, "mit": 48, "miter": 337, "mix": [61, 92, 102, 111, 114, 284, 339], "mixing_": 102, "mixtur": [22, 94, 101, 102, 107, 110, 114, 117, 124, 125, 316, 318, 322], "mle": [24, 117], "mm": 329, "mo_al2o3": [20, 39, 91, 324, 329, 346], "mo_al2o3_0": 329, "mo_al2o3_bas": 329, "mode": [6, 104, 111, 116, 269, 281, 337, 347, 350, 352], "model": [0, 17, 19, 20, 22, 24, 25, 26, 29, 32, 33, 64, 75, 76, 80, 91, 94, 96, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 124, 125, 140, 178, 200, 220, 223, 227, 228, 229, 234, 277, 300, 316, 321, 323, 325, 326, 327, 343, 373, 392], "modeldata": [111, 116], "modellinestyl": [111, 220, 223, 227, 228, 229], "modern": 337, "modif": [2, 11, 111, 334, 361], "modifi": [2, 6, 7, 10, 48, 95, 97, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 162, 201, 279, 280, 291, 312, 315, 329, 334, 336, 337, 345, 349, 378, 396], "modl": [111, 220, 223, 227, 228, 229], "modul": [2, 7, 9, 86, 88, 329, 330, 340, 347, 367, 396], "modulu": [111, 203], "mohammad": 94, "moistur": [29, 326], "molar": 94, "molecular": [94, 318], "moment": [80, 111, 163, 331], "monodecconc": 110, "monodectol": 110, "monoincconc": 110, "monoinctol": 110, "monospac": 337, "monoton": [94, 110], "month": [0, 2], "more": [2, 6, 7, 9, 10, 12, 14, 21, 24, 38, 55, 64, 80, 84, 88, 91, 92, 93, 96, 100, 102, 104, 111, 117, 118, 119, 144, 146, 161, 171, 181, 269, 281, 316, 317, 320, 321, 328, 331, 332, 335, 337, 340, 347, 349, 350, 356, 362, 378], "moreov": 347, "morin": 94, "mortim": [38, 334], "mor\u00e1vkov\u00e1": 94, "most": [7, 9, 11, 84, 91, 92, 94, 99, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 291, 316, 318, 323, 324, 332, 334, 336, 337, 339, 347], "mostli": [17, 334], "motiv": 92, "mount": 86, "mouravieff": 94, "mous": 324, "move": [104, 111, 159, 281, 337, 343], "mp": 342, "mp5nb": [43, 326], "mp5spec": [43, 326], "mp6nb": [43, 326], "mp6spec": [43, 326], "mpl": [111, 221, 224, 225, 230, 337], "mpl_event": 206, "mplstyle": 354, "msdata": [111, 251], "msg": [157, 190, 301, 347], "mt": [334, 337], "mu": [64, 114], "much": [9, 24, 80, 84, 92, 324, 329, 334, 347, 400], "multi": [96, 399, 400], "multicoordin": [363, 383, 391], "multicor": 7, "multidimension": [1, 91, 111, 143, 145, 154, 165, 170, 174, 175, 179, 184, 185, 188, 201, 217, 218, 264, 266, 283, 284, 298, 346, 357], "multiindex": 9, "multimod": 110, "multipl": [4, 6, 7, 9, 20, 24, 52, 59, 62, 73, 75, 93, 97, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 132, 133, 142, 165, 171, 180, 183, 202, 205, 206, 237, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 280, 284, 314, 319, 334, 342, 343, 354, 359, 398], "multipli": [96, 111, 114, 117, 238], "multiplot": [111, 207, 208, 209, 210, 211, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 340], "multiplot_map": 338, "multisampl": 316, "multivari": [21, 64, 91, 94, 97, 107, 110, 316, 318, 322, 323, 343], "munk": [111, 249], "muschi": 94, "must": [5, 6, 9, 10, 43, 75, 87, 88, 90, 91, 96, 99, 100, 101, 102, 104, 108, 110, 111, 114, 116, 117, 118, 119, 120, 124, 125, 135, 142, 143, 145, 147, 148, 158, 162, 163, 165, 170, 171, 179, 184, 185, 188, 196, 206, 217, 226, 234, 239, 241, 249, 250, 269, 270, 281, 286, 295, 298, 317, 320, 326, 332, 333, 334, 340, 347, 349, 352], "mute": 337, "mutivari": 357, "my": [6, 55, 86], "my_g": 102, "my_new_featur": 6, "myaccount": 87, "mycoord": [99, 111, 135], "mydatadir": 95, "mydataset": [38, 320, 334], "mydefault": 337, "myfil": [111, 304, 306], "mykhailo": 94, "mylabel": 99, "mynmrdata": 336, "myproj": 120, "myscript": 126, "mywork": 87, "m\u00e9gane": 94, "n": [5, 9, 22, 24, 25, 26, 36, 43, 58, 64, 75, 77, 82, 88, 89, 91, 94, 99, 101, 107, 111, 119, 121, 125, 140, 143, 155, 160, 169, 172, 178, 179, 184, 185, 186, 187, 200, 206, 234, 238, 277, 278, 287, 299, 300, 314, 316, 318, 322, 323, 324, 325, 326, 329, 334, 336, 337, 339, 342, 345, 346, 347, 349], "n1": 334, "n_compon": [17, 18, 19, 22, 23, 24, 25, 26, 29, 32, 64, 91, 97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 316, 322, 323, 326, 340, 394], "n_cstr": 118, "n_featur": [24, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 269, 281, 302, 316], "n_iter": 102, "n_observ": [24, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 269, 281, 302, 316], "n_oversampl": 117, "n_pc": [18, 117], "n_reaction": 96, "n_sampl": [114, 119], "n_score": 117, "n_speci": 96, "n_target": [109, 110, 115, 119, 316], "n_time": 96, "na": 7, "naiv": 336, "nalidix": [94, 318], "name": [2, 4, 5, 6, 7, 9, 11, 17, 20, 21, 22, 24, 25, 26, 29, 32, 38, 39, 43, 48, 55, 75, 76, 77, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 132, 133, 135, 142, 149, 150, 153, 155, 162, 180, 196, 197, 199, 202, 204, 205, 220, 223, 227, 228, 229, 236, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 283, 284, 287, 288, 296, 299, 303, 304, 306, 320, 322, 323, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 339, 340, 342, 345, 346, 349, 392], "nameerror": 337, "namespac": [317, 328, 332], "nan": [7, 99, 111, 119, 131, 132, 133, 202, 205, 345, 383], "nano": 95, "nano15010057": [94, 318], "nanohybrid": [94, 318], "nanomateri": 94, "nanomet": [39, 40], "nanoparticl": [94, 318], "nanosecond": 121, "narrow": [111, 171, 344], "nat": 94, "nation": 2, "nativ": [111, 112, 120, 328, 337], "natur": [2, 94, 318, 329, 345], "navig": [6, 10, 331], "nb": 324, "nb_trace": [19, 21, 22, 26, 64, 97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 323], "nblue": [97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125], "nbsp": [91, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "nbsphinx": [323, 333], "ncol": [206, 338, 340], "nd": [7, 14, 32, 43, 64, 67, 100, 111, 113, 120, 142, 155, 162, 204, 213, 239, 249, 250, 270, 287, 288, 299, 303, 304, 310, 311, 316, 317, 320, 332, 339, 341, 345, 391], "nd1": [67, 75, 99, 111, 120, 153, 192, 197, 336, 338, 341], "nd1a": 338, "nd2": [67, 75, 99, 111, 120, 153, 192, 197, 334, 336, 338, 341], "nd2a": 338, "nd3": [67, 75, 99, 111, 153, 338, 341], "nd4": [67, 75, 338, 341], "nd4a": 338, "nd5": 341, "nd5b": 341, "nd6": 341, "nd7": 341, "nd8": 341, "nd_data": 38, "ndadd": 338, "ndarrai": [5, 9, 96, 97, 99, 100, 101, 102, 107, 108, 110, 111, 114, 116, 117, 119, 124, 125, 131, 134, 141, 153, 158, 159, 163, 174, 175, 183, 186, 192, 196, 278, 291, 292, 297, 313, 314, 316, 317, 329, 334, 335, 336, 345, 354, 364, 401], "ndarrat": [111, 186], "ndata": [111, 186, 313, 314], "ndataset": [111, 314], "ndax": 111, "ndcomplex": 7, "ndd": [46, 99, 111, 291], "nddataset": [5, 7, 9, 14, 18, 20, 21, 23, 25, 29, 32, 33, 40, 41, 43, 45, 52, 55, 63, 65, 75, 76, 77, 83, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 128, 129, 130, 135, 138, 139, 141, 142, 143, 144, 145, 148, 149, 150, 154, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 184, 185, 187, 188, 192, 197, 201, 204, 206, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 295, 296, 297, 298, 299, 302, 303, 304, 310, 311, 312, 315, 319, 321, 322, 323, 324, 325, 326, 328, 329, 332, 336, 343, 344, 354, 386, 394], "nddataset_49ddcfa4": 332, "nddataset_4c82b760": 334, "nddataset_4cab004": 334, "nddataset_4caf455a": 334, "nddataset_805f0a8": 345, "nddataset_84f29124": 345, "nddataset_84f3aae6": 345, "nddataset_84f47994": 345, "nddataset_84f58f5a": 345, "nddataset_fd98296": 75, "ndez": 94, "ndim": [99, 111, 132, 133, 202, 205, 334, 344], "ndlb": 339, "ndlg": 339, "ndmath": [354, 367], "ndoh": [32, 320], "ndohcorr": 320, "ndp": 64, "ndpanel": 354, "nearest": [104, 111, 269, 281, 337, 345], "necessari": [2, 6, 25, 75, 86, 87, 109, 111, 115, 130, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 286, 317, 322, 327, 331, 334, 338, 339, 340, 380, 388], "necessarili": [10, 328], "need": [4, 6, 7, 9, 10, 14, 15, 21, 24, 33, 43, 48, 51, 64, 68, 75, 76, 80, 85, 86, 87, 89, 92, 95, 99, 102, 110, 111, 117, 141, 158, 241, 320, 323, 324, 332, 334, 337, 341, 344, 347], "neg": [26, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 117, 119, 124, 125, 131, 134, 138, 154, 160, 162, 169, 174, 175, 196, 264, 265, 269, 316, 321, 322, 329, 346, 399], "negat": [111, 154, 264], "negative_axi": 111, "neglig": [316, 322], "neighbor": [111, 171, 324, 347], "neighbour": 324, "neither": [2, 92, 119, 327], "nematollah": 94, "nesterenko": 94, "network": [2, 7, 94, 96, 318], "neural": [94, 318], "neuroinflammatori": [94, 318], "never": [7, 337], "nevertheless": 2, "new": [2, 6, 7, 9, 10, 14, 33, 38, 46, 64, 75, 80, 86, 88, 89, 90, 92, 94, 97, 98, 99, 100, 101, 102, 107, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 124, 125, 131, 134, 143, 145, 148, 154, 155, 159, 165, 166, 167, 170, 173, 174, 175, 176, 177, 179, 183, 184, 185, 188, 201, 204, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 236, 241, 264, 266, 270, 283, 284, 285, 286, 287, 288, 289, 291, 296, 298, 299, 310, 311, 316, 322, 326, 327, 328, 332, 333, 336, 337, 339, 340, 342, 349, 351], "new1": [60, 61], "new2": [60, 61], "new3": 61, "new4": 61, "new5": 61, "new_func": 7, "new_wodg": [111, 113, 120], "newargsgetconc": 110, "newargsgetspec": 110, "newcom": [6, 12], "newest": 361, "newfid": 342, "newproj": 55, "news0": 329, "next": [6, 9, 10, 75, 76, 88, 90, 110, 111, 313, 320, 323, 324, 327, 333, 334, 337], "nfev": 96, "ngreen": [97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125], "nh": 337, "nh4_y": 17, "nh4y": [17, 23, 25, 32, 43, 44, 52, 64, 86, 91, 98, 99, 101, 111, 120, 125, 141, 142, 148, 155, 171, 197, 204, 249, 256, 278, 286, 287, 288, 297, 299, 304, 320, 325, 334, 337, 338, 340, 345, 349], "nice": 12, "nicer": 26, "nicola": 94, "nicolet": [111, 249, 254, 256, 257], "nieto": 94, "nikolai": 94, "nipal": 119, "nir": [29, 326, 340], "nist": [111, 164, 376], "njev": 96, "nl": 320, "nlu": 96, "nm": [18, 26, 29, 39, 40, 111, 249, 326, 340], "nmd": 342, "nmf": [16, 27, 35, 97, 101, 102, 107, 110, 111, 117, 124, 125, 249, 316, 319, 340], "nmr": [1, 42, 49, 57, 60, 61, 78, 83, 92, 95, 99, 100, 111, 116, 165, 170, 174, 175, 186, 217, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 273, 282, 313, 314, 319, 328, 332, 334, 336, 339, 343, 345, 369, 370, 372, 399, 400], "nmr_1d": 336, "nmr_2d": 336, "nmrdata": [46, 60, 61, 75, 76, 77, 334, 336, 339, 342, 348], "nmrdir": [75, 76, 77], "nmrglue": [1, 7, 46, 111, 186, 376], "nnddataset": 5, "nndsvd": 114, "nndsvda": 114, "nndsvdar": 114, "nnl": [109, 110, 321, 395], "nnmf": [363, 394], "node": 4, "nogrid": 337, "noinspect": 336, "nois": [17, 18, 26, 67, 68, 94, 111, 124, 159, 171, 339, 340, 341, 347], "noisi": [33, 111, 171, 320, 340], "nomask": [7, 111], "nominal_valu": 121, "non": [2, 4, 6, 96, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 131, 134, 139, 144, 148, 160, 181, 196, 243, 246, 269, 282, 298, 316, 321, 322, 328, 337, 340, 342, 345, 354, 375, 396, 399], "none": [7, 9, 18, 19, 22, 23, 26, 29, 32, 38, 51, 75, 76, 77, 96, 97, 98, 99, 101, 102, 103, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 142, 146, 151, 152, 155, 160, 162, 163, 166, 167, 169, 170, 171, 172, 176, 177, 178, 179, 180, 186, 187, 188, 191, 196, 199, 200, 202, 204, 205, 206, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 240, 242, 243, 244, 246, 252, 253, 268, 272, 277, 284, 285, 287, 288, 299, 300, 303, 310, 311, 312, 315, 320, 322, 324, 326, 328, 334, 336, 337, 340, 347, 383, 385, 391], "nonfinit": 119, "nonneg": [111, 114, 287, 299, 340], "nonnegconc": 110, "nonnegspec": [110, 383], "nonrandom": [322, 323], "nonzero": 329, "noqa": [327, 329, 332], "nor": [2, 6, 89, 92, 111, 119, 121, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 327], "norestart": 87, "norm": [114, 119, 322, 337, 400], "normal": [9, 18, 38, 60, 61, 101, 102, 103, 110, 111, 117, 119, 178, 287, 298, 299, 317, 320, 322, 337, 339, 342, 347, 354, 400], "normaldistribut": 102, "normandi": 94, "normspec": [110, 322], "notabl": 2, "notat": [337, 342], "note": [7, 10, 17, 23, 24, 25, 38, 43, 47, 51, 64, 71, 75, 76, 83, 87, 88, 96, 98, 99, 100, 101, 102, 107, 110, 111, 113, 114, 116, 117, 119, 120, 124, 125, 131, 132, 144, 166, 167, 171, 173, 181, 196, 197, 199, 202, 204, 216, 239, 240, 249, 250, 251, 254, 256, 257, 269, 284, 287, 299, 320, 322, 324, 328, 329, 334, 337, 338, 339, 340, 344, 345, 346, 347, 349, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "notebook": [10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 86, 92, 98, 111, 221, 222, 224, 225, 230, 231, 232, 316, 328, 333, 337, 342], "noth": [92, 328, 329, 334, 396], "notic": [2, 9, 64], "notifi": [89, 381], "nouar": 94, "novel": [94, 318], "now": [6, 7, 20, 22, 25, 26, 32, 33, 38, 39, 46, 48, 51, 55, 64, 68, 75, 76, 80, 84, 91, 100, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 273, 306, 320, 321, 322, 323, 324, 325, 327, 328, 331, 333, 334, 336, 338, 340, 342, 344, 346, 347, 348, 349, 350, 352, 354, 355, 356, 357, 359, 363, 364, 369, 374, 375, 377, 379, 382, 383, 384, 387, 392, 393, 394, 396, 397, 398, 399, 400], "np": [5, 7, 9, 18, 22, 33, 38, 48, 75, 77, 96, 99, 110, 111, 121, 142, 173, 176, 177, 213, 214, 238, 291, 292, 310, 311, 317, 320, 334, 340, 345, 346, 347, 386], "nr": 2, "nred": [97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125], "nria": 2, "nrow": [206, 338, 340], "nshape": [140, 178, 200, 234, 277, 300], "nspec": 337, "nterpol": 340, "nth": [97, 111, 160], "nuclear": 94, "nucleu": [99, 273], "null": [111, 298, 316], "num": [99, 107, 111, 180, 196, 199, 334], "num1": 9, "num2": 9, "number": [2, 7, 9, 11, 17, 19, 23, 24, 25, 32, 51, 64, 80, 83, 88, 90, 96, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 130, 131, 135, 138, 139, 141, 143, 144, 148, 154, 158, 164, 169, 170, 171, 173, 174, 175, 179, 180, 181, 184, 185, 186, 187, 196, 199, 201, 204, 206, 220, 223, 226, 227, 228, 229, 240, 247, 248, 249, 258, 264, 265, 266, 269, 270, 278, 281, 286, 287, 299, 302, 314, 316, 323, 324, 325, 334, 337, 340, 343, 344, 347, 373, 396], "number_of_contour": 337, "number_of_x_label": 337, "number_of_y_label": 337, "number_of_z_label": 337, "numbr": 345, "numer": [92, 94, 97, 99, 102, 111, 114, 127, 283, 327, 329, 334, 335, 345], "numpi": [6, 7, 9, 10, 18, 22, 33, 38, 48, 75, 77, 84, 92, 99, 100, 104, 110, 111, 113, 120, 121, 138, 142, 143, 145, 154, 158, 161, 163, 165, 170, 174, 175, 179, 183, 184, 185, 188, 197, 201, 213, 217, 218, 264, 265, 266, 269, 278, 281, 284, 292, 297, 298, 302, 310, 317, 320, 329, 335, 337, 340, 343, 344, 346, 347, 352, 385, 386, 391], "numpydoc": 9, "num\u00e9ro": 329, "n\u00e9lieu": 94, "o": [9, 17, 32, 33, 61, 75, 93, 97, 111, 119, 226, 326, 329, 330, 337], "obei": 22, "obj": [111, 120, 336], "object": [2, 5, 7, 9, 18, 20, 22, 24, 25, 26, 29, 32, 33, 38, 43, 64, 75, 76, 77, 93, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 143, 145, 146, 148, 149, 150, 153, 158, 159, 162, 165, 166, 167, 169, 170, 172, 173, 176, 177, 179, 180, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 202, 205, 213, 214, 216, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 270, 276, 283, 284, 285, 286, 289, 291, 295, 296, 298, 303, 304, 306, 310, 311, 316, 320, 322, 323, 325, 326, 327, 328, 329, 332, 336, 337, 343, 346, 361, 392, 396], "oblig": [2, 92], "obliqu": 337, "observ": [2, 20, 94, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 269, 281, 302, 316, 318, 323, 326, 349], "obtain": [19, 22, 23, 25, 76, 95, 96, 97, 101, 110, 316, 320, 322, 323, 324, 326, 327, 329, 341, 342, 345, 346, 400], "obviou": [9, 18, 324], "obvious": [40, 51, 320, 340, 345], "occas": [2, 9], "occur": [96, 127, 400], "occurr": 2, "od": [96, 99, 111], "odd": [104, 111, 171, 269, 278, 281, 347], "odesolut": 96, "odesolv": 96, "off": [17, 99, 101, 111, 135, 329], "offer": [2, 33, 317, 331, 332, 334, 335, 337], "offlin": 378, "offset": [26, 51, 64, 75, 76, 80, 97, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 161, 162, 220, 223, 227, 228, 229, 320, 323, 324, 325, 336, 337, 338, 345, 348, 354], "often": [7, 9, 24, 90, 92, 102, 316, 317, 323, 326, 328, 338, 342], "ogiciel": 2, "oh": [32, 320, 337], "oil": [29, 326], "ois": 94, "ok": [9, 64, 80, 103], "old_func": 7, "older": 377, "oliviero": [94, 318], "olsz\u00f3wka": 94, "olynomi": 340, "om": 94, "omidikia": [94, 110], "omit": [7, 9], "omnic": [23, 42, 43, 49, 57, 91, 99, 111, 113, 120, 141, 148, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 286, 319, 328, 330, 334, 337, 343, 362], "omnic_seri": [111, 257], "omnnic": 52, "onc": [5, 6, 7, 15, 43, 75, 87, 89, 100, 111, 314, 322, 324, 326, 337], "one": [2, 6, 7, 9, 10, 20, 21, 22, 24, 33, 38, 39, 40, 52, 68, 84, 87, 89, 95, 96, 99, 100, 101, 102, 103, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 131, 132, 133, 134, 142, 146, 147, 148, 167, 169, 176, 177, 187, 195, 202, 204, 205, 214, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 236, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 285, 287, 288, 294, 299, 303, 304, 311, 317, 320, 321, 322, 323, 324, 326, 327, 328, 329, 332, 333, 334, 336, 337, 338, 340, 341, 345, 346, 347, 356, 379, 392], "ones": [9, 29, 110, 111, 120, 166, 167, 169, 176, 177, 187, 214, 310, 311, 323, 326, 331, 334, 337], "ones_lik": [111, 166, 167, 176, 177, 213, 310, 311], "oneslik": [111, 214], "ongo": 7, "onli": [2, 4, 5, 6, 7, 9, 10, 14, 18, 25, 32, 51, 64, 68, 75, 76, 85, 88, 89, 90, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 127, 130, 141, 142, 143, 145, 147, 158, 163, 165, 172, 179, 183, 184, 185, 196, 206, 220, 221, 223, 224, 225, 227, 228, 229, 230, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 284, 298, 304, 306, 320, 322, 323, 324, 325, 327, 328, 329, 332, 334, 336, 337, 338, 340, 341, 343, 347, 349, 362, 381, 384, 399], "onlin": [9, 87], "onlinelibrari": 94, "only_first": 111, "onto": [9, 94, 102, 117, 318, 323], "oop": 327, "oordin": [111, 152], "op": 334, "opaqu": 119, "open": [1, 2, 5, 6, 9, 10, 11, 14, 15, 47, 87, 88, 89, 90, 95, 99, 111, 120, 135, 196, 197, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 328, 329, 331, 337, 342, 375], "oper": [2, 6, 9, 11, 12, 23, 39, 40, 86, 89, 99, 102, 107, 111, 132, 133, 142, 148, 155, 202, 204, 205, 236, 286, 287, 288, 299, 320, 329, 332, 334, 335, 338, 339, 340, 343, 344, 346, 349, 354, 357, 369, 400], "operand": 338, "operando": [94, 101, 318], "opf": 329, "opinion": 92, "opportun": 2, "opposit": [9, 273], "optic": [92, 94, 99, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 318, 344, 382], "optical_veloc": 383, "optik": 329, "optim": [21, 22, 32, 75, 76, 77, 80, 93, 96, 110, 118, 320, 321, 340, 389, 396, 400], "optimis": [21, 22, 321, 322], "optimizer_kwarg": 96, "optimum": [107, 323, 347], "option": [2, 5, 9, 13, 21, 51, 84, 87, 89, 96, 97, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 193, 196, 197, 199, 201, 202, 204, 205, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 276, 278, 281, 282, 283, 284, 285, 287, 288, 289, 291, 296, 297, 298, 299, 302, 303, 304, 306, 310, 311, 320, 322, 327, 329, 334, 337, 339, 340, 350, 368, 400], "opu": [1, 42, 49, 57, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 319, 328, 330, 362, 397], "opusfil": 329, "oral": 2, "orang": 3, "order": [2, 9, 64, 68, 71, 75, 80, 88, 91, 94, 96, 97, 99, 100, 104, 108, 111, 114, 160, 166, 217, 218, 234, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 270, 281, 283, 302, 316, 320, 322, 325, 328, 334, 340, 341, 344, 346, 347, 349, 363, 364, 368, 381, 392], "ordin": [9, 111, 159, 322], "ordinari": [109, 110, 115], "ored": 340, "org": [4, 7, 94, 111, 306, 337], "organ": [94, 111, 318], "organis": 328, "orgin": [111, 120, 197], "origin": [2, 6, 7, 9, 12, 16, 17, 20, 21, 22, 26, 27, 29, 33, 35, 39, 44, 48, 55, 67, 68, 71, 97, 98, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 130, 148, 159, 163, 165, 183, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 291, 314, 316, 319, 320, 322, 323, 328, 329, 334, 337, 338, 340, 341, 342, 343, 344, 347, 349], "orthonorm": 316, "oserror": 328, "osqp": [107, 400], "osx": [84, 95, 328], "ot": 96, "other": [1, 6, 7, 9, 10, 12, 14, 21, 24, 51, 64, 75, 76, 84, 88, 89, 92, 95, 96, 97, 99, 100, 101, 102, 107, 110, 111, 113, 114, 116, 117, 119, 120, 121, 124, 125, 127, 128, 129, 130, 135, 143, 145, 148, 154, 156, 158, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 183, 184, 185, 187, 188, 192, 193, 196, 197, 199, 201, 213, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 270, 278, 281, 284, 291, 292, 297, 298, 302, 303, 310, 311, 316, 317, 320, 322, 323, 324, 326, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 342, 343, 345, 347, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "otherwis": [6, 9, 99, 111, 114, 117, 119, 125, 127, 143, 145, 171, 179, 180, 184, 185, 196, 199, 204, 287, 296, 298, 299], "oto": 26, "ouput": 21, "our": [6, 7, 10, 25, 87, 88, 90, 92, 99, 322, 326, 329, 331, 334, 337, 344], "out": [2, 6, 22, 93, 98, 99, 100, 102, 111, 114, 121, 124, 131, 135, 141, 148, 163, 170, 171, 188, 268, 270, 286, 304, 306, 316, 322, 324, 328, 332, 336, 337, 345, 346, 347], "outer": [111, 130, 338], "outil": [94, 318], "outlet": 118, "outlier": 68, "outlin": 7, "output": [9, 10, 19, 20, 23, 33, 75, 76, 80, 87, 88, 90, 96, 97, 98, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 128, 129, 135, 141, 163, 166, 169, 172, 173, 180, 187, 199, 220, 221, 223, 224, 225, 227, 228, 229, 230, 238, 268, 269, 281, 303, 306, 317, 320, 322, 324, 327, 328, 340, 345, 388], "output_path": [111, 303], "output_warning_messag": 26, "outsid": [2, 111, 146, 329], "over": [2, 4, 9, 80, 99, 102, 111, 121, 131, 132, 133, 134, 142, 172, 173, 180, 196, 199, 202, 204, 205, 238, 287, 288, 299, 316, 340, 347], "overal": [84, 316], "overestim": 324, "overfit": 340, "overlap": [94, 101, 338], "overrid": [111, 116, 167, 177, 214, 311], "overview": [10, 93, 332, 333, 343, 376], "overwrit": [100, 317, 332], "overwrite_data": 55, "own": [0, 2, 6, 9, 83, 92, 102, 333], "owner": 2, "oxford": 94, "oxid": [94, 318], "ozaki": [94, 111, 159], "p": [1, 11, 61, 75, 76, 87, 94, 107, 108, 111, 118, 218, 239, 249, 250, 316, 324, 337, 340, 342, 345, 347], "p15": 75, "p350": [55, 111, 241, 261], "paavo": 94, "pack": 47, "packag": [1, 6, 7, 9, 19, 21, 23, 24, 25, 26, 29, 43, 46, 48, 75, 84, 85, 86, 87, 88, 90, 91, 92, 99, 111, 198, 327, 332, 334, 336, 337, 347, 350, 352, 355, 361, 373, 380, 399], "packeg": 11, "pad": [104, 111, 269, 281, 324, 336, 337], "page": [6, 7, 10, 14, 84, 87, 89, 91, 94, 321, 348, 387], "pair": [22, 97, 111, 141, 144, 181, 340], "palatino": 337, "palett": 337, "panda": [3, 10, 13, 354], "pane": 86, "panetso": 94, "paper": [21, 43, 44, 93, 337, 347, 361], "par": 336, "parabol": [234, 320], "paragraph": [2, 9], "parallel": 102, "paralysi": 2, "param": [4, 7, 97, 101, 102, 104, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 340, 398], "param_to_optim": [22, 118], "param_to_set": 118, "paramet": [4, 5, 7, 20, 32, 43, 48, 51, 61, 64, 67, 68, 75, 76, 77, 80, 87, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 199, 201, 202, 204, 205, 206, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 272, 273, 276, 278, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 296, 297, 298, 299, 302, 303, 304, 306, 310, 311, 312, 313, 314, 315, 316, 323, 324, 328, 329, 334, 339, 340, 341, 342, 347, 352, 354, 382, 391, 393, 394, 396, 398, 400], "parameter": 96, "parametr": 7, "parent": [111, 120, 126, 347], "parenthes": 333, "pari": [2, 337], "pariti": [29, 326], "parityplot": [29, 119, 326], "part": [1, 2, 6, 7, 9, 10, 13, 14, 17, 23, 64, 76, 92, 99, 111, 132, 138, 149, 150, 202, 265, 316, 321, 332, 337, 342, 345, 349, 399], "parti": [2, 9, 329], "partial": [2, 119, 316, 321, 334, 394], "particular": [2, 92, 111, 119, 121, 163, 317, 320, 324, 340, 341, 346], "particularli": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 339], "pass": [4, 5, 7, 10, 17, 20, 33, 43, 48, 95, 96, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 119, 120, 121, 124, 125, 131, 134, 162, 169, 170, 172, 173, 187, 216, 219, 226, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 320, 324, 326, 327, 328, 334, 337, 340, 400], "passant": 324, "password": 87, "past": [87, 104, 111, 269, 281], "pastel": 337, "patch": [119, 206, 337], "patch_antialias": 337, "patch_edgecolor": 337, "patch_facecolor": 337, "patch_force_edgecolor": 337, "patch_linewidth": 337, "patent": 2, "path": [5, 6, 7, 11, 17, 32, 43, 46, 60, 61, 85, 86, 87, 90, 99, 103, 111, 112, 120, 215, 221, 224, 225, 230, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 329, 330, 333, 334, 336, 337, 339, 342, 344, 348], "path1": 328, "path2": 328, "path3": 328, "path_a": [111, 141], "path_simplifi": 337, "path_simplify_threshold": 337, "path_sketch": 337, "path_snap": 337, "pathclean": [336, 339, 354], "pathlib": [5, 43, 99, 111, 112, 113, 120, 197, 215, 239, 243, 249, 250, 303, 304, 306, 330, 336], "pathnam": [329, 330], "pattern": [7, 75, 94, 318], "paul": [94, 111, 245, 329], "pawel": 94, "pc": [24, 25, 117, 322, 323], "pca": [16, 17, 21, 22, 26, 27, 35, 93, 101, 102, 107, 110, 111, 114, 124, 125, 158, 198, 249, 316, 319, 321, 332, 340, 362, 382, 391, 394, 398], "pchip": [64, 91, 97, 111, 130, 340], "pchipinterpol": [97, 340], "pd_101": [111, 249, 329], "pd_104": 329, "pd_21": [111, 254], "pdata": 76, "pdf": [9, 94, 337], "peak": [67, 68, 73, 74, 75, 78, 80, 92, 94, 97, 99, 101, 111, 116, 139, 141, 144, 159, 160, 171, 181, 236, 258, 282, 316, 318, 319, 321, 332, 340, 341, 347, 399], "peak_height": [75, 324], "peak_posit": [75, 324], "peakslist": 324, "pecuniari": 2, "pellegrino": 94, "pen": [51, 111, 220, 226, 227, 229, 324, 337, 347], "penal": [104, 111, 302], "penalti": 114, "pengbo": 94, "peopl": [6, 9], "pep": 9, "pep8": 4, "per": [6, 7, 9, 10, 99, 111, 121, 125, 195, 206, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 287, 294, 337], "percent": [97, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 156, 322, 325], "percentag": [111, 117, 158], "percet": 323, "perf": 6, "perfect": [64, 94, 341, 347], "perform": [2, 6, 10, 17, 18, 20, 21, 22, 24, 25, 26, 29, 32, 39, 40, 60, 64, 75, 77, 86, 94, 97, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 130, 131, 134, 139, 141, 143, 144, 145, 146, 153, 154, 160, 163, 165, 170, 171, 173, 174, 175, 179, 181, 184, 185, 188, 201, 220, 223, 227, 228, 229, 239, 264, 266, 278, 282, 284, 297, 298, 318, 320, 322, 325, 329, 331, 334, 337, 338, 339, 340, 341, 342, 344, 396, 398, 400], "perhap": [64, 331, 332], "period": 2, "perman": [2, 90, 328, 337], "permut": [111, 296], "perpendicular": 337, "persist": 121, "person": [2, 9], "pertain": 5, "petal_length": 24, "petal_width": 24, "petr": 94, "petroff10": 337, "pfeiffer": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 371], "pfr": 361, "pgn": 329, "phase": [4, 75, 111, 118, 174, 175, 217, 218], "phc0": [75, 77, 111, 217, 218, 342], "phc1": [77, 111, 217, 342], "phd": 92, "phi": [111, 284, 339], "philipp": 94, "photoacoust": [111, 249], "photovolta": 329, "phsm": 329, "phy": 94, "physic": [2, 94, 121], "physico": [107, 108], "pi": [38, 111, 165, 178, 179, 183, 184, 185, 200, 284, 320, 333, 339], "pick": [73, 74, 78, 103, 111, 116, 258, 319, 340], "piecewis": [64, 94, 97, 111, 160, 340], "pierr": 94, "pii": 94, "pin": 391, "pint": [40, 99, 111, 121, 127, 291, 352, 377, 382, 385, 393], "pip": [6, 7, 89, 350, 352, 363, 376], "pipe": [111, 337], "pivot": [9, 111, 217, 218, 342], "pix": 94, "pixel": [111, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 337], "pk": [75, 76, 77, 111, 218, 320, 324, 342], "pk_exp": 111, "pl": [28, 30, 35, 111, 119, 239, 316, 319, 326, 332], "place": [2, 6, 7, 9, 51, 90, 96, 99, 111, 121, 138, 141, 195, 265, 293, 294, 340], "plai": [328, 347], "plain": [9, 10, 121], "plainquant": [121, 127], "plainunit": [121, 127], "plane": 38, "plant": 92, "plasma": [94, 318], "plateau": [111, 171], "plateau_s": [111, 171, 324], "platform": [7, 11, 14, 84, 87, 93, 347, 377], "pleas": [6, 7, 12, 83, 84, 92, 93, 332, 337], "plot": [3, 17, 18, 20, 22, 24, 25, 26, 29, 32, 33, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 53, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 93, 97, 98, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 160, 206, 207, 208, 209, 210, 211, 212, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 239, 319, 320, 321, 322, 323, 325, 326, 332, 334, 336, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 354, 375, 376, 385, 391, 392, 394, 398, 400], "plot1d": [111, 226], "plot2d": [354, 356, 391], "plot_1d": [111, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 345], "plot_2d": [111, 212, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233], "plot_3d": [111, 223, 224, 225, 227, 228, 229, 230, 231, 232], "plot_a_create_dataset": [38, 41, 319], "plot_b_coordin": [39, 41, 319], "plot_bar": [111, 220, 222, 224, 225, 226, 227, 229, 230, 231, 232], "plot_bar_pen": [111, 228], "plot_baseline_correct": [64, 65, 319], "plot_c_unit": [40, 41, 319], "plot_denois": [67, 69, 319], "plot_despik": [68, 69, 319], "plot_efa": [17, 27, 319], "plot_efa_keller_massart": [18, 27, 319], "plot_fast_ica": [19, 27, 319], "plot_filt": [71, 72, 319], "plot_fit": [32, 34, 319], "plot_generic_read": [43, 49, 319], "plot_imag": [48, 111, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 337], "plot_iri": [20, 27, 319], "plot_lstsq_single_equ": [33, 34, 319], "plot_map": [20, 39, 47, 76, 111, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 337, 338], "plot_mcrals_chrom1": [21, 27, 319], "plot_mcrals_kinet": [22, 27, 319], "plot_model": [111, 220, 223, 227, 228, 229], "plot_multipl": [50, 52, 53, 57, 111, 160, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 319, 325, 337, 347, 365, 398], "plot_nmf": [23, 27, 319], "plot_pca_iri": [24, 27, 319], "plot_pca_spec": [25, 27, 319], "plot_pen": [33, 111, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 320, 324], "plot_pl": [29, 30, 319], "plot_plot": [52, 53, 319], "plot_plot_multipl": [51, 53, 319], "plot_proc_em": [60, 62, 319], "plot_proc_sp": [61, 62, 319], "plot_processing_cp_nmr": [75, 78, 319], "plot_processing_nmr": [76, 78, 319], "plot_processing_nmr_relax": [77, 78, 319], "plot_processing_raman": [80, 81, 319], "plot_project": [55, 56, 319], "plot_read_ir_from_omn": [44, 49, 319], "plot_read_ir_from_opu": [45, 49, 319], "plot_read_nmr_from_bruk": [46, 49, 319], "plot_read_raman_from_labspec": [47, 49, 319], "plot_read_renishaw": [48, 49, 319], "plot_result": 80, "plot_scatt": [33, 55, 75, 76, 111, 220, 226, 320, 324], "plot_scatter_pen": [111, 220, 222, 223, 224, 225, 226, 227, 230, 231, 232], "plot_simplisma": [26, 27, 319], "plot_stack": [17, 38, 44, 111, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 337, 349], "plot_surfac": [111, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 322, 323, 337], "plot_waterfal": [111, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 337], "plot_with_pp": 76, "plotdistribut": [20, 91, 107], "plotlcurv": [20, 107], "plotli": [111, 220, 221, 223, 224, 225, 227, 228, 229, 230, 337], "plotmerit": [19, 20, 21, 22, 26, 32, 75, 76, 77, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 320, 323, 382], "plotnonfinit": 119, "plotter": [111, 221, 222], "plottitl": [111, 220, 223, 227, 228, 229], "plsregress": [29, 321, 394], "plt": 33, "plu": 337, "pluggi": 7, "plugin": 7, "plural": 2, "plus_and_minus_sign": 337, "pl\u00e9del": 94, "pmid": 94, "png": 337, "pnnl": [110, 395], "po": [32, 76, 111, 140, 178, 200, 277, 283, 300, 320, 324, 329], "point": [5, 6, 9, 22, 23, 64, 75, 76, 80, 88, 89, 90, 91, 96, 99, 102, 110, 111, 117, 119, 130, 135, 138, 143, 154, 159, 170, 171, 174, 175, 179, 184, 185, 201, 204, 228, 249, 264, 265, 266, 287, 299, 320, 322, 324, 328, 332, 333, 337, 338, 340, 342, 344, 346, 347, 394], "polar": 337, "polaraxes_grid": 337, "polici": 117, "polish": 8, "pollut": [94, 318], "polyfit": 340, "polynom": [97, 234, 320], "polynomi": [64, 80, 91, 97, 104, 111, 139, 144, 160, 181, 234, 269, 281, 282, 320, 325, 347], "polynomialbaselin": 320, "polyolefin": [94, 318], "ponant": 2, "pool": 96, "poor": [67, 341], "pop": 328, "popul": [111, 287, 299], "popular": [92, 322, 323], "port": [11, 87], "pose": 94, "poshb": [140, 178, 200, 277, 300], "posit": [9, 20, 23, 64, 75, 76, 80, 99, 104, 109, 110, 111, 115, 131, 135, 138, 148, 162, 169, 171, 174, 175, 216, 265, 269, 281, 320, 324, 329, 345], "positiveoddinteg": [104, 111, 269, 281], "posixpath": [43, 55, 328, 329, 336], "poslb": [140, 178, 200, 277, 300], "possess": 334, "possibl": [2, 4, 5, 6, 7, 9, 12, 24, 32, 33, 38, 84, 87, 97, 99, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 130, 177, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 304, 306, 317, 322, 323, 324, 327, 329, 334, 336, 337, 338, 340, 341, 347, 363, 364, 380, 396, 400], "possibli": [2, 99, 111, 324], "post": [10, 14, 329, 332], "postdoc": 92, "poster": 337, "postprocess": 117, "postscript": 337, "potenti": [7, 87, 97, 111, 139], "pow": [61, 111, 237, 280, 284, 334, 339], "powder": [94, 318], "power": [99, 111, 117, 119, 170, 188, 199, 235, 313, 322, 343], "power_iteration_norm": 117, "powershel": 87, "pp": [24, 75, 76, 77, 322, 323, 336, 339, 342], "ppm": [75, 76, 77, 95, 111, 170, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 273, 342], "pr": [7, 10], "practic": [9, 94, 111, 287, 299, 329, 330], "pre": [4, 6, 13, 96, 99, 102, 108, 111, 173, 337], "preambl": [2, 337], "preced": [9, 320, 328], "preceed": 334, "precis": [96, 111, 287, 299, 324], "predefin": [97, 108], "predict": [9, 29, 33, 75, 77, 109, 110, 115, 116, 117, 119, 316, 320, 326], "predmin": 316, "pref": [5, 20, 39, 40, 51, 68, 71, 75, 111, 241, 320, 324, 325, 336, 337, 338, 340, 341, 342, 344, 345, 347, 348, 349], "prefer": [4, 5, 6, 9, 17, 20, 21, 39, 40, 43, 44, 46, 47, 51, 52, 60, 61, 64, 68, 71, 75, 76, 77, 80, 86, 88, 89, 90, 111, 121, 147, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 241, 243, 249, 303, 304, 320, 324, 325, 328, 331, 332, 334, 336, 338, 340, 341, 342, 344, 345, 347, 348, 349, 354, 380, 394], "preferebl": [99, 111, 135], "preferred_unit": 121, "prefix": [6, 9, 32, 76, 317, 332], "preinstal": 87, "prepar": [13, 332], "prepend": 328, "preprocess": [17, 80, 93, 111, 171, 328, 339, 343], "prerequisit": [324, 325, 329, 340, 346], "presenc": [2, 47, 324, 334], "present": [6, 7, 9, 10, 21, 22, 75, 88, 89, 90, 99, 111, 117, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 317, 322, 323, 324, 329, 332, 337, 341, 345, 379, 380, 383], "preserv": 341, "press": [328, 333], "pressur": [20, 39, 91, 94, 107, 318], "pretermin": 340, "pretti": 324, "prevail": 2, "prevent": [92, 95, 337, 373], "preview": 6, "previou": [2, 9, 25, 39, 75, 76, 88, 90, 97, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 180, 320, 322, 324, 334, 337, 340, 342, 347, 357, 373, 398], "previous": [6, 11, 20, 33, 68, 89, 98, 111, 221, 224, 225, 230, 263, 322, 337, 340, 341], "primer": 9, "princip": [2, 97, 101, 102, 107, 110, 114, 117, 124, 125, 316, 321, 340], "principl": [2, 13, 92, 95, 111, 130, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232], "print": [6, 14, 20, 21, 22, 25, 26, 33, 38, 39, 40, 43, 45, 55, 75, 76, 77, 89, 99, 111, 116, 117, 120, 125, 261, 273, 276, 286, 291, 320, 322, 323, 324, 326, 327, 328, 329, 334, 336, 337, 338, 342, 344, 346], "print_hello_info": 126, "print_info": 55, "print_method": 336, "printabl": 328, "printev": [24, 117, 322, 323], "prior": [2, 323, 344], "prioriti": [111, 126, 130, 170, 267], "privat": [5, 7], "probabl": [6, 9, 75, 92, 324, 328, 334, 337, 340, 346], "probe": 94, "problem": [6, 11, 14, 24, 85, 87, 94, 96, 102, 109, 115, 327, 328, 338, 340, 341, 349, 358, 364, 367, 368, 370, 371, 383, 387, 388, 398], "problemat": 92, "proce": [88, 90], "procedur": [68, 92, 114, 320, 322, 328, 332, 341], "proceed": 2, "process": [0, 6, 7, 10, 11, 20, 21, 75, 78, 81, 83, 85, 86, 92, 97, 98, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 158, 159, 246, 258, 284, 302, 319, 322, 327, 332, 335, 337, 338, 339, 342, 348, 350, 352, 357, 367, 369, 370, 399, 400], "process_on": 347, "processing_funct": 333, "processor": [64, 71, 80, 97, 104, 111, 139, 144, 160, 181, 282, 316, 343, 398], "processs": 332, "procno": [75, 76, 77, 111, 258, 339, 342], "procs_fil": 75, "prod": 121, "produc": [5, 7, 24, 94, 111, 121, 281, 318, 345, 391, 399], "product": [2, 6, 92, 96, 108, 111, 114, 121, 163, 323, 340], "profession": 2, "profil": [18, 21, 22, 26, 88, 96, 101, 102, 110, 118, 316], "profit": 2, "program": [1, 2, 75, 91, 92, 93, 107, 316, 331, 332, 348, 394], "programm": 9, "programmat": 334, "progress": [99, 111, 180, 331, 361, 375], "proj": [55, 120, 336], "proj2": 336, "project": [4, 6, 7, 9, 10, 14, 15, 56, 83, 85, 86, 89, 92, 93, 102, 111, 117, 126, 197, 221, 224, 225, 230, 267, 268, 316, 319, 323, 326, 328, 332, 337, 354, 360], "project_1": [55, 120], "project_50744988": 336, "projects_nam": [55, 120], "promin": [75, 94, 111, 171, 318], "prompt": [88, 90], "prone": [100, 334], "prop": [111, 171], "prop_cycl": 337, "propag": [99, 111, 132, 133, 163, 202, 205], "proper": [117, 322, 323], "properli": [2, 98, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 362, 396], "properti": [2, 14, 29, 75, 94, 99, 100, 105, 106, 111, 120, 122, 123, 171, 189, 206, 262, 316, 318, 321, 322, 326, 332, 334, 340, 354], "proport": [111, 156, 320], "propos": [14, 84, 111, 159, 328, 340], "proprietari": [92, 329], "propval": [29, 43, 326], "protect": 2, "protein": [29, 326], "protocol": [5, 111, 141, 148, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 286, 303, 304, 306, 316], "provid": [2, 9, 10, 85, 91, 92, 96, 97, 99, 101, 102, 107, 108, 110, 111, 114, 116, 117, 119, 120, 124, 125, 130, 144, 166, 167, 171, 172, 173, 176, 177, 181, 213, 214, 226, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 268, 278, 287, 297, 299, 303, 304, 306, 310, 311, 321, 322, 329, 332, 333, 334, 337, 347, 348, 400], "provis": 2, "ps_exp": [111, 217], "pscp": [55, 111, 120, 197, 336], "pseudo": [102, 111, 258, 400], "pssnf": 337, "pt": [111, 124, 154, 174, 175, 201, 264, 266], "pth": 339, "ptp": [23, 80, 99, 111], "public": [2, 5, 93, 332, 337, 387], "publicli": [6, 317], "publish": [0, 2, 111, 306, 361], "pull": [7, 8, 10, 12, 13, 14, 83, 89, 374], "puls": [75, 348], "pure": [21, 22, 26, 110, 111, 124, 284, 316, 320, 339], "purest": 124, "puriti": 124, "purpl": 324, "purpos": [2, 6, 9, 24, 91, 92, 323, 329, 332, 334, 346], "pursuant": 2, "push": [7, 92], "put": [7, 332, 337], "py": [6, 7, 8, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 85, 90, 93, 95, 319, 327, 336, 347, 354], "py3": 354, "py_wdf_read": 399, "pycharm": [6, 331], "pypep8": 336, "pypi": [88, 90], "pyplot": [33, 337], "pyqt": [85, 368], "pyrazol": [94, 318], "pyridin": 94, "python": [0, 1, 9, 10, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 86, 87, 88, 89, 90, 91, 102, 110, 111, 116, 215, 239, 243, 249, 250, 317, 327, 328, 329, 331, 332, 337, 346, 350, 352, 369, 377, 400], "python3": [23, 26, 46, 48, 75, 327, 336, 337, 347], "q": [20, 91, 107, 108, 334], "qed": 329, "qin": 94, "qp": 400, "qpsolver": 107, "qquad": [111, 179, 184, 185], "qr": 117, "qsin": [61, 111, 165, 179, 183, 279, 280, 284, 298, 339], "qt": [337, 364, 365], "quadera": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 371], "quadprog": [107, 375, 400], "quadrat": [80, 97, 111, 160, 171, 320, 340], "qualiti": [19, 64, 337, 394], "quant_list": 121, "quantit": 94, "quantiti": [96, 99, 111, 127, 142, 155, 165, 169, 172, 183, 193, 195, 204, 213, 217, 218, 273, 287, 288, 291, 299, 311, 316, 324, 329, 349, 364, 369], "quaternion": [336, 345], "quatrat": 107, "question": [111, 161, 332], "quick": [9, 91, 93, 332, 333], "quickli": [93, 316, 332], "quickstart": 334, "quit": [9, 10, 18, 83, 328, 331, 340], "quot": 9, "quotat": 333, "r": [7, 19, 26, 33, 55, 60, 61, 68, 71, 75, 77, 80, 88, 90, 94, 109, 111, 115, 119, 147, 174, 175, 249, 264, 316, 320, 326, 328, 329, 332, 336, 337, 339, 340, 341, 342, 345, 347], "r1": [94, 340], "r2": 340, "rad": [334, 337], "radau": 96, "radian": [334, 343, 349], "rai": [66, 67, 69, 73, 94, 111, 159, 239, 318, 319, 343], "raimundo": 94, "rais": [4, 7, 85, 99, 111, 120, 121, 130, 131, 134, 142, 143, 145, 163, 165, 170, 179, 184, 185, 188, 285, 298, 334, 346], "rajk": 94, "raman": [42, 48, 49, 51, 57, 66, 69, 70, 72, 81, 83, 94, 97, 104, 111, 158, 159, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 272, 318, 319, 332, 343, 347], "ramandata": [47, 48, 51, 67, 68, 71, 80, 111, 246, 341, 347, 354], "ramandir": [47, 80], "ramirez": 94, "ramo": 94, "rand": [320, 334, 346], "randint": 9, "random": [9, 18, 87, 99, 111, 114, 117, 291, 317, 320, 323, 334, 337, 346, 347], "random_lett": 9, "random_st": [102, 114, 117], "randomized_svd": 117, "randomli": 337, "randomst": [102, 114, 117], "rang": [9, 18, 20, 23, 39, 51, 64, 75, 91, 97, 98, 99, 110, 111, 117, 119, 125, 139, 141, 144, 171, 173, 181, 236, 320, 323, 324, 325, 329, 334, 337, 340, 346, 354, 360], "rank": [99, 111, 172, 316], "rapid": 392, "rapid_scan_reprocess": [111, 257], "rare": [9, 92, 341], "rate": [22, 94, 96, 118], "rather": [6, 11, 88, 90, 317, 320, 337], "ratio": [32, 67, 76, 80, 111, 140, 158, 300, 320, 340, 341], "raw": [92, 93, 325, 328, 334], "rb": 5, "rc": [111, 206, 221, 224, 225, 230, 337], "rcount": 337, "rcparam": 119, "rdx": 329, "re": [26, 329, 332, 340, 342, 347], "reach": [23, 64, 96, 322, 324, 325], "reactant": [96, 108], "reaction": [22, 94, 96, 318], "reactiv": 118, "reactor": [96, 118], "read": [1, 2, 5, 9, 14, 19, 20, 21, 22, 29, 39, 40, 42, 49, 51, 52, 57, 67, 68, 71, 75, 80, 85, 86, 91, 95, 98, 99, 100, 101, 111, 113, 120, 125, 141, 142, 148, 155, 164, 171, 173, 197, 198, 204, 221, 222, 224, 225, 230, 231, 232, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 286, 287, 288, 292, 297, 299, 304, 319, 320, 322, 323, 324, 325, 326, 328, 329, 334, 336, 337, 339, 340, 341, 342, 346, 347, 348, 358, 375, 394, 399, 400], "read_binari": 46, "read_bruker_nmr": 354, "read_byt": [111, 249], "read_carroucel": [111, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 370], "read_csv": [9, 111, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 329], "read_ddr": 111, "read_dir": [111, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 375], "read_dso": 370, "read_fid": 75, "read_fil": 329, "read_galact": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "read_hdr": 111, "read_jcamp": [111, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 329], "read_labspec": [47, 71, 80, 111, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 347, 375], "read_mat": 111, "read_matlab": [21, 26, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 322, 323, 328, 329], "read_omn": [17, 23, 25, 32, 44, 52, 64, 91, 98, 111, 113, 120, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 325, 328, 329, 334, 338, 345, 346, 349, 383], "read_onli": [111, 239], "read_opu": [45, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 303, 328, 329, 385], "read_quadera": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 355, 371], "read_remot": 394, "read_sdr": 111, "read_soc": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261], "read_spa": [111, 249, 256, 344, 376], "read_spc": [5, 111], "read_spg": [111, 249], "read_sr": [111, 249, 256, 352, 370, 376, 383, 393], "read_topspin": [46, 60, 61, 75, 76, 77, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 328, 334, 336, 339, 342, 348, 354, 400], "read_wdf": [48, 111, 399], "read_wir": [48, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 399], "read_xxx": 5, "read_zip": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 354], "readabl": [6, 94, 96, 111, 121, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 324, 328, 329, 375], "readeabl": 394, "reader": [8, 13, 48, 75, 111, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 329, 340, 347, 354, 361, 362, 373, 382, 399], "reader_xxx": 8, "readi": [6, 20, 337], "readonli": [99, 100, 105, 106, 111, 120, 122, 123, 189, 262, 337], "readquadera": 371, "readthedoc": 40, "real": [7, 60, 61, 76, 77, 99, 106, 111, 122, 123, 132, 138, 147, 149, 150, 202, 203, 220, 223, 227, 228, 229, 235, 265, 287, 299, 343, 344, 345, 399], "realign": 338, "realiz": [111, 159, 331], "realli": [18, 332, 337], "reappli": 6, "reason": [2, 4, 6, 87, 92, 96, 323, 349], "rebuild": 87, "receiv": [75, 76, 320, 324], "recent": [7, 88, 99, 111, 291, 316, 336, 347], "recherch": 2, "recogn": [111, 247, 248, 360], "recognis": 328, "recognit": 383, "recombin": 342, "recommend": [6, 9, 11, 84, 88, 90, 96, 99, 100, 111, 317, 328, 331, 332, 337], "recomput": [110, 322], "reconstrict": 19, "reconstruct": [21, 22, 26, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 158, 186, 316, 322, 323, 392], "record": [20, 22, 23, 29, 39, 43, 48, 316, 329, 346, 347], "recov": [97, 102], "rectangl": 337, "rectilinear": 337, "recurs": [111, 239], "red": [7, 29, 33, 51, 64, 75, 76, 94, 318, 320, 322, 323, 324, 326, 333, 337, 340, 342, 344, 391], "redefin": 64, "redistribut": 2, "redraw": [75, 76, 320, 324], "reduc": [7, 24, 60, 61, 94, 97, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 121, 124, 125, 131, 132, 133, 134, 162, 193, 194, 195, 202, 204, 205, 236, 287, 288, 291, 294, 299, 316, 324, 337, 362, 392], "reduced_unit": [99, 111, 291], "reduct": [24, 25, 26, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 131, 134, 159, 316, 323, 324, 340], "redunc": [99, 111, 194], "ref": [7, 18, 111, 141], "refactor": [354, 373, 376, 388, 392, 396, 398], "refer": [2, 6, 9, 10, 12, 32, 76, 87, 89, 97, 99, 100, 111, 130, 131, 139, 141, 144, 160, 169, 181, 282, 316, 320, 324, 329, 332, 333, 334, 337, 338, 340, 347, 374, 387], "referenc": 9, "reference_numb": 333, "refin": [111, 171], "reflect": [6, 7, 29, 104, 111, 249, 269, 281, 387], "reform": [94, 318], "reg": 324, "reg_par": [20, 91, 107], "regard": [2, 6, 9, 372], "regex": 336, "regex_matching_test_nam": 7, "region": [25, 32, 51, 64, 67, 68, 76, 77, 80, 91, 97, 98, 99, 111, 144, 181, 316, 320, 324, 325, 337, 338, 340, 341, 344, 345, 346, 347, 349, 360], "regist": [6, 14, 119], "registri": [40, 77, 334], "regress": [28, 30, 33, 35, 64, 94, 109, 111, 115, 119, 239, 316, 318, 319, 320, 321, 394], "regroup": 316, "regular": [97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 302, 316, 337], "regularis": [64, 94], "regularli": [99, 381], "reindex": [111, 130], "reinit": 52, "reject": 324, "rejman": [94, 318], "rel": [91, 96, 111, 117, 130, 171, 239, 249, 250, 251, 273, 303, 322, 324, 329, 330, 337], "rel_height": [111, 171, 324], "relat": [2, 5, 9, 99, 111, 171, 291, 316, 329, 337, 352, 364, 388, 393, 397], "relationship": 346, "relax": [73, 74, 75, 78, 111, 116, 258, 319, 400], "releas": [6, 7, 10, 86, 327, 328, 329, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "release_d": 327, "relev": [2, 5, 6, 9, 10, 75, 110, 117, 316], "reli": [7, 92, 322], "reliabl": [14, 92], "reload": 55, "reltim": 22, "rem": 90, "remain": [2, 7, 10, 22, 29, 99, 111, 138, 160, 265, 316, 323, 326, 339], "rememb": [6, 17, 25, 334, 340], "remot": [2, 6, 89], "remov": [1, 2, 7, 9, 26, 51, 64, 66, 67, 69, 73, 75, 76, 77, 80, 91, 94, 96, 97, 101, 102, 104, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 124, 125, 139, 144, 159, 160, 181, 239, 263, 282, 285, 318, 319, 320, 324, 325, 335, 337, 338, 340, 343, 345, 347, 354, 376, 391, 393, 394, 396, 398], "remove_all_dataset": 120, "remove_all_project": 120, "remove_dataset": [120, 336], "remove_digital_filt": [46, 60, 61, 334, 336, 339], "remove_limit": 97, "remove_mask": [111, 349], "remove_project": 120, "renam": [96, 331, 398], "render": [9, 333, 337], "renishaw": [42, 49, 57, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 319, 399], "reopen": 86, "reorder": 329, "reorgan": 93, "repeat": [9, 68, 104, 111, 269, 281, 341, 347], "repeatedli": [97, 101, 102, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125], "repetit": [7, 334], "rephas": 342, "replac": [2, 6, 25, 26, 39, 87, 88, 89, 90, 95, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 146, 159, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 317, 333, 334, 335, 337, 361, 364, 383, 387, 394, 396], "replace_exist": [111, 239], "replace_whitespac": 336, "reply_cont": 347, "repo": 5, "report": [6, 7, 92, 93, 94, 116, 322, 329, 374], "repositori": [5, 7, 11, 15, 86, 87, 88, 90, 380, 394], "repres": [2, 9, 33, 75, 91, 99, 111, 287, 299, 316, 317, 320, 328, 342], "represent": [9, 64, 121], "reproduc": [2, 14, 92, 102, 114, 117, 331], "reproduct": 2, "request": [0, 4, 7, 8, 10, 12, 13, 14, 83, 111, 281, 329, 337, 374], "requir": [2, 6, 7, 9, 11, 24, 68, 80, 84, 85, 86, 87, 88, 90, 92, 110, 111, 117, 121, 166, 171, 278, 322, 324, 328, 332, 338, 340, 341, 343, 350, 354, 377], "rescal": [99, 102, 111, 121, 193, 194, 195, 286, 291, 293, 294], "research": [2, 92, 94], "reserv": [2, 206, 317, 337], "reset": [32, 97, 98, 101, 102, 104, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 323, 327, 334, 337, 338], "reshap": [111, 214, 311, 345], "residu": [20, 21, 22, 101, 102, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 316, 322, 323, 326, 345], "resist": [94, 318], "resitua": 323, "resiz": [99, 111, 173], "resolut": [21, 80, 94, 96, 101, 110, 111, 221, 222, 224, 225, 230, 231, 232, 316, 318, 322, 323], "resolv": [6, 110, 316, 322], "resourc": [6, 92], "respect": [2, 6, 84, 107, 108, 110, 111, 117, 125, 179, 316, 322, 323, 326, 328, 329, 334, 336, 337, 346], "respons": [2, 92, 119], "rest": [9, 10, 84, 327], "restart": [6, 15, 87, 328], "restor": 337, "restrict": [2, 111, 326, 333], "restructuredtext": [9, 10], "result": [2, 7, 9, 17, 20, 22, 24, 25, 32, 33, 64, 68, 71, 75, 76, 77, 80, 88, 92, 96, 99, 102, 111, 114, 116, 117, 131, 132, 133, 134, 138, 159, 161, 167, 172, 177, 192, 202, 204, 205, 214, 236, 238, 265, 278, 287, 288, 299, 311, 320, 322, 323, 325, 328, 332, 334, 338, 340, 341, 342, 344, 345, 347, 349], "retain": 316, "retapod": [60, 61, 111, 143, 145, 165, 179, 183, 184, 185, 284, 298, 339], "retriev": [97, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125, 328, 334], "retstep": [99, 111, 196], "return": [5, 6, 10, 21, 33, 75, 77, 89, 95, 96, 97, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 196, 198, 199, 201, 202, 204, 205, 213, 214, 215, 216, 217, 218, 219, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 268, 269, 270, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 304, 306, 310, 311, 312, 313, 314, 315, 320, 322, 323, 324, 326, 328, 329, 332, 333, 334, 336, 337, 343, 346, 347, 349, 354, 361], "return_bg": [111, 257], "return_coef": [111, 141], "return_error": 99, "return_ifg": [111, 242, 244, 252, 253], "return_meta": 96, "return_nddataset": [22, 96], "reus": [76, 92, 97, 101, 102, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 322], "rev": [111, 143, 145, 165, 179, 183, 184, 185, 284, 298], "reverdi": 94, "revers": [95, 99, 101, 102, 107, 110, 111, 114, 117, 124, 125, 143, 145, 165, 170, 179, 183, 184, 185, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 283, 284, 296, 298, 329], "review": [10, 321, 333], "revis": [12, 351], "revisit": [354, 367], "reward": 6, "rewrit": 354, "rez": 94, "rf": [86, 329], "rgb": [9, 119], "rgba": 119, "ri": [76, 111, 149, 150, 336, 345], "ric": 94, "rich": 20, "rid": 6, "rieg": 94, "rieger": [94, 318], "right": [2, 14, 29, 75, 87, 96, 110, 111, 117, 163, 174, 175, 179, 201, 206, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 266, 316, 322, 324, 326, 329, 336, 337, 342], "right_bas": [75, 324], "right_ip": [75, 324], "rigid": 64, "rigueiro": 94, "rint": [99, 111, 138, 265], "rir": [111, 147], "risk": [2, 92, 317, 332], "rita": 94, "rk23": 96, "rk45": 96, "rm": 86, "roach": [94, 101], "robert": 94, "robust": [111, 142, 400], "rocio": 94, "rocquencourt": 2, "roi": [99, 111, 354], "rojo": 94, "role": [328, 340, 347], "roll": [111, 154, 174, 175, 201, 266], "rom": 94, "roman": 337, "ronald": 24, "root": [6, 7, 111, 117, 121, 287, 328, 345], "rootdir": 7, "rossi": [94, 318], "rotat": [51, 75, 76, 324, 337, 375], "roughli": [22, 320], "round": [10, 71, 99, 111, 135, 138, 337, 345, 347, 396], "round4": 324, "round_": [99, 111], "round_numb": 337, "rounded_arrai": [99, 111, 138, 265], "routin": 367, "row": [9, 21, 39, 76, 97, 100, 104, 111, 119, 141, 163, 169, 187, 206, 270, 283, 322, 323, 324, 325, 329, 337, 341, 345], "row10": 39, "rr": [76, 111, 149, 150, 336, 345], "rri": [111, 147], "rrr": [111, 147], "rsc": 94, "rse": [21, 22, 322], "rsquar": 33, "rst": [111, 302, 387], "rt": [20, 334], "rtol": 96, "rubberband": [97, 111, 139, 144, 160, 181, 282, 343, 398], "ruberband": 340, "rudiment": 331, "rue": 2, "rule": [2, 111, 155, 243, 278, 288, 297, 325, 327, 329, 354], "run": [2, 4, 6, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 86, 87, 88, 89, 90, 93, 96, 97, 98, 102, 111, 116, 117, 139, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 321, 322, 327, 328, 331, 332, 333, 340, 347, 394], "run_ast_nod": 347, "run_cel": 347, "run_cell_async": 347, "run_cod": 347, "run_forev": 347, "run_script": [55, 126], "rune": 86, "rung": 96, "runner": [18, 20, 23, 24, 25, 26, 43, 46, 48, 55, 75, 76, 77, 91, 322, 323, 325, 327, 328, 329, 332, 334, 336, 337, 339, 342, 345, 346, 347, 349], "runpi": 347, "runtim": [87, 391], "runtimewarn": [344, 345], "ryan": [94, 97, 111, 282], "r\u00e9sultat": [20, 39, 329, 346], "s0": [329, 334], "s0003": 94, "s0003267000852484": 94, "s0003267024001132": 94, "s0021951720300865": 94, "s0021951721000798": 94, "s0169": 94, "s0169743904002874": 94, "s0169743914002111": 94, "s0169743918301758": 94, "s0169743996000615": 94, "s0926337320311164": 94, "s1": [52, 76, 334, 337], "s10": [52, 337], "s10858": 1, "s2": [76, 334], "s20": [52, 337], "s3": 76, "s4": 76, "s41467": [94, 318], "s4p": 76, "s50": [52, 337], "s53": [52, 337], "s_0": 322, "s_1": 323, "s_copi": 328, "s_soft": 110, "s_x": [316, 326], "s_y": [316, 326], "sa": 76, "sabina": 94, "sadovnik": [94, 318], "safe": [2, 6], "safer": 334, "safeti": 92, "sai": [99, 111, 270, 283, 285, 289, 291, 296, 320], "said": [2, 88], "saito": 114, "sake": [75, 337, 338], "same": [2, 4, 5, 9, 20, 21, 22, 24, 29, 33, 39, 43, 50, 53, 55, 57, 76, 80, 96, 97, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 121, 124, 125, 130, 139, 142, 148, 149, 150, 153, 155, 160, 167, 177, 193, 204, 214, 226, 239, 240, 270, 284, 287, 288, 299, 311, 319, 320, 322, 325, 328, 329, 332, 334, 339, 340, 342, 344, 345, 346, 347, 349], "samevalu": 114, "samira": 94, "sampl": [8, 9, 24, 29, 52, 55, 71, 99, 104, 109, 111, 115, 117, 119, 130, 180, 196, 199, 238, 240, 242, 244, 252, 253, 269, 278, 324, 326, 329, 337, 340, 347, 376], "sample_valu": 9, "sample_weight": [109, 115, 119], "san": [52, 337], "sand": 337, "sandov": 94, "sanjai": 94, "sansmath": 337, "satisfi": 92, "satur": [23, 25, 337, 340, 345, 349], "save": [6, 55, 87, 88, 90, 97, 98, 101, 102, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 124, 125, 197, 220, 223, 227, 228, 229, 239, 303, 304, 306, 329, 334, 335, 337, 377], "save_a": [111, 112, 120, 336], "save_dialog": 365, "savec": 87, "savefig": [111, 221, 222, 224, 225, 230, 231, 232, 337], "savefig_bbox": 337, "savefig_directori": 337, "savefig_dpi": 337, "savefig_edgecolor": 337, "savefig_facecolor": 337, "savefig_format": 337, "savefig_jpeg_qu": 337, "savefig_pad_inch": 337, "savefig_transpar": 337, "savez": [111, 113, 120], "savgol": [71, 104, 111, 281, 302, 341, 343, 398], "savgol_filt": [104, 111, 269, 281, 302, 347, 398], "savitki": [70, 72, 73, 104, 111, 239, 319], "savitski": [68, 347], "savitzki": [71, 104, 111, 269, 281, 302, 343], "sazama": 94, "sb": 76, "sbb": [111, 284, 339], "sc": 76, "scalar": [7, 99, 111, 119, 132, 133, 146, 176, 177, 202, 205, 221, 222, 224, 225, 230, 231, 232, 337, 340, 344, 345], "scale": [96, 99, 107, 110, 111, 114, 117, 119, 121, 170, 180, 193, 195, 199, 234, 281, 294, 326, 337, 344, 347, 369, 371, 372], "scale_dash": 337, "scan": 48, "scatter": [32, 52, 55, 75, 77, 111, 117, 119, 206, 210, 220, 223, 226, 227, 228, 229, 320, 324, 325, 337], "scatter_mark": 337, "scatter_pen": [111, 229], "scenario": 6, "scheme": 92, "schoolbook": 337, "schuh": [94, 318], "sci": 94, "scienc": 94, "sciencedirect": 94, "scientif": [2, 14, 84, 111, 255, 329, 337], "scientifiqu": 2, "scientist": 92, "scikit": [24, 102, 111, 198, 323, 326], "scikitlearn": 400, "scinot": 94, "scipi": [9, 84, 90, 92, 97, 104, 111, 116, 117, 118, 171, 269, 281, 324, 340, 347, 400], "scope": 2, "scopic": 93, "score": [17, 24, 25, 33, 109, 115, 117, 119, 316, 320, 322, 323, 326, 340, 391], "scoreplot": [24, 25, 117, 323], "scp": [5, 6, 7, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 86, 89, 91, 96, 98, 99, 101, 111, 112, 113, 120, 125, 126, 135, 141, 142, 148, 153, 155, 162, 166, 169, 171, 172, 173, 176, 177, 187, 192, 197, 204, 213, 214, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 286, 287, 288, 291, 292, 297, 299, 303, 304, 306, 310, 311, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 352, 354, 383, 386, 392, 394], "scp_config_hom": 95, "scpy": [11, 15, 19, 87, 88, 89, 90, 96, 111, 220, 223, 227, 228, 229, 269, 278, 297, 322, 323, 324, 326, 328, 329, 337], "scpy3": 6, "scpy_doc": [23, 26, 46, 48, 75, 327, 336, 337, 347], "scratch": [38, 55, 334], "scree": [117, 323], "screeplot": [24, 25, 117, 322, 323], "scrf": 329, "script": [6, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 86, 90, 92, 111, 116, 120, 140, 178, 200, 234, 267, 268, 277, 300, 327, 328, 331, 337, 350, 352, 400], "script_sourc": 55, "script_source_2": 55, "scripts_nam": 120, "scriptsactiv": 90, "scsm": 329, "sdr": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261], "se": [111, 287], "seaborn": [3, 337], "seamlessli": [6, 20, 39], "search": [5, 14, 107, 320, 324, 330, 361], "sebastian": 94, "second": [5, 9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 94, 95, 99, 100, 110, 111, 121, 159, 192, 212, 233, 240, 251, 289, 291, 311, 316, 317, 322, 323, 324, 328, 329, 332, 334, 336, 337, 341, 342, 345, 346], "secondli": 2, "sect": 349, "section": [5, 6, 10, 12, 38, 75, 93, 94, 107, 332, 333, 334, 337], "secur": [2, 87], "see": [4, 5, 6, 7, 10, 11, 12, 14, 48, 51, 67, 68, 80, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 104, 107, 110, 111, 113, 114, 116, 117, 118, 119, 120, 124, 125, 142, 143, 144, 145, 148, 158, 161, 166, 167, 170, 176, 177, 179, 181, 184, 185, 188, 197, 199, 213, 214, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 278, 281, 282, 284, 287, 297, 298, 299, 302, 303, 306, 310, 311, 316, 317, 320, 322, 323, 324, 325, 327, 328, 329, 333, 334, 337, 339, 340, 342, 344, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "seed": [9, 99, 111, 291], "seek": 2, "seem": [17, 55, 64, 96, 328], "seen": [25, 67, 322, 327, 334, 345], "segment": [97, 111, 160], "seitsonen": 94, "select": [6, 15, 20, 29, 32, 39, 51, 64, 67, 68, 75, 76, 87, 90, 94, 97, 99, 100, 101, 102, 103, 104, 107, 110, 111, 114, 116, 117, 119, 124, 125, 132, 133, 142, 147, 158, 164, 202, 205, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 269, 281, 285, 303, 304, 306, 318, 320, 324, 325, 326, 328, 329, 340, 341, 345, 346, 347, 359, 377], "self": [7, 9, 94, 96, 97, 98, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 124, 125, 127, 216, 219, 324, 329, 336, 347], "send": [6, 102, 347], "sens": [9, 10, 92, 111, 160, 340, 349], "sensit": [92, 94], "sensor": [94, 318], "sent": [2, 6], "sentenc": 9, "sepal": 24, "sepal_length": 24, "separ": [2, 6, 9, 51, 85, 87, 96, 97, 99, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 138, 160, 171, 215, 265, 316, 324, 328, 337, 346, 352, 355], "seq": 121, "seq_i": 121, "sequenc": [9, 97, 99, 100, 111, 119, 121, 176, 180, 196, 199, 213, 296, 310, 324, 329, 334, 340], "sequenti": [64, 97, 110, 117, 340, 341, 357], "ser": 77, "sergei": 94, "seri": [9, 48, 68, 75, 91, 98, 99, 111, 117, 118, 120, 215, 226, 246, 249, 256, 257, 259, 260, 286, 325, 340, 341, 400], "serial": [102, 110, 401], "serialis": 354, "serie190214": [47, 51, 67, 68, 341], "serif": 337, "serr": 94, "serra": 94, "serv": 9, "server": [2, 9, 11, 43, 86, 87], "servic": 2, "session": [7, 9, 87, 88, 90], "set": [2, 5, 6, 7, 9, 18, 19, 21, 23, 29, 32, 43, 51, 75, 76, 80, 87, 92, 95, 96, 97, 99, 100, 102, 107, 109, 110, 111, 114, 115, 116, 117, 120, 131, 132, 133, 134, 141, 158, 159, 163, 164, 166, 167, 176, 177, 187, 196, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 236, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 270, 272, 273, 287, 288, 299, 303, 304, 310, 311, 316, 317, 320, 322, 323, 324, 325, 326, 327, 328, 329, 335, 337, 340, 341, 344, 345, 346, 347, 349, 352, 354, 357, 364, 375, 378, 396, 400], "set_bad": 119, "set_color": 337, "set_complex": [111, 149, 150, 345], "set_coord": 111, "set_coordset": [19, 26, 111, 322, 335], "set_coordtitl": [111, 322], "set_coordunit": 111, "set_fonts": 337, "set_fontstyl": 337, "set_hypercomplex": [111, 345], "set_laser_frequ": [99, 344], "set_log_level": [97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 269, 281, 302], "set_loglevel": [55, 67, 126, 327, 392], "set_quaternion": [111, 270, 271, 345], "set_titl": [71, 100, 337], "set_unit": 100, "set_xlim": [75, 324, 344, 347], "set_xscal": 354, "set_ylim": [75, 324, 340, 344], "set_ytick": 23, "setosa": 24, "sever": [6, 7, 9, 39, 50, 53, 57, 75, 80, 86, 96, 97, 99, 110, 111, 117, 120, 159, 160, 226, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 319, 322, 329, 332, 335, 336, 339, 343, 345, 346, 347, 350, 359, 361, 369, 394, 400], "sg": 71, "sh": [11, 87], "shadow": 337, "shall": 2, "shape": [5, 7, 20, 21, 23, 24, 25, 26, 32, 38, 43, 45, 46, 75, 76, 77, 91, 96, 97, 99, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 141, 142, 146, 148, 155, 162, 166, 167, 169, 172, 176, 177, 187, 204, 213, 214, 238, 239, 240, 241, 247, 248, 249, 250, 251, 254, 255, 256, 257, 261, 269, 281, 285, 286, 287, 288, 291, 299, 302, 310, 311, 320, 322, 323, 324, 325, 326, 328, 329, 334, 336, 338, 345, 346, 347, 348, 349], "share": [87, 92, 111, 130, 206, 329, 335], "sharei": [206, 338], "sharex": [206, 338, 340], "sharez": 206, "sharp": 20, "shashik": 94, "shell": [88, 347], "shift": [51, 60, 61, 111, 154, 160, 165, 174, 175, 183, 201, 220, 223, 226, 227, 228, 229, 249, 264, 266, 323, 324, 329, 331, 340, 342, 347], "ship": [6, 11, 87, 89], "short": [7, 14, 25, 77, 86, 91, 121, 334, 345], "shortag": 6, "shortcut": [90, 339], "shorter": [111, 170, 188, 340], "shorthand": [111, 119, 128, 129], "should": [2, 5, 6, 7, 9, 11, 14, 15, 32, 52, 67, 76, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 102, 107, 110, 111, 118, 119, 126, 139, 149, 150, 159, 166, 220, 221, 223, 224, 225, 227, 228, 229, 230, 251, 317, 320, 322, 323, 324, 328, 331, 332, 337, 346, 347, 357, 387], "shoulder": 324, "show": [9, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 75, 76, 77, 80, 88, 99, 101, 103, 111, 117, 159, 220, 223, 227, 228, 229, 320, 323, 324, 325, 326, 328, 329, 332, 337, 339, 340, 342, 346, 347, 348, 349, 350, 361, 400], "show_complex": [111, 220, 223, 227, 228, 229, 342, 345, 348], "show_datapoint": [99, 344], "show_label": [25, 117, 323], "show_mask": [111, 220, 223, 227, 228, 229, 345], "show_project": 337, "show_projection_i": 337, "show_projection_x": 337, "show_region": [64, 340], "show_vers": [350, 352, 374, 384], "show_yaxi": 75, "show_z": [111, 220, 223, 227, 228, 229], "show_zero": [111, 220, 223, 227, 228, 229], "shown": [9, 117, 234, 324, 327, 328, 329, 340, 347], "shrinkb": 337, "shuffl": 114, "si": [75, 111, 170, 188, 342], "si_200mu": 47, "siam": 94, "side": [86, 96, 98, 206, 333, 337], "sidebar": 331, "sie": 94, "sigdigit": [99, 396], "sigma": [117, 125, 178, 316, 320], "sigma_1": 316, "sigma_i": 316, "sigmoid": 277, "sign": [2, 14, 111, 174, 175, 331, 333], "signal": [60, 61, 67, 97, 104, 111, 117, 171, 269, 281, 316, 324, 339, 340, 341, 347], "signatur": [7, 9, 103, 336], "signif": 334, "signific": [2, 18, 76, 99, 111, 171, 322, 323, 337, 341, 396], "significantli": [7, 114, 324], "sigular": 316, "silent": 329, "silk": [94, 318], "silver": [94, 318], "similar": [9, 33, 84, 86, 99, 111, 180, 199, 323, 324, 326, 329, 337, 340], "similarli": [2, 206, 328, 346, 347], "simkovi\u010dov\u00e1": 94, "simon": 94, "simp": [111, 278, 371], "simpl": [6, 9, 26, 32, 33, 75, 77, 87, 89, 94, 96, 97, 101, 102, 107, 110, 111, 114, 117, 124, 125, 139, 144, 160, 181, 282, 320, 331, 332, 334, 337, 340, 346, 347, 348, 400], "simpler": [40, 55, 328, 340], "simplest": [39, 347], "simplex": 116, "simpli": [6, 9, 86, 331, 337, 340, 341, 347, 349], "simplic": [5, 9, 333], "simplif": 337, "simplifi": [6, 88, 317, 332, 337, 347, 354], "simplisma": [16, 27, 35, 94, 101, 102, 107, 110, 111, 114, 117, 125, 248, 319, 322, 354, 382], "simpson": [75, 77, 111, 297, 325, 354], "simul": 340, "simultan": [6, 100, 111, 220, 346], "sin": [38, 111, 284, 339], "sinc": [6, 22, 33, 92, 329, 334], "sine": [59, 62, 73, 111, 165, 179, 183, 237, 258, 280, 284, 298, 319, 345], "singl": [5, 9, 10, 18, 21, 32, 33, 39, 48, 55, 75, 76, 80, 93, 97, 99, 100, 104, 107, 111, 119, 120, 132, 133, 134, 142, 164, 171, 202, 205, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 285, 316, 320, 324, 329, 333, 335, 336, 337, 340, 344, 354, 363, 391], "single_spectrum": [111, 304], "singlehplc": [322, 323], "singleton": 111, "singular": [2, 97, 101, 102, 107, 110, 114, 117, 119, 124, 125, 316], "singular_valu": 125, "sinm": [61, 111, 165, 179, 183, 237, 279, 284, 298, 339], "sirotin": 94, "sisetup": 337, "site": [23, 26, 46, 48, 75, 92, 94, 318, 327, 333, 336, 337, 347], "situ": [94, 318], "situat": 344, "siunitx": 337, "size": [7, 20, 24, 25, 33, 38, 39, 40, 43, 55, 68, 71, 75, 76, 77, 87, 91, 99, 100, 102, 104, 110, 111, 119, 131, 132, 133, 134, 135, 141, 142, 153, 155, 159, 162, 170, 171, 172, 173, 176, 177, 180, 188, 191, 192, 196, 199, 202, 204, 205, 213, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 236, 238, 269, 278, 281, 287, 288, 297, 299, 310, 312, 314, 315, 316, 320, 322, 323, 324, 325, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 349, 379], "sizeff": [111, 170], "skip": [4, 7, 9, 88, 90, 363], "sklearn": [19, 23, 102, 109, 114, 115, 117, 119, 392], "slash": [87, 328], "sleep": 354, "slice": [17, 25, 38, 64, 73, 74, 78, 98, 111, 116, 258, 317, 319, 320, 324, 325, 332, 334, 335, 337, 343, 347, 349, 364, 391, 399], "slightli": [7, 96, 326, 337, 396], "slow": [6, 80, 88, 89, 90, 354, 358], "slower": 114, "sma": 26, "small": [9, 75, 76, 92, 114, 320, 324, 337, 340], "smaller": [96, 97, 111, 139, 146, 170, 284, 324, 337, 339, 345, 347], "smallest": 117, "smc1": [47, 71, 80, 347], "smild": 94, "smooth": [64, 68, 70, 72, 73, 93, 94, 97, 104, 110, 111, 139, 144, 160, 171, 181, 239, 269, 282, 302, 316, 319, 340, 343, 398], "smoother": [64, 71, 80, 94, 104, 111, 171, 269, 281, 302, 316, 347], "snap": 337, "snip": [64, 68, 75, 76, 80, 94, 97, 111, 139, 144, 160, 181, 340, 341, 398], "snip_width": [64, 75, 76, 80, 97, 111, 282, 340], "snippet": [9, 14, 343], "so": [2, 4, 6, 7, 9, 10, 18, 21, 22, 25, 68, 80, 84, 87, 88, 90, 92, 96, 99, 110, 111, 117, 196, 239, 287, 291, 299, 316, 322, 323, 324, 327, 328, 329, 332, 333, 334, 337, 340, 341, 342, 344, 345, 347, 349, 350, 357], "soft": [22, 110, 316, 322, 337, 361], "softwar": [0, 1, 2, 6, 14, 89, 91, 93, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 284, 329, 339, 399], "sol": 96, "solarize_light2": 337, "sole": [2, 92], "solid": [51, 94, 111, 220, 227, 229, 318, 337, 344], "solid_capstyl": 337, "solid_joinstyl": 337, "solut": [2, 32, 33, 95, 96, 320], "solv": [6, 20, 31, 34, 35, 88, 90, 92, 96, 99, 107, 109, 110, 111, 319, 321, 358, 368], "solve_ivp": 96, "solver": [96, 101, 102, 107, 110, 114, 117, 124, 125, 395, 400], "solverconc": 110, "solverspec": 110, "som": [32, 76, 77, 320], "somaiyeh": 94, "some": [6, 7, 9, 10, 18, 22, 23, 25, 26, 32, 33, 40, 51, 64, 76, 84, 85, 87, 89, 91, 92, 96, 99, 100, 111, 113, 117, 120, 135, 241, 316, 317, 320, 321, 322, 323, 324, 325, 326, 328, 331, 332, 334, 336, 337, 338, 340, 342, 344, 345, 347, 348, 349, 354, 357, 363, 367, 389, 391, 397], "some_unit": 329, "someon": [10, 334], "someth": [6, 9, 10, 15, 327, 328, 332, 345, 349, 354], "sometim": [9, 68, 92, 111, 117, 241, 333, 334, 341, 362, 399], "somewhat": [6, 89], "son": 329, "sore": 117, "sort": [43, 91, 111, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 325, 329, 334, 335, 346, 349, 400], "sortbyd": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 329], "sourc": [1, 2, 5, 6, 17, 18, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 84, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 329, 334, 336], "sourcetre": 6, "soustract": [20, 39, 329, 346], "sp": [48, 61, 111, 165, 179, 183, 237, 279, 280, 298, 339, 342], "spa": [25, 43, 91, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 325, 328, 330, 344, 349, 362], "space": [2, 9, 26, 84, 99, 101, 102, 104, 107, 110, 111, 114, 116, 117, 119, 124, 125, 135, 180, 196, 199, 206, 269, 316, 324, 326, 329, 333, 336, 337, 346, 396, 399], "span": [117, 316, 323, 326], "spars": [9, 111, 114, 117, 302], "sparsiti": 114, "spc": [5, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 373], "speak": [80, 332], "spec": [18, 329, 337, 342, 348], "spec2": [342, 348], "spec3": 342, "speci": [24, 75, 94, 96, 110, 316, 318], "special": [94, 111, 179, 333, 336, 337, 340], "specialis": 337, "speciat": 94, "species_concentr": [22, 96], "specif": [2, 5, 6, 7, 9, 13, 21, 80, 85, 88, 90, 92, 100, 111, 147, 170, 171, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 317, 323, 326, 328, 329, 337, 340, 345, 347], "specifi": [2, 5, 9, 24, 48, 51, 87, 97, 99, 101, 102, 104, 107, 110, 111, 113, 114, 116, 117, 119, 120, 121, 124, 125, 130, 131, 135, 138, 142, 143, 145, 146, 147, 148, 149, 150, 154, 158, 160, 162, 165, 169, 170, 171, 173, 174, 175, 179, 180, 183, 184, 185, 187, 188, 196, 199, 201, 204, 217, 218, 219, 220, 223, 227, 228, 229, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 264, 265, 266, 269, 281, 284, 287, 288, 298, 299, 302, 303, 304, 306, 328, 329, 333, 334, 336, 337, 346, 349, 350, 375], "specta": [29, 326], "spectr": 344, "spectra": [5, 17, 21, 22, 23, 25, 26, 29, 43, 47, 48, 51, 64, 67, 68, 73, 74, 78, 79, 81, 91, 94, 97, 98, 99, 100, 101, 102, 110, 111, 116, 124, 158, 159, 164, 165, 170, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 316, 318, 319, 320, 322, 323, 324, 325, 326, 334, 337, 339, 340, 343, 344, 346, 347, 348, 349, 370, 376, 382, 398, 399, 400], "spectral": [20, 21, 39, 48, 94, 102, 110, 111, 171, 300, 316, 320, 340], "spectro": 93, "spectrocat": [6, 11, 85, 87, 88, 90, 369], "spectrochemp": 6, "spectrochempi": [1, 5, 7, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 88, 90, 91, 93, 95, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "spectrochempy_2025": 0, "spectrochempy_cfg": 95, "spectrochempy_data": [5, 52, 85, 355, 356, 380, 394], "spectromet": [29, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 326, 340], "spectrometri": 94, "spectroscop": [0, 3, 5, 91, 92, 101, 102, 107, 110, 111, 114, 117, 124, 125, 171, 243, 316, 327, 331, 332, 334, 335], "spectroscopi": [3, 22, 92, 94, 99, 111, 140, 171, 318, 320, 323, 329], "spectroscopist": [92, 346], "spectrum": [5, 20, 22, 32, 48, 51, 66, 69, 70, 72, 73, 75, 76, 80, 94, 97, 104, 111, 117, 159, 164, 174, 175, 235, 239, 240, 246, 259, 260, 272, 316, 319, 320, 323, 324, 329, 340, 343, 346, 347, 348, 349, 376], "speed": [7, 33, 99, 111, 171, 302, 320, 337, 352, 389, 393, 400], "spg": [17, 20, 23, 25, 32, 39, 40, 42, 43, 49, 52, 57, 64, 86, 91, 98, 99, 101, 111, 113, 120, 125, 141, 142, 148, 155, 171, 197, 204, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 278, 286, 287, 288, 292, 297, 299, 304, 319, 320, 324, 325, 328, 330, 334, 337, 338, 340, 345, 346, 349], "sphinx": [7, 9, 10], "sphinx_gallery_thumbnail_numb": [17, 38], "spike": [66, 69, 73, 94, 111, 159, 239, 318, 319, 324, 343, 348, 398], "spline": 340, "split": [93, 111, 130, 337, 338], "splitlin": 336, "spread": [111, 287, 299], "spred": 75, "spure": [21, 26, 322, 323], "spyder": 331, "sqrt": [111, 114, 128, 129, 178, 203, 287, 320, 332, 333, 334], "squar": [32, 33, 59, 62, 64, 73, 94, 97, 104, 109, 110, 111, 115, 116, 117, 119, 139, 141, 144, 160, 181, 187, 235, 237, 258, 280, 282, 284, 287, 299, 302, 316, 318, 319, 321, 322, 324, 334, 339, 340, 394, 400], "squeez": [22, 39, 76, 111, 320, 324, 345], "sr": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261], "src": [18, 55, 319, 329, 333], "ssb": [61, 111, 237, 280, 284, 339], "ssdiff": [111, 141], "st": [17, 19, 21, 22, 23, 26, 102, 110, 124, 316, 322, 324, 352, 392, 393], "st0": 322, "st_constrained_list": 110, "st_l": 110, "st_ls_list": 110, "st_unconstrain": 110, "stabl": [7, 10, 14, 85, 86, 88, 90, 102], "stack": [38, 44, 75, 111, 148, 206, 211, 212, 221, 222, 224, 225, 230, 233, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 324, 337, 347, 379, 385, 391], "stackoverflow": 332, "staff": [2, 92], "stai": [6, 349], "stancik": [140, 320], "stand": [2, 14, 40, 316, 322, 323, 324, 326, 340], "standalon": 83, "standard": [4, 10, 13, 68, 94, 100, 110, 111, 117, 124, 155, 200, 204, 287, 288, 299, 320, 322, 326, 327, 329, 332, 337, 345], "stanislav": 94, "star": 9, "starch": [29, 326], "start": [5, 6, 7, 9, 11, 22, 32, 38, 64, 80, 86, 87, 88, 89, 90, 97, 98, 99, 107, 111, 116, 135, 180, 196, 199, 234, 320, 322, 324, 329, 334, 337, 340, 346, 347], "startmenu": 90, "startswith": 7, "startup": [88, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 269, 281, 302, 337], "starzyk": 94, "stash": 6, "state": [2, 6, 7, 92, 111, 238], "statement": [334, 337, 354], "statist": [94, 111, 287, 299, 316, 326, 332], "statu": [2, 6, 96, 111, 284, 339, 340], "stcurr": 110, "std": [26, 71, 111, 204, 299, 326, 347], "stdout": 276, "stefania": 94, "stejskal": 400, "stelmachowski": [94, 107], "step": [5, 6, 11, 21, 84, 88, 90, 96, 98, 99, 110, 111, 135, 159, 180, 196, 199, 331, 337, 340, 346, 392], "steven": 94, "sthe": 126, "stiff": 96, "stiffer": [97, 111, 139], "stijn": 94, "still": [6, 7, 93, 332, 334, 337, 367, 377, 380, 388, 398, 400], "stix": 337, "stixsan": 337, "stoichiometri": 96, "stop": [4, 98, 99, 107, 111, 114, 119, 135, 180, 196, 199, 316, 322, 327, 334, 346], "storag": 2, "store": [2, 6, 48, 64, 80, 96, 103, 110, 111, 241, 243, 322, 323, 326, 331, 334, 336, 339, 344, 345, 352, 360, 378, 383, 393], "storeiter": [110, 352, 393], "stosic": 94, "str": [5, 9, 22, 26, 43, 55, 96, 99, 100, 103, 104, 107, 108, 111, 113, 116, 117, 118, 119, 120, 121, 126, 127, 130, 131, 141, 143, 145, 147, 148, 149, 150, 154, 158, 159, 160, 162, 164, 165, 166, 167, 170, 172, 174, 175, 176, 177, 179, 183, 184, 185, 188, 193, 197, 201, 206, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 269, 272, 278, 281, 283, 284, 291, 297, 298, 302, 303, 304, 306, 310, 311, 323, 338], "straight": [111, 160], "straightforward": [33, 346, 349], "strang": 388, "strategi": 102, "stream": [38, 337, 347], "streamlin": 48, "strength": 347, "stress": 324, "strict": [4, 110, 111, 127, 163], "stricter": 322, "strictli": [80, 111, 117, 279, 339, 347], "strike": 2, "string": [9, 14, 80, 87, 96, 97, 99, 100, 102, 103, 107, 110, 111, 119, 120, 147, 197, 216, 221, 224, 225, 230, 249, 258, 317, 328, 329, 333, 334, 335, 337, 347, 400], "strip": 336, "strong": [2, 92], "stronger": 347, "strongli": [7, 317], "structur": [6, 7, 13, 92, 111, 167, 177, 214, 311, 316, 322, 323, 327, 335, 336], "student": 92, "studi": [2, 94, 316, 318], "style": [6, 7, 9, 43, 44, 51, 52, 111, 119, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 336, 339, 354, 391, 398], "stylesheet": [111, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 337], "stylist": 7, "sub": [55, 111, 120, 126, 131, 134, 290, 333, 336], "subclass": [99, 100, 111, 116, 119, 364], "subcompon": 316, "subdir": [47, 111, 249, 254, 328, 329, 354], "subdirectori": 5, "subfold": [111, 239], "subhead": 333, "subindex": 9, "subject": [2, 6, 92, 93, 110, 111, 316, 317, 329, 334, 335], "submatric": 316, "submit": [2, 6, 7], "subplot": [97, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 206, 220, 223, 227, 228, 229, 337, 346], "subproject": [55, 120], "subscrib": 2, "subsequ": [2, 10, 97, 101, 102, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 333, 337], "subsequent_ind": 336, "subset": [7, 111, 285], "substep": 333, "subsystem": 87, "subtitl": 206, "subtrack": [111, 141], "subtract": [9, 64, 92, 93, 97, 111, 139, 141, 144, 160, 181, 282, 317, 324, 329, 334, 335, 336, 338, 340], "subtrat": 23, "subtyp": 9, "succes": [111, 270], "success": [2, 13, 96, 110, 111, 112, 120, 316, 322, 328, 333, 347], "successfulli": [5, 22, 96], "sudden": 7, "sudo": [6, 89], "suffer": [2, 337], "suffici": 75, "suffix": [111, 120, 328], "suggest": [7, 83, 92], "suit": [13, 85], "suitabl": [2, 101, 119, 337], "sulf_oct": [20, 39, 329, 346], "sulfid": [20, 94, 318], "sum": [9, 48, 109, 110, 111, 115, 119, 141, 142, 155, 204, 287, 299, 316, 325, 338, 347], "sum_": [234, 316, 320], "summ": 48, "summar": 9, "summari": [7, 76, 77, 96, 97, 99, 100, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 127, 140, 178, 200, 234, 277, 300, 322, 335], "super": 347, "superpos": 342, "supplement": [2, 321], "supplementari": [2, 110, 329], "suppli": [2, 43, 119], "support": [7, 9, 15, 94, 111, 171, 238, 318, 324, 330, 337, 345, 350, 355, 400], "supposedli": 328, "suppress": [91, 206, 327, 337, 354, 378], "supress": 80, "suptitl": [206, 337], "suptitle_color": 206, "sure": [6, 10, 23, 89, 96], "surf": [322, 323], "surfac": [94, 111, 118, 221, 222, 224, 225, 230, 231, 232, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 318, 322, 323, 337, 382, 400], "surround": [111, 171, 324, 333], "sust": 329, "sv": 125, "svd": [93, 97, 101, 102, 107, 110, 114, 117, 124, 316, 340], "svd_solver": 117, "svg": 337, "swapax": 111, "swapdim": [111, 270, 296], "swape": [111, 289], "switch": [6, 88, 90, 96], "sy": 276, "sylvi": 94, "symbol": [96, 334, 337], "symlog": 119, "synchron": 86, "syntax": [7, 9, 32, 38, 55, 76, 84, 110, 111, 317, 332, 333, 335, 336, 337, 347], "synthes": [94, 318], "system": [2, 6, 12, 18, 84, 87, 89, 94, 95, 96, 102, 111, 171, 215, 327, 328, 354], "systemat": [316, 324], "s\u00e9rie": 329, "t": [6, 7, 9, 10, 11, 17, 18, 19, 21, 22, 23, 24, 26, 29, 33, 38, 64, 75, 76, 77, 83, 84, 92, 94, 96, 99, 100, 101, 102, 107, 110, 111, 114, 117, 118, 119, 124, 125, 165, 172, 183, 240, 284, 316, 320, 322, 323, 324, 326, 328, 331, 332, 333, 334, 336, 337, 339, 341, 345, 349, 392], "t0": [111, 183], "t1": 77, "t1_model": 77, "t1irho": 75, "t1rho": 75, "t_0": [111, 165, 322], "t_dataset": 349, "t_event": 96, "t_point": 96, "tab": [6, 333], "tabl": [9, 92, 111, 141, 337], "table_po": [75, 324], "table_properti": [75, 324], "tableau": 337, "tacit": 2, "tacitli": 2, "tag": [332, 333, 334], "taht": [17, 23], "tail": 9, "take": [2, 6, 7, 10, 12, 32, 33, 39, 51, 86, 87, 88, 90, 92, 99, 102, 111, 114, 147, 156, 163, 170, 287, 334, 338, 341, 345, 346, 394], "taken": [7, 29, 48, 75, 76, 77, 98, 99, 102, 111, 144, 170, 181, 204, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 299, 322, 323, 354], "talk": [6, 337, 340], "tangent": 345, "tanner": 400, "tarascon": 94, "target": [109, 115, 119, 316], "tarr": 99, "task": [328, 331], "taskbar": 87, "tauler": 94, "tavakkoli": 94, "taxonom": 24, "tc_0": 322, "td": [336, 342], "tdd": [5, 7], "tdeff": [111, 170], "technic": [2, 9, 92], "techniqu": [316, 332, 341], "technol": 94, "technolog": 2, "tej": 94, "tel": [94, 318], "telecommun": 2, "telephon": 111, "tell": [6, 111, 141, 226], "temperatur": [9, 38, 96, 100, 107, 111, 240, 334], "templat": [111, 241, 334, 374], "temporari": [2, 337, 354], "temporarili": 337, "terahertz": 40, "term": [2, 102, 109, 110, 111, 114, 115, 121, 145, 316, 322, 326], "termin": [2, 6, 9, 22, 87, 88, 89, 90, 95, 96, 331, 350, 352, 364], "terrain": 337, "tesdata": 328, "test": [2, 6, 8, 10, 11, 13, 21, 29, 45, 46, 60, 61, 75, 76, 77, 84, 87, 109, 111, 115, 119, 131, 134, 239, 250, 326, 329, 334, 336, 339, 342, 345, 348, 350, 354, 355, 360, 361, 370, 371, 373, 377, 380, 394], "test_": 7, "test_1d_nddataset": 7, "test_cor": 5, "test_d": 7, "test_dataset": 7, "test_import": 5, "test_method": 7, "test_nddataset_real_imag": 7, "test_read": 5, "test_read_spc": 5, "test_sh": 363, "test_xfail": 4, "test_xxx": 5, "testclass": 7, "testdata": [5, 43, 328, 329, 334, 346], "text": [2, 9, 32, 71, 76, 92, 95, 111, 119, 284, 329, 331, 333, 337, 339], "text_antialias": 337, "text_color": 337, "text_hint": 337, "text_hinting_factor": 337, "text_usetex": 337, "textbox": 98, "textcomp": 337, "textcoord": [75, 76, 324, 337], "textil": 337, "textrm": [110, 316, 326], "textwrap": 336, "textwrapp": 336, "tf": 329, "tg": [55, 111, 241], "tga": [111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 352, 393], "tgscatter": 55, "th": [64, 111, 155, 161, 169, 316, 328], "than": [2, 9, 12, 26, 68, 86, 87, 96, 104, 110, 111, 117, 118, 119, 146, 158, 159, 167, 170, 171, 188, 269, 284, 285, 304, 322, 324, 326, 327, 328, 331, 333, 334, 337, 339, 345, 347, 356, 399], "thank": 40, "thei": [2, 5, 6, 7, 9, 12, 84, 86, 92, 100, 102, 111, 120, 239, 249, 250, 317, 322, 323, 324, 325, 328, 329, 332, 334, 337, 338, 341, 345, 347, 352, 355, 378, 393, 396], "them": [6, 7, 9, 18, 19, 21, 25, 39, 40, 47, 83, 85, 92, 111, 250, 316, 322, 326, 328, 329, 332, 333, 334, 337, 338, 342, 360, 398], "themselv": [100, 329, 337], "theprocessor": 340, "therefor": [2, 7, 75, 99, 111, 163, 166, 172, 317, 332], "thereof": 2, "thermo": [5, 111, 249, 254, 255, 256, 257, 329, 373, 400], "thermocoupl": [111, 240], "thermodynam": 85, "theses": 94, "thet": [111, 239, 249, 250], "thi": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 148, 158, 159, 161, 163, 165, 167, 170, 171, 172, 177, 180, 183, 188, 195, 197, 202, 204, 205, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 270, 278, 281, 284, 286, 287, 288, 294, 299, 302, 305, 307, 308, 309, 316, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 351, 364, 373, 378, 392, 396, 397, 398, 399], "thibault": 94, "thid": 24, "thing": [55, 75, 76, 320, 324, 340, 345], "think": [7, 9], "third": [2, 9, 18, 25, 110, 111, 159, 206, 316, 322, 326, 334], "thirti": 2, "thon": 93, "those": [2, 7, 9, 22, 87, 96, 99, 100, 101, 110, 111, 118, 120, 130, 146, 159, 323, 331, 337, 340, 345, 349], "though": [7, 22, 337], "three": [9, 22, 24, 55, 75, 97, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 146, 320, 324, 333, 334, 346, 398], "threshold": [68, 111, 159, 171, 324, 337, 341], "through": [5, 7, 9, 86, 92, 111, 131, 134, 171, 320, 324, 328, 329, 332, 334, 337], "throughout": [2, 4, 7, 324, 329], "thse": 25, "thu": [7, 14, 21, 25, 43, 86, 87, 91, 97, 99, 100, 316, 320, 322, 323, 325, 326, 328, 337, 340, 347, 349], "ti": 75, "tia": 94, "tick": [103, 111, 206, 220, 223, 227, 228, 229, 337], "tight": 337, "time": [2, 5, 6, 7, 10, 11, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 84, 86, 87, 88, 90, 91, 96, 97, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 121, 124, 125, 127, 139, 143, 145, 156, 165, 170, 172, 179, 183, 184, 185, 188, 251, 291, 298, 314, 316, 320, 322, 323, 324, 325, 326, 328, 329, 331, 335, 336, 337, 338, 339, 340, 343, 346, 349, 391, 394], "timedelta": 334, "timepoint": 22, "timeshift": [111, 251], "timestamp": [5, 17, 20, 25, 39, 43, 75, 91, 111, 251, 325, 329, 346], "timezon": [5, 111, 334, 337, 378], "timl": 96, "tip": [10, 13, 328, 333], "titl": [0, 5, 7, 9, 17, 18, 19, 20, 22, 23, 24, 25, 26, 29, 33, 38, 39, 43, 44, 55, 67, 75, 76, 77, 91, 93, 99, 100, 101, 107, 111, 130, 135, 141, 162, 180, 196, 199, 206, 220, 223, 227, 228, 229, 238, 320, 322, 323, 324, 325, 326, 329, 332, 333, 334, 336, 338, 339, 340, 342, 345, 346, 349, 352, 393], "tk": [337, 364], "tmp": 347, "to_arrai": 111, "to_base_unit": [99, 111, 121, 193, 194, 195, 291], "to_compact": 121, "to_csv": 9, "to_datetim": 9, "to_dict": [97, 100, 101, 102, 104, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125], "to_pref": 121, "to_reduced_unit": [99, 111, 121, 193, 194, 195, 291], "to_root_unit": 121, "to_xarrai": 111, "todo": [1, 80, 111, 116, 141, 241, 251, 320, 324, 329, 334, 346], "togeth": [3, 10, 29, 64, 99, 111, 119, 216, 316, 323, 326, 329, 338], "token": 87, "tol": [26, 97, 102, 110, 111, 114, 117, 119, 124, 139, 322, 340, 392], "toler": [96, 97, 102, 110, 111, 114, 117, 119, 139], "too": [9, 17, 25, 38, 64, 75, 76, 99, 320, 324, 337, 340, 345, 358], "tool": [7, 15, 85, 92, 94, 332, 342], "toolchain": 7, "top": [5, 94, 111, 171, 206, 324, 336, 337], "topic": [6, 10, 114], "topspin": [1, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 284, 328, 339, 354], "topspin_1d": [46, 60, 61, 336, 339, 342], "topspin_2d": [46, 76, 334, 336], "tornado": 347, "torr": [20, 39, 91], "tort": 2, "toshift": [111, 154, 264], "total": [2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 99, 109, 110, 111, 115, 119, 316, 319, 326], "toto": [87, 120, 327], "touch": [6, 89, 111, 143], "toward": [2, 349], "tqdm": 375, "tr": 336, "trace": [51, 92], "traceback": [99, 111, 291, 327, 336, 347, 400], "track": [6, 94, 318], "tracker": [14, 93], "trademark": 2, "train": [29, 97, 101, 102, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 326], "trait": [116, 345], "traitement": [94, 318], "traitlet": [26, 97, 101, 102, 104, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125, 337, 347], "transfer": 2, "transfere": 2, "transform": [17, 18, 19, 22, 23, 24, 25, 40, 43, 75, 80, 97, 101, 102, 104, 107, 110, 111, 114, 116, 117, 119, 121, 124, 125, 127, 143, 145, 154, 165, 170, 174, 175, 179, 183, 184, 185, 186, 188, 201, 217, 218, 264, 266, 284, 298, 316, 322, 323, 329, 332, 339, 340, 343, 344, 345, 347, 392], "transit": 392, "translat": [2, 92], "transmiss": 2, "transmit": 2, "transmitt": [40, 111, 249, 348, 377, 379], "transpar": [119, 334, 337, 340], "transport": 85, "transpos": [23, 75, 76, 101, 102, 111, 125, 221, 224, 225, 230, 270, 289, 322, 345, 349, 399], "transposit": [212, 233, 329, 343], "transpositon": 323, "trapezoid": [111, 155, 278, 288, 325], "trapz": [111, 288, 297, 325, 354, 371], "travel": [33, 320], "travert": [0, 88, 90, 91, 94, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "travi": 361, "treat": [96, 121, 127, 324, 329, 347], "treatment": [94, 322, 323], "trend": [80, 97, 111, 139, 144, 160, 181, 282], "triang": [111, 143, 165, 179, 183, 237, 279, 280, 284], "triangular": [111, 143, 298, 347], "trick": 10, "tricki": 9, "trigger": [6, 98, 107, 327, 340], "trigonometr": 343, "trim": 97, "trivial": [6, 89], "true": [2, 9, 20, 25, 32, 33, 39, 46, 47, 60, 61, 64, 75, 76, 80, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 127, 130, 131, 132, 133, 134, 141, 143, 145, 148, 153, 154, 155, 163, 165, 170, 171, 174, 175, 179, 180, 183, 184, 185, 188, 192, 193, 196, 199, 201, 202, 204, 205, 206, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 270, 283, 284, 285, 286, 287, 288, 289, 291, 293, 294, 296, 298, 299, 312, 313, 314, 315, 320, 322, 323, 324, 325, 329, 334, 336, 337, 338, 339, 340, 342, 344, 345, 348, 349, 375], "true_divid": 345, "truediv": [334, 339], "truli": 324, "trunc": [99, 111, 138, 265], "truncat": [117, 345], "trust": 92, "truth": [7, 345], "try": [6, 7, 9, 10, 20, 40, 43, 64, 80, 85, 86, 96, 111, 121, 127, 166, 167, 176, 177, 213, 214, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 310, 311, 320, 327, 328, 332, 334, 337, 338, 340, 345, 347, 349, 396], "tspan": 96, "tune": [68, 75, 111, 316, 327, 341, 347], "tupl": [9, 96, 97, 99, 100, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 130, 132, 133, 134, 142, 144, 164, 166, 171, 172, 181, 202, 205, 206, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 238, 247, 248, 285, 316, 334, 337, 401], "turnhout": [94, 318], "tutori": [6, 10, 11, 38, 88, 90, 92, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 337, 340, 342, 346, 347, 354, 398], "twin": [111, 220, 223, 227, 228, 229], "twinx": [111, 220, 221, 223, 224, 225, 227, 228, 229, 230], "two": [2, 9, 10, 12, 18, 20, 25, 39, 55, 64, 68, 75, 76, 94, 99, 100, 107, 111, 114, 117, 121, 132, 133, 135, 158, 163, 170, 188, 202, 205, 241, 270, 278, 289, 296, 313, 316, 317, 320, 322, 323, 324, 327, 328, 329, 333, 334, 337, 340, 341, 345, 346, 392], "txt": [47, 51, 67, 68, 71, 80, 88, 90, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 328, 341, 347, 354, 375], "type": [2, 4, 5, 6, 7, 20, 21, 40, 48, 75, 80, 88, 89, 90, 95, 96, 98, 99, 104, 109, 111, 115, 117, 119, 120, 127, 128, 129, 132, 135, 140, 142, 155, 162, 163, 166, 167, 169, 172, 173, 176, 177, 178, 180, 187, 196, 199, 200, 202, 204, 206, 207, 209, 210, 211, 213, 214, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 239, 249, 250, 254, 256, 257, 269, 277, 281, 287, 288, 299, 300, 303, 310, 311, 324, 327, 328, 329, 331, 332, 333, 340, 342, 345, 347], "type1cm": 337, "typecod": [99, 111], "typeerror": [4, 111, 120, 142, 336, 347], "typewrit": 337, "typic": [7, 92, 95, 97, 111, 139, 251, 284, 316, 324, 339, 340], "typograph": 119, "tz": 334, "tzinfo": 111, "u": [6, 7, 10, 14, 17, 25, 26, 38, 40, 43, 45, 60, 75, 77, 91, 92, 99, 100, 109, 111, 115, 119, 121, 125, 141, 142, 155, 165, 183, 204, 217, 218, 239, 240, 249, 250, 254, 255, 256, 257, 261, 278, 286, 287, 288, 297, 299, 310, 316, 320, 324, 325, 328, 329, 332, 334, 337, 339, 340, 346, 349], "u_": 119, "u_i": 119, "ub": 75, "ubic": 340, "ubuntu": [6, 89], "ufunc": [334, 343, 386], "umasked_data": [99, 111], "un": [6, 102, 345], "unabl": 87, "unalign": 338, "unamed_script": 126, "unari": 343, "unavoid": 7, "unbias": [111, 287, 299], "unchang": [99, 111, 138, 265, 339], "uncom": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 95, 336], "uncommit": 6, "unconstrain": [97, 111, 139], "uncorrel": 117, "undefin": [334, 337], "under": [2, 9, 92, 93, 95, 321, 363], "underli": [99, 102, 111, 316, 324, 340], "underscor": [75, 77, 320, 333, 336, 337], "understand": [2, 9, 10, 11, 94, 318, 332, 392], "understood": 2, "undertak": 2, "undesir": 349, "unexplain": [26, 124], "unfortun": 6, "unicod": [102, 110, 337], "unidimension": 335, "unifi": [11, 87], "uniform": [9, 99, 111, 199, 238, 347], "uniformli": [99, 111, 199], "unimod": [110, 316, 322, 382], "unimodconc": [110, 322], "unimodconcmod": 110, "unimodconctol": 110, "unimodmod": 382, "unimodspec": 110, "unimodspecmod": 110, "unimodspectol": 110, "unimodtol": [110, 382], "uniniti": [111, 166, 167, 176, 177, 213, 214, 310, 311], "union": [111, 130, 272, 338], "uniqu": [111, 126, 243, 334], "unit": [5, 9, 18, 19, 20, 26, 29, 33, 37, 38, 39, 41, 44, 57, 60, 75, 77, 91, 93, 95, 96, 99, 100, 102, 109, 111, 115, 117, 121, 130, 135, 148, 162, 165, 166, 167, 168, 169, 171, 172, 173, 176, 177, 180, 183, 187, 192, 193, 194, 195, 196, 199, 213, 214, 217, 238, 239, 249, 273, 286, 291, 293, 294, 310, 311, 319, 320, 322, 323, 325, 326, 329, 335, 337, 339, 340, 342, 343, 344, 364, 377, 379, 400], "unit_item": 121, "unitari": 125, "unitless": [5, 43, 55, 99, 111, 121, 153, 169, 176, 177, 213, 241, 247, 248, 310, 334, 343], "unitregistri": 121, "unitsa": 329, "unitscm": [320, 324], "unitscontain": 121, "unitsmin": 329, "unitss": 329, "univari": 107, "univers": [22, 94, 111, 343], "universit": 94, "universiteit": 22, "unix": [6, 89, 111, 215, 239, 249, 250, 328, 329], "unless": [2, 7, 9, 97, 99, 111, 131, 134, 180, 196, 199, 238, 396], "unlik": [86, 111, 166, 334], "unlink": [111, 113, 120], "unmask": 349, "unmodifi": 2, "unpack": 85, "unread": 328, "unresolv": 332, "unrest": 2, "unstack": 9, "until": [111, 220, 223, 227, 228, 229, 324, 333, 391], "untitl": 7, "unus": 7, "unusu": 96, "unwant": 349, "unweight": 347, "up": [6, 7, 9, 10, 14, 84, 89, 92, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 306, 320, 327, 328, 337], "upb": 320, "updat": [2, 7, 13, 87, 88, 90, 100, 110, 111, 114, 120, 273, 351, 354, 361, 370, 373, 378, 381, 390, 393], "upgrad": [88, 90, 351], "upload": [9, 17, 43, 86, 98, 111, 164, 198, 394], "upon": [2, 84], "upper": [87, 111, 146, 169, 337, 340, 347], "upstream": [6, 7, 89], "ur": [40, 60, 77, 99, 111, 166, 167, 176, 177, 213, 214, 273, 310, 311, 320, 334, 339, 344], "ureg": 121, "url": [0, 43, 87, 94, 111, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 327, 333, 394], "us": [0, 1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 34, 35, 38, 39, 40, 43, 48, 50, 53, 55, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 130, 132, 133, 135, 139, 140, 141, 142, 144, 155, 161, 166, 167, 171, 178, 180, 181, 183, 188, 196, 199, 200, 202, 204, 205, 206, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 234, 238, 240, 241, 242, 244, 245, 247, 251, 252, 253, 254, 255, 256, 257, 261, 269, 273, 277, 278, 281, 283, 287, 288, 297, 299, 300, 302, 303, 304, 306, 316, 318, 319, 321, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 335, 336, 338, 341, 342, 343, 344, 345, 346, 348, 349, 350, 352, 354, 361, 368, 385, 386, 392, 394, 396, 398, 400], "usabl": 92, "usag": [4, 7, 9, 10, 328, 334, 343], "use_coord": [111, 171], "use_jac": 96, "use_list": [77, 111, 258], "use_plotli": [111, 220, 221, 223, 224, 225, 227, 228, 229, 230, 337], "used_compon": 394, "used_rang": [97, 340], "uselabel_x": [111, 220, 223, 227, 228, 229], "useless": [39, 324], "useoffset": 337, "usepackag": 337, "user": [2, 4, 6, 7, 9, 10, 11, 12, 21, 22, 87, 88, 90, 91, 92, 94, 95, 98, 99, 108, 111, 116, 120, 166, 169, 187, 251, 317, 322, 323, 324, 325, 328, 329, 331, 334, 335, 337, 340, 346, 347, 350, 378, 384, 400], "user_global_n": 347, "user_n": 347, "userguid": [5, 10, 329, 336, 400], "usermodel": [75, 77, 116], "usernam": 329, "userwarn": [18, 26, 46, 48, 75, 329, 334, 336, 345, 348], "usetex": 337, "usual": [21, 38, 51, 64, 80, 86, 92, 98, 104, 111, 143, 145, 154, 158, 165, 170, 174, 175, 179, 183, 184, 185, 188, 201, 217, 218, 264, 266, 269, 281, 284, 298, 302, 322, 323, 324, 327, 334, 336, 337], "utc": [111, 249, 329, 334, 337, 378], "utf": 333, "util": [7, 26, 336, 361, 384], "uv": [21, 22, 94, 322, 323], "v": [6, 11, 21, 22, 33, 40, 75, 76, 87, 88, 89, 90, 91, 94, 96, 99, 100, 109, 111, 115, 119, 125, 161, 172, 302, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349, 358], "v0_8": 337, "v_1": [100, 334], "vacuum": [111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 371], "vaidulych": 94, "vajda": 94, "val": [100, 320, 329], "valentin": 94, "valid": [2, 9, 10, 19, 29, 68, 92, 98, 100, 111, 114, 116, 148, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 286, 326, 341, 398], "validate_docstr": 10, "valtchev": 94, "valtera": 94, "valu": [2, 7, 9, 17, 18, 20, 22, 23, 24, 25, 26, 29, 32, 43, 51, 60, 61, 68, 71, 75, 76, 77, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 146, 155, 159, 160, 163, 166, 167, 169, 171, 172, 174, 175, 176, 177, 180, 192, 196, 199, 202, 204, 205, 213, 214, 220, 221, 222, 224, 225, 230, 231, 232, 236, 238, 242, 244, 252, 253, 257, 265, 269, 281, 283, 284, 287, 288, 296, 298, 299, 310, 311, 316, 320, 322, 323, 324, 325, 326, 327, 328, 329, 332, 334, 336, 337, 338, 339, 340, 342, 345, 346, 347, 349, 354, 383, 396, 399, 400], "valueerror": [111, 121, 130, 285, 334], "van": [22, 94, 318], "var": [111, 204, 287, 320], "vardiff": [111, 141], "vari": 9, "variabl": [9, 32, 75, 76, 77, 95, 96, 102, 107, 108, 110, 111, 119, 124, 144, 181, 287, 299, 316, 317, 320, 326, 327, 328, 332, 337], "varianc": [24, 25, 26, 102, 111, 117, 124, 125, 141, 158, 204, 287, 299, 316, 323, 341, 400], "variant": 92, "variat": [64, 99, 320, 340, 399], "variou": [5, 76, 80, 84, 93, 97, 104, 111, 120, 130, 171, 197, 239, 269, 281, 302, 316, 324, 327, 328, 332, 334, 336, 340, 347, 398], "vast": 347, "vdlist": [77, 111, 258, 400], "ve": 6, "vector": [76, 97, 110, 111, 117, 119, 125, 160, 302, 316, 323, 337, 340, 345], "vegg": 94, "vei": 75, "vel": 329, "velopp": [94, 318], "venv": [88, 90], "verb": 9, "verbos": [9, 19, 21, 23, 382], "veri": [6, 7, 9, 10, 14, 22, 80, 84, 86, 89, 92, 320, 321, 322, 324, 329, 337, 340, 344, 349], "verifi": [2, 4, 7], "versa": 9, "versicolor": 24, "version": [0, 2, 7, 10, 12, 14, 26, 48, 77, 84, 85, 86, 87, 88, 90, 91, 92, 101, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 142, 161, 235, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 276, 327, 331, 347, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "versu": [7, 33, 320], "vertic": [51, 111, 206, 220, 223, 226, 227, 228, 229, 324, 337, 340], "vi": [2, 22], "via": [7, 88, 90, 94, 111, 117, 186, 318], "vibrat": [140, 320], "vice": 9, "view": [6, 46, 51, 89, 111, 121, 161, 316, 334, 337, 347], "view_init": 24, "viginica": 24, "vijaysekhar": 94, "vilmin": 340, "vimont": 94, "vincent": 94, "violat": 23, "violet": [51, 76], "virginica": 24, "viridi": [117, 119, 337, 338], "virtual": [88, 90, 328, 332], "virtualmachineplatform": 87, "viru": 2, "visibl": [94, 206, 337, 338], "visual": [6, 9, 23, 92, 93, 121, 323, 325, 326, 349], "vladimir": 94, "vmax": [119, 337], "vmin": [119, 337], "vogt": 94, "void": 324, "voigt": [140, 300, 320], "voigtmodel": [76, 140, 320], "vollmer": 94, "volt": [40, 111, 249], "voluceau": 2, "volum": [87, 118], "vscode": 15, "vshift": [111, 220, 223, 227, 228, 229], "vt": 125, "vz0466": [25, 43, 91, 325, 349], "vz0467": [43, 91, 325, 349], "vz0471": 25, "vz0512": 25, "vz0517": 25, "vz0520": [43, 91, 325, 349], "vz0521": [43, 91, 325, 349], "w": [18, 75, 94, 99, 109, 111, 114, 115, 119, 121, 143, 179, 184, 185, 221, 222, 224, 225, 230, 231, 232, 316, 324, 327, 336], "w1": [109, 115], "w3c": 92, "w_init": 102, "wa": [2, 6, 22, 39, 92, 96, 100, 111, 163, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 322, 327, 329, 332, 349, 354, 357, 358, 362, 392, 396, 397, 399, 400], "waal": 94, "wai": [0, 6, 7, 9, 10, 11, 12, 39, 55, 86, 88, 89, 90, 93, 94, 100, 111, 177, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 317, 327, 331, 332, 334, 337, 340, 341, 349, 378, 398], "waiver": 2, "walczak": 94, "wang": 94, "want": [5, 6, 7, 9, 10, 29, 38, 39, 71, 85, 86, 87, 88, 90, 92, 95, 97, 99, 111, 119, 130, 141, 160, 183, 192, 284, 291, 320, 325, 329, 331, 332, 333, 334, 337, 338, 339, 340, 341, 347, 349], "war": 2, "warg": 100, "warm": 116, "warm_start": [97, 101, 102, 107, 109, 110, 114, 115, 116, 117, 119, 124, 125], "warn": [7, 23, 24, 43, 75, 80, 91, 97, 101, 102, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 158, 269, 272, 281, 295, 301, 302, 322, 327, 328, 329, 333, 334, 336, 337, 339, 340, 344, 345, 346, 348, 357, 363, 385, 390, 391], "warning_": 48, "warrant": [2, 324], "warranti": 2, "wassim": 94, "water": 2, "waterfal": [111, 222, 231, 232, 337, 354], "watt": 121, "wavelength": [5, 18, 19, 21, 22, 26, 29, 39, 40, 95, 111, 249, 316, 322, 323, 326, 340], "wavenumb": [17, 20, 38, 39, 40, 43, 48, 64, 91, 95, 98, 99, 111, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 249, 320, 324, 325, 329, 334, 337, 340, 346, 347, 349], "wdf": [48, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 399], "we": [3, 4, 5, 6, 7, 9, 10, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 80, 83, 84, 85, 88, 89, 90, 91, 92, 99, 111, 130, 141, 143, 145, 147, 154, 162, 165, 170, 174, 175, 179, 183, 184, 185, 188, 192, 201, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 239, 249, 250, 264, 266, 270, 273, 284, 291, 298, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349, 373], "web": [6, 10, 92, 331, 333, 337], "webbook": [111, 164, 376], "websit": [2, 22, 43, 86], "weckhuysen": 94, "wed": [25, 43, 91, 325, 349], "weight": [64, 109, 110, 111, 115, 119, 142, 204, 316, 337, 347], "welcom": [6, 12, 14], "weleas": 328, "well": [2, 6, 10, 14, 21, 44, 88, 89, 90, 111, 119, 171, 322, 323, 328, 337], "were": [2, 6, 33, 107, 110, 111, 116, 125, 320, 329, 337, 348, 362, 397, 399], "wert": [111, 302, 347], "wh": 114, "whan": 316, "what": [3, 6, 9, 10, 14, 51, 76, 88, 91, 111, 161, 317, 320, 329, 332, 340, 343, 349, 351], "whatev": [6, 11, 87, 88, 90, 95, 111, 332], "whatsnew": 387, "whatsoev": 2, "when": [0, 2, 5, 6, 7, 9, 10, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 84, 85, 87, 96, 97, 99, 101, 102, 103, 104, 107, 109, 110, 111, 114, 115, 116, 117, 119, 120, 124, 125, 130, 135, 142, 159, 160, 171, 172, 180, 196, 199, 206, 216, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 270, 281, 284, 316, 320, 322, 324, 327, 328, 329, 333, 334, 337, 339, 340, 342, 346, 347, 349, 356, 360, 364, 378, 383, 385, 392, 394, 399, 400], "whenev": [4, 5, 111, 119, 130, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 338], "where": [2, 5, 6, 7, 9, 11, 15, 47, 48, 64, 75, 76, 77, 80, 87, 90, 98, 99, 100, 101, 102, 104, 107, 109, 110, 111, 113, 114, 115, 116, 117, 119, 120, 121, 124, 125, 135, 143, 144, 146, 165, 169, 172, 178, 179, 181, 183, 184, 185, 196, 200, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 269, 281, 284, 287, 299, 302, 303, 304, 306, 316, 317, 320, 325, 328, 334, 335, 337, 339, 340, 344, 345, 348], "wherebi": 322, "whether": [2, 6, 84, 89, 96, 97, 99, 100, 107, 109, 110, 111, 115, 116, 119, 125, 131, 134, 161, 163, 171, 196, 251, 258, 322, 323, 337, 346], "which": [2, 4, 5, 6, 9, 10, 12, 17, 22, 24, 40, 55, 61, 64, 75, 76, 80, 84, 86, 88, 89, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 107, 110, 111, 114, 115, 116, 117, 118, 119, 120, 124, 125, 130, 131, 132, 133, 134, 141, 142, 143, 145, 147, 148, 149, 150, 153, 154, 155, 158, 162, 165, 167, 170, 172, 173, 174, 175, 177, 179, 180, 183, 184, 185, 186, 188, 192, 199, 201, 202, 204, 205, 214, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 236, 238, 264, 266, 267, 269, 278, 281, 283, 284, 287, 288, 297, 298, 299, 302, 311, 316, 317, 320, 322, 323, 324, 326, 328, 329, 331, 332, 334, 337, 338, 340, 341, 345, 346, 347, 349, 373, 394, 396, 397, 398], "while": [9, 10, 24, 84, 87, 92, 96, 109, 110, 115, 316, 322, 323, 326, 328, 329, 337, 340, 347], "whitak": [68, 94, 111, 159, 341, 352, 393], "white": [206, 337], "whitegrid": 337, "whiten": [102, 117, 400], "whiten_solv": 102, "whitespac": 337, "whittak": [70, 72, 73, 104, 111, 239, 269, 281, 319, 343, 398], "whnever": [111, 303, 304, 306], "who": [2, 331], "whole": [2, 43, 76, 86, 111, 163, 320, 324, 340], "whose": [2, 102, 107, 110, 111, 114, 116, 117, 119, 124, 125, 169, 204, 299], "why": [4, 6, 7, 9, 14, 89, 93, 320, 373], "wich": [23, 24], "wide": 92, "widget": [86, 98, 337, 352, 376, 381, 393], "width": [24, 32, 51, 75, 76, 80, 94, 97, 111, 140, 171, 178, 183, 200, 206, 220, 223, 226, 227, 228, 229, 282, 300, 318, 320, 336, 337], "width_height": [75, 324], "wiggl": 337, "wiki": [7, 337], "wikipedia": [337, 347], "wild": 332, "wilei": 94, "wilk": [94, 111, 245, 329], "wilson": 94, "windig": [94, 124], "window": [6, 7, 59, 62, 73, 80, 84, 86, 88, 89, 91, 93, 97, 104, 111, 143, 159, 165, 171, 179, 183, 184, 185, 215, 237, 239, 249, 250, 258, 269, 280, 281, 282, 284, 302, 303, 319, 324, 328, 329, 331, 341, 343, 344, 363, 368, 377], "window_length": [91, 104, 111, 171, 269, 281], "wire": [42, 49, 57, 111, 117, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 319, 399], "wise": [99, 111, 117, 128, 129, 132, 133, 202, 205, 345], "wish": [111, 161, 331], "with_transpos": [206, 212, 233], "within": [2, 4, 99, 111, 135, 251, 322, 324, 332, 333], "without": [2, 7, 9, 47, 86, 92, 98, 104, 111, 154, 166, 170, 188, 201, 239, 241, 249, 250, 266, 269, 316, 317, 322, 324, 327, 332, 337, 338, 340, 346, 373], "wittaker_smooth_licens": [111, 302], "wl": 324, "wlen": [75, 111, 171, 324], "wodger": [40, 111, 113, 120, 249, 292, 328], "won": [6, 24, 84, 324], "word": [2, 9, 102, 107, 110, 114, 116, 117, 119, 124, 125, 333], "wordpress": 322, "work": [0, 1, 2, 7, 11, 13, 18, 20, 39, 43, 55, 64, 76, 83, 84, 86, 87, 88, 90, 92, 97, 111, 116, 139, 158, 163, 220, 223, 227, 228, 229, 302, 321, 328, 329, 331, 332, 334, 336, 337, 343, 347, 350, 352, 354, 356, 357, 359, 364, 367, 373, 377, 378, 384, 391, 396, 399, 400], "workflow": [6, 7, 10, 93, 361, 366], "workspac": [90, 331], "worldwid": 2, "wors": [109, 115, 119], "worth": [7, 10, 14, 324, 329, 337], "worthwhil": 332, "would": [7, 9, 20, 23, 33, 39, 64, 71, 102, 107, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 163, 322, 324, 340, 346, 347, 392], "wp": [43, 109, 115, 394], "wr": 324, "wrap": [9, 104, 111, 119, 121, 269, 281], "wrapper": [98, 102, 111, 269, 278, 297, 329, 345, 347], "wrapper1": 336, "write": [2, 5, 6, 10, 13, 87, 92, 111, 112, 113, 120, 161, 304, 306, 320, 328, 329, 331, 339, 340, 345, 375, 392], "write_csv": [111, 371, 400], "write_excel": [111, 309], "write_jcamp": [111, 329], "write_jdx": 329, "write_mat": 111, "write_matlab": [111, 307], "write_xl": 111, "writer": [329, 337, 354], "written": [2, 10, 125, 329, 332], "wrong": [14, 327, 388], "wrongli": [357, 397], "wrt": [109, 115, 327], "wsl": 87, "wsl2": 87, "wspace": 206, "www": [0, 10, 29, 43, 88, 90, 94, 111, 306, 326, 327, 329, 332, 340], "x": [1, 5, 7, 18, 19, 20, 21, 22, 24, 25, 26, 29, 33, 38, 39, 40, 43, 45, 51, 68, 71, 75, 76, 77, 80, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 110, 111, 114, 115, 116, 117, 119, 124, 125, 130, 141, 142, 143, 145, 148, 149, 150, 154, 155, 158, 162, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 184, 185, 187, 188, 200, 201, 204, 206, 214, 217, 218, 220, 223, 227, 228, 229, 234, 239, 240, 241, 247, 248, 249, 250, 251, 254, 255, 256, 257, 261, 264, 266, 277, 278, 284, 286, 287, 288, 291, 297, 298, 299, 306, 310, 311, 316, 317, 318, 320, 322, 323, 324, 325, 326, 328, 329, 334, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 349, 371, 372, 392, 399], "x1": [68, 340, 345], "x11": 92, "x2": [68, 322, 329, 340, 345], "x3": [68, 340], "x4": [68, 340], "x5": 340, "x6": 340, "x64": 87, "x7": 340, "x8": 340, "x9b": 22, "x_": [20, 39, 326], "x_bckg_yyybg": [111, 240], "x_hat": [22, 101, 102, 107, 110, 114, 116, 117, 119, 124, 125], "x_hat_a": 19, "x_hat_b": 19, "x_load": 326, "x_origin": [102, 107, 110, 114, 116, 117, 119, 124, 125], "x_revers": [111, 221, 222, 224, 225, 230, 231, 232], "x_samplename_yyi": [111, 240], "x_score": [119, 326], "x_test": [29, 326], "x_train": [29, 326], "x_transform": [102, 107, 110, 114, 116, 117, 119, 124, 125], "xand": 114, "xarg": 7, "xarrai": [3, 111, 295], "xavier": 94, "xaxi": [111, 249, 397], "xc": [80, 340], "xcm": 80, "xcode": [6, 89], "xcorr": 325, "xcp": 80, "xdist": 7, "xfail": 7, "xhan": 347, "xiang": 94, "xl": 93, "xlabel": [17, 18, 20, 26, 33, 38, 51, 61, 111, 220, 223, 227, 228, 229, 320, 323, 325, 326], "xlim": [75, 77, 111, 220, 223, 227, 228, 229, 339, 342, 344, 347, 348], "xm": [71, 347], "xn": 347, "xsg": 347, "xsm": 347, "xsm2": 347, "xtick_bottom": 337, "xtick_color": 337, "xtick_direct": 337, "xtick_labels": 337, "xtick_major_bottom": 337, "xtick_major_pad": 337, "xtick_major_s": 337, "xtick_major_top": 337, "xtick_major_width": 337, "xtick_minor_bottom": 337, "xtick_minor_pad": 337, "xtick_minor_s": 337, "xtick_minor_top": 337, "xtick_minor_vis": 337, "xtick_minor_width": 337, "xtick_top": 337, "xw": 347, "xwhit": 347, "xx": [111, 164, 337], "xxx": 5, "xxxx": [111, 164], "xxxxxxx": [111, 164], "xy": [48, 75, 76, 324, 337], "xytext": [75, 76, 324, 337], "y": [5, 6, 17, 19, 20, 22, 24, 25, 26, 29, 32, 33, 38, 39, 43, 44, 45, 75, 76, 77, 91, 94, 96, 98, 99, 100, 101, 102, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 124, 125, 141, 142, 155, 162, 166, 169, 171, 172, 176, 204, 206, 214, 239, 240, 241, 247, 248, 249, 250, 251, 254, 255, 256, 257, 261, 286, 287, 288, 291, 299, 310, 311, 316, 318, 320, 322, 323, 324, 325, 326, 328, 334, 336, 337, 338, 345, 346, 347, 349, 356, 385, 400], "y_event": 96, "y_hat": 119, "y_load": 326, "y_pred": [109, 115, 119], "y_revers": [111, 222, 231, 232, 337], "y_score": [119, 326], "y_std": 326, "y_test": [29, 326], "y_test_hat": 326, "y_train": [29, 326], "y_transform": [110, 119], "y_true": [109, 115, 119], "yaml": 6, "ye": 90, "year": 0, "yellow": 333, "yet": [6, 15, 87, 89, 92, 111, 283, 329, 331, 332, 334, 338], "yield": [7, 324, 327], "ylabel": [17, 18, 20, 26, 33, 38, 51, 61, 111, 220, 223, 227, 228, 229, 320, 323, 325, 326], "ylim": [75, 76, 111, 117, 220, 223, 227, 228, 229, 320, 324, 347], "yml": [6, 89, 354], "yonesi": [94, 318], "you": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 40, 43, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 102, 111, 119, 160, 161, 317, 320, 321, 325, 328, 329, 331, 332, 333, 334, 337, 344, 346, 348, 349, 357, 388], "your": [0, 7, 8, 10, 13, 15, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 102, 111, 270, 328, 329, 331, 332, 333, 334, 340, 344], "youranacondafold": 90, "yourdefaultpath": 90, "yournam": 6, "yourself": [6, 7], "yourworkingfold": 90, "yscale": [17, 18], "ytick_color": 337, "ytick_direct": 337, "ytick_labels": 337, "ytick_left": 337, "ytick_major_left": 337, "ytick_major_pad": 337, "ytick_major_right": 337, "ytick_major_s": 337, "ytick_major_width": 337, "ytick_minor_left": 337, "ytick_minor_pad": 337, "ytick_minor_right": 337, "ytick_minor_s": 337, "ytick_minor_vis": 337, "ytick_minor_width": 337, "ytick_right": 337, "yu": 94, "yukihiro": 94, "yukiteru": 94, "yyi": [111, 240], "z": [38, 45, 48, 94, 99, 100, 111, 172, 206, 286, 318, 329, 334, 337, 345], "z2": 329, "z3": 329, "zapf": 337, "zden\u011bk": 94, "zenodo": [0, 94, 318], "zeolit": [23, 94, 318], "zeorslik": [111, 311], "zero": [18, 111, 114, 131, 142, 143, 154, 166, 167, 169, 176, 177, 201, 213, 214, 217, 218, 220, 223, 227, 228, 229, 266, 287, 299, 311, 312, 313, 314, 315, 325, 334, 343, 344], "zerodivisionerror": [111, 142], "zeros_lik": [111, 166, 167, 176, 177, 213, 214, 310], "zeroto": 114, "zeynep": 94, "zf": [111, 344], "zf_auto": 111, "zf_doubl": 111, "zf_size": [111, 342], "zhang": 94, "zholobenko": [94, 316], "zip": [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 32, 33, 38, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 111, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 354, 394], "zlabel": [111, 220, 223, 227, 228, 229], "zlim": [60, 61, 111, 220, 223, 227, 228, 229, 337, 339], "zmqshell": 347, "zoom": [75, 324, 337, 344, 347], "zo\u00e9": 94, "zpd": 344, "zscore": [111, 159], "zshrc": 88, "zuberbuehl": [94, 101, 316], "\u00b5": [61, 75, 77, 336, 339, 342], "\u00b9": [20, 39, 43, 75, 91, 111, 142, 204, 324, 325, 329, 334, 344, 346, 349], "\u00e0": 94, "\u00e1": 94, "\u00e7": 94, "\u00e9": 94, "\u00ecncrement": 99, "\u00f3": 94, "\u00f8": 94, "\u0161tefan": 94, "\u03bb": 347, "\u2075": 334}, "titles": ["Citing  <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Acknowledgments", "SpectroChempy License", "See also", "SpectroChemPy code style guide", "Adding a Reader", "Contributing to SpectroChemPy", "Contributing to the code", "Contributing to specific parts of the code", "SpectroChemPy Docstring Guide", "Contributing to the documentation", "Building Docker images", "Adding your examples to the gallery", "Developer\u2019s Guide", "Reporting Issues", "Editors", "Decomposition", "EFA example", "EFA (Keller and Massart original example)", "FastICA example", "2D-IRIS analysis example", "MCR-ALS example (adapted from Jaumot et al. 2005)", "MCR-ALS with kinetic constraints", "NMF analysis example", "PCA example (iris dataset)", "PCA analysis example", "SIMPLISMA example", "Computation times", "Cross-decomposition", "PLS regression example", "Computation times", "Curvefitting", "Fitting 1D dataset", "Solve a linear equation using LSTSQ", "Computation times", "Analysis NDDataset", "Computation times", "How to use NDDataset", "NDDataset creation and plotting example", "NDDataset coordinates example", "Units manipulation examples", "Computation times", "Import / Export", "Reading datasets", "Loading an IR (omnic SPG) experimental file", "Loading Bruker OPUS files", "Loading of experimental 1D NMR data", "Loading RAMAN experimental file", "Reading Renishaw WiRE files", "Computation times", "Plotting datasets", "Using <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plot_multiple</span></code> to plot several datasets on the same figure", "Introduction to the plotting librairie", "Computation times", "Project Management", "Project creation", "Computation times", "Core functionalities", "Computation times", "Apodization", "Exponential window multiplication", "Sine bell and squared Sine bell window multiplication", "Computation times", "Baseline", "NDDataset baseline correction", "Computation times", "Denoising", "Denoising a 2D Raman spectrum", "Removing cosmic ray spikes from a Raman spectrum", "Computation times", "filtering", "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum", "Computation times", "Processing NDDataset", "Processing NMR datasets", "Analysis CP NMR spectra", "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)", "Processing Relaxation measurement", "Computation times", "Processing Raman datasets", "Processing RAMAN spectra", "Computation times", "Computation times", "Example\u2019s gallery", "Installation guide", "Install optional dependencies", "Install in Google Colaboratory (Colab)", "Install a Docker container", "Installation Guide for Mac OSX", "Installation from sources (master or develop versions)", "Installation Guide for Windows", "Overview", "Why <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>  ?", "Processing, analyzing and modeling spectroscopic data", "Bibliography", "Frequently asked questions (FAQ)", "spectrochempy.ActionMassKinetics", "spectrochempy.Baseline", "spectrochempy.BaselineCorrector", "spectrochempy.Coord", "spectrochempy.CoordSet", "spectrochempy.EFA", "spectrochempy.FastICA", "spectrochempy.FileSelector", "spectrochempy.Filter", "spectrochempy.II", "spectrochempy.IR", "spectrochempy.IRIS", "spectrochempy.IrisKernel", "spectrochempy.LSTSQ", "spectrochempy.MCRALS", "spectrochempy.NDDataset", "spectrochempy.NDDataset.save", "spectrochempy.NDDataset.save_as", "spectrochempy.NMF", "spectrochempy.NNLS", "spectrochempy.Optimize", "spectrochempy.PCA", "spectrochempy.PFR", "spectrochempy.PLSRegression", "spectrochempy.Project", "spectrochempy.Quantity", "spectrochempy.RI", "spectrochempy.RR", "spectrochempy.SIMPLISMA", "spectrochempy.SVD", "spectrochempy.Script", "spectrochempy.Unit", "spectrochempy.abs", "spectrochempy.absolute", "spectrochempy.align", "spectrochempy.all", "spectrochempy.amax", "spectrochempy.amin", "spectrochempy.any", "spectrochempy.arange", "spectrochempy.argmax", "spectrochempy.argmin", "spectrochempy.around", "spectrochempy.asls", "spectrochempy.asymmetricvoigtmodel", "spectrochempy.autosub", "spectrochempy.average", "spectrochempy.bartlett", "spectrochempy.basc", "spectrochempy.blackmanharris", "spectrochempy.clip", "spectrochempy.component", "spectrochempy.concatenate", "spectrochempy.conj", "spectrochempy.conjugate", "spectrochempy.coordmax", "spectrochempy.coordmin", "spectrochempy.copy", "spectrochempy.cs", "spectrochempy.cumsum", "spectrochempy.dc", "spectrochempy.debug_", "spectrochempy.denoise", "spectrochempy.despike", "spectrochempy.detrend", "spectrochempy.diag", "spectrochempy.diagonal", "spectrochempy.dot", "spectrochempy.download_nist_ir", "spectrochempy.em", "spectrochempy.empty", "spectrochempy.empty_like", "spectrochempy.error_", "spectrochempy.eye", "spectrochempy.fft", "spectrochempy.find_peaks", "spectrochempy.fromfunction", "spectrochempy.fromiter", "spectrochempy.fsh", "spectrochempy.fsh2", "spectrochempy.full", "spectrochempy.full_like", "spectrochempy.gaussianmodel", "spectrochempy.general_hamming", "spectrochempy.geomspace", "spectrochempy.get_baseline", "spectrochempy.get_loglevel", "spectrochempy.gm", "spectrochempy.hamming", "spectrochempy.hann", "spectrochempy.ht", "spectrochempy.identity", "spectrochempy.ifft", "spectrochempy.imag", "spectrochempy.info_", "spectrochempy.interpolate", "spectrochempy.is_units_compatible", "spectrochempy.ito", "spectrochempy.ito_base_units", "spectrochempy.ito_reduced_units", "spectrochempy.linspace", "spectrochempy.load", "spectrochempy.load_iris", "spectrochempy.logspace", "spectrochempy.lorentzianmodel", "spectrochempy.ls", "spectrochempy.max", "spectrochempy.mc", "spectrochempy.mean", "spectrochempy.min", "spectrochempy.multiplot", "spectrochempy.multiplot_image", "spectrochempy.multiplot_lines", "spectrochempy.multiplot_map", "spectrochempy.multiplot_scatter", "spectrochempy.multiplot_stack", "spectrochempy.multiplot_with_transposed", "spectrochempy.ones", "spectrochempy.ones_like", "spectrochempy.pathclean", "spectrochempy.pipe", "spectrochempy.pk", "spectrochempy.pk_exp", "spectrochempy.plot", "spectrochempy.plot_1D", "spectrochempy.plot_2D", "spectrochempy.plot_3D", "spectrochempy.plot_bar", "spectrochempy.plot_image", "spectrochempy.plot_map", "spectrochempy.plot_multiple", "spectrochempy.plot_pen", "spectrochempy.plot_scatter", "spectrochempy.plot_scatter_pen", "spectrochempy.plot_stack", "spectrochempy.plot_surface", "spectrochempy.plot_waterfall", "spectrochempy.plot_with_transposed", "spectrochempy.polynomialbaseline", "spectrochempy.ps", "spectrochempy.ptp", "spectrochempy.qsin", "spectrochempy.random", "spectrochempy.read", "spectrochempy.read_carroucell", "spectrochempy.read_csv", "spectrochempy.read_ddr", "spectrochempy.read_dir", "spectrochempy.read_hdr", "spectrochempy.read_jcamp", "spectrochempy.read_labspec", "spectrochempy.read_mat", "spectrochempy.read_matlab", "spectrochempy.read_omnic", "spectrochempy.read_opus", "spectrochempy.read_quadera", "spectrochempy.read_sdr", "spectrochempy.read_soc", "spectrochempy.read_spa", "spectrochempy.read_spc", "spectrochempy.read_spg", "spectrochempy.read_srs", "spectrochempy.read_topspin", "spectrochempy.read_wdf", "spectrochempy.read_wire", "spectrochempy.read_zip", "spectrochempy.real", "spectrochempy.remove_masks", "spectrochempy.roll", "spectrochempy.round", "spectrochempy.rs", "spectrochempy.run_all_scripts", "spectrochempy.run_script", "spectrochempy.savgol", "spectrochempy.set_complex", "spectrochempy.set_hypercomplex", "spectrochempy.set_loglevel", "spectrochempy.set_nmr_context", "spectrochempy.set_quaternion", "spectrochempy.show", "spectrochempy.show_versions", "spectrochempy.sigmoidmodel", "spectrochempy.simpson", "spectrochempy.sine", "spectrochempy.sinm", "spectrochempy.smooth", "spectrochempy.snip", "spectrochempy.sort", "spectrochempy.sp", "spectrochempy.squeeze", "spectrochempy.stack", "spectrochempy.std", "spectrochempy.sum", "spectrochempy.swapdims", "spectrochempy.take", "spectrochempy.to", "spectrochempy.to_array", "spectrochempy.to_base_units", "spectrochempy.to_reduced_units", "spectrochempy.to_xarray", "spectrochempy.transpose", "spectrochempy.trapezoid", "spectrochempy.triang", "spectrochempy.var", "spectrochempy.voigtmodel", "spectrochempy.warning_", "spectrochempy.whittaker", "spectrochempy.write", "spectrochempy.write_csv", "spectrochempy.write_excel", "spectrochempy.write_jcamp", "spectrochempy.write_mat", "spectrochempy.write_matlab", "spectrochempy.write_xls", "spectrochempy.zeros", "spectrochempy.zeros_like", "spectrochempy.zf", "spectrochempy.zf_auto", "spectrochempy.zf_double", "spectrochempy.zf_size", "Glossary", "Public API reference", "Papers citing <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Computation times", "Fitting", "Analysis", "MCR ALS", "Principal Component Analysis", "Peak Maxima Finding", "Peak Integration", "Partial Least Squares Regression (PLSRegression)", "API Configuration", "Import Data", "Import IR Data", "Import &amp; Export", "Starting Jupyter lab", "Introduction", "Markdown Cheat Sheet", "The NDDataset object", "Core objects", "Project management", "Plotting", "Alignment of datasets", "Apodization", "Baseline corrections", "Denoising", "One-dimensional (1D) Fourier transformation", "Processing", "FTIR interferogram processing", "Mathematical operations", "Slicing NDDatasets", "Filtering, Smoothing and Denoising", "Time domain baseline correction (NMR)", "Basic transformations", "What\u2019s new in revision", "Release notes", "What\u2019s new in revision 0.6.11.dev", "Revisions 0.1.0 to 0.1.19", "What\u2019s new in revision 0.2.0", "What\u2019s new in revision 0.2.10 [2021-02-14]", "What\u2019s new in revision 0.2.11 [2021-02-17]", "What\u2019s new in revision 0.2.12 [2021-02-23]", "What\u2019s new in revision 0.2.13 [2021-02-23]", "What\u2019s new in revision 0.2.14 [2021-02-25]", "What\u2019s new in revision 0.2.15 [2021-03-29]", "What\u2019s new in revision 0.2.16 [2021-11-11]", "What\u2019s new in revision 0.2.17 [2021-11-29]", "What\u2019s new in revision 0.2.18 [2022-01-05]", "What\u2019s new in revision 0.2.21 [2022-01-09]", "What\u2019s new in revision 0.2.22 [2022-01-10]", "What\u2019s new in revision 0.2.23 [2022-01-16]", "What\u2019s new in revision 0.2.4", "What\u2019s new in revision 0.2.5", "What\u2019s new in revision 0.2.6", "What\u2019s new in revision 0.2.7", "What\u2019s new in revision 0.2.8", "What\u2019s new in revision 0.2.9 [2021-11-29]", "What\u2019s new in revision 0.3.0 [2022-01-20]", "What\u2019s new in revision 0.3.1 [2022-01-21]", "What\u2019s new in revision 0.3.2 [2022-01-31]", "What\u2019s new in revision 0.3.3 [2022-03-9]", "What\u2019s new in revision 0.4.1 [2022-03-14]", "What\u2019s new in revision 0.4.10 [2023-01-07]", "What\u2019s new in revision 0.4.2 [2022-03-16]", "What\u2019s new in revision 0.4.3 [2022-03-20]", "What\u2019s new in revision 0.4.4 [2022-03-22]", "What\u2019s new in revision 0.4.5 [2022-04-09]", "What\u2019s new in revision 0.4.6 [2022-05-16]", "What\u2019s new in revision 0.4.7 [2022-05-16]", "What\u2019s new in revision 0.4.9 [2023-01-05]", "What\u2019s new in revision 0.5.0 [2023-01-11]", "What\u2019s new in revision 0.5.1", "What\u2019s new in revision 0.5.2", "What\u2019s new in revision 0.5.3", "What\u2019s new in revision 0.5.4", "What\u2019s new in revision 0.5.5", "What\u2019s new in revision 0.6.1", "What\u2019s new in revision 0.6.10", "What\u2019s new in revision 0.6.2", "What\u2019s new in revision 0.6.3", "What\u2019s new in revision 0.6.4", "What\u2019s new in revision 0.6.5", "What\u2019s new in revision 0.6.6", "What\u2019s new in revision 0.6.7", "What\u2019s new in revision 0.6.8", "What\u2019s new in revision 0.6.9"], "titleterms": {"": [13, 83, 93, 95, 332, 336, 345, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "0": [351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "01": [363, 364, 365, 366, 373, 374, 375, 378, 385, 386], "02": [355, 356, 357, 358, 359], "03": [360, 376, 377, 379, 380, 381], "04": 382, "05": [363, 383, 384, 385], "07": 378, "09": [364, 382], "1": [5, 9, 18, 334, 351, 353, 374, 377, 387, 392], "10": [355, 365, 378, 393], "11": [352, 356, 361, 362, 372, 386], "12": 357, "13": 358, "14": [355, 359, 377], "15": 360, "16": [361, 366, 379, 383, 384], "17": [356, 362], "18": 363, "19": 353, "1d": [32, 46, 80, 334, 337, 342], "2": [5, 9, 18, 334, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 375, 379, 388, 394], "20": [373, 380], "2005": 21, "2021": [318, 355, 356, 357, 358, 359, 360, 361, 362, 372], "2022": [318, 363, 364, 365, 366, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384], "2023": [318, 378, 385, 386], "2024": 318, "2025": 318, "21": [364, 374], "22": [365, 381], "23": [357, 358, 366], "25": 359, "29": [360, 362, 372], "2d": [20, 67, 76, 77, 80, 341], "3": [5, 9, 18, 351, 373, 374, 375, 376, 380, 389, 395], "31": 375, "4": [5, 9, 18, 351, 367, 377, 378, 379, 380, 381, 382, 383, 384, 385, 390, 396], "5": [9, 351, 368, 382, 386, 387, 388, 389, 390, 391, 397], "6": [9, 351, 352, 369, 383, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "7": [9, 370, 384, 399], "8": [371, 400], "9": [372, 376, 385, 401], "A": [322, 324, 328], "Be": 6, "NOT": 92, "One": 342, "The": [317, 322, 329, 334, 340, 347], "To": 322, "With": 20, "ab": [128, 345], "about": [9, 10, 322, 332, 334], "abscissa": 95, "absolut": [129, 345], "absorpt": 18, "acknowledg": 1, "acquisit": 329, "actionmasskinet": 96, "ad": [5, 12, 334, 337], "adapt": 21, "add": [5, 345], "addit": 87, "advanc": 340, "affect": 345, "al": [21, 22, 322], "algebra": 317, "alia": [5, 345], "align": [130, 317, 338], "all": 131, "along": 338, "also": [3, 9, 345], "altern": 317, "amax": 132, "ambigu": 322, "amin": 133, "an": [44, 92, 324, 336], "analys": [76, 77], "analysi": [18, 20, 23, 25, 35, 75, 91, 317, 321, 323], "analyz": 93, "angl": 345, "ani": 134, "annot": 337, "anoth": 328, "api": [75, 76, 77, 317, 327, 332, 337, 340, 347], "apod": [59, 73, 317, 339], "approach": 340, "ar": 95, "arang": 135, "arcco": 345, "arccosh": 345, "arcsin": 345, "arcsinh": 345, "arctan": 345, "arctanh": 345, "argmax": 136, "argmin": 137, "arithmet": 345, "around": 138, "arrai": 345, "ascend": 95, "ask": 95, "asl": 139, "aspect": 337, "assess": 322, "asymmetr": 80, "asymmetricvoigtmodel": 140, "attribut": 334, "augment": 322, "autom": 324, "automat": [6, 20], "autosub": 141, "averag": [142, 347], "axi": 329, "b": 329, "backward": 7, "bartlett": 143, "basc": [144, 340], "baselin": [63, 64, 73, 76, 80, 91, 97, 317, 320, 340, 342, 348], "baselinecorrector": 98, "basic": [317, 322, 349], "behaviour": 324, "bell": 61, "between": [40, 334], "bibliographi": 94, "binari": 345, "black": 7, "blackmanharri": 145, "box": [328, 333], "branch": [6, 10], "break": [333, 350, 352, 377, 386, 392, 393, 394, 396, 400], "broaden": 342, "bruker": [45, 329], "bug": [350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401], "build": [10, 11], "bullet": 333, "c": 154, "calcul": 342, "cantera": 85, "case": 322, "cbrt": 345, "ceil": 345, "chang": [6, 7, 317, 337, 349, 350, 352, 377, 386, 392, 393, 394, 396, 400], "cheat": [331, 333], "check": [88, 90], "chromatogram": 18, "cite": [0, 318], "client": 6, "clip": [146, 317], "clone": 89, "co": 345, "code": [4, 5, 6, 7, 8, 95, 324, 340], "colab": 86, "colaboratori": 86, "color": 333, "commit": [6, 7], "comparison": 344, "compat": 7, "complet": 5, "complex": [317, 345], "compon": [147, 317, 323], "comput": [27, 30, 34, 36, 41, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 319], "concaten": 148, "concentr": 322, "conda": [88, 89, 90], "configur": [15, 322, 327, 337], "conj": 149, "conjug": 150, "constant": 340, "constraint": [22, 320], "constructor": 334, "contain": [11, 87], "content": [4, 5, 6, 7, 95, 317], "continu": 7, "contribut": [6, 7, 8, 10, 93], "control": [6, 15], "convent": 9, "convers": 345, "convert": 40, "convolut": 347, "coord": 99, "coordin": [20, 38, 39, 95, 317, 334, 346], "coordmax": 151, "coordmin": 152, "coordset": 100, "copi": [153, 334], "core": [57, 335], "correct": [64, 76, 80, 91, 317, 320, 340, 342, 348], "cosh": 345, "cosmic": [68, 341], "cp": 75, "creat": [5, 6, 11, 19, 21, 23, 40, 89, 317, 331, 334, 337], "creation": [38, 55, 317, 336], "credit": 93, "cross": [28, 35], "cumsum": 155, "curv": 317, "curvefit": [31, 35], "data": [5, 18, 38, 46, 77, 85, 86, 93, 317, 328, 329, 337, 339, 340, 345, 349], "datadir": 328, "dataset": [18, 19, 20, 21, 23, 24, 32, 38, 39, 40, 43, 50, 51, 57, 73, 74, 76, 79, 91, 317, 322, 323, 324, 326, 334, 337, 338, 345], "date": [329, 334], "dc": 156, "debug_": 157, "decomposit": [16, 28, 35, 317], "default": [324, 328, 337], "definit": 320, "deg2rad": 345, "delet": 6, "denois": [66, 67, 73, 80, 158, 317, 341, 347], "depend": [7, 85, 350, 352], "deprec": [350, 352, 379, 383, 392, 393, 394, 396, 398], "descend": 95, "design": 92, "despik": [159, 341], "determin": 322, "detrend": [80, 160, 340], "dev": 352, "develop": [6, 7, 13, 89], "diag": 161, "diagon": 162, "dialog": 328, "differ": [317, 322], "dimens": [317, 334, 338], "dimension": 342, "dimensionless": 345, "directori": 328, "displai": [91, 324], "divid": 345, "do": 4, "docker": [11, 87], "docstr": [9, 10], "doctest": 9, "document": [7, 10], "domain": [317, 342, 348], "dot": 163, "download_nist_ir": 164, "driven": 7, "dx": 329, "edit": 15, "editor": 15, "efa": [17, 18, 101, 322], "eiler": [71, 347], "element": 336, "em": 165, "emphasi": 333, "empti": 166, "empty_lik": 167, "environ": [6, 11, 89], "equat": [33, 320], "error": [6, 327], "error_": 168, "estim": 322, "et": 21, "evolv": [18, 317], "exampl": [9, 12, 17, 18, 19, 20, 21, 23, 24, 25, 26, 29, 38, 39, 40, 83, 85, 148, 158, 159, 160, 163, 165, 168, 170, 190, 198, 217, 219, 226, 230, 237, 239, 246, 248, 249, 250, 258, 259, 260, 268, 272, 280, 282, 284, 338, 340], "execut": [11, 87, 332], "exist": [317, 334], "exp": 345, "exp2": 345, "experiment": [44, 46, 47, 324], "explicit": 328, "expm1": 345, "exponenti": [60, 339], "export": [42, 57, 317, 329, 330], "extend": 9, "extern": [317, 333, 334], "ey": 169, "fab": 345, "factor": [18, 23, 317], "fail": 4, "faq": 95, "fastica": [19, 102], "featur": [350, 352, 354, 355, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 393, 394, 395, 396, 398, 399, 400], "fft": [170, 342], "figur": [51, 337], "file": [5, 43, 44, 45, 47, 48, 86, 95, 317, 328, 329], "fileselector": 103, "filetyp": 5, "fill": [317, 342], "filter": [70, 73, 104, 317, 341, 347], "find": [317, 320, 324], "find_peak": [171, 324], "first": 338, "fit": [19, 21, 23, 32, 76, 77, 317, 320], "fix": [6, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 382, 383, 384, 385, 387, 388, 389, 390, 391, 393, 394, 396, 397, 398, 399, 400, 401], "float": 345, "floor": 345, "floor_divid": 345, "font": 333, "fork": 6, "format": [5, 6, 329], "fourier": [317, 342], "frequent": 95, "from": [21, 43, 68, 89, 95, 317, 334, 336, 341], "fromfunct": 172, "fromit": 173, "fsh": 174, "fsh2": 175, "ftir": 344, "full": 176, "full_lik": 177, "function": [57, 317, 333, 334, 339, 345], "galleri": [12, 83], "gaussian": 339, "gaussianmodel": 178, "gener": [5, 6, 9, 18, 95, 327], "general_ham": 179, "geometr": 333, "geomspac": 180, "get": [9, 19, 93, 95, 322, 332, 336], "get_baselin": 181, "get_loglevel": 182, "git": [6, 89], "github": 6, "glossari": 316, "gm": 183, "go": 332, "golai": [71, 347], "good": 328, "googl": 86, "graphic": 333, "guess": 322, "gui": 6, "guid": [4, 9, 13, 84, 88, 90, 93, 332], "guidelin": 5, "ham": 184, "handl": 327, "hann": 185, "head": 333, "help": 322, "histori": 334, "horizont": 333, "how": [10, 37, 57, 95, 332, 340], "ht": 186, "hyperbol": 345, "hypercomplex": 345, "i": 346, "ident": 187, "ifft": 188, "ii": 105, "illustr": 322, "imag": [11, 189], "imaginari": 339, "import": [42, 43, 57, 75, 76, 77, 80, 317, 328, 329, 330, 334], "indent": 333, "independ": [317, 340], "index": [95, 317, 346], "influenc": 347, "info_": 190, "inform": [91, 322, 327], "initi": 322, "inner": 338, "input": 345, "insight": 334, "inspect": 324, "instal": [6, 11, 15, 84, 85, 86, 87, 88, 89, 90], "integ": 317, "integr": [7, 317, 325], "interact": 317, "interferogram": 344, "intern": 333, "interpol": [191, 317], "introduct": [52, 322, 323, 326, 332, 339], "invers": 317, "ir": [44, 106, 329], "iri": [20, 24, 91, 107], "iriskernel": 108, "is_units_compat": 192, "isfinit": 345, "isinf": 345, "isnan": 345, "issu": 14, "ito": 193, "ito_base_unit": 194, "ito_reduced_unit": 195, "jaumot": 21, "jcamp": 329, "join": 317, "jupyt": 331, "keep": 345, "keller": 18, "kinet": [22, 317], "l": 201, "lab": 331, "label": 334, "last": 338, "least": [80, 317, 320, 326], "librairi": 52, "licenc": 1, "licens": 2, "like": [317, 334], "line": [333, 342], "linear": [33, 317, 320, 340], "lineshap": 317, "link": 333, "linspac": 196, "list": [333, 345], "load": [19, 21, 22, 44, 45, 46, 47, 86, 197, 317, 323, 324, 326, 332, 336, 337], "load_iri": 198, "local": [11, 43, 89], "log": [7, 317, 345], "log10": 345, "log1p": 345, "log2": 345, "logic": 317, "logical_not": 345, "loglevel": 327, "logspac": 199, "lorentzian": 339, "lorentzianmodel": 200, "lstsq": [33, 109, 320], "mac": 88, "magnitud": [342, 345], "main": [91, 337], "make": [5, 6], "manag": [54, 57, 317, 336], "manipul": [40, 317], "manual": [20, 324], "mark": 4, "markdown": [331, 333], "mask": [317, 349], "massart": 18, "master": [10, 89], "math": 91, "mathemat": [317, 333, 345], "matplotlib": 337, "matrix": [18, 317], "max": 202, "maxima": 324, "maximum": 317, "mc": 203, "mcr": [21, 22, 322], "mcral": [110, 322], "mean": 204, "measur": 77, "median": 341, "merg": 6, "metadata": 5, "method": [317, 320, 324, 334, 338, 340, 341, 347], "min": 205, "minim": 322, "minimum": 317, "misc": 317, "miscellan": 317, "mix": 19, "mixtur": 317, "model": [21, 23, 77, 93, 317, 320, 340], "modul": 328, "monospac": 333, "more": [322, 324, 334], "move": 347, "multidimension": 334, "multipl": [60, 61, 339], "multipli": 345, "multiplot": 206, "multiplot_imag": 207, "multiplot_lin": 208, "multiplot_map": 209, "multiplot_scatt": 210, "multiplot_stack": 211, "multiplot_with_transpos": 212, "multivari": [317, 340], "nd": [38, 334], "ndataset": 317, "nddataset": [22, 35, 37, 38, 39, 57, 64, 73, 91, 111, 112, 113, 317, 320, 334, 335, 337, 340, 345, 346, 347], "neg": [317, 320, 345], "new": [20, 39, 331, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "next": 332, "nmd": 76, "nmf": [23, 114], "nmr": [46, 73, 74, 75, 76, 77, 342, 348], "nnl": [115, 320], "non": [317, 320], "note": [9, 333, 351], "notebook": 331, "number": [317, 322, 333, 345], "numer": 317, "numpi": [334, 345], "o": 328, "object": [19, 21, 23, 91, 317, 334, 335, 345], "offset": 317, "omnic": [44, 329, 344], "ones": 213, "ones_lik": 214, "onli": 345, "open": 92, "oper": [317, 345], "optim": [116, 317, 322], "optimis": 320, "option": [6, 7, 85, 324], "opu": [45, 329], "order": [95, 329], "origin": [18, 339], "osx": 88, "other": [2, 339, 340], "output": 337, "overview": [91, 337, 340], "own": 337, "p": 235, "paper": 318, "paramet": [9, 320, 322, 337], "part": 8, "parti": 1, "partial": [317, 326], "pass": 9, "path": 328, "pathclean": 215, "pathlib": 328, "pathnam": 328, "pca": [24, 25, 117, 322, 323], "peak": [76, 317, 320, 324, 325], "pep8": 7, "pfr": 118, "phase": 317, "pick": 76, "pip": [86, 88, 90], "pipe": 216, "pk": 217, "pk_exp": 218, "pl": 29, "platform": 92, "plot": [9, 19, 21, 23, 38, 50, 51, 52, 57, 91, 95, 219, 317, 324, 337, 339], "plot_1d": 220, "plot_2d": 221, "plot_3d": 222, "plot_bar": 223, "plot_imag": 224, "plot_map": 225, "plot_multipl": [51, 226], "plot_pen": 227, "plot_scatt": 228, "plot_scatter_pen": 229, "plot_stack": 230, "plot_surfac": 231, "plot_waterfal": 232, "plot_with_transpos": 233, "plsregress": [119, 326], "polish": 5, "polynomi": 340, "polynomialbaselin": 234, "power": [92, 342], "pr": 6, "practic": 328, "pre": 7, "prefer": [95, 337], "prepar": [6, 19, 23, 337], "preprocess": 342, "prerequisit": 84, "princip": [317, 323], "principl": 6, "process": [73, 74, 76, 77, 79, 80, 91, 93, 317, 333, 343, 344], "processor": [340, 347], "profil": [19, 322], "project": [54, 55, 57, 120, 317, 335, 336], "promin": 324, "properti": 324, "pseudo": 77, "ptp": 236, "public": 317, "pull": [5, 6], "pure": 322, "push": 6, "py": 5, "pytest": [4, 7], "python": [6, 7, 92], "qsin": 237, "qt": 85, "quantiti": [40, 121], "question": 95, "r": 266, "rad2deg": 345, "radian": 345, "rai": [68, 341], "raman": [47, 67, 68, 71, 73, 79, 80, 341], "random": 238, "rang": 317, "read": [43, 48, 239], "read_carroucel": 240, "read_csv": 241, "read_ddr": 242, "read_dir": 243, "read_hdr": 244, "read_jcamp": 245, "read_labspec": 246, "read_mat": 247, "read_matlab": 248, "read_omn": 249, "read_opu": 250, "read_quadera": 251, "read_sdr": 252, "read_soc": 253, "read_spa": 254, "read_spc": 255, "read_spg": 256, "read_sr": 257, "read_topspin": 258, "read_wdf": 259, "read_wir": 260, "read_zip": 261, "reader": 5, "reader_xxx": 5, "real": [262, 339, 342], "reciproc": 345, "reconstruct": 19, "refer": [93, 317], "regress": [29, 317, 326], "regular": 20, "rel": 328, "relat": 317, "relax": 77, "releas": 351, "remot": 43, "remov": [68, 336, 341], "remove_mask": 263, "renishaw": 48, "report": 14, "repositori": [6, 89], "request": [5, 6], "requir": [10, 345], "resolut": 317, "result": [21, 23], "return": [9, 345], "review": 6, "revis": [350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "ri": 122, "rint": 345, "roll": [264, 317], "rotat": 322, "round": [265, 317], "rr": 123, "rubberband": 340, "rule": 9, "run": [7, 323, 326], "run_all_script": 267, "run_script": 268, "same": [51, 337], "sampl": 5, "save": [95, 112, 336], "save_a": 113, "savgol": [269, 347], "savitki": 71, "savitzki": 347, "scienc": 92, "script": [126, 317, 320, 332, 335], "search": [20, 328], "section": 9, "see": [3, 9], "segment": 340, "select": [317, 337], "self": 317, "seri": 80, "set": [20, 39, 334], "set_complex": 270, "set_coordset": 334, "set_hypercomplex": 271, "set_loglevel": 272, "set_nmr_context": 273, "set_quaternion": 274, "sever": [51, 334, 337, 338, 340], "shape": 333, "share": 334, "sheet": [331, 333, 337], "shift": 339, "short": 9, "show": 275, "show_vers": 276, "sigmoidmodel": 277, "sign": 345, "signbit": 345, "simpl": 317, "simplisma": [26, 124], "simpson": 278, "simul": 18, "sin": 345, "sine": [61, 279, 339], "singl": 334, "singular": 317, "sinh": 345, "sinm": 280, "size": 347, "slice": [76, 91, 346], "smooth": [71, 80, 91, 281, 317, 347], "snip": 282, "snippet": [324, 340], "softwar": 92, "solut": 322, "solv": [33, 320], "solver": 317, "sort": [283, 317], "sourc": [15, 19, 89, 92, 317], "sp": 284, "spa": 329, "speci": 322, "specif": 8, "specifi": 95, "spectra": [18, 75, 76, 77, 80, 329, 341, 342], "spectral": [19, 322], "spectrochempi": [0, 2, 4, 6, 9, 10, 84, 86, 87, 89, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 332], "spectroscop": [93, 317], "spectrum": [67, 68, 71, 342], "spg": [44, 329], "spike": [68, 341], "split": 317, "sqrt": 345, "squar": [61, 80, 317, 320, 326, 345], "squeez": 285, "stack": 286, "standard": [7, 9], "start": [15, 93, 331, 332], "statist": 317, "std": 287, "step": 87, "studio": 15, "style": [4, 337], "subtract": 345, "success": 6, "suit": 7, "sum": [288, 317], "summari": [9, 334], "support": 329, "svd": 125, "swapdim": 289, "symbol": 333, "syntax": [320, 334], "system": 19, "tabl": [4, 5, 6, 7, 95, 317], "take": 290, "tan": 345, "tanh": 345, "test": [4, 5, 7, 18, 85], "thi": [89, 332], "third": 1, "time": [27, 30, 34, 36, 41, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 317, 319, 334, 342, 348], "tip": [6, 9], "titl": 337, "to_arrai": 292, "to_base_unit": 293, "to_reduced_unit": 294, "to_xarrai": 295, "todo": 335, "transform": [317, 342, 349], "transpos": [296, 317], "transposit": 349, "trapezoid": 297, "trend": 340, "triang": 298, "trigonometr": 345, "trunc": 345, "tutori": 93, "type": [9, 317, 337], "ufunc": 345, "unari": 345, "unidimension": 334, "unit": [40, 127, 317, 334, 345, 349], "unitless": 345, "univers": 345, "updat": [6, 10, 89, 350, 352], "upload": [20, 39], "us": [4, 7, 33, 37, 51, 57, 88, 90, 148, 158, 159, 160, 163, 165, 168, 170, 190, 198, 217, 219, 226, 230, 237, 239, 246, 248, 249, 250, 258, 259, 260, 268, 272, 280, 282, 284, 317, 320, 322, 328, 334, 337, 339, 340, 347], "usag": [95, 345], "user": [93, 332], "util": 317, "valu": 317, "var": 299, "version": [6, 89, 351], "visual": 15, "voigtmodel": 300, "warning_": 301, "what": [346, 350, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401], "where": [95, 332], "whittak": [71, 302, 347], "why": 92, "width": 324, "window": [60, 61, 87, 90, 337, 339, 347], "wire": 48, "without": 20, "work": [6, 340, 345], "write": [7, 9, 303, 332], "write_csv": 304, "write_excel": 305, "write_jcamp": 306, "write_mat": 307, "write_matlab": 308, "write_xl": 309, "xfail": 4, "y": 329, "yield": 9, "your": [5, 6, 9, 12, 337], "zero": [310, 317, 342], "zeros_lik": 311, "zf": 312, "zf_auto": 313, "zf_doubl": 314, "zf_size": 315}})