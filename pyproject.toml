[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools>=64", "setuptools-scm>=8", "wheel"]

[project]
authors = [
  {name = "Arnaud Travert", email = "contact@spectrochempy.fr"},
  {name = "Christian Fernandez", email = "christian.fernandez@ensicaen.fr"},
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Topic :: Utilities",
  "Topic :: Scientific/Engineering",
  "Topic :: Software Development :: Libraries",
  "Intended Audience :: Science/Research",
  "License :: CeCILL-B Free Software License Agreement (CECILL-B)",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "colorama",
  "dill",
  "docrep",
  "ipython",
  "jinja2",
  "numpy",
  "numpy-quaternion >= 2024.0.7",
  "matplotlib",
  "osqp",
  "pint",
  "pyyaml",
  "requests",
  "scikit-learn",
  "scipy",
  "setuptools-scm",
  "tzlocal",
  "xlrd",
]
description = "Processing, analysis and modelling Spectroscopic data for Chemistry with Python"
dynamic = ["version"]
keywords = ["spectroscopy", "chemistry", "data analysis"]
license = {text = "CeCILL-B FREE SOFTWARE LICENSE AGREEMENT"}
name = "spectrochempy"
readme = "README.md"
requires-python = ">=3.10"

[project.optional-dependencies]
build = ["setuptools", "setuptools_scm", "toml", "jinja2", "anaconda-client"]
cantera = ["cantera"]
dev = [
  "toml",
  "ruff",
  "pre-commit",
  "spectrochempy[interactive]",
  "spectrochempy[test]",
  "spectrochempy[docs]",
]
docs = [
  # "cffconvert @ git+https://github.com/citation-file-format/cffconvert@b6045d7",
  "ipykernel == 6.29.5",
  "ipywidgets == 8.1.5",
  "jsonschema == 4.23.0",
  "jupyter == 1.1.1",
  "jupyter-sphinx",
  "jupytext == 1.16.7",
  "nbconvert == 7.16.6",
  "nbformat == 5.10.4",
  "nbsphinx == 0.9.6",
  "numpydoc == 1.8.0",
  "pickleshare",
  "pypandoc == 1.15",
  "sphinx == 7.4.7",
  "sphinx-tabs == 3.4.7",
  "sphinx-copybutton == 0.5.2",
  "sphinx-design == 0.6.0",
  "sphinx-gallery == 0.19.0",
  "sphinx-rtd-theme == 3.0.2",
  "sphinxcontrib-bibtex == 2.6.3",
  "json5 == 0.10.0",
]
interactive = [
  "jupyter",
  "jupyterlab",
  "ipykernel",
  "ipyparallel",
  "nodejs",
  "jupyter_server",
]
test = [
  "coverage",
  "ipywidgets",
  "pyfakefs",
  "pytest",
  "pytest-cov",
  "pytest-doctestplus",
  "pytest-ruff",
  "pytest-mock",
  "numpydoc",
]

[project.urls]
documentation = "https://www.spectrochempy.fr/latest"
homepage = "https://www.spectrochempy.fr"
issues = "https://github.com/spectrochempy/spectrochempy/issues"
repository = "https://github.com/spectrochempy/spectrochempy"

[project.scripts]
show_versions = "spectrochempy.scripts.show_versions:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"spectrochempy.data" = [
  "fonts/*",
  "stylesheets/*",
  "databases/*",
  "*.json",
  "*.cff",
]

[tool.setuptools_scm]
local_scheme = "dirty-tag"

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
# Enable specific rules
ignore = [
  "E402", # Module level import not at top of file
  "E501", # Line too long
  "E731", # Do not assign a lambda expression
  "N801", # Class name should use CapWords convention
  "N802", # Function name should be lowercase
  "N803", # Argument name should be lowercase
  "N805", # First argument of a method should be named 'self'
  "N806", # Variable in function should be lowercase
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D104", # Missing doctring in public package
  "D105", # Missing docstring in magic method
  "D107", # Missing docstring in __init__
  "D203", # Incorrect blank line before class
  "D212", # Docstring should start on first line
  "D413", # Missing blank line after last section
  "D417", # Missing argument descriptions in the docstring
]
select = [
  "D", # pydocstyle
  "E", # pycodestyle errors
  "F", # pyflakes
  "I", # isort
  "N", # pep8-naming
  "UP", # pyupgrade
  "S", # bandit
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "T20", # flake8-print
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "W", # pycodestyle warnings  # "PERF", # perflint
  "PLC", # pylint conventions
  "TID252", # replace absolufy-imports
]

exclude = ["~*", "tests/**"] # Exclude files and directories.

[tool.ruff.lint.per-file-ignores]
"docs/sources/gettingstarted/*" = [
  "B018",
] # accept "useless expression" in *.ipynb or py:percent files.
"docs/sources/userguide/**/*" = [
  "B018",
  "T201",
  "N816",
] # accept "useless expression", "print", "mixed-case variables" in *.ipynb or py:percent files.
"src/spectrochempy/extern/brukeropus/**/*" = ["T201", "D"]

[tool.ruff.lint.isort]
force-single-line = true
known-first-party = ["spectrochempy"]

[tool.ruff.format]
indent-style = "space"
line-ending = "auto"
quote-style = "double"
skip-magic-trailing-comma = false

[tool.numpydoc_validation]
checks = [
  "all", # report on all checks, except the below
  "ES01",
  "EX01",
  "SA01",
  "ES01",
]
# remember to use single quotes for regex in TOML
exclude = [
  # don't report on objects that match any of these regex
  '\.undocumented_method$',
  '\.__repr__$',
]

[tool.doc8]
ignore = ["D001"]
ignore_path = ["docs/_build"]
max-line-length = 100
verbose = 1

[tool.pytest.ini_options]
addopts = ["--ignore=~*", "--doctest-plus", "-p no:warnings"]
doctest_optionflags = [
  "ELLIPSIS",
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
  "ALLOW_UNICODE",
  "ALLOW_BYTES",
]
doctest_plus = "enabled"
markers = ["slow: marks tests as slow (deselect with '-m \"not slow\"')"]
testpaths = ["tests"]

[tool.coverage.run]
source = ["src/spectrochempy/"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "'# '",
  "if self.debug:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if 0:",
  "if __name__ == .__main__.:",
  "def __repr__",
  "if settings.DEBUG",
]
ignore_errors = true
