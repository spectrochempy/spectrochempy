Search.setIndex({"alltitles": {"1) simulated chromatogram": [[16, "simulated-chromatogram"]], "1D-Dataset (unidimensional dataset)": [[326, "1D-Dataset-(unidimensional-dataset)"]], "2) absorption spectra": [[16, "absorption-spectra"]], "2021": [[306, "id18"]], "2022": [[306, "id15"]], "2023": [[306, "id10"]], "2024": [[306, "id4"]], "2025": [[306, "id1"]], "2D-IRIS analysis example": [[18, null]], "3) simulated data matrix": [[16, "simulated-data-matrix"]], "4) evolving factor analysis (EFA)": [[16, "evolving-factor-analysis-efa"]], "A basic illustration of the rotational ambiguity": [[310, "A-basic-illustration-of-the-rotational-ambiguity"]], "A code snippet to display properties": [[312, "A-code-snippet-to-display-properties"]], "ALS Optimization": [[310, "ALS-Optimization"]], "API Configuration": [[315, null]], "API Documentation": [[9, "api-documentation"]], "About dates and times": [[326, "About-dates-and-times"]], "About the history attribute": [[326, "About-the-history-attribute"]], "About this user\u2019s guide": [[324, "About-this-user's-guide"]], "Acquisition dates and y axis": [[319, "Acquisition-dates-and-y-axis"]], "Acting on a parameter": [[320, "Acting-on-a-parameter"]], "Adding a Reader": [[4, null]], "Adding several coordinates to a single dimension": [[326, "Adding-several-coordinates-to-a-single-dimension"]], "Adding titles and annotations": [[329, "Adding-titles-and-annotations"]], "Adding your examples to the gallery": [[10, null]], "Additional Resources": [[85, "additional-resources"]], "Additional Tips": [[90, "additional-tips"]], "Additional options for reading directories": [[316, "Additional-options-for-reading-directories"]], "Advanced Analysis": [[91, "Advanced-Analysis"]], "Advanced Data Operations": [[319, "Advanced-Data-Operations"]], "Algebra": [[305, "algebra"]], "Alignment along several dimensions": [[330, "Alignment-along-several-dimensions"]], "Alignment of datasets": [[330, null]], "Alignment, interpolation": [[305, "alignment-interpolation"]], "Alternative Installation Methods": [[85, "alternative-installation-methods"]], "Analysing the 2D NMD dataset": [[76, "analysing-the-2d-nmd-dataset"]], "Analysing the data": [[77, "analysing-the-data"]], "Analysis": [[305, "analysis"], [309, null]], "Analysis CP NMR spectra": [[75, null]], "Analysis NDDataset": [[33, null]], "Angle units conversion": [[337, "Angle-units-conversion"]], "Another default search directory: datadir": [[316, "Another-default-search-directory:-datadir"]], "Apodization": [[59, null], [73, "apodization"], [305, "apodization"], [331, null]], "Apodization using sine window multiplication": [[331, "Apodization-using-sine-window-multiplication"]], "Arithmetic": [[337, "Arithmetic"]], "Asymmetric Least Squares smoothing": [[80, "asymmetric-least-squares-smoothing"]], "Augmented datasets": [[310, "Augmented-datasets"]], "Automatic search": [[18, "automatic-search"]], "Backwards compatibility": [[6, "backwards-compatibility"]], "Baseline": [[63, null], [73, "baseline"]], "Baseline Correction": [[91, "Baseline-Correction"]], "Baseline correction": [[80, "baseline-correction"], [305, "baseline-correction"], [308, "Baseline-correction"]], "Baseline correction 2D spectra (series of spectra)": [[80, "baseline-correction-2d-spectra-series-of-spectra"]], "Baseline correction using NDDataset or API methods": [[332, "Baseline-correction-using-NDDataset-or-API-methods"]], "Baseline corrections": [[332, null]], "Basic Rules": [[8, "basic-rules"]], "Basic creation methods": [[305, "basic-creation-methods"]], "Basic loading of OPUS file": [[320, "Basic-loading-of-OPUS-file"]], "Basic transformations": [[341, null]], "Bibliography": [[94, null]], "Binary Ufuncs": [[337, "Binary-Ufuncs"]], "Binary functions": [[337, "Binary-functions"]], "Breaking Changes": [[342, "breaking-changes"], [397, "breaking-changes"]], "Breaking changes": [[369, "breaking-changes"], [378, "breaking-changes"], [384, "breaking-changes"], [385, "breaking-changes"], [386, "breaking-changes"], [388, "breaking-changes"], [392, "breaking-changes"], [394, "breaking-changes"], [396, "breaking-changes"]], "Bug Fixes": [[342, "bug-fixes"], [344, "bug-fixes"], [398, "bug-fixes"]], "Bug fixes": [[346, "bug-fixes"], [347, "bug-fixes"], [348, "bug-fixes"], [349, "bug-fixes"], [350, "bug-fixes"], [351, "bug-fixes"], [352, "bug-fixes"], [353, "bug-fixes"], [354, "bug-fixes"], [355, "bug-fixes"], [356, "bug-fixes"], [357, "bug-fixes"], [358, "bug-fixes"], [359, "bug-fixes"], [360, "bug-fixes"], [361, "bug-fixes"], [362, "bug-fixes"], [363, "bug-fixes"], [364, "bug-fixes"], [365, "bug-fixes"], [367, "bug-fixes"], [368, "bug-fixes"], [369, "bug-fixes"], [370, "bug-fixes"], [371, "bug-fixes"], [374, "bug-fixes"], [375, "bug-fixes"], [376, "bug-fixes"], [377, "bug-fixes"], [379, "bug-fixes"], [380, "bug-fixes"], [381, "bug-fixes"], [382, "bug-fixes"], [383, "bug-fixes"], [385, "bug-fixes"], [386, "bug-fixes"], [388, "bug-fixes"], [389, "bug-fixes"], [390, "bug-fixes"], [391, "bug-fixes"], [392, "bug-fixes"], [393, "bug-fixes"], [394, "bug-fixes"], [395, "bug-fixes"], [396, "bug-fixes"]], "Build Options": [[9, "build-options"]], "Building Documentation": [[9, "building-documentation"]], "Bullets": [[325, "Bullets"]], "Cantera": [[86, "cantera"]], "Case of initial spectral profiles": [[310, "Case-of-initial-spectral-profiles"]], "Change the NDDataset.preferences": [[329, "Change-the-NDDataset.preferences"]], "Changing number of dimensions": [[305, "changing-number-of-dimensions"]], "Changing the aspect of the plot": [[329, "Changing-the-aspect-of-the-plot"]], "Changing the plot style using matplotlib style sheets": [[329, "Changing-the-plot-style-using-matplotlib-style-sheets"]], "Changing the type of plot": [[329, "Changing-the-type-of-plot"]], "Changing type": [[305, "changing-type"]], "Changing units": [[341, "Changing-units"]], "Citing SpectroChemPy": [[0, null]], "Clipping and rounding": [[305, "clipping-and-rounding"]], "Code snippet for \u2018advanced\u2019 baseline correction": [[332, "Code-snippet-for-'advanced'-baseline-correction"]], "Code standards": [[6, "code-standards"]], "Code usage": [[95, "code-usage"]], "Colored note boxes": [[325, "Colored-note-boxes"]], "Comparison with the OMNIC processing.": [[336, "Comparison-with-the-OMNIC-processing."]], "Complex": [[305, "complex"]], "Complex or hypercomplex NDDatasets": [[337, "Complex-or-hypercomplex-NDDatasets"]], "Computation times": [[25, null], [28, null], [32, null], [34, null], [40, null], [49, null], [53, null], [56, null], [58, null], [62, null], [65, null], [69, null], [72, null], [78, null], [81, null], [82, null], [307, null]], "Conda Package Managers (Recommended)": [[85, "conda-package-managers-recommended"]], "Configuration": [[13, "configuration"]], "Constant trend": [[332, "Constant-trend"]], "Contents": [[4, "contents"], [8, "contents"], [9, "contents"], [89, "contents"], [92, "contents"]], "Contents:": [[322, null]], "Contribute": [[84, "contribute"]], "Contributing to Documentation": [[9, null]], "Contributing to SpectroChemPy": [[5, null]], "Contributing to specific parts of the code": [[7, null]], "Contributing to the code": [[6, null]], "Contributors": [[1, null]], "Convert between units": [[38, "convert-between-units"]], "Convolution with window filters": [[339, "Convolution-with-window-filters"]], "Convolution with windows": [[339, "Convolution-with-windows"]], "Coordinates": [[36, "coordinates"], [39, "coordinates"], [326, "Coordinates"]], "Coordinates-related objects": [[305, "coordinates-related-objects"]], "Copying existing NDDataset": [[326, "Copying-existing-NDDataset"]], "Core functionalities": [[57, null]], "Core objects": [[327, null]], "Create Environment": [[85, "create-environment"]], "Create a MCR-ALS object": [[19, "create-a-mcr-als-object"]], "Create a NMF object": [[21, "create-a-nmf-object"]], "Create a dataset from a function": [[326, "Create-a-dataset-from-a-function"]], "Create a new Jupyter notebook": [[323, "Create-a-new-Jupyter-notebook"]], "Create and fit a FastICA object": [[17, "create-and-fit-a-fastica-object"]], "Create quantities": [[38, "create-quantities"]], "Create your own style": [[329, "Create-your-own-style"]], "Creating NDDataset": [[305, "creating-nddataset"]], "Creating a Permanent Environment Shortcut": [[90, "creating-a-permanent-environment-shortcut"]], "Creation": [[36, "creation"], [39, "creation"]], "Creation from existing data": [[305, "creation-from-existing-data"]], "Creation from numerical ranges": [[305, "creation-from-numerical-ranges"]], "Cross-decomposition": [[26, null], [33, "cross-decomposition"]], "Curvefitting": [[29, null], [33, "curvefitting"]], "Data": [[36, "data"], [39, "data"]], "Data Processing Techniques": [[91, "Data-Processing-Techniques"]], "Data Selection and Manipulation": [[91, "Data-Selection-and-Manipulation"]], "Data Visualization": [[91, "Data-Visualization"]], "Decomposition": [[14, null], [33, "decomposition"]], "Default behaviour": [[312, "Default-behaviour"]], "Default plotting": [[329, "Default-plotting"]], "Denoising": [[66, null], [73, "denoising"], [80, "denoising"], [333, null]], "Denoising 2D spectra": [[333, "Denoising-2D-spectra"]], "Denoising a 2D Raman spectrum": [[67, null]], "Dependency Updates": [[342, "dependency-updates"], [397, "dependency-updates"]], "Dependency updates": [[394, "dependency-updates"], [396, "dependency-updates"]], "Deprecations": [[342, "deprecations"], [371, "deprecations"], [375, "deprecations"], [384, "deprecations"], [385, "deprecations"], [386, "deprecations"], [388, "deprecations"], [390, "deprecations"], [396, "deprecations"]], "Designed for Open Science": [[92, "designed-for-open-science"]], "Detailled Tutorials": [[317, "detailled-tutorials"]], "Determination of initial concentrations using EFA": [[310, "Determination-of-initial-concentrations-using-EFA"]], "Detrend independently on several data segment": [[332, "Detrend-independently-on-several-data-segment"]], "Detrending": [[80, "detrending"], [332, "Detrending"]], "Developer\u2019s Guide": [[11, null]], "Directly loading Example Files": [[87, "directly-loading-example-files"]], "Docstring Format": [[8, "docstring-format"]], "Documentation": [[84, "documentation"]], "Documentation Sources": [[9, "documentation-sources"]], "Documentation Structure": [[9, "documentation-structure"]], "Documenting change log": [[6, "documenting-change-log"]], "EFA (Keller and Massart original example)": [[16, null]], "EFA example": [[15, null]], "Editors": [[13, null]], "Emphasis": [[325, "Emphasis"]], "Environment Setup": [[88, "environment-setup"], [90, "environment-setup"]], "Error Handling": [[319, "Error-Handling"]], "Error handling": [[315, "Error-handling"]], "Evolving factor analysis": [[305, "evolving-factor-analysis"]], "Example": [[330, "Example"], [332, "Example"]], "Example Structure": [[8, "example-structure"]], "Examples": [[83, null]], "Examples Section": [[8, "examples-section"]], "Examples and Testing Data": [[86, "examples-and-testing-data"]], "Examples using spectrochempy.concatenate": [[141, "examples-using-spectrochempy-concatenate"]], "Examples using spectrochempy.denoise": [[150, "examples-using-spectrochempy-denoise"]], "Examples using spectrochempy.despike": [[151, "examples-using-spectrochempy-despike"]], "Examples using spectrochempy.detrend": [[152, "examples-using-spectrochempy-detrend"]], "Examples using spectrochempy.dot": [[155, "examples-using-spectrochempy-dot"]], "Examples using spectrochempy.em": [[157, "examples-using-spectrochempy-em"]], "Examples using spectrochempy.error_": [[160, "examples-using-spectrochempy-error"]], "Examples using spectrochempy.fft": [[162, "examples-using-spectrochempy-fft"]], "Examples using spectrochempy.info_": [[181, "examples-using-spectrochempy-info"]], "Examples using spectrochempy.load_iris": [[189, "examples-using-spectrochempy-load-iris"]], "Examples using spectrochempy.pk": [[208, "examples-using-spectrochempy-pk"]], "Examples using spectrochempy.plot": [[210, "examples-using-spectrochempy-plot"]], "Examples using spectrochempy.plot_multiple": [[217, "examples-using-spectrochempy-plot-multiple"]], "Examples using spectrochempy.plot_stack": [[221, "examples-using-spectrochempy-plot-stack"]], "Examples using spectrochempy.qsin": [[228, "examples-using-spectrochempy-qsin"]], "Examples using spectrochempy.read": [[230, "examples-using-spectrochempy-read"]], "Examples using spectrochempy.read_labspec": [[237, "examples-using-spectrochempy-read-labspec"]], "Examples using spectrochempy.read_matlab": [[239, "examples-using-spectrochempy-read-matlab"]], "Examples using spectrochempy.read_omnic": [[240, "examples-using-spectrochempy-read-omnic"]], "Examples using spectrochempy.read_opus": [[241, "examples-using-spectrochempy-read-opus"]], "Examples using spectrochempy.read_spc": [[246, "examples-using-spectrochempy-read-spc"]], "Examples using spectrochempy.read_topspin": [[249, "examples-using-spectrochempy-read-topspin"]], "Examples using spectrochempy.read_wdf": [[250, "examples-using-spectrochempy-read-wdf"]], "Examples using spectrochempy.read_wire": [[251, "examples-using-spectrochempy-read-wire"]], "Examples using spectrochempy.run_script": [[258, "examples-using-spectrochempy-run-script"]], "Examples using spectrochempy.set_loglevel": [[261, "examples-using-spectrochempy-set-loglevel"]], "Examples using spectrochempy.show": [[263, "examples-using-spectrochempy-show"]], "Examples using spectrochempy.sinm": [[268, "examples-using-spectrochempy-sinm"]], "Examples using spectrochempy.snip": [[270, "examples-using-spectrochempy-snip"]], "Examples using spectrochempy.sort": [[271, "examples-using-spectrochempy-sort"]], "Examples using spectrochempy.sp": [[272, "examples-using-spectrochempy-sp"]], "Examples using spectrochempy.write": [[291, "examples-using-spectrochempy-write"]], "Example\u2019s gallery": [[83, null]], "Exploring the Data": [[91, "Exploring-the-Data"]], "Exponential multiplication": [[331, "Exponential-multiplication"]], "Exponential window multiplication": [[60, null]], "Export a NDDataset": [[305, "export-a-nddataset"]], "External links": [[325, "External-links"]], "FFT of 1D NMR spectra": [[334, "FFT-of-1D-NMR-spectra"]], "FTIR interferogram processing": [[336, null]], "FastICA example": [[17, null]], "File": [[305, "file"]], "Filtering using API or NDDataset methods.": [[339, "Filtering-using-API-or-NDDataset-methods."]], "Filtering, Smoothing and Denoising": [[339, null]], "Find maxima by manual inspection of the plot": [[312, "Find-maxima-by-manual-inspection-of-the-plot"]], "Find maxima with an automated method: find_peaks()": [[312, "Find-maxima-with-an-automated-method:-find_peaks()"]], "Find peaks": [[305, "find-peaks"]], "Fit a model": [[77, "fit-a-model"]], "Fit the MCR-ALS model": [[19, "fit-the-mcr-als-model"]], "Fit the model": [[21, "fit-the-model"]], "Fitting": [[308, null]], "Fitting 1D dataset": [[30, null]], "Fitting script": [[308, "Fitting-script"]], "Fourier transform": [[305, "fourier-transform"]], "Frequently asked questions (FAQ)": [[95, null]], "Functions affecting magnitudes of the number but also units": [[337, "Functions-affecting-magnitudes-of-the-number-but-also-units"], [337, "id2"]], "Functions affecting magnitudes of the number but keeping units": [[337, "Functions-affecting-magnitudes-of-the-number-but-keeping-units"], [337, "id1"]], "Functions that require no units or dimensionless units for inputs. Returns dimensionless objects.": [[337, "Functions-that-require-no-units-or-dimensionless-units-for-inputs.-Returns-dimensionless-objects."], [337, "id3"]], "Functions that return numpy arrays (Work only for NDDataset)": [[337, "Functions-that-return-numpy-arrays-(Work-only-for-NDDataset)"], [337, "id4"]], "GUI Support": [[86, "gui-support"]], "Gaussian-Lorentzian apodization": [[331, "Gaussian-Lorentzian-apodization"]], "General": [[95, "general"]], "General Principles": [[5, "general-principles"]], "General information": [[315, "General-information"]], "Generate a test dataset": [[16, "generate-a-test-dataset"]], "Generic read command": [[316, "Generic-read-command"]], "Geometric shapes": [[325, "Geometric-shapes"]], "Get project\u2019s elements": [[328, "Get-project's-elements"]], "Get the mixing system and source spectral profiles": [[17, "get-the-mixing-system-and-source-spectral-profiles"]], "Getting Help": [[84, null]], "Getting Started": [[91, "Getting-Started"]], "Getting Started with Development": [[5, "getting-started-with-development"]], "Getting the Source Code": [[89, "getting-the-source-code"]], "Git Installation": [[89, "git-installation"]], "GitHub Discussions": [[84, "github-discussions"]], "GitHub Issues": [[84, "github-issues"]], "Glossary": [[304, null]], "Good practices": [[316, "Good-practices"]], "Graphics": [[325, "Graphics"]], "Guessing the concentration profile with PCA + EFA": [[310, "Guessing-the-concentration-profile-with-PCA-+-EFA"]], "Guides & Tutorials": [[9, "guides-tutorials"]], "Handling Metadata": [[319, "Handling-Metadata"]], "Headings": [[325, "Headings"]], "Horizontal lines": [[325, "Horizontal-lines"]], "How it works?": [[332, "How-it-works?"]], "How to get started": [[324, "How-to-get-started"]], "How to get the index from a coordinate?": [[95, "how-to-get-the-index-from-a-coordinate"]], "How to specify a plot with abscissa in ascending or descending order?": [[95, "how-to-specify-a-plot-with-abscissa-in-ascending-or-descending-order"]], "How to use NDDataset": [[35, null], [57, "how-to-use-nddataset"]], "Hyperbolic functions": [[337, "Hyperbolic-functions"], [337, "id5"]], "IRIS Processing example": [[91, "IRIS-Processing-example"]], "IRIS analysis without regularization": [[18, "iris-analysis-without-regularization"]], "Import & Export": [[321, null]], "Import / Export": [[41, null], [57, "import-export"]], "Import API": [[75, "import-api"], [76, "import-api"], [77, "import-api"]], "Import Data in SpectroChemPy": [[316, null]], "Import IR Data": [[317, null]], "Import NMR spectra": [[75, "import-nmr-spectra"]], "Import a NDataset from external source": [[305, "import-a-ndataset-from-external-source"]], "Import dataset from local files": [[42, "import-dataset-from-local-files"]], "Import dataset from remote files": [[42, "import-dataset-from-remote-files"]], "Import of .spa files": [[319, "Import-of-.spa-files"]], "Import of Bruker OPUS files": [[320, null]], "Import of OMNIC files": [[319, null]], "Import spg file": [[319, "Import-spg-file"]], "Import/Export of JCAMP-DX files": [[318, null]], "Import/export": [[305, "import-export"]], "Importing a 1D spectra": [[80, "importing-a-1d-spectra"]], "Importing a 2D NMR spectra": [[76, "importing-a-2d-nmr-spectra"]], "Importing a pseudo 2D NMR spectra": [[77, "importing-a-pseudo-2d-nmr-spectra"]], "Importing from external datasets": [[326, "Importing-from-external-datasets"]], "Indenting": [[325, "Indenting"]], "Independant Component Analysis": [[305, "independant-component-analysis"]], "Indexing": [[305, "indexing"]], "Initial guess and MCR ALS optimization": [[310, "Initial-guess-and-MCR-ALS-optimization"]], "Install Package": [[85, "install-package"]], "Install SpectroChemPy": [[88, "install-spectrochempy"]], "Install in Google Colaboratory (Colab)": [[87, null]], "Installation": [[87, "installation"]], "Installation Guide": [[85, null]], "Installation Guide for Mac OSX and Linux": [[88, null]], "Installation Guide for Windows": [[90, null]], "Installation Methods": [[89, "installation-methods"]], "Installation Steps": [[85, "installation-steps"]], "Installation from Sources": [[89, null]], "Installing Python": [[85, "installing-python"]], "Installing SpectroChemPy": [[85, "installing-spectrochempy"], [90, "installing-spectrochempy"], [91, "Installing-SpectroChemPy"]], "Integral inversion solver for spectroscopic data": [[305, "integral-inversion-solver-for-spectroscopic-data"]], "Internal links": [[325, "Internal-links"]], "Introduction": [[87, "introduction"], [310, "Introduction"], [311, "Introduction"], [314, "Introduction"], [324, null], [326, "Introduction"], [331, "Introduction"]], "Introduction to the plotting librairie": [[52, null]], "Joining or splitting datasets": [[305, "joining-or-splitting-datasets"]], "Kinetic": [[305, "kinetic"]], "Labels": [[326, "Labels"]], "Least square with non-negativity constraint (NNLS)": [[308, "Least-square-with-non-negativity-constraint-(NNLS)"]], "Line breaks": [[325, "Line-breaks"]], "Line broadening": [[334, "Line-broadening"]], "Linear regression": [[305, "linear-regression"]], "Linear trend": [[332, "Linear-trend"]], "Lineshape models": [[305, "lineshape-models"]], "List of UFuncs working on NDDataset:": [[337, "List-of-UFuncs-working-on-NDDataset:"]], "Load the API": [[329, "Load-the-API"]], "Load, prepare and plot the dataset": [[17, "load-prepare-and-plot-the-dataset"]], "Loading": [[328, "Loading"]], "Loading Bruker OPUS files": [[44, null]], "Loading Data": [[91, "Loading-Data"]], "Loading RAMAN experimental file": [[46, null]], "Loading a NDDataset": [[20, "loading-a-nddataset"]], "Loading an IR (omnic SPG) experimental file": [[43, null]], "Loading an experimental dataset": [[312, "Loading-an-experimental-dataset"]], "Loading given type of OPUS spectra": [[320, "Loading-given-type-of-OPUS-spectra"]], "Loading of experimental 1D NMR data": [[45, null]], "Loading of the dataset": [[311, "Loading-of-the-dataset"], [314, "Loading-of-the-dataset"]], "Loading the API": [[305, "loading-the-api"], [324, "Loading-the-API"]], "Loading the data": [[329, "Loading-the-data"]], "Loading the example dataset": [[19, "loading-the-example-dataset"]], "Logging": [[305, "logging"]], "Logic functions": [[305, "logic-functions"]], "Loglevel": [[315, "Loglevel"]], "MCR ALS": [[310, null]], "MCR-ALS example (adapted from Jaumot et al. 2005)": [[19, null]], "MCR-ALS with kinetic constraints": [[20, null]], "Magnitude calculation": [[334, "Magnitude-calculation"]], "Maintaining Your PR": [[5, "maintaining-your-pr"]], "Making Changes": [[5, "making-changes"]], "Markdown Cheat Sheet": [[325, null]], "Markdown cheat sheet": [[323, "Markdown-cheat-sheet"]], "Masking data": [[341, "Masking-data"]], "Masks": [[305, "masks"]], "Math operations on coordinates": [[326, "Math-operations-on-coordinates"]], "Mathematical Operations": [[91, "Mathematical-Operations"]], "Mathematical operations": [[305, "mathematical-operations"], [337, null]], "Mathematical symbols": [[325, "Mathematical-symbols"]], "Median filter": [[333, "Median-filter"]], "Methods for alignments": [[330, "Methods-for-alignments"]], "Methods to create NDDataset": [[326, "Methods-to-create-NDDataset"]], "Minimum and maximum": [[305, "minimum-and-maximum"]], "Misc": [[305, "misc"]], "Miscellaneous": [[305, "miscellaneous"]], "Monospace font": [[325, "Monospace-font"]], "More information about the MCRALS estimator": [[310, "More-information-about-the-MCRALS-estimator"]], "More insight on coordinates": [[326, "More-insight-on-coordinates"]], "More on peak properties": [[312, "More-on-peak-properties"]], "Moving average": [[339, "Moving-average"]], "Multivariate Curve Resolution - Alternating Least Squares": [[305, "multivariate-curve-resolution-alternating-least-squares"]], "Multivariate approach": [[332, "Multivariate-approach"]], "NDDataset": [[327, "nddataset"]], "NDDataset baseline correction": [[64, null]], "NDDataset coordinates example": [[37, null]], "NDDataset creation and plotting example": [[36, null], [39, null]], "NDDataset modelling using non-linear optimisation method": [[308, "NDDataset-modelling-using-non-linear-optimisation-method"]], "NMF analysis example": [[21, null]], "New Features": [[342, "new-features"], [344, "new-features"], [397, "new-features"], [398, "new-features"]], "New features": [[346, "new-features"], [347, "new-features"], [351, "new-features"], [352, "new-features"], [353, "new-features"], [354, "new-features"], [355, "new-features"], [356, "new-features"], [359, "new-features"], [360, "new-features"], [361, "new-features"], [362, "new-features"], [363, "new-features"], [365, "new-features"], [366, "new-features"], [367, "new-features"], [368, "new-features"], [369, "new-features"], [370, "new-features"], [371, "new-features"], [372, "new-features"], [373, "new-features"], [374, "new-features"], [375, "new-features"], [377, "new-features"], [378, "new-features"], [379, "new-features"], [380, "new-features"], [381, "new-features"], [383, "new-features"], [385, "new-features"], [386, "new-features"], [387, "new-features"], [388, "new-features"], [390, "new-features"], [391, "new-features"], [392, "new-features"], [394, "new-features"], [396, "new-features"]], "Next Steps": [[88, "next-steps"], [90, "next-steps"]], "Next Steps \ud83c\udfaf": [[91, "Next-Steps-\ud83c\udfaf"]], "Non-Negative Matrix Factorization": [[305, "non-negative-matrix-factorization"]], "Non-linear optimization and curve fit": [[305, "non-linear-optimization-and-curve-fit"]], "Numbered lists": [[325, "Numbered-lists"]], "Offset correction": [[305, "offset-correction"]], "One-dimensional (1D) Fourier transformation": [[334, null]], "Open Source and Free": [[92, "open-source-and-free"]], "Optional Dependencies": [[86, null]], "Optional dependencies": [[6, "optional-dependencies"]], "Options of find_peaks()": [[312, "Options-of-find_peaks()"]], "Other Advanced Analysis Techniques": [[91, "Other-Advanced-Analysis-Techniques"]], "Other Licenses": [[2, "other-licenses"]], "Other Operations": [[91, "Other-Operations"]], "Other apodization functions": [[331, "Other-apodization-functions"]], "Overview": [[86, "overview"]], "Overview of the main configuration parameters": [[329, "Overview-of-the-main-configuration-parameters"]], "Overview of the other model": [[332, "Overview-of-the-other-model"]], "PCA analysis example": [[23, null]], "PCA example (iris dataset)": [[22, null]], "PLS regression example": [[27, null]], "Papers citing SpectroChemPy": [[306, null]], "Parameter Documentation": [[8, "parameter-documentation"]], "Partial Least Square regression": [[305, "partial-least-square-regression"]], "Partial Least Squares Regression (PLSRegression)": [[314, null]], "Peak Integration": [[313, null]], "Peak Maxima Finding": [[312, null]], "Peak finding": [[308, "Peak-finding"]], "Peak fitting": [[76, "peak-fitting"]], "Peak picking": [[76, "peak-picking"]], "Phasing": [[305, "phasing"]], "Plot of the Real and Imaginary original data": [[331, "Plot-of-the-Real-and-Imaginary-original-data"]], "Plot results": [[21, "plot-results"]], "Plotting": [[305, "plotting"], [329, null]], "Plotting 1D datasets": [[329, "Plotting-1D-datasets"]], "Plotting datasets": [[50, null], [57, "plotting-datasets"]], "Plotting several dataset on the same figure": [[329, "Plotting-several-dataset-on-the-same-figure"]], "Plotting the results": [[19, "plotting-the-results"]], "Polynomial": [[332, "Polynomial"]], "Polynomial trend": [[332, "Polynomial-trend"]], "Power spectrum": [[334, "Power-spectrum"]], "Pre-commit": [[6, "pre-commit"]], "Prepare the dataset to NMF factorize": [[21, "prepare-the-dataset-to-nmf-factorize"]], "Preparing the data": [[329, "Preparing-the-data"]], "Preprocessing": [[334, "Preprocessing"]], "Prerequisites": [[85, "prerequisites"], [89, "prerequisites"]], "Principal Component Analysis": [[311, null]], "Processing": [[305, "processing"], [335, null]], "Processing NDDataset": [[73, null]], "Processing NMR datasets": [[73, "processing-nmr-datasets"], [74, null]], "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)": [[76, null]], "Processing RAMAN spectra": [[80, null]], "Processing Raman datasets": [[73, "processing-raman-datasets"], [79, null]], "Processing Relaxation measurement": [[77, null]], "Processing functions": [[325, "Processing-functions"]], "Project": [[327, "project"]], "Project Management": [[54, null], [57, "project-management"]], "Project creation": [[55, null], [328, "Project-creation"]], "Project management": [[305, "project-management"], [328, null]], "Prominence": [[312, "Prominence"]], "Public API reference": [[305, null]], "Python (PEP8 / ruff)": [[6, "python-pep8-ruff"]], "Python-Powered Analysis": [[92, "python-powered-analysis"]], "Qt Backend": [[86, "qt-backend"]], "Quick Start": [[9, "quick-start"], [87, "quick-start"]], "Quickstart Tutorial \ud83d\ude80": [[91, null]], "Reading OPUS file Metadata": [[320, "Reading-OPUS-file-Metadata"]], "Reading Renishaw WiRE files": [[47, null]], "Reading SPC format files": [[48, null]], "Reading datasets": [[42, null]], "Reading directories": [[316, "Reading-directories"]], "Reading files from a ZIP archive": [[316, "Reading-files-from-a-ZIP-archive"]], "Real Fourier transform": [[334, "Real-Fourier-transform"]], "Reconstruct the dataset": [[17, "reconstruct-the-dataset"]], "Release notes": [[343, null]], "Remove an element from a project": [[328, "Remove-an-element-from-a-project"]], "Removing cosmic ray spikes from a Raman spectrum": [[68, null]], "Removing cosmic rays spike from Raman spectra": [[333, "Removing-cosmic-rays-spike-from-Raman-spectra"]], "Reporting Issues": [[12, null]], "Requirements": [[88, "requirements"], [90, "requirements"]], "Revisions 0.1.0 to 0.1.19": [[345, null]], "Rolling": [[305, "rolling"]], "Rubberband": [[332, "Rubberband"]], "Running PLSRegression": [[314, "Running-PLSRegression"]], "Running a PCA": [[311, "Running-a-PCA"]], "Running the test suite": [[6, "running-the-test-suite"]], "SIMPLISMA example": [[24, null]], "SIMPLe to use Interactive Self-modeling Mixture Analysis": [[305, "simple-to-use-interactive-self-modeling-mixture-analysis"]], "Saving": [[328, "Saving"]], "Saving and loading projects": [[328, "Saving-and-loading-projects"]], "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum": [[71, null]], "Savitzky-Golay filter": [[339, "Savitzky-Golay-filter"]], "Savitzky-Golay filter:savgol": [[339, "Savitzky-Golay-filter:savgol"]], "Scientific Computing Extensions": [[86, "scientific-computing-extensions"]], "Script": [[327, "script"]], "Scripting": [[305, "scripting"]], "See also": [[3, null]], "Select data in a NDDataset": [[305, "select-data-in-a-nddataset"]], "Selecting the output window": [[329, "Selecting-the-output-window"]], "Setting Up Your Development Environment": [[5, "setting-up-your-development-environment"]], "Setting coordinates using set_coordset": [[326, "Setting-coordinates-using-set_coordset"]], "Setting new coordinates": [[18, "setting-new-coordinates"], [37, "setting-new-coordinates"]], "Sharing coordinates between dimensions": [[326, "Sharing-coordinates-between-dimensions"]], "Shifted Gaussian-Lorentzian apodization": [[331, "Shifted-Gaussian-Lorentzian-apodization"]], "Shifted apodization": [[331, "Shifted-apodization"]], "Sine bell and squared Sine bell window multiplication": [[61, null]], "Singular value decomposition and Principal component analysis": [[305, "singular-value-decomposition-and-principal-component-analysis"]], "Slicing NDDatasets": [[338, null]], "Slicing of NDDatasets": [[338, "Slicing-of-NDDatasets"]], "Slicing with coordinates": [[338, "Slicing-with-coordinates"]], "Slicing with indexes": [[338, "Slicing-with-indexes"]], "Smoothing, filtering, denoising": [[305, "smoothing-filtering-denoising"]], "Solutions": [[310, "Solutions"]], "Solve a linear equation using LSTSQ": [[31, null]], "Solving a linear equation using the least square method (LSTSQ)": [[308, "Solving-a-linear-equation-using-the-least-square-method-(LSTSQ)"]], "Sorting": [[305, "sorting"]], "Source control": [[13, "source-control"]], "Spectral Smoothing": [[91, "Spectral-Smoothing"]], "SpectroChemPy Docstring Guide": [[8, null]], "SpectroChemPy: Advanced Spectroscopic Data Analysis": [[93, null]], "SpectroChempy License": [[2, null]], "Stack Overflow": [[84, "stack-overflow"]], "Start editing": [[13, "start-editing"]], "Starting Jupyter lab": [[323, null]], "Statistical operations": [[305, "statistical-operations"]], "Step 1: Add Tests and Sample Files": [[4, "step-1-add-tests-and-sample-files"]], "Step 2: Register the File Format": [[4, "step-2-register-the-file-format"]], "Step 3: Create the Reader Module": [[4, "step-3-create-the-reader-module"]], "Step 4: Data Format Guidelines": [[4, "step-4-data-format-guidelines"]], "Step 5: Documentation": [[4, "step-5-documentation"]], "Summary of the coordinate setting syntax": [[326, "Summary-of-the-coordinate-setting-syntax"]], "Sums, integal, difference": [[305, "sums-integal-difference"]], "Supported IR File Formats": [[317, "supported-ir-file-formats"]], "Syntax 1": [[326, "Syntax-1"]], "Syntax 2": [[326, "Syntax-2"]], "Syntax for parameters definition": [[308, "Syntax-for-parameters-definition"]], "Table of Contents": [[85, "table-of-contents"], [87, "table-of-contents"], [88, "table-of-contents"], [90, "table-of-contents"], [95, "table-of-contents"], [305, "table-of-contents"], [326, "Table-of-Contents"]], "Table of Contents:": [[6, "table-of-contents"]], "Table of contents:": [[5, "table-of-contents"]], "Test-driven development/code writing": [[6, "test-driven-development-code-writing"]], "Testing with continuous integration": [[6, "testing-with-continuous-integration"]], "The (minimal) dataset": [[310, "The-(minimal)-dataset"]], "The Baseline processor": [[332, "The-Baseline-processor"]], "The Filter processor": [[339, "The-Filter-processor"]], "The NDDataset Object": [[305, "the-nddataset-object"]], "The NDDataset object": [[326, null]], "The order of spectra": [[319, "The-order-of-spectra"]], "The smooth method": [[339, "The-smooth-method"]], "Third-party Licenses": [[1, "third-party-licenses"]], "Time domain baseline correction": [[334, "Time-domain-baseline-correction"]], "Time domain baseline correction (NMR)": [[340, null]], "Time-domain processing": [[305, "time-domain-processing"]], "Tips for Success": [[5, "tips-for-success"]], "To get help about the different configuration parameters": [[310, "To-get-help-about-the-different-configuration-parameters"]], "Todo": [[327, "id1"]], "Transpose-like operations": [[305, "transpose-like-operations"]], "Transposition": [[341, "Transposition"]], "Trigonometric functions. Require dimensionless/unitless dataset or radians.": [[337, "Trigonometric-functions.-Require-dimensionless/unitless-dataset-or-radians."]], "Trigonometric functions. Require unitless data or radian units.": [[337, "Trigonometric-functions.-Require-unitless-data-or-radian-units."]], "Troubleshooting": [[86, "troubleshooting"]], "Ufuncs (Universal Numpy\u2019s functions)": [[337, "Ufuncs-(Universal-Numpy's-functions)"]], "Unary functions": [[337, "Unary-functions"]], "Understanding the NDDataset object": [[91, "Understanding-the-NDDataset-object"]], "Unit conversions": [[337, "Unit-conversions"]], "Units": [[326, "Units"]], "Units for dataset": [[38, "units-for-dataset"]], "Units manipulation": [[305, "units-manipulation"]], "Units manipulation examples": [[38, null]], "Updating SpectroChemPy": [[89, "updating-spectrochempy"]], "Uploading a dataset": [[37, "uploading-a-dataset"]], "Uploading dataset": [[18, "uploading-dataset"]], "Usage": [[337, "Usage"]], "Use of PCA to assess the number of pure species": [[310, "Use-of-PCA-to-assess-the-number-of-pure-species"]], "Use os or pathlib packages": [[316, "Use-os-or-pathlib-packages"]], "Use relative paths": [[316, "Use-relative-paths"]], "User Guide and Tutorials": [[322, null]], "Using File Explorer": [[87, "using-file-explorer"]], "Using Git Repository": [[87, "using-git-repository"]], "Using Google Drive": [[87, "using-google-drive"]], "Using a specific reader": [[316, "Using-a-specific-reader"]], "Using numpy-like constructors of NDDatasets": [[326, "Using-numpy-like-constructors-of-NDDatasets"]], "Using plot_multiple to plot several datasets on the same figure": [[51, null]], "Using pytest": [[6, "using-pytest"]], "Using relative or absolute pathnames": [[316, "Using-relative-or-absolute-pathnames"]], "Using the application in a web browser": [[323, "Using-the-application-in-a-web-browser"]], "Utilities": [[305, "utilities"], [305, "id1"]], "Verifying Installation": [[88, "verifying-installation"], [89, "verifying-installation"], [90, "verifying-installation"]], "Version 0.1": [[343, "version-0-1"]], "Version 0.2": [[343, "version-0-2"]], "Version 0.3": [[343, "version-0-3"]], "Version 0.4": [[343, "version-0-4"]], "Version 0.5": [[343, "version-0-5"]], "Version 0.6": [[343, "version-0-6"]], "Version 0.7": [[343, "version-0-7"]], "Version 0.8": [[343, "version-0-8"]], "Version Control Setup": [[5, "version-control-setup"]], "Visual Studio Installation": [[13, "visual-studio-installation"]], "What is the slicing ?": [[338, "What-is-the-slicing-?"]], "What to do if questions arise": [[324, "What-to-do-if-questions-arise"]], "What\u2019s New in Revision": [[342, null]], "What\u2019s New in Revision 0.8.0": [[397, null]], "What\u2019s New in Revision 0.8.1": [[344, null], [398, null]], "What\u2019s new in revision 0.2.0": [[346, null]], "What\u2019s new in revision 0.2.10 [2021-02-14]": [[347, null]], "What\u2019s new in revision 0.2.11 [2021-02-17]": [[348, null]], "What\u2019s new in revision 0.2.12 [2021-02-23]": [[349, null]], "What\u2019s new in revision 0.2.13 [2021-02-23]": [[350, null]], "What\u2019s new in revision 0.2.14 [2021-02-25]": [[351, null]], "What\u2019s new in revision 0.2.15 [2021-03-29]": [[352, null]], "What\u2019s new in revision 0.2.16 [2021-11-11]": [[353, null]], "What\u2019s new in revision 0.2.17 [2021-11-29]": [[354, null]], "What\u2019s new in revision 0.2.18 [2022-01-05]": [[355, null]], "What\u2019s new in revision 0.2.21 [2022-01-09]": [[356, null]], "What\u2019s new in revision 0.2.22 [2022-01-10]": [[357, null]], "What\u2019s new in revision 0.2.23 [2022-01-16]": [[358, null]], "What\u2019s new in revision 0.2.4": [[359, null]], "What\u2019s new in revision 0.2.5": [[360, null]], "What\u2019s new in revision 0.2.6": [[361, null]], "What\u2019s new in revision 0.2.7": [[362, null]], "What\u2019s new in revision 0.2.8": [[363, null]], "What\u2019s new in revision 0.2.9 [2021-11-29]": [[364, null]], "What\u2019s new in revision 0.3.0 [2022-01-20]": [[365, null]], "What\u2019s new in revision 0.3.1 [2022-01-21]": [[366, null]], "What\u2019s new in revision 0.3.2 [2022-01-31]": [[367, null]], "What\u2019s new in revision 0.3.3 [2022-03-9]": [[368, null]], "What\u2019s new in revision 0.4.1 [2022-03-14]": [[369, null]], "What\u2019s new in revision 0.4.10 [2023-01-07]": [[370, null]], "What\u2019s new in revision 0.4.2 [2022-03-16]": [[371, null]], "What\u2019s new in revision 0.4.3 [2022-03-20]": [[372, null]], "What\u2019s new in revision 0.4.4 [2022-03-22]": [[373, null]], "What\u2019s new in revision 0.4.5 [2022-04-09]": [[374, null]], "What\u2019s new in revision 0.4.6 [2022-05-16]": [[375, null]], "What\u2019s new in revision 0.4.7 [2022-05-16]": [[376, null]], "What\u2019s new in revision 0.4.9 [2023-01-05]": [[377, null]], "What\u2019s new in revision 0.5.0 [2023-01-11]": [[378, null]], "What\u2019s new in revision 0.5.1": [[379, null]], "What\u2019s new in revision 0.5.2": [[380, null]], "What\u2019s new in revision 0.5.3": [[381, null]], "What\u2019s new in revision 0.5.4": [[382, null]], "What\u2019s new in revision 0.5.5": [[383, null]], "What\u2019s new in revision 0.6.1": [[384, null]], "What\u2019s new in revision 0.6.10": [[385, null]], "What\u2019s new in revision 0.6.2": [[386, null]], "What\u2019s new in revision 0.6.3": [[387, null]], "What\u2019s new in revision 0.6.4": [[388, null]], "What\u2019s new in revision 0.6.5": [[389, null]], "What\u2019s new in revision 0.6.6": [[390, null]], "What\u2019s new in revision 0.6.7": [[391, null]], "What\u2019s new in revision 0.6.8": [[392, null]], "What\u2019s new in revision 0.6.9": [[393, null]], "What\u2019s new in revision 0.7.0": [[394, null]], "What\u2019s new in revision 0.7.1": [[395, null]], "What\u2019s new in revision 0.7.2": [[396, null]], "Where are the preference\u2019s files saved?": [[95, "where-are-the-preference-s-files-saved"]], "Where to go next?": [[324, "Where-to-go-next?"]], "Whittaker-Eilers filter": [[339, "Whittaker-Eilers-filter"]], "Whittaker-eilers filter : whittaker": [[339, "Whittaker-eilers-filter-:-whittaker"]], "Why NOT SpectroChemPy ?": [[92, "why-not-spectrochempy"]], "Why SpectroChemPy?": [[92, null]], "Width": [[312, "Width"]], "Window size influence": [[339, "Window-size-influence"]], "With regularization and a manual search": [[18, "with-regularization-and-a-manual-search"]], "Working with Data": [[87, "working-with-data"]], "Working with Spectroscopic Data": [[91, "Working-with-Spectroscopic-Data"]], "Writing Tips": [[9, "writing-tips"]], "Writing and executing SpectroChemPy scripts": [[324, "Writing-and-executing-SpectroChemPy-scripts"]], "Writing tests": [[6, "writing-tests"]], "Zero-filling": [[305, "zero-filling"], [334, "Zero-filling"]], "abs": [[337, "abs"]], "absolute (alias of abs)": [[337, "absolute-(alias-of-abs)"]], "add": [[337, "add"]], "arccos": [[337, "arccos"]], "arccosh": [[337, "arccosh"]], "arcsin": [[337, "arcsin"]], "arcsinh": [[337, "arcsinh"]], "arctan": [[337, "arctan"]], "arctanh": [[337, "arctanh"]], "basc": [[332, "basc"]], "cbrt": [[337, "cbrt"]], "ceil": [[337, "ceil"]], "cos": [[337, "cos"]], "cosh": [[337, "cosh"]], "deg2rad": [[337, "deg2rad"]], "despike method": [[333, "despike-method"]], "divide": [[337, "divide"]], "exp": [[337, "exp"]], "exp2": [[337, "exp2"]], "expm1": [[337, "expm1"]], "fabs (absolute for float arrays)": [[337, "fabs-(absolute-for-float-arrays)"]], "filtering": [[70, null], [73, "filtering"]], "first method": [[330, "first-method"]], "floor": [[337, "floor"]], "floor_divide": [[337, "floor_divide"]], "inner method": [[330, "inner-method"]], "isfinite": [[337, "isfinite"]], "isinf": [[337, "isinf"]], "isnan": [[337, "isnan"]], "last method": [[330, "last-method"]], "log": [[337, "log"]], "log10": [[337, "log10"]], "log1p": [[337, "log1p"]], "log2": [[337, "log2"]], "logical_not": [[337, "logical_not"]], "multiply": [[337, "multiply"]], "nD-Dataset (multidimensional dataset)": [[326, "nD-Dataset-(multidimensional-dataset)"]], "nd-Dataset": [[36, "nd-dataset"], [39, "nd-dataset"]], "negative": [[337, "negative"]], "rad2deg": [[337, "rad2deg"]], "reciprocal": [[337, "reciprocal"]], "rint": [[337, "rint"]], "sign": [[337, "sign"]], "signbit": [[337, "signbit"]], "sin": [[337, "sin"]], "sinh": [[337, "sinh"]], "spectrochempy.ActionMassKinetics": [[96, null]], "spectrochempy.Baseline": [[97, null]], "spectrochempy.Coord": [[98, null]], "spectrochempy.CoordSet": [[99, null]], "spectrochempy.EFA": [[100, null]], "spectrochempy.FastICA": [[101, null]], "spectrochempy.Filter": [[102, null]], "spectrochempy.IRIS": [[103, null]], "spectrochempy.IrisKernel": [[104, null]], "spectrochempy.LSTSQ": [[105, null]], "spectrochempy.MCRALS": [[106, null]], "spectrochempy.NDDataset": [[107, null]], "spectrochempy.NDDataset.save": [[108, null]], "spectrochempy.NDDataset.save_as": [[109, null]], "spectrochempy.NMF": [[110, null]], "spectrochempy.NNLS": [[111, null]], "spectrochempy.Optimize": [[112, null]], "spectrochempy.PCA": [[113, null]], "spectrochempy.PFR": [[114, null]], "spectrochempy.PLSRegression": [[115, null]], "spectrochempy.Project": [[116, null]], "spectrochempy.Quantity": [[117, null]], "spectrochempy.SIMPLISMA": [[118, null]], "spectrochempy.SVD": [[119, null]], "spectrochempy.Script": [[120, null]], "spectrochempy.Unit": [[121, null]], "spectrochempy.abs": [[122, null]], "spectrochempy.absolute": [[123, null]], "spectrochempy.align": [[124, null]], "spectrochempy.all": [[125, null]], "spectrochempy.amax": [[126, null]], "spectrochempy.amin": [[127, null]], "spectrochempy.any": [[128, null]], "spectrochempy.arange": [[129, null]], "spectrochempy.argmax": [[130, null]], "spectrochempy.argmin": [[131, null]], "spectrochempy.around": [[132, null]], "spectrochempy.asls": [[133, null]], "spectrochempy.asymmetricvoigtmodel": [[134, null]], "spectrochempy.autosub": [[135, null]], "spectrochempy.average": [[136, null]], "spectrochempy.bartlett": [[137, null]], "spectrochempy.basc": [[138, null]], "spectrochempy.blackmanharris": [[139, null]], "spectrochempy.clip": [[140, null]], "spectrochempy.concatenate": [[141, null]], "spectrochempy.conj": [[142, null]], "spectrochempy.conjugate": [[143, null]], "spectrochempy.coordmax": [[144, null]], "spectrochempy.coordmin": [[145, null]], "spectrochempy.cs": [[146, null]], "spectrochempy.cumsum": [[147, null]], "spectrochempy.dc": [[148, null]], "spectrochempy.debug_": [[149, null]], "spectrochempy.denoise": [[150, null]], "spectrochempy.despike": [[151, null]], "spectrochempy.detrend": [[152, null]], "spectrochempy.diag": [[153, null]], "spectrochempy.diagonal": [[154, null]], "spectrochempy.dot": [[155, null]], "spectrochempy.download_nist_ir": [[156, null]], "spectrochempy.em": [[157, null]], "spectrochempy.empty": [[158, null]], "spectrochempy.empty_like": [[159, null]], "spectrochempy.error_": [[160, null]], "spectrochempy.eye": [[161, null]], "spectrochempy.fft": [[162, null]], "spectrochempy.find_peaks": [[163, null]], "spectrochempy.fromfunction": [[164, null]], "spectrochempy.fromiter": [[165, null]], "spectrochempy.fsh": [[166, null]], "spectrochempy.fsh2": [[167, null]], "spectrochempy.full": [[168, null]], "spectrochempy.full_like": [[169, null]], "spectrochempy.gaussianmodel": [[170, null]], "spectrochempy.general_hamming": [[171, null]], "spectrochempy.geomspace": [[172, null]], "spectrochempy.get_baseline": [[173, null]], "spectrochempy.get_loglevel": [[174, null]], "spectrochempy.gm": [[175, null]], "spectrochempy.hamming": [[176, null]], "spectrochempy.hann": [[177, null]], "spectrochempy.ht": [[178, null]], "spectrochempy.identity": [[179, null]], "spectrochempy.ifft": [[180, null]], "spectrochempy.info_": [[181, null]], "spectrochempy.interpolate": [[182, null]], "spectrochempy.is_units_compatible": [[183, null]], "spectrochempy.ito": [[184, null]], "spectrochempy.ito_base_units": [[185, null]], "spectrochempy.ito_reduced_units": [[186, null]], "spectrochempy.linspace": [[187, null]], "spectrochempy.load": [[188, null]], "spectrochempy.load_iris": [[189, null]], "spectrochempy.logspace": [[190, null]], "spectrochempy.lorentzianmodel": [[191, null]], "spectrochempy.ls": [[192, null]], "spectrochempy.max": [[193, null]], "spectrochempy.mc": [[194, null]], "spectrochempy.mean": [[195, null]], "spectrochempy.min": [[196, null]], "spectrochempy.multiplot": [[197, null]], "spectrochempy.multiplot_image": [[198, null]], "spectrochempy.multiplot_lines": [[199, null]], "spectrochempy.multiplot_map": [[200, null]], "spectrochempy.multiplot_scatter": [[201, null]], "spectrochempy.multiplot_stack": [[202, null]], "spectrochempy.multiplot_with_transposed": [[203, null]], "spectrochempy.ones": [[204, null]], "spectrochempy.ones_like": [[205, null]], "spectrochempy.pathclean": [[206, null]], "spectrochempy.pipe": [[207, null]], "spectrochempy.pk": [[208, null]], "spectrochempy.pk_exp": [[209, null]], "spectrochempy.plot": [[210, null]], "spectrochempy.plot_1D": [[211, null]], "spectrochempy.plot_2D": [[212, null]], "spectrochempy.plot_3D": [[213, null]], "spectrochempy.plot_bar": [[214, null]], "spectrochempy.plot_image": [[215, null]], "spectrochempy.plot_map": [[216, null]], "spectrochempy.plot_multiple": [[217, null]], "spectrochempy.plot_pen": [[218, null]], "spectrochempy.plot_scatter": [[219, null]], "spectrochempy.plot_scatter_pen": [[220, null]], "spectrochempy.plot_stack": [[221, null]], "spectrochempy.plot_surface": [[222, null]], "spectrochempy.plot_waterfall": [[223, null]], "spectrochempy.plot_with_transposed": [[224, null]], "spectrochempy.polynomialbaseline": [[225, null]], "spectrochempy.ps": [[226, null]], "spectrochempy.ptp": [[227, null]], "spectrochempy.qsin": [[228, null]], "spectrochempy.random": [[229, null]], "spectrochempy.read": [[230, null]], "spectrochempy.read_carroucell": [[231, null]], "spectrochempy.read_csv": [[232, null]], "spectrochempy.read_ddr": [[233, null]], "spectrochempy.read_dir": [[234, null]], "spectrochempy.read_hdr": [[235, null]], "spectrochempy.read_jcamp": [[236, null]], "spectrochempy.read_labspec": [[237, null]], "spectrochempy.read_mat": [[238, null]], "spectrochempy.read_matlab": [[239, null]], "spectrochempy.read_omnic": [[240, null]], "spectrochempy.read_opus": [[241, null]], "spectrochempy.read_quadera": [[242, null]], "spectrochempy.read_sdr": [[243, null]], "spectrochempy.read_soc": [[244, null]], "spectrochempy.read_spa": [[245, null]], "spectrochempy.read_spc": [[246, null]], "spectrochempy.read_spg": [[247, null]], "spectrochempy.read_srs": [[248, null]], "spectrochempy.read_topspin": [[249, null]], "spectrochempy.read_wdf": [[250, null]], "spectrochempy.read_wire": [[251, null]], "spectrochempy.read_zip": [[252, null]], "spectrochempy.remove_masks": [[253, null]], "spectrochempy.roll": [[254, null]], "spectrochempy.round": [[255, null]], "spectrochempy.rs": [[256, null]], "spectrochempy.run_all_scripts": [[257, null]], "spectrochempy.run_script": [[258, null]], "spectrochempy.savgol": [[259, null]], "spectrochempy.set_complex": [[260, null]], "spectrochempy.set_loglevel": [[261, null]], "spectrochempy.set_nmr_context": [[262, null]], "spectrochempy.show": [[263, null]], "spectrochempy.show_versions": [[264, null]], "spectrochempy.sigmoidmodel": [[265, null]], "spectrochempy.simpson": [[266, null]], "spectrochempy.sine": [[267, null]], "spectrochempy.sinm": [[268, null]], "spectrochempy.smooth": [[269, null]], "spectrochempy.snip": [[270, null]], "spectrochempy.sort": [[271, null]], "spectrochempy.sp": [[272, null]], "spectrochempy.squeeze": [[273, null]], "spectrochempy.stack": [[274, null]], "spectrochempy.std": [[275, null]], "spectrochempy.sum": [[276, null]], "spectrochempy.swapdims": [[277, null]], "spectrochempy.take": [[278, null]], "spectrochempy.to": [[279, null]], "spectrochempy.to_array": [[280, null]], "spectrochempy.to_base_units": [[281, null]], "spectrochempy.to_reduced_units": [[282, null]], "spectrochempy.to_xarray": [[283, null]], "spectrochempy.transpose": [[284, null]], "spectrochempy.trapezoid": [[285, null]], "spectrochempy.triang": [[286, null]], "spectrochempy.var": [[287, null]], "spectrochempy.voigtmodel": [[288, null]], "spectrochempy.warning_": [[289, null]], "spectrochempy.whittaker": [[290, null]], "spectrochempy.write": [[291, null]], "spectrochempy.write_csv": [[292, null]], "spectrochempy.write_excel": [[293, null]], "spectrochempy.write_jcamp": [[294, null]], "spectrochempy.write_mat": [[295, null]], "spectrochempy.write_matlab": [[296, null]], "spectrochempy.write_xls": [[297, null]], "spectrochempy.zeros": [[298, null]], "spectrochempy.zeros_like": [[299, null]], "spectrochempy.zf": [[300, null]], "spectrochempy.zf_auto": [[301, null]], "spectrochempy.zf_double": [[302, null]], "spectrochempy.zf_size": [[303, null]], "sqrt": [[337, "sqrt"]], "square": [[337, "square"]], "subtract": [[337, "subtract"]], "tan": [[337, "tan"]], "tanh": [[337, "tanh"]], "trunc": [[337, "trunc"]]}, "docnames": ["credits/citing", "credits/credits", "credits/license", "credits/seealso", "devguide/codespec_adding_reader", "devguide/contributing", "devguide/contributing_codebase", "devguide/contributing_codespecifics", "devguide/contributing_docstring", "devguide/contributing_documentation", "devguide/examples", "devguide/index", "devguide/issues", "devguide/visualcode", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_analysis/index", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_preferences", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_spc", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/e_project/index", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_core/index", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/baseline/index", "gettingstarted/examples/gallery/auto_examples_processing/baseline/plot_baseline_correction", "gettingstarted/examples/gallery/auto_examples_processing/baseline/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/raman/index", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times", "gettingstarted/examples/index", "gettingstarted/getting_help", "gettingstarted/install/index", "gettingstarted/install/install_adds", "gettingstarted/install/install_colab", "gettingstarted/install/install_mac_linux", "gettingstarted/install/install_sources", "gettingstarted/install/install_win", "gettingstarted/quickstart", "gettingstarted/whyscpy", "index", "reference/bibliography", "reference/faq", "reference/generated/spectrochempy.ActionMassKinetics", "reference/generated/spectrochempy.Baseline", "reference/generated/spectrochempy.Coord", "reference/generated/spectrochempy.CoordSet", "reference/generated/spectrochempy.EFA", "reference/generated/spectrochempy.FastICA", "reference/generated/spectrochempy.Filter", "reference/generated/spectrochempy.IRIS", "reference/generated/spectrochempy.IrisKernel", "reference/generated/spectrochempy.LSTSQ", "reference/generated/spectrochempy.MCRALS", "reference/generated/spectrochempy.NDDataset", "reference/generated/spectrochempy.NDDataset.save", "reference/generated/spectrochempy.NDDataset.save_as", "reference/generated/spectrochempy.NMF", "reference/generated/spectrochempy.NNLS", "reference/generated/spectrochempy.Optimize", "reference/generated/spectrochempy.PCA", "reference/generated/spectrochempy.PFR", "reference/generated/spectrochempy.PLSRegression", "reference/generated/spectrochempy.Project", "reference/generated/spectrochempy.Quantity", "reference/generated/spectrochempy.SIMPLISMA", "reference/generated/spectrochempy.SVD", "reference/generated/spectrochempy.Script", "reference/generated/spectrochempy.Unit", "reference/generated/spectrochempy.abs", "reference/generated/spectrochempy.absolute", "reference/generated/spectrochempy.align", "reference/generated/spectrochempy.all", "reference/generated/spectrochempy.amax", "reference/generated/spectrochempy.amin", "reference/generated/spectrochempy.any", "reference/generated/spectrochempy.arange", "reference/generated/spectrochempy.argmax", "reference/generated/spectrochempy.argmin", "reference/generated/spectrochempy.around", "reference/generated/spectrochempy.asls", "reference/generated/spectrochempy.asymmetricvoigtmodel", "reference/generated/spectrochempy.autosub", "reference/generated/spectrochempy.average", "reference/generated/spectrochempy.bartlett", "reference/generated/spectrochempy.basc", "reference/generated/spectrochempy.blackmanharris", "reference/generated/spectrochempy.clip", "reference/generated/spectrochempy.concatenate", "reference/generated/spectrochempy.conj", "reference/generated/spectrochempy.conjugate", "reference/generated/spectrochempy.coordmax", "reference/generated/spectrochempy.coordmin", "reference/generated/spectrochempy.cs", "reference/generated/spectrochempy.cumsum", "reference/generated/spectrochempy.dc", "reference/generated/spectrochempy.debug_", "reference/generated/spectrochempy.denoise", "reference/generated/spectrochempy.despike", "reference/generated/spectrochempy.detrend", "reference/generated/spectrochempy.diag", "reference/generated/spectrochempy.diagonal", "reference/generated/spectrochempy.dot", "reference/generated/spectrochempy.download_nist_ir", "reference/generated/spectrochempy.em", "reference/generated/spectrochempy.empty", "reference/generated/spectrochempy.empty_like", "reference/generated/spectrochempy.error_", "reference/generated/spectrochempy.eye", "reference/generated/spectrochempy.fft", "reference/generated/spectrochempy.find_peaks", "reference/generated/spectrochempy.fromfunction", "reference/generated/spectrochempy.fromiter", "reference/generated/spectrochempy.fsh", "reference/generated/spectrochempy.fsh2", "reference/generated/spectrochempy.full", "reference/generated/spectrochempy.full_like", "reference/generated/spectrochempy.gaussianmodel", "reference/generated/spectrochempy.general_hamming", "reference/generated/spectrochempy.geomspace", "reference/generated/spectrochempy.get_baseline", "reference/generated/spectrochempy.get_loglevel", "reference/generated/spectrochempy.gm", "reference/generated/spectrochempy.hamming", "reference/generated/spectrochempy.hann", "reference/generated/spectrochempy.ht", "reference/generated/spectrochempy.identity", "reference/generated/spectrochempy.ifft", "reference/generated/spectrochempy.info_", "reference/generated/spectrochempy.interpolate", "reference/generated/spectrochempy.is_units_compatible", "reference/generated/spectrochempy.ito", "reference/generated/spectrochempy.ito_base_units", "reference/generated/spectrochempy.ito_reduced_units", "reference/generated/spectrochempy.linspace", "reference/generated/spectrochempy.load", "reference/generated/spectrochempy.load_iris", "reference/generated/spectrochempy.logspace", "reference/generated/spectrochempy.lorentzianmodel", "reference/generated/spectrochempy.ls", "reference/generated/spectrochempy.max", "reference/generated/spectrochempy.mc", "reference/generated/spectrochempy.mean", "reference/generated/spectrochempy.min", "reference/generated/spectrochempy.multiplot", "reference/generated/spectrochempy.multiplot_image", "reference/generated/spectrochempy.multiplot_lines", "reference/generated/spectrochempy.multiplot_map", "reference/generated/spectrochempy.multiplot_scatter", "reference/generated/spectrochempy.multiplot_stack", "reference/generated/spectrochempy.multiplot_with_transposed", "reference/generated/spectrochempy.ones", "reference/generated/spectrochempy.ones_like", "reference/generated/spectrochempy.pathclean", "reference/generated/spectrochempy.pipe", "reference/generated/spectrochempy.pk", "reference/generated/spectrochempy.pk_exp", "reference/generated/spectrochempy.plot", "reference/generated/spectrochempy.plot_1D", "reference/generated/spectrochempy.plot_2D", "reference/generated/spectrochempy.plot_3D", "reference/generated/spectrochempy.plot_bar", "reference/generated/spectrochempy.plot_image", "reference/generated/spectrochempy.plot_map", "reference/generated/spectrochempy.plot_multiple", "reference/generated/spectrochempy.plot_pen", "reference/generated/spectrochempy.plot_scatter", "reference/generated/spectrochempy.plot_scatter_pen", "reference/generated/spectrochempy.plot_stack", "reference/generated/spectrochempy.plot_surface", "reference/generated/spectrochempy.plot_waterfall", "reference/generated/spectrochempy.plot_with_transposed", "reference/generated/spectrochempy.polynomialbaseline", "reference/generated/spectrochempy.ps", "reference/generated/spectrochempy.ptp", "reference/generated/spectrochempy.qsin", "reference/generated/spectrochempy.random", "reference/generated/spectrochempy.read", "reference/generated/spectrochempy.read_carroucell", "reference/generated/spectrochempy.read_csv", "reference/generated/spectrochempy.read_ddr", "reference/generated/spectrochempy.read_dir", "reference/generated/spectrochempy.read_hdr", "reference/generated/spectrochempy.read_jcamp", "reference/generated/spectrochempy.read_labspec", "reference/generated/spectrochempy.read_mat", "reference/generated/spectrochempy.read_matlab", "reference/generated/spectrochempy.read_omnic", "reference/generated/spectrochempy.read_opus", "reference/generated/spectrochempy.read_quadera", "reference/generated/spectrochempy.read_sdr", "reference/generated/spectrochempy.read_soc", "reference/generated/spectrochempy.read_spa", "reference/generated/spectrochempy.read_spc", "reference/generated/spectrochempy.read_spg", "reference/generated/spectrochempy.read_srs", "reference/generated/spectrochempy.read_topspin", "reference/generated/spectrochempy.read_wdf", "reference/generated/spectrochempy.read_wire", "reference/generated/spectrochempy.read_zip", "reference/generated/spectrochempy.remove_masks", "reference/generated/spectrochempy.roll", "reference/generated/spectrochempy.round", "reference/generated/spectrochempy.rs", "reference/generated/spectrochempy.run_all_scripts", "reference/generated/spectrochempy.run_script", "reference/generated/spectrochempy.savgol", "reference/generated/spectrochempy.set_complex", "reference/generated/spectrochempy.set_loglevel", "reference/generated/spectrochempy.set_nmr_context", "reference/generated/spectrochempy.show", "reference/generated/spectrochempy.show_versions", "reference/generated/spectrochempy.sigmoidmodel", "reference/generated/spectrochempy.simpson", "reference/generated/spectrochempy.sine", "reference/generated/spectrochempy.sinm", "reference/generated/spectrochempy.smooth", "reference/generated/spectrochempy.snip", "reference/generated/spectrochempy.sort", "reference/generated/spectrochempy.sp", "reference/generated/spectrochempy.squeeze", "reference/generated/spectrochempy.stack", "reference/generated/spectrochempy.std", "reference/generated/spectrochempy.sum", "reference/generated/spectrochempy.swapdims", "reference/generated/spectrochempy.take", "reference/generated/spectrochempy.to", "reference/generated/spectrochempy.to_array", "reference/generated/spectrochempy.to_base_units", "reference/generated/spectrochempy.to_reduced_units", "reference/generated/spectrochempy.to_xarray", "reference/generated/spectrochempy.transpose", "reference/generated/spectrochempy.trapezoid", "reference/generated/spectrochempy.triang", "reference/generated/spectrochempy.var", "reference/generated/spectrochempy.voigtmodel", "reference/generated/spectrochempy.warning_", "reference/generated/spectrochempy.whittaker", "reference/generated/spectrochempy.write", "reference/generated/spectrochempy.write_csv", "reference/generated/spectrochempy.write_excel", "reference/generated/spectrochempy.write_jcamp", "reference/generated/spectrochempy.write_mat", "reference/generated/spectrochempy.write_matlab", "reference/generated/spectrochempy.write_xls", "reference/generated/spectrochempy.zeros", "reference/generated/spectrochempy.zeros_like", "reference/generated/spectrochempy.zf", "reference/generated/spectrochempy.zf_auto", "reference/generated/spectrochempy.zf_double", "reference/generated/spectrochempy.zf_size", "reference/glossary", "reference/index", "reference/papers", "sg_execution_times", "userguide/analysis/fitting", "userguide/analysis/index", "userguide/analysis/mcr_als", "userguide/analysis/pca", "userguide/analysis/peak_finding", "userguide/analysis/peak_integration", "userguide/analysis/pls", "userguide/api/api", "userguide/importexport/import", "userguide/importexport/importIR", "userguide/importexport/importJCAMPDX", "userguide/importexport/importOMNIC", "userguide/importexport/importOPUS", "userguide/importexport/index", "userguide/index", "userguide/introduction/interface", "userguide/introduction/introduction", "userguide/introduction/mdcheatsheet", "userguide/objects/dataset/dataset", "userguide/objects/index", "userguide/objects/project/project", "userguide/plotting/plotting", "userguide/processing/alignment", "userguide/processing/apodization", "userguide/processing/baseline", "userguide/processing/denoising", "userguide/processing/fourier", "userguide/processing/index", "userguide/processing/interferogram", "userguide/processing/math_operations", "userguide/processing/slicing", "userguide/processing/smoothing", "userguide/processing/td_baseline", "userguide/processing/transformations", "whatsnew/changelog", "whatsnew/index", "whatsnew/latest", "whatsnew/v0.1.0", "whatsnew/v0.2.0", "whatsnew/v0.2.10", "whatsnew/v0.2.11", "whatsnew/v0.2.12", "whatsnew/v0.2.13", "whatsnew/v0.2.14", "whatsnew/v0.2.15", "whatsnew/v0.2.16", "whatsnew/v0.2.17", "whatsnew/v0.2.18", "whatsnew/v0.2.21", "whatsnew/v0.2.22", "whatsnew/v0.2.23", "whatsnew/v0.2.4", "whatsnew/v0.2.5", "whatsnew/v0.2.6", "whatsnew/v0.2.7", "whatsnew/v0.2.8", "whatsnew/v0.2.9", "whatsnew/v0.3.0", "whatsnew/v0.3.1", "whatsnew/v0.3.2", "whatsnew/v0.3.3", "whatsnew/v0.4.1", "whatsnew/v0.4.10", "whatsnew/v0.4.2", "whatsnew/v0.4.3", "whatsnew/v0.4.4", "whatsnew/v0.4.5", "whatsnew/v0.4.6", "whatsnew/v0.4.7", "whatsnew/v0.4.9", "whatsnew/v0.5.0", "whatsnew/v0.5.1", "whatsnew/v0.5.2", "whatsnew/v0.5.3", "whatsnew/v0.5.4", "whatsnew/v0.5.5", "whatsnew/v0.6.1", "whatsnew/v0.6.10", "whatsnew/v0.6.2", "whatsnew/v0.6.3", "whatsnew/v0.6.4", "whatsnew/v0.6.5", "whatsnew/v0.6.6", "whatsnew/v0.6.7", "whatsnew/v0.6.8", "whatsnew/v0.6.9", "whatsnew/v0.7.0", "whatsnew/v0.7.1", "whatsnew/v0.7.2", "whatsnew/v0.8.0", "whatsnew/v0.8.1"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinxcontrib.bibtex": 9}, "filenames": ["credits/citing.rst", "credits/credits.rst", "credits/license.rst", "credits/seealso.rst", "devguide/codespec_adding_reader.rst", "devguide/contributing.rst", "devguide/contributing_codebase.rst", "devguide/contributing_codespecifics.rst", "devguide/contributing_docstring.rst", "devguide/contributing_documentation.rst", "devguide/examples.rst", "devguide/index.rst", "devguide/issues.rst", "devguide/visualcode.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa_keller_massart.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_fast_ica.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_chrom1.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_mcrals_kinetics.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_nmf.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_iris.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_pca_spec.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_simplisma.rst", "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/plot_pls.rst", "gettingstarted/examples/gallery/auto_examples_analysis/b_crossdecomposition/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_fit.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/plot_lstsq_single_equation.rst", "gettingstarted/examples/gallery/auto_examples_analysis/c_curvefitting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_analysis/index.rst", "gettingstarted/examples/gallery/auto_examples_analysis/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/index.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_a_create_dataset.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_b_coordinates.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_c_units.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_preferences.rst", "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/index.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_generic_read.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_omnic.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_IR_from_opus.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_nmr_from_bruker.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_raman_from_labspec.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_renishaw.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/plot_read_spc.rst", "gettingstarted/examples/gallery/auto_examples_core/c_importer/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/index.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plot_multiple.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/plot_plotting.rst", "gettingstarted/examples/gallery/auto_examples_core/d_plotting/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/index.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/plot_project.rst", "gettingstarted/examples/gallery/auto_examples_core/e_project/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_core/index.rst", "gettingstarted/examples/gallery/auto_examples_core/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_em.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/plot_proc_sp.rst", "gettingstarted/examples/gallery/auto_examples_processing/apodization/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/baseline/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/baseline/plot_baseline_correction.rst", "gettingstarted/examples/gallery/auto_examples_processing/baseline/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_denoising.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/plot_despike.rst", "gettingstarted/examples/gallery/auto_examples_processing/denoising/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/plot_filter.rst", "gettingstarted/examples/gallery/auto_examples_processing/filtering/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_cp_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/plot_processing_nmr_relax.rst", "gettingstarted/examples/gallery/auto_examples_processing/nmr/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/index.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/plot_processing_raman.rst", "gettingstarted/examples/gallery/auto_examples_processing/raman/sg_execution_times.rst", "gettingstarted/examples/gallery/auto_examples_processing/sg_execution_times.rst", "gettingstarted/examples/index.rst", "gettingstarted/getting_help.rst", "gettingstarted/install/index.rst", "gettingstarted/install/install_adds.rst", "gettingstarted/install/install_colab.rst", "gettingstarted/install/install_mac_linux.rst", "gettingstarted/install/install_sources.rst", "gettingstarted/install/install_win.rst", "gettingstarted/quickstart.ipynb", "gettingstarted/whyscpy.rst", "index.rst", "reference/bibliography.rst", "reference/faq.rst", "reference/generated/spectrochempy.ActionMassKinetics.rst", "reference/generated/spectrochempy.Baseline.rst", "reference/generated/spectrochempy.Coord.rst", "reference/generated/spectrochempy.CoordSet.rst", "reference/generated/spectrochempy.EFA.rst", "reference/generated/spectrochempy.FastICA.rst", "reference/generated/spectrochempy.Filter.rst", "reference/generated/spectrochempy.IRIS.rst", "reference/generated/spectrochempy.IrisKernel.rst", "reference/generated/spectrochempy.LSTSQ.rst", "reference/generated/spectrochempy.MCRALS.rst", "reference/generated/spectrochempy.NDDataset.rst", "reference/generated/spectrochempy.NDDataset.save.rst", "reference/generated/spectrochempy.NDDataset.save_as.rst", "reference/generated/spectrochempy.NMF.rst", "reference/generated/spectrochempy.NNLS.rst", "reference/generated/spectrochempy.Optimize.rst", "reference/generated/spectrochempy.PCA.rst", "reference/generated/spectrochempy.PFR.rst", "reference/generated/spectrochempy.PLSRegression.rst", "reference/generated/spectrochempy.Project.rst", "reference/generated/spectrochempy.Quantity.rst", "reference/generated/spectrochempy.SIMPLISMA.rst", "reference/generated/spectrochempy.SVD.rst", "reference/generated/spectrochempy.Script.rst", "reference/generated/spectrochempy.Unit.rst", "reference/generated/spectrochempy.abs.rst", "reference/generated/spectrochempy.absolute.rst", "reference/generated/spectrochempy.align.rst", "reference/generated/spectrochempy.all.rst", "reference/generated/spectrochempy.amax.rst", "reference/generated/spectrochempy.amin.rst", "reference/generated/spectrochempy.any.rst", "reference/generated/spectrochempy.arange.rst", "reference/generated/spectrochempy.argmax.rst", "reference/generated/spectrochempy.argmin.rst", "reference/generated/spectrochempy.around.rst", "reference/generated/spectrochempy.asls.rst", "reference/generated/spectrochempy.asymmetricvoigtmodel.rst", "reference/generated/spectrochempy.autosub.rst", "reference/generated/spectrochempy.average.rst", "reference/generated/spectrochempy.bartlett.rst", "reference/generated/spectrochempy.basc.rst", "reference/generated/spectrochempy.blackmanharris.rst", "reference/generated/spectrochempy.clip.rst", "reference/generated/spectrochempy.concatenate.rst", "reference/generated/spectrochempy.conj.rst", "reference/generated/spectrochempy.conjugate.rst", "reference/generated/spectrochempy.coordmax.rst", "reference/generated/spectrochempy.coordmin.rst", "reference/generated/spectrochempy.cs.rst", "reference/generated/spectrochempy.cumsum.rst", "reference/generated/spectrochempy.dc.rst", "reference/generated/spectrochempy.debug_.rst", "reference/generated/spectrochempy.denoise.rst", "reference/generated/spectrochempy.despike.rst", "reference/generated/spectrochempy.detrend.rst", "reference/generated/spectrochempy.diag.rst", "reference/generated/spectrochempy.diagonal.rst", "reference/generated/spectrochempy.dot.rst", "reference/generated/spectrochempy.download_nist_ir.rst", "reference/generated/spectrochempy.em.rst", "reference/generated/spectrochempy.empty.rst", "reference/generated/spectrochempy.empty_like.rst", "reference/generated/spectrochempy.error_.rst", "reference/generated/spectrochempy.eye.rst", "reference/generated/spectrochempy.fft.rst", "reference/generated/spectrochempy.find_peaks.rst", "reference/generated/spectrochempy.fromfunction.rst", "reference/generated/spectrochempy.fromiter.rst", "reference/generated/spectrochempy.fsh.rst", "reference/generated/spectrochempy.fsh2.rst", "reference/generated/spectrochempy.full.rst", "reference/generated/spectrochempy.full_like.rst", "reference/generated/spectrochempy.gaussianmodel.rst", "reference/generated/spectrochempy.general_hamming.rst", "reference/generated/spectrochempy.geomspace.rst", "reference/generated/spectrochempy.get_baseline.rst", "reference/generated/spectrochempy.get_loglevel.rst", "reference/generated/spectrochempy.gm.rst", "reference/generated/spectrochempy.hamming.rst", "reference/generated/spectrochempy.hann.rst", "reference/generated/spectrochempy.ht.rst", "reference/generated/spectrochempy.identity.rst", "reference/generated/spectrochempy.ifft.rst", "reference/generated/spectrochempy.info_.rst", "reference/generated/spectrochempy.interpolate.rst", "reference/generated/spectrochempy.is_units_compatible.rst", "reference/generated/spectrochempy.ito.rst", "reference/generated/spectrochempy.ito_base_units.rst", "reference/generated/spectrochempy.ito_reduced_units.rst", "reference/generated/spectrochempy.linspace.rst", "reference/generated/spectrochempy.load.rst", "reference/generated/spectrochempy.load_iris.rst", "reference/generated/spectrochempy.logspace.rst", "reference/generated/spectrochempy.lorentzianmodel.rst", "reference/generated/spectrochempy.ls.rst", "reference/generated/spectrochempy.max.rst", "reference/generated/spectrochempy.mc.rst", "reference/generated/spectrochempy.mean.rst", "reference/generated/spectrochempy.min.rst", "reference/generated/spectrochempy.multiplot.rst", "reference/generated/spectrochempy.multiplot_image.rst", "reference/generated/spectrochempy.multiplot_lines.rst", "reference/generated/spectrochempy.multiplot_map.rst", "reference/generated/spectrochempy.multiplot_scatter.rst", "reference/generated/spectrochempy.multiplot_stack.rst", "reference/generated/spectrochempy.multiplot_with_transposed.rst", "reference/generated/spectrochempy.ones.rst", "reference/generated/spectrochempy.ones_like.rst", "reference/generated/spectrochempy.pathclean.rst", "reference/generated/spectrochempy.pipe.rst", "reference/generated/spectrochempy.pk.rst", "reference/generated/spectrochempy.pk_exp.rst", "reference/generated/spectrochempy.plot.rst", "reference/generated/spectrochempy.plot_1D.rst", "reference/generated/spectrochempy.plot_2D.rst", "reference/generated/spectrochempy.plot_3D.rst", "reference/generated/spectrochempy.plot_bar.rst", "reference/generated/spectrochempy.plot_image.rst", "reference/generated/spectrochempy.plot_map.rst", "reference/generated/spectrochempy.plot_multiple.rst", "reference/generated/spectrochempy.plot_pen.rst", "reference/generated/spectrochempy.plot_scatter.rst", "reference/generated/spectrochempy.plot_scatter_pen.rst", "reference/generated/spectrochempy.plot_stack.rst", "reference/generated/spectrochempy.plot_surface.rst", "reference/generated/spectrochempy.plot_waterfall.rst", "reference/generated/spectrochempy.plot_with_transposed.rst", "reference/generated/spectrochempy.polynomialbaseline.rst", "reference/generated/spectrochempy.ps.rst", "reference/generated/spectrochempy.ptp.rst", "reference/generated/spectrochempy.qsin.rst", "reference/generated/spectrochempy.random.rst", "reference/generated/spectrochempy.read.rst", "reference/generated/spectrochempy.read_carroucell.rst", "reference/generated/spectrochempy.read_csv.rst", "reference/generated/spectrochempy.read_ddr.rst", "reference/generated/spectrochempy.read_dir.rst", "reference/generated/spectrochempy.read_hdr.rst", "reference/generated/spectrochempy.read_jcamp.rst", "reference/generated/spectrochempy.read_labspec.rst", "reference/generated/spectrochempy.read_mat.rst", "reference/generated/spectrochempy.read_matlab.rst", "reference/generated/spectrochempy.read_omnic.rst", "reference/generated/spectrochempy.read_opus.rst", "reference/generated/spectrochempy.read_quadera.rst", "reference/generated/spectrochempy.read_sdr.rst", "reference/generated/spectrochempy.read_soc.rst", "reference/generated/spectrochempy.read_spa.rst", "reference/generated/spectrochempy.read_spc.rst", "reference/generated/spectrochempy.read_spg.rst", "reference/generated/spectrochempy.read_srs.rst", "reference/generated/spectrochempy.read_topspin.rst", "reference/generated/spectrochempy.read_wdf.rst", "reference/generated/spectrochempy.read_wire.rst", "reference/generated/spectrochempy.read_zip.rst", "reference/generated/spectrochempy.remove_masks.rst", "reference/generated/spectrochempy.roll.rst", "reference/generated/spectrochempy.round.rst", "reference/generated/spectrochempy.rs.rst", "reference/generated/spectrochempy.run_all_scripts.rst", "reference/generated/spectrochempy.run_script.rst", "reference/generated/spectrochempy.savgol.rst", "reference/generated/spectrochempy.set_complex.rst", "reference/generated/spectrochempy.set_loglevel.rst", "reference/generated/spectrochempy.set_nmr_context.rst", "reference/generated/spectrochempy.show.rst", "reference/generated/spectrochempy.show_versions.rst", "reference/generated/spectrochempy.sigmoidmodel.rst", "reference/generated/spectrochempy.simpson.rst", "reference/generated/spectrochempy.sine.rst", "reference/generated/spectrochempy.sinm.rst", "reference/generated/spectrochempy.smooth.rst", "reference/generated/spectrochempy.snip.rst", "reference/generated/spectrochempy.sort.rst", "reference/generated/spectrochempy.sp.rst", "reference/generated/spectrochempy.squeeze.rst", "reference/generated/spectrochempy.stack.rst", "reference/generated/spectrochempy.std.rst", "reference/generated/spectrochempy.sum.rst", "reference/generated/spectrochempy.swapdims.rst", "reference/generated/spectrochempy.take.rst", "reference/generated/spectrochempy.to.rst", "reference/generated/spectrochempy.to_array.rst", "reference/generated/spectrochempy.to_base_units.rst", "reference/generated/spectrochempy.to_reduced_units.rst", "reference/generated/spectrochempy.to_xarray.rst", "reference/generated/spectrochempy.transpose.rst", "reference/generated/spectrochempy.trapezoid.rst", "reference/generated/spectrochempy.triang.rst", "reference/generated/spectrochempy.var.rst", "reference/generated/spectrochempy.voigtmodel.rst", "reference/generated/spectrochempy.warning_.rst", "reference/generated/spectrochempy.whittaker.rst", "reference/generated/spectrochempy.write.rst", "reference/generated/spectrochempy.write_csv.rst", "reference/generated/spectrochempy.write_excel.rst", "reference/generated/spectrochempy.write_jcamp.rst", "reference/generated/spectrochempy.write_mat.rst", "reference/generated/spectrochempy.write_matlab.rst", "reference/generated/spectrochempy.write_xls.rst", "reference/generated/spectrochempy.zeros.rst", "reference/generated/spectrochempy.zeros_like.rst", "reference/generated/spectrochempy.zf.rst", "reference/generated/spectrochempy.zf_auto.rst", "reference/generated/spectrochempy.zf_double.rst", "reference/generated/spectrochempy.zf_size.rst", "reference/glossary.rst", "reference/index.rst", "reference/papers.rst", "sg_execution_times.rst", "userguide/analysis/fitting.ipynb", "userguide/analysis/index.rst", "userguide/analysis/mcr_als.ipynb", "userguide/analysis/pca.ipynb", "userguide/analysis/peak_finding.ipynb", "userguide/analysis/peak_integration.ipynb", "userguide/analysis/pls.ipynb", "userguide/api/api.ipynb", "userguide/importexport/import.ipynb", "userguide/importexport/importIR.rst", "userguide/importexport/importJCAMPDX.ipynb", "userguide/importexport/importOMNIC.ipynb", "userguide/importexport/importOPUS.ipynb", "userguide/importexport/index.rst", "userguide/index.rst", "userguide/introduction/interface.ipynb", "userguide/introduction/introduction.ipynb", "userguide/introduction/mdcheatsheet.ipynb", "userguide/objects/dataset/dataset.ipynb", "userguide/objects/index.rst", "userguide/objects/project/project.ipynb", "userguide/plotting/plotting.ipynb", "userguide/processing/alignment.ipynb", "userguide/processing/apodization.ipynb", "userguide/processing/baseline.ipynb", "userguide/processing/denoising.ipynb", "userguide/processing/fourier.ipynb", "userguide/processing/index.rst", "userguide/processing/interferogram.ipynb", "userguide/processing/math_operations.ipynb", "userguide/processing/slicing.ipynb", "userguide/processing/smoothing.ipynb", "userguide/processing/td_baseline.ipynb", "userguide/processing/transformations.ipynb", "whatsnew/changelog.rst", "whatsnew/index.rst", "whatsnew/latest.rst", "whatsnew/v0.1.0.rst", "whatsnew/v0.2.0.rst", "whatsnew/v0.2.10.rst", "whatsnew/v0.2.11.rst", "whatsnew/v0.2.12.rst", "whatsnew/v0.2.13.rst", "whatsnew/v0.2.14.rst", "whatsnew/v0.2.15.rst", "whatsnew/v0.2.16.rst", "whatsnew/v0.2.17.rst", "whatsnew/v0.2.18.rst", "whatsnew/v0.2.21.rst", "whatsnew/v0.2.22.rst", "whatsnew/v0.2.23.rst", "whatsnew/v0.2.4.rst", "whatsnew/v0.2.5.rst", "whatsnew/v0.2.6.rst", "whatsnew/v0.2.7.rst", "whatsnew/v0.2.8.rst", "whatsnew/v0.2.9.rst", "whatsnew/v0.3.0.rst", "whatsnew/v0.3.1.rst", "whatsnew/v0.3.2.rst", "whatsnew/v0.3.3.rst", "whatsnew/v0.4.1.rst", "whatsnew/v0.4.10.rst", "whatsnew/v0.4.2.rst", "whatsnew/v0.4.3.rst", "whatsnew/v0.4.4.rst", "whatsnew/v0.4.5.rst", "whatsnew/v0.4.6.rst", "whatsnew/v0.4.7.rst", "whatsnew/v0.4.9.rst", "whatsnew/v0.5.0.rst", "whatsnew/v0.5.1.rst", "whatsnew/v0.5.2.rst", "whatsnew/v0.5.3.rst", "whatsnew/v0.5.4.rst", "whatsnew/v0.5.5.rst", "whatsnew/v0.6.1.rst", "whatsnew/v0.6.10.rst", "whatsnew/v0.6.2.rst", "whatsnew/v0.6.3.rst", "whatsnew/v0.6.4.rst", "whatsnew/v0.6.5.rst", "whatsnew/v0.6.6.rst", "whatsnew/v0.6.7.rst", "whatsnew/v0.6.8.rst", "whatsnew/v0.6.9.rst", "whatsnew/v0.7.0.rst", "whatsnew/v0.7.1.rst", "whatsnew/v0.7.2.rst", "whatsnew/v0.8.0.rst", "whatsnew/v0.8.1.rst"], "indexentries": {"a (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.A", false]], "a (fastica attribute)": [[101, "spectrochempy.FastICA.A", false]], "abs() (in module spectrochempy)": [[122, "spectrochempy.abs", false]], "abs() (nddataset method)": [[107, "spectrochempy.NDDataset.abs", false]], "absolute() (in module spectrochempy)": [[123, "spectrochempy.absolute", false]], "absolute() (nddataset method)": [[107, "spectrochempy.NDDataset.absolute", false]], "acquisition_date (nddataset attribute)": [[107, "spectrochempy.NDDataset.acquisition_date", false]], "actionmasskinetics (class in spectrochempy)": [[96, "spectrochempy.ActionMassKinetics", false]], "add_coordset() (nddataset method)": [[107, "spectrochempy.NDDataset.add_coordset", false]], "add_dataset() (project method)": [[116, "spectrochempy.Project.add_dataset", false]], "add_datasets() (project method)": [[116, "spectrochempy.Project.add_datasets", false]], "add_project() (project method)": [[116, "spectrochempy.Project.add_project", false]], "add_projects() (project method)": [[116, "spectrochempy.Project.add_projects", false]], "add_script() (project method)": [[116, "spectrochempy.Project.add_script", false]], "add_scripts() (project method)": [[116, "spectrochempy.Project.add_scripts", false]], "algorithm (fastica attribute)": [[101, "spectrochempy.FastICA.algorithm", false]], "align() (in module spectrochempy)": [[124, "spectrochempy.align", false]], "all() (in module spectrochempy)": [[125, "spectrochempy.all", false]], "all() (nddataset method)": [[107, "spectrochempy.NDDataset.all", false]], "allitems (project attribute)": [[116, "spectrochempy.Project.allitems", false]], "allnames (project attribute)": [[116, "spectrochempy.Project.allnames", false]], "alpha_h (nmf attribute)": [[110, "spectrochempy.NMF.alpha_H", false]], "alpha_w (nmf attribute)": [[110, "spectrochempy.NMF.alpha_W", false]], "als": [[304, "term-ALS", true]], "amax() (coord method)": [[98, "spectrochempy.Coord.amax", false]], "amax() (in module spectrochempy)": [[126, "spectrochempy.amax", false]], "amax() (nddataset method)": [[107, "spectrochempy.NDDataset.amax", false]], "amin() (coord method)": [[98, "spectrochempy.Coord.amin", false]], "amin() (in module spectrochempy)": [[127, "spectrochempy.amin", false]], "amin() (nddataset method)": [[107, "spectrochempy.NDDataset.amin", false]], "amplitude_mode (optimize attribute)": [[112, "spectrochempy.Optimize.amplitude_mode", false]], "any() (in module spectrochempy)": [[128, "spectrochempy.any", false]], "any() (nddataset method)": [[107, "spectrochempy.NDDataset.any", false]], "api": [[304, "term-API", true]], "arange() (coord method)": [[98, "spectrochempy.Coord.arange", false]], "arange() (in module spectrochempy)": [[129, "spectrochempy.arange", false]], "arange() (nddataset method)": [[107, "spectrochempy.NDDataset.arange", false]], "argmax() (in module spectrochempy)": [[130, "spectrochempy.argmax", false]], "argmax() (nddataset method)": [[107, "spectrochempy.NDDataset.argmax", false]], "argmin() (in module spectrochempy)": [[131, "spectrochempy.argmin", false]], "argmin() (nddataset method)": [[107, "spectrochempy.NDDataset.argmin", false]], "args (asymmetricvoigtmodel attribute)": [[134, "spectrochempy.asymmetricvoigtmodel.args", false]], "args (gaussianmodel attribute)": [[170, "spectrochempy.gaussianmodel.args", false]], "args (lorentzianmodel attribute)": [[191, "spectrochempy.lorentzianmodel.args", false]], "args (polynomialbaseline attribute)": [[225, "spectrochempy.polynomialbaseline.args", false]], "args (sigmoidmodel attribute)": [[265, "spectrochempy.sigmoidmodel.args", false]], "args (voigtmodel attribute)": [[288, "spectrochempy.voigtmodel.args", false]], "argsgetconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.argsGetConc", false]], "argsgetspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.argsGetSpec", false]], "around() (coord method)": [[98, "spectrochempy.Coord.around", false]], "around() (in module spectrochempy)": [[132, "spectrochempy.around", false]], "around() (nddataset method)": [[107, "spectrochempy.NDDataset.around", false]], "array-like": [[304, "term-array-like", true]], "asfortranarray() (nddataset method)": [[107, "spectrochempy.NDDataset.asfortranarray", false]], "asls": [[304, "term-AsLS", true]], "asls() (in module spectrochempy)": [[133, "spectrochempy.asls", false]], "astype() (coord method)": [[98, "spectrochempy.Coord.astype", false]], "astype() (nddataset method)": [[107, "spectrochempy.NDDataset.astype", false]], "asymmetricvoigtmodel (class in spectrochempy)": [[134, "spectrochempy.asymmetricvoigtmodel", false]], "asymmetry (baseline attribute)": [[97, "spectrochempy.Baseline.asymmetry", false]], "atleast_2d() (nddataset method)": [[107, "spectrochempy.NDDataset.atleast_2d", false]], "author (nddataset attribute)": [[107, "spectrochempy.NDDataset.author", false]], "autoampl (optimize attribute)": [[112, "spectrochempy.Optimize.autoampl", false]], "autobase (optimize attribute)": [[112, "spectrochempy.Optimize.autobase", false]], "autosub() (in module spectrochempy)": [[135, "spectrochempy.autosub", false]], "available_names (coordset attribute)": [[99, "spectrochempy.CoordSet.available_names", false]], "average() (in module spectrochempy)": [[136, "spectrochempy.average", false]], "average() (nddataset method)": [[107, "spectrochempy.NDDataset.average", false]], "ax (nddataset attribute)": [[107, "spectrochempy.NDDataset.ax", false]], "axec (nddataset attribute)": [[107, "spectrochempy.NDDataset.axec", false]], "axect (nddataset attribute)": [[107, "spectrochempy.NDDataset.axecT", false]], "axex (nddataset attribute)": [[107, "spectrochempy.NDDataset.axex", false]], "axey (nddataset attribute)": [[107, "spectrochempy.NDDataset.axey", false]], "axt (nddataset attribute)": [[107, "spectrochempy.NDDataset.axT", false]], "b (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.B", false]], "b_ev (efa attribute)": [[100, "spectrochempy.EFA.b_ev", false]], "bartlett() (in module spectrochempy)": [[137, "spectrochempy.bartlett", false]], "basc() (in module spectrochempy)": [[138, "spectrochempy.basc", false]], "baseline (baseline attribute)": [[97, "spectrochempy.Baseline.baseline", false]], "baseline (class in spectrochempy)": [[97, "spectrochempy.Baseline", false]], "beta_loss (nmf attribute)": [[110, "spectrochempy.NMF.beta_loss", false]], "blackmanharris() (in module spectrochempy)": [[139, "spectrochempy.blackmanharris", false]], "breakpoints (baseline attribute)": [[97, "spectrochempy.Baseline.breakpoints", false]], "c (mcrals attribute)": [[106, "spectrochempy.MCRALS.C", false]], "c (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.C", false]], "c_constrained (mcrals attribute)": [[106, "spectrochempy.MCRALS.C_constrained", false]], "c_constrained_list (mcrals attribute)": [[106, "spectrochempy.MCRALS.C_constrained_list", false]], "c_ls_list (mcrals attribute)": [[106, "spectrochempy.MCRALS.C_ls_list", false]], "callback_every (optimize attribute)": [[112, "spectrochempy.Optimize.callback_every", false]], "carroucell": [[304, "term-Carroucell", true]], "check() (quantity method)": [[117, "spectrochempy.Quantity.check", false]], "clip() (in module spectrochempy)": [[140, "spectrochempy.clip", false]], "clip() (nddataset method)": [[107, "spectrochempy.NDDataset.clip", false]], "close_figure() (nddataset method)": [[107, "spectrochempy.NDDataset.close_figure", false]], "closure": [[304, "term-closure", true]], "closureconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.closureConc", false]], "closuremethod (mcrals attribute)": [[106, "spectrochempy.MCRALS.closureMethod", false]], "closures": [[304, "term-closures", true]], "closuretarget (mcrals attribute)": [[106, "spectrochempy.MCRALS.closureTarget", false]], "coef (lstsq attribute)": [[105, "spectrochempy.LSTSQ.coef", false]], "coef (nnls attribute)": [[111, "spectrochempy.NNLS.coef", false]], "comment (nddataset attribute)": [[107, "spectrochempy.NDDataset.comment", false]], "component() (nddataset method)": [[107, "spectrochempy.NDDataset.component", false]], "components (efa attribute)": [[100, "spectrochempy.EFA.components", false]], "components (fastica attribute)": [[101, "spectrochempy.FastICA.components", false]], "components (iris attribute)": [[103, "spectrochempy.IRIS.components", false]], "components (mcrals attribute)": [[106, "spectrochempy.MCRALS.components", false]], "components (nmf attribute)": [[110, "spectrochempy.NMF.components", false]], "components (optimize attribute)": [[112, "spectrochempy.Optimize.components", false]], "components (pca attribute)": [[113, "spectrochempy.PCA.components", false]], "components (plsregression attribute)": [[115, "spectrochempy.PLSRegression.components", false]], "components (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.components", false]], "components (svd attribute)": [[119, "spectrochempy.SVD.components", false]], "compute() (quantity method)": [[117, "spectrochempy.Quantity.compute", false]], "compute_uv (svd attribute)": [[119, "spectrochempy.SVD.compute_uv", false]], "concatenate() (in module spectrochempy)": [[141, "spectrochempy.concatenate", false]], "config (baseline attribute)": [[97, "spectrochempy.Baseline.config", false]], "config (efa attribute)": [[100, "spectrochempy.EFA.config", false]], "config (fastica attribute)": [[101, "spectrochempy.FastICA.config", false]], "config (filter attribute)": [[102, "spectrochempy.Filter.config", false]], "config (iris attribute)": [[103, "spectrochempy.IRIS.config", false]], "config (lstsq attribute)": [[105, "spectrochempy.LSTSQ.config", false]], "config (mcrals attribute)": [[106, "spectrochempy.MCRALS.config", false]], "config (nmf attribute)": [[110, "spectrochempy.NMF.config", false]], "config (nnls attribute)": [[111, "spectrochempy.NNLS.config", false]], "config (optimize attribute)": [[112, "spectrochempy.Optimize.config", false]], "config (pca attribute)": [[113, "spectrochempy.PCA.config", false]], "config (plsregression attribute)": [[115, "spectrochempy.PLSRegression.config", false]], "config (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.config", false]], "config (svd attribute)": [[119, "spectrochempy.SVD.config", false]], "conj() (in module spectrochempy)": [[142, "spectrochempy.conj", false]], "conj() (nddataset method)": [[107, "spectrochempy.NDDataset.conj", false]], "conjugate() (in module spectrochempy)": [[143, "spectrochempy.conjugate", false]], "conjugate() (nddataset method)": [[107, "spectrochempy.NDDataset.conjugate", false]], "constraints (optimize attribute)": [[112, "spectrochempy.Optimize.constraints", false]], "coord (class in spectrochempy)": [[98, "spectrochempy.Coord", false]], "coord() (nddataset method)": [[107, "spectrochempy.NDDataset.coord", false]], "coordmax() (in module spectrochempy)": [[144, "spectrochempy.coordmax", false]], "coordmax() (nddataset method)": [[107, "spectrochempy.NDDataset.coordmax", false]], "coordmin() (in module spectrochempy)": [[145, "spectrochempy.coordmin", false]], "coordmin() (nddataset method)": [[107, "spectrochempy.NDDataset.coordmin", false]], "coordnames (nddataset attribute)": [[107, "spectrochempy.NDDataset.coordnames", false]], "coords (coordset attribute)": [[99, "spectrochempy.CoordSet.coords", false]], "coordset (class in spectrochempy)": [[99, "spectrochempy.CoordSet", false]], "coordset (nddataset attribute)": [[107, "spectrochempy.NDDataset.coordset", false]], "coordtitles (nddataset attribute)": [[107, "spectrochempy.NDDataset.coordtitles", false]], "coordunits (nddataset attribute)": [[107, "spectrochempy.NDDataset.coordunits", false]], "copy() (coord method)": [[98, "spectrochempy.Coord.copy", false]], "copy() (coordset method)": [[99, "spectrochempy.CoordSet.copy", false]], "copy() (nddataset method)": [[107, "spectrochempy.NDDataset.copy", false]], "copy() (project method)": [[116, "spectrochempy.Project.copy", false]], "corrected (baseline attribute)": [[97, "spectrochempy.Baseline.corrected", false]], "created (nddataset attribute)": [[107, "spectrochempy.NDDataset.created", false]], "cs() (in module spectrochempy)": [[146, "spectrochempy.cs", false]], "cumsum() (in module spectrochempy)": [[147, "spectrochempy.cumsum", false]], "cumsum() (nddataset method)": [[107, "spectrochempy.NDDataset.cumsum", false]], "cumulative_explained_variance (svd attribute)": [[119, "spectrochempy.SVD.cumulative_explained_variance", false]], "cutoff (efa attribute)": [[100, "spectrochempy.EFA.cutoff", false]], "cval (filter attribute)": [[102, "spectrochempy.Filter.cval", false]], "data (coord attribute)": [[98, "spectrochempy.Coord.data", false]], "data (nddataset attribute)": [[107, "spectrochempy.NDDataset.data", false]], "datasets (project attribute)": [[116, "spectrochempy.Project.datasets", false]], "datasets_names (project attribute)": [[116, "spectrochempy.Project.datasets_names", false]], "dc() (in module spectrochempy)": [[148, "spectrochempy.dc", false]], "debug_() (in module spectrochempy)": [[149, "spectrochempy.debug_", false]], "default (coordset attribute)": [[99, "spectrochempy.CoordSet.default", false]], "default_format (quantity attribute)": [[117, "spectrochempy.Quantity.default_format", false]], "default_format (unit attribute)": [[121, "spectrochempy.Unit.default_format", false]], "delete_coordset() (nddataset method)": [[107, "spectrochempy.NDDataset.delete_coordset", false]], "delta (filter attribute)": [[102, "spectrochempy.Filter.delta", false]], "denoise() (in module spectrochempy)": [[150, "spectrochempy.denoise", false]], "deriv (filter attribute)": [[102, "spectrochempy.Filter.deriv", false]], "description (lstsq attribute)": [[105, "spectrochempy.LSTSQ.description", false]], "description (nddataset attribute)": [[107, "spectrochempy.NDDataset.description", false]], "description (nnls attribute)": [[111, "spectrochempy.NNLS.description", false]], "despike() (in module spectrochempy)": [[151, "spectrochempy.despike", false]], "detrend() (in module spectrochempy)": [[152, "spectrochempy.detrend", false]], "diag() (in module spectrochempy)": [[153, "spectrochempy.diag", false]], "diag() (nddataset method)": [[107, "spectrochempy.NDDataset.diag", false]], "diagonal() (in module spectrochempy)": [[154, "spectrochempy.diagonal", false]], "diagonal() (nddataset method)": [[107, "spectrochempy.NDDataset.diagonal", false]], "dimensionality (quantity attribute)": [[117, "spectrochempy.Quantity.dimensionality", false]], "dimensionality (unit attribute)": [[121, "spectrochempy.Unit.dimensionality", false]], "dimensionless (coord attribute)": [[98, "spectrochempy.Coord.dimensionless", false]], "dimensionless (nddataset attribute)": [[107, "spectrochempy.NDDataset.dimensionless", false]], "dimensionless (quantity attribute)": [[117, "spectrochempy.Quantity.dimensionless", false]], "dimensionless (unit attribute)": [[121, "spectrochempy.Unit.dimensionless", false]], "dims (nddataset attribute)": [[107, "spectrochempy.NDDataset.dims", false]], "directory (nddataset attribute)": [[107, "spectrochempy.NDDataset.directory", false]], "divider (nddataset attribute)": [[107, "spectrochempy.NDDataset.divider", false]], "dot() (in module spectrochempy)": [[155, "spectrochempy.dot", false]], "dot() (quantity method)": [[117, "spectrochempy.Quantity.dot", false]], "download_nist_ir() (in module spectrochempy)": [[156, "spectrochempy.download_nist_ir", false]], "dry (optimize attribute)": [[112, "spectrochempy.Optimize.dry", false]], "dtype (coord attribute)": [[98, "spectrochempy.Coord.dtype", false]], "dtype (nddataset attribute)": [[107, "spectrochempy.NDDataset.dtype", false]], "dump() (nddataset method)": [[107, "spectrochempy.NDDataset.dump", false]], "dump() (project method)": [[116, "spectrochempy.Project.dump", false]], "efa": [[304, "term-EFA", true]], "efa (class in spectrochempy)": [[100, "spectrochempy.EFA", false]], "em() (in module spectrochempy)": [[157, "spectrochempy.em", false]], "empty() (in module spectrochempy)": [[158, "spectrochempy.empty", false]], "empty() (nddataset method)": [[107, "spectrochempy.NDDataset.empty", false]], "empty_like() (in module spectrochempy)": [[159, "spectrochempy.empty_like", false]], "empty_like() (nddataset method)": [[107, "spectrochempy.NDDataset.empty_like", false]], "error_() (in module spectrochempy)": [[160, "spectrochempy.error_", false]], "ev (svd attribute)": [[119, "spectrochempy.SVD.ev", false]], "ev_cum (svd attribute)": [[119, "spectrochempy.SVD.ev_cum", false]], "ev_ratio (svd attribute)": [[119, "spectrochempy.SVD.ev_ratio", false]], "explained_variance (svd attribute)": [[119, "spectrochempy.SVD.explained_variance", false]], "explained_variance_ratio (svd attribute)": [[119, "spectrochempy.SVD.explained_variance_ratio", false]], "extraoutputgetconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.extraOutputGetConc", false]], "extraoutputgetspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.extraOutputGetSpec", false]], "eye() (in module spectrochempy)": [[161, "spectrochempy.eye", false]], "eye() (nddataset method)": [[107, "spectrochempy.NDDataset.eye", false]], "f_ev (efa attribute)": [[100, "spectrochempy.EFA.f_ev", false]], "fastica (class in spectrochempy)": [[101, "spectrochempy.FastICA", false]], "fft() (in module spectrochempy)": [[162, "spectrochempy.fft", false]], "fig (nddataset attribute)": [[107, "spectrochempy.NDDataset.fig", false]], "fignum (nddataset attribute)": [[107, "spectrochempy.NDDataset.fignum", false]], "filename (nddataset attribute)": [[107, "spectrochempy.NDDataset.filename", false]], "filename (project attribute)": [[116, "spectrochempy.Project.filename", false]], "filetype (nddataset attribute)": [[107, "spectrochempy.NDDataset.filetype", false]], "filetype (project attribute)": [[116, "spectrochempy.Project.filetype", false]], "filter (class in spectrochempy)": [[102, "spectrochempy.Filter", false]], "find_peaks() (in module spectrochempy)": [[163, "spectrochempy.find_peaks", false]], "fit() (baseline method)": [[97, "spectrochempy.Baseline.fit", false]], "fit() (efa method)": [[100, "spectrochempy.EFA.fit", false]], "fit() (fastica method)": [[101, "spectrochempy.FastICA.fit", false]], "fit() (iris method)": [[103, "spectrochempy.IRIS.fit", false]], "fit() (lstsq method)": [[105, "spectrochempy.LSTSQ.fit", false]], "fit() (mcrals method)": [[106, "spectrochempy.MCRALS.fit", false]], "fit() (nmf method)": [[110, "spectrochempy.NMF.fit", false]], "fit() (nnls method)": [[111, "spectrochempy.NNLS.fit", false]], "fit() (optimize method)": [[112, "spectrochempy.Optimize.fit", false]], "fit() (pca method)": [[113, "spectrochempy.PCA.fit", false]], "fit() (plsregression method)": [[115, "spectrochempy.PLSRegression.fit", false]], "fit() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.fit", false]], "fit() (svd method)": [[119, "spectrochempy.SVD.fit", false]], "fit_intercept (lstsq attribute)": [[105, "spectrochempy.LSTSQ.fit_intercept", false]], "fit_intercept (nnls attribute)": [[111, "spectrochempy.NNLS.fit_intercept", false]], "fit_to_concentrations() (actionmasskinetics method)": [[96, "spectrochempy.ActionMassKinetics.fit_to_concentrations", false]], "fit_to_gas_concentrations() (pfr method)": [[114, "spectrochempy.PFR.fit_to_gas_concentrations", false]], "fit_transform() (efa method)": [[100, "spectrochempy.EFA.fit_transform", false]], "fit_transform() (fastica method)": [[101, "spectrochempy.FastICA.fit_transform", false]], "fit_transform() (iris method)": [[103, "spectrochempy.IRIS.fit_transform", false]], "fit_transform() (mcrals method)": [[106, "spectrochempy.MCRALS.fit_transform", false]], "fit_transform() (nmf method)": [[110, "spectrochempy.NMF.fit_transform", false]], "fit_transform() (optimize method)": [[112, "spectrochempy.Optimize.fit_transform", false]], "fit_transform() (pca method)": [[113, "spectrochempy.PCA.fit_transform", false]], "fit_transform() (plsregression method)": [[115, "spectrochempy.PLSRegression.fit_transform", false]], "fit_transform() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.fit_transform", false]], "fit_transform() (svd method)": [[119, "spectrochempy.SVD.fit_transform", false]], "fp (optimize attribute)": [[112, "spectrochempy.Optimize.fp", false]], "from_() (unit method)": [[121, "spectrochempy.Unit.from_", false]], "from_list() (quantity class method)": [[117, "spectrochempy.Quantity.from_list", false]], "from_sequence() (quantity class method)": [[117, "spectrochempy.Quantity.from_sequence", false]], "fromfunction() (coord method)": [[98, "spectrochempy.Coord.fromfunction", false]], "fromfunction() (in module spectrochempy)": [[164, "spectrochempy.fromfunction", false]], "fromfunction() (nddataset method)": [[107, "spectrochempy.NDDataset.fromfunction", false]], "fromiter() (coord method)": [[98, "spectrochempy.Coord.fromiter", false]], "fromiter() (in module spectrochempy)": [[165, "spectrochempy.fromiter", false]], "fromiter() (nddataset method)": [[107, "spectrochempy.NDDataset.fromiter", false]], "fsh() (in module spectrochempy)": [[166, "spectrochempy.fsh", false]], "fsh2() (in module spectrochempy)": [[167, "spectrochempy.fsh2", false]], "full() (in module spectrochempy)": [[168, "spectrochempy.full", false]], "full() (nddataset method)": [[107, "spectrochempy.NDDataset.full", false]], "full_like() (in module spectrochempy)": [[169, "spectrochempy.full_like", false]], "full_like() (nddataset method)": [[107, "spectrochempy.NDDataset.full_like", false]], "full_matrices (svd attribute)": [[119, "spectrochempy.SVD.full_matrices", false]], "fun (fastica attribute)": [[101, "spectrochempy.FastICA.fun", false]], "fun_args (fastica attribute)": [[101, "spectrochempy.FastICA.fun_args", false]], "gaussianmodel (class in spectrochempy)": [[170, "spectrochempy.gaussianmodel", false]], "general_hamming() (in module spectrochempy)": [[171, "spectrochempy.general_hamming", false]], "geomspace() (coord method)": [[98, "spectrochempy.Coord.geomspace", false]], "geomspace() (in module spectrochempy)": [[172, "spectrochempy.geomspace", false]], "geomspace() (nddataset method)": [[107, "spectrochempy.NDDataset.geomspace", false]], "get_axis() (nddataset method)": [[107, "spectrochempy.NDDataset.get_axis", false]], "get_baseline() (in module spectrochempy)": [[173, "spectrochempy.get_baseline", false]], "get_components() (efa method)": [[100, "spectrochempy.EFA.get_components", false]], "get_components() (fastica method)": [[101, "spectrochempy.FastICA.get_components", false]], "get_components() (iris method)": [[103, "spectrochempy.IRIS.get_components", false]], "get_components() (mcrals method)": [[106, "spectrochempy.MCRALS.get_components", false]], "get_components() (nmf method)": [[110, "spectrochempy.NMF.get_components", false]], "get_components() (optimize method)": [[112, "spectrochempy.Optimize.get_components", false]], "get_components() (pca method)": [[113, "spectrochempy.PCA.get_components", false]], "get_components() (plsregression method)": [[115, "spectrochempy.PLSRegression.get_components", false]], "get_components() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.get_components", false]], "get_components() (svd method)": [[119, "spectrochempy.SVD.get_components", false]], "get_labels() (coord method)": [[98, "spectrochempy.Coord.get_labels", false]], "get_labels() (nddataset method)": [[107, "spectrochempy.NDDataset.get_labels", false]], "get_loglevel() (in module spectrochempy)": [[174, "spectrochempy.get_loglevel", false]], "getc_to_c_idx (mcrals attribute)": [[106, "spectrochempy.MCRALS.getC_to_C_idx", false]], "getconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.getConc", false]], "getspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.getSpec", false]], "getst_to_st_idx (mcrals attribute)": [[106, "spectrochempy.MCRALS.getSt_to_St_idx", false]], "gm() (in module spectrochempy)": [[175, "spectrochempy.gm", false]], "hamming() (in module spectrochempy)": [[176, "spectrochempy.hamming", false]], "hann() (in module spectrochempy)": [[177, "spectrochempy.hann", false]], "hardconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.hardConc", false]], "hardspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.hardSpec", false]], "has_complex_dims (nddataset attribute)": [[107, "spectrochempy.NDDataset.has_complex_dims", false]], "has_data (coord attribute)": [[98, "spectrochempy.Coord.has_data", false]], "has_data (nddataset attribute)": [[107, "spectrochempy.NDDataset.has_data", false]], "has_defined_name (coord attribute)": [[98, "spectrochempy.Coord.has_defined_name", false]], "has_defined_name (coordset attribute)": [[99, "spectrochempy.CoordSet.has_defined_name", false]], "has_defined_name (nddataset attribute)": [[107, "spectrochempy.NDDataset.has_defined_name", false]], "has_units (coord attribute)": [[98, "spectrochempy.Coord.has_units", false]], "has_units (nddataset attribute)": [[107, "spectrochempy.NDDataset.has_units", false]], "history (nddataset attribute)": [[107, "spectrochempy.NDDataset.history", false]], "ht() (in module spectrochempy)": [[178, "spectrochempy.ht", false]], "ica": [[304, "term-ICA", true]], "id (coord attribute)": [[98, "spectrochempy.Coord.id", false]], "id (coordset attribute)": [[99, "spectrochempy.CoordSet.id", false]], "id (nddataset attribute)": [[107, "spectrochempy.NDDataset.id", false]], "id (project attribute)": [[116, "spectrochempy.Project.id", false]], "identity() (in module spectrochempy)": [[179, "spectrochempy.identity", false]], "identity() (nddataset method)": [[107, "spectrochempy.NDDataset.identity", false]], "ifft() (in module spectrochempy)": [[180, "spectrochempy.ifft", false]], "ii (nddataset attribute)": [[107, "spectrochempy.NDDataset.II", false]], "imag (nddataset attribute)": [[107, "spectrochempy.NDDataset.imag", false]], "include_limits (baseline attribute)": [[97, "spectrochempy.Baseline.include_limits", false]], "info_() (in module spectrochempy)": [[181, "spectrochempy.info_", false]], "init (nmf attribute)": [[110, "spectrochempy.NMF.init", false]], "init_concentrations (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.init_concentrations", false]], "integrate() (actionmasskinetics method)": [[96, "spectrochempy.ActionMassKinetics.integrate", false]], "interactive (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.interactive", false]], "intercept (lstsq attribute)": [[105, "spectrochempy.LSTSQ.intercept", false]], "intercept (nnls attribute)": [[111, "spectrochempy.NNLS.intercept", false]], "interpolate() (in module spectrochempy)": [[182, "spectrochempy.interpolate", false]], "inverse_transform() (efa method)": [[100, "spectrochempy.EFA.inverse_transform", false]], "inverse_transform() (fastica method)": [[101, "spectrochempy.FastICA.inverse_transform", false]], "inverse_transform() (iris method)": [[103, "spectrochempy.IRIS.inverse_transform", false]], "inverse_transform() (mcrals method)": [[106, "spectrochempy.MCRALS.inverse_transform", false]], "inverse_transform() (nmf method)": [[110, "spectrochempy.NMF.inverse_transform", false]], "inverse_transform() (optimize method)": [[112, "spectrochempy.Optimize.inverse_transform", false]], "inverse_transform() (pca method)": [[113, "spectrochempy.PCA.inverse_transform", false]], "inverse_transform() (plsregression method)": [[115, "spectrochempy.PLSRegression.inverse_transform", false]], "inverse_transform() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.inverse_transform", false]], "inverse_transform() (svd method)": [[119, "spectrochempy.SVD.inverse_transform", false]], "ir (nddataset attribute)": [[107, "spectrochempy.NDDataset.IR", false]], "iris (class in spectrochempy)": [[103, "spectrochempy.IRIS", false]], "iriskernel (class in spectrochempy)": [[104, "spectrochempy.IrisKernel", false]], "is_1d (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_1d", false]], "is_compatible_with() (quantity method)": [[117, "spectrochempy.Quantity.is_compatible_with", false]], "is_compatible_with() (unit method)": [[121, "spectrochempy.Unit.is_compatible_with", false]], "is_complex (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_complex", false]], "is_empty (coord attribute)": [[98, "spectrochempy.Coord.is_empty", false]], "is_empty (coordset attribute)": [[99, "spectrochempy.CoordSet.is_empty", false]], "is_empty (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_empty", false]], "is_float (coord attribute)": [[98, "spectrochempy.Coord.is_float", false]], "is_float (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_float", false]], "is_integer (coord attribute)": [[98, "spectrochempy.Coord.is_integer", false]], "is_integer (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_integer", false]], "is_interleaved (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_interleaved", false]], "is_labeled (coord attribute)": [[98, "spectrochempy.Coord.is_labeled", false]], "is_labeled (coordset attribute)": [[99, "spectrochempy.CoordSet.is_labeled", false]], "is_labeled (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_labeled", false]], "is_masked (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_masked", false]], "is_quaternion (nddataset attribute)": [[107, "spectrochempy.NDDataset.is_quaternion", false]], "is_same_dim (coordset attribute)": [[99, "spectrochempy.CoordSet.is_same_dim", false]], "is_units_compatible() (coord method)": [[98, "spectrochempy.Coord.is_units_compatible", false]], "is_units_compatible() (in module spectrochempy)": [[183, "spectrochempy.is_units_compatible", false]], "is_units_compatible() (nddataset method)": [[107, "spectrochempy.NDDataset.is_units_compatible", false]], "iterated_power (pca attribute)": [[113, "spectrochempy.PCA.iterated_power", false]], "ito() (coord method)": [[98, "spectrochempy.Coord.ito", false]], "ito() (in module spectrochempy)": [[184, "spectrochempy.ito", false]], "ito() (nddataset method)": [[107, "spectrochempy.NDDataset.ito", false]], "ito() (quantity method)": [[117, "spectrochempy.Quantity.ito", false]], "ito_base_units() (coord method)": [[98, "spectrochempy.Coord.ito_base_units", false]], "ito_base_units() (in module spectrochempy)": [[185, "spectrochempy.ito_base_units", false]], "ito_base_units() (nddataset method)": [[107, "spectrochempy.NDDataset.ito_base_units", false]], "ito_base_units() (quantity method)": [[117, "spectrochempy.Quantity.ito_base_units", false]], "ito_preferred() (quantity method)": [[117, "spectrochempy.Quantity.ito_preferred", false]], "ito_reduced_units() (coord method)": [[98, "spectrochempy.Coord.ito_reduced_units", false]], "ito_reduced_units() (in module spectrochempy)": [[186, "spectrochempy.ito_reduced_units", false]], "ito_reduced_units() (nddataset method)": [[107, "spectrochempy.NDDataset.ito_reduced_units", false]], "ito_reduced_units() (quantity method)": [[117, "spectrochempy.Quantity.ito_reduced_units", false]], "ito_root_units() (quantity method)": [[117, "spectrochempy.Quantity.ito_root_units", false]], "keys() (coordset method)": [[99, "spectrochempy.CoordSet.keys", false]], "kwargsgetconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.kwargsGetConc", false]], "kwargsgetspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.kwargsGetSpec", false]], "l1_ratio (nmf attribute)": [[110, "spectrochempy.NMF.l1_ratio", false]], "labels (coord attribute)": [[98, "spectrochempy.Coord.labels", false]], "labels (coordset attribute)": [[99, "spectrochempy.CoordSet.labels", false]], "labels (nddataset attribute)": [[107, "spectrochempy.NDDataset.labels", false]], "lamb (baseline attribute)": [[97, "spectrochempy.Baseline.lamb", false]], "lamb (filter attribute)": [[102, "spectrochempy.Filter.lamb", false]], "larmor (coord attribute)": [[98, "spectrochempy.Coord.larmor", false]], "laser_frequency (coord attribute)": [[98, "spectrochempy.Coord.laser_frequency", false]], "limits (coord attribute)": [[98, "spectrochempy.Coord.limits", false]], "limits (nddataset attribute)": [[107, "spectrochempy.NDDataset.limits", false]], "linear (coord attribute)": [[98, "spectrochempy.Coord.linear", false]], "linearize() (coord method)": [[98, "spectrochempy.Coord.linearize", false]], "linspace() (coord method)": [[98, "spectrochempy.Coord.linspace", false]], "linspace() (in module spectrochempy)": [[187, "spectrochempy.linspace", false]], "linspace() (nddataset method)": [[107, "spectrochempy.NDDataset.linspace", false]], "lls (baseline attribute)": [[97, "spectrochempy.Baseline.lls", false]], "load() (in module spectrochempy)": [[188, "spectrochempy.load", false]], "load() (nddataset class method)": [[107, "spectrochempy.NDDataset.load", false]], "load() (project class method)": [[116, "spectrochempy.Project.load", false]], "load_iris() (in module spectrochempy)": [[189, "spectrochempy.load_iris", false]], "loading": [[304, "term-loading", true]], "loadings": [[304, "term-loadings", true]], "loadings (pca attribute)": [[113, "spectrochempy.PCA.loadings", false]], "loads() (nddataset class method)": [[107, "spectrochempy.NDDataset.loads", false]], "loads() (project class method)": [[116, "spectrochempy.Project.loads", false]], "loc2index() (coord method)": [[98, "spectrochempy.Coord.loc2index", false]], "local_timezone (nddataset attribute)": [[107, "spectrochempy.NDDataset.local_timezone", false]], "log (baseline attribute)": [[97, "spectrochempy.Baseline.log", false]], "log (efa attribute)": [[100, "spectrochempy.EFA.log", false]], "log (fastica attribute)": [[101, "spectrochempy.FastICA.log", false]], "log (filter attribute)": [[102, "spectrochempy.Filter.log", false]], "log (iris attribute)": [[103, "spectrochempy.IRIS.log", false]], "log (lstsq attribute)": [[105, "spectrochempy.LSTSQ.log", false]], "log (mcrals attribute)": [[106, "spectrochempy.MCRALS.log", false]], "log (nmf attribute)": [[110, "spectrochempy.NMF.log", false]], "log (nnls attribute)": [[111, "spectrochempy.NNLS.log", false]], "log (optimize attribute)": [[112, "spectrochempy.Optimize.log", false]], "log (pca attribute)": [[113, "spectrochempy.PCA.log", false]], "log (plsregression attribute)": [[115, "spectrochempy.PLSRegression.log", false]], "log (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.log", false]], "log (svd attribute)": [[119, "spectrochempy.SVD.log", false]], "logspace() (coord method)": [[98, "spectrochempy.Coord.logspace", false]], "logspace() (in module spectrochempy)": [[190, "spectrochempy.logspace", false]], "logspace() (nddataset method)": [[107, "spectrochempy.NDDataset.logspace", false]], "lorentzianmodel (class in spectrochempy)": [[191, "spectrochempy.lorentzianmodel", false]], "ls() (in module spectrochempy)": [[192, "spectrochempy.ls", false]], "lstsq (class in spectrochempy)": [[105, "spectrochempy.LSTSQ", false]], "m (coord attribute)": [[98, "spectrochempy.Coord.m", false]], "m (nddataset attribute)": [[107, "spectrochempy.NDDataset.m", false]], "m (quantity attribute)": [[117, "spectrochempy.Quantity.m", false]], "m_as() (quantity method)": [[117, "spectrochempy.Quantity.m_as", false]], "m_from() (unit method)": [[121, "spectrochempy.Unit.m_from", false]], "magnitude (coord attribute)": [[98, "spectrochempy.Coord.magnitude", false]], "magnitude (nddataset attribute)": [[107, "spectrochempy.NDDataset.magnitude", false]], "magnitude (quantity attribute)": [[117, "spectrochempy.Quantity.magnitude", false]], "mask (nddataset attribute)": [[107, "spectrochempy.NDDataset.mask", false]], "masked_data (nddataset attribute)": [[107, "spectrochempy.NDDataset.masked_data", false]], "max() (coord method)": [[98, "spectrochempy.Coord.max", false]], "max() (in module spectrochempy)": [[193, "spectrochempy.max", false]], "max() (nddataset method)": [[107, "spectrochempy.NDDataset.max", false]], "max_fun_calls (optimize attribute)": [[112, "spectrochempy.Optimize.max_fun_calls", false]], "max_iter (baseline attribute)": [[97, "spectrochempy.Baseline.max_iter", false]], "max_iter (fastica attribute)": [[101, "spectrochempy.FastICA.max_iter", false]], "max_iter (mcrals attribute)": [[106, "spectrochempy.MCRALS.max_iter", false]], "max_iter (nmf attribute)": [[110, "spectrochempy.NMF.max_iter", false]], "max_iter (optimize attribute)": [[112, "spectrochempy.Optimize.max_iter", false]], "max_iter (plsregression attribute)": [[115, "spectrochempy.PLSRegression.max_iter", false]], "maxdiv (mcrals attribute)": [[106, "spectrochempy.MCRALS.maxdiv", false]], "mc() (in module spectrochempy)": [[194, "spectrochempy.mc", false]], "mcr-als": [[304, "term-MCR-ALS", true]], "mcrals (class in spectrochempy)": [[106, "spectrochempy.MCRALS", false]], "mean (fastica attribute)": [[101, "spectrochempy.FastICA.mean", false]], "mean() (in module spectrochempy)": [[195, "spectrochempy.mean", false]], "mean() (nddataset method)": [[107, "spectrochempy.NDDataset.mean", false]], "meta (coord attribute)": [[98, "spectrochempy.Coord.meta", false]], "meta (nddataset attribute)": [[107, "spectrochempy.NDDataset.meta", false]], "meta (project attribute)": [[116, "spectrochempy.Project.meta", false]], "method (filter attribute)": [[102, "spectrochempy.Filter.method", false]], "method (optimize attribute)": [[112, "spectrochempy.Optimize.method", false]], "min() (coord method)": [[98, "spectrochempy.Coord.min", false]], "min() (in module spectrochempy)": [[196, "spectrochempy.min", false]], "min() (nddataset method)": [[107, "spectrochempy.NDDataset.min", false]], "mixing (fastica attribute)": [[101, "spectrochempy.FastICA.mixing", false]], "mode (filter attribute)": [[102, "spectrochempy.Filter.mode", false]], "model (baseline attribute)": [[97, "spectrochempy.Baseline.model", false]], "modeldata (nddataset attribute)": [[107, "spectrochempy.NDDataset.modeldata", false]], "modeldata (optimize attribute)": [[112, "spectrochempy.Optimize.modeldata", false]], "modified (nddataset attribute)": [[107, "spectrochempy.NDDataset.modified", false]], "monodecconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.monoDecConc", false]], "monodectol (mcrals attribute)": [[106, "spectrochempy.MCRALS.monoDecTol", false]], "monoincconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.monoIncConc", false]], "monoinctol (mcrals attribute)": [[106, "spectrochempy.MCRALS.monoIncTol", false]], "multiplot() (in module spectrochempy)": [[197, "spectrochempy.multiplot", false]], "multiplot_image() (in module spectrochempy)": [[198, "spectrochempy.multiplot_image", false]], "multiplot_lines() (in module spectrochempy)": [[199, "spectrochempy.multiplot_lines", false]], "multiplot_map() (in module spectrochempy)": [[200, "spectrochempy.multiplot_map", false]], "multiplot_scatter() (in module spectrochempy)": [[201, "spectrochempy.multiplot_scatter", false]], "multiplot_stack() (in module spectrochempy)": [[202, "spectrochempy.multiplot_stack", false]], "multiplot_with_transposed() (in module spectrochempy)": [[203, "spectrochempy.multiplot_with_transposed", false]], "multivariate (baseline attribute)": [[97, "spectrochempy.Baseline.multivariate", false]], "n_components": [[304, "term-n_components", true]], "n_components (baseline attribute)": [[97, "spectrochempy.Baseline.n_components", false]], "n_components (efa attribute)": [[100, "spectrochempy.EFA.n_components", false]], "n_components (fastica attribute)": [[101, "spectrochempy.FastICA.n_components", false]], "n_components (iris attribute)": [[103, "spectrochempy.IRIS.n_components", false]], "n_components (mcrals attribute)": [[106, "spectrochempy.MCRALS.n_components", false]], "n_components (nmf attribute)": [[110, "spectrochempy.NMF.n_components", false]], "n_components (optimize attribute)": [[112, "spectrochempy.Optimize.n_components", false]], "n_components (pca attribute)": [[113, "spectrochempy.PCA.n_components", false]], "n_components (plsregression attribute)": [[115, "spectrochempy.PLSRegression.n_components", false]], "n_components (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.n_components", false]], "n_components (svd attribute)": [[119, "spectrochempy.SVD.n_components", false]], "n_features": [[304, "term-n_features", true]], "n_iter (fastica attribute)": [[101, "spectrochempy.FastICA.n_iter", false]], "n_observations": [[304, "term-n_observations", true]], "n_oversamples (pca attribute)": [[113, "spectrochempy.PCA.n_oversamples", false]], "n_reactions (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.n_reactions", false]], "n_species (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.n_species", false]], "n_targets": [[304, "term-n_targets", true]], "name (baseline attribute)": [[97, "spectrochempy.Baseline.name", false]], "name (coord attribute)": [[98, "spectrochempy.Coord.name", false]], "name (efa attribute)": [[100, "spectrochempy.EFA.name", false]], "name (fastica attribute)": [[101, "spectrochempy.FastICA.name", false]], "name (filter attribute)": [[102, "spectrochempy.Filter.name", false]], "name (iris attribute)": [[103, "spectrochempy.IRIS.name", false]], "name (lstsq attribute)": [[105, "spectrochempy.LSTSQ.name", false]], "name (mcrals attribute)": [[106, "spectrochempy.MCRALS.name", false]], "name (nddataset attribute)": [[107, "spectrochempy.NDDataset.name", false]], "name (nmf attribute)": [[110, "spectrochempy.NMF.name", false]], "name (nnls attribute)": [[111, "spectrochempy.NNLS.name", false]], "name (optimize attribute)": [[112, "spectrochempy.Optimize.name", false]], "name (pca attribute)": [[113, "spectrochempy.PCA.name", false]], "name (plsregression attribute)": [[115, "spectrochempy.PLSRegression.name", false]], "name (project attribute)": [[116, "spectrochempy.Project.name", false]], "name (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.name", false]], "name (svd attribute)": [[119, "spectrochempy.SVD.name", false]], "names (coordset attribute)": [[99, "spectrochempy.CoordSet.names", false]], "ndaxes (nddataset attribute)": [[107, "spectrochempy.NDDataset.ndaxes", false]], "nddataset (class in spectrochempy)": [[107, "spectrochempy.NDDataset", false]], "ndim (nddataset attribute)": [[107, "spectrochempy.NDDataset.ndim", false]], "nmf": [[304, "term-NMF", true]], "nmf (class in spectrochempy)": [[110, "spectrochempy.NMF", false]], "nnls (class in spectrochempy)": [[111, "spectrochempy.NNLS", false]], "noise (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.noise", false]], "nonnegconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.nonnegConc", false]], "nonnegspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.nonnegSpec", false]], "normspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.normSpec", false]], "ones() (in module spectrochempy)": [[204, "spectrochempy.ones", false]], "ones() (nddataset method)": [[107, "spectrochempy.NDDataset.ones", false]], "ones_like() (in module spectrochempy)": [[205, "spectrochempy.ones_like", false]], "ones_like() (nddataset method)": [[107, "spectrochempy.NDDataset.ones_like", false]], "optimize (class in spectrochempy)": [[112, "spectrochempy.Optimize", false]], "order (baseline attribute)": [[97, "spectrochempy.Baseline.order", false]], "order (filter attribute)": [[102, "spectrochempy.Filter.order", false]], "origin (nddataset attribute)": [[107, "spectrochempy.NDDataset.origin", false]], "parameters() (baseline method)": [[97, "spectrochempy.Baseline.parameters", false]], "parameters() (efa method)": [[100, "spectrochempy.EFA.parameters", false]], "parameters() (fastica method)": [[101, "spectrochempy.FastICA.parameters", false]], "parameters() (filter method)": [[102, "spectrochempy.Filter.parameters", false]], "parameters() (iris method)": [[103, "spectrochempy.IRIS.parameters", false]], "parameters() (lstsq method)": [[105, "spectrochempy.LSTSQ.parameters", false]], "parameters() (mcrals method)": [[106, "spectrochempy.MCRALS.parameters", false]], "parameters() (nmf method)": [[110, "spectrochempy.NMF.parameters", false]], "parameters() (nnls method)": [[111, "spectrochempy.NNLS.parameters", false]], "parameters() (optimize method)": [[112, "spectrochempy.Optimize.parameters", false]], "parameters() (pca method)": [[113, "spectrochempy.PCA.parameters", false]], "parameters() (plsregression method)": [[115, "spectrochempy.PLSRegression.parameters", false]], "parameters() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.parameters", false]], "parameters() (svd method)": [[119, "spectrochempy.SVD.parameters", false]], "params() (baseline method)": [[97, "spectrochempy.Baseline.params", false]], "params() (efa method)": [[100, "spectrochempy.EFA.params", false]], "params() (fastica method)": [[101, "spectrochempy.FastICA.params", false]], "params() (filter method)": [[102, "spectrochempy.Filter.params", false]], "params() (iris method)": [[103, "spectrochempy.IRIS.params", false]], "params() (lstsq method)": [[105, "spectrochempy.LSTSQ.params", false]], "params() (mcrals method)": [[106, "spectrochempy.MCRALS.params", false]], "params() (nmf method)": [[110, "spectrochempy.NMF.params", false]], "params() (nnls method)": [[111, "spectrochempy.NNLS.params", false]], "params() (optimize method)": [[112, "spectrochempy.Optimize.params", false]], "params() (pca method)": [[113, "spectrochempy.PCA.params", false]], "params() (plsregression method)": [[115, "spectrochempy.PLSRegression.params", false]], "params() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.params", false]], "params() (svd method)": [[119, "spectrochempy.SVD.params", false]], "parent (nddataset attribute)": [[107, "spectrochempy.NDDataset.parent", false]], "parent (project attribute)": [[116, "spectrochempy.Project.parent", false]], "parityplot() (plsregression method)": [[115, "spectrochempy.PLSRegression.parityplot", false]], "pathclean() (in module spectrochempy)": [[206, "spectrochempy.pathclean", false]], "pca": [[304, "term-PCA", true]], "pca (class in spectrochempy)": [[113, "spectrochempy.PCA", false]], "persist() (quantity method)": [[117, "spectrochempy.Quantity.persist", false]], "pfr (class in spectrochempy)": [[114, "spectrochempy.PFR", false]], "pipe() (in module spectrochempy)": [[207, "spectrochempy.pipe", false]], "pipe() (nddataset method)": [[107, "spectrochempy.NDDataset.pipe", false]], "pk() (in module spectrochempy)": [[208, "spectrochempy.pk", false]], "pk_exp() (in module spectrochempy)": [[209, "spectrochempy.pk_exp", false]], "plot() (baseline method)": [[97, "spectrochempy.Baseline.plot", false]], "plot() (in module spectrochempy)": [[210, "spectrochempy.plot", false]], "plot() (nddataset method)": [[107, "spectrochempy.NDDataset.plot", false]], "plot_1d() (in module spectrochempy)": [[211, "spectrochempy.plot_1D", false]], "plot_2d() (in module spectrochempy)": [[212, "spectrochempy.plot_2D", false]], "plot_3d() (in module spectrochempy)": [[213, "spectrochempy.plot_3D", false]], "plot_bar() (in module spectrochempy)": [[214, "spectrochempy.plot_bar", false]], "plot_image() (in module spectrochempy)": [[215, "spectrochempy.plot_image", false]], "plot_map() (in module spectrochempy)": [[216, "spectrochempy.plot_map", false]], "plot_multiple() (in module spectrochempy)": [[217, "spectrochempy.plot_multiple", false]], "plot_pen() (in module spectrochempy)": [[218, "spectrochempy.plot_pen", false]], "plot_scatter() (in module spectrochempy)": [[219, "spectrochempy.plot_scatter", false]], "plot_scatter_pen() (in module spectrochempy)": [[220, "spectrochempy.plot_scatter_pen", false]], "plot_stack() (in module spectrochempy)": [[221, "spectrochempy.plot_stack", false]], "plot_surface() (in module spectrochempy)": [[222, "spectrochempy.plot_surface", false]], "plot_waterfall() (in module spectrochempy)": [[223, "spectrochempy.plot_waterfall", false]], "plot_with_transposed() (in module spectrochempy)": [[224, "spectrochempy.plot_with_transposed", false]], "plotdistribution() (iris method)": [[103, "spectrochempy.IRIS.plotdistribution", false]], "plotlcurve() (iris method)": [[103, "spectrochempy.IRIS.plotlcurve", false]], "plotmerit() (efa method)": [[100, "spectrochempy.EFA.plotmerit", false]], "plotmerit() (fastica method)": [[101, "spectrochempy.FastICA.plotmerit", false]], "plotmerit() (iris method)": [[103, "spectrochempy.IRIS.plotmerit", false]], "plotmerit() (mcrals method)": [[106, "spectrochempy.MCRALS.plotmerit", false]], "plotmerit() (nmf method)": [[110, "spectrochempy.NMF.plotmerit", false]], "plotmerit() (optimize method)": [[112, "spectrochempy.Optimize.plotmerit", false]], "plotmerit() (pca method)": [[113, "spectrochempy.PCA.plotmerit", false]], "plotmerit() (plsregression method)": [[115, "spectrochempy.PLSRegression.plotmerit", false]], "plotmerit() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.plotmerit", false]], "plotmerit() (svd method)": [[119, "spectrochempy.SVD.plotmerit", false]], "pls": [[304, "term-PLS", true]], "plsregression (class in spectrochempy)": [[115, "spectrochempy.PLSRegression", false]], "polynomialbaseline (class in spectrochempy)": [[225, "spectrochempy.polynomialbaseline", false]], "positive (lstsq attribute)": [[105, "spectrochempy.LSTSQ.positive", false]], "positive (nnls attribute)": [[111, "spectrochempy.NNLS.positive", false]], "power_iteration_normalizer (pca attribute)": [[113, "spectrochempy.PCA.power_iteration_normalizer", false]], "predict() (lstsq method)": [[105, "spectrochempy.LSTSQ.predict", false]], "predict() (nnls method)": [[111, "spectrochempy.NNLS.predict", false]], "predict() (optimize method)": [[112, "spectrochempy.Optimize.predict", false]], "predict() (plsregression method)": [[115, "spectrochempy.PLSRegression.predict", false]], "printev() (pca method)": [[113, "spectrochempy.PCA.printev", false]], "prod() (quantity method)": [[117, "spectrochempy.Quantity.prod", false]], "project (class in spectrochempy)": [[116, "spectrochempy.Project", false]], "projects (project attribute)": [[116, "spectrochempy.Project.projects", false]], "projects_names (project attribute)": [[116, "spectrochempy.Project.projects_names", false]], "ps() (in module spectrochempy)": [[226, "spectrochempy.ps", false]], "pt (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.Pt", false]], "ptp() (coord method)": [[98, "spectrochempy.Coord.ptp", false]], "ptp() (in module spectrochempy)": [[227, "spectrochempy.ptp", false]], "ptp() (nddataset method)": [[107, "spectrochempy.NDDataset.ptp", false]], "qpsolver (iris attribute)": [[103, "spectrochempy.IRIS.qpsolver", false]], "qsin() (in module spectrochempy)": [[228, "spectrochempy.qsin", false]], "quantity (class in spectrochempy)": [[117, "spectrochempy.Quantity", false]], "random() (in module spectrochempy)": [[229, "spectrochempy.random", false]], "random() (nddataset method)": [[107, "spectrochempy.NDDataset.random", false]], "random_state (fastica attribute)": [[101, "spectrochempy.FastICA.random_state", false]], "random_state (nmf attribute)": [[110, "spectrochempy.NMF.random_state", false]], "random_state (pca attribute)": [[113, "spectrochempy.PCA.random_state", false]], "ranges (baseline attribute)": [[97, "spectrochempy.Baseline.ranges", false]], "rank": [[304, "term-rank", true]], "read() (in module spectrochempy)": [[230, "spectrochempy.read", false]], "read_carroucell() (in module spectrochempy)": [[231, "spectrochempy.read_carroucell", false]], "read_csv() (in module spectrochempy)": [[232, "spectrochempy.read_csv", false]], "read_ddr() (in module spectrochempy)": [[233, "spectrochempy.read_ddr", false]], "read_dir() (in module spectrochempy)": [[234, "spectrochempy.read_dir", false]], "read_hdr() (in module spectrochempy)": [[235, "spectrochempy.read_hdr", false]], "read_jcamp() (in module spectrochempy)": [[236, "spectrochempy.read_jcamp", false]], "read_labspec() (in module spectrochempy)": [[237, "spectrochempy.read_labspec", false]], "read_mat() (in module spectrochempy)": [[238, "spectrochempy.read_mat", false]], "read_matlab() (in module spectrochempy)": [[239, "spectrochempy.read_matlab", false]], "read_omnic() (in module spectrochempy)": [[240, "spectrochempy.read_omnic", false]], "read_opus() (in module spectrochempy)": [[241, "spectrochempy.read_opus", false]], "read_quadera() (in module spectrochempy)": [[242, "spectrochempy.read_quadera", false]], "read_sdr() (in module spectrochempy)": [[243, "spectrochempy.read_sdr", false]], "read_soc() (in module spectrochempy)": [[244, "spectrochempy.read_soc", false]], "read_spa() (in module spectrochempy)": [[245, "spectrochempy.read_spa", false]], "read_spc() (in module spectrochempy)": [[246, "spectrochempy.read_spc", false]], "read_spg() (in module spectrochempy)": [[247, "spectrochempy.read_spg", false]], "read_srs() (in module spectrochempy)": [[248, "spectrochempy.read_srs", false]], "read_topspin() (in module spectrochempy)": [[249, "spectrochempy.read_topspin", false]], "read_wdf() (in module spectrochempy)": [[250, "spectrochempy.read_wdf", false]], "read_wire() (in module spectrochempy)": [[251, "spectrochempy.read_wire", false]], "read_zip() (in module spectrochempy)": [[252, "spectrochempy.read_zip", false]], "real (nddataset attribute)": [[107, "spectrochempy.NDDataset.real", false]], "reconstruct() (efa method)": [[100, "spectrochempy.EFA.reconstruct", false]], "reconstruct() (fastica method)": [[101, "spectrochempy.FastICA.reconstruct", false]], "reconstruct() (iris method)": [[103, "spectrochempy.IRIS.reconstruct", false]], "reconstruct() (mcrals method)": [[106, "spectrochempy.MCRALS.reconstruct", false]], "reconstruct() (nmf method)": [[110, "spectrochempy.NMF.reconstruct", false]], "reconstruct() (optimize method)": [[112, "spectrochempy.Optimize.reconstruct", false]], "reconstruct() (pca method)": [[113, "spectrochempy.PCA.reconstruct", false]], "reconstruct() (plsregression method)": [[115, "spectrochempy.PLSRegression.reconstruct", false]], "reconstruct() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.reconstruct", false]], "reconstruct() (svd method)": [[119, "spectrochempy.SVD.reconstruct", false]], "reduce() (efa method)": [[100, "spectrochempy.EFA.reduce", false]], "reduce() (fastica method)": [[101, "spectrochempy.FastICA.reduce", false]], "reduce() (iris method)": [[103, "spectrochempy.IRIS.reduce", false]], "reduce() (mcrals method)": [[106, "spectrochempy.MCRALS.reduce", false]], "reduce() (nmf method)": [[110, "spectrochempy.NMF.reduce", false]], "reduce() (optimize method)": [[112, "spectrochempy.Optimize.reduce", false]], "reduce() (pca method)": [[113, "spectrochempy.PCA.reduce", false]], "reduce() (plsregression method)": [[115, "spectrochempy.PLSRegression.reduce", false]], "reduce() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.reduce", false]], "reduce() (svd method)": [[119, "spectrochempy.SVD.reduce", false]], "reg_par (iris attribute)": [[103, "spectrochempy.IRIS.reg_par", false]], "regularization": [[304, "term-regularization", true]], "remove_all_dataset() (project method)": [[116, "spectrochempy.Project.remove_all_dataset", false]], "remove_all_project() (project method)": [[116, "spectrochempy.Project.remove_all_project", false]], "remove_dataset() (project method)": [[116, "spectrochempy.Project.remove_dataset", false]], "remove_masks() (in module spectrochempy)": [[253, "spectrochempy.remove_masks", false]], "remove_masks() (nddataset method)": [[107, "spectrochempy.NDDataset.remove_masks", false]], "remove_project() (project method)": [[116, "spectrochempy.Project.remove_project", false]], "reset() (baseline method)": [[97, "spectrochempy.Baseline.reset", false]], "reset() (efa method)": [[100, "spectrochempy.EFA.reset", false]], "reset() (fastica method)": [[101, "spectrochempy.FastICA.reset", false]], "reset() (filter method)": [[102, "spectrochempy.Filter.reset", false]], "reset() (iris method)": [[103, "spectrochempy.IRIS.reset", false]], "reset() (lstsq method)": [[105, "spectrochempy.LSTSQ.reset", false]], "reset() (mcrals method)": [[106, "spectrochempy.MCRALS.reset", false]], "reset() (nmf method)": [[110, "spectrochempy.NMF.reset", false]], "reset() (nnls method)": [[111, "spectrochempy.NNLS.reset", false]], "reset() (optimize method)": [[112, "spectrochempy.Optimize.reset", false]], "reset() (pca method)": [[113, "spectrochempy.PCA.reset", false]], "reset() (plsregression method)": [[115, "spectrochempy.PLSRegression.reset", false]], "reset() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.reset", false]], "reset() (svd method)": [[119, "spectrochempy.SVD.reset", false]], "reversed (coord attribute)": [[98, "spectrochempy.Coord.reversed", false]], "ri (nddataset attribute)": [[107, "spectrochempy.NDDataset.RI", false]], "roi (coord attribute)": [[98, "spectrochempy.Coord.roi", false]], "roi (nddataset attribute)": [[107, "spectrochempy.NDDataset.roi", false]], "roll() (in module spectrochempy)": [[254, "spectrochempy.roll", false]], "round() (coord method)": [[98, "spectrochempy.Coord.round", false]], "round() (in module spectrochempy)": [[255, "spectrochempy.round", false]], "round() (nddataset method)": [[107, "spectrochempy.NDDataset.round", false]], "round_() (coord method)": [[98, "spectrochempy.Coord.round_", false]], "round_() (nddataset method)": [[107, "spectrochempy.NDDataset.round_", false]], "rr (nddataset attribute)": [[107, "spectrochempy.NDDataset.RR", false]], "rs() (in module spectrochempy)": [[256, "spectrochempy.rs", false]], "run_all_scripts() (in module spectrochempy)": [[257, "spectrochempy.run_all_scripts", false]], "run_script() (in module spectrochempy)": [[258, "spectrochempy.run_script", false]], "s (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.s", false]], "s (svd attribute)": [[119, "spectrochempy.SVD.s", false]], "s_soft (mcrals attribute)": [[106, "spectrochempy.MCRALS.S_soft", false]], "save() (nddataset method)": [[107, "spectrochempy.NDDataset.save", false]], "save() (project method)": [[116, "spectrochempy.Project.save", false]], "save_as() (nddataset method)": [[107, "spectrochempy.NDDataset.save_as", false]], "save_as() (project method)": [[116, "spectrochempy.Project.save_as", false]], "savgol() (in module spectrochempy)": [[259, "spectrochempy.savgol", false]], "scale (plsregression attribute)": [[115, "spectrochempy.PLSRegression.scale", false]], "scaled (pca attribute)": [[113, "spectrochempy.PCA.scaled", false]], "score": [[304, "term-score", true]], "score() (lstsq method)": [[105, "spectrochempy.LSTSQ.score", false]], "score() (nnls method)": [[111, "spectrochempy.NNLS.score", false]], "score() (plsregression method)": [[115, "spectrochempy.PLSRegression.score", false]], "scoreplot() (pca method)": [[113, "spectrochempy.PCA.scoreplot", false]], "scores": [[304, "term-scores", true]], "scores (pca attribute)": [[113, "spectrochempy.PCA.scores", false]], "screeplot() (pca method)": [[113, "spectrochempy.PCA.screeplot", false]], "script (asymmetricvoigtmodel attribute)": [[134, "spectrochempy.asymmetricvoigtmodel.script", false]], "script (class in spectrochempy)": [[120, "spectrochempy.Script", false]], "script (gaussianmodel attribute)": [[170, "spectrochempy.gaussianmodel.script", false]], "script (lorentzianmodel attribute)": [[191, "spectrochempy.lorentzianmodel.script", false]], "script (optimize attribute)": [[112, "spectrochempy.Optimize.script", false]], "script (polynomialbaseline attribute)": [[225, "spectrochempy.polynomialbaseline.script", false]], "script (sigmoidmodel attribute)": [[265, "spectrochempy.sigmoidmodel.script", false]], "script (voigtmodel attribute)": [[288, "spectrochempy.voigtmodel.script", false]], "scripts (project attribute)": [[116, "spectrochempy.Project.scripts", false]], "scripts_names (project attribute)": [[116, "spectrochempy.Project.scripts_names", false]], "select() (coordset method)": [[99, "spectrochempy.CoordSet.select", false]], "set() (coordset method)": [[99, "spectrochempy.CoordSet.set", false]], "set_complex() (in module spectrochempy)": [[260, "spectrochempy.set_complex", false]], "set_complex() (nddataset method)": [[107, "spectrochempy.NDDataset.set_complex", false]], "set_coordset() (nddataset method)": [[107, "spectrochempy.NDDataset.set_coordset", false]], "set_coordtitles() (nddataset method)": [[107, "spectrochempy.NDDataset.set_coordtitles", false]], "set_coordunits() (nddataset method)": [[107, "spectrochempy.NDDataset.set_coordunits", false]], "set_hypercomplex() (nddataset method)": [[107, "spectrochempy.NDDataset.set_hypercomplex", false]], "set_laser_frequency() (coord method)": [[98, "spectrochempy.Coord.set_laser_frequency", false]], "set_loglevel() (in module spectrochempy)": [[261, "spectrochempy.set_loglevel", false]], "set_nmr_context() (in module spectrochempy)": [[262, "spectrochempy.set_nmr_context", false]], "set_quaternion() (nddataset method)": [[107, "spectrochempy.NDDataset.set_quaternion", false]], "set_titles() (coordset method)": [[99, "spectrochempy.CoordSet.set_titles", false]], "set_units() (coordset method)": [[99, "spectrochempy.CoordSet.set_units", false]], "shape (coord attribute)": [[98, "spectrochempy.Coord.shape", false]], "shape (nddataset attribute)": [[107, "spectrochempy.NDDataset.shape", false]], "show() (in module spectrochempy)": [[263, "spectrochempy.show", false]], "show_datapoints (coord attribute)": [[98, "spectrochempy.Coord.show_datapoints", false]], "show_versions() (in module spectrochempy)": [[264, "spectrochempy.show_versions", false]], "shuffle (nmf attribute)": [[110, "spectrochempy.NMF.shuffle", false]], "sigdigits (coord attribute)": [[98, "spectrochempy.Coord.sigdigits", false]], "sigmoidmodel (class in spectrochempy)": [[265, "spectrochempy.sigmoidmodel", false]], "simplisma (class in spectrochempy)": [[118, "spectrochempy.SIMPLISMA", false]], "simpson() (in module spectrochempy)": [[266, "spectrochempy.simpson", false]], "sine() (in module spectrochempy)": [[267, "spectrochempy.sine", false]], "singular_values (svd attribute)": [[119, "spectrochempy.SVD.singular_values", false]], "sinm() (in module spectrochempy)": [[268, "spectrochempy.sinm", false]], "size (coord attribute)": [[98, "spectrochempy.Coord.size", false]], "size (coordset attribute)": [[99, "spectrochempy.CoordSet.size", false]], "size (filter attribute)": [[102, "spectrochempy.Filter.size", false]], "size (nddataset attribute)": [[107, "spectrochempy.NDDataset.size", false]], "sizes (coordset attribute)": [[99, "spectrochempy.CoordSet.sizes", false]], "smooth() (in module spectrochempy)": [[269, "spectrochempy.smooth", false]], "snip() (in module spectrochempy)": [[270, "spectrochempy.snip", false]], "snip_width (baseline attribute)": [[97, "spectrochempy.Baseline.snip_width", false]], "solver (nmf attribute)": [[110, "spectrochempy.NMF.solver", false]], "solverconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.solverConc", false]], "solverspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.solverSpec", false]], "sort() (in module spectrochempy)": [[271, "spectrochempy.sort", false]], "sort() (nddataset method)": [[107, "spectrochempy.NDDataset.sort", false]], "sp() (in module spectrochempy)": [[272, "spectrochempy.sp", false]], "spacing (coord attribute)": [[98, "spectrochempy.Coord.spacing", false]], "species (actionmasskinetics attribute)": [[96, "spectrochempy.ActionMassKinetics.species", false]], "squeeze() (in module spectrochempy)": [[273, "spectrochempy.squeeze", false]], "squeeze() (nddataset method)": [[107, "spectrochempy.NDDataset.squeeze", false]], "st (fastica attribute)": [[101, "spectrochempy.FastICA.St", false]], "st (mcrals attribute)": [[106, "spectrochempy.MCRALS.St", false]], "st (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.St", false]], "st_constrained_list (mcrals attribute)": [[106, "spectrochempy.MCRALS.St_constrained_list", false]], "st_ls (mcrals attribute)": [[106, "spectrochempy.MCRALS.St_ls", false]], "st_ls_list (mcrals attribute)": [[106, "spectrochempy.MCRALS.St_ls_list", false]], "st_unconstrained (mcrals attribute)": [[106, "spectrochempy.MCRALS.St_unconstrained", false]], "stack() (in module spectrochempy)": [[274, "spectrochempy.stack", false]], "standardized (pca attribute)": [[113, "spectrochempy.PCA.standardized", false]], "std() (in module spectrochempy)": [[275, "spectrochempy.std", false]], "std() (nddataset method)": [[107, "spectrochempy.NDDataset.std", false]], "storeiterations (mcrals attribute)": [[106, "spectrochempy.MCRALS.storeIterations", false]], "suffix (nddataset attribute)": [[107, "spectrochempy.NDDataset.suffix", false]], "suffix (project attribute)": [[116, "spectrochempy.Project.suffix", false]], "sum() (in module spectrochempy)": [[276, "spectrochempy.sum", false]], "sum() (nddataset method)": [[107, "spectrochempy.NDDataset.sum", false]], "sv (svd attribute)": [[119, "spectrochempy.SVD.sv", false]], "svd": [[304, "term-SVD", true]], "svd (class in spectrochempy)": [[119, "spectrochempy.SVD", false]], "svd_solver (pca attribute)": [[113, "spectrochempy.PCA.svd_solver", false]], "swapaxes() (nddataset method)": [[107, "spectrochempy.NDDataset.swapaxes", false]], "swapdims() (in module spectrochempy)": [[277, "spectrochempy.swapdims", false]], "swapdims() (nddataset method)": [[107, "spectrochempy.NDDataset.swapdims", false]], "t (nddataset attribute)": [[107, "spectrochempy.NDDataset.T", false]], "take() (in module spectrochempy)": [[278, "spectrochempy.take", false]], "take() (nddataset method)": [[107, "spectrochempy.NDDataset.take", false]], "timezone (nddataset attribute)": [[107, "spectrochempy.NDDataset.timezone", false]], "title (coord attribute)": [[98, "spectrochempy.Coord.title", false]], "title (nddataset attribute)": [[107, "spectrochempy.NDDataset.title", false]], "titles (coordset attribute)": [[99, "spectrochempy.CoordSet.titles", false]], "to() (coord method)": [[98, "spectrochempy.Coord.to", false]], "to() (in module spectrochempy)": [[279, "spectrochempy.to", false]], "to() (nddataset method)": [[107, "spectrochempy.NDDataset.to", false]], "to() (quantity method)": [[117, "spectrochempy.Quantity.to", false]], "to_array() (in module spectrochempy)": [[280, "spectrochempy.to_array", false]], "to_array() (nddataset method)": [[107, "spectrochempy.NDDataset.to_array", false]], "to_base_units() (coord method)": [[98, "spectrochempy.Coord.to_base_units", false]], "to_base_units() (in module spectrochempy)": [[281, "spectrochempy.to_base_units", false]], "to_base_units() (nddataset method)": [[107, "spectrochempy.NDDataset.to_base_units", false]], "to_base_units() (quantity method)": [[117, "spectrochempy.Quantity.to_base_units", false]], "to_compact() (quantity method)": [[117, "spectrochempy.Quantity.to_compact", false]], "to_dict() (baseline method)": [[97, "spectrochempy.Baseline.to_dict", false]], "to_dict() (coordset method)": [[99, "spectrochempy.CoordSet.to_dict", false]], "to_dict() (efa method)": [[100, "spectrochempy.EFA.to_dict", false]], "to_dict() (fastica method)": [[101, "spectrochempy.FastICA.to_dict", false]], "to_dict() (filter method)": [[102, "spectrochempy.Filter.to_dict", false]], "to_dict() (iris method)": [[103, "spectrochempy.IRIS.to_dict", false]], "to_dict() (lstsq method)": [[105, "spectrochempy.LSTSQ.to_dict", false]], "to_dict() (mcrals method)": [[106, "spectrochempy.MCRALS.to_dict", false]], "to_dict() (nmf method)": [[110, "spectrochempy.NMF.to_dict", false]], "to_dict() (nnls method)": [[111, "spectrochempy.NNLS.to_dict", false]], "to_dict() (optimize method)": [[112, "spectrochempy.Optimize.to_dict", false]], "to_dict() (pca method)": [[113, "spectrochempy.PCA.to_dict", false]], "to_dict() (plsregression method)": [[115, "spectrochempy.PLSRegression.to_dict", false]], "to_dict() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.to_dict", false]], "to_dict() (svd method)": [[119, "spectrochempy.SVD.to_dict", false]], "to_preferred() (quantity method)": [[117, "spectrochempy.Quantity.to_preferred", false]], "to_reduced_units() (coord method)": [[98, "spectrochempy.Coord.to_reduced_units", false]], "to_reduced_units() (in module spectrochempy)": [[282, "spectrochempy.to_reduced_units", false]], "to_reduced_units() (nddataset method)": [[107, "spectrochempy.NDDataset.to_reduced_units", false]], "to_reduced_units() (quantity method)": [[117, "spectrochempy.Quantity.to_reduced_units", false]], "to_root_units() (quantity method)": [[117, "spectrochempy.Quantity.to_root_units", false]], "to_xarray() (in module spectrochempy)": [[283, "spectrochempy.to_xarray", false]], "to_xarray() (nddataset method)": [[107, "spectrochempy.NDDataset.to_xarray", false]], "tol (baseline attribute)": [[97, "spectrochempy.Baseline.tol", false]], "tol (fastica attribute)": [[101, "spectrochempy.FastICA.tol", false]], "tol (mcrals attribute)": [[106, "spectrochempy.MCRALS.tol", false]], "tol (nmf attribute)": [[110, "spectrochempy.NMF.tol", false]], "tol (pca attribute)": [[113, "spectrochempy.PCA.tol", false]], "tol (plsregression attribute)": [[115, "spectrochempy.PLSRegression.tol", false]], "tol (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.tol", false]], "transform() (baseline method)": [[97, "spectrochempy.Baseline.transform", false]], "transform() (efa method)": [[100, "spectrochempy.EFA.transform", false]], "transform() (fastica method)": [[101, "spectrochempy.FastICA.transform", false]], "transform() (filter method)": [[102, "spectrochempy.Filter.transform", false]], "transform() (iris method)": [[103, "spectrochempy.IRIS.transform", false]], "transform() (mcrals method)": [[106, "spectrochempy.MCRALS.transform", false]], "transform() (nmf method)": [[110, "spectrochempy.NMF.transform", false]], "transform() (optimize method)": [[112, "spectrochempy.Optimize.transform", false]], "transform() (pca method)": [[113, "spectrochempy.PCA.transform", false]], "transform() (plsregression method)": [[115, "spectrochempy.PLSRegression.transform", false]], "transform() (simplisma method)": [[118, "spectrochempy.SIMPLISMA.transform", false]], "transform() (svd method)": [[119, "spectrochempy.SVD.transform", false]], "transpose() (in module spectrochempy)": [[284, "spectrochempy.transpose", false]], "transpose() (nddataset method)": [[107, "spectrochempy.NDDataset.transpose", false]], "trapezoid() (in module spectrochempy)": [[285, "spectrochempy.trapezoid", false]], "triang() (in module spectrochempy)": [[286, "spectrochempy.triang", false]], "type (asymmetricvoigtmodel attribute)": [[134, "spectrochempy.asymmetricvoigtmodel.type", false]], "type (gaussianmodel attribute)": [[170, "spectrochempy.gaussianmodel.type", false]], "type (lorentzianmodel attribute)": [[191, "spectrochempy.lorentzianmodel.type", false]], "type (polynomialbaseline attribute)": [[225, "spectrochempy.polynomialbaseline.type", false]], "type (sigmoidmodel attribute)": [[265, "spectrochempy.sigmoidmodel.type", false]], "type (voigtmodel attribute)": [[288, "spectrochempy.voigtmodel.type", false]], "u (quantity attribute)": [[117, "spectrochempy.Quantity.u", false]], "u (svd attribute)": [[119, "spectrochempy.SVD.U", false]], "umasked_data (coord attribute)": [[98, "spectrochempy.Coord.umasked_data", false]], "umasked_data (nddataset attribute)": [[107, "spectrochempy.NDDataset.umasked_data", false]], "unimodality": [[304, "term-unimodality", true]], "unimodconc (mcrals attribute)": [[106, "spectrochempy.MCRALS.unimodConc", false]], "unimodconcmod (mcrals attribute)": [[106, "spectrochempy.MCRALS.unimodConcMod", false]], "unimodconctol (mcrals attribute)": [[106, "spectrochempy.MCRALS.unimodConcTol", false]], "unimodspec (mcrals attribute)": [[106, "spectrochempy.MCRALS.unimodSpec", false]], "unimodspecmod (mcrals attribute)": [[106, "spectrochempy.MCRALS.unimodSpecMod", false]], "unimodspectol (mcrals attribute)": [[106, "spectrochempy.MCRALS.unimodSpecTol", false]], "unit (class in spectrochempy)": [[121, "spectrochempy.Unit", false]], "unit_items() (quantity method)": [[117, "spectrochempy.Quantity.unit_items", false]], "unitless (coord attribute)": [[98, "spectrochempy.Coord.unitless", false]], "unitless (nddataset attribute)": [[107, "spectrochempy.NDDataset.unitless", false]], "unitless (quantity attribute)": [[117, "spectrochempy.Quantity.unitless", false]], "units (coord attribute)": [[98, "spectrochempy.Coord.units", false]], "units (coordset attribute)": [[99, "spectrochempy.CoordSet.units", false]], "units (nddataset attribute)": [[107, "spectrochempy.NDDataset.units", false]], "units (quantity attribute)": [[117, "spectrochempy.Quantity.units", false]], "update() (coordset method)": [[99, "spectrochempy.CoordSet.update", false]], "used_ranges (baseline attribute)": [[97, "spectrochempy.Baseline.used_ranges", false]], "usermodels (optimize attribute)": [[112, "spectrochempy.Optimize.usermodels", false]], "value (coord attribute)": [[98, "spectrochempy.Coord.value", false]], "value (nddataset attribute)": [[107, "spectrochempy.NDDataset.value", false]], "values (coord attribute)": [[98, "spectrochempy.Coord.values", false]], "values (nddataset attribute)": [[107, "spectrochempy.NDDataset.values", false]], "var() (in module spectrochempy)": [[287, "spectrochempy.var", false]], "var() (nddataset method)": [[107, "spectrochempy.NDDataset.var", false]], "visualize() (quantity method)": [[117, "spectrochempy.Quantity.visualize", false]], "voigtmodel (class in spectrochempy)": [[288, "spectrochempy.voigtmodel", false]], "vt (svd attribute)": [[119, "spectrochempy.SVD.VT", false]], "w_init (fastica attribute)": [[101, "spectrochempy.FastICA.w_init", false]], "warning_() (in module spectrochempy)": [[289, "spectrochempy.warning_", false]], "whiten (fastica attribute)": [[101, "spectrochempy.FastICA.whiten", false]], "whiten (pca attribute)": [[113, "spectrochempy.PCA.whiten", false]], "whiten_solver (fastica attribute)": [[101, "spectrochempy.FastICA.whiten_solver", false]], "whitening (fastica attribute)": [[101, "spectrochempy.FastICA.whitening", false]], "whittaker() (in module spectrochempy)": [[290, "spectrochempy.whittaker", false]], "write() (in module spectrochempy)": [[291, "spectrochempy.write", false]], "write_csv() (in module spectrochempy)": [[292, "spectrochempy.write_csv", false]], "write_excel() (in module spectrochempy)": [[293, "spectrochempy.write_excel", false]], "write_jcamp() (in module spectrochempy)": [[294, "spectrochempy.write_jcamp", false]], "write_mat() (in module spectrochempy)": [[295, "spectrochempy.write_mat", false]], "write_matlab() (in module spectrochempy)": [[296, "spectrochempy.write_matlab", false]], "write_xls() (in module spectrochempy)": [[297, "spectrochempy.write_xls", false]], "x (baseline attribute)": [[97, "spectrochempy.Baseline.X", false]], "x (efa attribute)": [[100, "spectrochempy.EFA.X", false]], "x (fastica attribute)": [[101, "spectrochempy.FastICA.X", false]], "x (iris attribute)": [[103, "spectrochempy.IRIS.X", false]], "x (lstsq attribute)": [[105, "spectrochempy.LSTSQ.X", false]], "x (mcrals attribute)": [[106, "spectrochempy.MCRALS.X", false]], "x (nmf attribute)": [[110, "spectrochempy.NMF.X", false]], "x (nnls attribute)": [[111, "spectrochempy.NNLS.X", false]], "x (optimize attribute)": [[112, "spectrochempy.Optimize.X", false]], "x (pca attribute)": [[113, "spectrochempy.PCA.X", false]], "x (plsregression attribute)": [[115, "spectrochempy.PLSRegression.X", false]], "x (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.X", false]], "x (svd attribute)": [[119, "spectrochempy.SVD.X", false]], "y (efa attribute)": [[100, "spectrochempy.EFA.Y", false]], "y (fastica attribute)": [[101, "spectrochempy.FastICA.Y", false]], "y (iris attribute)": [[103, "spectrochempy.IRIS.Y", false]], "y (lstsq attribute)": [[105, "spectrochempy.LSTSQ.Y", false]], "y (mcrals attribute)": [[106, "spectrochempy.MCRALS.Y", false]], "y (nmf attribute)": [[110, "spectrochempy.NMF.Y", false]], "y (nnls attribute)": [[111, "spectrochempy.NNLS.Y", false]], "y (optimize attribute)": [[112, "spectrochempy.Optimize.Y", false]], "y (pca attribute)": [[113, "spectrochempy.PCA.Y", false]], "y (plsregression attribute)": [[115, "spectrochempy.PLSRegression.Y", false]], "y (simplisma attribute)": [[118, "spectrochempy.SIMPLISMA.Y", false]], "y (svd attribute)": [[119, "spectrochempy.SVD.Y", false]], "zeros() (in module spectrochempy)": [[298, "spectrochempy.zeros", false]], "zeros() (nddataset method)": [[107, "spectrochempy.NDDataset.zeros", false]], "zeros_like() (in module spectrochempy)": [[299, "spectrochempy.zeros_like", false]], "zeros_like() (nddataset method)": [[107, "spectrochempy.NDDataset.zeros_like", false]], "zf() (in module spectrochempy)": [[300, "spectrochempy.zf", false]], "zf_auto() (in module spectrochempy)": [[301, "spectrochempy.zf_auto", false]], "zf_double() (in module spectrochempy)": [[302, "spectrochempy.zf_double", false]], "zf_size() (in module spectrochempy)": [[303, "spectrochempy.zf_size", false]]}, "objects": {"spectrochempy": [[96, 0, 1, "", "ActionMassKinetics"], [97, 0, 1, "", "Baseline"], [98, 0, 1, "", "Coord"], [99, 0, 1, "", "CoordSet"], [100, 0, 1, "", "EFA"], [101, 0, 1, "", "FastICA"], [102, 0, 1, "", "Filter"], [103, 0, 1, "", "IRIS"], [104, 0, 1, "", "IrisKernel"], [105, 0, 1, "", "LSTSQ"], [106, 0, 1, "", "MCRALS"], [107, 0, 1, "", "NDDataset"], [110, 0, 1, "", "NMF"], [111, 0, 1, "", "NNLS"], [112, 0, 1, "", "Optimize"], [113, 0, 1, "", "PCA"], [114, 0, 1, "", "PFR"], [115, 0, 1, "", "PLSRegression"], [116, 0, 1, "", "Project"], [117, 0, 1, "", "Quantity"], [118, 0, 1, "", "SIMPLISMA"], [119, 0, 1, "", "SVD"], [120, 0, 1, "", "Script"], [121, 0, 1, "", "Unit"], [122, 3, 1, "", "abs"], [123, 3, 1, "", "absolute"], [124, 3, 1, "", "align"], [125, 3, 1, "", "all"], [126, 3, 1, "", "amax"], [127, 3, 1, "", "amin"], [128, 3, 1, "", "any"], [129, 3, 1, "", "arange"], [130, 3, 1, "", "argmax"], [131, 3, 1, "", "argmin"], [132, 3, 1, "", "around"], [133, 3, 1, "", "asls"], [134, 0, 1, "", "asymmetricvoigtmodel"], [135, 3, 1, "", "autosub"], [136, 3, 1, "", "average"], [137, 3, 1, "", "bartlett"], [138, 3, 1, "", "basc"], [139, 3, 1, "", "blackmanharris"], [140, 3, 1, "", "clip"], [141, 3, 1, "", "concatenate"], [142, 3, 1, "", "conj"], [143, 3, 1, "", "conjugate"], [144, 3, 1, "", "coordmax"], [145, 3, 1, "", "coordmin"], [146, 3, 1, "", "cs"], [147, 3, 1, "", "cumsum"], [148, 3, 1, "", "dc"], [149, 3, 1, "", "debug_"], [150, 3, 1, "", "denoise"], [151, 3, 1, "", "despike"], [152, 3, 1, "", "detrend"], [153, 3, 1, "", "diag"], [154, 3, 1, "", "diagonal"], [155, 3, 1, "", "dot"], [156, 3, 1, "", "download_nist_ir"], [157, 3, 1, "", "em"], [158, 3, 1, "", "empty"], [159, 3, 1, "", "empty_like"], [160, 3, 1, "", "error_"], [161, 3, 1, "", "eye"], [162, 3, 1, "", "fft"], [163, 3, 1, "", "find_peaks"], [164, 3, 1, "", "fromfunction"], [165, 3, 1, "", "fromiter"], [166, 3, 1, "", "fsh"], [167, 3, 1, "", "fsh2"], [168, 3, 1, "", "full"], [169, 3, 1, "", "full_like"], [170, 0, 1, "", "gaussianmodel"], [171, 3, 1, "", "general_hamming"], [172, 3, 1, "", "geomspace"], [173, 3, 1, "", "get_baseline"], [174, 3, 1, "", "get_loglevel"], [175, 3, 1, "", "gm"], [176, 3, 1, "", "hamming"], [177, 3, 1, "", "hann"], [178, 3, 1, "", "ht"], [179, 3, 1, "", "identity"], [180, 3, 1, "", "ifft"], [181, 3, 1, "", "info_"], [182, 3, 1, "", "interpolate"], [183, 3, 1, "", "is_units_compatible"], [184, 3, 1, "", "ito"], [185, 3, 1, "", "ito_base_units"], [186, 3, 1, "", "ito_reduced_units"], [187, 3, 1, "", "linspace"], [188, 3, 1, "", "load"], [189, 3, 1, "", "load_iris"], [190, 3, 1, "", "logspace"], [191, 0, 1, "", "lorentzianmodel"], [192, 3, 1, "", "ls"], [193, 3, 1, "", "max"], [194, 3, 1, "", "mc"], [195, 3, 1, "", "mean"], [196, 3, 1, "", "min"], [197, 3, 1, "", "multiplot"], [198, 3, 1, "", "multiplot_image"], [199, 3, 1, "", "multiplot_lines"], [200, 3, 1, "", "multiplot_map"], [201, 3, 1, "", "multiplot_scatter"], [202, 3, 1, "", "multiplot_stack"], [203, 3, 1, "", "multiplot_with_transposed"], [204, 3, 1, "", "ones"], [205, 3, 1, "", "ones_like"], [206, 3, 1, "", "pathclean"], [207, 3, 1, "", "pipe"], [208, 3, 1, "", "pk"], [209, 3, 1, "", "pk_exp"], [210, 3, 1, "", "plot"], [211, 3, 1, "", "plot_1D"], [212, 3, 1, "", "plot_2D"], [213, 3, 1, "", "plot_3D"], [214, 3, 1, "", "plot_bar"], [215, 3, 1, "", "plot_image"], [216, 3, 1, "", "plot_map"], [217, 3, 1, "", "plot_multiple"], [218, 3, 1, "", "plot_pen"], [219, 3, 1, "", "plot_scatter"], [220, 3, 1, "", "plot_scatter_pen"], [221, 3, 1, "", "plot_stack"], [222, 3, 1, "", "plot_surface"], [223, 3, 1, "", "plot_waterfall"], [224, 3, 1, "", "plot_with_transposed"], [225, 0, 1, "", "polynomialbaseline"], [226, 3, 1, "", "ps"], [227, 3, 1, "", "ptp"], [228, 3, 1, "", "qsin"], [229, 3, 1, "", "random"], [230, 3, 1, "", "read"], [231, 3, 1, "", "read_carroucell"], [232, 3, 1, "", "read_csv"], [233, 3, 1, "", "read_ddr"], [234, 3, 1, "", "read_dir"], [235, 3, 1, "", "read_hdr"], [236, 3, 1, "", "read_jcamp"], [237, 3, 1, "", "read_labspec"], [238, 3, 1, "", "read_mat"], [239, 3, 1, "", "read_matlab"], [240, 3, 1, "", "read_omnic"], [241, 3, 1, "", "read_opus"], [242, 3, 1, "", "read_quadera"], [243, 3, 1, "", "read_sdr"], [244, 3, 1, "", "read_soc"], [245, 3, 1, "", "read_spa"], [246, 3, 1, "", "read_spc"], [247, 3, 1, "", "read_spg"], [248, 3, 1, "", "read_srs"], [249, 3, 1, "", "read_topspin"], [250, 3, 1, "", "read_wdf"], [251, 3, 1, "", "read_wire"], [252, 3, 1, "", "read_zip"], [253, 3, 1, "", "remove_masks"], [254, 3, 1, "", "roll"], [255, 3, 1, "", "round"], [256, 3, 1, "", "rs"], [257, 3, 1, "", "run_all_scripts"], [258, 3, 1, "", "run_script"], [259, 3, 1, "", "savgol"], [260, 3, 1, "", "set_complex"], [261, 3, 1, "", "set_loglevel"], [262, 3, 1, "", "set_nmr_context"], [263, 3, 1, "", "show"], [264, 3, 1, "", "show_versions"], [265, 0, 1, "", "sigmoidmodel"], [266, 3, 1, "", "simpson"], [267, 3, 1, "", "sine"], [268, 3, 1, "", "sinm"], [269, 3, 1, "", "smooth"], [270, 3, 1, "", "snip"], [271, 3, 1, "", "sort"], [272, 3, 1, "", "sp"], [273, 3, 1, "", "squeeze"], [274, 3, 1, "", "stack"], [275, 3, 1, "", "std"], [276, 3, 1, "", "sum"], [277, 3, 1, "", "swapdims"], [278, 3, 1, "", "take"], [279, 3, 1, "", "to"], [280, 3, 1, "", "to_array"], [281, 3, 1, "", "to_base_units"], [282, 3, 1, "", "to_reduced_units"], [283, 3, 1, "", "to_xarray"], [284, 3, 1, "", "transpose"], [285, 3, 1, "", "trapezoid"], [286, 3, 1, "", "triang"], [287, 3, 1, "", "var"], [288, 0, 1, "", "voigtmodel"], [289, 3, 1, "", "warning_"], [290, 3, 1, "", "whittaker"], [291, 3, 1, "", "write"], [292, 3, 1, "", "write_csv"], [293, 3, 1, "", "write_excel"], [294, 3, 1, "", "write_jcamp"], [295, 3, 1, "", "write_mat"], [296, 3, 1, "", "write_matlab"], [297, 3, 1, "", "write_xls"], [298, 3, 1, "", "zeros"], [299, 3, 1, "", "zeros_like"], [300, 3, 1, "", "zf"], [301, 3, 1, "", "zf_auto"], [302, 3, 1, "", "zf_double"], [303, 3, 1, "", "zf_size"]], "spectrochempy.ActionMassKinetics": [[96, 1, 1, "", "A"], [96, 1, 1, "", "B"], [96, 2, 1, "", "fit_to_concentrations"], [96, 1, 1, "", "init_concentrations"], [96, 2, 1, "", "integrate"], [96, 1, 1, "", "n_reactions"], [96, 1, 1, "", "n_species"], [96, 1, 1, "", "species"]], "spectrochempy.Baseline": [[97, 1, 1, "", "X"], [97, 1, 1, "", "asymmetry"], [97, 1, 1, "", "baseline"], [97, 1, 1, "", "breakpoints"], [97, 1, 1, "", "config"], [97, 1, 1, "", "corrected"], [97, 2, 1, "", "fit"], [97, 1, 1, "", "include_limits"], [97, 1, 1, "", "lamb"], [97, 1, 1, "", "lls"], [97, 1, 1, "", "log"], [97, 1, 1, "", "max_iter"], [97, 1, 1, "", "model"], [97, 1, 1, "", "multivariate"], [97, 1, 1, "", "n_components"], [97, 1, 1, "", "name"], [97, 1, 1, "", "order"], [97, 2, 1, "", "parameters"], [97, 2, 1, "", "params"], [97, 2, 1, "", "plot"], [97, 1, 1, "", "ranges"], [97, 2, 1, "", "reset"], [97, 1, 1, "", "snip_width"], [97, 2, 1, "", "to_dict"], [97, 1, 1, "", "tol"], [97, 2, 1, "", "transform"], [97, 1, 1, "", "used_ranges"]], "spectrochempy.Coord": [[98, 2, 1, "", "amax"], [98, 2, 1, "", "amin"], [98, 2, 1, "", "arange"], [98, 2, 1, "", "around"], [98, 2, 1, "", "astype"], [98, 2, 1, "", "copy"], [98, 1, 1, "", "data"], [98, 1, 1, "", "dimensionless"], [98, 1, 1, "", "dtype"], [98, 2, 1, "", "fromfunction"], [98, 2, 1, "", "fromiter"], [98, 2, 1, "", "geomspace"], [98, 2, 1, "", "get_labels"], [98, 1, 1, "", "has_data"], [98, 1, 1, "", "has_defined_name"], [98, 1, 1, "", "has_units"], [98, 1, 1, "", "id"], [98, 1, 1, "", "is_empty"], [98, 1, 1, "", "is_float"], [98, 1, 1, "", "is_integer"], [98, 1, 1, "", "is_labeled"], [98, 2, 1, "", "is_units_compatible"], [98, 2, 1, "", "ito"], [98, 2, 1, "", "ito_base_units"], [98, 2, 1, "", "ito_reduced_units"], [98, 1, 1, "", "labels"], [98, 1, 1, "", "larmor"], [98, 1, 1, "", "laser_frequency"], [98, 1, 1, "", "limits"], [98, 1, 1, "", "linear"], [98, 2, 1, "", "linearize"], [98, 2, 1, "", "linspace"], [98, 2, 1, "", "loc2index"], [98, 2, 1, "", "logspace"], [98, 1, 1, "", "m"], [98, 1, 1, "", "magnitude"], [98, 2, 1, "", "max"], [98, 1, 1, "", "meta"], [98, 2, 1, "", "min"], [98, 1, 1, "", "name"], [98, 2, 1, "", "ptp"], [98, 1, 1, "", "reversed"], [98, 1, 1, "", "roi"], [98, 2, 1, "", "round"], [98, 2, 1, "", "round_"], [98, 2, 1, "", "set_laser_frequency"], [98, 1, 1, "", "shape"], [98, 1, 1, "", "show_datapoints"], [98, 1, 1, "", "sigdigits"], [98, 1, 1, "", "size"], [98, 1, 1, "", "spacing"], [98, 1, 1, "", "title"], [98, 2, 1, "", "to"], [98, 2, 1, "", "to_base_units"], [98, 2, 1, "", "to_reduced_units"], [98, 1, 1, "", "umasked_data"], [98, 1, 1, "", "unitless"], [98, 1, 1, "", "units"], [98, 1, 1, "", "value"], [98, 1, 1, "", "values"]], "spectrochempy.CoordSet": [[99, 1, 1, "", "available_names"], [99, 1, 1, "", "coords"], [99, 2, 1, "", "copy"], [99, 1, 1, "", "default"], [99, 1, 1, "", "has_defined_name"], [99, 1, 1, "", "id"], [99, 1, 1, "", "is_empty"], [99, 1, 1, "", "is_labeled"], [99, 1, 1, "", "is_same_dim"], [99, 2, 1, "", "keys"], [99, 1, 1, "", "labels"], [99, 1, 1, "", "names"], [99, 2, 1, "", "select"], [99, 2, 1, "", "set"], [99, 2, 1, "", "set_titles"], [99, 2, 1, "", "set_units"], [99, 1, 1, "", "size"], [99, 1, 1, "", "sizes"], [99, 1, 1, "", "titles"], [99, 2, 1, "", "to_dict"], [99, 1, 1, "", "units"], [99, 2, 1, "", "update"]], "spectrochempy.EFA": [[100, 1, 1, "", "X"], [100, 1, 1, "", "Y"], [100, 1, 1, "", "b_ev"], [100, 1, 1, "", "components"], [100, 1, 1, "", "config"], [100, 1, 1, "", "cutoff"], [100, 1, 1, "", "f_ev"], [100, 2, 1, "", "fit"], [100, 2, 1, "", "fit_transform"], [100, 2, 1, "", "get_components"], [100, 2, 1, "", "inverse_transform"], [100, 1, 1, "", "log"], [100, 1, 1, "", "n_components"], [100, 1, 1, "", "name"], [100, 2, 1, "", "parameters"], [100, 2, 1, "", "params"], [100, 2, 1, "", "plotmerit"], [100, 2, 1, "", "reconstruct"], [100, 2, 1, "", "reduce"], [100, 2, 1, "", "reset"], [100, 2, 1, "", "to_dict"], [100, 2, 1, "", "transform"]], "spectrochempy.FastICA": [[101, 1, 1, "", "A"], [101, 1, 1, "", "St"], [101, 1, 1, "", "X"], [101, 1, 1, "", "Y"], [101, 1, 1, "", "algorithm"], [101, 1, 1, "", "components"], [101, 1, 1, "", "config"], [101, 2, 1, "", "fit"], [101, 2, 1, "", "fit_transform"], [101, 1, 1, "", "fun"], [101, 1, 1, "", "fun_args"], [101, 2, 1, "", "get_components"], [101, 2, 1, "", "inverse_transform"], [101, 1, 1, "", "log"], [101, 1, 1, "", "max_iter"], [101, 1, 1, "", "mean"], [101, 1, 1, "", "mixing"], [101, 1, 1, "", "n_components"], [101, 1, 1, "", "n_iter"], [101, 1, 1, "", "name"], [101, 2, 1, "", "parameters"], [101, 2, 1, "", "params"], [101, 2, 1, "", "plotmerit"], [101, 1, 1, "", "random_state"], [101, 2, 1, "", "reconstruct"], [101, 2, 1, "", "reduce"], [101, 2, 1, "", "reset"], [101, 2, 1, "", "to_dict"], [101, 1, 1, "", "tol"], [101, 2, 1, "", "transform"], [101, 1, 1, "", "w_init"], [101, 1, 1, "", "whiten"], [101, 1, 1, "", "whiten_solver"], [101, 1, 1, "", "whitening"]], "spectrochempy.Filter": [[102, 1, 1, "", "config"], [102, 1, 1, "", "cval"], [102, 1, 1, "", "delta"], [102, 1, 1, "", "deriv"], [102, 1, 1, "", "lamb"], [102, 1, 1, "", "log"], [102, 1, 1, "", "method"], [102, 1, 1, "", "mode"], [102, 1, 1, "", "name"], [102, 1, 1, "", "order"], [102, 2, 1, "", "parameters"], [102, 2, 1, "", "params"], [102, 2, 1, "", "reset"], [102, 1, 1, "", "size"], [102, 2, 1, "", "to_dict"], [102, 2, 1, "", "transform"]], "spectrochempy.IRIS": [[103, 1, 1, "", "X"], [103, 1, 1, "", "Y"], [103, 1, 1, "", "components"], [103, 1, 1, "", "config"], [103, 2, 1, "", "fit"], [103, 2, 1, "", "fit_transform"], [103, 2, 1, "", "get_components"], [103, 2, 1, "", "inverse_transform"], [103, 1, 1, "", "log"], [103, 1, 1, "", "n_components"], [103, 1, 1, "", "name"], [103, 2, 1, "", "parameters"], [103, 2, 1, "", "params"], [103, 2, 1, "", "plotdistribution"], [103, 2, 1, "", "plotlcurve"], [103, 2, 1, "", "plotmerit"], [103, 1, 1, "", "qpsolver"], [103, 2, 1, "", "reconstruct"], [103, 2, 1, "", "reduce"], [103, 1, 1, "", "reg_par"], [103, 2, 1, "", "reset"], [103, 2, 1, "", "to_dict"], [103, 2, 1, "", "transform"]], "spectrochempy.LSTSQ": [[105, 1, 1, "", "X"], [105, 1, 1, "", "Y"], [105, 1, 1, "", "coef"], [105, 1, 1, "", "config"], [105, 1, 1, "", "description"], [105, 2, 1, "", "fit"], [105, 1, 1, "", "fit_intercept"], [105, 1, 1, "", "intercept"], [105, 1, 1, "", "log"], [105, 1, 1, "", "name"], [105, 2, 1, "", "parameters"], [105, 2, 1, "", "params"], [105, 1, 1, "", "positive"], [105, 2, 1, "", "predict"], [105, 2, 1, "", "reset"], [105, 2, 1, "", "score"], [105, 2, 1, "", "to_dict"]], "spectrochempy.MCRALS": [[106, 1, 1, "", "C"], [106, 1, 1, "", "C_constrained"], [106, 1, 1, "", "C_constrained_list"], [106, 1, 1, "", "C_ls_list"], [106, 1, 1, "", "S_soft"], [106, 1, 1, "", "St"], [106, 1, 1, "", "St_constrained_list"], [106, 1, 1, "", "St_ls"], [106, 1, 1, "", "St_ls_list"], [106, 1, 1, "", "St_unconstrained"], [106, 1, 1, "", "X"], [106, 1, 1, "", "Y"], [106, 1, 1, "", "argsGetConc"], [106, 1, 1, "", "argsGetSpec"], [106, 1, 1, "", "closureConc"], [106, 1, 1, "", "closureMethod"], [106, 1, 1, "", "closureTarget"], [106, 1, 1, "", "components"], [106, 1, 1, "", "config"], [106, 1, 1, "", "extraOutputGetConc"], [106, 1, 1, "", "extraOutputGetSpec"], [106, 2, 1, "", "fit"], [106, 2, 1, "", "fit_transform"], [106, 1, 1, "", "getC_to_C_idx"], [106, 1, 1, "", "getConc"], [106, 1, 1, "", "getSpec"], [106, 1, 1, "", "getSt_to_St_idx"], [106, 2, 1, "", "get_components"], [106, 1, 1, "", "hardConc"], [106, 1, 1, "", "hardSpec"], [106, 2, 1, "", "inverse_transform"], [106, 1, 1, "", "kwargsGetConc"], [106, 1, 1, "", "kwargsGetSpec"], [106, 1, 1, "", "log"], [106, 1, 1, "", "max_iter"], [106, 1, 1, "", "maxdiv"], [106, 1, 1, "", "monoDecConc"], [106, 1, 1, "", "monoDecTol"], [106, 1, 1, "", "monoIncConc"], [106, 1, 1, "", "monoIncTol"], [106, 1, 1, "", "n_components"], [106, 1, 1, "", "name"], [106, 1, 1, "", "nonnegConc"], [106, 1, 1, "", "nonnegSpec"], [106, 1, 1, "", "normSpec"], [106, 2, 1, "", "parameters"], [106, 2, 1, "", "params"], [106, 2, 1, "", "plotmerit"], [106, 2, 1, "", "reconstruct"], [106, 2, 1, "", "reduce"], [106, 2, 1, "", "reset"], [106, 1, 1, "", "solverConc"], [106, 1, 1, "", "solverSpec"], [106, 1, 1, "", "storeIterations"], [106, 2, 1, "", "to_dict"], [106, 1, 1, "", "tol"], [106, 2, 1, "", "transform"], [106, 1, 1, "", "unimodConc"], [106, 1, 1, "", "unimodConcMod"], [106, 1, 1, "", "unimodConcTol"], [106, 1, 1, "", "unimodSpec"], [106, 1, 1, "", "unimodSpecMod"], [106, 1, 1, "", "unimodSpecTol"]], "spectrochempy.NDDataset": [[107, 1, 1, "", "II"], [107, 1, 1, "", "IR"], [107, 1, 1, "", "RI"], [107, 1, 1, "", "RR"], [107, 1, 1, "", "T"], [107, 2, 1, "", "abs"], [107, 2, 1, "", "absolute"], [107, 1, 1, "", "acquisition_date"], [107, 2, 1, "", "add_coordset"], [107, 2, 1, "", "all"], [107, 2, 1, "", "amax"], [107, 2, 1, "", "amin"], [107, 2, 1, "", "any"], [107, 2, 1, "", "arange"], [107, 2, 1, "", "argmax"], [107, 2, 1, "", "argmin"], [107, 2, 1, "", "around"], [107, 2, 1, "", "asfortranarray"], [107, 2, 1, "", "astype"], [107, 2, 1, "", "atleast_2d"], [107, 1, 1, "", "author"], [107, 2, 1, "", "average"], [107, 1, 1, "", "ax"], [107, 1, 1, "", "axT"], [107, 1, 1, "", "axec"], [107, 1, 1, "", "axecT"], [107, 1, 1, "", "axex"], [107, 1, 1, "", "axey"], [107, 2, 1, "", "clip"], [107, 2, 1, "", "close_figure"], [107, 1, 1, "", "comment"], [107, 2, 1, "", "component"], [107, 2, 1, "", "conj"], [107, 2, 1, "", "conjugate"], [107, 2, 1, "", "coord"], [107, 2, 1, "", "coordmax"], [107, 2, 1, "", "coordmin"], [107, 1, 1, "", "coordnames"], [107, 1, 1, "", "coordset"], [107, 1, 1, "", "coordtitles"], [107, 1, 1, "", "coordunits"], [107, 2, 1, "", "copy"], [107, 1, 1, "", "created"], [107, 2, 1, "", "cumsum"], [107, 1, 1, "", "data"], [107, 2, 1, "", "delete_coordset"], [107, 1, 1, "", "description"], [107, 2, 1, "", "diag"], [107, 2, 1, "", "diagonal"], [107, 1, 1, "", "dimensionless"], [107, 1, 1, "", "dims"], [107, 1, 1, "", "directory"], [107, 1, 1, "", "divider"], [107, 1, 1, "", "dtype"], [107, 2, 1, "", "dump"], [107, 2, 1, "", "empty"], [107, 2, 1, "", "empty_like"], [107, 2, 1, "", "eye"], [107, 1, 1, "", "fig"], [107, 1, 1, "", "fignum"], [107, 1, 1, "", "filename"], [107, 1, 1, "", "filetype"], [107, 2, 1, "", "fromfunction"], [107, 2, 1, "", "fromiter"], [107, 2, 1, "", "full"], [107, 2, 1, "", "full_like"], [107, 2, 1, "", "geomspace"], [107, 2, 1, "", "get_axis"], [107, 2, 1, "", "get_labels"], [107, 1, 1, "", "has_complex_dims"], [107, 1, 1, "", "has_data"], [107, 1, 1, "", "has_defined_name"], [107, 1, 1, "", "has_units"], [107, 1, 1, "", "history"], [107, 1, 1, "", "id"], [107, 2, 1, "", "identity"], [107, 1, 1, "", "imag"], [107, 1, 1, "", "is_1d"], [107, 1, 1, "", "is_complex"], [107, 1, 1, "", "is_empty"], [107, 1, 1, "", "is_float"], [107, 1, 1, "", "is_integer"], [107, 1, 1, "", "is_interleaved"], [107, 1, 1, "", "is_labeled"], [107, 1, 1, "", "is_masked"], [107, 1, 1, "", "is_quaternion"], [107, 2, 1, "", "is_units_compatible"], [107, 2, 1, "", "ito"], [107, 2, 1, "", "ito_base_units"], [107, 2, 1, "", "ito_reduced_units"], [107, 1, 1, "", "labels"], [107, 1, 1, "", "limits"], [107, 2, 1, "", "linspace"], [107, 2, 1, "", "load"], [107, 2, 1, "", "loads"], [107, 1, 1, "", "local_timezone"], [107, 2, 1, "", "logspace"], [107, 1, 1, "", "m"], [107, 1, 1, "", "magnitude"], [107, 1, 1, "", "mask"], [107, 1, 1, "", "masked_data"], [107, 2, 1, "", "max"], [107, 2, 1, "", "mean"], [107, 1, 1, "", "meta"], [107, 2, 1, "", "min"], [107, 1, 1, "", "modeldata"], [107, 1, 1, "", "modified"], [107, 1, 1, "", "name"], [107, 1, 1, "", "ndaxes"], [107, 1, 1, "", "ndim"], [107, 2, 1, "", "ones"], [107, 2, 1, "", "ones_like"], [107, 1, 1, "", "origin"], [107, 1, 1, "", "parent"], [107, 2, 1, "", "pipe"], [107, 2, 1, "", "plot"], [107, 2, 1, "", "ptp"], [107, 2, 1, "", "random"], [107, 1, 1, "", "real"], [107, 2, 1, "", "remove_masks"], [107, 1, 1, "", "roi"], [107, 2, 1, "", "round"], [107, 2, 1, "", "round_"], [107, 2, 1, "", "save"], [107, 2, 1, "", "save_as"], [107, 2, 1, "", "set_complex"], [107, 2, 1, "", "set_coordset"], [107, 2, 1, "", "set_coordtitles"], [107, 2, 1, "", "set_coordunits"], [107, 2, 1, "", "set_hypercomplex"], [107, 2, 1, "", "set_quaternion"], [107, 1, 1, "", "shape"], [107, 1, 1, "", "size"], [107, 2, 1, "", "sort"], [107, 2, 1, "", "squeeze"], [107, 2, 1, "", "std"], [107, 1, 1, "", "suffix"], [107, 2, 1, "", "sum"], [107, 2, 1, "", "swapaxes"], [107, 2, 1, "", "swapdims"], [107, 2, 1, "", "take"], [107, 1, 1, "", "timezone"], [107, 1, 1, "", "title"], [107, 2, 1, "", "to"], [107, 2, 1, "", "to_array"], [107, 2, 1, "", "to_base_units"], [107, 2, 1, "", "to_reduced_units"], [107, 2, 1, "", "to_xarray"], [107, 2, 1, "", "transpose"], [107, 1, 1, "", "umasked_data"], [107, 1, 1, "", "unitless"], [107, 1, 1, "", "units"], [107, 1, 1, "", "value"], [107, 1, 1, "", "values"], [107, 2, 1, "", "var"], [107, 2, 1, "", "zeros"], [107, 2, 1, "", "zeros_like"]], "spectrochempy.NMF": [[110, 1, 1, "", "X"], [110, 1, 1, "", "Y"], [110, 1, 1, "", "alpha_H"], [110, 1, 1, "", "alpha_W"], [110, 1, 1, "", "beta_loss"], [110, 1, 1, "", "components"], [110, 1, 1, "", "config"], [110, 2, 1, "", "fit"], [110, 2, 1, "", "fit_transform"], [110, 2, 1, "", "get_components"], [110, 1, 1, "", "init"], [110, 2, 1, "", "inverse_transform"], [110, 1, 1, "", "l1_ratio"], [110, 1, 1, "", "log"], [110, 1, 1, "", "max_iter"], [110, 1, 1, "", "n_components"], [110, 1, 1, "", "name"], [110, 2, 1, "", "parameters"], [110, 2, 1, "", "params"], [110, 2, 1, "", "plotmerit"], [110, 1, 1, "", "random_state"], [110, 2, 1, "", "reconstruct"], [110, 2, 1, "", "reduce"], [110, 2, 1, "", "reset"], [110, 1, 1, "", "shuffle"], [110, 1, 1, "", "solver"], [110, 2, 1, "", "to_dict"], [110, 1, 1, "", "tol"], [110, 2, 1, "", "transform"]], "spectrochempy.NNLS": [[111, 1, 1, "", "X"], [111, 1, 1, "", "Y"], [111, 1, 1, "", "coef"], [111, 1, 1, "", "config"], [111, 1, 1, "", "description"], [111, 2, 1, "", "fit"], [111, 1, 1, "", "fit_intercept"], [111, 1, 1, "", "intercept"], [111, 1, 1, "", "log"], [111, 1, 1, "", "name"], [111, 2, 1, "", "parameters"], [111, 2, 1, "", "params"], [111, 1, 1, "", "positive"], [111, 2, 1, "", "predict"], [111, 2, 1, "", "reset"], [111, 2, 1, "", "score"], [111, 2, 1, "", "to_dict"]], "spectrochempy.Optimize": [[112, 1, 1, "", "X"], [112, 1, 1, "", "Y"], [112, 1, 1, "", "amplitude_mode"], [112, 1, 1, "", "autoampl"], [112, 1, 1, "", "autobase"], [112, 1, 1, "", "callback_every"], [112, 1, 1, "", "components"], [112, 1, 1, "", "config"], [112, 1, 1, "", "constraints"], [112, 1, 1, "", "dry"], [112, 2, 1, "", "fit"], [112, 2, 1, "", "fit_transform"], [112, 1, 1, "", "fp"], [112, 2, 1, "", "get_components"], [112, 2, 1, "", "inverse_transform"], [112, 1, 1, "", "log"], [112, 1, 1, "", "max_fun_calls"], [112, 1, 1, "", "max_iter"], [112, 1, 1, "", "method"], [112, 1, 1, "", "modeldata"], [112, 1, 1, "", "n_components"], [112, 1, 1, "", "name"], [112, 2, 1, "", "parameters"], [112, 2, 1, "", "params"], [112, 2, 1, "", "plotmerit"], [112, 2, 1, "", "predict"], [112, 2, 1, "", "reconstruct"], [112, 2, 1, "", "reduce"], [112, 2, 1, "", "reset"], [112, 1, 1, "", "script"], [112, 2, 1, "", "to_dict"], [112, 2, 1, "", "transform"], [112, 1, 1, "", "usermodels"]], "spectrochempy.PCA": [[113, 1, 1, "", "X"], [113, 1, 1, "", "Y"], [113, 1, 1, "", "components"], [113, 1, 1, "", "config"], [113, 2, 1, "", "fit"], [113, 2, 1, "", "fit_transform"], [113, 2, 1, "", "get_components"], [113, 2, 1, "", "inverse_transform"], [113, 1, 1, "", "iterated_power"], [113, 1, 1, "", "loadings"], [113, 1, 1, "", "log"], [113, 1, 1, "", "n_components"], [113, 1, 1, "", "n_oversamples"], [113, 1, 1, "", "name"], [113, 2, 1, "", "parameters"], [113, 2, 1, "", "params"], [113, 2, 1, "", "plotmerit"], [113, 1, 1, "", "power_iteration_normalizer"], [113, 2, 1, "", "printev"], [113, 1, 1, "", "random_state"], [113, 2, 1, "", "reconstruct"], [113, 2, 1, "", "reduce"], [113, 2, 1, "", "reset"], [113, 1, 1, "", "scaled"], [113, 2, 1, "", "scoreplot"], [113, 1, 1, "", "scores"], [113, 2, 1, "", "screeplot"], [113, 1, 1, "", "standardized"], [113, 1, 1, "", "svd_solver"], [113, 2, 1, "", "to_dict"], [113, 1, 1, "", "tol"], [113, 2, 1, "", "transform"], [113, 1, 1, "", "whiten"]], "spectrochempy.PFR": [[114, 2, 1, "", "fit_to_gas_concentrations"]], "spectrochempy.PLSRegression": [[115, 1, 1, "", "X"], [115, 1, 1, "", "Y"], [115, 1, 1, "", "components"], [115, 1, 1, "", "config"], [115, 2, 1, "", "fit"], [115, 2, 1, "", "fit_transform"], [115, 2, 1, "", "get_components"], [115, 2, 1, "", "inverse_transform"], [115, 1, 1, "", "log"], [115, 1, 1, "", "max_iter"], [115, 1, 1, "", "n_components"], [115, 1, 1, "", "name"], [115, 2, 1, "", "parameters"], [115, 2, 1, "", "params"], [115, 2, 1, "", "parityplot"], [115, 2, 1, "", "plotmerit"], [115, 2, 1, "", "predict"], [115, 2, 1, "", "reconstruct"], [115, 2, 1, "", "reduce"], [115, 2, 1, "", "reset"], [115, 1, 1, "", "scale"], [115, 2, 1, "", "score"], [115, 2, 1, "", "to_dict"], [115, 1, 1, "", "tol"], [115, 2, 1, "", "transform"]], "spectrochempy.Project": [[116, 2, 1, "", "add_dataset"], [116, 2, 1, "", "add_datasets"], [116, 2, 1, "", "add_project"], [116, 2, 1, "", "add_projects"], [116, 2, 1, "", "add_script"], [116, 2, 1, "", "add_scripts"], [116, 1, 1, "", "allitems"], [116, 1, 1, "", "allnames"], [116, 2, 1, "", "copy"], [116, 1, 1, "", "datasets"], [116, 1, 1, "", "datasets_names"], [116, 2, 1, "", "dump"], [116, 1, 1, "", "filename"], [116, 1, 1, "", "filetype"], [116, 1, 1, "", "id"], [116, 2, 1, "", "load"], [116, 2, 1, "", "loads"], [116, 1, 1, "", "meta"], [116, 1, 1, "", "name"], [116, 1, 1, "", "parent"], [116, 1, 1, "", "projects"], [116, 1, 1, "", "projects_names"], [116, 2, 1, "", "remove_all_dataset"], [116, 2, 1, "", "remove_all_project"], [116, 2, 1, "", "remove_dataset"], [116, 2, 1, "", "remove_project"], [116, 2, 1, "", "save"], [116, 2, 1, "", "save_as"], [116, 1, 1, "", "scripts"], [116, 1, 1, "", "scripts_names"], [116, 1, 1, "", "suffix"]], "spectrochempy.Quantity": [[117, 2, 1, "", "check"], [117, 2, 1, "", "compute"], [117, 1, 1, "", "default_format"], [117, 1, 1, "", "dimensionality"], [117, 1, 1, "", "dimensionless"], [117, 2, 1, "", "dot"], [117, 2, 1, "", "from_list"], [117, 2, 1, "", "from_sequence"], [117, 2, 1, "", "is_compatible_with"], [117, 2, 1, "", "ito"], [117, 2, 1, "", "ito_base_units"], [117, 2, 1, "", "ito_preferred"], [117, 2, 1, "", "ito_reduced_units"], [117, 2, 1, "", "ito_root_units"], [117, 1, 1, "", "m"], [117, 2, 1, "", "m_as"], [117, 1, 1, "", "magnitude"], [117, 2, 1, "", "persist"], [117, 2, 1, "", "prod"], [117, 2, 1, "", "to"], [117, 2, 1, "", "to_base_units"], [117, 2, 1, "", "to_compact"], [117, 2, 1, "", "to_preferred"], [117, 2, 1, "", "to_reduced_units"], [117, 2, 1, "", "to_root_units"], [117, 1, 1, "", "u"], [117, 2, 1, "", "unit_items"], [117, 1, 1, "", "unitless"], [117, 1, 1, "", "units"], [117, 2, 1, "", "visualize"]], "spectrochempy.SIMPLISMA": [[118, 1, 1, "", "C"], [118, 1, 1, "", "Pt"], [118, 1, 1, "", "St"], [118, 1, 1, "", "X"], [118, 1, 1, "", "Y"], [118, 1, 1, "", "components"], [118, 1, 1, "", "config"], [118, 2, 1, "", "fit"], [118, 2, 1, "", "fit_transform"], [118, 2, 1, "", "get_components"], [118, 1, 1, "", "interactive"], [118, 2, 1, "", "inverse_transform"], [118, 1, 1, "", "log"], [118, 1, 1, "", "n_components"], [118, 1, 1, "", "name"], [118, 1, 1, "", "noise"], [118, 2, 1, "", "parameters"], [118, 2, 1, "", "params"], [118, 2, 1, "", "plotmerit"], [118, 2, 1, "", "reconstruct"], [118, 2, 1, "", "reduce"], [118, 2, 1, "", "reset"], [118, 1, 1, "", "s"], [118, 2, 1, "", "to_dict"], [118, 1, 1, "", "tol"], [118, 2, 1, "", "transform"]], "spectrochempy.SVD": [[119, 1, 1, "", "U"], [119, 1, 1, "", "VT"], [119, 1, 1, "", "X"], [119, 1, 1, "", "Y"], [119, 1, 1, "", "components"], [119, 1, 1, "", "compute_uv"], [119, 1, 1, "", "config"], [119, 1, 1, "", "cumulative_explained_variance"], [119, 1, 1, "", "ev"], [119, 1, 1, "", "ev_cum"], [119, 1, 1, "", "ev_ratio"], [119, 1, 1, "", "explained_variance"], [119, 1, 1, "", "explained_variance_ratio"], [119, 2, 1, "", "fit"], [119, 2, 1, "", "fit_transform"], [119, 1, 1, "", "full_matrices"], [119, 2, 1, "", "get_components"], [119, 2, 1, "", "inverse_transform"], [119, 1, 1, "", "log"], [119, 1, 1, "", "n_components"], [119, 1, 1, "", "name"], [119, 2, 1, "", "parameters"], [119, 2, 1, "", "params"], [119, 2, 1, "", "plotmerit"], [119, 2, 1, "", "reconstruct"], [119, 2, 1, "", "reduce"], [119, 2, 1, "", "reset"], [119, 1, 1, "", "s"], [119, 1, 1, "", "singular_values"], [119, 1, 1, "", "sv"], [119, 2, 1, "", "to_dict"], [119, 2, 1, "", "transform"]], "spectrochempy.Unit": [[121, 1, 1, "", "default_format"], [121, 1, 1, "", "dimensionality"], [121, 1, 1, "", "dimensionless"], [121, 2, 1, "", "from_"], [121, 2, 1, "", "is_compatible_with"], [121, 2, 1, "", "m_from"]], "spectrochempy.asymmetricvoigtmodel": [[134, 1, 1, "", "args"], [134, 1, 1, "", "script"], [134, 1, 1, "", "type"]], "spectrochempy.gaussianmodel": [[170, 1, 1, "", "args"], [170, 1, 1, "", "script"], [170, 1, 1, "", "type"]], "spectrochempy.lorentzianmodel": [[191, 1, 1, "", "args"], [191, 1, 1, "", "script"], [191, 1, 1, "", "type"]], "spectrochempy.polynomialbaseline": [[225, 1, 1, "", "args"], [225, 1, 1, "", "script"], [225, 1, 1, "", "type"]], "spectrochempy.sigmoidmodel": [[265, 1, 1, "", "args"], [265, 1, 1, "", "script"], [265, 1, 1, "", "type"]], "spectrochempy.voigtmodel": [[288, 1, 1, "", "args"], [288, 1, 1, "", "script"], [288, 1, 1, "", "type"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:function"}, "terms": {"": [2, 4, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 36, 37, 38, 39, 42, 44, 46, 48, 52, 55, 68, 71, 75, 76, 77, 80, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 129, 135, 141, 154, 156, 158, 186, 188, 205, 206, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 266, 279, 282, 285, 299, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340, 341, 343], "0": [0, 2, 6, 8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 86, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 129, 132, 133, 134, 135, 136, 140, 141, 142, 143, 146, 152, 153, 154, 155, 157, 161, 163, 164, 165, 168, 169, 170, 171, 175, 176, 177, 179, 182, 183, 190, 191, 192, 197, 208, 209, 217, 225, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 265, 269, 272, 275, 287, 288, 290, 292, 298, 299, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "00": [18, 22, 23, 25, 28, 31, 32, 34, 37, 40, 42, 44, 46, 48, 49, 53, 55, 56, 58, 61, 62, 64, 65, 69, 72, 75, 76, 77, 78, 81, 82, 91, 94, 307, 310, 311, 313, 316, 318, 319, 320, 324, 326, 328, 331, 334, 337, 338, 341], "000": [34, 58, 82, 262, 316, 319], "0000": [1, 30, 44, 230, 241, 308, 320], "000000": 20, "0001": [1, 44, 98, 101, 107, 110, 129, 230, 241, 320], "0001051": [316, 319], "000107": [316, 319], "000116": [42, 319, 338], "00011600926518440247": 319, "0001243907579281501": 21, "00012439075792815683": [], "0001341": 310, "0001386702060699463": 319, "0001387": [42, 319, 338], "00015827733519296224": 21, "00015827733519298404": [], "0001980997622013092": 319, "0001981": [42, 319, 338], "00019825804790404866": [], "00019825804790407704": 21, "0002": [1, 44, 230, 241, 320], "0002325": [44, 320], "0002463663859383861": [], "00024636638593840795": 21, "0002479": [44, 320], "0002631": [310, 311], "0003": [44, 320], "000302683562040329": 319, "0003027": [42, 318, 319, 338], "0003032579084426898": [], "0003032579084427361": 21, "0003036": 331, "0003089": [42, 319, 338], "0003089122474193573": 319, "0003178": [310, 311], "0003442": [44, 320], "0003661": [316, 319], "0003685": [44, 320], "0003702011951281": 94, "000370203321558236": 94, "0003702884428734": 94, "0003744959831237793": 319, "0003745": [42, 318, 319, 338], "000374872354798959": [], "00037487235479897676": 21, "0004219": [44, 320], "0004229": [44, 320], "000427": 310, "000428": 310, "000429": 310, "000433": [19, 310], "000442": [19, 310], "000451": [44, 320], "000459": [44, 320], "0004636286240955592": [], "0004636286240955614": 21, "00047": 94, "0004896376456529243": 21, "0004896376456531908": [], "0004904596528539837": [], "0004904596528540617": 21, "0004912871202791513": 21, "0004912871202791897": [], "0004921226355846563": [], "0004921226355847308": 21, "0004929673596843116": 21, "0004929673596846937": [], "0004938210437304903": 21, "0004938210437305726": [], "0004946901218459079": 21, "0004946901218459388": [], "0004955753197879886": [], "0004955753197880844": 21, "0004964417296739585": 21, "0004964417296739724": [], "000497314731819097": 21, "0004973147318191375": [], "0004981962000749504": 21, "00049819620007506": [], "0004990872395196176": [], "0004990872395196958": 21, "0004999974962488276": 21, "0004999974962488633": [], "0005009224423795297": 21, "0005009224423798153": [], "0005018650428478355": 21, "0005018650428482667": [], "0005028222129277074": 21, "0005028222129278619": [], "0005037958933649218": 21, "0005037958933649668": [], "0005047767175614994": 21, "0005047767175616814": [], "0005057740763557847": 21, "0005057740763560651": [], "0005067909112023196": [], "0005067909112023607": 21, "0005078236610581448": [], "0005078236610581583": 21, "0005088753613790582": 21, "000508875361379296": [], "0005099447315065527": [], "0005099447315065785": 21, "0005110364330892761": 21, "0005110364330893162": [], "0005121515266403605": 21, "0005121515266406065": [], "0005132891688188986": 21, "0005132891688190048": [], "00051446165543105": [], "0005144616554313547": 21, "0005156608680271": 21, "000515660868027146": [], "0005168846752735405": 21, "0005168846752736397": [], "0005181813428110051": 21, "0005181813428112415": [], "0005195265168840684": 21, "0005195265168842568": [], "0005208942964238483": 21, "0005208942964240195": [], "0005221": [42, 319, 338], "0005221068859100342": 319, "0005222955570666379": 21, "0005222955570667251": [], "0005237318107589977": [], "0005237318107590474": 21, "0005251860718893851": [], "000525186071889449": 21, "0005266549474161031": 21, "0005266549474162842": [], "0005281469649348814": [], "0005281469649351376": 21, "0005296374901745119": 21, "0005296374901746942": [], "000531170025618011": 21, "000531170025618109": [], "0005327134944355072": 21, "0005327134944357451": [], "0005342566446342619": [], "0005342566446342798": 21, "0005358628850810191": 21, "0005358628850812235": [], "0005376381718607022": [], "0005376381718608016": 21, "0005396329582219361": [], "000539632958222284": 21, "0005416726314723373": [], "0005416726314723748": 21, "0005437570853968925": [], "0005437570853969856": 21, "0005458976082894153": [], "0005458976082894407": 21, "0005480875748006721": [], "0005480875748008812": 21, "0005503237863511488": [], "0005503237863511584": 21, "0005526263090686803": 21, "000552626309068695": [], "0005549930907510318": [], "0005549930907511937": 21, "0005574208102719143": [], "0005574208102719684": 21, "0005599281471047412": [], "0005599281471047651": 21, "0005624480584369633": 21, "000562448058437049": [], "0005650176785165846": 21, "0005650176785172207": [], "0005654506385326385": 319, "0005655": [42, 319, 338], "000567605378718009": 21, "0005676053787181962": [], "0005699768662452698": 319, "00057": [42, 319, 338], "0005702968600982799": 21, "0005702968600983754": [], "0005706218431926584": 21, "0005706218431926901": [], "0005730546137308648": 21, "0005730546137310378": [], "0005759087479596257": 21, "0005759087479598393": [], "0005778": 18, "0005788624242479704": 21, "0005788624242482894": [], "00058194729668062": [], "0005819472966806484": 21, "000585162619789059": 21, "0005851626197893677": [], "0005884735105285686": [], "0005884735105288106": 21, "0005919356405961738": 21, "000591935640596213": [], "0005955122189366781": 21, "000595512218936699": [], "0005992255771885685": 21, "0005992255771892074": [], "0006030938520872012": [], "0006030938520874749": 21, "0006071251736131763": 21, "0006071251736137222": [], "00061": 94, "0006113918151773503": 21, "000611391815177368": [], "0006161518203755029": 21, "0006161518203756179": [], "0006215236000710545": 21, "0006215236000711186": [], "0006273957420688935": [], "0006273957420689908": 21, "000630699098110199": 319, "0006307": [42, 319, 338], "0006335488650771577": 21, "0006335488650775072": [], "0006399762615474251": [], "0006399762615478118": 21, "0006466641120996259": [], "0006466641120998018": 21, "0006536091296350683": [], "0006536091296356544": 21, "0006606893398228868": [], "0006606893398233241": 21, "0006679795936492645": 21, "000667979593649296": [], "0006754181243923628": [], "0006754181243924448": 21, "000682": [310, 311], "0006830298779797335": [], "0006830298779799123": 21, "0006907733550824051": [], "0006907733550824732": 21, "0006987637535246275": 21, "0006987637535248686": [], "0006991377766200544": 21, "0006991377766200579": [], "0007069372346701718": 21, "0007069372346703625": [], "0007125": [310, 311], "0007151920055396711": [], "0007151920055398259": 21, "0007235915691681262": 21, "000723591569168527": [], "0007268": 320, "000732296617053831": 21, "0007322966170542318": [], "0007412456856971726": 21, "0007412456856972115": [], "0007504652538892022": [], "000750465253889359": 21, "0007597179067853764": 21, "0007597179067854066": [], "0007683": 18, "0007691414390017713": [], "0007691414390019153": 21, "000779132660791315": [], "0007791326607914431": 21, "0007893350738951072": [], "0007893350738955414": 21, "0007904": 75, "0007997522484735745": [], "0007997522484735932": 21, "000803191214799881": 319, "0008032": [42, 318, 319, 338], "0008104269807763656": 21, "0008104269807766361": [], "0008208847158800429": [], "000820884715880259": 21, "0008315536804370387": [], "0008315536804371756": 21, "0008356980979442596": 319, "0008357": [42, 319, 338], "0008428706003289803": 21, "0008428706003290546": [], "000845": 310, "000854351749994034": [], "0008543517499941186": 21, "0008573236692761643": 21, "0008573236692761946": [], "0008660457470918196": [], "0008660457470919849": 21, "00087804993118708": [], "0008780499311872943": 21, "0008783": 320, "0008902182357104602": 21, "000890218235710875": [], "0009015875006377307": [], "0009015875006379615": 21, "0009140262172600392": [], "0009140262172602291": 21, "0009266599168143198": 21, "000926659916814416": [], "0009396363331383754": [], "0009396363331388397": 21, "0009545966012005248": 21, "0009545966012008933": [], "0009699922960874072": [], "0009699922960875011": 21, "000975": 119, "0009841318528815912": [], "000984131852881739": 21, "0009988201809300937": [], "000998820180930219": 21, "001": [97, 133, 310, 312, 332, 384], "0010150792321234946": [], "0010150792321235885": 21, "001023": 320, "0010318244102606403": 21, "0010318244102607193": [], "001043867511137715": [], "0010438675111377326": 21, "001049193369470089": [], "0010491933694703947": 21, "0010661363692304417": 21, "0010661363692304894": [], "0010832777040276904": 21, "0010832777040277418": [], "001089": 119, "0011006754884538815": 21, "0011006754884540632": [], "0011199124929361884": [], "0011199124929362483": 21, "001121": [42, 319, 338], "001121222972869873": 319, "0011389415923631508": 21, "001138941592363207": [], "001158260908541525": 21, "0011582609085416511": [], "0011698119342327118": 319, "00117": [42, 75, 319, 338], "0011775622624510735": 21, "0011775622624514712": [], "0011992116544501004": [], "001199211654450155": 21, "0012190114699549847": 21, "0012190114699552484": [], "0012363658727394778": 21, "0012363658727396105": [], "0012488601974044485": [], "0012488601974044592": 21, "0012569657401119729": 21, "0012569657401121416": [], "0012813357494810523": [], "0012813357494812145": 21, "001306592398823305": 21, "0013065923988234143": [], "001332": 18, "0013328464824001584": 21, "0013328464824003824": [], "001341": [310, 311], "0013601582805155834": 21, "0013601582805160067": [], "001390759765808821": [], "0013907597658088808": 21, "001426208132161935": [], "0014262081321621191": 21, "0014629272012159536": [], "0014629272012160043": 21, "001492571627285702": [], "0014925716272857182": 21, "0015014385431311548": [], "0015014385431314258": 21, "001535": 328, "0015418960309272305": 21, "001541896030927419": [], "001583917332969875": 21, "0015839173329698863": [], "0016274950351469484": [], "00162749503514699": 21, "0016731692686996046": [], "0016731692686996215": 21, "001699": 310, "0017204657491190945": [], "0017204657491193638": 21, "0017692749012864193": [], "0017692749012865302": 21, "0017697484695162126": 21, "0017697484695162178": [], "00177": 18, "0018195678200698434": 21, "0018195678200699048": [], "0018713261632058267": [], "0018713261632059184": 21, "001875": 75, "0019243270194359541": 21, "0019243270194360443": [], "0019806643593506187": 21, "001980664359350816": [], "002": [64, 332], "002012": 75, "002043667805247838": 21, "002043667805248192": [], "0020851628627840575": [], "0020851628627841044": 21, "0021084094490921405": [], "002108409449092316": 21, "0021751169925785657": 21, "0021751169925787054": [], "0022437367434810125": [], "002243736743481188": 21, "002252": [316, 319], "002262": 22, "002313303909478467": 21, "002313303909478579": [], "0023842026907911567": 21, "0023842026907912464": [], "002386505694047015": [], "002386505694047064": 21, "002458740363437938": 21, "0024587403634381243": [], "002508": 75, "0025351644702119973": [], "0025351644702121478": 21, "002612954828907723": 21, "002612954828908014": [], "0026927116687367626": 21, "0026927116687369274": [], "002714": 75, "0027272537391467675": [], "0027272537391468503": 21, "002773891218680115": 21, "0027738912186802225": [], "002804": 310, "002805": [19, 310], "002807": [19, 310], "002810": 20, "002813": 20, "0028561158500456122": 21, "002856115850045625": [], "002867": 20, "002907": [316, 319], "002916": [316, 319], "0029389646390338676": 21, "0029389646390338944": [], "002962": [316, 319], "002967": [316, 319], "003": [18, 37, 77, 94, 316], "00300": [37, 91], "0030221674035497627": [], "0030221674035499193": 21, "0030323190347559302": [], "0030323190347559953": 21, "003104947029333421": 21, "003104947029333448": [], "003153": 75, "0031941648132723607": 21, "0031941648132724023": [], "0032635274973252nl": 320, "003292520557980644": [], "003292520557980672": 21, "003312": 328, "003396513830358311": 21, "003396513830358366": [], "003414": 328, "003428962811660894": [], "003428962811661001": 21, "0035147101661542573": 21, "0035147101661544005": [], "003521": 75, "003604": 310, "003612": 75, "003637": 75, "003637514821862832": [], "0036375148218629277": 21, "003700": 310, "003701": [42, 316], "0037443026036688798": [], "0037443026036689813": 21, "0037652602700425737": 21, "003765260270042578": [], "003818": [42, 316], "0038914653519266395": [], "0038914653519269153": 21, "003937884834645nl": 320, "003973": 310, "003torr_lt_aft": [18, 37, 42, 318, 319, 338], "004": [18, 37], "00400": [37, 91], "004007": 20, "004012755928138707": [], "0040127559281387185": 21, "004053115751123385": [], "004053115751123487": 21, "004092": 75, "004133928133016109": 21, "004133928133016136": [], "004219": 75, "004267124138925639": 21, "004267124138925854": [], "004296": [310, 311], "004302": 75, "004393717477174797": [], "004393717477175065": 21, "004421": 310, "004490757479656502": [], "004490757479656644": 21, "004527642308383088": 21, "004527642308383163": [], "004657040705272484": 21, "004657040705272552": [], "0047786109167946384": 21, "004778610916794675": [], "004867": 77, "004889401944567251": 21, "004889401944567343": [], "004torr_lt_aft": [18, 37, 42, 319, 338], "005": 316, "005004969613317469": [], "00500496961331764": 21, "00504": 316, "005110269931845318": [], "005110269931845368": 21, "005116": 316, "005124394633030005": [], "005124394633030163": 21, "00516": 328, "00520328493961152": [], "005203284939611594": 21, "005205": 310, "005288054442075126": [], "005288054442075133": 21, "005375194673451617": [], "005375194673451784": 21, "005460760674075832": 21, "005460760674075979": [], "005529135183167047": 21, "00552913518316713": [], "0055877366300483185": [], "005587736630048407": 21, "005607": 75, "005667827078790818": 21, "0056678270787909844": [], "005700606624644818": 21, "005700606624644979": [], "005733332889918884": [], "005733332889919033": 21, "005756947971777924": 21, "0057569479717779655": [], "005772367658829787": [], "005772367658829866": 21, "005802918028533907": [], "005802918028533935": 21, "005861": 20, "005863": 20, "005868357891308803": 21, "005868357891308862": [], "005886": 20, "006": [], "006000777806339305": 21, "006000777806339574": [], "00605723897445761": 21, "006057238974457703": [], "006191": 75, "006191115125282102": [], "006191115125282132": 21, "006238616114828005": [], "00623861611482815": 21, "006457414370354963": 21, "006457414370355016": [], "006515": 328, "006566": 328, "006776": 23, "006796": 316, "006849": 75, "006888": 316, "006957471610159115": [], "00695747161015926": 21, "007": 94, "007001": [310, 311], "007104": 75, "007194": 310, "0072": 24, "007200": 329, "007262": [107, 287], "007299": [107, 287], "0072b2": 329, "007331": [310, 311], "007524": [316, 319], "007770502529914356": 21, "007770502529914398": [], "007919": 75, "008016534827385477": [], "008016534827385596": 21, "008074354619042486unknown": 320, "008121": [310, 311], "008682": 310, "008843": 75, "009": [18, 94], "00900": [37, 91], "009201": 75, "009261179153189992": 21, "009261179153190075": [], "009276": 76, "009290070393253367unknown": 320, "009306": [316, 319], "0097": 1, "009e73": 329, "01": [18, 22, 23, 25, 32, 37, 40, 42, 44, 46, 48, 49, 53, 55, 61, 64, 75, 76, 77, 80, 91, 307, 308, 310, 311, 312, 313, 316, 318, 319, 320, 324, 326, 328, 331, 334, 337, 338, 341, 343], "010": 75, "0100": 24, "0105": 94, "010676123451468155": [], "01067612345146853": 21, "01094": 328, "01139": [310, 311], "011732197722809824": [], "011732197722809836": 21, "01183": 76, "012": [42, 91, 313, 341], "01242": 320, "01243": 320, "01244": [42, 316], "01251": [42, 316], "01261": 320, "01285": [310, 311], "0129": 77, "012e": 310, "013": [1, 42, 91, 313, 341], "014": 18, "01400": [37, 91], "01419": 316, "01425": [76, 316], "014282427091627449": [], "014282427091627914": 21, "0144": [48, 310, 311], "0147": 30, "015": 75, "01501": 77, "01514": 48, "01525": [310, 311], "01526": [42, 316], "01538": [42, 316], "016": [316, 319], "01617": [310, 311], "016289564836607366": [], "0162895648366074": 21, "0168": 94, "0168583x88900638": 94, "0173nl": 320, "018": [94, 306, 312], "01868": 75, "018705054318854827": [], "018705054318855323": 21, "01885": 75, "01969": [310, 311], "02": [18, 23, 25, 37, 42, 44, 53, 69, 91, 94, 306, 307, 312, 313, 316, 318, 319, 320, 326, 338, 339, 341, 343], "02067": 328, "020846": 20, "021": 18, "02100": [37, 91], "02111": 75, "02147": [42, 316], "02187": 316, "02192": 316, "02195": [42, 316], "021torr_lt_aft": 338, "022012": 310, "02206": 316, "02207": 316, "02236": [42, 316], "02253": 320, "02255": 320, "0227": 316, "02277": 316, "0228": 316, "02284": [42, 316], "02295": 316, "023155912689776806": 21, "02315591268977688": [], "024": [94, 306], "024000077998569045": [], "024000077998569548": 21, "02474": [316, 319], "025": [], "025004": 94, "02556": 75, "026": 18, "02600": [37, 91], "02603": 77, "0263": 24, "02654": 328, "02663": [316, 319], "027": [37, 40, 307], "02719": 75, "02791": 22, "02799": 76, "028": 75, "02807": 316, "02814": [316, 319], "0282": 328, "02892": 316, "02899": [316, 319], "02949": 328, "03": [18, 22, 23, 25, 37, 40, 42, 44, 46, 48, 55, 61, 64, 75, 76, 77, 78, 91, 94, 307, 310, 311, 313, 315, 316, 318, 319, 320, 324, 326, 328, 331, 334, 337, 338, 341, 343], "03013": [42, 316], "030324671559647784": [], "03032467155964823": 21, "03049": 76, "03068": 328, "03083": 76, "03099": [42, 316], "03215": 316, "03262": 328, "03299": 316, "033": [42, 91, 313, 319, 338, 341], "03438": 76, "03477774452872502": [], "034777744528725084": 21, "036": 18, "03600": [37, 91], "03636": [42, 316], "037": [42, 91, 313, 341], "03724": [42, 316], "03776270101072369": [], "0377627010107241": 21, "03796": [], "03804": 23, "03j": 328, "04": [18, 23, 38, 42, 46, 48, 61, 64, 75, 77, 81, 91, 119, 307, 313, 326, 328, 331, 334, 336, 341, 343], "04044": 76, "04077817": [94, 306], "04438": [42, 316], "044452701": 94, "04449": [42, 316], "0446": 22, "04476": 75, "04565": 328, "04616": 76, "04635": 316, "04639710696895046": [], "04639710696895082": 21, "0465": 316, "048763": [19, 310], "04993": 316, "04_mo_al2o3_calc_0": [18, 37, 42, 318, 319, 338], "04_mo_al2o3_calc_1": [18, 37, 42, 319, 338], "04e": 328, "05": [2, 20, 21, 23, 42, 46, 48, 49, 97, 114, 133, 307, 308, 310, 312, 316, 318, 319, 326, 329, 331, 338, 343], "05009": 316, "05061": 312, "05069": 316, "05078": 18, "051": 18, "05100": [37, 91], "05134": 328, "05144": [42, 316], "05223": 316, "05227": 18, "05231": 326, "05238": 316, "0524": [42, 316], "05242": 76, "05273": [61, 328, 334], "0527j": 328, "05311": [42, 316], "05339": 76, "05341": 76, "05388": 316, "053997039794922scanner": 320, "05404": [42, 316], "0563": 328, "05685": 328, "057": [42, 91, 313, 341], "05726304883639098": [], "05726304883639127": 21, "058": 312, "05819": 316, "05831": 328, "059": 119, "05901": [42, 316], "05932": 316, "05944": 316, "05957": 75, "05965": 316, "05969": 328, "05994": 328, "06": [18, 23, 37, 42, 44, 91, 94, 115, 119, 313, 316, 319, 320, 338, 341, 386], "06006": 76, "06031": 316, "061": [42, 91, 313, 341], "06115": [42, 316], "061581950654932265": [], "06158195065493263": 21, "06189": 316, "061963": [], "06203": [61, 328, 334], "06219": [76, 328], "06298": [107, 287], "062j": 328, "06344": 76, "06366": 76, "06389": 76, "064": 312, "06424": 18, "06438": [107, 287], "0645": [42, 316], "065": [316, 319], "0659": 18, "06679": [42, 316], "06698322": 48, "06717": 328, "067399": [], "06793": 76, "0689": 312, "0689001083": 312, "069": [75, 312], "0690": 312, "06948": 76, "07": [23, 42, 46, 65, 75, 91, 307, 313, 316, 319, 341, 343], "071": [316, 319], "07123": 76, "0714": 18, "0717021": 94, "0732": 76, "073709": [], "0738655391352641": [], "07386553913526514": 21, "07434": 76, "07548": [22, 76], "07624": 22, "07666": 96, "07779": 76, "078": [80, 81, 307], "07951": 76, "07955": 76, "08": [48, 77, 312, 316, 318, 319], "080242": [], "08045": 326, "08058": 328, "08065": 76, "081": 312, "08239": 328, "083": 312, "08434": 75, "08437": 77, "08452": 22, "08463": 76, "0847": 76, "08521": [107, 275], "08543": [107, 275], "08574": 76, "086509": [], "08693": 77, "087": [316, 319], "08752": 328, "088": [316, 319], "08804": 76, "08905": 76, "08e": 328, "09": [2, 18, 23, 37, 42, 44, 48, 91, 313, 316, 318, 319, 320, 343], "090": 312, "09079": 42, "091": [316, 319], "0913": 76, "092": 75, "09235": 77, "093": 18, "09300": [37, 91], "09386": 76, "09448": 76, "095000": [44, 320], "09539": 76, "09555": 76, "09588": 76, "09619": 48, "09665": [42, 316], "09689398092857981": [], "09689398092858068": 21, "09699": 76, "097": [48, 49, 307], "09771": [42, 316], "09898": [42, 316], "099": 77, "09903": 22, "09999": [42, 316], "09e": 18, "0acquisit": 320, "0actual": 320, "0analog": 320, "0command": 320, "0delai": 320, "0e3": 96, "0e8": 96, "0f": 312, "0firmwar": 320, "0j": [6, 337], "0k": 96, "0laser": 320, "0low": 320, "0markerfacecolor": 329, "0nonlinear": 320, "0number": 320, "0optic": 320, "0peak": 320, "0phase": 320, "0readi": 320, "0refer": 320, "0sampl": 320, "0scale_dash": 329, "0sourc": 320, "0stabil": 320, "0start": 320, "0unknown": 320, "0want": 320, "0x7f3ab19d7950": 30, "0x7f3abb061eb0": 22, "0x7f3abb0c60d0": 64, "0x7f3abb20f9d0": 77, "0x7f3abd278f50": 76, "0x7f3abdc17890": 20, "0x7f3abe0a65d0": 16, "0x7f3abe1fe900": 18, "0x7f3abe1ff8c0": 15, "0x7f3abe1ffb60": 17, "0x7f3abe463240": 23, "0x7f3abe5356d0": 31, "0x7f3abeb80190": 27, "0x7f3adbc53cb0": 27, "0x7f3ae3311850": 80, "0x7f3ae33f8050": 19, "0x7f3ae3427e00": 24, "0x7f5abaf70050": 311, "0x7f5abb0cd2b0": 311, "0x7f5e4a8de5d0": [], "0x7f5e5600cf50": [], "0x7f5e568fe0d0": [], "0x7f5e569ef9d0": [], "0x7f5e56b3f890": [], "0x7f5e56c42330": [], "0x7f5e56def950": [], "0x7f5e56f996d0": [], "0x7f5e5717b570": [], "0x7f5e57222900": [], "0x7f5e572238c0": [], "0x7f5e57223b60": [], "0x7f5e5799c190": [], "0x7f5e57f29e50": [], "0x7f5e74b1bcb0": [], "0x7f5e7c1fc050": [], "0x7f5e7c227e00": [], "0x7f8fd9a97460": 310, "0x7f8fdc6ab380": 310, "0x7f900ff968b0": 310, "0x7f9018081a70": 310, "0x7fa7c5188050": [], "0x7fa7c55e52b0": [], "0x7fdd143c5370": [], "0x7fdd143c6be0": [], "0x7fdd16d2f380": [], "0x7fdd5ad67230": [], "1": [0, 2, 6, 7, 8, 12, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 31, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 51, 52, 55, 56, 60, 61, 64, 65, 67, 68, 71, 72, 75, 76, 77, 80, 81, 87, 88, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 119, 121, 126, 127, 129, 133, 134, 136, 137, 140, 141, 147, 152, 153, 154, 157, 158, 161, 163, 165, 169, 171, 172, 175, 176, 177, 179, 183, 187, 190, 193, 195, 196, 197, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 230, 232, 240, 241, 245, 246, 259, 265, 266, 268, 269, 271, 272, 273, 275, 276, 285, 286, 287, 288, 290, 292, 298, 299, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 377, 386, 391, 392, 397], "10": [0, 1, 2, 6, 18, 20, 22, 23, 25, 31, 37, 38, 42, 44, 48, 52, 64, 71, 75, 76, 77, 78, 80, 85, 88, 90, 91, 94, 96, 98, 99, 103, 107, 112, 113, 117, 141, 163, 164, 168, 190, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 242, 262, 298, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 343, 369, 394, 397], "100": [6, 22, 36, 39, 52, 60, 75, 76, 77, 99, 107, 113, 119, 147, 240, 245, 262, 276, 304, 308, 310, 311, 313, 316, 319, 320, 326, 329, 330, 334, 339, 340], "1000": [30, 36, 38, 39, 51, 77, 99, 308, 326, 329, 331, 338, 339], "10000": [60, 75, 262, 329], "100000": [97, 329], "1000000000": 332, "1001": [18, 37, 42, 76, 318, 319, 338], "1002": 94, "10031": 75, "1007": 1, "1008": [61, 328, 334], "100_pd_101": [316, 319], "100_pd_102": [316, 319], "100_pd_103": [316, 319], "100_pd_104": [316, 319], "100_pd_21": 316, "100_pd_3": [316, 319], "100_pd_4": [316, 319], "100_pd_5": [316, 319], "101": [24, 94, 308, 310, 311, 319, 328], "1012": 76, "1014": 334, "1016": [48, 94, 306], "101e": 48, "102": [76, 319], "1021": [45, 94, 306], "1024": [45, 46, 76, 326, 328, 334, 339, 340], "1029": 320, "103": [23, 75], "1031": [75, 334], "1037": [42, 61, 316, 328, 334], "1038": [94, 306], "1039": [94, 306], "104": 262, "104753": 320, "1048": [42, 316], "105": 2, "1055": 76, "1056": 18, "106": [39, 40, 307, 312], "1067311915111817analog": 320, "1068": 76, "1071": 94, "1075": [76, 339], "1076": 94, "1078": [61, 328, 334], "1079": 334, "1084": 18, "1088": 94, "109": [316, 319], "1091": 76, "1092": 76, "1093": 334, "1094": 76, "1098": 326, "10x10": 338, "11": [2, 16, 23, 46, 68, 75, 91, 94, 308, 310, 311, 312, 314, 316, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 337, 338, 339, 341, 343, 392], "110": [24, 75, 94, 310, 311], "1100": [42, 316, 341], "1102": [42, 316], "110262": 320, "1106": 75, "1108": 76, "1109": 94, "11098": [141, 231], "111111111111": 329, "1112355fapertur": 320, "1114": 76, "1116": 76, "1117": 76, "1134": 76, "1137": 94, "11463": 75, "115": 77, "1150": 339, "1152": 77, "1155": 76, "1161": [76, 312], "116135": [], "1165": 76, "1166": 22, "116942": 320, "1174": 328, "118": [75, 76], "1188": 76, "119": [], "1194": 76, "119699": [94, 306], "12": [2, 16, 18, 25, 37, 42, 44, 48, 91, 94, 98, 307, 308, 310, 311, 312, 314, 316, 319, 320, 326, 328, 329, 330, 331, 332, 334, 337, 338, 339, 341, 343, 350, 392], "120": 320, "1200": [326, 329], "1206": 76, "121": 23, "1210271017": 94, "1229": 76, "123": [51, 53, 307], "1230": 15, "1234": [6, 332], "12345": [98, 107, 279], "123727": 320, "123e": 48, "124": 48, "12411": [61, 328, 331, 334], "12487289": 312, "125": 75, "1250": [266, 285, 313, 332], "1252instrument": 320, "1259": 76, "126": 334, "12638124502857345": [], "1263812450285737": 21, "1265": 18, "1269": 76, "128": [336, 339], "1280": [21, 23], "1281": 23, "1287": 76, "129": 75, "1290": [329, 337, 341], "1291": 64, "1292": 76, "1295": 94, "12e": 318, "13": [2, 6, 18, 21, 24, 37, 42, 75, 85, 91, 94, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 326, 328, 329, 330, 331, 332, 334, 337, 338, 339, 341, 343, 394], "1300": [163, 313, 326, 332], "130244": 320, "1303": 18, "1305": [76, 332], "131": 319, "132": [42, 312, 316, 338], "133": [262, 319], "134": [42, 98, 107, 164, 316], "1344": 328, "1347": 308, "13484": 94, "135": [55, 56, 307, 312], "13505": 94, "1354": [42, 316], "1357": 94, "1359924945": 75, "1359949976": 75, "135e": 331, "1360100375": 75, "1360112954": 75, "1366": 94, "137": [77, 319, 338], "1374": [42, 316], "138": [], "1380": 76, "139": 319, "14": [23, 42, 46, 48, 49, 75, 77, 78, 91, 94, 308, 310, 311, 312, 313, 316, 319, 320, 326, 328, 329, 330, 331, 332, 334, 337, 338, 339, 341, 343], "140": [23, 32, 77, 94, 310, 311], "1401742102450198": [], "14017421024502047": 21, "141": 48, "1416": [42, 316], "1426": 326, "1428": 18, "143": 18, "1437": [42, 316], "144": 312, "14570219": 94, "14658624": 94, "1467": 328, "147": [45, 326, 328], "1476798575": 319, "1476798846": 319, "1476806493": 319, "1476806797": 319, "149": 339, "14e": 18, "15": [16, 17, 18, 23, 37, 42, 75, 76, 77, 86, 91, 94, 118, 308, 310, 311, 312, 316, 318, 319, 326, 328, 329, 330, 331, 332, 334, 337, 338, 339, 341, 343], "150": [18, 22, 27], "1500": [77, 135], "15000": [37, 60, 61, 91, 331, 334], "151": 94, "152": 6, "1529": 47, "1529cm": 47, "155": 22, "1550": [313, 332], "1555": 332, "1556": [64, 77, 338], "1568": [24, 64], "157": 308, "1570": 313, "15797": 320, "15798": [98, 336], "1580994115": 320, "1580994606": 320, "159455": 320, "16": [2, 18, 23, 37, 42, 75, 91, 94, 98, 107, 165, 308, 310, 311, 312, 316, 319, 326, 328, 329, 330, 332, 334, 337, 338, 339, 343], "1600": [135, 326], "16000": 75, "1600437": 312, "161": [316, 319], "162": [75, 94, 326], "1622": 75, "1623": 328, "16365897573755042": 21, "16365897573755128": [], "16384": 334, "1644": 98, "165": 141, "166": 328, "1662": 328, "1666915correl": 320, "1667": 38, "16693354": 48, "167": [312, 328], "16777271refer": 320, "16777271sampl": 320, "168": 328, "1692": 46, "1693": 46, "16975": 242, "17": [18, 20, 23, 37, 42, 44, 91, 94, 308, 310, 311, 312, 313, 316, 319, 326, 328, 329, 330, 332, 334, 337, 338, 339, 341, 343], "170": 328, "171": [75, 328], "1726": 339, "1734": 22, "174": 75, "1740": 313, "1742": 21, "175": [23, 326], "1750": 326, "176": [42, 48, 316], "177": [22, 75], "179": [22, 48, 94], "1795": 64, "18": [18, 37, 42, 91, 94, 308, 310, 312, 318, 319, 326, 328, 329, 330, 332, 334, 337, 338, 339, 343, 369], "180": 338, "1800": [163, 266, 285, 313], "181": 94, "1813": 48, "181951correl": 320, "182": 308, "1823": 48, "1825": 1, "1842": [4, 48, 246], "1856": 332, "185e": 119, "186": 75, "1868": [316, 319], "187": [48, 334], "1879": 96, "188": 22, "1899": 312, "19": [18, 23, 37, 42, 46, 48, 75, 91, 94, 308, 310, 312, 313, 316, 319, 326, 328, 329, 330, 332, 337, 338, 339, 341, 343, 374], "190": 47, "1900": [312, 338], "1930": 48, "1936": 22, "19403": 94, "19417": 94, "1947": 75, "1950": [18, 37, 91], "1951": 37, "1956": 64, "196": 75, "1966": 326, "196608": [45, 326, 328], "197": [], "1970": 319, "198": [42, 46, 91, 313, 339, 341, 356], "1980": 94, "1982": 77, "1985": 328, "1986": [94, 100, 304], "1988": [94, 97, 236, 270, 318], "199": [46, 312, 361], "1992": [16, 94, 100], "199456453": 312, "1995": 312, "1997": [48, 94, 118], "1999": [48, 95, 326], "1backward": 320, "1d": [4, 6, 29, 32, 33, 41, 49, 51, 57, 97, 98, 102, 104, 105, 107, 111, 112, 134, 135, 136, 154, 163, 164, 170, 181, 191, 197, 199, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 225, 232, 234, 240, 249, 265, 288, 292, 304, 307, 308, 322, 327, 335, 338, 339, 346, 353, 361, 363, 390], "1data": 320, "1e": [75, 96, 114, 115, 117, 133, 337], "1e4": 75, "1e5": 133, "1e9": [97, 133], "1f": [75, 76], "1i": 316, "1j": 6, "1mm": 320, "1mm\u00b2": [44, 320], "1number": 320, "1peak": 320, "1phase": 320, "1r": [75, 316], "1refer": 320, "1rel": 320, "1run": 320, "1sampl": 320, "1scan": 320, "1st": [104, 106, 312, 319, 338], "1x700": 316, "1\u00fa": [316, 319], "2": [2, 6, 7, 15, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 36, 37, 39, 42, 46, 47, 48, 51, 53, 55, 60, 61, 62, 64, 67, 68, 69, 71, 75, 76, 77, 80, 86, 91, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 122, 123, 137, 141, 151, 152, 153, 154, 155, 158, 161, 168, 170, 171, 175, 176, 177, 179, 183, 186, 191, 194, 197, 204, 205, 225, 226, 228, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 266, 269, 272, 274, 275, 282, 287, 290, 292, 298, 299, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 365, 388, 397], "20": [24, 52, 60, 76, 77, 80, 91, 94, 98, 99, 107, 129, 163, 238, 239, 240, 245, 307, 308, 310, 312, 313, 315, 316, 319, 326, 328, 329, 330, 332, 334, 337, 339, 343, 377], "200": [21, 36, 39, 64, 75, 101, 110, 117, 308, 326, 329, 331, 332, 338], "2000": [48, 91, 95, 308, 326, 330, 331, 332], "20000": 329, "2001": [20, 94], "2003": [94, 151, 290, 333, 339], "2004": 94, "2005": [14, 17, 20, 24, 25, 33, 64, 94, 97, 106, 107, 133, 230, 307, 310, 311], "2006": 2, "2008": [134, 308], "2009": [94, 96, 304], "200e": 117, "2011instrument": 320, "2013": [1, 94, 103], "2014": [88, 90, 91, 94, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "2015": [19, 94, 310, 311, 332], "2016": [18, 23, 37, 42, 46, 91, 313, 316, 318, 319, 338, 341], "2017": 290, "2018": [94, 106, 151, 316, 319, 333], "2019": [42, 316, 386], "202": [44, 49, 307], "2020": [44, 94, 103, 304, 306, 320], "2021": [94, 343], "2022": [94, 343], "2023": [94, 343], "2024": 94, "2025": [0, 18, 22, 23, 42, 44, 46, 48, 55, 61, 75, 76, 77, 88, 90, 91, 94, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "203": 18, "20300": [37, 91], "204": [19, 24, 310, 311], "2040": 339, "2048": 76, "205": [23, 339], "2072": 312, "2073": 312, "2074": [95, 312], "2075": 312, "2079": 94, "208": [], "209": 16, "2090": 312, "2093": 312, "2096": 48, "21": [23, 42, 68, 76, 91, 94, 310, 312, 313, 316, 319, 326, 328, 329, 332, 333, 337, 339, 341, 343], "2100": 332, "2105": 22, "211": [], "21103839273442085": 21, "21103839273442296": [], "2115": 312, "2129": 75, "2132": 48, "2140": 312, "2142": 312, "2144": 330, "215": 339, "2152": 312, "2157": 312, "216": [23, 334], "2162": 312, "2166": 312, "217": [47, 49, 307], "2173": 312, "2179": 312, "217e": 48, "218": [67, 69, 307], "2180": 312, "2186": 312, "2191": 312, "2192": 96, "21e": 326, "22": [20, 46, 48, 76, 94, 107, 136, 310, 312, 315, 316, 319, 326, 328, 329, 332, 337, 343, 377], "2200": [61, 328, 331, 334], "2219": 48, "222": [77, 107, 136], "2220": 312, "222e": 326, "2238": 328, "224": 16, "2249": 37, "225": [75, 326], "2250": [18, 37, 91], "2257": 48, "2266": 312, "2283": 331, "2284": [61, 328, 334], "229": 334, "2298": [], "2299": 312, "23": [12, 18, 20, 22, 23, 42, 44, 46, 48, 55, 61, 75, 76, 77, 91, 94, 310, 311, 312, 313, 316, 318, 319, 320, 324, 326, 328, 329, 331, 332, 334, 337, 338, 341, 343], "230": 312, "2300": [91, 312, 338], "2310": 312, "232": 312, "232000": [44, 320], "233": 316, "234": [316, 328], "2342": [61, 328, 334], "23482": 75, "235": [18, 22, 23, 42, 44, 46, 48, 55, 61, 75, 76, 77, 91, 310, 311, 313, 316, 318, 319, 320, 324, 326, 328, 331, 334, 337, 338, 341], "236": [96, 316, 319], "237": 48, "238": [42, 91, 94, 313, 341, 348], "239": 348, "239e": [46, 316, 319], "24": [18, 42, 75, 76, 91, 94, 294, 310, 313, 316, 319, 326, 329, 332, 337, 341, 385], "240": [42, 307, 312], "24102481595995506firmwar": 320, "242": [48, 75], "243": 75, "243e": 48, "245": [316, 319], "246": [94, 334], "2465": 312, "246501869": 312, "2467": 77, "247": 312, "2472": 77, "2477": [], "248": [312, 351], "24812382459640503": 319, "248123825": 312, "2491": 48, "2496": [42, 316], "2498": [42, 316], "24e": 341, "25": [2, 23, 75, 76, 77, 94, 99, 148, 310, 312, 316, 319, 320, 326, 329, 332, 336, 337, 343], "250": 326, "2500": 326, "25000": 331, "25085858": [107, 136, 195], "251": [107, 275], "252e": 46, "253": [48, 334], "2537": [107, 275], "255": 351, "256": 329, "2567": [44, 230, 241, 320], "257": 312, "259765625": 336, "26": [23, 25, 64, 75, 94, 98, 310, 312, 316, 319, 326, 329, 332, 336, 337], "260": [316, 319], "261": 94, "2633": 94, "26434": [94, 306], "2670": 94, "267e": 77, "268e": 77, "27": [20, 46, 76, 94, 310, 319, 320, 326, 329, 332, 337, 339], "271": 319, "2711": [], "2717": 75, "27170": 94, "27180": 94, "2737": 326, "274": 94, "277e": 46, "278": [21, 25, 307], "27811881011285344": 21, "2781188101128564": [], "2789": 48, "278e": 46, "279": 48, "2791": 48, "28": [6, 76, 94, 310, 318, 319, 326, 329, 337], "2803": 48, "2827": [22, 76], "282e": 48, "284": 94, "284101": 20, "2843": 252, "285": [31, 32, 307], "286": 320, "287": 94, "288": 316, "28e": 328, "29": [24, 75, 94, 310, 316, 318, 319, 326, 329, 337, 343], "2907": 75, "291": [94, 316], "291e": [316, 319], "293919": 20, "296": [316, 319, 367], "2975": 94, "298": [96, 114], "299": [75, 316, 319], "2a": 96, "2acquisit": 320, "2d": [4, 14, 22, 25, 33, 36, 39, 45, 46, 51, 64, 66, 69, 73, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 150, 154, 163, 197, 198, 200, 202, 203, 210, 211, 212, 213, 215, 216, 221, 222, 223, 224, 230, 234, 249, 261, 304, 307, 308, 313, 326, 329, 332, 334, 335, 337, 339, 346, 362, 383, 390, 392], "2e": 328, "2f": 31, "2fp": 312, "2j": [6, 337], "2nd": 106, "2rr": [76, 316], "3": [0, 1, 2, 6, 7, 15, 18, 19, 20, 22, 23, 24, 27, 31, 36, 37, 38, 39, 42, 46, 48, 55, 75, 76, 77, 78, 85, 88, 90, 91, 94, 96, 97, 98, 100, 101, 103, 104, 106, 107, 110, 112, 113, 115, 116, 118, 119, 133, 141, 161, 163, 168, 169, 179, 183, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 240, 241, 262, 279, 292, 298, 299, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 354, 361, 369, 373, 377, 380, 392, 394, 397], "30": [2, 23, 48, 60, 64, 94, 106, 310, 312, 315, 316, 319, 326, 328, 329, 330, 337], "300": [18, 20, 36, 39, 329, 331], "30000": [37, 91], "302": [77, 316, 319], "3037": 338, "3039": 338, "3047": 339, "306": 48, "307": [22, 316, 319], "308": [46, 76, 96], "31": [48, 76, 94, 310, 319, 326, 329, 337, 343], "310": 355, "3102": 339, "3106": 76, "311": [15, 25, 307, 316, 319], "3112": [18, 37, 42, 318, 319, 338], "312": [18, 37], "3130": 48, "3131": [], "3132": 48, "3148": 1, "3155": 22, "316": 354, "317": [42, 94], "3194": 22, "3197": 22, "32": [46, 76, 94, 310, 319, 320, 326, 329, 334, 337, 338], "322": [60, 62, 94, 307, 354], "323": 308, "324": 326, "3242": [], "3247": 232, "325": 326, "3250": 326, "3263": 326, "32768": 334, "328": [42, 316], "32_": [316, 319], "32number": 320, "32refer": 320, "32result": 320, "33": [18, 23, 37, 42, 75, 94, 310, 319, 326, 329, 337, 338], "3300": [30, 308], "3306": 339, "333": [262, 326], "335": [316, 319], "3352": 48, "335e": 48, "3369": 326, "33855009": 48, "3390": [94, 306], "34": [48, 75, 94, 316, 319, 326, 328, 329, 337, 339], "3400": 30, "342312": [94, 306], "344": [], "345": 75, "3458": 30, "346": 75, "3485": [], "3489": 339, "349000": 320, "349999durat": 320, "35": [18, 20, 37, 42, 75, 310, 312, 316, 318, 319, 326, 329, 337, 338], "3500": [30, 332], "3505": 30, "351": [], "3520": 308, "3536": 30, "3537": 308, "3540": 30, "3541": 308, "3548": [170, 308], "3549": [330, 339], "355": [1, 308], "356": [75, 78, 307], "3560": 308, "3583": 22, "36": [38, 48, 55, 76, 94, 316, 326, 329, 337], "360": 367, "3600": 329, "3601": [], "3610": 308, "3614": 22, "362": 339, "3620": 30, "3622": 308, "3623": 30, "3624": 308, "3628": 326, "3629": 22, "3631": [94, 339], "3636": [94, 339], "364": [52, 53, 307], "3640": 308, "3641": 75, "367": 1, "3678": 308, "368000": [44, 320], "3689988durat": 320, "3693": 308, "36e": 48, "37": [18, 23, 37, 42, 46, 61, 307, 316, 319, 326, 329, 337, 338], "3700": [30, 135, 308], "372": 312, "3734": 248, "3736": 42, "375": 367, "3750": 332, "3766": 64, "3780": 332, "379": 75, "38": [23, 42, 44, 46, 48, 55, 61, 75, 76, 91, 313, 316, 320, 326, 329, 337, 341], "3800": [30, 91], "3805": 338, "3807": 338, "381755": [107, 147, 276], "3823841": 0, "3826": 46, "383": [], "383064516033j": 331, "3831": 46, "385": 94, "3868": 76, "3873": 75, "3874": 326, "39": [18, 22, 23, 77, 91, 312, 314, 315, 316, 318, 319, 320, 326, 328, 329, 330, 332, 334, 336, 337, 339, 341], "3900": [91, 135], "390168": 20, "3915": 64, "392": [61, 62, 307], "396": 94, "399": [42, 316, 319], "3997": [44, 320], "3998": [44, 316, 319, 320], "3999": [18, 37, 42, 48, 318, 319, 336, 338], "3actual": 320, "3c02592": [94, 306], "3d": [22, 23, 36, 39, 99, 113, 213, 222, 223, 326, 329], "3d_dataset": 326, "3e": 341, "3extend": 320, "3f": [31, 75, 134, 170, 191, 262, 265, 288, 308, 312], "3fp": 312, "3g": [225, 318], "3gb": 85, "3j": [6, 337], "3rd": [106, 318], "3refer": 320, "3sampl": 320, "4": [2, 6, 7, 17, 19, 20, 21, 22, 23, 24, 27, 31, 40, 42, 44, 46, 48, 51, 55, 61, 68, 71, 75, 76, 77, 80, 91, 94, 96, 98, 99, 107, 116, 117, 139, 165, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 234, 240, 241, 245, 299, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "40": [23, 76, 310, 311, 315, 316, 320, 326, 329, 337], "400": [42, 320, 326, 329, 336, 338, 339], "4000": [18, 36, 37, 39, 42, 48, 91, 316, 318, 319, 320, 326, 329, 330, 332, 336, 337, 338], "4001": 42, "400mb": 85, "401": [316, 319], "402": [94, 368], "403": 94, "403400": 20, "403e": [326, 331], "404": [18, 77, 328], "40400": [37, 91], "4044": 30, "4046": 117, "405": 328, "406": 328, "407": 328, "4070": 330, "4071": 330, "408": [75, 328], "4096": [75, 241, 320], "41": [18, 23, 37, 42, 91, 313, 316, 318, 319, 320, 324, 326, 328, 329, 337, 338, 341], "410": [45, 49, 307], "414": 337, "41421356": 337, "415": [], "416": [64, 65, 307], "4160": 336, "4167": 326, "417": [312, 371], "4199": 48, "42": [18, 21, 37, 42, 94, 318, 319, 326, 329, 331, 337, 338], "4223": 77, "4230": 332, "424": [17, 25, 307], "4253": 77, "426": [238, 239], "4262": 75, "428": [42, 316], "4284": 77, "42843342": 48, "43": [20, 23, 30, 316, 324, 326, 334, 337, 338], "4329": [], "433": 75, "4330": 332, "4342": 326, "437": [77, 326, 339], "438": 339, "43836": 334, "4394": 30, "4398": 326, "44": [22, 48, 76, 316, 319, 326, 337, 341], "440": 75, "441": 75, "4446": 75, "445666174": 339, "446": 312, "447": [316, 319], "4474": [], "448": [316, 319], "44822162": 117, "449": [48, 337, 339], "44948974": 337, "45": [20, 23, 42, 48, 75, 141, 316, 319, 326, 330, 337, 338], "4500": 332, "451": 48, "4517": 98, "453": 23, "4550": 332, "456": 23, "4574": 64, "458": 75, "45e": 48, "46": [18, 23, 37, 42, 48, 75, 316, 318, 319, 326, 337, 338], "461": [316, 319], "4616": 64, "462": [22, 326, 375], "463": [], "466": [], "4662": 326, "468": 375, "468e": [23, 42, 91, 313, 316], "47": [75, 134, 308, 312, 316, 326, 337, 338], "471": 77, "4717": 331, "472": 326, "474": 312, "477": 326, "477e": [18, 37, 42, 318, 319], "47878161267252": 22, "4798": 22, "48": [94, 308, 316, 326, 328, 337], "481e": 326, "482e": 48, "487": 53, "4888": 30, "488e": 48, "49": [18, 37, 42, 311, 316, 318, 319, 326, 337, 338], "490": 377, "4908": [], "4913": 76, "496": 77, "4980": 64, "4991": 94, "4998": 64, "4actual": 320, "4c72b0": 329, "4f": 312, "4fq4v": [94, 306], "4number": 320, "4th": [15, 19, 27, 310, 311, 325], "4x8": 316, "4x96": 19, "4\u00e5": [316, 319], "4\u00ea\u00ba": [316, 319], "5": [2, 7, 15, 16, 19, 20, 22, 23, 24, 27, 30, 31, 46, 47, 48, 51, 64, 68, 71, 75, 76, 77, 86, 91, 93, 94, 96, 97, 98, 99, 102, 106, 107, 115, 116, 119, 141, 154, 163, 165, 171, 177, 204, 259, 269, 298, 299, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 354, 377], "50": [18, 23, 30, 52, 64, 75, 77, 91, 96, 97, 98, 101, 106, 107, 120, 133, 163, 172, 187, 190, 245, 252, 270, 310, 312, 315, 316, 326, 329, 332, 334, 337, 338], "500": [20, 112, 115, 329], "5000": [75, 76, 331, 334, 337], "500x500": 113, "5012": [], "5013peak": 320, "501e": 46, "503": 18, "50300": [37, 91], "505000": [44, 320], "5087": [], "509278655052185pressur": 320, "5096153847107": 331, "51": [18, 19, 24, 37, 42, 91, 310, 311, 316, 319, 326, 337, 338], "5103": 326, "513": 77, "513e": 46, "516": 75, "517": [319, 338], "519": [316, 319], "51e": 48, "51x96": 19, "52": [64, 75, 76, 94, 96, 316, 319, 326, 334, 337], "5209": 48, "52329sampl": 320, "524": [], "5257": 326, "5263": 320, "5265": 320, "5274peak": 320, "5281": [0, 94, 306], "5282": 75, "52845001": 48, "529": [], "5291": [], "53": [23, 52, 95, 326, 329, 337], "531": [43, 49, 307, 326], "532": 46, "533e": 331, "534": 339, "5342": 75, "53572": [94, 306], "5358": 326, "536e": 38, "5377": 326, "538e": 38, "53e": 48, "54": [18, 20, 30, 37, 42, 75, 119, 171, 176, 319, 326, 337, 338], "540": [], "5400": 332, "5417": 326, "541e": 328, "5429": [], "543": [316, 319, 383], "5437": 64, "543e": 48, "544": [316, 319], "5448": 96, "544e": [316, 319], "545": 339, "5458": 22, "546": 320, "546e": 328, "547": 42, "5474": 308, "5476": 1, "549": [308, 339], "55": [1, 42, 76, 80, 91, 94, 107, 119, 135, 136, 141, 147, 195, 240, 247, 266, 274, 275, 276, 285, 287, 313, 320, 326, 330, 337, 341], "552": [316, 319], "5521": [], "5522": 77, "553": [71, 72, 307, 316, 319, 339], "55339": [94, 306], "5549": [23, 38, 42, 91, 107, 119, 135, 136, 141, 147, 195, 230, 240, 245, 247, 274, 275, 276, 287, 308, 313, 316, 319, 330, 341], "5553": 330, "556": 332, "5566": 23, "557": [22, 25, 307], "56": [23, 75, 76, 316, 319, 326, 337], "560": [], "5618": 326, "562": [75, 312], "562backward": 320, "563": 312, "564": [], "5667": [], "5669": 308, "5684": [], "569": 75, "56b4e9": 329, "57": [27, 75, 91, 94, 141, 240, 314, 316, 319, 326, 328], "571": 312, "5735": [], "575": [23, 25, 75, 307], "5752": [44, 320], "577": [77, 78, 307], "5771": [44, 320], "579": 75, "579e": 48, "58": [18, 37, 42, 44, 91, 316, 319, 320, 326, 338], "5809": [44, 320], "581e": [44, 320], "582": 22, "5827": [44, 320], "582j": 334, "583x": 94, "5880": 1, "589e": 48, "59": [42, 316, 326], "5900": 332, "592e": 48, "593": [18, 25, 307], "5930": 48, "5949": 76, "594e": 46, "596e": 48, "5979": 22, "5993": 15, "5994": 64, "5995": 30, "5997": [15, 332], "5999": [1, 42, 64, 91, 313, 316, 319, 330, 332, 341], "5e": 75, "5j": [6, 337], "5th": [27, 64], "6": [2, 6, 16, 19, 23, 27, 48, 75, 76, 77, 86, 88, 90, 91, 94, 96, 98, 99, 100, 101, 103, 106, 107, 110, 112, 113, 115, 116, 118, 119, 164, 169, 175, 205, 231, 298, 299, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 369], "60": [20, 36, 39, 51, 67, 77, 80, 94, 98, 107, 164, 183, 308, 326, 338], "600": [326, 329, 341], "6000": [42, 91, 313, 316, 319, 330, 341], "6009": [], "602": 18, "60200": [37, 91], "603": 77, "606": [46, 49, 75, 307], "6077": 23, "607943654060364e": 319, "607e": 46, "608e": [42, 319, 338], "61": [77, 308, 326, 334], "611089606616017e": [], "611089606618107e": 21, "615": 328, "616": 328, "617": 328, "618": 328, "6180": 48, "619": 328, "62": 326, "620": 328, "621": 328, "621983": [], "622": 312, "623": [55, 77, 328], "624": 328, "625": 328, "626": 328, "627": [328, 332], "6279": [], "628": 328, "629": [68, 69, 307], "63": 326, "630": 328, "6311": [44, 320], "6324": [44, 320], "634": 119, "6369": 308, "6376": [44, 320], "6385": 46, "6388": [44, 320], "64": [42, 75, 316, 326, 334], "640": [], "643": [248, 388], "647": 388, "6476": 46, "649": [42, 91, 313, 316, 319, 330, 332, 341], "6497": 77, "64th": 336, "65": [42, 316, 326], "650": [42, 91, 313, 316, 319, 329, 330, 341], "6500": 333, "651": 332, "651815": 320, "652": [310, 311], "652818786": [107, 287], "65536": 334, "6566": 22, "658": [42, 316], "66": [134, 308, 326], "662": [38, 40, 307], "663": 389, "6631": [], "664": 389, "667": 326, "6676": 94, "668": 389, "6686": 94, "66900015": 48, "67": 326, "670": [], "671": [16, 25, 307], "672": [], "673": [], "6741": 316, "6747": 316, "678957223892212pressur": 320, "68": [308, 326], "680": 320, "68198347": 48, "6822": 316, "6826": 316, "683": 339, "684": 22, "6844": [42, 316], "6849": [42, 316], "687": [42, 316, 390], "687e": 119, "688": 390, "689": [42, 49, 307], "6891": 316, "6899": 316, "689e": 46, "69": [77, 134, 308, 326], "6919": 316, "692": [], "6924": 316, "692e": 46, "693": 308, "694": 23, "695": 77, "6956": 328, "696": 395, "6976": 316, "6979": 316, "697e": 46, "698": 316, "699": [44, 320], "69e": 46, "6_19039_538": [316, 319], "6g": [316, 319], "7": [2, 6, 18, 22, 23, 37, 38, 39, 42, 44, 46, 48, 49, 64, 71, 76, 77, 91, 94, 107, 116, 119, 147, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 276, 305, 308, 310, 311, 312, 313, 314, 315, 316, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 346, 380, 386, 397], "70": [64, 68, 75, 326, 333], "700": [27, 42, 44, 314, 316, 320, 326, 329, 332], "702": 18, "70200": [37, 91], "7021": [42, 316], "7028": [42, 316], "7030": 328, "704": 316, "706": 392, "70749998": 48, "708": 326, "71": [23, 326], "711": [78, 339], "711e": 46, "7121": [42, 316], "7128": [42, 316], "7134": [316, 319], "7139": 76, "714": [22, 62, 392], "7153": 76, "716": 392, "72": [42, 115, 316, 326], "721e": 46, "7223": [], "7233": 22, "723e": 48, "725": 40, "726": 77, "727": 316, "7275": 316, "7282": 316, "7289": 316, "73": [107, 147, 276, 326], "7302": 22, "7306": [42, 316], "7309": [42, 316], "732": 337, "73205081": 337, "733": 77, "734": 312, "7355": 96, "7357": 316, "7362": 316, "739": 339, "74": [48, 107, 147, 276, 326, 328], "741e": 326, "7439": 94, "746": [42, 312, 316], "747926": [19, 310], "7494": 308, "749519": 310, "749798": 310, "749865": 20, "75": [22, 64, 94, 262, 312, 326, 329, 339], "75015": 2, "751": 49, "7537": 22, "756": [316, 319], "757": 94, "75794": 2, "758": 393, "7584": 76, "75843334": 48, "75marker": 329, "76": [24, 75, 94, 310, 311, 316, 319, 326], "763": [75, 308], "765": [75, 385], "7662": [], "767": [], "769": 385, "77": [94, 308, 326], "771": [344, 398], "7716": 30, "77180004": 48, "7720": 48, "7725": 77, "7742": 75, "777": 394, "778": [76, 78, 307, 339], "779e": 119, "78": [42, 94, 316, 326], "78153": 2, "783": [75, 107, 147, 276], "784": 385, "7871": 326, "787875175476074e": 319, "787e": 318, "7883": 23, "788e": [42, 318, 319, 338], "789": [107, 136], "79": [30, 42, 76, 316, 326], "791": [42, 91, 313, 341], "7918": 319, "792": [], "7921117": [94, 306], "793": [20, 25, 307], "793j": 334, "794": [42, 91, 313, 341], "796": 75, "797": [27, 28, 307], "79773331": 48, "7_cz0": [240, 245, 316, 319], "8": [0, 2, 6, 16, 18, 23, 30, 39, 42, 46, 48, 51, 61, 67, 68, 71, 75, 76, 80, 91, 94, 96, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 116, 118, 119, 150, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 385, 396], "80": [27, 42, 48, 75, 113, 314, 316, 326, 332, 338], "800": [75, 326, 329, 332], "8000": 30, "801": 18, "80100": [37, 91], "802": [], "804": 326, "805": 312, "807972021": [107, 275], "807e": 326, "8080601692199707": 341, "80vfocal": 320, "81": [64, 75, 326], "81143332": 48, "812": 326, "813": 334, "815": [42, 91, 313, 341], "816": [42, 91, 313, 341], "8164": 326, "82": [24, 75, 94, 326], "82154989": 48, "8222": 319, "824": [24, 25, 307], "824e": 75, "826": 316, "826e": 75, "827": 395, "83": [16, 75, 94, 326], "831": 316, "832": 332, "8346": 326, "8366": 334, "84": [42, 75, 94, 316, 326], "840": 332, "841": [328, 397], "842": 328, "844": [], "846": 69, "849": [344, 398], "85": [42, 75, 316, 326, 329], "850": 332, "8500": [44, 320], "85248": 94, "855": [30, 32, 307], "8567": 22, "857": [18, 75, 308], "85790014": 48, "859": [19, 25, 307], "86": [75, 316, 319, 326], "863": 318, "87": [23, 75, 94, 316, 319, 326], "87261": 117, "873": 326, "8757": 76, "877": 262, "88": [75, 94, 326, 339], "881": 312, "88114977": 48, "882": [21, 23], "8838": [], "8842": 308, "8859": [], "88615": 312, "888": 25, "889": [], "89": [75, 326, 339], "890": [337, 341], "891": [75, 332], "8910": 1, "8939": 326, "89788342": 48, "8999999761581421instrument": 320, "89e": 48, "8h": 320, "8max": 320, "8pfk5": [94, 306], "8x427": [310, 311], "9": [2, 6, 18, 21, 23, 31, 37, 42, 46, 64, 75, 76, 77, 91, 94, 98, 107, 116, 117, 151, 165, 231, 305, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 343, 369, 394], "90": [67, 75, 76, 77, 312, 326, 329, 333], "900": [326, 329], "9001": 30, "90063": 94, "901": 22, "904": 332, "905": [18, 37], "90500": [37, 91], "9059": 308, "905torr_lt_aft": [18, 37, 42, 319, 338], "91": [75, 326], "910": [], "911": [42, 91, 313, 341], "913": [42, 91, 313, 341], "92": [22, 75, 333], "920": [15, 329], "9207": [316, 319], "929": [36, 40, 307], "93": 75, "9301": 48, "932926": 94, "9335": 94, "9342": 94, "94": [23, 75, 119], "944": [], "945": 75, "9456": 94, "946": [], "9469": [], "948": 328, "9499999999999995": 31, "95": [31, 67, 262, 310, 329], "953e": 48, "956": 340, "9579": 1, "9584": [], "959": 77, "96": [19, 23, 24, 76, 94, 310, 311, 328, 329, 332], "960": [], "961e": 48, "962252absolut": 320, "9632": 326, "964e": [61, 328, 331, 334], "9664": 325, "967": 319, "968": [312, 314], "96e": 331, "97": [19, 94, 310], "9700sampl": 320, "9718": 1, "975": 312, "9755": 24, "976": 75, "9770999": 48, "979": [], "98": [42, 80, 107, 147, 276, 316, 329], "980": 23, "98111677": 48, "982": 75, "983": 316, "984": [314, 316], "9854": 326, "987417333333low": 320, "99": [20, 22, 23, 67, 75, 77, 119, 150, 329, 333], "990": 31, "9900990099009901": 31, "9964": 24, "9977": 30, "998": 339, "9981": 24, "999": [18, 22, 23, 37, 42, 318, 319, 338], "99997analog": 320, "999999": [107, 204], "9999999999999997": 31, "99axes_grid": 329, "9m": [316, 319], "9w\u00e5e\u00ba\u00f3o": [316, 319], "A": [2, 6, 8, 11, 17, 20, 22, 34, 37, 46, 51, 58, 68, 80, 82, 84, 88, 90, 91, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 125, 128, 135, 137, 141, 147, 191, 195, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 265, 274, 275, 276, 278, 281, 282, 283, 287, 288, 291, 292, 294, 304, 305, 306, 308, 311, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 351, 370, 390, 391], "AND": [2, 107, 125], "And": [68, 91, 315, 329, 333], "As": [8, 17, 19, 21, 23, 36, 39, 46, 51, 64, 71, 80, 107, 151, 154, 225, 304, 308, 310, 311, 312, 313, 314, 315, 316, 319, 320, 326, 328, 329, 331, 332, 337, 338, 339, 341, 397], "At": [107, 310, 318, 319], "Be": [9, 259], "But": [36, 39, 64, 80, 95, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 305, 312, 318, 324, 326, 327, 329, 330, 332], "By": [18, 37, 42, 87, 95, 97, 98, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 126, 127, 136, 147, 148, 154, 162, 164, 193, 196, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 271, 275, 276, 279, 284, 287, 290, 291, 292, 308, 316, 319, 320, 324, 329, 336], "For": [2, 4, 5, 6, 8, 10, 18, 19, 20, 21, 37, 51, 64, 67, 68, 76, 80, 84, 85, 86, 87, 89, 91, 96, 97, 98, 106, 107, 110, 115, 122, 123, 126, 129, 137, 138, 139, 140, 141, 146, 147, 157, 162, 163, 166, 167, 171, 173, 176, 177, 180, 192, 193, 195, 208, 209, 241, 254, 256, 272, 274, 275, 276, 286, 287, 305, 308, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 341, 343, 384, 397], "INE": 320, "If": [2, 3, 6, 10, 12, 13, 42, 83, 86, 87, 88, 90, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 146, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 180, 184, 187, 190, 192, 193, 195, 196, 197, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 262, 266, 269, 271, 272, 273, 275, 276, 279, 281, 282, 285, 286, 287, 290, 291, 292, 294, 298, 299, 310, 312, 315, 316, 320, 324, 325, 326, 328, 329, 331, 332, 336, 341, 380, 388], "In": [2, 6, 15, 16, 18, 19, 20, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 45, 51, 55, 60, 61, 64, 67, 68, 71, 75, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 135, 151, 155, 172, 187, 190, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 275, 287, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 326, 327, 332, 334, 337, 339, 340, 383], "It": [22, 36, 38, 39, 48, 91, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 129, 133, 159, 163, 164, 165, 189, 206, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 290, 304, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 323, 324, 326, 328, 329, 331, 332, 333, 336, 339, 349, 383, 390, 392, 396, 397], "Its": [92, 119, 304, 312, 370], "NOT": [87, 242, 259, 337], "No": [2, 8, 107, 115, 140, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "Not": [100, 107, 113, 125, 140, 271, 315, 325, 330], "OF": [2, 329], "OR": [85, 107, 128], "Of": [331, 332], "On": [85, 87, 95, 107, 158, 310, 312, 325], "One": [2, 98, 107, 319, 322, 326, 332, 335, 336, 341, 394], "Or": [6, 17, 311], "Such": 2, "THAT": 315, "THE": 2, "TO": [2, 329], "That": 337, "The": [1, 2, 6, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 141, 148, 150, 151, 152, 153, 154, 156, 157, 159, 162, 163, 164, 165, 168, 169, 171, 172, 173, 175, 176, 177, 179, 180, 183, 187, 188, 189, 190, 193, 195, 196, 197, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 258, 259, 262, 266, 269, 270, 272, 273, 274, 275, 280, 286, 287, 290, 294, 298, 299, 304, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 320, 324, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 340, 355, 386, 388, 390, 392, 395, 396], "Then": [19, 27, 87, 308, 312, 314, 316, 318, 319, 323, 330, 332], "There": [10, 84, 98, 107, 187, 326, 334], "These": [2, 22, 92, 308, 311, 312, 316, 324, 326, 329, 333, 339, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "Theses": 94, "To": [5, 18, 20, 22, 36, 37, 38, 39, 42, 51, 75, 76, 85, 87, 96, 107, 117, 162, 180, 229, 305, 308, 313, 316, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 336, 337, 339, 341, 396], "WILL": 329, "WITH": 2, "Will": [105, 111], "With": [98, 107, 125, 126, 127, 128, 193, 195, 196, 227, 275, 276, 287, 305, 308, 310, 316, 319, 324, 332], "_": [30, 45, 76, 100, 304, 308, 310, 311, 312, 314, 325, 328, 329, 330, 331, 332, 334, 336, 339], "_1": [18, 37, 75, 99, 304, 326], "_2": [18, 37, 75, 99, 326], "_3": 75, "_4": 329, "__": 325, "__all__": 4, "__call__": 328, "__dataset_methods__": 4, "__init__": [315, 339], "__string___": 325, "__version__": 39, "_active_ctx": [117, 121], "_arg": 339, "_axes3d": 329, "_callback": 339, "_classic_test_patch": [329, 330], "_context": 339, "_creat": 328, "_cstr": 328, "_dtype": 6, "_html_output": 328, "_i": 304, "_implement": [107, 109, 116], "_importer_method": 4, "_j": 304, "_modifi": 328, "_mpl": [329, 330], "_nmf": 21, "_novalu": 117, "_optim": 77, "_prod_dispatch": 117, "_pseudo_sync_runn": 339, "_read_spc": 4, "_registri": [117, 121], "_repr_html_": 328, "_run": 339, "_run_cel": 339, "_run_cod": 339, "_run_module_as_main": 339, "_run_onc": 339, "_string_": 325, "_subplot": 338, "_text_width": 328, "_\u00ba": [316, 319], "a1": 332, "a2": 332, "a3": 332, "a350": 55, "a5": 6, "a6": 6, "a_1": 96, "a_decomposit": [16, 25, 307], "a_max": [107, 140], "a_min": [107, 140], "a_n": 96, "a_nddataset": [40, 307], "aa": 332, "ab": [44, 48, 94, 96, 107, 123, 241, 275, 287, 320, 326, 332, 390, 396], "abad0d": 94, "abc": [135, 308, 390], "abcdef": 98, "abdelhafid": [1, 94], "abdollahi": 94, "abil": [319, 326], "abl": [12, 230, 304, 332], "about": [1, 5, 84, 91, 102, 259, 269, 305, 314, 316, 322, 327, 329, 332, 346, 370], "abov": [15, 23, 87, 107, 153, 163, 305, 310, 311, 312, 316, 319, 320, 323, 325, 326, 330, 332, 333, 337, 339, 344, 398], "abp": 320, "abresolut": 320, "abscissa": [151, 310], "absent": [233, 235, 243, 244, 336], "absolut": [96, 107, 122, 275, 287, 310, 318, 320, 321, 329], "absorb": [4, 17, 24, 36, 38, 39, 42, 44, 48, 91, 107, 136, 147, 195, 240, 241, 275, 276, 287, 298, 310, 311, 312, 313, 314, 316, 318, 319, 320, 326, 329, 332, 337, 338, 339, 341, 369, 371], "absorpt": [4, 94], "absort": 320, "abstract": [16, 100], "ac": 94, "ac034173t": 94, "aca": [94, 306], "acc": 320, "acceler": 308, "accent": 325, "accept": [2, 107, 115, 121, 346, 356, 383, 385, 386, 390, 391], "access": [2, 13, 55, 87, 95, 107, 305, 319, 324, 326, 397], "accessori": 320, "accompani": 2, "accord": [2, 99, 103, 107, 136, 234, 284, 304, 314, 315, 329, 370], "accordingli": [98, 107, 356, 397], "account": [5, 10, 12, 107, 138, 148, 162, 173, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 310, 311, 346], "accumul": [107, 275, 287], "accur": 110, "accuraci": [96, 98, 107, 113, 275, 287, 318], "aceto": 94, "achiev": [96, 124, 320, 330], "acid": [94, 306], "acknowledg": 2, "acqui": [316, 319], "acquir": [2, 326], "acquisit": [18, 20, 23, 37, 42, 43, 44, 46, 48, 61, 75, 77, 91, 107, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 272, 312, 313, 316, 317, 318, 320, 328, 331, 332, 334, 338], "acquisition_d": [4, 107], "acqus_fil": 75, "acr": 117, "acronym": [98, 107, 227], "across": [101, 110, 113, 326], "acscat": [94, 306], "act": [2, 317], "acta": [94, 332], "action": [6, 91, 94, 96, 107, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 353], "actionmasskinet": [20, 388, 392], "activ": [2, 5, 9, 12, 15, 21, 23, 30, 42, 43, 46, 52, 64, 80, 83, 85, 87, 88, 89, 90, 91, 92, 94, 98, 100, 107, 116, 119, 135, 136, 141, 147, 163, 188, 195, 237, 240, 247, 266, 274, 275, 276, 285, 287, 292, 306, 308, 313, 326, 329, 330, 332, 337, 341], "activation_pca": 23, "actual": [6, 18, 19, 27, 68, 84, 97, 98, 107, 308, 310, 311, 312, 314, 326, 330, 332, 338], "actul": 15, "ad": [2, 6, 7, 11, 18, 20, 86, 87, 92, 97, 107, 116, 159, 163, 169, 205, 219, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 294, 299, 304, 322, 327, 332, 346, 352, 353, 360, 361, 362, 363, 366, 386, 390, 391, 397], "adam": 96, "adapt": [2, 11, 12, 14, 25, 33, 106, 107, 109, 116, 118, 188, 230, 307, 325], "adata": 6, "add": [3, 5, 6, 7, 10, 18, 20, 23, 24, 27, 37, 55, 75, 76, 77, 85, 88, 107, 116, 229, 308, 310, 311, 312, 314, 319, 320, 325, 326, 328, 329, 330, 332, 336, 338, 339, 346, 354, 367, 368, 374, 375, 385, 387, 388, 392, 394], "add_coordset": 107, "add_dataset": [116, 328], "add_project": [116, 328], "add_script": 116, "addit": [2, 4, 6, 8, 36, 39, 51, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 137, 139, 148, 154, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 232, 266, 285, 304, 305, 312, 320, 321, 326, 327, 330, 337, 339, 346, 361, 383, 395, 397], "addition": [6, 225, 326, 337], "address": [2, 107, 338], "adjac": [98, 107, 129], "adjust": [80, 135, 232, 329], "administratorcompani": 320, "adob": 329, "adopt": 85, "adrian": 94, "adsorb": 94, "adsorpt": [18, 91, 94, 306, 312, 319, 338], "adt": 320, "advanc": [5, 92, 94, 163, 306, 312, 317, 324, 335, 338], "advantag": 319, "advis": [3, 30, 138, 173, 320], "affect": [37, 92, 98, 107, 129, 163, 310, 312, 326, 329, 332, 335, 346, 370], "affn": [236, 318], "after": [2, 6, 8, 10, 24, 64, 96, 106, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 300, 303, 304, 308, 312, 314, 316, 319, 329, 332, 333, 334, 338, 339, 341, 353, 368], "afterward": [113, 333], "ag": 94, "ag2": 320, "again": [22, 64, 230, 240, 241, 310, 319, 329], "against": [2, 98, 107, 125, 126, 127, 128, 193, 195, 196, 227, 275, 276, 287], "agg": 329, "agg_path_chunks": 329, "aggreg": 327, "agir": 94, "agirdata": [232, 252], "agre": 2, "agreement": 2, "ahap": [105, 111], "ahead": 6, "aim": 206, "ait": [1, 94, 306, 315], "aka": 110, "akbari": 94, "al": [14, 17, 24, 25, 33, 76, 93, 94, 96, 97, 98, 100, 101, 103, 106, 107, 110, 113, 118, 119, 230, 270, 304, 306, 307, 309, 311, 322, 324, 332, 353, 385, 391], "al2o3": 319, "alberto": 94, "alchem0x2a": 47, "alert": 325, "alessandro": 94, "alexandr": 94, "algorithm": [64, 68, 75, 91, 92, 94, 96, 97, 100, 101, 103, 106, 110, 113, 115, 118, 119, 133, 138, 152, 173, 259, 269, 270, 290, 304, 310, 312, 332, 339, 353, 390], "alia": [4, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 162, 198, 199, 200, 201, 202, 203, 214, 218, 219, 220, 224, 245, 247, 248, 259, 266, 269, 285, 290, 293, 295, 296, 297, 331, 390, 391], "align": [322, 329, 335, 349, 351], "alinaghi": 94, "alk1100494": [316, 319], "all": [1, 2, 6, 9, 12, 13, 21, 23, 31, 46, 47, 51, 75, 76, 84, 86, 87, 91, 92, 97, 98, 99, 100, 101, 103, 106, 107, 110, 112, 113, 115, 116, 118, 119, 124, 126, 127, 128, 136, 141, 156, 158, 161, 163, 165, 172, 179, 187, 190, 193, 196, 197, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 257, 272, 273, 274, 304, 305, 307, 308, 309, 310, 312, 315, 316, 319, 320, 323, 324, 325, 326, 329, 331, 332, 337, 338, 339, 347, 351, 379, 394, 396], "alladio": 94, "allevi": [107, 275, 287], "allitem": 116, "allnam": 116, "alloc": [98, 107, 165], "allow": [2, 3, 6, 10, 12, 22, 36, 39, 87, 92, 96, 98, 99, 100, 107, 135, 165, 232, 271, 308, 310, 314, 316, 319, 323, 326, 327, 328, 330, 331, 332, 337, 341, 368, 370, 385, 390, 392], "allows_non": 107, "almost": [97, 107, 133, 179, 313, 326], "alon": [12, 319, 396], "along": [42, 75, 76, 77, 97, 98, 101, 102, 106, 107, 124, 125, 126, 127, 128, 130, 131, 133, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 151, 152, 157, 171, 173, 175, 176, 177, 193, 195, 196, 197, 227, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 266, 269, 270, 271, 272, 274, 275, 276, 285, 286, 287, 290, 316, 319, 329, 332, 335, 338, 339, 351], "alpha": [101, 115, 171, 176, 177, 320], "alpha_h": 110, "alpha_w": 110, "alphabet": 99, "alreadi": [5, 12, 13, 15, 23, 89, 99, 101, 107, 305, 308, 316, 319, 323, 324, 337, 367, 388], "als2004dataset": [17, 19, 24, 310, 311], "also": [6, 8, 13, 17, 19, 22, 27, 38, 42, 46, 51, 61, 64, 68, 75, 87, 92, 95, 96, 98, 100, 101, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 124, 129, 152, 164, 188, 191, 217, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 308, 310, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 339, 383, 386, 389, 390], "alt": 325, "alter": [2, 329], "altern": [19, 71, 80, 94, 106, 107, 110, 116, 188, 207, 304, 306, 310, 324, 326, 329, 334, 339], "although": 92, "alwai": [4, 6, 8, 92, 96, 97, 98, 105, 107, 111, 115, 225, 275, 287, 305, 308, 311, 315, 324, 326, 329], "amax": [98, 107, 127, 193, 196], "ambigu": 326, "amend": 2, "amic": 2, "amin": [98, 107, 126, 193, 196], "among": [80, 96, 97, 98, 99, 103, 104, 107, 152, 197, 217, 271, 304, 312], "amount": [6, 22, 113, 150, 157, 175, 197, 304, 329, 333], "amp": 315, "ampl": [30, 76, 134, 170, 191, 225, 265, 288, 308], "amplitud": [112, 308, 320, 329], "amplitude_mod": 112, "amsterdam": 20, "an": [1, 2, 6, 8, 9, 18, 19, 20, 30, 36, 39, 41, 44, 46, 47, 49, 57, 75, 76, 77, 80, 86, 87, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 146, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 180, 181, 192, 193, 196, 197, 204, 205, 208, 209, 215, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 266, 269, 270, 271, 272, 273, 275, 278, 279, 281, 282, 283, 285, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 304, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 324, 325, 326, 327, 329, 330, 331, 332, 336, 337, 338, 339, 340, 341, 386, 388, 391, 392, 397], "an1": 320, "an2": 320, "ana": 94, "anaconda": [85, 361], "anal": 339, "analys": [92, 310, 315], "analysi": [1, 14, 15, 17, 19, 20, 22, 24, 25, 27, 30, 73, 74, 76, 77, 78, 83, 85, 94, 98, 99, 100, 101, 103, 104, 106, 107, 110, 112, 113, 118, 119, 157, 162, 163, 208, 230, 240, 249, 270, 304, 306, 307, 308, 310, 314, 322, 324, 332, 354, 384, 388, 390, 391, 392], "analyt": 94, "analytica": [94, 332], "analyticalsciencejourn": 94, "analyz": [0, 91, 93, 163, 324], "anamysi": 113, "andrea": 94, "ang": 2, "angle3": 312, "ani": [2, 5, 6, 10, 12, 51, 84, 87, 88, 90, 92, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 125, 126, 127, 129, 135, 141, 152, 188, 193, 196, 208, 258, 259, 266, 269, 274, 290, 304, 310, 312, 316, 319, 323, 324, 325, 329, 330, 332, 386], "anim": 329, "anna": 94, "annal": 22, "annemi": 94, "annex": 2, "annot": [75, 76, 113, 312, 322], "anomal": 151, "anoth": [55, 67, 68, 98, 107, 154, 183, 311, 314, 326, 329, 332, 338, 341], "ansorb": 38, "answer": [332, 338], "antialias": 329, "anyio": 6, "anymor": 385, "anyth": 329, "anytim": 329, "apcatb": [94, 306], "apf": 320, "api": [10, 12, 17, 19, 21, 22, 23, 24, 27, 42, 47, 48, 80, 83, 84, 88, 90, 91, 92, 93, 98, 107, 169, 304, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 322, 326, 328, 330, 331, 333, 334, 335, 336, 337, 338, 340, 341, 346, 354, 359, 366, 379, 397], "apod": [60, 61, 62, 83, 137, 139, 157, 162, 171, 175, 176, 177, 180, 228, 268, 272, 286, 307, 320, 322, 334, 335, 336, 375], "apod_arr": [137, 139, 157, 171, 175, 176, 177, 272, 286], "app": 339, "appar": [67, 333], "appear": [42, 75, 80, 155, 304, 319, 330], "append": [4, 75, 107, 109, 116, 326, 339], "appl": 329, "appli": [2, 6, 8, 23, 38, 59, 60, 61, 71, 73, 76, 80, 91, 94, 97, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 137, 139, 141, 142, 143, 146, 150, 151, 157, 162, 166, 167, 171, 175, 176, 177, 180, 192, 207, 208, 209, 254, 256, 259, 260, 269, 272, 274, 286, 290, 306, 310, 312, 324, 326, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 390, 396], "applic": [2, 77, 92, 94, 95, 98, 107, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 304, 305, 310, 324, 326, 327, 332, 339, 346], "approach": [64, 92, 94, 97, 306, 335, 397], "appropri": [6, 84, 87, 107, 163, 326], "approxim": [20, 96, 101, 105, 110, 111, 266, 285, 312], "apt": [5, 85, 89, 320], "aq": [272, 331], "aqm": 320, "ar": [0, 1, 2, 3, 6, 9, 10, 12, 16, 17, 18, 19, 20, 21, 22, 23, 27, 30, 31, 38, 46, 48, 51, 55, 60, 68, 75, 76, 77, 80, 83, 84, 87, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 135, 136, 138, 140, 151, 152, 153, 155, 161, 162, 163, 164, 165, 171, 172, 173, 183, 187, 190, 193, 195, 196, 197, 207, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 259, 260, 266, 269, 271, 272, 275, 276, 280, 287, 304, 305, 308, 309, 310, 311, 312, 313, 314, 316, 319, 320, 323, 324, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "arang": [16, 96, 98, 107, 136, 164, 169, 172, 190, 205, 299, 311, 326, 337, 338], "arbitrari": [48, 96, 101, 107, 158, 225, 308, 330, 392], "arbitrarili": [105, 111, 115], "arc3": 329, "archiv": [27, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 321], "area": [47, 75, 77, 106, 107, 112, 114, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 313], "arg": [4, 99, 106, 107, 113, 116, 118, 121, 134, 149, 160, 170, 181, 191, 207, 225, 265, 266, 267, 288, 289, 292, 293, 294, 295, 296, 297, 320, 339], "argmax": [98, 107, 126, 127, 193, 196, 304, 314], "argmin": [98, 107, 126, 127, 193, 196], "argnam": 116, "argsgetconc": [20, 106], "argsgetspec": 106, "argument": [6, 17, 19, 21, 31, 42, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 122, 123, 124, 129, 141, 155, 172, 187, 190, 198, 199, 200, 201, 202, 203, 207, 214, 218, 219, 220, 224, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 308, 314, 315, 319, 326, 329, 337, 339, 346, 356, 383, 390, 396], "ari": 94, "aris": [2, 322, 326], "arithmet": [91, 98, 107, 136, 172, 195, 275, 276, 287, 326], "armin": 94, "arnaud": [0, 1, 94], "around": [6, 98, 102, 107, 151, 255, 259, 269, 324, 326, 329, 333, 336, 341], "arpack": 113, "arr": 6, "arrai": [6, 8, 16, 20, 23, 31, 36, 39, 42, 75, 91, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 129, 136, 137, 139, 140, 142, 143, 147, 148, 153, 154, 155, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 187, 190, 193, 195, 196, 197, 204, 205, 207, 212, 213, 229, 231, 232, 234, 238, 239, 253, 259, 260, 269, 272, 273, 275, 276, 278, 280, 281, 282, 286, 287, 290, 298, 299, 301, 302, 304, 305, 314, 316, 319, 326, 328, 330, 335, 336, 338, 346, 388, 391], "arrang": [2, 197, 338], "array_lik": [96, 98, 107, 125, 126, 127, 128, 136, 140, 142, 143, 147, 152, 153, 187, 190, 193, 195, 196, 275, 276, 287], "arrheniu": 96, "arrow": 91, "arrowprop": [312, 329], "arrowstyl": [312, 329], "art": 2, "articl": [2, 94, 306, 329], "artifact": [91, 329, 340], "artifici": 337, "arxiv": 94, "asc": [242, 347], "ascend": 338, "asfortranarrai": 107, "asg": 320, "asi": 339, "ask": 84, "asl": [8, 64, 80, 97, 138, 152, 173, 270, 304, 332, 390], "aspect": 322, "ass": 320, "assert": [4, 6, 15, 31, 107, 109, 116], "assert_array_equ": 6, "assert_dataset_equ": 6, "assess": 312, "assign": [27, 231, 316, 326, 338], "assist": 2, "associ": [2, 99, 107, 116, 136, 304, 312], "assum": [15, 47, 55, 75, 91, 96, 97, 99, 107, 136, 157, 175, 230, 240, 241, 260, 262, 311, 320, 324, 326, 330, 337], "assumpt": 113, "assymetri": 64, "asterisk": 325, "astyp": [6, 98, 107, 334], "asym": [30, 134, 265, 308], "asymmetr": [64, 94, 97, 133, 134, 138, 152, 173, 270, 304, 308, 332], "asymmetri": [64, 80, 97, 133, 332], "asymmetricvoigtmodel": [30, 308], "async_": 339, "async_help": 339, "asyncio": 339, "asyncio_loop": 339, "atleast_2d": 107, "atmospher": [94, 306], "atol": 96, "atom": 94, "atomiqu": 2, "atr": [94, 241, 306, 320], "attach": [2, 10, 325], "attack": 2, "attempt": [155, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 319, 324, 326], "attent": 2, "attr": [316, 319], "attribut": [2, 15, 18, 22, 23, 37, 38, 55, 64, 80, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 134, 170, 191, 225, 259, 265, 269, 280, 288, 290, 310, 311, 312, 314, 319, 320, 327, 328, 329, 330, 332, 336, 370, 375, 384, 386, 396, 397], "att\u00e9nuat": [316, 319], "aug": 94, "augment": 309, "authent": 2, "author": [0, 2, 6, 18, 20, 22, 23, 36, 39, 42, 44, 46, 48, 55, 61, 75, 76, 77, 91, 107, 310, 311, 313, 315, 316, 318, 319, 320, 324, 326, 328, 331, 334, 337, 338, 341], "auto": [6, 107, 113, 124, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 329], "auto_examples_analysi": [25, 28, 32, 34], "auto_examples_cor": [40, 49, 53, 56, 58], "auto_examples_process": [62, 65, 69, 72, 78, 81, 82], "autoampl": 112, "autobas": [30, 112, 308], "autohint": 329, "autolayout": [310, 311, 329], "autom": [6, 18, 309], "automarkeredgewidth": 329, "automarkers": 329, "automat": [2, 6, 22, 24, 42, 92, 96, 97, 98, 103, 107, 112, 116, 124, 133, 135, 138, 150, 152, 163, 173, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 270, 274, 294, 308, 312, 316, 326, 328, 329, 332, 334, 336, 353, 370, 372, 379, 386, 388], "automatiqu": 2, "automobil": [94, 306], "autoposit": 329, "autoscal": [30, 76, 308], "autosub": [97, 133, 138, 152, 173, 270], "avail": [2, 4, 27, 30, 51, 68, 75, 76, 91, 102, 107, 115, 156, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 283, 294, 316, 320, 326, 329, 330, 332, 333, 386, 390, 392, 397], "available_nam": 99, "available_styl": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "avant": 329, "averag": [101, 102, 107, 110, 151, 195, 197, 266, 269, 275, 287, 329, 335], "avers": 92, "avg": [102, 107, 136, 266, 269, 339], "avoid": [6, 42, 76, 84, 99, 106, 312, 315, 316, 331, 337, 338, 355, 383], "await": 339, "awar": [107, 163, 259, 305, 326, 327, 328, 330, 370], "ax": [4, 18, 21, 22, 23, 27, 30, 52, 64, 71, 75, 76, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 125, 126, 128, 193, 197, 203, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 308, 310, 311, 312, 314, 319, 326, 329, 332, 334, 336, 337, 338, 339, 341, 356], "ax1": 329, "axe21": 332, "axec": 107, "axect": 107, "axei": 107, "axes3d": 23, "axes3d_grid": 329, "axes_autolimit_mod": 329, "axes_axisbelow": 329, "axes_edgecolor": 329, "axes_facecolor": 329, "axes_formatter_limit": 329, "axes_formatter_offset_threshold": 329, "axes_formatter_use_local": 329, "axes_formatter_use_mathtext": 329, "axes_formatter_useoffset": 329, "axes_grid": 329, "axes_grid_axi": 329, "axes_grid_which": 329, "axes_labelcolor": 329, "axes_labelpad": 329, "axes_labels": 329, "axes_labelweight": 329, "axes_linewidth": 329, "axes_prop_cycl": 329, "axes_spines_bottom": 329, "axes_spines_left": 329, "axes_spines_right": 329, "axes_spines_top": 329, "axes_titlei": 329, "axes_titlepad": 329, "axes_titles": 329, "axes_titleweight": 329, "axes_unicode_minu": 329, "axes_xmargin": 329, "axes_ymargin": 329, "axessubplot": 338, "axex": 107, "axhlin": 312, "axi": [4, 8, 15, 19, 20, 30, 36, 39, 43, 47, 48, 76, 91, 98, 99, 101, 102, 107, 113, 117, 124, 125, 128, 130, 131, 135, 136, 137, 139, 141, 144, 145, 146, 147, 150, 157, 162, 166, 167, 171, 175, 176, 177, 180, 182, 192, 195, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 254, 256, 259, 266, 269, 271, 272, 274, 275, 276, 277, 285, 286, 287, 290, 308, 310, 311, 317, 326, 329, 332, 336, 337, 338, 339, 341, 348, 392], "axisscal": 316, "axrrai": [107, 283], "axt": 107, "axvlin": [75, 312], "az1049": [], "az1436": [18, 22, 23, 42, 44, 46, 48, 55, 61, 75, 76, 77, 91, 310, 311, 313, 316, 318, 319, 320, 324, 326, 328, 331, 334, 337, 338, 341], "azzolina": 94, "b": [0, 2, 5, 15, 20, 46, 51, 60, 61, 71, 80, 92, 94, 96, 98, 107, 117, 122, 123, 134, 135, 141, 155, 229, 232, 234, 241, 274, 308, 315, 316, 319, 325, 326, 329, 331, 339], "b1": [2, 51], "b2": [16, 51], "b3": 51, "b350": 55, "b3end": 320, "b4": 51, "b978": 94, "b9780444527011000478": 94, "b_1": 96, "b_crossdecomposit": [28, 307], "b_ev": [15, 16, 100], "b_n": 96, "ba": 80, "back": [38, 98, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 164, 315, 320, 325, 329, 331], "backend": [329, 368], "background": [94, 231, 233, 235, 241, 243, 244, 248, 316, 319, 320, 329, 368], "backgroung": [233, 235, 243, 244], "backslash": 316, "backtick": 8, "backward": [15, 16, 96, 100, 319, 320, 329, 338, 390], "bad": [115, 320, 388], "badli": [68, 333], "bai": 312, "balan": 94, "balanc": 339, "banc": [316, 319], "band": 336, "bar": [13, 17, 101, 107, 113, 210, 211, 212, 213, 214, 215, 216, 221, 329, 367], "bare": 6, "barrier": [94, 306], "bartlett": [102, 157, 171, 175, 228, 267, 268, 269, 272, 286, 339], "basc": [64, 97, 133, 152, 173, 270, 308, 335, 352, 390], "base": [1, 2, 3, 16, 64, 75, 86, 87, 94, 96, 97, 98, 100, 107, 113, 133, 151, 163, 172, 185, 190, 206, 210, 211, 212, 213, 215, 216, 221, 230, 259, 269, 281, 290, 306, 311, 312, 314, 316, 319, 324, 329, 332, 333, 334, 337, 339, 347, 390, 391, 392], "base64": [101, 106], "base_ev": 339, "basearrai": 328, "baseconfigur": [97, 100, 101, 102, 103, 105, 106, 110, 111, 113, 115, 118, 119], "basefileselector": 385, "baseformatt": 328, "baselin": [8, 65, 68, 74, 75, 78, 83, 92, 94, 107, 112, 133, 135, 138, 148, 152, 163, 173, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 240, 249, 270, 304, 307, 313, 319, 322, 324, 333, 335, 346, 349, 351, 352, 353, 390], "baselinecorrect": 390, "baselinecorrector": 368, "baselineprocess": [64, 80], "bash": 85, "basi": [2, 6, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 304], "basic": [4, 5, 51, 64, 67, 91, 92, 163, 315, 317, 322, 324, 326, 329, 332, 335], "basinhop": 112, "bastl": 94, "bat": 90, "batch": 90, "bazin": 94, "bbox": [312, 329], "bbw": 320, "bd": 80, "bdash_capstyl": 329, "bdf": 96, "beam": 94, "beamsplittervalu": 320, "beata": 94, "becaus": [92, 105, 107, 111, 115, 125, 312, 319, 323, 326, 329, 330, 338, 339, 397], "becom": [2, 107, 140, 337], "been": [1, 2, 11, 12, 18, 42, 47, 75, 98, 99, 107, 154, 178, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 310, 312, 318, 319, 324, 326, 328, 329, 331, 332, 334, 336, 337, 338, 341, 348, 366, 370, 386, 388, 390, 391, 392, 396, 397], "befor": [6, 8, 12, 80, 84, 86, 92, 97, 98, 101, 106, 107, 110, 115, 126, 127, 136, 137, 139, 157, 171, 175, 176, 177, 193, 196, 210, 212, 213, 215, 216, 221, 222, 223, 260, 272, 275, 286, 287, 310, 314, 319, 320, 324, 325, 329, 331, 332, 334, 336, 338, 339, 340, 349, 384], "begin": [75, 308], "beginn": 324, "behav": [308, 326, 328], "behavior": [12, 19, 98, 107, 315, 316, 326, 346, 359, 370, 380, 388, 396], "behaviour": [272, 315, 331, 365, 392], "behind": 2, "bei": [316, 319], "being": [2, 31, 107, 273, 312], "belarra": 94, "bell": [59, 62, 73, 107, 228, 249, 268, 272, 307, 331, 339], "belong": [97, 332], "below": [30, 76, 98, 107, 153, 190, 225, 272, 275, 287, 305, 308, 310, 312, 313, 315, 316, 319, 323, 326, 329, 331, 332, 337, 339, 394], "benefici": [96, 397], "benefit": 92, "benzen": [4, 48, 246], "bernstein": 94, "bert": 94, "besid": [2, 315, 339], "best": [2, 51, 52, 61, 64, 71, 75, 87, 105, 111, 115, 152, 308, 311, 313, 329, 339], "beta": [110, 320], "beta_loss": 110, "better": [12, 20, 22, 51, 64, 75, 80, 86, 97, 110, 133, 312, 314, 327, 329, 332, 333, 339, 346, 394], "between": [2, 22, 23, 68, 91, 96, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 124, 129, 133, 151, 163, 187, 190, 197, 217, 231, 310, 312, 313, 327, 329, 338, 339, 340, 343], "bevel": 329, "bewar": 329, "beyond": [318, 338, 339], "beyramysoltan": 94, "bfw": 320, "bhat": 94, "bibtex": 0, "bidimension": 113, "big": [45, 326], "bijlsma": [20, 94], "bilinear": 329, "billion": 319, "bin": [5, 85, 88, 89, 329], "binari": [2, 48, 107, 116, 188, 305, 319, 326, 327, 330, 331, 334, 335], "binaryio": [107, 116, 188], "bind": 2, "biomol": 1, "biosystem": 20, "black": [31, 51, 75, 76, 308, 312, 329], "blackman": [102, 139, 269, 339], "blackmanharri": [157, 171, 175, 228, 267, 268, 272, 286], "blake": [36, 39, 326], "blal": [1, 94, 306, 315], "blank": [8, 47, 197, 325, 329], "blc": [64, 80, 91, 313, 332], "bld": 320, "blend": 115, "blob": 47, "block": [30, 76, 92, 308, 325], "blue": [51, 310, 312, 325, 329], "bm": [320, 329], "bmh": [329, 330], "bodi": 339, "boelen": [64, 94, 97, 133], "bogaert": 94, "bokeh": 3, "bokhoven": 94, "bold": [325, 329], "bolder": 329, "bole": 94, "bookman": 329, "bool": [8, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 121, 124, 125, 126, 127, 128, 135, 137, 139, 146, 155, 157, 162, 163, 166, 167, 171, 172, 175, 176, 177, 180, 184, 187, 190, 192, 193, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 260, 271, 272, 273, 275, 276, 277, 279, 281, 282, 284, 286, 287, 300, 301, 302, 303, 338], "boolean": [97, 101, 107, 121, 125, 128, 337], "border": [312, 329], "both": [2, 5, 16, 19, 27, 97, 99, 106, 107, 115, 162, 171, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 304, 310, 311, 313, 314, 319, 326, 329, 330, 332, 333, 334, 339, 389], "bottom": [80, 83, 197, 329], "bound": 388, "boundari": [115, 329, 339], "boussard": 94, "box": [231, 312, 329, 396], "boxstyl": 312, "bp": [2, 332], "br": [316, 319, 325], "brace": 8, "bracket": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 326], "braga": 94, "braket": 240, "branch": [5, 106], "braun": [134, 308], "breach": 2, "break": [6, 332, 365], "breakag": 6, "breakpoint": [97, 152, 332], "brew": [5, 85, 89], "brian": 316, "brief": [312, 329], "bright": [329, 330], "brigitt": 48, "broad": 2, "broadcast": [98, 107, 125, 126, 127, 128, 140, 193, 195, 196, 227, 275, 276, 287, 330, 337], "broaden": [60, 157, 175, 333, 335], "broken": 353, "brought": 2, "brown": 94, "brows": 91, "browser": [87, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "bruker": [41, 45, 49, 57, 60, 61, 75, 76, 77, 107, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 272, 307, 316, 317, 321, 326, 328, 331, 334, 340, 346], "brukeropu": [1, 320, 396], "brukeropusread": 396, "bsd": [1, 92], "bsd3": 178, "bsln": 48, "bug": [1, 5, 12, 84, 92, 315, 319, 338, 366], "build": [5, 6, 11, 18, 320, 353, 360, 379, 382], "builder": 9, "built": [8, 12, 75, 77, 91], "builtin": 339, "bunch": 96, "bureau": 320, "busi": 2, "buten": [94, 306], "butt": 329, "buttdash_joinstyl": 329, "button": 13, "byte": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "bytesio": [107, 116, 188], "b\u00f6r": 94, "c": [1, 2, 16, 19, 20, 21, 24, 27, 31, 43, 51, 61, 68, 75, 80, 85, 86, 88, 90, 91, 94, 95, 96, 98, 99, 100, 101, 103, 106, 107, 110, 113, 115, 118, 119, 141, 155, 166, 167, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 254, 274, 304, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 346, 384, 385], "c0": [20, 36, 39, 98, 310, 326], "c1": [15, 36, 39, 98, 326], "c2": [15, 36, 39], "c3": 15, "c3cp51146d": 94, "c_": [20, 106], "c_0": 310, "c_10": 225, "c_2": [225, 308], "c_3": [225, 308], "c_4": [225, 308], "c_5": 225, "c_6": 225, "c_7": 225, "c_8": 225, "c_9": 225, "c_constrain": [20, 106], "c_constrained_list": 106, "c_curvefit": [32, 307], "c_exp": 96, "c_i": [225, 308], "c_import": [49, 307], "c_l": 106, "c_ls_list": 106, "c_name": 96, "c_pressur": [18, 37], "c_t": 106, "c_time": [18, 37], "c_wavelength": 37, "c_wavenumb": 37, "ca": [104, 156, 332], "cadmium": 340, "caen": 1, "calc": [312, 344, 398], "calcul": [16, 31, 38, 80, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 122, 123, 136, 137, 139, 147, 151, 157, 162, 163, 171, 173, 175, 176, 187, 194, 225, 226, 272, 275, 276, 286, 287, 308, 312, 326, 335, 336, 337, 338], "calibr": [27, 314], "call": [2, 6, 22, 90, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 164, 169, 188, 230, 240, 279, 304, 311, 314, 316, 319, 320, 324, 325, 328, 332, 336, 337, 339, 378, 384, 396, 397], "callabl": [96, 98, 101, 104, 106, 107, 164, 207], "callback": 112, "callback_everi": 112, "callegaro": 94, "can": [1, 2, 6, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 86, 87, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 128, 136, 140, 141, 142, 143, 151, 152, 154, 156, 159, 163, 169, 187, 188, 193, 196, 205, 219, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 259, 262, 269, 274, 275, 279, 287, 290, 299, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 351, 352, 356, 372, 377, 378, 392, 394, 396], "cancel": 2, "cannot": [22, 38, 45, 92, 98, 107, 110, 116, 117, 279, 310, 312, 315, 319, 320, 325, 326, 328, 329, 330, 337, 340, 341], "cantera": [6, 353, 360, 394], "cap": 329, "capabl": [91, 93, 107, 305, 326, 327, 329, 332], "capillari": 48, "capit": 2, "caption": 325, "captur": [94, 304, 306], "care": [6, 68, 98, 107, 129, 333], "carefulli": [75, 325], "cargil": 27, "carlson": 94, "carmen": 94, "carolin": 94, "carri": [2, 118, 304, 310, 326], "carriag": 325, "carrier": 94, "carroucel": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 304], "carroucell_samp": 231, "carrousel": 316, "casali": 94, "case": [2, 4, 6, 22, 36, 39, 42, 75, 76, 91, 92, 96, 97, 98, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 125, 128, 129, 135, 136, 171, 172, 187, 190, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 304, 308, 312, 313, 315, 316, 319, 320, 323, 324, 326, 332, 333, 334, 336, 339, 341, 389], "cast": [6, 98, 105, 107, 111, 337], "castillejo": 94, "catal": 94, "catalys": 1, "catalysi": [94, 306], "catalyst": [18, 94, 306, 312], "catalyt": [94, 306], "catch": [135, 312, 315], "categor": 315, "categori": [84, 309], "catherin": 94, "cauchi": [191, 308], "caught": 315, "caus": [2, 6, 107, 275, 287, 315, 329], "caution": [107, 158], "cc79a7": 329, "ccount": [310, 311, 329], "ccurr": 106, "cd": [5, 89, 90, 95, 110, 323], "cdot": [101, 106, 304, 385], "ce": 2, "cea": 2, "cecil": [0, 2, 92, 315], "cedex": 2, "ceil": [98, 107, 132, 255], "cell": [18, 37, 87, 94, 304, 306, 315, 316, 323, 325, 332, 397], "cell_nam": 339, "cem": 94, "center": [18, 22, 23, 48, 105, 111, 312, 329, 354], "centerednorm": 329, "centimet": 312, "centr": [2, 94], "central": [329, 339], "centuri": 329, "certain": 329, "certainli": [316, 324], "cexp": 96, "cfbruker": [272, 331], "chain": [107, 207, 310], "chanc": 339, "chanceri": 329, "chang": [11, 15, 18, 19, 20, 37, 38, 43, 55, 64, 75, 91, 92, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 184, 187, 234, 259, 269, 279, 290, 310, 312, 315, 316, 318, 319, 322, 326, 328, 332, 335, 337, 339, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 387, 389, 390, 391, 393, 395, 398], "changelog": [4, 6, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "channel": [18, 84, 88, 241, 242, 320, 361], "char": [98, 99, 308, 316], "charact": [316, 325, 328], "character_cod": 329, "characterist": [2, 80, 324], "charg": 2, "charlott": 94, "charter": 329, "check": [6, 17, 21, 52, 64, 84, 85, 86, 88, 90, 91, 92, 98, 107, 109, 112, 116, 117, 121, 140, 183, 242, 259, 271, 304, 312, 320, 324, 326, 328, 332, 361, 362, 370, 373, 382], "check_upd": 365, "checkout": 5, "chellaboina": [94, 96], "chem": [94, 339], "chemic": [86, 92, 94, 96, 103, 104, 306], "chemistri": [0, 93, 94, 315], "chemolab": [94, 310, 311], "chemometr": [16, 24, 94, 324], "chemrxiv": [94, 306], "chen": 94, "chesnai": 2, "chevali": 94, "chimica": [94, 332], "chn": 320, "choic": [3, 8, 64, 96, 311], "choos": [2, 71, 84, 87, 312, 323, 324, 332, 339], "chosen": [68, 85, 104, 107, 150, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 304, 333], "christian": [0, 1, 94], "chromatograph": 94, "chromatographi": 94, "chrome": 87, "ci": 353, "circular": [146, 325], "circumcircl": 103, "circumst": 2, "citat": 92, "cite": [103, 333, 353], "ckin": 20, "cl": [98, 107, 116, 117, 164, 187, 188, 190], "claim": [2, 324], "clariti": [310, 311, 332], "class": [8, 9, 35, 57, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 128, 133, 134, 138, 152, 170, 173, 188, 191, 225, 230, 240, 265, 270, 288, 305, 309, 310, 316, 319, 325, 326, 332, 388, 390, 392, 397], "classic": [22, 52, 98, 107, 189, 310, 316, 329, 330, 332, 338], "classif": 22, "classmethod": [107, 116, 117, 169, 230, 240], "clayton": 94, "clean": [9, 97, 206, 346, 381], "clear": [9, 20, 27, 30, 31, 48, 60, 61, 64, 68, 71, 75, 76, 80, 107, 115, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 310, 312, 314, 329, 331, 332, 333, 334, 336, 339, 341], "clearli": [6, 310, 311, 332, 333, 339], "clet": 1, "click": [6, 13, 84, 91, 92, 323], "client": 5, "climat": 355, "clip": 107, "clock": 231, "clone": [5, 6, 13, 87, 89], "close": [8, 30, 96, 98, 107, 187, 304, 312, 313, 332, 336, 339, 390], "close_figur": 107, "closer": [163, 332], "closest": [95, 162, 180, 338, 339], "closur": [94, 106, 304], "closureconc": 106, "closuremethod": 106, "closuretarget": 106, "cloud": [87, 361], "cm": [17, 18, 20, 23, 36, 37, 38, 39, 42, 44, 46, 48, 75, 91, 98, 107, 136, 195, 240, 266, 285, 308, 312, 313, 316, 318, 319, 320, 326, 329, 332, 336, 338, 339, 341], "cmap": [20, 27, 51, 115, 310, 314, 329, 332, 377, 383], "cmd": 90, "cnm": 320, "cnr": 2, "co": [18, 37, 42, 91, 94, 171, 176, 177, 306, 312, 318, 319, 338], "co2": 94, "cobalt": [94, 306], "coca": [94, 306], "code": [1, 2, 4, 5, 8, 9, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 84, 87, 92, 305, 320, 323, 325, 326, 335, 339, 355, 379, 381, 397], "code_ast": 339, "code_obj": 339, "codeclim": [353, 358], "coef": [31, 105, 111, 135, 308], "coeffici": [94, 105, 111, 115, 135, 171, 339], "coerc": 337, "coher": 2, "col": 197, "colab": [85, 347, 353, 373, 385, 394], "colaboratori": [85, 362, 373], "cold": [36, 39, 326], "collaps": 396, "collect": [6, 99, 240, 304, 375], "collection_length": 375, "collis": 329, "colomap": 329, "colon": [328, 338], "color": [31, 51, 60, 61, 64, 71, 75, 76, 80, 97, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 308, 310, 312, 329, 331, 332, 339, 346, 383], "color_map": [22, 113], "colorbar": [18, 37, 75, 91, 107, 197, 210, 212, 213, 215, 216, 221, 222, 223, 312, 313, 329, 330, 337, 341], "colorblind": [97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 329, 330], "colorblind10": [329, 330], "colormap": [17, 21, 51, 75, 91, 97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 312, 313, 329, 330, 332, 337, 341, 392], "colorscal": 346, "colorspec": 329, "column": [15, 19, 20, 21, 23, 47, 76, 96, 107, 113, 155, 161, 179, 197, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 304, 310, 311, 329, 338, 341], "columnwis": 310, "com": [5, 27, 42, 47, 85, 87, 89, 94, 310, 314, 316, 325, 332, 339, 386, 396], "combin": [94, 110, 306, 329], "come": [2, 98, 107, 227, 308, 315, 316, 319], "comfort": 323, "comma": [316, 328, 329, 338], "command": [15, 36, 39, 84, 85, 87, 90, 92, 95, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 315, 321, 323, 329, 332, 340, 394], "commenc": 2, "comment": [6, 12, 17, 30, 75, 76, 77, 80, 107, 308, 326], "commerci": [2, 92], "commissariat": 2, "commit": [2, 5, 11, 343], "common": [6, 30, 76, 91, 107, 171, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 319, 326, 330], "commonli": [119, 288, 308], "commonratio": 76, "commonwidth": 76, "commun": [2, 12, 84, 91, 92, 94], "como": [312, 319], "compact": 117, "compani": 92, "compar": [6, 15, 19, 20, 27, 98, 107, 151, 183, 310, 314, 318, 329, 332, 334, 336, 339, 354], "comparison": [6, 64, 67, 311, 330, 333, 335, 346, 349, 352], "comparti": 320, "compartmentdetector": 320, "compartmentextend": 320, "compat": [2, 42, 92, 98, 99, 104, 107, 117, 121, 124, 141, 183, 206, 208, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 274, 305, 310, 316, 319, 320, 326, 327, 329, 330, 341, 346, 353, 354, 361, 362, 369, 373, 374, 377, 380, 385, 390, 392, 394, 396], "compens": 2, "compil": 2, "complet": [4, 8, 84, 91, 92, 98, 106, 107, 112, 115, 164, 319, 326, 332, 379], "complex": [6, 61, 75, 76, 77, 98, 107, 122, 123, 126, 132, 162, 163, 193, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 255, 260, 275, 287, 308, 326, 327, 328, 331, 334, 335, 391], "complex128": [6, 61, 75, 77, 98, 107, 183, 328, 331, 334, 337], "complex64": 334, "complexwarn": 6, "compli": 2, "complianc": 2, "complic": 2, "compon": [2, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 30, 64, 76, 85, 92, 96, 97, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 150, 178, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 304, 308, 309, 310, 314, 316, 322, 332], "components_": 113, "compos": [75, 117, 319], "composit": [107, 114, 147, 266, 276, 285, 304, 329], "compound": [16, 94, 98, 107, 117, 118, 156, 186, 282, 306], "comprehens": [93, 94, 322], "compress": [42, 97, 107, 116, 386], "compris": [2, 312], "compui": [100, 101, 106, 110, 112, 113, 115, 118, 119], "comput": [2, 18, 19, 20, 22, 85, 87, 94, 96, 97, 100, 101, 102, 106, 107, 110, 112, 113, 115, 117, 118, 119, 133, 136, 138, 147, 152, 155, 163, 173, 195, 259, 270, 275, 276, 287, 310, 311, 312, 316, 326, 329, 332, 337, 339], "compute_uv": 119, "concaten": [16, 42, 44, 75, 274, 310, 311, 316, 319, 320, 324, 371, 392], "concent": 304, "concentr": [15, 16, 19, 20, 21, 24, 96, 100, 103, 106, 114, 118, 304, 353], "concept": [312, 338], "concern": [2, 92], "concis": [8, 9, 396], "conda": [84, 88, 89, 347, 353, 372, 375], "condid": 332, "condit": [2, 20, 96, 110, 113, 155, 315, 391, 392], "config": [88, 91, 95, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 380], "configfil": 6, "configur": [2, 4, 86, 91, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 308, 311, 312, 313, 314, 316, 318, 319, 320, 322, 324, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 346, 353, 373, 380, 390], "confirm": [22, 318, 367], "conflict": [2, 99], "conform": 2, "confus": [107, 312, 319], "conj": [107, 143, 337], "conjug": [107, 142, 337], "connect": [2, 6, 87, 365, 386], "connectionstyl": [312, 329], "consecut": [98, 151, 337], "consequenti": 2, "consid": [6, 16, 96, 101, 103, 106, 155, 163, 310, 312, 332, 333, 339], "consider": [2, 92], "consist": [6, 9, 27, 97, 98, 102, 107, 187, 310, 314, 329, 332, 392], "consol": 380, "constant": [20, 75, 80, 94, 96, 97, 98, 102, 105, 107, 110, 111, 115, 152, 172, 208, 209, 259, 261, 269], "constantli": 324, "constantsum": 106, "constitu": 2, "constitut": 2, "constrain": [106, 247, 248], "constraint": [14, 25, 33, 94, 96, 98, 100, 106, 107, 112, 136, 230, 304, 307, 309, 310, 374, 385], "construct": [6, 98, 107, 153, 154, 164, 165, 288, 308], "constructor": [17, 21, 98, 107, 154, 161, 164, 165, 179, 305, 327, 356], "contact": 75, "contain": [2, 6, 8, 19, 20, 27, 35, 41, 42, 45, 50, 54, 55, 57, 59, 63, 66, 70, 73, 74, 91, 92, 96, 97, 98, 99, 101, 104, 107, 110, 113, 114, 116, 119, 120, 132, 136, 147, 151, 152, 163, 195, 206, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 275, 276, 287, 308, 310, 311, 312, 314, 316, 319, 320, 323, 326, 328, 331, 332, 352, 386, 393, 396], "conten": 141, "content": [11, 27, 42, 46, 91, 107, 116, 120, 188, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 310, 311, 314, 316, 323, 327, 338, 386], "content1": 240, "content2": 240, "context": [8, 94, 98, 117, 121, 258, 262, 304, 306, 316, 323], "contextlib": 315, "contigu": 155, "continu": [11, 30, 94, 107, 229, 306, 308, 310], "contour": [36, 39, 46, 48, 107, 197, 210, 211, 212, 213, 215, 216, 221, 312, 329], "contour_alpha": 329, "contour_corner_mask": 329, "contour_negative_linestyl": 329, "contour_start": 329, "contrain": 245, "contrast": 305, "contribut": [1, 2, 11, 12, 89, 93, 103, 107, 136], "contributor": [2, 6, 107, 315], "control": [64, 80, 94, 96, 197, 266, 316, 329], "conveni": [6, 19, 20, 36, 39, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 310, 311, 319, 326], "convenin": 332, "convent": [5, 8, 36, 39, 97, 107, 206, 315, 326, 339], "converg": [19, 20, 21, 101, 106, 115, 118, 310], "convergencewarn": 21, "convers": [38, 95, 96, 98, 107, 279, 318, 326, 335, 336, 388], "convert": [97, 98, 107, 116, 117, 121, 122, 123, 125, 126, 127, 128, 140, 142, 143, 188, 193, 196, 279, 283, 314, 316, 328, 337, 339, 341, 388], "convert_to_html": 328, "convex": [94, 151], "convolut": [102, 269, 288, 308, 335], "coord": [4, 8, 16, 18, 20, 31, 36, 37, 38, 39, 55, 76, 91, 95, 99, 104, 107, 114, 116, 124, 135, 136, 164, 195, 242, 271, 305, 308, 311, 312, 319, 326, 327, 338, 346, 348, 388], "coord0": [36, 39, 99, 326], "coord1": [36, 39, 99, 326], "coord1b": [99, 326], "coord2": [36, 39, 99, 326], "coord_pc": 24, "coordin": [3, 4, 15, 16, 19, 20, 21, 23, 31, 35, 38, 40, 42, 44, 46, 48, 51, 57, 61, 75, 76, 77, 80, 91, 97, 98, 99, 107, 110, 124, 126, 127, 144, 152, 154, 158, 159, 163, 164, 165, 168, 169, 193, 196, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 249, 259, 271, 298, 299, 307, 308, 310, 311, 312, 313, 316, 318, 319, 320, 327, 328, 329, 330, 331, 332, 334, 335, 339, 341, 346, 349, 351, 354, 361, 389, 391, 392], "coordmax": 107, "coordmin": 107, "coordnam": 107, "coordrang": 359, "coordset": [18, 31, 36, 37, 39, 75, 98, 107, 116, 158, 159, 161, 164, 168, 169, 179, 204, 205, 298, 299, 305, 308, 326, 392], "coordset_52444177": [], "coordset_52a819d8": [], "coordset_79cff1a5": 37, "coordset_7a467066": 37, "coordset_a60c6166": 18, "coordset_d15d2493": [], "coordset_d2c0075c": [], "coordset_fcbc848b": 326, "coordset_fd2547c0": 326, "coordset_fe2b5dd8": [], "coordtitl": 107, "coordunit": 107, "coordx": 326, "copi": [2, 6, 11, 18, 37, 60, 75, 80, 98, 99, 107, 116, 124, 142, 143, 153, 158, 159, 168, 169, 178, 204, 205, 260, 298, 299, 310, 325, 327, 331, 337, 386], "copyright": [10, 20, 88, 90, 91, 290, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 346], "cor": 320, "core": [4, 6, 47, 55, 75, 83, 91, 107, 116, 262, 307, 322, 324, 328, 331, 336, 339, 394], "corn": [27, 42, 314, 316, 332, 386], "corner": [94, 353], "coro": 339, "corp": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 374], "corpor": 316, "corr": 80, "correct": [2, 6, 8, 63, 65, 68, 73, 74, 75, 78, 92, 94, 96, 97, 106, 107, 112, 118, 133, 135, 138, 148, 152, 166, 167, 173, 208, 209, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 270, 291, 292, 294, 304, 307, 312, 313, 319, 320, 322, 333, 335, 346, 347, 348, 349, 351, 352, 353, 375, 382, 390, 391], "correctli": [75, 98, 107, 116, 125, 126, 127, 128, 193, 195, 196, 227, 241, 275, 276, 287, 311, 316, 324, 325, 351, 369, 371, 383, 389, 391], "correl": 332, "correspond": [6, 13, 15, 16, 18, 19, 21, 37, 61, 75, 95, 96, 98, 99, 106, 107, 109, 113, 114, 115, 116, 119, 124, 141, 156, 304, 310, 311, 312, 314, 315, 316, 319, 329, 330, 338, 339, 341], "cosin": [61, 272, 331, 337], "cosmic": [66, 67, 69, 73, 107, 151, 230, 307, 335], "cost": 2, "coudrai": 94, "could": [3, 6, 68, 75, 101, 310, 311, 312, 315, 330, 333], "count": [46, 98, 107, 125, 128, 165, 338], "coupard": 94, "courier": 329, "cours": [10, 30, 38, 51, 87, 331, 332], "court": 2, "cousen": 94, "cov": [304, 314], "covari": [304, 314], "cover": [5, 88, 90, 115, 324], "coverag": [18, 353], "cp": [73, 74, 78, 98, 99, 107, 112, 157, 162, 208, 249, 270, 307, 392], "cp_model": 75, "cpg": 320, "cplex": 45, "cpure": [19, 24, 310, 311], "cpy": 320, "crack": [94, 306], "crash": 315, "creat": [5, 7, 10, 12, 18, 22, 23, 27, 30, 36, 39, 42, 44, 46, 48, 55, 61, 75, 76, 77, 83, 84, 87, 88, 89, 91, 98, 99, 101, 102, 106, 107, 117, 129, 141, 164, 165, 172, 187, 190, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 237, 250, 251, 259, 269, 274, 308, 310, 311, 313, 314, 316, 318, 319, 320, 322, 324, 325, 327, 328, 331, 332, 334, 337, 338, 339, 341, 370, 392], "creation": [2, 35, 40, 54, 56, 57, 98, 107, 116, 120, 210, 221, 258, 307, 310, 319, 326, 327, 346, 359], "creator": [107, 319], "credit": 2, "criteria": [115, 163, 329], "criterion": [106, 118, 310, 312], "critic": [92, 315], "crop": 80, "cross": [83, 92, 93, 304], "cross_decomposit": 115, "crossdecomposit": 27, "crr": 320, "crucial": [9, 68, 333], "csel_matrix": [19, 24, 310, 311], "css": 396, "cstr": 114, "csv": [42, 91, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 316], "csv_delimit": [230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291], "cti": 114, "cti_fil": 114, "ctx_kwarg": [117, 121], "cube": [101, 337], "cubic": [64, 80, 94, 97, 152, 332], "cuccioloni": 94, "cultrera": [94, 103], "cultrera_callegaro": 103, "cumsum": 107, "cumul": [22, 23, 107, 113, 119, 147], "cumulative_explained_vari": [22, 119, 311], "curl": 85, "curli": 8, "current": [2, 6, 12, 18, 20, 37, 42, 83, 92, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 118, 119, 141, 174, 184, 185, 186, 188, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 262, 274, 279, 291, 292, 294, 315, 316, 319, 320, 323, 329], "cursiv": 329, "curv": [16, 18, 19, 64, 92, 93, 94, 103, 106, 112, 304, 306, 310, 311, 331, 353, 392], "curvatur": [18, 103], "curve1": [60, 61], "curve2": [60, 61], "curve3": 61, "curve4": 61, "curve5": 61, "curvefit": [30, 76, 77, 83], "custom": [2, 13, 51, 104, 110, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 329, 330, 356, 373], "customiz": 397, "cut": [15, 16, 100, 308], "cutoff": [15, 16, 100], "cval": [102, 259, 269], "cwd": 316, "cycl": [6, 329], "cycler": 329, "cyclohexan": [94, 306], "c\u00e9dric": 94, "d": [2, 6, 8, 19, 20, 24, 27, 31, 36, 38, 39, 51, 77, 80, 91, 94, 96, 98, 107, 116, 134, 136, 141, 153, 155, 161, 164, 165, 170, 179, 191, 225, 265, 288, 292, 306, 308, 312, 313, 316, 319, 325, 326, 329, 341, 377, 396], "d0": [31, 308], "d1d": [326, 329], "d2": 308, "d2cy00311b": [94, 306], "d2d": 337, "d317": [44, 320], "d3cp01585h": [94, 306], "d3d": 326, "d3d_copi": 326, "d3dduplic": 326, "d3mr00013c": [94, 306], "d4nj03440f": [94, 306], "d55e00": 329, "d_0": 308, "d_plot": [53, 307], "da": 337, "daatset": 148, "dac": 337, "dad": [19, 310, 311], "dael": [94, 306], "dai": [2, 373], "damag": 2, "dan": [94, 306], "danger": 325, "daniel": 94, "daq": [320, 337], "dario": 94, "dark": [329, 330], "dark2": [312, 313, 341], "dark_background": [329, 330], "darkgrid": [329, 330], "darren": 94, "darwin": 6, "dash": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 323, 329, 383], "dashed_pattern": 329, "dask": 117, "data": [0, 1, 2, 3, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 27, 31, 38, 41, 42, 44, 46, 47, 48, 49, 51, 55, 57, 60, 61, 64, 67, 68, 75, 76, 80, 85, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 118, 119, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 139, 141, 144, 145, 147, 148, 150, 151, 152, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 193, 195, 196, 197, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 259, 260, 269, 270, 272, 274, 275, 276, 279, 280, 286, 287, 290, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 320, 321, 322, 323, 324, 326, 327, 328, 333, 334, 335, 336, 338, 339, 346, 347, 356, 362, 372, 388, 391, 392], "data_keyword": [107, 207], "data_onli": [61, 75, 76, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 312, 331], "dataarrai": [107, 283], "datadir": [4, 15, 19, 20, 42, 43, 45, 46, 52, 60, 61, 64, 75, 76, 77, 80, 87, 95, 230, 240, 241, 291, 310, 311, 319, 320, 326, 328, 334, 340, 372, 386], "datain": 102, "datapoint": 98, "datas": 139, "dataset": [3, 4, 6, 8, 14, 15, 20, 23, 24, 25, 27, 29, 31, 32, 33, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 60, 61, 64, 67, 68, 75, 77, 80, 83, 87, 91, 93, 94, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 119, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 162, 163, 164, 166, 167, 169, 171, 173, 175, 176, 177, 178, 180, 181, 182, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 280, 285, 286, 287, 290, 291, 292, 294, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 313, 316, 318, 319, 320, 322, 324, 327, 328, 331, 332, 333, 334, 335, 339, 340, 341, 346, 350, 352, 353, 354, 359, 361, 363, 367, 370, 384, 385, 389, 390, 391, 392, 396], "dataset1d": [60, 61], "dataset2": 337, "dataset_1": 116, "dataset_list": 42, "dataset_pca": 22, "datasets_nam": 116, "datastet": 304, "datatyp": 337, "date": [2, 6, 42, 48, 91, 107, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 313, 316, 317, 318, 327, 338, 341, 370, 377], "date_autoformatter_dai": 329, "date_autoformatter_hour": 329, "date_autoformatter_microsecond": 329, "date_autoformatter_minut": 329, "date_autoformatter_month": 329, "date_autoformatter_second": 329, "date_autoformatter_year": 329, "datetim": [98, 107, 305, 326, 327, 328], "dattaset": 27, "daturi": 94, "david": 94, "dc": [336, 340], "dc_corrected_fid": 340, "dc_corrected_fid2": 340, "dcolor": 60, "dd_6": [316, 319], "ddof": [107, 275, 287], "ddr": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "de": [1, 2, 18, 37, 42, 94, 304, 306, 316, 318, 319, 338], "deal": [97, 304, 319], "debian": [85, 89], "debug": [97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 149, 259, 261, 269, 290, 315, 324], "debug_": 315, "decai": [208, 209, 334], "decemb": 94, "decid": 2, "decim": [96, 98, 107, 132, 255, 325, 329, 338, 388], "declar": 112, "decompos": 304, "decomposit": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 83, 96, 97, 100, 101, 103, 106, 110, 113, 118, 119, 304, 310, 311, 314, 332, 386], "decompositionanalysi": 310, "deconvolut": 75, "decor": 6, "decreas": [106, 336], "dedic": [85, 92, 316, 334], "deem": 2, "deep": [98, 107, 329, 330], "deepcopi": [98, 107], "deeper": 91, "def": [4, 6, 8, 75, 76, 77, 80, 97, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 137, 139, 157, 171, 175, 272, 286, 308, 326, 328, 339], "default": [8, 18, 36, 37, 39, 42, 45, 48, 52, 60, 67, 71, 75, 76, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 139, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 175, 176, 177, 179, 180, 184, 187, 188, 190, 192, 193, 195, 196, 197, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 264, 266, 269, 270, 271, 272, 273, 275, 276, 277, 279, 284, 285, 286, 287, 290, 291, 292, 298, 308, 310, 311, 315, 319, 320, 322, 323, 326, 330, 331, 332, 333, 336, 338, 339, 349, 351, 353, 368, 372, 385, 390, 392, 396], "default_dim_nam": 99, "default_format": [117, 121], "default_suffix": [107, 109, 116], "defect": 2, "defens": 2, "defin": [2, 6, 17, 20, 21, 23, 30, 31, 38, 42, 46, 64, 75, 76, 77, 80, 91, 96, 97, 98, 99, 104, 105, 106, 107, 111, 112, 113, 115, 116, 124, 137, 141, 152, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 271, 274, 278, 290, 308, 310, 312, 313, 316, 326, 329, 332, 339, 389, 390, 392], "definit": [2, 30, 76, 107, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 266, 272, 285, 316, 319, 337, 392], "deflat": 101, "deg": 77, "degener": 101, "degrad": [94, 306], "degre": [64, 80, 97, 102, 107, 152, 208, 209, 225, 259, 269, 275, 287, 308, 332, 337], "dehydr": [21, 91], "dehydrogen": [94, 306], "dejavu": 329, "dejavusan": 329, "dejavuserif": 329, "del": 320, "delai": [2, 320], "delet": [107, 320, 380], "delete_coordset": 107, "delic": 311, "delimit": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292], "delimiteur": 232, "deliv": 315, "delphin": 94, "delta": [68, 75, 76, 102, 107, 151, 259, 275, 287, 333, 334], "delta_": [18, 304], "delta_clock": 231, "demand": [98, 107, 165, 397], "demonstr": [51, 75, 80, 84, 313, 317, 329, 330, 332, 333, 334, 337, 339], "denni": 94, "denois": [69, 83, 107, 230, 261, 307, 322, 335, 390], "denot": [99, 308], "dense_output": 96, "dep": 89, "depart": 320, "depend": [5, 11, 85, 88, 97, 98, 101, 103, 107, 110, 112, 113, 118, 119, 142, 143, 152, 153, 163, 187, 234, 260, 264, 275, 287, 304, 308, 314, 316, 319, 329, 330, 333, 338, 346, 368, 385, 386, 392], "deprec": [6, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 266, 336, 346, 374, 377, 383], "deprecationwarn": 336, "depth": [2, 47, 87, 329], "der": 94, "deriv": [2, 71, 91, 92, 94, 96, 101, 102, 259, 304, 306, 310, 312, 339], "desc": 107, "descend": [107, 271, 304, 338], "descent": 110, "describ": [2, 4, 99, 107, 116, 151, 304, 311, 319, 324, 325, 326, 329, 332, 339], "descript": [4, 5, 6, 8, 36, 39, 42, 44, 46, 48, 75, 77, 84, 91, 96, 105, 107, 111, 112, 121, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 310, 311, 313, 315, 316, 317, 318, 319, 320, 326, 328, 338, 341], "descriptor": [94, 306], "deseri": [107, 116], "design": [2, 91, 309, 316, 324, 329], "desir": [6, 12, 15, 68, 96, 98, 107, 110, 158, 168, 195, 204, 229, 287, 298, 311, 312, 319, 320, 329, 333], "desktop": 5, "despik": [67, 68, 94, 335, 385, 390], "despit": 324, "destin": [98, 107, 117, 184, 279], "destroi": 37, "detail": [4, 8, 9, 18, 20, 42, 64, 68, 84, 85, 86, 91, 92, 102, 107, 112, 113, 115, 138, 153, 173, 259, 269, 304, 312, 316, 319, 320, 321, 324, 332, 341, 343, 390], "detect": [2, 68, 91, 92, 96, 97, 133, 138, 151, 152, 163, 173, 270, 312, 316, 329, 332, 333], "determin": [2, 15, 22, 94, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 124, 164, 231, 270, 304, 311, 312, 313, 325, 326, 332, 336, 339], "detrend": [8, 51, 67, 97, 133, 138, 173, 270, 314, 335], "dev": [5, 86, 88, 90, 394], "develop": [1, 2, 4, 9, 10, 86, 87, 88, 89, 90, 92, 93, 100, 103, 305, 315, 318, 319, 320, 323, 324, 345, 394, 396], "developp": 395, "devguid": 93, "deviat": [68, 106, 107, 113, 118, 147, 151, 195, 275, 276, 287, 304, 310, 320, 324], "devot": 87, "df": 326, "dfit": 308, "diag": [106, 107, 119, 154, 161, 179, 326], "diagnos": 315, "diagon": [107, 153, 161, 179, 304], "dialog": [230, 231, 240, 241, 291, 292, 294, 329, 356, 367, 369, 396], "dic": [75, 107, 116], "dict": [6, 8, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 148, 163, 258], "dict_param_to_optim": 96, "dictionari": [96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 312, 320, 326, 328, 329], "did": [2, 328, 332], "dielectr": [94, 306], "diff": [6, 71, 107, 147, 313, 319, 338, 339], "differ": [15, 20, 27, 42, 48, 51, 67, 68, 71, 80, 88, 90, 96, 97, 98, 102, 107, 109, 110, 114, 116, 117, 124, 135, 147, 151, 152, 163, 184, 185, 186, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 290, 312, 313, 314, 318, 319, 320, 323, 326, 327, 329, 330, 332, 334, 336, 337, 339, 340, 349, 361, 369, 390], "differenti": [96, 102, 259, 353], "difficult": [92, 310, 311], "diffract": [94, 306], "diffus": [94, 104, 306, 353], "digit": [1, 96, 98, 318, 329, 388], "dilig": 2, "dill": [101, 106], "dim": [6, 15, 17, 20, 47, 71, 75, 77, 98, 99, 102, 107, 124, 125, 126, 127, 128, 130, 131, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 150, 154, 157, 162, 164, 166, 167, 171, 175, 176, 177, 180, 192, 193, 195, 196, 208, 209, 227, 254, 256, 259, 266, 269, 271, 272, 273, 275, 276, 284, 285, 286, 287, 290, 313, 314, 319, 326, 330, 339, 359, 371], "dim1": [107, 277], "dim2": [107, 277], "dimens": [6, 16, 18, 22, 23, 37, 42, 44, 46, 48, 61, 75, 76, 77, 91, 97, 98, 99, 101, 102, 103, 107, 113, 117, 124, 125, 126, 127, 128, 133, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 150, 152, 154, 157, 162, 164, 166, 167, 171, 173, 175, 176, 177, 180, 186, 192, 193, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 260, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 282, 284, 285, 286, 287, 290, 292, 310, 311, 312, 313, 314, 316, 318, 319, 320, 327, 328, 331, 332, 334, 335, 337, 338, 341, 346, 351, 355, 391], "dimension": [22, 23, 24, 91, 94, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 117, 118, 119, 121, 165, 210, 211, 212, 213, 215, 216, 221, 260, 273, 304, 305, 311, 322, 326, 332, 335, 337], "dimensionalityerror": [38, 98, 107, 117, 121, 279, 337, 341], "dimensionless": [36, 39, 98, 107, 117, 121, 137, 139, 171, 176, 177, 286, 331, 335, 341], "dir": 363, "direct": [2, 6, 8, 87, 107, 180, 262, 271, 310, 329, 332], "directli": [2, 6, 31, 98, 101, 106, 107, 164, 172, 190, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 304, 308, 310, 311, 319, 324, 325, 326, 329, 332, 339, 397], "directori": [2, 4, 6, 9, 19, 42, 44, 45, 46, 47, 75, 80, 91, 95, 107, 109, 116, 188, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 386, 396], "disabl": 329, "disagr": 2, "disappear": 304, "disast": 2, "discard": [6, 80, 98], "discardbg": 231, "discharg": [94, 306], "disclaim": 2, "disclos": 92, "disconnect": [98, 99, 107], "discourag": [305, 324], "discov": 12, "discret": [107, 147], "discrimin": [94, 306], "discuss": [2, 10, 83, 91, 324, 366], "disk": 55, "dispatch": 339, "dispatch_queu": 339, "dispatch_shel": 339, "displai": [2, 18, 22, 23, 24, 36, 37, 39, 51, 91, 97, 98, 99, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 263, 310, 311, 315, 316, 319, 320, 323, 324, 325, 326, 328, 329, 331, 332, 336, 338, 339, 341, 356, 363, 364, 370, 379, 386, 392, 396], "disput": [2, 92], "disregard": [105, 111, 115], "distanc": [31, 76, 98, 99, 107, 110, 129, 163, 308, 312, 326, 329], "distance_fit": 31, "distance_fitted2": 31, "distance_fitted3": 31, "distinct": 234, "distinguish": 22, "distort": 339, "distribut": [1, 2, 85, 98, 101, 103, 107, 190, 191, 229, 275, 287, 308], "disturb": 2, "div": [316, 319, 325], "dive": 91, "diverg": [96, 110, 310], "divid": [107, 113, 195, 324, 336], "divis": 337, "divisor": [107, 275, 287, 320], "dk": [316, 319], "dlabel": [98, 107], "dly": 320, "dnf": 85, "do": [2, 6, 10, 12, 13, 15, 20, 22, 23, 37, 38, 52, 55, 64, 80, 87, 92, 95, 107, 113, 135, 159, 231, 304, 310, 311, 312, 313, 319, 320, 322, 323, 326, 329, 341, 367], "do_execut": 339, "doc": [5, 6, 9, 84, 112, 308, 316, 318, 328, 353, 356, 366, 370, 379, 390, 394], "docker": 360, "docstr": [4, 9], "doctest": 8, "doctestplu": 6, "document": [1, 2, 5, 7, 11, 31, 42, 68, 86, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 134, 153, 170, 191, 225, 259, 265, 288, 312, 320, 323, 324, 327, 329, 353, 354, 355, 359, 360, 374, 378, 379, 382, 386, 394, 396], "doe": [2, 19, 23, 24, 92, 98, 106, 107, 116, 125, 128, 129, 137, 158, 159, 310, 311, 315, 319, 324, 325, 332, 337, 397], "doesn": [326, 337], "doi": [0, 1, 94, 306], "dollar": 325, "domain": [2, 60, 61, 137, 139, 148, 157, 162, 171, 176, 177, 180, 286, 322, 331, 335], "domenico": 94, "domin": 96, "dominguez": 94, "don": [5, 9, 64, 75, 76, 83, 92, 308, 312, 323, 324, 325, 329], "done": [6, 18, 37, 98, 107, 135, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 279, 281, 282, 311, 316, 326, 329, 332, 333, 349, 359, 384, 388, 389], "donn": [94, 306], "dop853": 96, "dorresteijn": 94, "dot": [16, 17, 110, 117, 197, 311, 328, 329], "dotted_pattern": 329, "doubl": [8, 110, 302, 316], "down": 346, "download": [2, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 86, 88, 89, 90, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 310, 319, 340, 368, 372, 386], "download_nist_ir": 368, "download_onli": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "downlod": 20, "downstream": 113, "dpi": [107, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 330, 332], "dpm": 320, "dq": 103, "dr": 94, "draft": 2, "drag": [92, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 325], "draw": [197, 217, 329], "drawn": [2, 101, 107, 115, 229], "drift": [51, 152, 332], "driven": [4, 11], "drop": [92, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 325, 394], "dropdown": 323, "drug": 48, "drug_sample_peak": 48, "dry": [30, 94, 112, 306], "ds1": [116, 329], "ds2": [116, 329], "ds3": 116, "ds_correct": 8, "ds_list": 27, "ds_list_nam": 27, "dsc": 16, "dsint": 77, "dso": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "dss": 16, "dtc": 320, "dtype": [6, 16, 23, 98, 105, 107, 111, 117, 122, 123, 129, 147, 154, 155, 158, 159, 161, 164, 165, 168, 169, 172, 179, 187, 190, 195, 204, 205, 229, 275, 276, 287, 298, 299, 326, 334, 337, 346], "du": [316, 319], "due": [2, 16, 64, 135, 312, 320, 330, 340, 341, 388], "duli": 2, "dump": [107, 116, 375], "duplic": [2, 84, 326, 355], "dur": 320, "duran": [320, 396], "durat": 2, "dure": [2, 6, 9, 17, 21, 97, 98, 105, 107, 111, 114, 279, 305, 308, 310, 315, 326, 327, 329, 339, 346, 388], "dusan": 94, "dx": [91, 94, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 294, 316, 317, 321, 337], "dynam": [75, 94, 97, 115, 306], "dz": 326, "e": [2, 5, 6, 18, 19, 20, 37, 38, 51, 67, 84, 89, 92, 94, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 121, 134, 141, 157, 162, 168, 175, 180, 186, 197, 204, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 275, 282, 287, 298, 304, 305, 306, 308, 310, 311, 312, 315, 316, 319, 320, 323, 325, 326, 327, 328, 329, 330, 332, 333, 336, 337, 338, 339, 341, 383, 392, 394, 396], "e2975": 94, "e501": 6, "e_i": [304, 314], "e_project": [55, 56, 307], "e_x": [304, 314], "ea": 96, "ea_1": 96, "ea_n": 96, "each": [2, 6, 8, 18, 23, 27, 37, 42, 75, 80, 83, 87, 96, 97, 98, 99, 101, 103, 105, 106, 107, 111, 112, 113, 116, 122, 123, 136, 151, 164, 165, 172, 197, 231, 304, 305, 308, 310, 311, 312, 313, 314, 316, 319, 325, 326, 327, 332, 333, 337, 338, 339, 343, 385], "earthquak": 2, "eas": 323, "easi": [92, 319, 323], "easier": [67, 324, 333, 373], "easiest": [6, 329], "easili": [2, 6, 24, 55, 91, 92, 308, 310, 312, 316, 324, 326, 328, 337, 338], "echantillon": 320, "econom": 2, "edg": [102, 107, 115, 140, 197, 259, 269, 329], "edgecolor": [115, 197, 329], "edit": [6, 92, 95, 394], "editor": [6, 94], "eelco": 94, "efa": [14, 20, 25, 33, 93, 98, 101, 103, 106, 107, 110, 113, 118, 119, 141, 155, 240, 304, 307, 311, 324, 353, 381, 386], "efa1": 15, "efa2": 15, "effect": [2, 67, 94, 162, 230, 240, 241, 272, 306, 309, 310, 326, 329, 331, 333, 339], "effici": [94, 101, 113, 306], "effort": 2, "eibar": 94, "eigenvalu": [100, 113], "eigenvector": [27, 42, 238, 239, 314, 316, 332, 386], "eigh": 101, "eignenvector": 332, "eiler": [64, 70, 72, 73, 94, 97, 102, 107, 133, 230, 259, 269, 290, 307, 335], "either": [2, 6, 18, 19, 42, 80, 91, 92, 96, 97, 98, 101, 107, 115, 135, 136, 240, 260, 304, 310, 311, 316, 326, 329], "elaps": [99, 319, 326], "elect": 2, "electr": 2, "electrolyt": [94, 306], "element": [2, 98, 107, 110, 117, 122, 123, 125, 126, 127, 128, 140, 147, 161, 179, 190, 193, 195, 196, 275, 276, 278, 287, 304, 319, 325, 327, 329, 336, 337, 338], "elementari": 96, "elementwis": 110, "elimin": [67, 333], "elizabeth": 94, "elnaz": 94, "els": [6, 42, 97, 98, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 188, 230, 240, 241, 312, 328, 329, 337], "elsevi": 94, "elsewher": [107, 161], "elut": [17, 24, 310, 311], "el\u017cbieta": 94, "em": [60, 75, 77, 175, 228, 267, 268, 272, 331, 334], "embrac": 6, "emerg": 2, "emi": [241, 320], "emiss": [241, 320], "emit": [329, 339], "emmerl": 94, "emphas": [97, 325], "emploi": 151, "empti": [98, 101, 107, 117, 159, 168, 169, 204, 205, 298, 299, 312, 324, 326, 328, 329], "empty_lik": [107, 158, 168, 169, 204, 205, 298, 299], "emptylik": [107, 159], "en": [2, 6, 312, 329], "enabl": [2, 30, 76, 113, 290, 308, 324, 373], "enclos": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252], "encod": [236, 318, 320], "encount": [2, 86, 88, 90, 332, 336, 337], "encourag": [2, 5, 6], "end": [8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 96, 97, 98, 102, 107, 129, 137, 148, 187, 190, 259, 269, 312, 319, 329, 332, 338, 339], "endeavor": 2, "endpoint": [98, 107, 129, 172, 187, 190], "energi": [2, 38, 304, 320, 326], "enforc": [2, 106, 396], "engin": 319, "english": 2, "enh": 5, "enhanc": [5, 6, 12, 319], "enough": [311, 338], "ensicaen": 324, "ensur": [2, 5, 6, 101, 107, 113, 140, 336, 390], "enter": [323, 325, 332], "entir": [2, 6, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "entireti": 2, "entiti": 2, "entitl": 2, "entri": [0, 6, 9, 107, 116, 158, 273, 325, 329, 339, 370], "entropi": 101, "enum": [124, 272], "enumer": [27, 75, 117, 339], "env": [88, 89, 346], "environ": [9, 84, 87, 89, 91, 94, 95, 306, 323], "environment": 94, "eq": 339, "equal": [23, 97, 98, 106, 107, 125, 136, 161, 162, 172, 187, 190, 197, 217, 225, 272, 304, 308, 310, 311, 326, 329, 331, 337], "equat": [29, 30, 32, 33, 96, 98, 101, 103, 104, 105, 106, 107, 304, 307, 309, 310, 311, 314], "equip": [2, 324], "equiv": [20, 304], "equival": [17, 22, 61, 71, 87, 89, 97, 102, 106, 107, 137, 139, 146, 150, 155, 157, 161, 162, 166, 167, 171, 175, 176, 177, 179, 180, 192, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 228, 254, 256, 259, 266, 267, 268, 269, 272, 280, 285, 286, 290, 305, 315, 316, 326, 329, 331, 332, 337, 338, 339, 396], "eras": 326, "ermit": 332, "error": [2, 6, 75, 84, 92, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 136, 137, 139, 157, 160, 162, 171, 176, 177, 180, 234, 240, 241, 259, 269, 273, 279, 286, 290, 304, 310, 311, 314, 316, 317, 320, 326, 329, 330, 336, 337, 338, 339, 340, 341, 346, 370, 380, 383, 392, 393], "error_": [38, 315, 319, 320, 326, 330, 337, 341], "errorbar_caps": 329, "esc": 323, "escap": 316, "especi": [107, 275, 287, 304, 324, 329], "essenti": [92, 318, 320, 324], "est": 326, "establish": [2, 304], "estim": [20, 80, 96, 97, 105, 107, 111, 113, 151, 275, 287, 304, 312, 314, 333], "et": [1, 2, 14, 17, 20, 24, 25, 33, 96, 97, 103, 106, 107, 113, 230, 270, 304, 306, 307, 310, 311, 332], "etc": [2, 36, 39, 75, 76, 92, 99, 106, 107, 115, 124, 225, 229, 234, 261, 304, 305, 308, 311, 312, 316, 324, 326, 327, 328, 329], "etienn": 94, "euclid": [106, 310], "euclidean": 310, "eugen": 22, "eugenio": 94, "euler": 329, "europ": 329, "ev": [16, 38, 119, 326], "ev_cum": 119, "ev_ratio": 119, "evalu": [20, 96, 97, 102, 107, 125, 128, 258, 259, 269], "even": [4, 20, 96, 98, 107, 184, 259, 260, 266, 275, 279, 316, 319, 326, 341, 371], "evenli": [98, 103, 107, 129, 132, 172, 187, 190, 255, 388], "event": [2, 24, 96, 339], "eventu": [97, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 241, 313, 320], "everi": [113, 373], "everybodi": 2, "everyon": 9, "everyth": 310, "everytim": [98, 388], "evid": 2, "evol": 312, "evolut": [15, 304, 312, 353], "evolv": [15, 94, 100, 101, 103, 106, 110, 113, 118, 119, 304, 310], "ev\u00b2": 326, "ev\u2070": 326, "ex": [30, 308], "ex1": 48, "ex2": 48, "ex3": 48, "exact": [95, 98, 99, 107, 113, 116, 155, 304, 312], "exactli": [19, 308, 319, 332, 341], "exagger": 312, "examin": [304, 310, 311, 312, 332, 339], "exampl": [4, 6, 9, 14, 20, 25, 26, 28, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 129, 134, 135, 136, 140, 147, 154, 158, 161, 163, 164, 165, 168, 169, 170, 179, 183, 188, 191, 195, 204, 205, 225, 231, 232, 234, 238, 242, 245, 247, 248, 252, 262, 265, 266, 274, 275, 276, 279, 280, 285, 287, 288, 292, 294, 298, 299, 305, 307, 308, 309, 310, 312, 316, 319, 324, 325, 326, 328, 329, 331, 333, 335, 337, 338, 340, 341, 347, 353, 381, 384, 386, 390, 391, 392, 397], "exce": 2, "excel": [87, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294], "exceot": 332, "except": [38, 96, 98, 107, 116, 117, 121, 125, 128, 129, 141, 155, 161, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 271, 312, 315, 319, 320, 324, 326, 329, 330, 332, 337, 341, 349, 356, 367], "exchang": [94, 317, 341], "exclud": [98, 107, 116, 151, 187], "exclus": 2, "excus": 2, "exec": 339, "execut": [2, 19, 25, 28, 32, 34, 40, 49, 53, 55, 56, 58, 62, 65, 69, 72, 78, 81, 82, 87, 96, 98, 107, 116, 120, 164, 165, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 257, 258, 307, 315, 316, 385, 394, 397], "execute_request": 339, "exempl": 316, "exemplifi": 312, "exercis": [2, 332], "exhaust": [6, 305], "exist": [2, 4, 6, 12, 84, 95, 97, 100, 101, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 118, 119, 124, 188, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 311, 315, 319, 320, 323, 327, 332, 367, 397], "exp": [19, 20, 36, 39, 75, 77, 101, 157, 170, 175, 265, 308, 310, 320], "exp_conc": 114, "exp_idx": 114, "expand": [91, 107], "expandus": 316, "expans": 334, "expect": [6, 12, 30, 76, 84, 105, 107, 111, 115, 207, 231, 308, 310, 312, 313, 314, 315, 316, 330, 332, 338, 349, 394], "experi": [37, 100, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 320, 326, 394, 396], "experienc": [2, 324], "experiment": [19, 20, 38, 41, 44, 49, 57, 96, 98, 100, 103, 104, 107, 114, 156, 189, 210, 230, 237, 240, 249, 271, 291, 305, 307, 309, 310, 311, 318, 326, 330, 331, 337, 346, 350, 392], "expert": 9, "explain": [8, 12, 15, 22, 23, 113, 119, 150, 304, 308, 311, 319, 324], "explained_vari": 119, "explained_variance_ratio": [119, 311], "explan": 340, "explanatori": [304, 314], "explicit": [2, 96, 98, 99, 107, 115, 319], "explicitli": [6, 98, 107, 312, 329], "exploit": 2, "explor": [93, 312], "explos": 2, "expno": [45, 60, 61, 75, 76, 77, 249, 326, 328, 331, 334, 340], "expon": [96, 272, 331], "exponenti": [59, 62, 73, 75, 96, 107, 157, 175, 208, 209, 249, 307, 334, 335, 337], "export": [83, 107, 109, 116, 317, 322, 324, 346, 396], "expos": [94, 305, 306, 324], "express": [2, 15, 38, 80, 103, 117, 157, 175, 197, 314, 329, 337], "expressli": 2, "exptc": [208, 209, 334], "extend": [8, 86, 163, 312, 318, 319, 338], "extens": [6, 19, 42, 47, 92, 102, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 291, 292, 294, 312, 316, 319], "extent": 304, "extern": [2, 45, 94, 96, 100, 101, 103, 104, 106, 110, 112, 113, 115, 118, 119, 306, 320, 327, 339, 347, 353], "extra": [6, 106, 113, 308, 326, 394], "extract": [47, 76, 86, 101, 107, 110, 113, 153, 154, 304, 309, 312, 316, 318, 319, 324, 332, 336, 368], "extraoutputgetconc": 106, "extraoutputgetspec": 106, "extrem": [6, 286, 310, 313, 339], "extrema": 332, "ey": [107, 179], "f": [4, 15, 19, 27, 30, 31, 42, 45, 71, 75, 76, 89, 91, 94, 96, 98, 103, 107, 116, 170, 188, 191, 225, 265, 291, 308, 310, 311, 312, 314, 315, 318, 319, 326, 328, 329, 339], "f0e442": 329, "f0f0f0": 329, "f1": [30, 61, 75, 76, 292, 308, 328, 331, 334], "f2": [16, 77, 292, 328], "f401": 315, "f403": 324, "f405": 324, "f_ev": [15, 16, 100], "f_expno": 75, "fabrizia": 94, "face": [115, 341], "facecolor": [115, 197, 329], "fact": [2, 64, 310, 324], "factor": [15, 94, 96, 97, 100, 101, 103, 106, 110, 113, 118, 119, 304, 320, 329, 337], "factoris": 311, "fail": [2, 6, 96, 107, 108, 116, 330, 332, 354], "failur": [2, 329], "faith": 2, "fall": 329, "fals": [6, 20, 24, 27, 30, 31, 39, 42, 48, 55, 60, 61, 64, 68, 71, 75, 76, 80, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 121, 124, 125, 126, 127, 128, 135, 136, 137, 139, 146, 155, 157, 162, 166, 167, 171, 172, 175, 176, 177, 180, 183, 184, 187, 190, 192, 193, 195, 196, 197, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 260, 271, 272, 273, 275, 276, 277, 279, 281, 282, 284, 286, 287, 300, 301, 302, 303, 308, 310, 311, 312, 314, 316, 318, 319, 320, 326, 329, 331, 332, 333, 334, 336, 337, 339, 388, 396], "falsesolid_capstyl": 329, "famili": [96, 329], "familiar": 329, "fanci": [75, 329, 389, 392], "fantasi": 329, "far": 96, "farid": 94, "fashion": 337, "fast": [6, 68, 85, 100, 101, 103, 106, 110, 113, 118, 119, 162, 180, 320, 323, 329, 330, 334, 392], "fast_ica": 17, "faster": [80, 88, 96, 101, 107, 110, 158, 159, 392, 397], "fastest": 308, "fastica": [14, 25, 33, 100, 103, 106, 107, 110, 113, 118, 119, 155, 230, 307, 388, 392], "fault": 2, "favor": 390, "favorit": [323, 324], "fc": 312, "feasibl": 94, "featur": [4, 5, 6, 12, 21, 22, 84, 86, 91, 92, 93, 94, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 138, 155, 163, 173, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 290, 304, 309, 311, 319, 324, 326, 329, 337, 341], "federico": 94, "fedora": 85, "fee": 2, "felipa": 329, "fer": [94, 306], "fern": 94, "fernandez": [0, 1, 88, 90, 91, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "ferrihydrit": [94, 306], "ferrit": [94, 306], "fetch": 5, "few": [19, 27, 51, 115, 242, 310, 314, 326], "ff": 89, "ffmpeg": 329, "ffmpeg_fil": 329, "fft": [75, 77, 180, 324, 335, 336, 340], "fftbin": 339, "fhz": 262, "fi": 334, "fibr": [94, 306], "fibroin": [94, 306], "fid": [61, 75, 107, 116, 188, 316, 331, 334, 340], "fid2": [334, 340], "fid3": 334, "field": [2, 48, 92, 96, 99, 326], "fifo": [16, 100], "fig": [8, 107, 329], "fignum": 107, "figsiz": [18, 37, 38, 51, 68, 71, 75, 107, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 310, 311, 313, 326, 329, 330, 332, 333, 334, 336, 337, 339, 340, 341, 397], "figur": [16, 18, 22, 37, 38, 50, 53, 57, 68, 71, 75, 76, 92, 107, 113, 152, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 263, 307, 308, 310, 311, 312, 313, 322, 330, 332, 333, 334, 336, 337, 339, 340, 341, 397], "figure_autolayout": 329, "figure_dpi": 329, "figure_edgecolor": 329, "figure_facecolor": 329, "figure_figs": [39, 329], "figure_frameon": 329, "figure_max_open_warn": 329, "figure_subplot_bottom": 329, "figure_subplot_hspac": 329, "figure_subplot_left": 329, "figure_subplot_right": 329, "figure_subplot_top": 329, "figure_subplot_wspac": 329, "figure_titles": 329, "figure_titleweight": 329, "file": [1, 2, 5, 6, 7, 9, 10, 19, 20, 25, 28, 32, 34, 40, 41, 49, 53, 56, 57, 58, 62, 65, 69, 71, 72, 75, 78, 81, 82, 90, 91, 94, 98, 107, 108, 109, 114, 116, 188, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 271, 291, 292, 294, 307, 310, 311, 313, 314, 321, 325, 328, 329, 336, 338, 339, 341, 344, 346, 347, 354, 363, 365, 367, 372, 379, 380, 386, 388, 389, 391, 392, 396, 398], "fileinfo": 48, "filenam": [4, 42, 91, 107, 109, 116, 188, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 313, 316, 318, 319, 341, 354, 367, 392], "filename1": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252], "filename2": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252], "filenotfounderror": 319, "fileselector": 385, "filetyp": [4, 107, 116, 385], "fill": [102, 107, 110, 115, 146, 158, 159, 168, 169, 192, 204, 205, 256, 259, 269, 298, 299, 300, 301, 302, 303, 320, 329, 335, 336, 338], "fill_valu": [107, 159, 168, 169, 204, 299, 326, 337], "film": 48, "filter": [1, 8, 47, 68, 71, 72, 83, 163, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 290, 307, 316, 319, 320, 322, 334, 335, 390, 396], "final": [17, 19, 20, 23, 27, 31, 47, 51, 55, 64, 92, 98, 106, 107, 164, 165, 172, 190, 304, 308, 310, 312, 315, 316, 319, 324, 326, 327, 329, 332, 339], "financi": 2, "find": [15, 21, 30, 31, 42, 94, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 144, 145, 163, 227, 309, 313, 316, 322, 324, 330, 337, 339, 340, 391], "find_peak": [75, 76, 308, 309], "findfont": 329, "fine": [312, 339], "finit": 337, "fire": 2, "first": [2, 6, 8, 15, 18, 19, 20, 22, 23, 27, 37, 42, 47, 48, 51, 52, 71, 80, 85, 91, 96, 97, 98, 99, 101, 103, 104, 106, 107, 110, 112, 113, 115, 117, 118, 119, 124, 125, 128, 135, 151, 197, 208, 227, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 260, 262, 266, 277, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 319, 323, 324, 326, 328, 329, 332, 333, 334, 335, 337, 338, 339, 386, 397], "firstli": 2, "fisher": 22, "fist": 312, "fit": [15, 16, 18, 20, 22, 23, 24, 27, 29, 31, 32, 33, 64, 73, 74, 75, 78, 80, 91, 92, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 133, 152, 181, 225, 240, 249, 259, 269, 288, 304, 307, 309, 310, 311, 312, 313, 314, 322, 324, 329, 332, 339, 346, 365, 384, 392], "fit_intercept": [105, 111], "fit_reduc": [100, 101, 103, 106, 110, 112, 113, 115, 118, 119], "fit_to_concentr": [20, 96], "fit_to_exp_idx": 114, "fit_to_gas_concentr": 114, "fit_transform": [15, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119], "fitter": [75, 77], "fivethirtyeight": [329, 330], "fivo": 94, "fix": [5, 6, 12, 30, 51, 76, 98, 107, 114, 132, 255, 304, 308, 310, 333, 337], "fixtur": 6, "flag": [98, 107, 142, 143, 217, 260, 271, 273, 277, 279, 284, 320], "flake8": 6, "flat": [163, 269, 312, 339], "flatten": [98, 107, 126, 127, 136, 147, 193, 195, 196, 275, 276, 287, 339], "flavor": 12, "flexibl": [138, 155, 173, 305, 310, 319, 323, 326, 327, 332], "float": [8, 15, 21, 23, 51, 64, 76, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 124, 129, 132, 133, 147, 148, 150, 151, 157, 161, 163, 164, 165, 166, 167, 171, 175, 179, 187, 190, 195, 197, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 255, 259, 262, 269, 272, 275, 276, 287, 290, 312, 313, 326, 332, 338, 341], "float32": [6, 107, 229, 275, 287], "float64": [6, 16, 18, 22, 23, 31, 36, 37, 38, 39, 42, 44, 46, 48, 55, 75, 77, 91, 98, 99, 107, 129, 135, 136, 147, 154, 161, 164, 165, 168, 169, 195, 204, 205, 229, 230, 231, 232, 238, 239, 240, 241, 242, 245, 246, 247, 248, 252, 266, 274, 275, 276, 279, 285, 287, 298, 299, 310, 311, 313, 316, 318, 319, 320, 326, 332, 337, 338, 341], "floor": [98, 107, 132, 255], "flore": 94, "flow": [94, 306], "fm": 94, "fmax": [98, 107, 126, 127, 193, 196], "fmin": [98, 107, 126, 127, 193, 196], "fmt": 339, "fn": [98, 107, 164], "foc": 320, "focu": 339, "focus": [5, 92], "fold": 320, "folder": [1, 6, 9, 13, 46, 75, 76, 77, 80, 116, 230, 234, 240, 241, 316, 320, 323, 326, 379], "follow": [2, 4, 5, 6, 8, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 87, 91, 92, 95, 96, 97, 103, 106, 107, 115, 141, 234, 241, 257, 262, 271, 274, 305, 308, 310, 311, 312, 315, 316, 319, 320, 323, 324, 325, 326, 328, 329, 332, 339, 397], "fonction": 21, "font": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329, 360], "font_famili": 329, "font_siz": 329, "font_styl": 329, "font_vari": 329, "font_weight": 329, "fontsiz": [71, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 312, 329, 339], "fopr": 311, "forbidden": [30, 76, 308, 320], "forc": [2, 6, 98, 99, 105, 107, 111, 183, 184, 263, 279, 325, 329, 341], "force_pound": 117, "force_stack": 371, "forego": 2, "forg": [88, 89], "forget": [15, 313, 324], "forgotten": 346, "fork": 5, "form": [2, 94, 97, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 157, 171, 175, 176, 177, 225, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 260, 272, 304, 310, 320, 326, 329, 331, 339], "formal": [304, 332], "formaldehyd": [94, 306], "format": [2, 6, 7, 12, 21, 24, 41, 42, 45, 47, 49, 52, 57, 71, 91, 107, 108, 109, 115, 116, 149, 160, 181, 230, 231, 246, 262, 289, 291, 292, 294, 307, 316, 318, 319, 320, 321, 323, 325, 326, 329, 339, 344, 346, 370, 375, 377, 391, 398], "formatt": [6, 328, 329], "former": 392, "formula": 96, "forth": 2, "fortran": 107, "fortun": [316, 338], "fortunelli": 94, "forum": [10, 319, 324], "forward": [15, 16, 100, 101, 103, 106, 110, 113, 118, 119, 320], "found": [1, 2, 6, 20, 22, 42, 52, 83, 96, 99, 308, 312, 316, 319, 326, 329, 334, 339], "four": [310, 316, 330, 338], "fourier": [75, 162, 166, 167, 178, 180, 320, 322, 331, 335, 336], "fourier_transform": 320, "fourth": 151, "fp": 112, "fppm": 262, "fr": [0, 94, 315, 324, 334], "fr_fr": 329, "frac": [105, 111, 115, 137, 170, 171, 176, 177, 191, 265, 272, 304, 308, 331], "fraction": [197, 312, 329], "frame": [197, 329], "frameon": 197, "framework": [0, 3, 93, 94, 306, 315], "fran": 94, "franc": [1, 2], "francesco": 94, "francisco": 94, "frantz": [94, 306], "franziska": 94, "freder": 94, "fredholm": 104, "free": [2, 12, 87, 100, 332, 334], "freedom": [2, 107, 275, 287], "freeli": [2, 92], "freetyp": 329, "freita": 94, "french": 2, "freq": [316, 320], "frequenc": [38, 98, 162, 166, 167, 180, 262, 304, 320, 336], "frequent": 326, "friendli": [94, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 116, 118, 119], "fritsch": 94, "frobeniu": 110, "from": [1, 2, 4, 5, 6, 11, 12, 13, 14, 17, 20, 22, 25, 27, 28, 32, 33, 34, 36, 39, 40, 41, 44, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 62, 65, 66, 67, 69, 72, 73, 75, 77, 78, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 128, 129, 133, 138, 141, 151, 152, 154, 156, 158, 159, 161, 162, 164, 165, 168, 169, 172, 173, 178, 179, 180, 187, 188, 189, 190, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 262, 269, 270, 273, 274, 275, 278, 279, 280, 287, 291, 292, 294, 298, 299, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 323, 324, 325, 327, 329, 331, 332, 335, 336, 337, 338, 339, 340, 341, 346, 365, 368, 372, 379, 383, 388, 390, 391, 392, 394, 396, 397], "from_": 121, "from_list": 117, "from_sequ": 117, "fromfunct": [98, 107, 165, 308, 326], "fromit": [98, 107, 164], "frozen": 339, "fsh": 254, "fsh2": [166, 254], "fssl": 85, "ft": [48, 320], "ftir": [21, 91, 94, 100, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 252, 304, 306, 322, 332, 335, 362], "ftirinstru": 320, "fulfil": 2, "full": [2, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 85, 91, 92, 97, 107, 113, 154, 158, 159, 169, 204, 205, 298, 299, 312, 313, 316, 326, 329, 332, 333, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "full_lik": [107, 158, 159, 168, 204, 205, 298, 299, 326], "full_matric": 119, "fulli": [92, 332, 333, 339, 392], "fulllik": [107, 169], "fullscal": 311, "fun": 101, "fun_arg": 101, "func": [8, 107, 207, 308, 326], "func1": [98, 107, 164], "function": [2, 4, 6, 19, 20, 21, 36, 39, 59, 61, 71, 73, 75, 76, 80, 83, 84, 86, 91, 96, 98, 101, 102, 103, 104, 106, 107, 110, 112, 113, 114, 122, 123, 135, 137, 138, 139, 146, 153, 155, 157, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 175, 176, 177, 179, 180, 191, 192, 207, 208, 209, 217, 225, 227, 230, 240, 241, 254, 256, 259, 260, 265, 272, 275, 286, 290, 291, 304, 308, 312, 315, 316, 317, 319, 320, 324, 327, 328, 329, 335, 336, 339, 341, 346, 352, 353, 359, 378, 384, 392, 396, 397], "further": [2, 107, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 312, 316], "futur": [2, 319, 323, 324, 329, 336, 388], "fv": [18, 22, 23, 42, 44, 46, 48, 55, 61, 75, 76, 77, 91, 310, 311, 313, 316, 318, 319, 320, 324, 326, 328, 331, 334, 337, 338, 341], "fwhm": 80, "g": [6, 18, 31, 38, 61, 80, 84, 92, 94, 98, 99, 100, 107, 117, 121, 168, 175, 186, 204, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 282, 298, 304, 305, 308, 310, 312, 316, 319, 323, 325, 326, 327, 328, 329, 331, 332, 333, 336, 337, 339, 341, 383, 392], "ga": [94, 114], "gain": 320, "galact": [4, 48, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 365], "galacticdata": [48, 246], "galleri": [25, 28, 32, 34, 40, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 91, 92, 93, 307, 309, 324, 326, 329, 330, 390], "gappi": 329, "garcia": 94, "gard": 329, "gargallo": 94, "gasym": 308, "gather": 319, "gauss": 175, "gaussian": [170, 175, 308], "gaussianmodel": [288, 308], "gb": [175, 331], "gbw": 320, "gc": [48, 100, 385], "gcm": 48, "ge": [272, 331], "gener": [2, 4, 6, 11, 19, 27, 36, 38, 39, 42, 52, 71, 76, 84, 92, 96, 98, 101, 106, 107, 110, 115, 116, 129, 171, 172, 176, 187, 190, 197, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 279, 291, 304, 305, 310, 311, 312, 314, 319, 321, 322, 324, 326, 329, 331, 337, 338, 339, 341, 371, 385], "general_ham": [176, 177], "generalprefer": 95, "genzel": [176, 336], "geometr": [98, 107, 172], "geometri": 329, "geomspac": [98, 107, 190], "geoscienc": 94, "gervilli\u00e9": 94, "get": [6, 11, 13, 15, 16, 18, 19, 20, 21, 22, 30, 42, 68, 75, 76, 86, 88, 90, 93, 98, 100, 105, 106, 107, 111, 115, 116, 117, 174, 188, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 312, 313, 319, 320, 322, 323, 326, 327, 329, 330, 332, 333, 338, 341], "get_axi": 107, "get_baselin": [97, 133, 138, 152, 270], "get_compon": [15, 22, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119], "get_label": [98, 107], "get_loglevel": 315, "get_real_method": 328, "get_scale_nam": 115, "get_spectra": 4, "get_timestamp": 4, "get_user_and_nod": 6, "get_wavelength": 4, "get_window": 339, "getc": 106, "getc_to_c_idx": 106, "getconc": [20, 106], "getcwd": 316, "getmessag": 339, "getspec": 106, "getst_to_st_idx": 106, "gettingstart": [25, 28, 32, 34, 40, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 93, 368], "gfw": 320, "ggplot": [329, 330], "ghaffari": 94, "gif": 325, "gilson": 94, "giovannetti": 94, "git": [5, 6, 10, 13, 395], "github": [5, 6, 12, 47, 86, 87, 89, 91, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 353, 366, 372, 386, 396], "githubusercont": 85, "gitpython": 5, "give": [2, 80, 96, 97, 98, 107, 116, 133, 272, 312, 313, 314, 319, 324, 325, 326, 328, 329, 331, 332, 339], "given": [2, 18, 23, 31, 37, 47, 75, 91, 92, 96, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 132, 136, 140, 141, 147, 156, 158, 159, 168, 169, 172, 179, 187, 190, 193, 196, 204, 205, 229, 231, 232, 234, 249, 255, 258, 259, 262, 264, 266, 269, 271, 274, 276, 284, 285, 298, 299, 300, 303, 304, 308, 309, 310, 311, 312, 316, 317, 319, 326, 332, 337, 338, 339, 388], "glob": [75, 316], "global": 397, "gm": [157, 171, 228, 267, 268, 272, 286, 331, 334], "gmt": [18, 23, 37, 42, 44, 48, 91, 313, 316, 318, 319, 320, 338, 341], "go": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 87, 319, 322, 323, 331, 334], "god": 2, "goe": [304, 315], "golai": [68, 70, 72, 73, 102, 107, 230, 259, 269, 290, 307, 335], "golden": 103, "gonzalez": 94, "good": [2, 3, 6, 19, 30, 71, 75, 80, 96, 314, 319, 320, 321, 329, 339], "googl": [85, 373, 385, 394], "got": 91, "govern": 2, "gradient": 308, "grai": 329, "gram": [4, 38, 246, 365], "grant": 2, "graph": [107, 113, 117, 210, 211, 212, 213, 215, 216, 221, 329], "graphen": [94, 306], "graphic": [3, 22, 23, 92, 94, 323, 329], "graphicx": 329, "graphviz": 117, "gratio": [30, 308], "grave": 325, "gravimetr": [94, 306], "grayscal": [329, 330], "greater": [23, 68, 107, 113, 150, 162, 180, 225, 272, 273, 308, 325, 331, 339], "greatli": [305, 324], "green": [6, 51, 64, 75, 76, 312, 325, 336], "grei": 312, "grepioni": 94, "greter": 319, "grid": [47, 96, 197, 329], "grid_alpha": 329, "grid_axi": 329, "grid_color": 329, "grid_linestyl": 329, "grid_linewidth": 329, "gridlin": 329, "griffin": 94, "group": [20, 42, 55, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 312, 316, 318, 319, 320, 326, 329, 338, 341, 394, 396], "gt": [308, 310, 311, 312, 326, 328, 329, 336, 339], "guarante": [92, 96], "guaranti": 369, "guerin": 1, "guess": [19, 107, 113, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 304, 308, 309, 316, 338, 384], "gui": [3, 5, 92, 94, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 329], "guid": [2, 4, 5, 10, 84, 89, 91, 93, 325, 343], "guidelin": [5, 7, 89], "guilhau": [94, 100], "guillaum": [1, 94], "guinea": 94, "gustavo": 94, "gu\u00e9rin": 315, "gwidth": [30, 308], "g\u00fa": 316, "h": [31, 38, 94, 110, 290, 304, 308, 326, 329, 332, 334, 339], "h2o": 336, "h3po4": 340, "ha": [2, 11, 12, 18, 19, 23, 37, 47, 64, 67, 75, 87, 92, 98, 99, 101, 103, 105, 107, 111, 113, 116, 119, 154, 162, 164, 178, 230, 240, 241, 275, 287, 304, 310, 311, 312, 316, 318, 319, 324, 326, 328, 329, 331, 332, 333, 334, 336, 337, 338, 348, 366, 386, 388, 390, 391, 392, 396, 397], "habit": 6, "haddad": 94, "hae": [316, 319], "hal": [94, 306], "half": [98, 107, 129, 187, 229, 312, 329], "halko": 113, "ham": [102, 157, 171, 175, 177, 228, 267, 268, 269, 272, 286, 336, 339], "hamid": 94, "han": [91, 94, 102, 269, 339], "hand": [87, 96, 107, 158, 310, 311, 312, 314], "handl": [4, 24, 38, 75, 91, 98, 107, 116, 129, 163, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 266, 317, 326, 329, 330, 332, 337, 338, 339, 359, 361, 369, 371, 375, 377, 383, 386, 391], "hann": [171, 176], "hannemos": 94, "happ": [176, 336], "happen": 308, "hard": [20, 106, 113, 304, 310], "hardc": 106, "hardconc": [20, 106], "hardspec": 106, "hardst": 106, "harri": 139, "has_complex_dim": [107, 260], "has_data": [98, 107, 326], "has_defined_nam": [98, 99, 107], "has_rais": 339, "has_unit": [98, 107], "hasattr": 117, "hat": [17, 19, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 304, 311], "hatch_color": 329, "hatch_linewidth": 329, "have": [1, 2, 6, 10, 12, 13, 16, 18, 19, 30, 31, 37, 42, 51, 55, 64, 75, 76, 83, 96, 98, 99, 101, 107, 109, 110, 116, 119, 124, 136, 141, 150, 155, 159, 169, 197, 205, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 272, 299, 305, 308, 310, 312, 313, 315, 316, 319, 320, 323, 324, 325, 326, 327, 329, 330, 331, 332, 334, 338, 339, 341, 349, 370, 380, 390, 396], "haven": 5, "hay": [94, 151], "hc": 94, "hdr": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "head": 85, "header": [232, 354], "health": 92, "heart": [92, 304], "height": [75, 76, 112, 163, 197, 312, 329], "heigth": 75, "heli": [94, 306], "hello": 120, "helmu": 1, "help": [6, 9, 12, 86, 88, 90, 91, 93, 315, 324, 329, 331, 332, 333, 366], "helper": 6, "helvet": 329, "helvetica": 329, "henc": [18, 37, 106, 113, 304, 310, 311, 316, 319, 338, 339], "henrik": 94, "her": 341, "here": [6, 13, 17, 18, 19, 21, 22, 23, 31, 36, 37, 38, 39, 43, 44, 46, 47, 51, 64, 71, 75, 76, 84, 91, 96, 101, 106, 107, 230, 240, 305, 308, 309, 310, 311, 312, 314, 315, 316, 318, 319, 320, 323, 326, 328, 329, 332, 334, 336, 338, 339, 340, 341], "herebi": 2, "herefrom": 2, "hereinabov": 2, "hereinaft": 2, "hereof": 2, "hereund": 2, "hermit": [64, 97, 332], "hesit": [83, 324], "hex": [325, 329], "hfl": 320, "hfq": 320, "hfw": 320, "hidden": [95, 316], "high": [9, 96, 290, 320, 392], "high_bound": [30, 75, 76, 77, 308], "higher": [85, 107, 124, 275, 287, 312, 332], "highest": [115, 312], "highli": [94, 305, 306, 324], "highlight": 325, "hilbert": 178, "hilvert": 178, "hint": 329, "hist_bin": 329, "histogram": 329, "histori": [4, 6, 22, 23, 42, 44, 46, 48, 75, 77, 91, 92, 107, 240, 310, 311, 313, 316, 318, 319, 320, 327, 331, 334, 337, 338, 341, 370], "hold": [98, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 324], "holder": [2, 231], "home": [16, 21, 24, 42, 44, 45, 46, 47, 48, 55, 75, 91, 95, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 380], "homebrew": [5, 85], "homepag": [19, 310, 311], "homogen": 356, "honour": 94, "hook": 6, "hope": [305, 326, 327], "hopefulli": [92, 326, 359, 366], "horizont": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 312, 329], "host": [12, 325], "hostedtoolcach": 339, "hot": [36, 39, 326], "hotfix": 364, "hour": [17, 24, 31, 38, 43, 98, 99, 107, 164, 308, 326, 341], "how": [6, 8, 22, 37, 38, 41, 47, 50, 54, 59, 63, 66, 70, 73, 74, 83, 91, 107, 266, 304, 305, 311, 312, 313, 314, 316, 317, 322, 326, 329, 335, 338, 339, 340], "howev": [2, 6, 18, 42, 67, 75, 98, 107, 125, 128, 225, 275, 279, 287, 305, 308, 310, 311, 319, 320, 323, 326, 328, 329, 333, 339], "hpa": 320, "hpf": 320, "hpl": 19, "hplc": [19, 310, 311], "hr": [38, 47, 99, 308], "hspace": 197, "html": [6, 9, 294, 325, 328, 396], "http": [0, 5, 6, 27, 38, 42, 47, 85, 87, 89, 94, 294, 310, 314, 315, 316, 324, 325, 329, 332, 339, 386, 396], "hua": 94, "hum": 320, "human": [96, 117], "humid": 320, "hydrodesulfur": [94, 306], "hydrogel": [94, 306], "hyperbol": 335, "hypercomplex": [98, 107, 126, 193, 335], "hyphen": [325, 329], "hypothet": [107, 287], "hz": [38, 60, 77, 98, 157, 175, 262, 331, 334], "h\u00ba": [316, 319], "h\u00e3\u00e0": [316, 319], "h\u2070": 326, "i": [1, 2, 4, 5, 6, 9, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 27, 30, 36, 37, 38, 39, 42, 46, 47, 48, 51, 55, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 146, 147, 150, 151, 152, 153, 154, 155, 157, 162, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 179, 180, 184, 187, 188, 189, 190, 192, 193, 195, 196, 197, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 260, 262, 266, 269, 271, 272, 273, 274, 275, 276, 279, 281, 282, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 341, 343, 347, 356, 365, 367, 369, 372, 379, 383, 384, 386, 388, 389, 390, 391, 392, 395, 396, 397], "i0": [75, 77, 316, 319], "i2iexp": 96, "iadd": 326, "iana": 329, "ib": [107, 122, 123], "ibr": 2, "ica": [17, 101, 304], "icon": [13, 323], "id": [98, 99, 107, 116, 134, 170, 191, 225, 265, 288, 316, 324, 326, 328], "idea": [2, 12, 84], "ident": [2, 52, 107, 116, 161, 339], "identif": [94, 306], "identifi": [2, 51, 98, 99, 107, 116, 151, 163, 308, 326], "ie": 31, "iecewis": 332, "ieee": 94, "iexp": 96, "ifft": [162, 334], "ignor": [6, 98, 107, 115, 119, 124, 126, 127, 164, 193, 196, 208, 234, 237, 316, 367], "igrf": [241, 320], "igsm": [241, 320], "ii": [2, 76, 107, 142, 143, 310, 311, 328, 332, 337], "iia": 96, "iii": [2, 310, 311, 332], "ij": 304, "ik\u00ba": [316, 319], "ill": 94, "illustr": [6, 312, 316, 329, 338, 339], "im": 334, "imag": [6, 36, 39, 46, 47, 107, 115, 142, 143, 194, 197, 198, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 226, 325, 329, 331, 334, 360, 392], "image_aspect": 329, "image_cmap": 329, "image_composite_imag": 329, "image_interpol": 329, "image_lut": 329, "image_origin": 329, "image_resampl": 329, "imaginari": [6, 98, 107, 132, 178, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 255, 334, 335, 337, 340], "imcompat": 320, "img": 325, "immedi": 8, "immeubl": 2, "impact": [312, 332, 388, 397], "implement": [4, 8, 96, 100, 107, 125, 128, 151, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 290, 292, 304, 310, 311, 312, 314, 318, 319, 324, 326, 330, 332, 338, 339], "implicit": 96, "import": [4, 6, 8, 9, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 107, 116, 117, 121, 156, 188, 230, 240, 241, 261, 262, 308, 310, 311, 312, 313, 314, 315, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 359, 391, 396, 397], "import_optional_depend": 6, "importerror": [6, 86, 315], "importexport": [316, 318], "impos": 20, "improp": 329, "improv": [1, 6, 9, 21, 83, 84, 98, 107, 113, 165, 309, 310, 324, 329, 331, 333, 346, 355, 359, 361, 362, 363, 366, 368, 370, 374, 378, 383, 385, 392, 394, 396, 397], "imshow": 329, "imul": 334, "ina": 94, "inaccur": [107, 275, 287], "inc": 320, "inch": [107, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "includ": [1, 2, 4, 6, 9, 12, 27, 84, 85, 86, 88, 90, 91, 96, 97, 98, 99, 107, 116, 129, 163, 172, 187, 190, 309, 319, 324, 325, 329, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "include_limit": [97, 332], "incompat": [38, 98, 107, 184, 241, 279, 329], "inconsist": 240, "incorpor": [2, 240], "incorrect": 21, "increas": [21, 67, 96, 97, 106, 107, 133, 308, 319, 329, 332, 333, 339, 373, 391, 394], "increment": [98, 338], "incur": 2, "inde": 310, "independ": [24, 100, 101, 103, 105, 106, 110, 111, 113, 118, 119, 197, 240, 304, 310, 319, 329, 334], "index": [9, 21, 36, 37, 39, 42, 75, 76, 93, 96, 98, 99, 103, 106, 107, 113, 114, 130, 131, 135, 142, 143, 156, 161, 232, 259, 271, 284, 308, 310, 311, 316, 319, 332, 335, 339, 341, 356, 379, 389, 391, 392], "index_pc": 24, "indic": [2, 17, 22, 51, 75, 97, 98, 103, 106, 107, 113, 121, 126, 127, 152, 163, 193, 196, 207, 271, 278, 304, 310, 311, 314, 319, 332, 336, 337, 338, 353], "indiffer": 331, "indirect": 249, "indirectli": 2, "individu": [1, 2, 6, 37, 42, 64, 105, 107, 111, 124, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 305, 308, 312, 320, 326, 329, 330, 372], "induct": 334, "industri": [2, 48], "ine": 320, "ineffect": 2, "inf": [6, 107, 115, 168], "infer": [19, 98, 107, 122, 123, 129, 172, 187, 190, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 312], "infin": [107, 113, 125, 337], "infinit": [107, 275, 287], "info": [17, 18, 19, 20, 21, 24, 30, 55, 67, 75, 76, 77, 80, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 120, 181, 259, 269, 290, 308, 310, 312, 315, 325, 339, 353, 370, 384], "info_": [30, 55, 96, 120, 315, 339], "inform": [5, 6, 18, 19, 27, 30, 31, 67, 84, 91, 98, 107, 113, 115, 138, 173, 232, 304, 305, 309, 311, 312, 314, 316, 320, 322, 323, 326, 329, 336, 339, 370, 386], "informatiqu": 2, "infra": [94, 306], "infrar": [18, 37, 94, 95, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 317, 329], "infring": 2, "inherit": 329, "ini": 6, "init": [100, 107, 110, 384], "init_concentr": 96, "init_x": 114, "initalis": 332, "initi": [2, 6, 19, 20, 75, 92, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 154, 158, 159, 309, 318, 324, 326, 329, 332, 339, 345, 346, 397], "initial_ind": 328, "initial_rt": [71, 80, 339], "initialis": [107, 110, 388], "inlet_f": 114, "inlet_x": 114, "inlin": 329, "inner": [124, 335], "innov": 2, "inplac": [38, 60, 61, 98, 107, 117, 135, 137, 139, 142, 143, 146, 157, 162, 166, 167, 171, 175, 176, 177, 180, 184, 185, 186, 192, 208, 209, 254, 256, 260, 271, 272, 273, 277, 279, 281, 282, 284, 286, 319, 326, 331, 334, 336, 341], "input": [16, 19, 31, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 122, 123, 125, 126, 127, 128, 129, 132, 133, 136, 137, 139, 140, 141, 142, 143, 147, 150, 151, 152, 154, 155, 157, 158, 159, 163, 168, 169, 171, 172, 176, 177, 187, 190, 193, 195, 196, 204, 205, 208, 209, 227, 255, 259, 269, 270, 273, 274, 275, 276, 278, 286, 287, 290, 298, 299, 300, 303, 310, 316, 335, 356, 391], "inquir": 329, "inria": 2, "ins": 320, "insensit": 97, "insert": [87, 325], "insid": [6, 325, 329], "insight": [91, 94, 306, 327], "inspac": [98, 107, 129], "inspect": [68, 309, 333], "inspir": 6, "instal": [5, 6, 86, 93, 103, 324, 329, 330, 343, 347, 355, 360, 368, 372, 375, 376, 385, 394, 395], "instanc": [36, 37, 38, 39, 51, 95, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 120, 138, 158, 159, 164, 168, 169, 173, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 279, 283, 298, 299, 305, 308, 310, 311, 312, 314, 315, 316, 319, 320, 326, 329, 332, 334, 337, 338, 339, 341, 397], "instanti": [115, 397], "instead": [6, 12, 23, 31, 37, 38, 64, 75, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 126, 127, 136, 138, 155, 159, 162, 163, 165, 172, 173, 190, 193, 196, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 275, 287, 305, 316, 324, 325, 326, 329, 332, 337, 338, 339, 346, 378, 384, 386, 388, 392, 397], "institut": 2, "instruct": [2, 84, 85, 91, 315, 343, 360], "instrument": [2, 27, 94, 314, 320], "instrument_statu": 320, "int": [8, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 120, 124, 125, 126, 127, 128, 132, 133, 135, 136, 137, 139, 141, 142, 143, 146, 147, 150, 151, 152, 153, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 187, 190, 192, 193, 195, 196, 197, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 229, 231, 249, 254, 255, 256, 259, 261, 266, 269, 270, 271, 272, 273, 275, 276, 277, 285, 286, 287, 290, 298, 300, 302, 303, 326, 329, 332], "int64": [107, 158, 168, 204, 298], "int8": [107, 168, 204, 298], "int_": 103, "integ": [21, 23, 64, 80, 97, 98, 102, 107, 124, 129, 135, 137, 139, 146, 147, 150, 157, 162, 166, 167, 171, 175, 176, 177, 180, 192, 195, 208, 209, 225, 254, 256, 259, 266, 269, 272, 275, 276, 285, 286, 287, 290, 332, 337, 338], "integr": [2, 11, 20, 75, 77, 92, 96, 100, 101, 103, 104, 106, 107, 110, 113, 118, 119, 147, 266, 276, 285, 309, 322, 324, 339, 346, 355, 392], "intel": 24, "intellectu": 2, "intellig": [16, 94, 316], "intend": 2, "intens": [16, 36, 39, 48, 61, 75, 76, 77, 91, 118, 151, 197, 240, 310, 312, 326, 328, 331, 333, 334, 336], "intention": 117, "interact": [64, 84, 86, 88, 90, 94, 100, 101, 103, 106, 110, 113, 118, 119, 329, 346], "interactiveanalysi": 118, "interactiveshel": 339, "intercept": [31, 105, 111, 308], "interchang": [107, 277, 284], "interest": [2, 3, 18, 19, 27, 37, 51, 64, 75, 76, 92, 98, 107, 310, 311, 314, 316, 319, 326, 332, 334, 337, 338, 339], "interfac": [2, 92, 94, 304, 323, 324, 329, 339], "interfero": 336, "interferogram": [233, 235, 241, 243, 244, 320, 322, 335, 362, 363, 368, 375], "interferomet": 320, "interlac": 337, "interleav": 107, "intermedi": [112, 332], "intern": [2, 4, 92, 97, 100, 101, 103, 104, 106, 110, 112, 113, 115, 116, 118, 119, 320, 324, 326, 370], "internet": 386, "interp": [102, 259, 269], "interphas": [94, 306], "interpol": [48, 64, 94, 97, 124, 163, 242, 312, 330, 332, 339], "interpolate_method": 124, "interpolate_sampl": 124, "interpret": [2, 113, 116, 163, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "interrupt": 2, "intersect": [124, 312, 330], "interv": [98, 107, 113, 124, 129, 140, 172, 187, 190, 197, 229, 266, 312], "intervent": 2, "intialis": 388, "introduc": 384, "introduct": [50, 53, 57, 107, 217, 240, 307, 309, 322, 327, 335], "intsimp": 313, "inttrapz": 313, "intuit": [3, 91, 94, 306], "inv": [137, 139, 157, 162, 171, 175, 176, 177, 208, 209, 272, 286], "invalid": [2, 337], "invers": [91, 94, 97, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 137, 139, 157, 162, 171, 175, 176, 177, 180, 208, 209, 272, 286, 306, 319, 337], "inverse_transform": [17, 30, 76, 77, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 308, 384], "investig": [20, 94, 306], "invis": 329, "invok": 2, "involv": 103, "io": [38, 107, 116, 188], "io_loop": 339, "ion": [94, 306], "ion_curr": 242, "iop": 94, "ip": 312, "ipkernel": 339, "ipykernel": 339, "ipykernel_18039": [], "ipykernel_18150": 339, "ipykernel_launch": 339, "ipynb": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 316, 319], "ipython": [88, 90, 328, 339], "ipywidget": 383, "ir": [30, 41, 42, 48, 49, 55, 57, 76, 94, 98, 107, 142, 143, 156, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 271, 291, 294, 306, 307, 308, 312, 313, 318, 321, 322, 324, 326, 328, 329, 332, 336, 337, 338, 341, 368], "ir4": 294, "ird": 336, "irdata": [15, 18, 21, 23, 30, 37, 42, 43, 44, 52, 64, 87, 91, 95, 98, 100, 107, 116, 119, 135, 136, 141, 147, 163, 188, 195, 230, 231, 232, 234, 240, 241, 245, 247, 248, 266, 274, 275, 276, 285, 287, 291, 292, 308, 312, 313, 316, 318, 319, 320, 326, 329, 330, 332, 336, 337, 338, 341], "irdh": 336, "iri": [14, 25, 33, 94, 98, 99, 100, 101, 104, 106, 107, 110, 113, 118, 119, 189, 230, 306, 307, 346, 353, 367, 368, 392], "iris1": 18, "iris2": 18, "iris3": 18, "iriskernel": [18, 91], "irt": 336, "irth": 336, "is_1d": 107, "is_compatible_with": [117, 121], "is_complex": [107, 142, 143, 260], "is_dir": [107, 109, 116], "is_empti": [98, 99, 107, 326], "is_fil": [107, 109, 116], "is_float": [98, 107], "is_integ": [98, 107], "is_interleav": 107, "is_label": [98, 99, 107], "is_mask": 107, "is_quaternion": [107, 260], "is_same_dim": 99, "is_units_compat": [98, 107], "isfloat": 45, "isinst": [4, 117, 121, 261], "isn": 9, "isobutanol": [94, 306], "isoformat": 107, "isol": 87, "isotherm": 96, "isotop": 346, "isp_matrix": [19, 24, 310, 311], "issu": [2, 5, 6, 86, 88, 90, 94, 107, 124, 275, 287, 315, 337, 344, 346, 351, 354, 355, 356, 358, 367, 368, 371, 375, 377, 383, 385, 388, 389, 390, 392, 393, 398], "ist": 320, "itakura": 110, "ital": [325, 329], "item": [6, 98, 107, 116, 117, 165, 316, 319, 325, 338], "item_to_attr": [107, 116], "iter": [19, 20, 21, 24, 30, 64, 91, 96, 97, 98, 99, 101, 104, 106, 107, 110, 112, 113, 115, 133, 138, 152, 164, 165, 173, 270, 310, 332, 385], "iterabbl": 113, "iterated_pow": 113, "ith": [55, 319], "ito": [38, 98, 107, 117, 183, 185, 186, 279, 313, 319, 329, 341, 351], "ito_base_unit": [98, 107, 117, 184, 186, 279], "ito_pref": 117, "ito_reduced_unit": [98, 107, 117, 184, 185, 279], "ito_root_unit": 117, "its": [2, 68, 91, 92, 96, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 136, 153, 155, 179, 203, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 238, 239, 264, 308, 310, 311, 312, 316, 319, 325, 326, 328, 329, 338, 339, 373, 388, 390], "itself": [2, 91, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 259, 269, 316], "ivp_solver_kwarg": [20, 96], "j": [1, 94, 98, 106, 107, 116, 117, 183, 186, 204, 205, 282, 306, 316, 319, 326], "j7": [316, 319], "j8": [316, 319], "jaap": 94, "jacobian": 96, "jafari": 94, "jaggi": 329, "jamil": 94, "jan": [94, 319], "jaroniec": 1, "jaroslava": 94, "jaumot": [14, 17, 24, 25, 33, 94, 106, 107, 230, 307, 310, 311], "ja\u0161\u00edk": 94, "jcamp": [91, 94, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 316, 317, 321], "jcat": [94, 306], "jdx": [91, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 318], "jean": 94, "jendrlin": 94, "jeroen": 94, "jet": [75, 329], "jeu": 316, "jianjun": 94, "jo": 94, "joanna": 94, "joaquim": 94, "job": 92, "john": 316, "join": [15, 30, 75, 91, 312, 316], "joint": 2, "joran": 94, "joren": 94, "josh": [320, 396], "joshduran": 396, "joul": [107, 204], "journal": 94, "jpeg": 329, "jr": 94, "json": [107, 116, 346], "jth": 319, "juan": [94, 304], "jul": [23, 42, 91, 313, 316, 341], "jupyt": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 86, 87, 88, 90, 91, 92, 304, 324, 325, 329, 385, 396], "jupyterlab": 323, "juraj": 94, "juri": 94, "jurisdict": 2, "just": [18, 31, 42, 47, 64, 101, 320, 328, 330, 336, 337, 341], "jz\u00bal": [316, 319], "k": [6, 15, 16, 18, 20, 21, 22, 23, 36, 39, 55, 60, 61, 90, 91, 94, 96, 99, 103, 104, 107, 114, 119, 153, 161, 197, 229, 304, 314, 326, 329, 334], "k0": 20, "k_1": 96, "k_dt": 96, "k_exp": 96, "k_n": 96, "kadam": [94, 306], "kalb\u00e1\u010d": 94, "karimvand": 94, "karol\u00edna": 94, "katsumo": 333, "katsumoto": [94, 151, 333, 385], "kbr": 320, "kbrdetector": 320, "kbrmeasur": 320, "kee": 94, "keep": [5, 18, 20, 64, 68, 75, 76, 80, 96, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 154, 308, 312, 329, 335], "keep_row": 47, "keepdim": [98, 107, 117, 125, 126, 127, 128, 136, 147, 193, 195, 196, 227, 275, 276, 287], "keepnam": [98, 99, 107], "kei": [4, 75, 93, 96, 99, 107, 116, 310, 312, 319, 354], "keller": [14, 25, 33, 98, 100, 107, 141, 155, 307], "kelvin": 96, "kept": [106, 113, 319, 388], "kernel": [18, 103, 104, 269, 329, 339, 353, 392], "kernelapp": 339, "kernelbas": 339, "kevin": 94, "keyword": [96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 129, 137, 138, 139, 141, 146, 150, 154, 157, 158, 159, 162, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 180, 187, 188, 190, 192, 204, 205, 207, 208, 209, 210, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 266, 269, 272, 275, 285, 286, 287, 290, 291, 298, 299, 308, 312, 316, 332, 371, 390, 396], "kg": [98, 107, 117, 186, 282], "khodadadi": 94, "khz": 262, "kilogram": 326, "kilomet": [31, 107, 161, 204, 308], "kin": 20, "kin_exp": 96, "kin_param_to_set": 114, "kind": [5, 98, 103, 104, 107, 155, 305, 308, 326, 327, 340], "kindli": 0, "kinet": [14, 25, 33, 86, 91, 94, 96, 98, 100, 106, 107, 114, 230, 306, 307, 385], "klass": 112, "kleibert": 94, "km": [31, 38, 98, 107, 161, 164, 165, 169, 204, 241, 308, 320], "know": [38, 92, 100, 101, 103, 110, 113, 118, 119, 304, 308, 319, 320, 332], "knowledg": [2, 91, 92, 319], "known": [12, 191, 232, 308, 310, 339], "kubelka": [240, 241, 320], "kubi\u010dka": 94, "kullback": 110, "kutta": 96, "kv\u00edtek": 94, "kwarg": [4, 8, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 129, 137, 138, 139, 140, 141, 146, 148, 149, 150, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 187, 188, 190, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 266, 267, 268, 269, 271, 272, 278, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 337, 339], "kwargsgetconc": [20, 106], "kwargsgetspec": 106, "l": [2, 18, 51, 61, 64, 68, 71, 75, 76, 77, 94, 103, 107, 166, 167, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 254, 304, 308, 311, 312, 314, 316, 319, 331, 332, 333, 334, 339, 353, 383], "l1": 110, "l1_ratio": 110, "l2": [110, 240], "l3": 240, "l_1": 311, "l_x": [304, 314], "l_y": [304, 314], "la": [2, 94, 306], "lab": [23, 24, 304, 324, 329, 344, 385, 398], "label": [4, 15, 16, 18, 21, 22, 23, 27, 31, 36, 37, 39, 42, 44, 46, 48, 51, 52, 55, 60, 61, 71, 75, 76, 86, 88, 90, 91, 98, 99, 107, 113, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 271, 305, 308, 311, 312, 313, 314, 316, 318, 319, 320, 327, 329, 332, 334, 336, 338, 339, 341, 354, 383], "labelcolor": 329, "labels_column": [23, 113], "labels_everi": [113, 311], "labor": 2, "laboratoir": 1, "laboratori": [16, 94], "labspec": [46, 51, 67, 68, 71, 80, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 333, 339, 346, 367], "labspec6": [46, 316], "lack": 310, "laetitia": 94, "laid": 107, "lakeh": 94, "lamb": [71, 80, 97, 102, 133, 290, 332, 339], "lambda": [98, 103, 104, 107, 164, 191, 265, 304, 308, 325], "langmuir": [18, 91, 104], "languag": [2, 13, 85, 324], "laod": 22, "lapack": 113, "larg": [11, 15, 75, 118, 163, 290, 305, 312, 329, 332, 339, 359], "larger": [64, 80, 97, 102, 106, 107, 113, 133, 140, 151, 163, 290, 292, 310, 311, 315, 329, 339], "largest": [18, 301, 337, 339], "larmor": [98, 262], "laser": [98, 320, 336], "laser_frequ": [98, 336, 375], "last": [6, 18, 19, 76, 91, 98, 101, 102, 106, 107, 124, 125, 128, 137, 139, 141, 146, 154, 157, 162, 166, 167, 171, 172, 175, 176, 177, 180, 187, 190, 192, 208, 209, 231, 254, 256, 259, 266, 269, 271, 272, 279, 285, 286, 290, 308, 311, 312, 318, 319, 328, 329, 331, 332, 333, 335, 338, 339, 386, 394], "latent": [304, 314], "later": [37, 76, 91, 97, 98, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 116, 118, 119, 259, 269, 290, 329, 392], "latest": [9, 85, 394], "latex": 329, "latex_preambl": 329, "latter": [67, 319, 339], "launch": [90, 310, 323], "launch_inst": 339, "launch_new_inst": 339, "laura": 94, "law": 2, "lazi": 397, "lb": [60, 75, 77, 157, 175, 331, 334], "lc": [1, 88, 90, 91, 92, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "lcsagh": 320, "lct": 320, "le": [2, 94, 230, 240, 241, 306, 316, 319], "lead": [21, 110, 312, 315, 329, 332, 339], "learn": [22, 87, 91, 93, 94, 97, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 189, 306, 311, 314, 323, 324, 329], "least": [2, 30, 31, 64, 94, 97, 102, 105, 106, 107, 111, 112, 115, 133, 138, 152, 173, 270, 290, 304, 306, 309, 310, 322, 329, 332, 386, 388, 392], "least_squar": [112, 392], "leastsq": [75, 77, 112], "leau": [94, 306], "leav": 329, "leblanc": 2, "left": [13, 48, 75, 87, 91, 96, 98, 106, 107, 113, 115, 119, 125, 126, 127, 128, 132, 166, 167, 171, 192, 193, 195, 196, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 255, 275, 276, 287, 304, 310, 312, 329, 332, 339], "left_bas": [75, 312], "left_ip": [75, 312], "left_op": 96, "leftarrow": 106, "legaci": 329, "legal": 2, "legend": [15, 16, 21, 23, 27, 31, 51, 52, 61, 71, 75, 217, 308, 312, 313, 314, 329, 332, 334, 336, 339], "legend_borderaxespad": 329, "legend_borderpad": 329, "legend_columnspac": 329, "legend_edgecolor": 329, "legend_facecolor": 329, "legend_fancybox": 329, "legend_fonts": 329, "legend_framealpha": 329, "legend_frameon": 329, "legend_handleheight": 329, "legend_handlelength": 329, "legend_handletextpad": 329, "legend_labelspac": 329, "legend_loc": 329, "legend_markerscal": 329, "legend_numpoint": 329, "legend_scatterpoint": 329, "legend_shadow": 329, "legisl": 2, "leibler": 110, "leiden": 94, "len": [6, 42, 48, 75, 106, 107, 117, 148, 163, 230, 234, 240, 241, 275, 287, 308, 312, 316, 319, 320, 329], "len_seq": 117, "length": [96, 98, 105, 107, 111, 115, 116, 117, 121, 129, 136, 163, 172, 190, 217, 273, 279, 292, 304, 310, 312, 320, 326, 329, 338, 339, 341], "leq": [171, 176, 177, 304], "less": [76, 96, 99, 102, 107, 110, 113, 115, 259, 308, 326, 329], "let": [5, 18, 20, 23, 27, 30, 31, 37, 38, 52, 55, 68, 75, 80, 91, 135, 308, 310, 311, 312, 313, 314, 315, 316, 319, 326, 328, 330, 332, 333, 334, 337, 338, 339, 341], "letter": [2, 103, 326, 329], "level": [9, 94, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 150, 174, 197, 259, 261, 269, 290, 306, 310, 315, 325, 329, 336, 384], "lf": [316, 319], "lfl": 320, "lfq": 320, "lfw": 320, "liabil": 2, "liabl": 2, "lib": [21, 24, 328, 339], "libor": 94, "librairi": [50, 53, 57, 107, 217, 240, 307], "librari": [3, 6, 31, 36, 39, 64, 87, 92, 101, 106, 107, 117, 283, 323, 324, 326, 329, 339, 383], "licenc": [1, 178], "licens": [0, 47, 92, 290, 315], "license": 2, "licensor": 2, "life": 316, "light": [98, 329], "lighter": 329, "lign": 326, "like": [5, 6, 8, 13, 31, 36, 39, 75, 76, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 122, 123, 150, 151, 154, 159, 163, 169, 205, 231, 259, 264, 269, 290, 299, 304, 308, 311, 312, 323, 327, 329, 337, 394, 397], "likelihood": [107, 275, 287], "lim": 334, "limit": [2, 21, 51, 80, 83, 97, 98, 107, 138, 140, 173, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 232, 236, 240, 308, 309, 311, 312, 313, 318, 320, 324, 326, 329, 332, 338, 339], "linalg": [31, 113], "line": [2, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 92, 95, 97, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 134, 152, 157, 170, 191, 197, 199, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 265, 288, 304, 308, 310, 311, 312, 318, 319, 320, 326, 328, 329, 335, 339, 383, 384, 397], "line_1": [30, 76, 308], "line_2": [30, 76, 308], "line_3": 76, "line_4": 76, "line_5": 76, "linear": [8, 29, 30, 32, 33, 64, 80, 97, 98, 101, 105, 107, 111, 112, 115, 124, 152, 190, 208, 209, 225, 304, 307, 309, 346, 361, 388, 389, 391], "linear_model": [105, 111], "linearcoord": [349, 388], "linearize_below": 98, "linearli": 304, "linearregress": [105, 111], "linebreak": 325, "linei": 308, "lines_antialias": 329, "lines_color": 329, "lines_dash_capstyl": 329, "lines_dash_joinstyl": 329, "lines_dashdot_pattern": 329, "lines_dashed_pattern": 329, "lines_dotted_pattern": 329, "lines_linestyl": 329, "lines_linewidth": 329, "lines_mark": 329, "lines_markeredgecolor": 329, "lines_markeredgewidth": 329, "lines_markerfacecolor": 329, "lines_markers": 329, "lines_scale_dash": 329, "lines_solid_capstyl": 329, "lines_solid_joinstyl": 329, "linesantialias": 329, "linestyl": [20, 75, 76, 80, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 312, 329, 331, 336], "linetyp": 199, "linewidth": [107, 115, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 310, 311, 329], "linex": 308, "linez": 308, "link": [8, 9, 83, 324, 353], "linspac": [36, 39, 98, 99, 107, 129, 172, 190, 308, 326], "linter": 6, "linux": [5, 85, 89, 95, 316, 331, 360, 369], "lisa": 94, "list": [4, 8, 31, 37, 42, 48, 51, 67, 84, 86, 91, 96, 97, 98, 99, 103, 106, 107, 112, 113, 115, 116, 117, 124, 156, 158, 159, 168, 169, 197, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 298, 299, 304, 305, 308, 310, 311, 312, 314, 316, 319, 320, 326, 329, 332, 335, 338, 343, 344, 353, 356, 391, 397, 398], "list_al": 329, "list_fil": 319, "list_of_tz_database_time_zon": 326, "listnd": 240, "liter": 316, "literatur": 310, "littl": [23, 64, 341], "live": 9, "ll": [6, 91, 97, 103, 309, 332], "ln": [98, 107, 190, 320], "lnd": 24, "load": [2, 4, 15, 22, 23, 24, 36, 38, 39, 41, 49, 51, 55, 57, 64, 67, 68, 75, 98, 107, 113, 116, 119, 210, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 271, 291, 304, 307, 308, 309, 310, 317, 322, 326, 327, 332, 333, 337, 375, 383, 385, 397], "load_iri": 22, "loader": 397, "lob": 308, "loc": [27, 71, 98, 314, 332, 334, 339], "loc2index": [95, 98], "local": [4, 47, 87, 96, 107, 163, 258, 319, 326, 329], "local_timezon": [107, 326], "localvar": 258, "localvr": 258, "locat": [6, 9, 51, 52, 86, 87, 95, 97, 98, 116, 152, 234, 304, 312, 316, 320, 329, 332, 336, 339, 347, 348, 392], "log": [11, 15, 16, 19, 20, 48, 87, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 150, 172, 174, 190, 240, 241, 259, 261, 269, 290, 310, 320, 324, 329, 339, 343, 367, 375, 380, 384, 388], "log10": 329, "log_bas": [98, 107, 190], "log_level": [17, 18, 19, 20, 21, 24, 30, 64, 75, 76, 77, 80, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 150, 259, 269, 290, 308, 310, 315, 384], "logarithm": 337, "logcosh": 101, "logfil": 114, "logger": 380, "logic": [107, 125, 128], "logit": 115, "loglevel": [18, 322], "lognorm": 329, "logspac": [98, 107, 172], "lollow": 319, "long": [23, 80, 117, 326, 329, 337], "longer": [2, 378, 396, 397], "look": [3, 6, 16, 42, 64, 75, 76, 310, 311, 312, 316, 323, 326, 329, 332, 338], "lookup": 329, "loop": [106, 304], "lopez": [94, 306], "lorentz": 175, "lorentzian": [191, 308], "lorentzianmodel": [288, 308], "loss": 2, "lost": [107, 280, 391], "lot": [6, 305, 326, 327], "louwen": 94, "low": [96, 118, 310, 320, 332], "low_bound": [30, 75, 76, 77, 308], "lower": [22, 23, 24, 27, 106, 107, 113, 140, 161, 310, 311, 312, 314, 315, 329, 334], "lowest": [115, 312], "lpf": 320, "lrf": [241, 320], "lsdoa": 96, "lsoda": 96, "lst": [308, 386], "lstq": 308, "lstsq": [29, 32, 33, 98, 106, 107, 307, 309], "lt": [15, 310, 311, 312, 326, 329, 339], "lu": [96, 113], "luca": 94, "lucia": 94, "lw": [30, 51, 71, 75, 76, 107, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 308, 339], "lwn": 320, "lyu": 94, "lz": 320, "lz1": 320, "m": [5, 21, 38, 48, 61, 75, 76, 85, 88, 89, 90, 94, 96, 98, 99, 100, 107, 117, 119, 136, 137, 147, 161, 171, 176, 177, 183, 186, 195, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 275, 276, 279, 282, 287, 290, 304, 312, 313, 314, 315, 316, 319, 323, 326, 329, 331, 334, 337, 341, 363, 377], "m1": [19, 24, 310, 311], "m5nb": [27, 42, 314, 316], "m5spec": [27, 42, 314, 316], "m_a": [55, 117], "m_b": 55, "m_from": 121, "m_p": 55, "ma": [107, 136, 155, 280, 392], "mac": [85, 95], "macchietti": [94, 306], "machin": [189, 319], "machinenam": 319, "maco": [5, 85, 88, 89], "made": [1, 2, 51, 98, 99, 103, 107, 151, 227, 240, 242, 304, 312, 314, 316, 319, 338, 366], "maeder": [94, 100, 304], "magazin": 94, "maghemit": [94, 306], "magic": 329, "magma": [91, 329, 337], "magma_r": 332, "magnet": [99, 326], "magnitud": [15, 98, 107, 117, 121, 308, 310, 312, 319, 326, 335, 339], "magnitudet": 117, "mahdi": 94, "mahdiyeh": 94, "mahsa": 94, "mai": [1, 2, 3, 38, 55, 64, 67, 68, 75, 86, 94, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 125, 128, 140, 158, 159, 162, 163, 190, 206, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 308, 319, 324, 326, 327, 329, 332, 333, 339, 349, 365, 369, 380, 386, 396], "mail": 329, "mail\u00e4nder": [1, 315], "main": [1, 2, 4, 6, 55, 86, 95, 98, 99, 107, 116, 153, 154, 161, 179, 305, 311, 319, 322, 324, 325, 326, 327, 332, 339, 346], "mainimum": [107, 145], "mainli": [16, 92, 112, 324], "maint": 5, "maintain": 6, "mainten": [2, 5], "majeur": 2, "major": [47, 99, 308, 325, 326, 329, 339, 394], "make": [2, 6, 9, 12, 21, 36, 37, 38, 39, 64, 76, 86, 91, 92, 95, 96, 97, 98, 99, 107, 113, 116, 117, 120, 133, 137, 139, 146, 152, 157, 162, 164, 166, 167, 171, 173, 175, 176, 177, 180, 192, 208, 209, 249, 254, 256, 270, 272, 286, 305, 308, 310, 312, 325, 326, 327, 329, 332, 336, 337, 339, 341, 368, 373], "makestyl": [329, 346], "mamba": [85, 86, 88, 89, 90, 91], "mambaforg": [88, 89, 90], "manag": [83, 84, 87, 116, 327], "mandatori": 329, "mani": [6, 38, 48, 83, 91, 92, 96, 107, 305, 310, 312, 315, 316, 324, 326, 379, 381], "manipul": [3, 35, 40, 57, 86, 98, 107, 117, 160, 230, 307, 319], "manner": 2, "manual": [6, 86, 92, 107, 133, 135, 138, 152, 158, 173, 208, 209, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 270, 272, 309, 331], "map": [47, 101, 107, 113, 115, 197, 200, 210, 211, 212, 213, 215, 216, 221, 310, 326, 329, 392], "marcel": 94, "marco": 94, "margarita": 94, "margin": [107, 158, 159, 329], "mari": 94, "mark": [6, 217, 308, 312, 325], "markdown": [12, 312], "marker": [75, 76, 77, 107, 115, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 308, 312, 314, 329, 392], "markeredgecolor": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "markeredgewidth": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "markerfacecolor": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "markermarkerstyl": 115, "markers": [23, 30, 31, 107, 113, 115, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 329, 397], "markers_fillstyl": 329, "market": 2, "markeveri": [30, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "markup": 9, "martin": 94, "mask": [6, 15, 21, 23, 30, 98, 107, 119, 124, 132, 155, 161, 179, 204, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 253, 255, 279, 280, 326, 327, 329, 330, 332, 335, 337, 375, 383], "masked_arrai": [107, 155, 204, 337], "masked_array_lik": 155, "masked_data": [107, 280], "maskedarrai": 107, "masoumeh": 94, "mass": [6, 48, 94, 96, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "massart": [14, 25, 33, 98, 100, 107, 141, 155, 307], "massimiliano": 94, "massiv": [94, 306], "master": [5, 6, 47, 89, 304, 314, 323, 346], "mat": [17, 19, 20, 24, 27, 42, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 310, 311, 314, 316, 332], "mat_": [42, 316, 386], "match": [96, 107, 117, 135, 140, 141, 163, 316, 337], "materi": [94, 306], "math": [21, 100, 101, 106, 110, 112, 113, 115, 118, 119, 171, 176, 311, 325, 327, 329, 346, 361], "mathbf": 304, "mathemat": [107, 322, 324, 326, 327, 330, 335, 349, 359], "mathrm": [22, 23, 55, 107, 229, 329], "mathtext": 329, "mathtext_bf": 329, "mathtext_c": 329, "mathtext_default": 329, "mathtext_fallback_to_cm": 329, "mathtext_fontset": 329, "mathtext_it": 329, "mathtext_rm": 329, "mathtext_sf": 329, "mathtext_tt": 329, "matlab": [19, 24, 42, 94, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 316], "matlabdata": [17, 19, 20, 24, 238, 239, 310, 311], "matplolib": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "matplotlib": [3, 18, 22, 23, 27, 31, 51, 86, 91, 92, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 263, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 322, 324, 326, 328, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 354, 356, 360, 368, 377, 380, 392], "matric": [17, 19, 96, 110, 238, 239, 290, 304, 310, 311, 314], "matrix": [18, 19, 20, 21, 24, 96, 97, 100, 101, 103, 104, 105, 106, 110, 111, 113, 118, 119, 304, 310, 311, 314, 326, 353], "matter": 311, "matthia": 1, "matur": 92, "maug": 94, "mauri": 94, "maurin": 94, "max": [15, 16, 20, 60, 61, 75, 94, 96, 98, 103, 106, 107, 113, 163, 225, 231, 308, 310, 312, 318, 319, 331, 334, 337, 341], "max_error": 318, "max_fun_cal": 112, "max_it": [30, 76, 97, 101, 106, 110, 112, 115, 133, 308, 310, 332], "max_lines_in_stack": 329, "max_rel_error": 318, "maxdiv": [106, 310], "maxim": [97, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 312], "maxima": [98, 107, 126, 127, 163, 193, 196, 309, 313, 322], "maximis": [304, 314], "maximum": [21, 30, 75, 97, 98, 101, 106, 107, 110, 112, 115, 118, 126, 127, 130, 133, 140, 144, 163, 193, 196, 227, 275, 286, 287, 304, 308, 310, 312, 329, 332, 334, 336, 341], "mayb": [36, 39, 318], "mb": [25, 28, 32, 34, 40, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 307], "mc": [94, 310, 334], "mcdonald": [94, 236, 318], "mcr": [14, 25, 33, 93, 94, 96, 98, 100, 101, 103, 106, 107, 110, 113, 118, 119, 230, 304, 306, 307, 309, 311, 322, 324, 353, 384, 385, 391], "mcr1": 310, "mcr2": 310, "mcr3": 310, "mcr4": 310, "mcr5": 310, "mcr_1": 20, "mcr_2": 20, "mcral": [19, 20, 100, 101, 103, 110, 113, 118, 119, 374, 375, 384, 385, 387], "mct": [44, 320], "md": 379, "mdpi": 94, "me": 329, "mean": [2, 17, 21, 47, 64, 97, 98, 99, 101, 102, 105, 107, 110, 111, 115, 124, 136, 152, 155, 165, 186, 259, 260, 275, 276, 282, 287, 314, 324, 326, 330, 332, 338, 354, 397], "measur": [2, 20, 22, 27, 47, 73, 74, 78, 94, 107, 110, 112, 115, 249, 275, 287, 304, 307, 312, 314, 319, 320, 326, 332], "mec": [31, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 312], "mechan": [338, 397], "mechanochem": [94, 306], "median": [102, 335], "medic": 94, "medium": [2, 329], "meet": 2, "mem": [25, 28, 32, 34, 40, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 307], "member": 55, "memo": 48, "memorandum": 2, "memori": [101, 107, 124], "menger": 103, "menghao": 94, "mention": [2, 10, 312, 316, 319], "menu": [87, 323], "merg": [5, 6, 24, 27, 42, 44, 46, 48, 67, 75, 107, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 260, 310, 311, 314, 316, 319, 320, 332, 396], "merit": [22, 24, 113, 311], "messag": [5, 6, 84, 96, 149, 160, 181, 289, 315, 325, 326, 339], "met": [6, 155, 329], "meta": [6, 96, 98, 107, 116, 320, 326, 336, 352, 375, 396], "metadata": [4, 6, 24, 31, 36, 39, 75, 91, 93, 98, 107, 116, 234, 240, 317, 326, 334, 352, 396], "metal": [94, 306], "meter": [38, 98, 107, 117, 183, 279, 326, 341], "meth": 8, "methan": [94, 306], "method": [6, 8, 9, 15, 17, 19, 22, 23, 30, 36, 38, 39, 42, 51, 52, 64, 67, 68, 71, 75, 76, 77, 80, 87, 88, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 124, 125, 128, 132, 133, 135, 137, 139, 142, 143, 146, 150, 151, 157, 162, 166, 167, 169, 171, 175, 176, 177, 180, 188, 192, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 230, 240, 245, 247, 248, 254, 255, 256, 259, 260, 269, 271, 272, 273, 277, 279, 284, 286, 290, 293, 295, 296, 297, 304, 306, 309, 310, 311, 313, 314, 315, 316, 319, 324, 325, 327, 328, 329, 331, 335, 336, 337, 346, 349, 351, 352, 354, 355, 356, 361, 366, 371, 374, 377, 384, 385, 386, 390, 391, 392, 396, 397], "method_1d": [107, 210, 211, 212, 213, 215, 216, 221, 312, 329], "method_2d": [107, 210, 211, 212, 213, 215, 216, 221, 312, 329], "method_3d": 329, "meting9": 20, "mew": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "mezzetti": 94, "mfc": [31, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 312], "mhvwert": 339, "mhz": 262, "michael": 94, "michel": 2, "micromamba": 85, "micromet": 240, "microsecond": 60, "microsoft": 85, "mid": [300, 301, 302, 303], "middl": [300, 301, 302, 303, 340], "might": [92, 96, 98, 107, 129, 315, 319, 334], "milagro": 94, "millinewton": 117, "millitesla": [99, 326], "mimic": [272, 305, 331, 332], "min": [21, 64, 80, 96, 98, 103, 107, 110, 113, 115, 119, 163, 164, 231, 304, 311, 312, 313, 316, 319, 329, 337, 338], "miniconda": 85, "miniforg": 89, "minim": [84, 85, 96, 105, 110, 111, 114, 135, 304, 309, 311, 312, 326, 339, 397], "minima": 312, "minimis": 135, "minimum": [2, 6, 21, 98, 107, 113, 126, 127, 131, 136, 139, 140, 163, 193, 196, 227, 304, 308, 312, 329, 334, 394], "minka": 113, "minor": [329, 365], "minoux": 94, "minu": 329, "minut": [6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 93, 98, 107, 183, 312, 319, 329, 338, 386], "mirror": [102, 259, 269, 339], "mirscann": 320, "miscellan": 2, "mismatch": 330, "miss": [86, 92, 124, 163, 330, 332, 360, 391], "mit": [1, 47], "miter": 329, "mix": [61, 92, 101, 110, 272, 331], "mixing_": 101, "mixtur": [20, 94, 100, 101, 103, 106, 110, 113, 118, 119, 304, 306, 310], "mle": [22, 113], "mlstore": 320, "mmbeamsplitt": 320, "mo_al2o3": [18, 37, 42, 91, 312, 318, 319, 338], "mo_al2o3_0": 318, "mo_al2o3_bas": [42, 318, 319], "mode": [5, 102, 112, 259, 269, 320, 329, 339, 394], "model": [0, 15, 17, 18, 20, 22, 23, 24, 27, 30, 31, 64, 75, 76, 80, 91, 93, 94, 96, 97, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 134, 170, 191, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 265, 288, 304, 309, 311, 313, 314, 315, 335, 365, 384], "modeldata": [107, 112], "modellinestyl": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "modern": [93, 329], "modif": [2, 107, 319, 320, 326, 353], "modifi": [2, 5, 47, 48, 92, 95, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 154, 192, 267, 268, 279, 300, 303, 319, 326, 328, 329, 337, 341, 370, 388, 397], "modififi": 320, "modl": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "modul": [2, 6, 7, 87, 316, 320, 332, 339, 359, 388], "modulu": 194, "mohammad": 94, "moistur": [27, 42, 314, 316], "molar": 94, "molecular": [94, 306], "moment": [80, 155, 323], "monodecconc": 106, "monodectol": 106, "monoincconc": 106, "monoinctol": 106, "monospac": 329, "monoton": [94, 106], "month": [0, 2], "more": [2, 6, 8, 10, 12, 19, 22, 36, 39, 55, 64, 80, 84, 85, 91, 92, 96, 99, 101, 102, 107, 113, 114, 115, 138, 140, 153, 163, 173, 259, 269, 304, 305, 308, 309, 316, 319, 320, 323, 324, 327, 329, 332, 339, 341, 348, 354, 370, 395, 396], "moreov": 339, "morin": 94, "mortim": [36, 39, 326], "mor\u00e1vkov\u00e1": 94, "most": [6, 85, 87, 94, 98, 107, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 304, 306, 311, 312, 324, 326, 328, 329, 331, 339, 396], "mostli": [15, 326], "mount": 87, "mouravieff": 94, "mous": 312, "move": [102, 151, 269, 329, 335], "mp": 334, "mp5nb": [27, 42, 314, 316], "mp5spec": [27, 42, 314, 316], "mp6nb": [27, 42, 314, 316], "mp6spec": [27, 42, 314, 316], "mpl": [91, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "mpl_event": 197, "mplstyle": [330, 346], "msdata": 242, "msg": [149, 181, 289, 339], "mt": [326, 329], "mu": [64, 110], "much": [22, 80, 92, 312, 318, 326, 339, 392, 397], "multi": [91, 93, 96, 391, 392], "multicoordin": [355, 375, 383, 395], "multidimension": [1, 107, 137, 139, 146, 157, 162, 166, 167, 171, 176, 177, 180, 192, 208, 209, 254, 256, 271, 272, 286, 338, 349], "multifil": [48, 320], "multimod": 106, "multipl": [6, 8, 18, 22, 48, 52, 59, 62, 73, 75, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 126, 127, 136, 157, 163, 172, 175, 193, 196, 197, 228, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 268, 272, 302, 307, 316, 326, 334, 335, 344, 346, 351, 390, 398], "multipli": [48, 96, 107, 110, 113, 229, 320], "multiplot": [198, 199, 200, 201, 202, 211, 214, 218, 219, 220, 332], "multiplot_map": 330, "multisampl": 304, "multivari": [19, 64, 91, 94, 97, 103, 106, 304, 306, 310, 311, 335], "munk": [240, 241, 320], "muschi": 94, "must": [42, 75, 87, 96, 98, 99, 100, 101, 102, 104, 106, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 129, 136, 137, 139, 141, 150, 154, 155, 157, 162, 163, 171, 176, 177, 180, 187, 197, 208, 217, 225, 230, 232, 240, 241, 259, 260, 269, 274, 283, 286, 305, 308, 314, 320, 324, 325, 326, 332, 339, 341], "mute": [329, 330], "mutivari": 349, "mvd": 320, "my": [5, 55, 87], "my_g": 101, "mycoord": [98, 107, 129], "mydatadir": 95, "mydataset": [36, 39, 308, 326], "mydefault": [329, 330], "myfil": [8, 292, 294], "mykhailo": 94, "mylabel": 98, "mynmrdata": 328, "myproj": 116, "myscript": 120, "m\u00e9gane": 94, "n": [4, 24, 34, 58, 64, 82, 85, 88, 89, 94, 98, 100, 103, 107, 115, 117, 119, 134, 137, 147, 152, 161, 164, 170, 171, 176, 177, 178, 179, 191, 197, 225, 229, 265, 266, 275, 287, 288, 302, 304, 306, 312, 314, 316, 319, 328, 329, 339], "n1": 326, "n_compon": [15, 16, 17, 20, 21, 22, 23, 24, 27, 30, 64, 91, 97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 304, 310, 311, 314, 332, 386], "n_cstr": 114, "n_featur": [22, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 259, 269, 290, 304], "n_iter": 101, "n_observ": [22, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 259, 269, 290, 304], "n_oversampl": 113, "n_pc": [16, 113], "n_reaction": 96, "n_sampl": [110, 115], "n_score": 113, "n_speci": 96, "n_target": [105, 106, 111, 115, 304], "n_time": 96, "na": 6, "naiv": 328, "nalidix": [94, 306], "name": [2, 5, 6, 9, 15, 18, 19, 20, 22, 23, 24, 27, 30, 36, 37, 39, 42, 44, 46, 47, 48, 55, 61, 75, 76, 77, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 126, 127, 129, 136, 142, 143, 147, 154, 172, 187, 188, 190, 193, 195, 196, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 271, 272, 275, 276, 284, 287, 291, 292, 294, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 324, 325, 326, 328, 329, 330, 331, 332, 334, 337, 338, 341, 384], "namespac": [305, 316, 324], "nan": [6, 98, 107, 115, 125, 126, 127, 193, 196, 337, 375], "nano": 95, "nano15010057": [94, 306], "nanohybrid": [94, 306], "nanomateri": 94, "nanomet": [37, 38], "nanoparticl": [94, 306], "nanosecond": 117, "narrow": [163, 336], "nat": 94, "nation": 2, "nativ": [107, 108, 116, 329], "natur": [2, 94, 306, 319, 336, 337], "navig": [9, 323], "nb": 312, "nb_trace": [17, 19, 20, 24, 64, 97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 311], "nblue": [97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119], "nbsp": [55, 91, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "nbsphinx": [311, 325], "ncol": [197, 330, 332], "nd": [6, 12, 30, 42, 48, 64, 67, 99, 107, 109, 116, 136, 147, 154, 195, 204, 230, 240, 241, 260, 275, 276, 287, 291, 292, 298, 299, 304, 305, 308, 324, 331, 333, 337, 383], "nd1": [67, 75, 98, 107, 116, 183, 188, 328, 330, 333], "nd1a": 330, "nd2": [67, 75, 98, 107, 116, 183, 188, 326, 328, 330, 333], "nd2a": 330, "nd3": [67, 75, 98, 107, 330, 333], "nd4": [67, 75, 330, 333], "nd4a": 330, "nd5": 333, "nd5b": 333, "nd6": 333, "nd7": 333, "nd8": 333, "nd_data": [36, 39], "ndadd": 330, "ndarrai": [8, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 110, 112, 113, 115, 118, 119, 125, 128, 135, 150, 151, 155, 166, 167, 175, 178, 183, 187, 266, 279, 280, 285, 301, 302, 304, 305, 319, 326, 327, 328, 337, 346, 356, 393], "ndarrat": 178, "ndata": [178, 301, 302], "ndataset": 302, "ndax": 107, "ndcomplex": 6, "ndcomplexarrai": [107, 260], "ndd": [45, 98, 107, 279], "nddataset": [4, 6, 8, 12, 16, 18, 19, 21, 22, 23, 27, 31, 38, 40, 42, 43, 44, 46, 48, 55, 59, 61, 63, 65, 66, 70, 75, 76, 77, 83, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 129, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 176, 177, 179, 180, 183, 188, 192, 195, 197, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 283, 284, 285, 286, 287, 290, 291, 292, 298, 299, 300, 303, 307, 309, 310, 311, 312, 313, 314, 316, 318, 319, 320, 322, 324, 328, 331, 334, 335, 336, 341, 346, 378, 386, 396, 397], "nddataset_3b0a2399": 337, "nddataset_413fad91": 337, "nddataset_413fad94": 337, "nddataset_413fad95": 337, "nddataset_413fad98": 337, "nddataset_4f56756c": [], "nddataset_5244417c": [], "nddataset_52a819ec": [], "nddataset_52a81a10": [], "nddataset_891056bc": 55, "nddataset_891056bd": 55, "nddataset_90449a0f": [], "nddataset_940ad6b5": 75, "nddataset_967b340": [], "nddataset_967b340a": [], "nddataset_967b340d": [], "nddataset_967b3411": [], "nddataset_e1c01e25": [], "nddataset_e1c01e26": [], "nddataset_ed1d300b": [], "nddataset_f9b414bc": 324, "nddataset_fcbc8490": 326, "nddataset_fd2547d4": 326, "nddataset_fd2547f8": 326, "ndez": 94, "ndim": [98, 107, 126, 127, 193, 196, 326, 336], "ndlb": 331, "ndlg": 331, "ndmath": [346, 359], "ndoh": [30, 308], "ndohcorr": 308, "ndp": 64, "ndpanel": 346, "nearest": [102, 259, 269, 329, 337], "necessari": [2, 23, 75, 87, 105, 111, 124, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 274, 305, 310, 315, 323, 326, 330, 331, 332, 372, 380], "need": [6, 9, 12, 13, 19, 22, 31, 42, 47, 48, 51, 64, 68, 75, 76, 80, 86, 87, 92, 95, 98, 101, 106, 113, 135, 150, 232, 308, 311, 312, 324, 326, 329, 333, 336, 339, 395, 397], "neg": [24, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 113, 115, 118, 119, 125, 128, 132, 146, 152, 154, 161, 166, 167, 187, 254, 255, 259, 304, 309, 310, 319, 338, 391], "negat": [146, 254], "negative_axi": 107, "neglig": [304, 310], "neighbor": [163, 312, 339], "neighbour": 312, "neither": [2, 92, 115, 315], "nematollah": 94, "nest": 396, "nesterenko": 94, "network": [2, 6, 94, 96, 306], "neural": [94, 306], "neuroinflammatori": [94, 306], "never": [6, 329], "nevertheless": 2, "new": [2, 5, 6, 12, 31, 36, 39, 45, 64, 75, 80, 84, 87, 88, 92, 94, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 125, 128, 137, 139, 141, 146, 147, 151, 157, 158, 159, 162, 165, 166, 167, 168, 169, 171, 175, 176, 177, 180, 192, 195, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 232, 254, 256, 260, 271, 272, 273, 274, 275, 276, 277, 279, 284, 286, 287, 298, 299, 304, 310, 314, 315, 316, 320, 324, 325, 326, 328, 329, 331, 332, 334, 341, 343], "new1": [60, 61], "new2": [60, 61], "new3": 61, "new4": 61, "new5": 61, "new_func": 6, "new_wodg": [107, 109, 116], "newargsgetconc": 106, "newargsgetspec": 106, "newcom": 10, "newer": [88, 90], "newest": 353, "newfid": 334, "newproj": 55, "news0": 318, "next": [75, 76, 106, 301, 308, 311, 312, 315, 322, 325, 326, 329], "nfev": 96, "ngreen": [97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119], "nh": 329, "nh4_y": 15, "nh4y": [15, 21, 23, 30, 42, 43, 52, 64, 87, 91, 98, 100, 107, 116, 119, 135, 136, 141, 147, 163, 188, 195, 240, 247, 266, 274, 275, 276, 285, 287, 292, 308, 313, 326, 329, 330, 332, 337, 341], "nice": 10, "nicer": 24, "nicola": 94, "nicolet": [240, 245, 247, 248, 316], "nieto": 94, "nikolai": 94, "nipal": 115, "nir": [27, 314, 332], "nist": [156, 368], "njev": 96, "nl": 308, "nla": 320, "nlb": 320, "nli": 320, "nlu": 96, "nm": [4, 16, 24, 27, 37, 38, 240, 314, 332], "nmd": 334, "nmf": [14, 25, 33, 97, 100, 101, 103, 106, 107, 113, 118, 119, 240, 304, 307, 332], "nmr": [1, 41, 49, 57, 60, 61, 78, 83, 92, 95, 98, 99, 107, 112, 157, 162, 166, 167, 178, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 270, 301, 302, 307, 316, 322, 324, 326, 328, 331, 335, 337, 361, 362, 364, 391, 392], "nmr_1d": 328, "nmr_2d": 328, "nmrdata": [45, 60, 61, 75, 76, 77, 326, 328, 331, 334, 340], "nmrdir": [75, 76, 77], "nmrglue": [1, 6, 45, 178, 368], "nndsvd": 110, "nndsvda": 110, "nndsvdar": 110, "nnl": [105, 106, 309, 387], "nnmf": [355, 386], "nogrid": [329, 330], "nois": [15, 16, 24, 67, 68, 91, 94, 118, 151, 163, 331, 332, 333, 339], "noisi": [31, 163, 308, 332], "nomask": [6, 107], "nominal_valu": 117, "non": [2, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 125, 128, 133, 138, 141, 152, 173, 187, 234, 237, 259, 270, 286, 304, 309, 310, 316, 329, 332, 334, 337, 346, 367, 388, 391, 395, 396], "none": [6, 8, 16, 17, 20, 21, 24, 27, 30, 36, 39, 51, 75, 76, 77, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 136, 140, 144, 145, 147, 152, 154, 155, 158, 159, 161, 162, 163, 164, 168, 169, 170, 171, 172, 178, 179, 180, 182, 187, 188, 190, 191, 193, 195, 196, 197, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 231, 233, 234, 235, 237, 243, 244, 258, 261, 265, 272, 273, 275, 276, 287, 288, 291, 298, 299, 300, 303, 308, 310, 312, 314, 316, 326, 328, 329, 332, 339, 375, 377, 383], "nonemarkeredgecolor": 329, "nonexistent_fil": 319, "nonfinit": 115, "nonneg": [107, 110, 275, 287, 332], "nonnegconc": 106, "nonnegspec": [106, 375], "nonrandom": [310, 311], "noqa": [6, 91, 315, 324], "nor": [2, 92, 115, 117, 315], "norm": [110, 115, 310, 329, 392], "normal": [16, 36, 39, 60, 61, 91, 100, 101, 106, 107, 113, 115, 170, 275, 286, 287, 305, 308, 310, 319, 329, 331, 334, 339, 346, 392], "normaldistribut": 101, "normandi": [1, 94], "normspec": [106, 310], "notabl": 2, "notat": [329, 334], "note": [6, 8, 15, 21, 22, 23, 36, 39, 42, 51, 64, 71, 75, 76, 83, 96, 98, 99, 100, 101, 103, 106, 107, 109, 110, 112, 113, 115, 116, 118, 119, 125, 126, 138, 158, 159, 163, 165, 173, 187, 188, 190, 193, 195, 207, 230, 231, 240, 241, 242, 245, 247, 248, 259, 272, 275, 287, 308, 310, 312, 316, 318, 319, 320, 326, 329, 330, 331, 332, 336, 337, 338, 339, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "notebook": [9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 87, 91, 92, 93, 304, 316, 320, 325, 329, 330, 334, 396, 397], "noth": [92, 319, 326, 388], "notic": [2, 64], "notifi": 373, "notimplementederror": 326, "nouar": 94, "nov": [316, 319], "novel": [94, 306], "now": [6, 18, 20, 23, 30, 31, 36, 37, 39, 45, 46, 47, 51, 55, 64, 68, 75, 76, 80, 91, 99, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 294, 308, 309, 310, 311, 312, 313, 315, 316, 319, 323, 325, 326, 328, 330, 332, 334, 336, 338, 339, 340, 341, 344, 346, 347, 348, 349, 351, 355, 356, 361, 366, 367, 369, 371, 374, 375, 376, 379, 384, 385, 386, 388, 389, 390, 391, 392, 394, 396, 397, 398], "nozero": 320, "np": [6, 16, 20, 31, 36, 39, 47, 75, 77, 96, 98, 106, 107, 117, 136, 165, 168, 169, 204, 205, 229, 279, 280, 298, 299, 305, 308, 326, 332, 337, 338, 339, 378], "nr": 2, "nred": [97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119], "nria": 2, "nrow": [197, 330, 332], "nshape": [134, 170, 191, 225, 265, 288], "nspec": 329, "nsr": 320, "nss": 320, "nterpol": 332, "nth": [97, 152], "nuclear": 94, "nucleu": [98, 262], "null": [39, 286, 304], "num": [98, 103, 107, 172, 187, 190, 326], "number": [2, 6, 15, 17, 21, 22, 23, 30, 51, 64, 80, 83, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 124, 125, 129, 132, 133, 135, 137, 138, 141, 146, 150, 156, 161, 162, 163, 165, 166, 167, 171, 172, 173, 176, 177, 178, 179, 187, 190, 192, 195, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 238, 239, 240, 249, 254, 255, 256, 259, 260, 266, 269, 274, 275, 287, 290, 302, 304, 311, 312, 313, 320, 326, 329, 332, 335, 336, 339, 365, 388], "number_of_contour": 329, "number_of_x_label": 329, "number_of_y_label": 329, "number_of_z_label": 329, "numbr": 337, "numer": [91, 94, 97, 98, 101, 107, 110, 121, 271, 315, 316, 319, 326, 327, 337], "numpi": [4, 6, 8, 9, 16, 20, 31, 36, 39, 47, 75, 77, 91, 92, 98, 99, 102, 106, 107, 109, 116, 117, 132, 136, 137, 139, 146, 150, 153, 155, 157, 162, 166, 167, 171, 175, 176, 177, 180, 188, 192, 204, 208, 209, 254, 255, 256, 259, 266, 269, 272, 280, 285, 286, 290, 298, 305, 308, 319, 327, 329, 332, 335, 336, 338, 339, 377, 378, 383], "numpydoc": [8, 397], "num\u00e9ro": [316, 319], "n\u00e9lieu": 94, "n\u00ef": [316, 319], "o": [15, 30, 31, 75, 84, 97, 115, 217, 314, 319, 321, 329], "obei": 20, "obj": [107, 116, 328], "object": [2, 6, 15, 16, 18, 20, 22, 23, 24, 27, 30, 31, 36, 39, 42, 64, 75, 76, 77, 80, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 137, 139, 140, 141, 142, 143, 150, 151, 154, 157, 158, 159, 161, 162, 164, 165, 168, 169, 171, 172, 175, 176, 177, 179, 180, 183, 184, 185, 186, 187, 188, 190, 193, 196, 204, 205, 207, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 260, 264, 271, 272, 273, 274, 277, 279, 283, 284, 286, 291, 292, 294, 298, 299, 304, 308, 310, 311, 313, 314, 315, 316, 319, 322, 324, 328, 329, 335, 338, 353, 384, 388, 396, 397], "oblig": 2, "obliqu": 329, "observ": [2, 18, 94, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 259, 269, 290, 304, 306, 311, 314, 341], "obtain": [17, 20, 21, 23, 76, 95, 96, 97, 100, 106, 304, 308, 310, 311, 312, 314, 315, 319, 320, 333, 334, 337, 338, 392], "obviou": [16, 312], "obvious": [38, 51, 308, 316, 332, 337], "occas": 2, "occur": [96, 121, 392], "occurr": 2, "oct": 320, "od": [96, 98, 107], "odd": [102, 163, 259, 266, 269, 339], "odesolut": 96, "odesolv": 96, "off": [15, 98, 100, 107, 129], "offer": [2, 31, 305, 323, 324, 326, 327, 329], "offfouri": 320, "offici": 85, "offlin": 370, "offrefer": 320, "offset": [24, 51, 64, 75, 76, 80, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 153, 154, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 311, 312, 313, 328, 329, 330, 337, 340, 346], "often": [6, 22, 92, 101, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 304, 305, 311, 314, 330, 334], "ogiciel": 2, "oh": [30, 308, 329], "oil": [27, 42, 314, 316], "ois": 94, "ok": [64, 80], "okcharact": 320, "old": [344, 397, 398], "old_func": 6, "older": 369, "oliviero": [94, 306], "olsz\u00f3wka": 94, "olynomi": 332, "om": 94, "omidikia": [94, 106], "omnic": [21, 41, 42, 49, 57, 91, 98, 107, 109, 116, 135, 141, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 271, 274, 291, 307, 313, 316, 317, 318, 321, 326, 329, 335, 341, 354], "omnic_seri": 248, "omnnic": 52, "onc": [6, 13, 42, 75, 99, 107, 302, 310, 312, 314, 329], "one": [2, 6, 8, 18, 19, 20, 22, 31, 36, 37, 38, 39, 52, 68, 85, 95, 96, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 125, 126, 127, 128, 136, 140, 141, 159, 161, 168, 169, 179, 186, 193, 195, 196, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 273, 275, 276, 282, 287, 291, 292, 299, 305, 308, 309, 310, 311, 312, 314, 315, 316, 319, 320, 324, 325, 326, 328, 329, 330, 332, 333, 337, 338, 339, 348, 371, 384, 397], "ones": [27, 106, 107, 116, 158, 159, 161, 168, 169, 179, 205, 298, 299, 311, 314, 323, 326, 329], "ones_lik": [107, 158, 159, 168, 169, 204, 298, 299], "oneslik": [107, 205], "ongo": 6, "onli": [2, 6, 12, 16, 23, 30, 51, 64, 68, 75, 76, 86, 89, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 121, 124, 135, 136, 137, 139, 150, 155, 157, 164, 171, 175, 176, 177, 187, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 272, 286, 292, 294, 308, 310, 311, 312, 313, 315, 316, 319, 320, 324, 326, 328, 329, 330, 332, 333, 335, 339, 341, 354, 373, 376, 391, 396, 397], "onlinelibrari": 94, "only_first": 107, "onto": [94, 101, 113, 306, 311], "oop": 315, "oordin": [107, 145], "op": [326, 334], "opaqu": 115, "open": [1, 2, 12, 13, 85, 90, 95, 98, 107, 116, 129, 187, 188, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 243, 245, 247, 248, 249, 250, 251, 252, 291, 292, 294, 316, 318, 319, 320, 323, 328, 329, 334, 367, 396], "openpreamplifi": 320, "openrefer": 320, "oper": [2, 10, 21, 37, 38, 48, 84, 98, 101, 103, 107, 126, 127, 136, 141, 147, 193, 195, 196, 227, 274, 275, 276, 287, 308, 317, 320, 322, 324, 327, 330, 331, 332, 335, 336, 338, 341, 346, 349, 361, 392], "operand": 330, "operando": [94, 100, 306], "opf": 320, "opinion": 92, "opportun": 2, "opposit": 262, "opt": 339, "optic": [92, 94, 98, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 306, 316, 320, 336, 374], "optical_veloc": 375, "optim": [19, 20, 30, 75, 76, 77, 80, 96, 106, 114, 308, 309, 332, 381, 388, 392, 397], "optimis": [19, 20, 309, 310], "optimizer_kwarg": 96, "optimum": [103, 311, 339], "option": [2, 4, 5, 8, 11, 19, 51, 85, 88, 90, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 179, 180, 184, 187, 188, 190, 192, 193, 195, 196, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 264, 266, 269, 270, 271, 272, 273, 275, 276, 277, 279, 284, 285, 286, 287, 290, 291, 292, 294, 298, 299, 308, 310, 315, 319, 321, 326, 329, 331, 332, 360, 392, 394], "opu": [1, 41, 49, 57, 107, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 307, 316, 317, 321, 354, 389, 396], "oral": 2, "orang": 3, "orcid": 1, "order": [2, 64, 68, 71, 75, 80, 91, 94, 96, 97, 98, 99, 102, 104, 107, 110, 152, 158, 208, 209, 225, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 269, 271, 290, 304, 308, 310, 313, 316, 317, 326, 332, 333, 336, 338, 339, 341, 355, 356, 360, 373, 384], "ordin": [151, 310], "ordinari": [105, 106, 111], "ored": 332, "org": [6, 85, 94, 294, 329], "organ": [94, 107, 306], "organis": 316, "orgin": [107, 116, 188], "origin": [2, 5, 6, 10, 14, 15, 18, 19, 20, 24, 25, 27, 31, 33, 37, 43, 47, 48, 55, 67, 68, 71, 89, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 124, 141, 151, 155, 157, 175, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 302, 304, 307, 308, 310, 311, 319, 320, 326, 329, 330, 332, 333, 334, 335, 336, 339, 341], "orphan": 92, "orthonorm": 304, "oserror": 316, "osqp": [103, 392], "osx": [85, 95, 316], "ot": 96, "other": [1, 10, 12, 19, 22, 51, 64, 75, 76, 84, 92, 95, 96, 97, 98, 99, 100, 101, 103, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 129, 137, 139, 141, 146, 148, 150, 157, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 175, 176, 177, 179, 180, 183, 184, 187, 188, 190, 192, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 260, 266, 269, 272, 279, 280, 285, 286, 290, 291, 298, 299, 304, 305, 308, 310, 311, 312, 314, 316, 318, 319, 320, 323, 324, 325, 326, 327, 328, 329, 330, 334, 335, 337, 339, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "other_data_typ": 320, "otherwis": [98, 107, 110, 113, 115, 119, 121, 137, 139, 163, 171, 172, 176, 177, 187, 190, 195, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 275, 284, 286, 287], "oto": 24, "ouput": 19, "our": [6, 23, 84, 91, 98, 310, 314, 319, 323, 326, 329, 336], "out": [2, 20, 98, 99, 101, 107, 110, 117, 118, 125, 129, 135, 141, 155, 162, 163, 180, 258, 274, 292, 294, 304, 310, 312, 324, 326, 328, 329, 337, 338, 339], "outer": [124, 330], "outil": [94, 306], "outlet": 114, "outlier": 68, "output": [17, 18, 21, 31, 75, 76, 80, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 122, 123, 129, 135, 155, 158, 161, 164, 165, 172, 179, 190, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 258, 259, 269, 291, 294, 305, 308, 310, 312, 315, 316, 319, 322, 328, 332, 337, 380, 396], "output_path": 291, "outsid": [2, 107, 140, 319, 338, 339], "over": [2, 80, 98, 101, 107, 117, 125, 126, 127, 128, 136, 164, 165, 172, 187, 190, 193, 195, 196, 229, 275, 276, 287, 304, 332, 339], "overal": [304, 397], "overestim": 312, "overfit": 332, "overlap": [94, 100, 330], "overrid": [107, 112, 159, 169, 205, 299], "overview": [9, 322, 324, 325, 335, 368], "overwrit": [43, 99, 305, 324], "overwrite_data": 55, "own": [0, 2, 83, 92, 101, 322, 325], "owner": 2, "oxford": 94, "oxid": [94, 306], "ozaki": [94, 151], "p": [1, 75, 76, 94, 103, 104, 114, 209, 230, 240, 241, 304, 312, 316, 319, 329, 332, 334, 337, 339], "p15": 75, "p2a": 320, "p2k": 320, "p2l": 320, "p2r": 320, "p350": [55, 232, 252], "pa": [241, 320], "paavo": 94, "packag": [1, 6, 17, 19, 21, 22, 23, 24, 27, 42, 47, 48, 84, 86, 87, 89, 92, 98, 107, 189, 321, 324, 326, 328, 329, 339, 347, 353, 365, 372, 391, 394, 396, 397], "pad": [102, 259, 269, 312, 329], "page": [5, 6, 12, 84, 94, 309, 320, 340, 379], "pair": [20, 97, 135, 138, 173, 332], "palatino": 329, "palett": [329, 330], "panda": [3, 11, 346], "pane": 87, "panetso": 94, "paper": [19, 42, 43, 329, 330, 339, 353], "par": 328, "parabol": [225, 308], "paragraph": 2, "parallel": 101, "paralysi": 2, "param": [6, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 320, 332, 390], "param_to_optim": [20, 114], "param_to_set": 114, "paramet": [4, 6, 18, 30, 42, 47, 51, 61, 64, 67, 68, 75, 76, 77, 80, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 183, 184, 187, 188, 190, 192, 193, 195, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 284, 285, 286, 287, 290, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 311, 312, 316, 317, 322, 326, 331, 332, 333, 334, 339, 346, 374, 383, 385, 386, 388, 390, 392], "parameter": 96, "parameter_nam": 8, "parametersapod": 320, "parametersother_data_typ": 320, "parametr": 6, "parent": [107, 109, 116, 120, 339], "parenthes": 325, "pari": [2, 329], "pariti": [27, 314], "parityplot": [27, 115, 314], "part": [2, 6, 11, 12, 15, 21, 64, 76, 98, 107, 126, 132, 142, 143, 193, 255, 304, 309, 324, 329, 334, 337, 341, 391], "parti": [2, 318], "partial": [1, 2, 115, 304, 309, 322, 326, 386], "particular": [2, 92, 115, 117, 155, 305, 308, 312, 332, 333, 338], "particularli": [85, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 326, 331, 397], "pass": [5, 6, 8, 15, 18, 31, 42, 47, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 125, 128, 154, 161, 162, 164, 165, 179, 207, 217, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 308, 312, 314, 315, 320, 326, 329, 332, 392], "passant": 312, "past": [102, 259, 269], "pastel": [329, 330], "patch": [115, 197, 329], "patch_antialias": 329, "patch_edgecolor": 329, "patch_facecolor": 329, "patch_force_edgecolor": 329, "patch_linewidth": 329, "patent": 2, "path": [4, 6, 9, 15, 30, 42, 45, 60, 61, 85, 86, 87, 98, 107, 108, 109, 116, 188, 206, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 319, 320, 321, 325, 326, 328, 329, 331, 334, 336, 340], "path1": 316, "path2": 316, "path3": 316, "path_a": 135, "path_simplifi": 329, "path_simplify_threshold": 329, "path_sketch": 329, "path_snap": 329, "pathclean": [107, 109, 116, 188, 328, 331, 346], "pathlib": [42, 107, 108, 109, 116, 188, 206, 230, 234, 240, 241, 291, 292, 294, 321, 328], "pathnam": [319, 321], "pattern": [6, 75, 94, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 306, 316, 319, 396], "paul": [94, 236, 318], "pawel": 94, "pc": [22, 23, 113, 310, 311], "pca": [14, 15, 19, 20, 24, 25, 33, 93, 100, 101, 103, 106, 107, 110, 118, 119, 150, 189, 240, 304, 307, 309, 324, 332, 354, 374, 383, 386, 390, 397], "pchip": [64, 91, 97, 124, 332], "pchipinterpol": [97, 332], "pd": 319, "pd_101": [240, 316, 319], "pd_102": [316, 319], "pd_103": [316, 319], "pd_104": [316, 319], "pd_21": [245, 316], "pd_3": [316, 319], "pd_4": [316, 319], "pd_5": [316, 319], "pdata": 76, "pdf": [94, 329], "peak": [48, 67, 68, 73, 74, 75, 78, 80, 91, 92, 94, 97, 98, 100, 107, 112, 133, 135, 138, 151, 152, 163, 173, 227, 249, 270, 304, 306, 307, 309, 320, 322, 324, 332, 333, 339, 391], "peak_find": 308, "peak_height": [75, 312], "peak_posit": [75, 312], "peakslist": 312, "pecuniari": 2, "pellegrino": 94, "pen": [51, 107, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 312, 329, 339], "penal": [102, 290], "penalti": 110, "pengbo": 94, "per": [6, 98, 107, 117, 119, 186, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 275, 282, 326, 329], "percent": [97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 148, 310, 313], "percentag": [113, 150], "percet": 311, "perf": 5, "perfect": [64, 94, 333, 339], "perform": [2, 5, 15, 16, 18, 19, 20, 22, 23, 24, 27, 30, 37, 38, 60, 64, 75, 77, 91, 94, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 124, 125, 128, 133, 135, 137, 138, 139, 140, 146, 152, 155, 157, 162, 163, 165, 166, 167, 171, 173, 176, 177, 180, 192, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 266, 270, 272, 285, 286, 306, 308, 310, 313, 319, 323, 326, 329, 330, 331, 332, 333, 334, 336, 388, 390, 392], "perhap": [64, 323, 324], "period": [2, 8], "perman": [2, 316, 329], "permit": 320, "permittedsampl": 320, "permut": [107, 284], "perpendicular": 329, "persist": 117, "person": 2, "petal_length": 22, "petal_width": 22, "petr": 94, "petroff10": [329, 330], "pfeiffer": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 363], "pfr": 353, "pgn": 320, "pgr": 320, "phase": [75, 114, 166, 167, 208, 209, 241, 320], "phc0": [75, 77, 208, 209, 334], "phc1": [77, 208, 334], "phi": [272, 331], "philipp": 94, "photoacoust": [240, 241, 320], "photovolta": 320, "phr": 320, "phrf": [241, 320], "phsm": [241, 320], "phy": 94, "physic": [2, 94, 117], "physico": [103, 104], "phz": 320, "pi": [36, 39, 157, 170, 171, 175, 176, 177, 191, 272, 308, 325, 331], "pick": [73, 74, 78, 107, 112, 249, 307, 332], "piecewis": [64, 94, 97, 152, 332], "pierr": 94, "pii": 94, "pin": 383, "pint": [38, 98, 107, 117, 121, 279, 369, 374, 377, 385], "pip": [5, 6, 84, 85, 86, 87, 88, 89, 90, 91, 355, 368, 394], "pipe": [107, 329], "pivot": [208, 209, 334], "pix": 94, "pixel": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "pk": [75, 76, 77, 209, 308, 312, 334], "pka": 320, "pkl": 320, "pl": [26, 28, 33, 93, 107, 115, 230, 263, 304, 307, 314, 324], "place": [2, 6, 51, 96, 98, 107, 117, 132, 135, 186, 255, 281, 282, 332], "plai": 339, "plain": 117, "plainquant": [117, 121], "plainunit": [117, 121], "plane": [36, 39], "plant": 92, "plasma": [94, 306], "plateau": 163, "plateau_s": [163, 312], "platform": [6, 12, 85, 92, 93, 339, 369], "pleas": [5, 6, 10, 12, 83, 92, 324, 329], "plf": 320, "plot": [3, 8, 15, 16, 18, 20, 22, 23, 24, 27, 30, 31, 35, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 53, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 86, 91, 93, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 152, 197, 198, 199, 200, 201, 202, 203, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 240, 307, 308, 309, 310, 311, 313, 314, 322, 324, 326, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 367, 368, 377, 383, 384, 386, 390, 392, 396, 397], "plot1d": 217, "plot2d": [346, 348, 383], "plot_1d": [214, 218, 219, 220, 337], "plot_2d": [203, 213, 215, 216, 221, 222, 223, 224], "plot_3d": [222, 223], "plot_a_create_dataset": [36, 40, 307], "plot_b_coordin": [37, 40, 307], "plot_bar": [48, 211, 218, 219, 220], "plot_baseline_correct": [64, 65, 307], "plot_c_unit": [38, 40, 307], "plot_denois": [67, 69, 307], "plot_despik": [68, 69, 307], "plot_efa": [15, 25, 307], "plot_efa_keller_massart": [16, 25, 307], "plot_fast_ica": [17, 25, 307], "plot_filt": [71, 72, 307], "plot_fit": [30, 32, 307], "plot_generic_read": [42, 49, 307], "plot_imag": [39, 46, 47, 212, 213, 216, 221, 222, 223, 329], "plot_iri": [18, 25, 307], "plot_lstsq_single_equ": [31, 32, 307], "plot_map": [18, 37, 46, 76, 212, 213, 215, 221, 222, 223, 329, 330], "plot_mcrals_chrom1": [19, 25, 307], "plot_mcrals_kinet": [20, 25, 307], "plot_model": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "plot_multipl": [50, 52, 53, 57, 107, 152, 211, 214, 218, 219, 220, 230, 307, 313, 329, 339, 357, 390], "plot_nmf": [21, 25, 307], "plot_pca_iri": [22, 25, 307], "plot_pca_spec": [23, 25, 307], "plot_pen": [31, 211, 214, 219, 220, 308, 312], "plot_pl": [27, 28, 307], "plot_plot": [52, 53, 307], "plot_plot_multipl": [51, 53, 307], "plot_prefer": [39, 40, 307], "plot_proc_em": [60, 62, 307], "plot_proc_sp": [61, 62, 307], "plot_processing_cp_nmr": [75, 78, 307], "plot_processing_nmr": [76, 78, 307], "plot_processing_nmr_relax": [77, 78, 307], "plot_processing_raman": [80, 81, 307], "plot_project": [55, 56, 307], "plot_read_ir_from_omn": [43, 49, 307], "plot_read_ir_from_opu": [44, 49, 307], "plot_read_nmr_from_bruk": [45, 49, 307], "plot_read_raman_from_labspec": [46, 49, 307], "plot_read_renishaw": [47, 49, 307], "plot_read_spc": [48, 49, 307], "plot_result": 80, "plot_scatt": [31, 55, 75, 76, 211, 214, 218, 220, 308, 312], "plot_scatter_pen": [211, 214, 218, 219], "plot_simplisma": [24, 25, 307], "plot_stack": [15, 36, 39, 43, 212, 213, 215, 216, 222, 223, 329, 341], "plot_surfac": [212, 213, 215, 216, 221, 223, 310, 311, 329], "plot_waterfal": [212, 213, 215, 216, 221, 222, 329], "plot_with_pp": 76, "plotdistribut": [18, 91, 103], "plotlcurv": [18, 103], "plotli": 329, "plotmerit": [17, 18, 19, 20, 24, 30, 75, 76, 77, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 308, 311, 374], "plotnonfinit": 115, "plottitl": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "plsregress": [27, 309, 322, 386], "plt": 31, "plu": 329, "pluggi": 6, "plugin": 6, "plural": 2, "plus_and_minus_sign": 329, "pl\u00e9del": 94, "pmid": 94, "png": 329, "pnnl": [106, 387], "po": [30, 76, 107, 134, 170, 191, 265, 271, 288, 308, 312, 320], "point": [20, 21, 64, 75, 76, 80, 91, 96, 98, 101, 106, 107, 113, 115, 124, 129, 132, 137, 146, 151, 162, 163, 166, 167, 171, 176, 177, 192, 195, 219, 240, 254, 255, 256, 275, 287, 308, 310, 312, 316, 324, 325, 329, 330, 332, 334, 336, 338, 339, 386], "polar": 329, "polaraxes_grid": 329, "poli": 48, "polici": 113, "pollut": [94, 306], "polyfit": [8, 332], "polynom": [97, 225, 308], "polynomi": [8, 64, 80, 91, 97, 102, 133, 138, 152, 173, 225, 259, 269, 270, 308, 313, 339], "polynomialbaselin": 308, "polyolefin": [94, 306], "ponant": 2, "pool": 96, "poor": [67, 333], "popul": [107, 275, 287], "popular": [92, 310, 311], "port": [316, 319], "portion": 48, "pose": 94, "poshb": [134, 170, 191, 265, 288], "posit": [18, 21, 64, 75, 76, 80, 98, 102, 105, 106, 107, 111, 125, 129, 132, 141, 154, 161, 163, 166, 167, 207, 255, 259, 269, 308, 312, 319, 337], "positiveoddinteg": [102, 259, 269], "posixpath": [42, 43, 55, 316, 318, 328], "poslb": [134, 170, 191, 265, 288], "possess": 326, "possibl": [2, 6, 8, 10, 22, 30, 31, 36, 39, 97, 98, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 124, 169, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 305, 310, 311, 312, 315, 319, 320, 326, 328, 329, 330, 332, 333, 339, 355, 356, 372, 388, 392], "possibli": [2, 98, 107, 312, 320], "post": [12, 319, 324], "poster": [329, 330], "postprocess": 113, "postscript": 329, "potenti": [6, 97, 133], "pow": [61, 228, 268, 272, 326, 331], "powder": [94, 306], "power": [91, 93, 98, 107, 113, 115, 162, 180, 190, 226, 301, 310, 335], "power_iteration_norm": 113, "pp": [22, 61, 75, 76, 77, 310, 311, 328, 331, 334], "ppm": [75, 76, 77, 95, 107, 162, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 262, 334], "pr": 320, "pra": 320, "practic": [9, 91, 94, 107, 275, 287, 319, 321], "pre": [11, 96, 98, 101, 104, 107, 165, 329], "preambl": [2, 329], "preamplifi": 320, "preced": [308, 316, 326], "precis": [96, 107, 275, 287, 312], "predefin": [97, 104], "predict": [27, 31, 75, 77, 105, 106, 111, 112, 113, 115, 304, 308, 314], "predmin": 304, "pref": [18, 23, 37, 38, 51, 68, 71, 75, 113, 232, 308, 312, 313, 328, 329, 330, 332, 333, 334, 336, 337, 339, 340, 341, 397], "prefer": [4, 15, 18, 19, 23, 37, 38, 39, 42, 43, 45, 46, 51, 52, 60, 61, 64, 68, 71, 75, 76, 77, 80, 86, 87, 107, 113, 117, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 232, 234, 240, 261, 291, 292, 308, 312, 313, 316, 323, 324, 326, 328, 330, 332, 333, 334, 336, 337, 339, 340, 341, 346, 372, 386, 397], "preferebl": [98, 107, 129], "preferred_unit": 117, "prefix": [5, 30, 76, 305, 324], "prepar": [91, 322, 324], "prepend": 316, "preprocess": [15, 80, 93, 163, 316, 331, 335], "prerequisit": [91, 312, 313, 332, 338], "presenc": [2, 92, 312, 326], "present": [6, 19, 20, 75, 89, 98, 107, 113, 230, 231, 233, 235, 240, 241, 243, 244, 305, 310, 311, 312, 316, 318, 319, 320, 324, 329, 333, 337, 371, 372, 375], "preserv": [91, 93, 333], "press": 325, "pressur": [18, 37, 91, 94, 103, 306], "pretermin": 332, "pretti": 312, "prevail": 2, "prevent": [5, 92, 95, 329, 365], "previou": [2, 23, 37, 75, 76, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 172, 308, 310, 312, 319, 320, 326, 329, 332, 334, 339, 349, 365, 390], "previous": [18, 31, 68, 107, 253, 310, 319, 320, 329, 332, 333, 396, 397], "primer": 9, "princip": [2, 97, 100, 101, 103, 106, 110, 113, 118, 119, 304, 309, 322, 332], "principl": [2, 11, 95, 107, 124, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "print": [12, 18, 19, 20, 23, 24, 27, 31, 36, 37, 39, 42, 55, 75, 76, 77, 84, 89, 91, 98, 107, 112, 113, 116, 119, 252, 262, 264, 274, 279, 308, 310, 311, 312, 314, 315, 318, 319, 326, 328, 329, 330, 334, 336, 338], "print_hello_info": 120, "print_info": 55, "print_method": 328, "printabl": 316, "printev": [22, 113, 310, 311], "prior": [2, 311, 336], "prioriti": [120, 124, 162, 257], "privat": 6, "prl": 320, "probabl": [75, 92, 312, 326, 329, 332, 338], "probe": 94, "problem": [12, 22, 84, 94, 96, 101, 105, 111, 315, 316, 330, 332, 333, 341, 350, 356, 359, 360, 362, 363, 375, 379, 380, 390], "problemat": 92, "proce": [88, 90], "procedur": [68, 92, 110, 308, 310, 324, 333], "proceed": 2, "process": [0, 6, 18, 19, 64, 75, 78, 81, 83, 86, 92, 93, 97, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 150, 151, 237, 249, 272, 290, 307, 308, 310, 315, 316, 319, 322, 324, 327, 329, 330, 331, 334, 340, 349, 359, 361, 362, 391, 392, 394, 397], "process_on": 339, "processor": [64, 71, 80, 97, 102, 133, 138, 152, 173, 270, 304, 335, 390], "processs": 324, "procno": [61, 75, 76, 77, 249, 331, 334], "procs_fil": 75, "prod": 117, "produc": [6, 22, 94, 117, 269, 306, 337, 383, 391], "product": [2, 92, 96, 104, 110, 117, 155, 311, 332], "profession": 2, "profil": [16, 19, 20, 24, 96, 100, 101, 106, 114, 304], "profit": 2, "program": [2, 75, 84, 85, 92, 103, 304, 323, 324, 340, 386], "programmat": 326, "progress": [98, 107, 172, 323, 353, 367], "proj": [55, 116, 328], "proj2": 328, "project": [1, 6, 12, 13, 56, 83, 84, 87, 92, 101, 107, 113, 120, 188, 210, 212, 213, 215, 216, 221, 222, 223, 257, 258, 304, 307, 311, 314, 316, 322, 324, 329, 346, 352], "project_01e0e1ec": 328, "project_1": [55, 116], "project_57574ffc": [], "projects_nam": [55, 116], "promin": [75, 94, 163, 306], "prompt": [85, 90], "prone": [99, 326], "prop": 163, "prop_cycl": 329, "propag": [98, 107, 126, 127, 155, 193, 196], "proper": [4, 113, 310, 311], "properli": [2, 107, 116, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 354, 388], "properti": [2, 12, 27, 75, 94, 98, 99, 107, 116, 163, 197, 304, 306, 309, 310, 314, 324, 326, 332, 346], "proplbl": 316, "proport": [148, 308], "propos": [12, 84, 151, 332], "proprietari": [48, 319, 320], "propval": [27, 42, 314, 316], "protect": 2, "protein": [27, 42, 314, 316], "protocol": [4, 135, 141, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 274, 291, 292, 294, 304], "provid": [2, 4, 9, 87, 91, 92, 93, 96, 97, 98, 100, 101, 103, 104, 106, 107, 110, 112, 113, 115, 116, 118, 119, 124, 138, 158, 159, 163, 164, 165, 168, 169, 173, 204, 205, 217, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 266, 275, 285, 287, 291, 292, 294, 298, 299, 309, 310, 316, 319, 324, 325, 326, 329, 339, 340, 392], "provis": 2, "ps_exp": 208, "pscp": [55, 107, 116, 188, 328], "pseudo": [101, 249, 392], "pssnf": 329, "pt": [118, 146, 166, 167, 192, 254, 256], "pth": 331, "ptp": [21, 80, 98, 107], "public": [2, 324, 329, 379], "publicli": 305, "publish": [0, 2, 294, 353], "pull": [5, 6, 10, 12, 83, 84, 89, 366], "puls": [75, 340], "pure": [19, 20, 24, 106, 118, 272, 304, 308, 331], "purest": 118, "puriti": 118, "purpl": 312, "purpos": [2, 22, 87, 92, 311, 319, 324, 326, 338], "pursuant": 2, "push": [5, 6], "put": [6, 324, 329], "py": [4, 6, 9, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 95, 307, 315, 328, 339, 346], "py3": 346, "py_wdf_read": 391, "pycharm": 323, "pyplot": [31, 329], "pyqt": [86, 360], "pyqt5": 86, "pyrazol": [94, 306], "pyridin": 94, "python": [0, 1, 5, 9, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 86, 87, 88, 89, 90, 91, 93, 101, 106, 112, 206, 230, 234, 240, 241, 305, 315, 316, 319, 320, 323, 324, 329, 338, 339, 361, 369, 392, 394], "python3": [5, 21, 24, 85, 328, 339], "q": [18, 84, 91, 103, 104, 326], "qin": 94, "qp": 392, "qpsolver": 103, "qquad": [171, 176, 177], "qr": 113, "qsin": [61, 157, 171, 175, 267, 268, 272, 286, 331], "qt": [329, 356, 357], "quadera": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 363], "quadprog": [103, 367, 392], "quadrat": [80, 97, 152, 163, 308, 332], "qualiti": [17, 64, 329, 386], "quant_list": 117, "quantit": 94, "quantiti": [96, 98, 107, 121, 136, 147, 157, 161, 164, 175, 184, 186, 195, 204, 208, 209, 262, 275, 276, 279, 287, 299, 304, 312, 319, 356, 361], "quaternion": [76, 328, 337], "quatrat": 103, "question": [84, 107, 153, 322], "quick": [93, 324, 325], "quickli": [304, 324], "quickstart": [93, 326], "quit": [16, 83, 323, 332], "quot": 8, "quotat": 325, "r": [17, 24, 31, 55, 60, 61, 68, 71, 75, 77, 80, 94, 105, 107, 111, 115, 166, 167, 240, 254, 304, 308, 314, 316, 319, 324, 328, 329, 331, 332, 333, 334, 337, 339], "r1": [94, 332], "r2": 332, "rad": [326, 329], "radau": 96, "radian": [326, 335, 341], "rai": [66, 67, 69, 73, 94, 107, 151, 230, 306, 307, 335], "raimundo": 94, "rais": [6, 86, 98, 107, 116, 117, 124, 125, 128, 136, 137, 139, 155, 157, 162, 171, 176, 177, 180, 241, 273, 286, 320, 326, 338], "rajk": 94, "ram": [241, 320], "raman": [41, 47, 49, 51, 57, 66, 69, 70, 72, 81, 83, 94, 97, 102, 107, 150, 151, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 261, 306, 307, 320, 324, 335, 339], "ramandata": [46, 47, 51, 67, 68, 71, 80, 237, 333, 339, 346], "ramandir": [46, 80], "ramirez": 94, "ramo": 94, "rand": [308, 326, 338], "random": [16, 98, 107, 110, 113, 279, 305, 308, 311, 326, 329, 338, 339], "random_st": [101, 110, 113], "randomized_svd": 113, "randomli": 329, "randomst": [101, 110, 113], "rang": [16, 18, 21, 37, 51, 64, 75, 91, 97, 98, 106, 107, 113, 115, 119, 133, 135, 138, 163, 165, 173, 227, 308, 311, 312, 313, 319, 326, 329, 332, 338, 346, 352], "rank": [98, 107, 164, 304], "rapid": 384, "rapid_scan_reprocess": 248, "rare": [92, 333], "rate": [20, 94, 96, 114], "rather": [305, 308, 329], "ratio": [30, 67, 76, 80, 134, 150, 288, 308, 332, 333], "raw": [85, 92, 313, 316, 326], "rc": [197, 329], "rch": 320, "rcount": 329, "rcparam": 115, "rdx": 320, "rdy": 320, "re": [24, 318, 320, 324, 326, 332, 334, 339], "reach": [21, 96, 310, 312, 313], "reactant": [96, 104], "reaction": [20, 94, 96, 306], "reactiv": 114, "reactor": [96, 114], "read": [1, 2, 4, 8, 12, 17, 18, 19, 20, 27, 37, 38, 41, 46, 49, 51, 52, 57, 67, 68, 71, 75, 80, 87, 91, 95, 98, 99, 100, 107, 109, 116, 119, 135, 136, 141, 147, 156, 163, 165, 188, 189, 195, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 266, 274, 275, 276, 280, 285, 287, 292, 307, 308, 310, 311, 312, 313, 314, 317, 318, 319, 321, 326, 328, 329, 331, 332, 333, 334, 338, 339, 340, 344, 350, 367, 386, 391, 392, 396, 397, 398], "read_": 396, "read_binari": 45, "read_bruker_nmr": 346, "read_byt": 240, "read_carroucel": [230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 362], "read_csv": [230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "read_ddr": 316, "read_dir": [230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 367, 396], "read_dso": 362, "read_dx": 316, "read_fid": 75, "read_galact": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "read_hdr": 316, "read_jcamp": [230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 317, 318], "read_labspec": [46, 71, 80, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 339, 367], "read_mat": 316, "read_matlab": [19, 24, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 310, 311, 316], "read_omn": [15, 21, 23, 30, 43, 52, 64, 91, 107, 109, 116, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 313, 316, 317, 318, 319, 320, 326, 330, 337, 338, 341, 375], "read_onli": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "read_opu": [44, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 316, 317, 320, 377, 396], "read_quadera": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 347, 363], "read_remot": 386, "read_scp": 316, "read_sdr": 316, "read_soc": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 316], "read_spa": [240, 247, 316, 319, 336, 368], "read_spc": [4, 48, 344, 398], "read_spg": [240, 316], "read_sr": [240, 247, 316, 362, 368, 375, 385], "read_topspin": [45, 60, 61, 75, 76, 77, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 316, 326, 328, 331, 334, 340, 346, 392], "read_wdf": [47, 316, 391], "read_wir": [47, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 316, 391], "read_zip": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 316, 346], "readabl": [94, 96, 117, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 312, 320, 367], "readeabl": 386, "reader": [7, 11, 47, 75, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 318, 319, 320, 321, 332, 339, 346, 353, 354, 365, 374, 391], "reader_spc": 4, "reader_xxx": 4, "readi": [18, 320, 329], "readonli": [39, 98, 99, 107, 116, 320, 329, 396], "readquadera": 363, "readthedoc": 38, "real": [6, 60, 61, 76, 77, 98, 107, 126, 132, 142, 143, 193, 194, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 226, 255, 275, 287, 322, 335, 336, 337, 391], "realign": 330, "realiz": [151, 323], "realli": [16, 324, 329], "reason": [2, 92, 96, 311, 320, 341], "rebuild": 9, "receiv": [75, 76, 308, 312], "recent": [98, 107, 279, 304, 328, 339], "recherch": 2, "recogn": [238, 239, 336, 352], "recognit": 375, "recombin": 334, "recommend": [84, 86, 88, 89, 90, 96, 98, 99, 107, 305, 323, 324, 329], "recomput": [106, 310], "reconstrict": 17, "reconstruct": [19, 20, 24, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 150, 178, 304, 310, 311, 384], "record": [18, 20, 21, 27, 37, 42, 47, 304, 319, 338, 339], "recov": [97, 101], "rectangl": 329, "rectilinear": 329, "recurs": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "red": [6, 27, 31, 51, 64, 75, 76, 94, 306, 308, 310, 311, 312, 314, 325, 329, 332, 334, 336, 383], "redefin": 64, "redistribut": 2, "redraw": [75, 76, 308, 312], "reduc": [22, 60, 61, 86, 91, 94, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 117, 118, 119, 125, 126, 127, 128, 154, 184, 185, 186, 193, 195, 196, 227, 275, 276, 279, 282, 287, 304, 312, 329, 354, 384, 397], "reduced_unit": [98, 107, 279], "reduct": [22, 23, 24, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 125, 128, 151, 304, 311, 312, 332], "redunc": [98, 107, 185], "ref": [16, 135, 319], "refactor": [346, 365, 368, 380, 384, 388, 390], "refer": [2, 5, 9, 10, 30, 76, 84, 91, 93, 97, 98, 99, 107, 124, 125, 133, 135, 138, 152, 161, 173, 241, 270, 304, 308, 312, 319, 320, 324, 325, 326, 329, 330, 332, 339, 366, 379, 396], "reference_numb": 325, "refin": 163, "reflect": [6, 27, 102, 240, 241, 259, 269, 319, 320, 379, 396], "reform": [94, 306], "reg": 312, "reg_par": [18, 91, 103], "regard": [2, 364], "regex_matching_test_nam": 6, "region": [23, 30, 51, 64, 67, 68, 76, 77, 80, 91, 97, 98, 107, 138, 173, 304, 308, 312, 313, 329, 330, 332, 333, 336, 337, 338, 339, 341, 352], "regist": [7, 12, 115], "registri": [38, 77, 326], "regress": [26, 28, 31, 33, 64, 94, 105, 107, 111, 115, 230, 263, 304, 306, 307, 308, 309, 322, 386], "regroup": 304, "regular": [91, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 290, 304, 329], "regularis": [64, 94], "regularli": [5, 98, 373], "reindex": 124, "reinit": 52, "reinstal": 89, "reject": [312, 320], "rejman": [94, 306], "rel": [9, 91, 96, 113, 124, 163, 230, 240, 241, 242, 262, 291, 310, 312, 318, 320, 321, 329], "rel_height": [163, 312], "relat": [2, 5, 9, 98, 107, 163, 279, 304, 319, 329, 356, 380, 385, 389], "relationship": 338, "relative_to": 316, "relax": [73, 74, 75, 78, 107, 112, 249, 307, 392], "releas": [6, 86, 315, 319, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "release_d": 315, "relev": [2, 4, 75, 84, 106, 113, 304], "reli": [6, 92, 310], "reliabl": [12, 92], "reload": 55, "reltim": 20, "rem": 90, "remain": [2, 6, 20, 27, 98, 107, 132, 152, 255, 304, 311, 314, 331], "rememb": [15, 23, 326, 332], "remot": [2, 5], "remov": [1, 2, 6, 8, 51, 64, 66, 67, 69, 73, 75, 76, 77, 80, 91, 94, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 118, 119, 133, 138, 151, 152, 173, 230, 253, 270, 273, 306, 307, 308, 312, 313, 327, 329, 330, 332, 335, 337, 339, 346, 368, 383, 385, 386, 388, 390, 396, 397], "remove_all_dataset": 116, "remove_all_project": 116, "remove_dataset": [116, 328], "remove_digital_filt": [45, 60, 61, 326, 328, 331], "remove_limit": 97, "remove_mask": [107, 341], "remove_project": 116, "renam": [96, 323, 390], "render": [325, 329], "renishaw": [41, 49, 57, 107, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 307, 316, 391], "reorder": 319, "repeat": [68, 87, 102, 259, 269, 333, 339], "repeatedli": [97, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119], "repetit": 6, "rephas": 334, "replac": [2, 6, 23, 37, 95, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 140, 151, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 325, 326, 327, 329, 353, 356, 375, 379, 386, 388], "replace_exist": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "replace_whitespac": 328, "reply_cont": 339, "report": [1, 5, 6, 84, 92, 94, 112, 310, 319, 366], "repositori": [5, 6, 13, 89, 319, 372, 386], "repres": [2, 31, 75, 91, 98, 107, 275, 287, 304, 305, 308, 316, 334], "represent": [64, 117, 328], "reproduc": [2, 12, 84, 92, 101, 110, 113, 323], "reproduct": 2, "request": [0, 5, 6, 10, 12, 83, 84, 269, 319, 329, 366, 397], "requir": [2, 6, 22, 68, 80, 85, 86, 87, 92, 106, 107, 113, 117, 158, 163, 266, 310, 312, 319, 324, 330, 332, 333, 335, 346, 369, 394, 396, 397], "rescal": [98, 101, 107, 117, 184, 185, 186, 274, 279, 281, 282], "research": [1, 2, 94], "reserv": [2, 197, 305, 329], "reset": [30, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 311, 315, 326, 329, 330], "reshap": [107, 205, 299, 337], "residu": [18, 19, 20, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 304, 310, 311, 314, 337], "resist": [94, 306], "resitua": 311, "resiz": [98, 107, 165], "resolut": [19, 80, 94, 96, 100, 106, 304, 306, 310, 311, 320], "resolv": [88, 106, 304, 310], "resourc": 92, "respect": [2, 103, 104, 106, 113, 119, 171, 304, 310, 311, 314, 319, 326, 328, 329, 338], "respons": [2, 92, 115], "rest": [9, 315], "restart": [13, 316], "restor": [319, 329], "restrict": [2, 107, 314, 325], "restructuredtext": 9, "result": [2, 6, 15, 18, 20, 22, 23, 30, 31, 64, 68, 71, 75, 76, 77, 80, 84, 92, 96, 98, 101, 107, 110, 112, 113, 125, 126, 127, 128, 132, 151, 153, 159, 164, 169, 183, 193, 195, 196, 205, 227, 229, 255, 266, 275, 276, 287, 299, 308, 310, 311, 313, 316, 320, 324, 326, 330, 332, 333, 334, 336, 337, 339, 341, 397], "retain": 304, "retapod": [60, 61, 137, 139, 157, 171, 175, 176, 177, 272, 286, 331], "retriev": [97, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119, 320, 326], "retstep": [98, 107, 187], "return": [4, 8, 19, 31, 75, 77, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 187, 189, 190, 192, 193, 195, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 294, 298, 299, 300, 301, 302, 303, 308, 310, 311, 312, 314, 316, 319, 320, 324, 325, 326, 328, 329, 335, 338, 339, 341, 346, 353, 396], "return_bg": 248, "return_coef": 135, "return_error": 98, "return_ifg": [233, 235, 243, 244], "return_meta": 96, "return_nddataset": [20, 96], "reus": [76, 97, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 310], "rev": [137, 139, 157, 171, 175, 176, 177, 272, 286], "reverdi": 94, "revers": [95, 98, 100, 101, 103, 106, 107, 110, 113, 118, 119, 137, 139, 157, 162, 171, 175, 176, 177, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 271, 272, 284, 286, 319], "review": [309, 325], "revis": [10, 343], "revisit": [346, 359], "rewrit": 346, "rez": 94, "rf": [87, 241, 320], "rf_param": 320, "rfl": [241, 320], "rgb": 115, "rgba": 115, "rgn": 320, "ri": [76, 107, 142, 143, 328, 337], "ric": 94, "rich": [18, 93], "rieg": 94, "rieger": [94, 306], "right": [2, 12, 27, 48, 75, 96, 106, 107, 113, 155, 166, 167, 171, 192, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 256, 304, 310, 312, 314, 319, 329, 334], "right_bas": [75, 312], "right_ip": [75, 312], "rigid": 64, "rigueiro": 94, "rint": [98, 107, 132, 255], "rir": 107, "risk": [2, 92, 305, 324], "rita": 94, "rk23": 96, "rk45": 96, "rm": 87, "roach": [94, 100], "robert": 94, "robust": [107, 136, 392], "rocio": 94, "rocquencourt": 2, "roi": [98, 107, 346], "rojo": 94, "role": [332, 339], "roll": [146, 166, 167, 192, 256], "rom": 94, "roman": 329, "ronald": 22, "root": [6, 107, 113, 117, 275, 316, 337], "rootdir": 6, "rossi": [94, 306], "rotat": [51, 75, 76, 312, 329, 367], "roue": [316, 319], "roughli": [20, 308], "round": [71, 98, 107, 129, 132, 329, 337, 339, 388], "round4": 312, "round_": [98, 107], "round_numb": 329, "rounddashdot_pattern": 329, "rounded_arrai": [98, 107, 132, 255], "roundsolid_joinstyl": 329, "routin": 359, "row": [19, 37, 76, 97, 99, 102, 107, 115, 135, 155, 161, 179, 197, 260, 271, 310, 311, 312, 313, 319, 329, 333, 337], "row10": 37, "rr": [76, 107, 142, 143, 328, 337], "rri": 107, "rrr": 107, "rsc": 94, "rse": [19, 20, 310], "rsn": 320, "rsquar": 31, "rst": [4, 6, 9, 290, 379], "rt": [18, 326], "rtol": 96, "rubberband": [8, 97, 133, 138, 152, 173, 270, 335, 390], "ruberband": 332, "rudiment": 323, "rue": 2, "ruff": 91, "rule": [2, 6, 107, 147, 234, 266, 276, 285, 313, 315, 319, 346], "run": [2, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 85, 87, 90, 91, 96, 97, 101, 107, 112, 113, 133, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 309, 310, 312, 313, 315, 316, 318, 319, 320, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 386, 397], "run_ast_nod": 339, "run_cel": 339, "run_cell_async": 339, "run_cod": 339, "run_forev": 339, "run_script": [55, 120], "rung": 96, "runnabl": 8, "runner": [16, 18, 21, 22, 23, 24, 42, 44, 45, 46, 47, 48, 55, 61, 75, 76, 77, 91, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "runpi": 339, "runtim": 383, "runtimewarn": [336, 337], "ryan": [94, 97, 270], "r\u00ba": [316, 319], "r\u00e9solut": [316, 319], "r\u00e9sultat": [18, 37, 42, 318, 319, 338], "s0": [318, 326], "s0003": 94, "s0003267000852484": 94, "s0003267024001132": 94, "s0021951720300865": 94, "s0021951721000798": 94, "s0169": 94, "s0169743904002874": 94, "s0169743914002111": 94, "s0169743918301758": 94, "s0169743996000615": 94, "s0926337320311164": 94, "s1": [52, 76, 326, 329], "s10": [52, 329], "s10858": 1, "s2": [76, 326], "s20": [52, 329], "s3": 76, "s4": 76, "s41467": [94, 306], "s4p": 76, "s50": [52, 329], "s53": [52, 329], "s_0": 310, "s_1": 311, "s_copi": 316, "s_soft": 106, "s_x": [304, 314], "s_y": [304, 314], "sa": 76, "sabina": 94, "sadovnik": [94, 306], "safe": 2, "safer": 326, "safeti": 92, "sai": [98, 107, 260, 271, 273, 277, 279, 284, 308], "said": 2, "saito": 110, "sake": [75, 329, 330], "same": [2, 18, 19, 20, 22, 27, 31, 37, 42, 48, 50, 53, 55, 57, 76, 80, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 124, 133, 136, 141, 142, 143, 147, 152, 159, 169, 184, 195, 205, 217, 230, 231, 260, 272, 275, 276, 287, 299, 307, 308, 310, 313, 316, 319, 320, 322, 324, 326, 331, 332, 334, 336, 337, 338, 339, 341], "samevalu": 110, "samira": 94, "sampl": [7, 22, 27, 48, 52, 55, 71, 91, 98, 102, 105, 107, 111, 113, 115, 124, 172, 187, 190, 229, 231, 233, 235, 241, 243, 244, 259, 266, 312, 314, 320, 326, 329, 332, 339, 368], "sample_origin": 320, "sample_weight": [105, 111, 115], "san": [52, 329, 330], "sand": 329, "sandov": 94, "sanjai": 94, "sansmath": 329, "satisfi": 92, "satur": [21, 23, 329, 332, 337, 341], "save": [48, 55, 90, 97, 100, 101, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 118, 119, 188, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 291, 292, 294, 319, 326, 327, 329, 369, 396], "save_a": [107, 108, 116, 328], "save_dialog": 357, "savefig": 329, "savefig_bbox": 329, "savefig_directori": 329, "savefig_dpi": 329, "savefig_edgecolor": 329, "savefig_facecolor": 329, "savefig_format": 329, "savefig_jpeg_qu": 329, "savefig_pad_inch": 329, "savefig_transpar": 329, "savez": [107, 109, 116], "savgol": [71, 102, 269, 290, 333, 335, 390], "savgol_filt": [102, 259, 269, 290, 339, 390], "savitki": [70, 72, 73, 102, 107, 230, 307], "savitski": [68, 339], "savitzki": [71, 102, 259, 269, 290, 335], "sazama": 94, "sb": 76, "sbb": [272, 331], "sc": 76, "scalar": [6, 98, 107, 115, 126, 127, 140, 168, 169, 193, 196, 329, 332, 336, 337], "scale": [96, 98, 103, 106, 107, 110, 113, 115, 117, 162, 172, 184, 186, 190, 225, 269, 282, 314, 329, 336, 339, 361, 363, 364], "scan": [47, 316, 320], "scatter": [30, 52, 55, 75, 77, 107, 113, 115, 197, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 308, 312, 313, 329], "scatter_mark": 329, "scatter_pen": 220, "scheme": 92, "schoolbook": 329, "schuh": [94, 306], "sci": 94, "scienc": 94, "sciencedirect": 94, "scientif": [2, 12, 85, 92, 246, 316, 317, 319, 329], "scientifiqu": 2, "scikit": [22, 101, 189, 311, 314], "scikitlearn": 392, "scinot": 94, "scipi": [92, 97, 102, 112, 113, 114, 163, 259, 269, 312, 332, 339, 392], "scm": [5, 89], "scope": 2, "score": [15, 22, 23, 31, 105, 111, 113, 115, 304, 308, 310, 311, 314, 332, 383, 397], "scoreplot": [22, 23, 113, 311, 397], "scp": [4, 6, 8, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 87, 91, 96, 98, 100, 107, 108, 109, 116, 119, 120, 129, 135, 136, 141, 147, 154, 158, 161, 163, 164, 165, 168, 169, 179, 183, 188, 195, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 266, 274, 275, 276, 279, 280, 285, 287, 291, 292, 294, 298, 299, 305, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 324, 326, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 346, 375, 378, 384, 386, 394, 397], "scp_config_hom": 95, "scpy": [13, 17, 85, 88, 89, 90, 96, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 259, 266, 285, 310, 311, 312, 314, 316, 322, 329, 330], "scpy_suffix": [107, 109, 116], "scratch": [36, 39, 55, 326], "scree": [113, 311], "screeplot": [22, 23, 113, 310, 311, 397], "script": [5, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 85, 87, 89, 90, 92, 107, 112, 116, 134, 170, 191, 225, 257, 258, 265, 288, 315, 316, 322, 323, 329, 392, 394, 396, 397], "script_sourc": 55, "script_source_2": 55, "scripts_nam": 116, "sdr": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316], "se": [107, 275], "seaborn": [3, 329, 330], "seamlessli": [18, 37], "search": [12, 84, 85, 103, 308, 312, 353], "sebastian": 94, "sec": 320, "second": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 94, 95, 98, 99, 106, 107, 117, 151, 183, 203, 224, 231, 242, 277, 279, 299, 304, 305, 310, 311, 312, 316, 319, 324, 326, 328, 329, 333, 334, 337, 338], "secondli": 2, "sect": 341, "section": [9, 10, 35, 36, 39, 41, 50, 54, 57, 59, 63, 66, 70, 73, 74, 75, 91, 94, 103, 316, 319, 324, 325, 326, 328, 329, 396], "secur": 2, "see": [4, 5, 6, 8, 9, 10, 12, 47, 51, 67, 68, 80, 84, 86, 88, 89, 90, 91, 92, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 136, 137, 138, 139, 141, 150, 153, 158, 159, 162, 168, 169, 171, 173, 176, 177, 180, 188, 190, 204, 205, 210, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 266, 269, 270, 272, 275, 285, 286, 287, 290, 291, 294, 298, 299, 304, 305, 308, 310, 311, 312, 313, 315, 316, 318, 319, 320, 325, 326, 329, 331, 332, 334, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "seed": [98, 107, 279], "seek": 2, "seem": [15, 55, 64, 96], "seen": [23, 67, 310, 315, 320, 326, 337], "segment": [97, 152], "seitsonen": 94, "select": [13, 18, 27, 30, 37, 51, 64, 67, 68, 75, 76, 94, 97, 98, 99, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 126, 127, 136, 150, 156, 193, 196, 230, 240, 241, 259, 269, 273, 291, 292, 294, 306, 308, 312, 313, 314, 316, 319, 322, 332, 333, 337, 338, 339, 351, 369], "self": [6, 8, 94, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 207, 210, 312, 319, 328, 339], "send": [101, 339], "sens": [92, 152, 332, 341], "sensit": [92, 94], "sensor": [94, 306], "sent": 2, "sepal": 22, "sepal_length": 22, "separ": [2, 51, 96, 97, 98, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 132, 152, 163, 206, 255, 304, 312, 316, 320, 328, 329, 338, 347], "seq": 117, "seq_i": 117, "sequenc": [97, 98, 99, 107, 115, 117, 168, 172, 187, 190, 204, 284, 298, 312, 319, 326, 332], "sequenti": [64, 97, 106, 113, 332, 333, 349], "ser": [77, 316], "sergei": 94, "seri": [47, 68, 75, 98, 107, 113, 114, 116, 206, 217, 237, 240, 247, 248, 250, 251, 274, 313, 332, 333, 392], "serial": [101, 106, 320, 393], "serialis": 346, "serie190214": [51, 67, 68, 333], "serif": [329, 330], "serr": 94, "serra": 94, "server": [2, 42], "servic": [2, 87], "session": [6, 87], "set": [2, 4, 6, 9, 16, 17, 19, 21, 23, 27, 30, 42, 51, 75, 76, 80, 92, 95, 96, 97, 98, 99, 101, 103, 105, 106, 107, 110, 111, 112, 113, 116, 125, 126, 127, 128, 135, 150, 151, 155, 156, 158, 159, 168, 169, 179, 187, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 227, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 260, 261, 262, 275, 276, 287, 291, 292, 298, 299, 304, 305, 308, 310, 311, 312, 313, 314, 315, 316, 319, 320, 327, 329, 332, 333, 336, 337, 338, 339, 341, 346, 349, 356, 367, 370, 388, 392, 396, 397], "set_bad": 115, "set_color": 329, "set_complex": [107, 142, 143, 337], "set_coord": 107, "set_coordset": [17, 24, 107, 310, 327], "set_coordtitl": [107, 310], "set_coordunit": 107, "set_fonts": 329, "set_fontstyl": 329, "set_hypercomplex": [107, 337], "set_laser_frequ": [98, 336], "set_log_level": [97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 259, 269, 290], "set_loglevel": [55, 67, 120, 315, 384], "set_quaternion": [107, 260, 337], "set_titl": [71, 99, 329], "set_unit": 99, "set_xlim": [75, 312, 336, 339], "set_xscal": 346, "set_ylim": [75, 312, 332, 336], "set_ytick": 21, "setosa": 22, "setup": [4, 89], "sever": [6, 37, 42, 44, 50, 53, 57, 75, 80, 84, 96, 97, 98, 106, 107, 113, 116, 151, 152, 217, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 307, 310, 311, 316, 319, 320, 322, 324, 327, 328, 331, 335, 337, 338, 339, 351, 353, 361, 386, 392, 394, 396], "sfm": 320, "sg": 71, "sgn": 320, "sh": 85, "shadow": 329, "shall": 2, "shape": [4, 6, 18, 19, 21, 22, 23, 24, 27, 30, 36, 39, 42, 44, 45, 46, 48, 75, 76, 77, 91, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 135, 136, 140, 141, 147, 154, 158, 159, 161, 164, 168, 169, 179, 195, 204, 205, 229, 230, 231, 232, 238, 239, 240, 241, 242, 245, 246, 247, 248, 252, 259, 269, 273, 274, 275, 276, 279, 287, 290, 298, 299, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 326, 328, 330, 337, 338, 339, 340, 341], "share": [84, 124, 197, 319, 327], "sharei": [197, 330], "sharex": [197, 330, 332], "sharez": 197, "sharp": 18, "shashik": 94, "sheet": 322, "shell": 339, "shift": [46, 51, 60, 61, 107, 146, 152, 157, 166, 167, 175, 192, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 240, 254, 256, 311, 312, 319, 323, 332, 334, 339], "short": [6, 8, 12, 23, 77, 87, 117, 326, 337], "shortcut": 331, "shorter": [107, 162, 180, 332], "shorthand": [107, 115, 122, 123], "should": [2, 6, 8, 12, 13, 30, 52, 67, 76, 88, 90, 92, 95, 96, 97, 98, 101, 103, 106, 107, 114, 115, 120, 133, 142, 143, 151, 158, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 242, 305, 308, 310, 311, 312, 320, 323, 324, 329, 338, 339, 349, 379, 397], "shoulder": 312, "show": [8, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 75, 76, 77, 80, 84, 91, 98, 100, 107, 113, 151, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 311, 312, 313, 314, 316, 319, 324, 329, 331, 332, 334, 338, 339, 340, 341, 353, 392], "show_complex": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 334, 337, 340], "show_datapoint": [98, 336], "show_label": [23, 113, 311], "show_mask": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 337], "show_project": 329, "show_projection_i": 329, "show_projection_x": 329, "show_region": [64, 332], "show_vers": [84, 366, 376, 394], "show_yaxi": 75, "show_z": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "show_zero": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "shown": [113, 225, 312, 315, 319, 326, 332, 339], "shrinkb": 329, "shuffl": 110, "si": [75, 162, 180, 334], "siam": 94, "side": [87, 91, 96, 197, 325, 329], "sidebar": 323, "sie": 94, "sigdigit": [98, 388], "sigma": [113, 119, 170, 304, 308], "sigma_1": 304, "sigma_i": 304, "sigmoid": 265, "sign": [2, 12, 166, 167, 323, 325], "signal": [60, 61, 67, 97, 102, 113, 163, 259, 269, 304, 312, 320, 331, 332, 333, 339], "signatur": [6, 328], "signific": [2, 16, 76, 98, 163, 310, 311, 329, 333, 388], "significantli": [88, 110, 312, 397], "sigular": 304, "silent": 316, "silk": [94, 306], "silver": [94, 306], "similar": [31, 92, 98, 107, 172, 190, 311, 312, 314, 316, 320, 329, 332], "similarli": [2, 197, 338, 339], "simkovi\u010dov\u00e1": 94, "simon": 94, "simp": [266, 363], "simpl": [24, 30, 31, 75, 77, 94, 96, 97, 100, 101, 103, 106, 110, 113, 118, 119, 133, 138, 152, 173, 270, 308, 323, 324, 326, 329, 332, 338, 339, 340, 392], "simpler": [38, 55, 316, 332], "simplest": [37, 339], "simplex": 112, "simpli": [87, 316, 323, 329, 332, 333, 339, 341], "simplic": 325, "simplif": 329, "simplifi": [305, 324, 329, 339, 346], "simplisma": [14, 25, 33, 94, 100, 101, 103, 106, 107, 110, 113, 119, 239, 307, 310, 346, 374], "simpson": [75, 77, 285, 313, 346], "simul": 332, "simultan": [99, 338], "sin": [36, 39, 272, 331], "sinc": [20, 31, 92, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 319, 326], "sine": [48, 59, 62, 73, 107, 157, 171, 175, 228, 249, 268, 272, 286, 307, 337], "singl": [9, 16, 19, 30, 31, 37, 47, 48, 55, 75, 76, 80, 97, 98, 99, 102, 103, 107, 115, 116, 126, 127, 128, 136, 156, 163, 193, 196, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 273, 304, 308, 312, 316, 319, 320, 325, 327, 328, 329, 332, 336, 346, 355, 383], "single_spectrum": 292, "singlehplc": [310, 311], "singleton": 107, "singular": [2, 97, 100, 101, 103, 106, 110, 113, 115, 118, 119, 304], "singular_valu": 119, "sinm": [61, 157, 171, 175, 228, 267, 272, 286, 331], "sirotin": 94, "sisetup": 329, "site": [21, 24, 94, 306, 325, 328, 339], "situ": [94, 306], "situat": 336, "siunitx": 329, "size": [6, 18, 22, 23, 31, 36, 37, 38, 39, 42, 44, 46, 48, 55, 61, 68, 71, 75, 76, 77, 86, 91, 98, 99, 101, 102, 106, 107, 115, 125, 126, 127, 128, 129, 135, 136, 147, 151, 154, 162, 163, 164, 165, 168, 169, 172, 180, 182, 183, 187, 190, 193, 195, 196, 204, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 229, 259, 266, 269, 275, 276, 285, 287, 298, 300, 302, 303, 304, 308, 310, 311, 312, 313, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 341, 371], "sizeff": 162, "skip": [6, 355], "sklearn": [17, 21, 101, 105, 110, 111, 113, 115, 384], "slash": 316, "sleep": 346, "slice": [15, 23, 36, 39, 64, 73, 74, 78, 91, 107, 112, 249, 305, 307, 308, 312, 313, 318, 322, 324, 326, 327, 329, 335, 339, 341, 356, 383, 391], "slightli": [96, 314, 329, 388], "slow": [80, 346, 350], "slower": 110, "sm": [241, 320], "sma": 24, "small": [5, 75, 76, 92, 110, 308, 312, 329, 332], "smaller": [96, 97, 107, 133, 140, 162, 272, 312, 329, 331, 337, 339], "smallest": 113, "smc1": [71, 80, 339], "smild": 94, "smooth": [8, 64, 68, 70, 72, 73, 94, 97, 102, 106, 107, 133, 138, 152, 163, 173, 230, 259, 270, 290, 304, 307, 322, 332, 335, 390], "smoother": [64, 71, 80, 94, 102, 163, 259, 269, 290, 304, 339], "snap": 329, "sncorrel": 320, "snip": [64, 68, 75, 76, 80, 94, 97, 133, 138, 152, 173, 332, 333, 390], "snip_width": [64, 75, 76, 80, 97, 270, 332], "snippet": [8, 12, 335], "snm": 320, "so": [2, 6, 16, 19, 20, 23, 68, 80, 92, 96, 98, 106, 107, 113, 187, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 275, 279, 287, 304, 310, 311, 312, 315, 316, 319, 324, 325, 326, 329, 332, 333, 334, 336, 337, 339, 341, 349, 397], "soft": [20, 106, 304, 310, 329, 353], "softwar": [0, 1, 2, 12, 48, 84, 92, 107, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 272, 318, 319, 331, 391], "sol": 96, "solarize_light2": [329, 330], "sole": [2, 92], "solid": [51, 94, 107, 210, 211, 212, 213, 215, 216, 218, 220, 221, 306, 329, 336], "solut": [2, 30, 31, 87, 93, 95, 96, 308, 319], "solv": [18, 29, 32, 33, 96, 98, 103, 105, 106, 107, 307, 309, 350, 360], "solve_ivp": 96, "solver": [91, 96, 100, 101, 103, 106, 110, 113, 118, 119, 387, 392], "solverconc": 106, "solverspec": 106, "som": [30, 76, 77, 308], "somaiyeh": 94, "some": [6, 8, 16, 20, 21, 23, 24, 30, 31, 38, 46, 51, 64, 76, 91, 92, 96, 98, 99, 107, 109, 113, 116, 129, 232, 241, 304, 305, 308, 309, 310, 311, 312, 313, 314, 319, 323, 324, 326, 328, 329, 330, 332, 334, 336, 337, 339, 340, 341, 346, 349, 355, 359, 381, 383, 389, 396, 397], "some_unit": 319, "someon": 326, "someth": [9, 13, 315, 324, 337, 341, 346, 397], "sometim": [68, 92, 113, 232, 325, 326, 333, 354, 391], "son": 320, "sore": 113, "sort": [42, 43, 91, 107, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 313, 316, 318, 319, 326, 327, 338, 341, 392], "sortbyd": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 319], "sot": 320, "sourc": [1, 2, 5, 11, 15, 16, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 85, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 316, 318, 326, 328], "sourcepackag": 1, "sourcetre": 5, "soustract": [18, 37, 42, 318, 319, 338], "sp": [47, 61, 157, 171, 175, 228, 267, 268, 286, 331, 334], "spa": [23, 42, 91, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 313, 316, 317, 336, 341, 354], "space": [2, 24, 98, 100, 101, 102, 103, 106, 107, 110, 112, 113, 115, 118, 119, 129, 172, 187, 190, 197, 259, 304, 312, 314, 319, 320, 325, 328, 329, 338, 388, 391], "span": [113, 304, 311, 314], "spars": [110, 113, 290], "sparsiti": 110, "spc": [4, 41, 49, 57, 107, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 307, 316, 344, 365, 398], "spc_data": 4, "spcformat": 48, "speak": [80, 324], "spec": [16, 329, 334, 340], "spec2": [334, 340], "spec3": 334, "speci": [22, 75, 94, 96, 106, 304, 306], "special": [94, 171, 325, 326, 328, 329, 332], "specialis": 329, "speciat": 94, "species_concentr": [20, 96], "specif": [2, 4, 6, 8, 11, 19, 80, 85, 86, 91, 99, 107, 162, 163, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 305, 311, 314, 317, 319, 321, 329, 332, 337, 339], "specifi": [2, 8, 22, 47, 51, 97, 98, 100, 101, 102, 103, 106, 107, 109, 110, 112, 113, 115, 116, 117, 118, 119, 124, 125, 129, 132, 136, 137, 139, 140, 141, 142, 143, 146, 150, 152, 154, 157, 161, 162, 163, 165, 166, 167, 171, 172, 175, 176, 177, 179, 180, 187, 190, 192, 195, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 259, 269, 272, 275, 276, 286, 287, 290, 291, 292, 294, 316, 320, 325, 326, 328, 329, 338, 341, 367, 394], "specta": [27, 314], "spectr": 336, "spectra": [4, 15, 19, 20, 21, 23, 24, 27, 42, 46, 47, 48, 51, 64, 67, 68, 73, 74, 78, 79, 81, 91, 94, 97, 98, 99, 100, 101, 106, 107, 112, 118, 150, 151, 156, 157, 162, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 270, 304, 306, 307, 308, 310, 311, 312, 313, 314, 317, 326, 329, 331, 332, 335, 336, 338, 339, 340, 341, 344, 362, 368, 374, 390, 391, 392, 396, 398], "spectral": [4, 18, 19, 37, 47, 94, 101, 106, 163, 288, 304, 308, 316, 332], "spectrocat": [85, 86, 88, 90, 91, 361], "spectrochempi": [1, 4, 6, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 54, 55, 57, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 86, 87, 95, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "spectrochempy_2025": 0, "spectrochempy_cfg": 95, "spectrochempy_data": [4, 52, 86, 319, 347, 348, 372, 386], "spectrochempyerror": [320, 329], "spectrochimi": 1, "spectrocop": 316, "spectromet": [27, 107, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 314, 316, 320, 332], "spectrometri": 94, "spectroscop": [0, 3, 4, 48, 92, 100, 101, 103, 106, 110, 113, 118, 119, 163, 234, 304, 315, 323, 324, 326, 327], "spectroscopi": [3, 20, 48, 91, 92, 94, 98, 134, 163, 306, 308, 311, 317, 318], "spectroscopist": [92, 338], "spectrum": [18, 20, 30, 46, 47, 48, 51, 66, 69, 70, 72, 73, 75, 76, 80, 91, 94, 97, 102, 107, 113, 151, 156, 166, 167, 226, 230, 231, 237, 241, 250, 251, 261, 304, 307, 308, 311, 312, 319, 320, 332, 335, 338, 339, 340, 341, 368], "speed": [31, 98, 163, 290, 308, 329, 381, 385, 392, 397], "spektrum": [316, 319], "spg": [8, 15, 18, 21, 23, 30, 37, 38, 41, 42, 49, 52, 57, 64, 87, 91, 98, 100, 107, 109, 116, 119, 135, 136, 141, 147, 163, 188, 195, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 266, 271, 274, 275, 276, 280, 285, 287, 291, 292, 307, 308, 312, 313, 316, 317, 318, 326, 329, 330, 332, 337, 338, 341], "sphinx": [6, 9], "sphinx_gallery_thumbnail_numb": [15, 36, 39, 60, 61, 67], "spike": [66, 69, 73, 94, 107, 151, 230, 306, 307, 312, 335, 340, 390], "spline": 332, "split": [124, 328, 329, 330], "splitlin": 328, "spread": [107, 275, 287], "spred": 75, "spure": [19, 24, 310, 311], "spyder": 323, "spz": 320, "sqrt": [107, 110, 122, 123, 170, 194, 275, 308, 324, 325, 326], "squar": [30, 31, 59, 62, 64, 73, 94, 97, 102, 105, 106, 107, 111, 112, 113, 115, 133, 135, 138, 152, 173, 179, 226, 228, 249, 268, 270, 272, 275, 287, 290, 304, 306, 307, 309, 310, 312, 322, 326, 331, 332, 386, 392], "squeez": [20, 37, 76, 107, 308, 312, 337], "sr": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 316, 319], "src": [16, 45, 47, 55, 75, 307, 315, 320, 325, 328, 329, 339], "srn": 320, "srt": 320, "ss": [316, 319], "ssb": [61, 228, 268, 272, 331], "ssdiff": 135, "ssm": 320, "ssp": 320, "st": [15, 17, 19, 20, 21, 24, 101, 106, 118, 304, 310, 312, 384, 385], "st0": 310, "st_constrained_list": 106, "st_l": 106, "st_ls_list": 106, "st_unconstrain": 106, "stabl": [6, 12, 86, 87, 88, 101], "stack": [36, 39, 43, 75, 107, 141, 197, 202, 203, 210, 211, 212, 213, 215, 216, 221, 224, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 312, 329, 339, 371, 377, 383], "stackoverflow": 324, "staff": [2, 92], "stai": 341, "stancik": [134, 308], "stand": [2, 12, 38, 304, 310, 311, 312, 314, 332], "standalon": 83, "standard": [9, 11, 68, 94, 99, 106, 107, 113, 118, 147, 191, 195, 275, 276, 287, 308, 310, 314, 315, 317, 324, 329, 337], "stanislav": 94, "starch": [27, 42, 314, 316], "start": [4, 6, 8, 11, 20, 30, 36, 39, 64, 80, 88, 90, 93, 97, 98, 103, 107, 112, 129, 172, 187, 190, 225, 308, 310, 312, 319, 322, 326, 329, 332, 338, 339], "startswith": 6, "startup": [97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 259, 269, 290, 329, 397], "starzyk": 94, "state": [2, 6, 107, 229], "statement": [326, 329, 346], "statist": [91, 93, 94, 107, 275, 287, 304, 314, 324], "statu": [2, 96, 272, 320, 331, 332], "stcurr": 106, "std": [24, 71, 107, 195, 287, 314, 339], "stdout": 264, "stefania": 94, "stejskal": 392, "stelmachowski": [94, 103], "step": [7, 19, 96, 98, 106, 107, 129, 151, 172, 187, 190, 323, 329, 332, 338, 384], "steven": 94, "sthe": 120, "stiff": 96, "stiffer": [97, 133], "stijn": 94, "still": [324, 326, 329, 359, 369, 372, 380, 390, 392], "stix": 329, "stixsan": 329, "stoichiometri": 96, "stop": [98, 103, 107, 110, 115, 129, 172, 187, 190, 304, 310, 315, 326, 338], "storag": 2, "store": [2, 47, 48, 64, 80, 85, 96, 106, 107, 232, 234, 310, 311, 314, 316, 323, 326, 328, 331, 336, 337, 352, 370, 375, 385, 397], "storeiter": [106, 385], "stosic": 94, "str": [4, 8, 20, 24, 42, 96, 98, 99, 102, 103, 104, 107, 109, 112, 113, 114, 115, 116, 117, 120, 121, 124, 125, 135, 137, 139, 141, 142, 143, 146, 150, 151, 152, 154, 156, 157, 158, 159, 162, 164, 166, 167, 168, 169, 171, 175, 176, 177, 180, 184, 188, 192, 197, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 259, 261, 266, 269, 271, 272, 279, 285, 286, 290, 291, 292, 294, 298, 299, 311, 316, 320, 330], "straight": 152, "straightforward": [31, 338, 341], "strang": 380, "strategi": 101, "stream": [36, 39, 329, 339], "streamlin": 47, "strength": 339, "stress": 312, "strict": [106, 121, 155], "stricter": 310, "strictli": [80, 113, 267, 331, 339], "strike": 2, "string": [12, 80, 96, 97, 98, 99, 101, 103, 106, 107, 115, 116, 188, 207, 240, 249, 305, 314, 316, 319, 325, 326, 327, 329, 339, 392], "strip": 328, "strong": [2, 92], "stronger": 339, "strongli": [6, 88, 305], "structur": [4, 6, 11, 91, 92, 107, 159, 169, 205, 299, 304, 310, 311, 315, 327, 328], "studi": [2, 94, 304, 306], "style": [4, 5, 6, 42, 43, 51, 52, 107, 115, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 322, 331, 346, 383, 390, 396], "stylelib": [91, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "stylesheet": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329, 330], "stylist": 6, "sub": [55, 107, 116, 120, 125, 128, 278, 320, 325, 328], "subclass": [98, 99, 107, 112, 115, 356], "subcompon": 304, "subdir": [46, 240, 245, 316, 319, 346], "subdirectori": 316, "subfil": 48, "subfold": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "subhead": 325, "subject": [2, 92, 106, 107, 304, 305, 319, 326, 327], "submatric": 304, "submit": [2, 6, 84], "subplot": [97, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329, 338], "subproject": [55, 116], "subscrib": 2, "subsequ": [2, 97, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 325, 329], "subsequent_ind": 328, "subset": [6, 107, 273], "substep": 325, "subtitl": 197, "subtrack": 135, "subtract": [64, 91, 92, 97, 107, 133, 135, 138, 152, 173, 270, 305, 312, 319, 326, 327, 328, 330, 332, 395], "subtrat": 21, "succes": [107, 260], "success": [2, 96, 106, 107, 108, 116, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 304, 310, 325, 339], "successfulli": [20, 96, 330], "sudden": 6, "sudo": [5, 85, 89], "suffer": [2, 329], "suffici": 75, "suffix": [107, 109, 116, 188], "suggest": [1, 6, 83, 84, 91, 92], "suit": [11, 85], "suitabl": [2, 100, 115, 329], "sulf_oct": [18, 37, 42, 318, 319, 338], "sulfid": [18, 94, 306], "sum": [47, 105, 106, 107, 111, 115, 135, 136, 147, 195, 275, 287, 304, 313, 330, 339], "sum_": [225, 304, 308], "summ": 47, "summari": [6, 8, 18, 22, 23, 37, 38, 42, 44, 46, 48, 55, 61, 75, 76, 77, 91, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 134, 170, 191, 225, 265, 288, 310, 311, 313, 316, 318, 319, 320, 324, 327, 328, 331, 334, 337, 338, 341], "super": 339, "superpos": 334, "supplement": [2, 309], "supplementari": [2, 106], "suppli": [2, 42, 115], "support": [13, 48, 88, 90, 91, 92, 94, 107, 163, 229, 306, 312, 316, 321, 329, 337, 344, 347, 392, 394, 398], "suppress": [197, 315, 329, 346, 370, 396], "supress": 80, "suptitl": [197, 329], "suptitle_color": 197, "sure": [21, 86, 96, 107, 116, 188], "surf": [310, 311], "surfac": [94, 107, 114, 210, 211, 212, 213, 215, 216, 221, 222, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 306, 310, 311, 316, 329, 374, 392], "surround": [163, 312, 325], "sust": [42, 318, 319], "sv": 119, "svd": [93, 97, 100, 101, 103, 106, 110, 113, 118, 304, 332], "svd_solver": 113, "svg": 329, "sw": [316, 319], "swapax": 107, "swapdim": [107, 260, 284], "swape": [107, 277], "switch": 96, "sy": 264, "sylvi": 94, "symbol": [96, 326, 329], "symlog": 115, "sync": 320, "synchron": 87, "syntax": [6, 9, 30, 36, 39, 55, 76, 106, 107, 305, 320, 324, 325, 327, 328, 329, 339], "synthes": [94, 306], "system": [2, 10, 16, 84, 94, 95, 96, 101, 163, 206, 315, 316, 346], "systemat": [304, 312], "s\u00e9rie": [316, 319], "t": [5, 9, 15, 16, 17, 19, 20, 21, 22, 24, 27, 31, 36, 39, 48, 64, 75, 76, 77, 83, 92, 94, 96, 98, 99, 100, 101, 103, 106, 107, 110, 113, 114, 115, 118, 119, 157, 164, 175, 231, 272, 304, 308, 310, 311, 312, 314, 316, 319, 323, 324, 325, 326, 328, 329, 331, 333, 337, 341, 384], "t0": 175, "t1": 77, "t1_model": 77, "t1irho": 75, "t1rho": 75, "t201": 91, "t4": [316, 319], "t_0": [157, 310], "t_dataset": 341, "t_event": 96, "t_point": 96, "tab": 325, "tabl": [92, 135, 316, 327, 329], "table_po": [75, 312], "table_properti": [75, 312], "tableau": [329, 330], "tacit": 2, "tacitli": 2, "tag": [84, 324, 325, 326], "taht": [15, 21], "take": [2, 6, 10, 30, 31, 37, 51, 92, 98, 101, 107, 110, 148, 155, 162, 275, 326, 330, 333, 337, 338, 386], "taken": [6, 27, 47, 75, 76, 77, 98, 101, 107, 138, 162, 173, 195, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 287, 310, 311, 346], "talk": [329, 330, 332], "tangent": 337, "tanner": 392, "tarascon": 94, "target": [105, 111, 115, 304], "tarr": 98, "task": 323, "tast": 91, "tauler": 94, "tavakkoli": 94, "taxonom": 22, "tc_0": 310, "tcl": 320, "td": 334, "tdd": 6, "tdeff": 162, "tdl": 320, "team": 1, "technic": [2, 92], "techniqu": [304, 324, 333], "technol": 94, "technolog": 2, "tej": 94, "tel": [94, 306], "telecommun": 2, "telephon": 107, "tell": [84, 135, 217], "temperatur": [36, 39, 96, 99, 103, 231, 320, 326], "templat": [84, 232, 326, 366], "temporari": [2, 329, 346], "temporarili": 329, "terahertz": 38, "term": [2, 101, 105, 106, 110, 111, 117, 139, 304, 310, 314], "termin": [2, 20, 85, 95, 96, 323, 356, 394], "terrain": 329, "tesdata": 316, "test": [2, 5, 7, 9, 11, 19, 27, 44, 45, 60, 61, 75, 76, 77, 85, 105, 107, 111, 115, 125, 128, 230, 241, 314, 320, 326, 328, 331, 334, 337, 340, 346, 347, 352, 353, 362, 363, 365, 369, 372, 386, 394], "test_": 6, "test_1d_nddataset": 6, "test_cor": 4, "test_d": 6, "test_dataset": 6, "test_method": 6, "test_nddataset_real_imag": 6, "test_read": 4, "test_read_spc": 4, "test_sh": 355, "test_xxx": 4, "testclass": 6, "testdata": [4, 42, 44, 46, 48, 91, 313, 316, 318, 319, 320, 326, 338, 341], "text": [2, 30, 46, 48, 71, 76, 92, 95, 115, 272, 323, 325, 329, 331, 396], "text_antialias": 329, "text_color": 329, "text_hint": 329, "text_hinting_factor": 329, "text_usetex": 329, "textcomp": 329, "textcoord": [75, 76, 312, 329], "textil": 329, "textrm": [106, 304, 314], "textwrap": 328, "textwrapp": 328, "tf": 319, "tg": [55, 232], "tga": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 385], "tgair": 316, "tgscatter": 55, "th": [64, 107, 147, 153, 161, 304], "than": [2, 10, 24, 68, 96, 102, 106, 107, 113, 114, 115, 140, 150, 151, 159, 162, 163, 180, 259, 272, 273, 292, 310, 312, 314, 315, 323, 325, 326, 329, 331, 337, 339, 348, 391], "thank": [1, 38], "thei": [2, 6, 10, 48, 92, 99, 101, 107, 116, 230, 240, 241, 305, 310, 311, 312, 313, 316, 319, 320, 324, 326, 329, 330, 333, 337, 339, 347, 370, 385, 388], "them": [5, 6, 16, 17, 19, 23, 37, 38, 46, 83, 92, 107, 241, 304, 310, 314, 316, 319, 324, 325, 326, 329, 330, 334, 352, 390, 397], "themselv": [99, 319, 329], "theprocessor": 332, "therefor": [2, 6, 75, 98, 107, 155, 158, 164, 305, 324], "thereof": 2, "thermo": [4, 240, 245, 246, 247, 248, 316, 317, 319, 365, 392], "thermocoupl": 231, "thermodynam": 86, "theses": 94, "thet": [230, 240, 241], "thi": [0, 2, 4, 5, 6, 8, 10, 11, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 80, 83, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 133, 135, 136, 141, 150, 151, 153, 155, 157, 159, 162, 163, 164, 169, 172, 175, 180, 186, 188, 193, 195, 196, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 259, 260, 266, 269, 272, 274, 275, 276, 282, 287, 290, 293, 295, 296, 297, 304, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 343, 356, 365, 370, 384, 388, 389, 390, 391, 396, 397], "thibault": 94, "thid": 22, "thing": [55, 75, 76, 308, 312, 332, 337], "think": 6, "third": [2, 16, 23, 106, 151, 197, 304, 310, 314, 326], "thirti": 2, "those": [2, 20, 96, 98, 99, 100, 106, 107, 114, 116, 124, 140, 151, 311, 316, 323, 329, 332, 337, 341], "though": [20, 329], "three": [20, 22, 55, 75, 97, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 140, 308, 312, 325, 326, 338, 390], "threshold": [68, 151, 163, 312, 329, 333], "through": [4, 6, 87, 91, 107, 125, 128, 163, 308, 312, 319, 324, 326, 329], "throughout": [2, 6, 312, 319], "thse": 23, "thu": [6, 12, 19, 23, 42, 91, 97, 98, 99, 304, 308, 310, 311, 313, 314, 320, 329, 332, 339, 341], "ti": 75, "tia": 94, "tic": 48, "tick": [107, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329, 330], "tight": 329, "time": [2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 91, 96, 97, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 133, 137, 139, 148, 157, 162, 164, 171, 175, 176, 177, 180, 242, 279, 286, 302, 304, 308, 310, 311, 312, 313, 314, 316, 319, 320, 322, 323, 327, 328, 329, 330, 331, 332, 335, 338, 341, 383, 386, 397], "timedelta": 326, "timepoint": 20, "timeshift": 242, "timestamp": [4, 18, 23, 37, 42, 44, 48, 75, 91, 242, 313, 316, 318, 319, 320, 338], "timezon": [107, 326, 329, 370], "timl": 96, "tip": [11, 325], "titl": [0, 4, 6, 15, 16, 17, 18, 20, 21, 22, 23, 24, 27, 31, 36, 37, 38, 39, 42, 43, 44, 46, 48, 55, 61, 67, 75, 76, 77, 91, 98, 99, 100, 103, 107, 124, 129, 135, 154, 172, 187, 190, 197, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 322, 324, 325, 326, 328, 330, 331, 332, 334, 336, 337, 338, 341, 385], "tk": [329, 356], "tmp": 339, "to_arrai": 107, "to_base_unit": [98, 107, 117, 184, 185, 186, 279], "to_compact": 117, "to_dict": [97, 99, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119], "to_pref": 117, "to_reduced_unit": [98, 107, 117, 184, 185, 186, 279], "to_root_unit": 117, "to_xarrai": 107, "todo": [80, 112, 135, 232, 242, 308, 312, 338], "togeth": [3, 27, 64, 98, 107, 115, 207, 304, 311, 314, 319, 330], "tol": [24, 97, 101, 106, 110, 113, 115, 118, 133, 310, 332, 384], "toler": [96, 97, 101, 106, 110, 113, 115, 133], "too": [15, 23, 36, 39, 64, 75, 76, 98, 308, 312, 329, 332, 337, 350], "tool": [6, 13, 92, 93, 94, 324, 334], "top": [94, 163, 197, 312, 329], "topic": [5, 110], "topspin": [1, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 272, 316, 331, 346], "topspin_1d": [45, 60, 61, 328, 331, 334], "topspin_2d": [45, 76, 326, 328], "tornado": 339, "torr": [18, 37, 91], "tort": 2, "toshift": [146, 254], "total": [2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 34, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 98, 105, 106, 107, 111, 115, 304, 307, 314, 316], "toto": [116, 315], "touch": 137, "toward": [2, 341], "tqdm": 367, "tr": [241, 320], "trace": [51, 92], "traceback": [98, 107, 279, 315, 328, 339, 392], "track": [94, 306], "tracker": 12, "trademark": 2, "train": [27, 97, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 314], "trait": [112, 337], "traitement": [94, 306], "traitlet": [24, 97, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 329, 339], "transfer": 2, "transfere": 2, "transform": [15, 16, 17, 20, 21, 22, 23, 38, 42, 75, 80, 91, 97, 100, 101, 102, 103, 106, 110, 112, 113, 115, 117, 118, 119, 121, 137, 139, 146, 157, 162, 166, 167, 171, 175, 176, 177, 178, 180, 192, 208, 209, 254, 256, 272, 286, 304, 310, 311, 320, 322, 324, 331, 332, 335, 336, 337, 339, 384], "transit": 384, "translat": [2, 92], "transmiss": 2, "transmissionfederico": 320, "transmit": 2, "transmitt": [38, 240, 241, 320, 340, 369, 371], "transpar": [115, 326, 329, 332, 395], "transport": 86, "transpos": [21, 75, 76, 100, 101, 107, 119, 210, 212, 213, 215, 216, 221, 222, 223, 260, 277, 310, 337, 341, 391], "transposit": [203, 224, 319, 335], "transpositon": 311, "trapezoid": [107, 147, 266, 276, 313], "trapz": [107, 276, 285, 313, 346, 363], "travel": [31, 308], "travert": [0, 1, 88, 90, 91, 94, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341], "travi": 353, "treat": [96, 117, 121, 312, 339], "treatment": [94, 310, 311, 320], "trend": [8, 80, 97, 133, 138, 152, 173, 270], "triang": [137, 157, 171, 175, 228, 267, 268, 272], "triangular": [137, 286, 339], "trigger": [103, 315, 332], "trigonometr": 335, "trim": 97, "tripl": 8, "true": [2, 18, 23, 30, 31, 37, 43, 45, 60, 61, 64, 75, 76, 80, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 121, 124, 125, 126, 127, 128, 135, 137, 139, 141, 146, 147, 155, 157, 162, 163, 166, 167, 171, 172, 175, 176, 177, 180, 183, 184, 187, 190, 192, 193, 195, 196, 197, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 260, 271, 272, 273, 274, 275, 276, 277, 279, 281, 282, 284, 286, 287, 300, 301, 302, 303, 308, 310, 311, 312, 313, 316, 319, 320, 326, 328, 329, 330, 331, 332, 334, 336, 337, 340, 341, 367], "true_divid": 337, "truecolor": 329, "truediv": [326, 331], "truli": 312, "trunc": [98, 107, 132, 255], "truncat": [48, 113, 337], "trust": 92, "truth": [6, 337], "try": [6, 18, 38, 42, 64, 80, 84, 87, 96, 107, 117, 121, 158, 159, 168, 169, 204, 205, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 298, 299, 308, 315, 316, 319, 320, 324, 326, 329, 330, 332, 337, 339, 341, 388], "tsc": 320, "tspan": 96, "tune": [68, 75, 304, 315, 333, 339], "tupl": [96, 97, 98, 99, 100, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 124, 126, 127, 128, 136, 138, 156, 158, 163, 164, 173, 193, 196, 197, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 229, 238, 239, 273, 304, 326, 329, 393], "turnhout": [94, 306], "tutori": [36, 39, 84, 92, 93, 308, 309, 310, 311, 312, 313, 314, 315, 316, 320, 321, 324, 326, 329, 332, 334, 338, 339, 346, 390, 396], "twin": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "twinx": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "two": [2, 10, 16, 18, 23, 37, 55, 64, 68, 75, 76, 94, 98, 99, 103, 107, 110, 113, 117, 126, 127, 129, 150, 155, 162, 180, 193, 196, 232, 260, 266, 277, 284, 301, 304, 305, 308, 310, 311, 312, 315, 316, 319, 320, 325, 326, 329, 332, 333, 337, 338, 384], "txt": [46, 51, 67, 68, 71, 80, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 333, 339, 346, 367], "type": [2, 6, 8, 18, 19, 38, 42, 47, 48, 75, 80, 91, 95, 96, 98, 102, 105, 107, 109, 111, 113, 115, 116, 121, 122, 123, 126, 129, 134, 136, 147, 154, 155, 158, 159, 161, 164, 165, 168, 169, 170, 172, 179, 187, 190, 191, 193, 195, 197, 198, 200, 201, 202, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 265, 269, 275, 276, 287, 288, 291, 298, 299, 312, 315, 316, 317, 319, 322, 323, 324, 325, 326, 332, 334, 337, 339, 396], "type1cm": 329, "typecod": [98, 107], "typeerror": [107, 116, 136, 328, 339], "typewrit": 329, "typic": [6, 8, 92, 95, 97, 133, 242, 272, 304, 312, 331, 332], "typograph": 115, "tz": 326, "tzinfo": 107, "t\u00e9": [316, 319], "u": [12, 23, 36, 38, 39, 42, 44, 48, 60, 75, 77, 91, 98, 99, 105, 107, 111, 115, 117, 119, 135, 136, 147, 157, 175, 195, 208, 209, 230, 231, 240, 241, 245, 246, 247, 248, 252, 266, 274, 275, 276, 285, 287, 298, 304, 312, 313, 316, 318, 319, 320, 324, 326, 329, 331, 332, 338, 341], "u_": 115, "u_i": 115, "ub": 75, "ubic": 332, "ubuntu": [85, 89], "ufunc": [326, 335, 378], "umasked_data": [98, 107], "un": [101, 337], "unalign": 330, "unamed_script": 120, "unari": 335, "unavoid": 6, "unbias": [107, 275, 287], "unchang": [98, 107, 132, 255, 331], "uncom": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 95, 328], "unconstrain": [97, 133], "uncorrel": 113, "undefin": [326, 329], "under": [1, 2, 92, 95, 309, 316, 355], "underli": [98, 101, 107, 304, 312, 332], "underscor": [75, 77, 308, 325, 328, 329], "understand": [2, 94, 306, 324, 384], "understood": 2, "undertak": 2, "undesir": 341, "unexplain": [24, 118], "unicod": [101, 106, 329], "unidimension": 327, "uniform": [98, 107, 190, 229, 339], "uniformli": [98, 107, 190], "unimod": [106, 304, 310, 374], "unimodconc": [106, 310], "unimodconcmod": 106, "unimodconctol": 106, "unimodmod": 374, "unimodspec": 106, "unimodspecmod": 106, "unimodspectol": 106, "unimodtol": [106, 374], "uniniti": [107, 158, 159, 168, 169, 204, 205, 298, 299], "union": [124, 261, 330], "uniqu": [120, 234, 326], "unit": [4, 16, 17, 18, 24, 27, 31, 35, 36, 37, 39, 40, 43, 57, 60, 75, 77, 91, 95, 96, 98, 99, 101, 105, 107, 111, 113, 117, 124, 129, 141, 154, 157, 158, 159, 160, 161, 163, 164, 165, 168, 169, 172, 175, 179, 183, 184, 185, 186, 187, 190, 204, 205, 208, 229, 230, 240, 262, 274, 279, 281, 282, 298, 299, 307, 308, 310, 311, 313, 314, 319, 327, 329, 331, 332, 334, 335, 336, 356, 369, 371, 392], "unit_item": 117, "unitari": 119, "unitless": [18, 22, 23, 42, 46, 48, 55, 98, 107, 117, 161, 168, 169, 204, 232, 238, 239, 298, 310, 311, 316, 320, 326, 335], "unitregistri": 117, "unitsa": 319, "unitscm": [308, 312], "unitscontain": 117, "unitsmin": 319, "unitss": 319, "univari": 103, "univers": [20, 94, 107, 326, 335], "universit": 94, "universiteit": 20, "universit\u00e9": 1, "unix": [206, 230, 240, 241, 319], "unknown": [42, 316], "unless": [2, 97, 98, 107, 125, 128, 172, 187, 190, 229, 388], "unlik": [107, 158, 326], "unlink": [107, 109, 116], "unmask": 341, "unmodifi": 2, "unread": 316, "unresolv": 324, "unrest": 2, "unset": 320, "until": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 312, 325, 383, 397], "untitl": 6, "unusu": 96, "unwant": 341, "unweight": 339, "up": [4, 6, 9, 12, 85, 92, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 294, 308, 315, 329], "upb": 308, "updat": [2, 4, 5, 6, 85, 86, 88, 99, 106, 107, 110, 116, 262, 346, 353, 362, 365, 370, 373, 382, 385], "upgrad": [5, 86, 88, 90, 343], "upload": [15, 42, 87, 156, 189, 316, 386], "upon": 2, "upper": [107, 140, 161, 329, 332, 339], "upstream": [5, 6], "ur": [38, 60, 77, 98, 107, 158, 159, 168, 169, 204, 205, 262, 298, 299, 308, 326, 331, 336], "ureg": 117, "url": [0, 42, 94, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 315, 325, 386], "us": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 29, 30, 32, 33, 36, 37, 38, 39, 42, 47, 48, 50, 53, 55, 61, 64, 67, 68, 71, 75, 76, 77, 80, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 127, 129, 133, 134, 135, 136, 138, 147, 153, 158, 159, 163, 170, 172, 173, 175, 180, 187, 190, 191, 193, 195, 196, 197, 207, 211, 212, 213, 214, 215, 216, 218, 219, 220, 222, 223, 225, 229, 231, 232, 233, 235, 236, 238, 242, 243, 244, 245, 247, 248, 252, 259, 262, 265, 266, 269, 275, 276, 285, 287, 288, 290, 292, 294, 304, 306, 307, 309, 311, 312, 313, 314, 315, 318, 319, 320, 321, 322, 324, 325, 327, 328, 330, 333, 334, 335, 336, 337, 338, 340, 341, 346, 353, 360, 377, 378, 384, 386, 388, 390, 392, 394, 396, 397], "usabl": 92, "usag": [8, 84, 86, 326, 335, 395], "use_coord": 163, "use_jac": 96, "use_list": [77, 249], "use_plotli": 329, "used_compon": 386, "used_rang": [97, 332], "uselabel_x": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "useless": [37, 312], "useoffset": 329, "usepackag": 329, "user": [1, 2, 5, 6, 10, 19, 20, 48, 84, 91, 92, 94, 95, 98, 104, 107, 112, 116, 158, 161, 179, 242, 310, 311, 312, 313, 316, 323, 326, 327, 329, 332, 338, 339, 370, 376, 392, 394], "user_global_n": 339, "user_n": 339, "userguid": [9, 88, 90, 92, 93, 305, 308, 316, 318, 328, 392], "usermodel": [75, 77, 112], "usernam": 319, "userwarn": [16, 24, 45, 47, 75, 326, 328, 337, 340], "usetex": 329, "usual": [19, 36, 39, 51, 64, 80, 87, 92, 102, 137, 139, 146, 150, 157, 162, 166, 167, 171, 175, 176, 177, 180, 192, 208, 209, 254, 256, 259, 269, 272, 286, 290, 310, 311, 312, 315, 316, 326, 328, 329], "utc": [107, 240, 319, 326, 329, 370], "utf": 325, "util": [6, 318, 328, 353, 376], "uv": [19, 20, 94, 310, 311], "v": [19, 20, 31, 38, 75, 76, 84, 88, 90, 91, 94, 96, 98, 99, 105, 107, 111, 115, 119, 153, 164, 290, 304, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 323, 324, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 350], "v0_8": [329, 330], "v_1": [99, 326], "vacuum": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 363], "vaidulych": 94, "vajda": 94, "val": [99, 107, 116, 308, 319], "valentin": 94, "valid": [2, 17, 27, 68, 92, 99, 107, 110, 112, 141, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 274, 314, 316, 319, 333, 390], "valtchev": 94, "valtera": 94, "valu": [2, 6, 15, 16, 18, 20, 21, 22, 23, 24, 27, 30, 42, 44, 46, 48, 51, 55, 60, 61, 68, 71, 75, 76, 77, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133, 135, 136, 140, 147, 151, 152, 155, 158, 159, 161, 163, 164, 166, 167, 168, 169, 172, 183, 187, 190, 193, 195, 196, 204, 205, 227, 229, 233, 235, 241, 243, 244, 248, 255, 259, 269, 271, 272, 275, 276, 284, 286, 287, 298, 299, 304, 308, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 324, 326, 328, 329, 330, 331, 332, 334, 337, 338, 339, 341, 346, 375, 388, 391, 392], "valueerror": [107, 117, 124, 273, 320, 326], "van": [20, 94, 306], "var": [107, 195, 275, 308], "vardiff": 135, "variabl": [30, 75, 76, 77, 95, 96, 101, 103, 104, 106, 107, 115, 118, 138, 173, 275, 287, 304, 305, 308, 314, 315, 316, 324, 329], "varianc": [22, 23, 24, 101, 107, 113, 118, 119, 135, 150, 195, 275, 287, 304, 311, 333, 392], "variat": [64, 98, 308, 332, 391], "variou": [4, 41, 57, 76, 80, 91, 97, 102, 107, 116, 124, 163, 188, 230, 259, 269, 290, 304, 312, 315, 324, 326, 328, 332, 339, 390], "vast": 339, "vdlist": [77, 249, 392], "ve": 91, "vector": [76, 97, 106, 113, 115, 119, 152, 290, 304, 311, 329, 332, 337], "vegg": 94, "vei": 75, "vel": 320, "veloc": 320, "velopp": [94, 306], "ven": [316, 319], "venv": [5, 21, 24, 85, 88, 89, 90, 328, 339], "verbos": [17, 19, 21, 374], "veri": [6, 12, 20, 80, 92, 308, 309, 310, 312, 319, 329, 332, 336, 341], "verifi": [2, 6, 85, 86], "verkn\u00fcpft": [316, 319], "versicolor": 22, "version": [0, 2, 6, 10, 12, 47, 48, 77, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 136, 153, 226, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 315, 320, 323, 339, 342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "versu": [6, 31, 308], "vertex": 320, "vertic": [51, 107, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 312, 329, 332], "vi": [2, 20], "via": [5, 89, 94, 113, 178, 306], "vibrat": [134, 308], "vide": [316, 319], "view": [9, 45, 51, 107, 117, 153, 304, 326, 329, 339], "view_init": 22, "viginica": 22, "vijaysekhar": 94, "vilmin": 332, "vimont": 94, "vincent": 94, "violat": 21, "violet": [51, 76], "virginica": 22, "viridi": [113, 115, 329, 330], "virtual": [5, 90, 324], "viru": 2, "visibl": [94, 197, 329, 330], "visit": 84, "visual": [21, 93, 117, 311, 313, 314, 341], "vk": [316, 319], "vladimir": 94, "vmax": [115, 329], "vmin": [115, 329], "vogt": 94, "voic": 9, "void": 312, "voigt": [134, 288, 308], "voigtmodel": [76, 134, 308], "vollmer": 94, "volt": [38, 240], "voluceau": 2, "volum": 114, "vscode": 13, "vshift": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "vsn": 320, "vt": 119, "vz0466": [23, 42, 91, 313, 341], "vz0467": [42, 91, 313, 341], "vz0468": 316, "vz0470": 316, "vz0471": 23, "vz0512": 23, "vz0517": 23, "vz0520": [42, 91, 313, 341], "vz0521": [42, 91, 313, 341], "v\u00e2\u00ba": [316, 319], "v\u00fc\u00f6": [316, 319], "w": [16, 48, 75, 94, 98, 105, 107, 110, 111, 115, 117, 137, 171, 176, 177, 304, 312, 315, 316, 319], "w1": [105, 111], "w_init": 101, "wa": [2, 20, 37, 92, 96, 99, 155, 310, 315, 316, 319, 324, 326, 341, 346, 349, 350, 354, 384, 388, 389, 391, 392], "waal": 94, "wai": [0, 6, 10, 37, 55, 84, 94, 99, 107, 169, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 305, 315, 316, 319, 323, 324, 326, 329, 332, 333, 341, 370, 390], "waiver": 2, "walczak": 94, "wang": 94, "want": [6, 27, 36, 37, 39, 71, 87, 88, 90, 92, 95, 97, 98, 107, 115, 124, 135, 152, 175, 183, 272, 279, 308, 313, 316, 319, 320, 323, 324, 325, 326, 329, 330, 331, 332, 333, 339, 341], "war": 2, "warg": 99, "warm": 112, "warm_start": [97, 100, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119], "warn": [6, 21, 22, 42, 64, 75, 80, 97, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 150, 259, 261, 269, 283, 289, 290, 310, 315, 325, 326, 328, 329, 331, 332, 336, 337, 338, 340, 349, 355, 377, 382, 383], "warning_": 47, "warrant": [2, 312], "warranti": 2, "wassim": 94, "water": 2, "waterfal": [107, 210, 211, 212, 213, 215, 216, 221, 223, 329, 346], "watt": 117, "wave": 48, "wavelength": [4, 16, 17, 19, 20, 24, 27, 37, 38, 95, 240, 304, 310, 311, 314, 332], "wavenumb": [18, 36, 37, 38, 39, 42, 44, 47, 48, 64, 91, 95, 98, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 240, 312, 313, 316, 318, 319, 320, 326, 329, 332, 338, 339, 341], "wdf": [47, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 316, 391], "we": [1, 3, 5, 6, 8, 9, 10, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 80, 83, 84, 85, 88, 91, 92, 98, 107, 109, 116, 124, 135, 137, 139, 146, 154, 157, 162, 166, 167, 171, 175, 176, 177, 180, 183, 192, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 230, 240, 241, 254, 256, 260, 262, 272, 279, 286, 305, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 320, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 339, 340, 341, 365], "web": [92, 325, 329], "webbook": [156, 368], "websit": [2, 20, 42, 87], "weckhuysen": 94, "wed": [23, 42, 91, 313, 316, 341], "weight": [64, 105, 106, 107, 111, 115, 136, 195, 304, 329, 339], "welcom": [5, 10, 12, 84], "weleas": 316, "well": [2, 12, 19, 43, 115, 163, 310, 311, 329, 396], "were": [2, 31, 103, 106, 107, 112, 119, 308, 316, 319, 329, 340, 354, 389, 391, 397], "wert": [290, 339], "wh": 110, "whan": 304, "what": [3, 12, 51, 76, 91, 107, 153, 305, 308, 322, 332, 335, 341, 343], "whatev": [95, 107, 324], "whatsnew": [4, 6, 379], "whatsoev": 2, "when": [0, 2, 4, 6, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 68, 75, 76, 77, 80, 84, 86, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 115, 116, 118, 119, 124, 129, 136, 151, 152, 163, 164, 172, 187, 190, 197, 207, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 260, 269, 272, 304, 308, 310, 312, 315, 319, 325, 326, 329, 331, 332, 334, 338, 339, 341, 348, 352, 356, 370, 375, 377, 384, 386, 391, 392, 397], "whenev": [115, 124, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 330], "where": [2, 6, 9, 13, 46, 47, 64, 75, 76, 77, 80, 98, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 129, 137, 138, 140, 157, 161, 164, 170, 171, 173, 175, 176, 177, 187, 191, 207, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 259, 269, 272, 275, 287, 290, 291, 292, 294, 304, 305, 308, 313, 316, 319, 322, 326, 327, 329, 331, 332, 336, 337, 340, 397], "wherebi": 310, "whether": [2, 96, 97, 98, 99, 103, 105, 106, 107, 111, 112, 115, 119, 125, 128, 153, 155, 163, 187, 242, 249, 310, 311, 329, 338], "which": [2, 10, 15, 20, 22, 38, 55, 61, 64, 75, 76, 80, 87, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 124, 125, 126, 127, 128, 135, 136, 137, 139, 141, 142, 143, 146, 147, 150, 154, 157, 159, 162, 164, 165, 166, 167, 169, 171, 172, 175, 176, 177, 178, 180, 183, 190, 192, 193, 195, 196, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 227, 229, 254, 256, 257, 259, 266, 269, 271, 272, 275, 276, 285, 286, 287, 290, 299, 304, 305, 308, 310, 311, 312, 314, 316, 319, 320, 323, 324, 326, 329, 330, 332, 333, 337, 338, 339, 341, 365, 386, 388, 389, 390], "while": [5, 22, 91, 92, 96, 105, 106, 111, 304, 310, 311, 314, 329, 332, 339], "whitak": [68, 94, 151, 333, 385], "white": [197, 329, 330], "whitegrid": [329, 330], "whiten": [101, 113, 392], "whiten_solv": 101, "whitespac": 329, "whittak": [70, 72, 73, 102, 107, 230, 259, 269, 307, 335, 390], "whn": [230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252], "whnever": [291, 292, 294], "who": [1, 2, 323], "whole": [2, 42, 76, 155, 308, 312, 332], "whose": [2, 101, 103, 106, 107, 110, 112, 113, 115, 118, 119, 161, 195, 287, 316], "why": [6, 12, 93, 308, 365], "wich": [21, 22], "wide": [48, 85, 92], "widget": [87, 329, 368, 373, 385], "width": [22, 30, 48, 51, 75, 76, 80, 94, 97, 107, 134, 163, 170, 175, 191, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 270, 288, 306, 308, 328, 329], "width_height": [75, 312], "wiggl": 329, "wiki": [6, 329], "wikipedia": [329, 339], "wild": 324, "wilei": 94, "wilk": [94, 236, 318], "william": 1, "wilson": 94, "windig": [94, 118], "window": [5, 59, 62, 73, 80, 85, 87, 89, 91, 97, 102, 107, 137, 151, 157, 163, 171, 175, 176, 177, 206, 228, 230, 240, 241, 249, 259, 268, 269, 270, 272, 290, 291, 307, 312, 316, 319, 322, 323, 333, 335, 336, 355, 360, 369], "window_length": [102, 163, 259, 269], "wire": [41, 49, 57, 107, 113, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 307, 316, 391], "wise": [98, 107, 113, 122, 123, 126, 127, 193, 196, 337], "wish": [107, 153, 323], "with_suffix": [107, 116, 188], "with_transpos": [197, 203, 224], "within": [2, 9, 98, 107, 129, 242, 310, 312, 324, 325], "without": [2, 6, 87, 102, 107, 146, 158, 162, 180, 192, 230, 232, 240, 241, 256, 259, 304, 305, 310, 312, 315, 324, 329, 330, 332, 338, 365], "wittaker_smooth_licens": 290, "wl": 312, "wlen": [75, 163, 312], "wodger": [38, 107, 109, 116, 240, 280, 316], "won": [22, 312], "word": [2, 101, 103, 106, 110, 112, 113, 115, 118, 119, 325], "wordpress": 310, "work": [0, 1, 2, 6, 16, 18, 21, 24, 37, 42, 45, 47, 55, 64, 75, 76, 83, 84, 86, 92, 97, 107, 112, 133, 150, 155, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 290, 309, 315, 316, 318, 323, 324, 326, 328, 329, 335, 339, 346, 348, 349, 351, 356, 359, 365, 369, 370, 376, 383, 388, 391, 392, 394, 395, 397], "workflow": [353, 358, 397], "workspac": 323, "worldwid": 2, "wors": [105, 111, 115], "worth": [6, 312, 319, 329], "worthwhil": 324, "would": [6, 18, 21, 31, 37, 64, 71, 101, 103, 105, 106, 110, 111, 112, 113, 115, 118, 119, 155, 310, 312, 320, 332, 338, 339, 384], "wp": [42, 105, 111, 316, 386], "wr": 312, "wrap": [102, 115, 117, 259, 269], "wrapper": [101, 259, 266, 285, 320, 337, 339], "wrapper1": 328, "write": [2, 4, 8, 11, 43, 92, 107, 109, 116, 153, 292, 294, 308, 319, 323, 331, 332, 337, 367, 384], "write_csv": [363, 392], "write_excel": 297, "write_jcamp": 318, "write_jdx": 318, "write_matlab": 295, "writer": [318, 329, 346], "written": [2, 8, 9, 119, 318, 324, 397], "wrong": [12, 315, 380], "wrongli": [349, 389], "wrt": [105, 111, 315], "wspace": 197, "www": [0, 27, 42, 94, 294, 314, 315, 324, 332], "x": [1, 6, 17, 18, 19, 20, 22, 23, 24, 27, 31, 36, 37, 38, 39, 42, 44, 46, 48, 51, 61, 68, 71, 75, 76, 77, 80, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 115, 118, 119, 124, 135, 136, 137, 139, 141, 142, 143, 146, 147, 150, 154, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 179, 180, 191, 192, 195, 197, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 230, 231, 232, 238, 239, 240, 241, 242, 245, 246, 247, 248, 252, 254, 256, 265, 266, 272, 274, 275, 276, 279, 285, 286, 287, 294, 298, 299, 304, 305, 306, 308, 310, 311, 312, 313, 314, 316, 318, 319, 320, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 363, 364, 384, 391, 397], "x1": [68, 332, 337], "x2": [68, 310, 319, 332, 337], "x3": [68, 332], "x4": [68, 332], "x5": 332, "x6": 332, "x64": 339, "x7": 332, "x8": 332, "x9b": 20, "x_": [18, 37, 314], "x_bckg_yyybg": 231, "x_coord": 4, "x_correct": 319, "x_data": 4, "x_hat": [20, 100, 101, 103, 106, 110, 112, 113, 115, 118, 119], "x_hat_a": 17, "x_hat_b": 17, "x_load": 314, "x_normal": 319, "x_origin": [101, 103, 106, 110, 112, 113, 115, 118, 119], "x_revers": [107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223], "x_samplename_yyi": 231, "x_score": [115, 314], "x_test": [27, 314], "x_train": [27, 314], "x_transform": [101, 103, 106, 110, 112, 113, 115, 118, 119], "xand": 110, "xarrai": [3, 107, 283], "xavier": 94, "xaxi": [240, 389], "xc": [80, 332], "xcm": 80, "xcode": [5, 89], "xcorr": 313, "xcp": 80, "xfail": 6, "xhan": 339, "xiang": 94, "xlabel": [18, 22, 23, 31, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "xlim": [75, 77, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 331, 334, 336, 339, 340], "xm": [71, 339], "xn": 339, "xpmlocat": 320, "xpp": 320, "xsg": 339, "xsm": 339, "xsm2": 339, "xtick_bottom": 329, "xtick_color": 329, "xtick_direct": 329, "xtick_labels": 329, "xtick_major_bottom": 329, "xtick_major_pad": 329, "xtick_major_s": 329, "xtick_major_top": 329, "xtick_major_width": 329, "xtick_minor_bottom": 329, "xtick_minor_pad": 329, "xtick_minor_s": 329, "xtick_minor_top": 329, "xtick_minor_vis": 329, "xtick_minor_width": 329, "xtick_top": 329, "xw": 339, "xwhit": 339, "xx": [156, 329], "xxx": 320, "xxx_data": 4, "xxxx": 156, "xxxxxxx": 156, "xy": [47, 75, 76, 312, 329], "xytext": [75, 76, 312, 329], "y": [15, 17, 18, 20, 22, 23, 24, 27, 30, 31, 36, 37, 39, 42, 43, 44, 46, 48, 75, 76, 77, 91, 94, 96, 98, 99, 100, 101, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 135, 136, 147, 154, 158, 161, 163, 164, 168, 195, 197, 205, 210, 212, 213, 215, 216, 221, 222, 223, 230, 231, 232, 238, 239, 240, 241, 242, 245, 246, 247, 248, 252, 274, 275, 276, 279, 287, 298, 299, 304, 306, 308, 310, 311, 312, 313, 314, 316, 317, 318, 320, 326, 328, 329, 330, 337, 338, 339, 341, 348, 377, 392], "y_coord": 4, "y_data": 4, "y_event": 96, "y_hat": 115, "y_load": 314, "y_pred": [105, 111, 115], "y_revers": [107, 210, 212, 213, 215, 216, 221, 222, 223, 329], "y_score": [115, 314], "y_std": 314, "y_test": [27, 314], "y_test_hat": 314, "y_train": [27, 314], "y_transform": [106, 115], "y_true": [105, 111, 115], "year": 0, "yellow": 325, "yet": [13, 107, 271, 323, 324, 326, 330], "yield": [6, 8, 312, 315], "ylabel": [18, 22, 23, 31, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "ylim": [75, 76, 107, 113, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 308, 312, 339], "yml": [89, 346], "yonesi": [94, 306], "you": [0, 3, 5, 6, 9, 10, 12, 13, 38, 42, 83, 84, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 101, 107, 115, 152, 153, 305, 308, 309, 313, 316, 319, 320, 323, 324, 325, 326, 329, 336, 338, 340, 341, 349, 380], "your": [0, 4, 6, 13, 83, 84, 85, 86, 87, 91, 92, 95, 96, 101, 107, 260, 319, 322, 323, 324, 325, 326, 332, 336], "yourmambaforgefold": 90, "yourself": 6, "yourworkingfold": 90, "yscale": [15, 16], "ytick_color": 329, "ytick_direct": 329, "ytick_labels": 329, "ytick_left": 329, "ytick_major_left": 329, "ytick_major_pad": 329, "ytick_major_right": 329, "ytick_major_s": 329, "ytick_major_width": 329, "ytick_minor_left": 329, "ytick_minor_pad": 329, "ytick_minor_right": 329, "ytick_minor_s": 329, "ytick_minor_vis": 329, "ytick_minor_width": 329, "ytick_right": 329, "yu": 94, "yukihiro": 94, "yukiteru": 94, "yyi": 231, "z": [36, 39, 44, 47, 48, 94, 98, 99, 107, 164, 197, 274, 306, 316, 319, 320, 326, 329, 337], "z1": 320, "zapf": 329, "zden\u011bk": 94, "zenodo": [0, 94, 306], "zeolit": [21, 91, 94, 306], "zeorslik": [107, 299], "zero": [16, 107, 110, 125, 136, 137, 146, 158, 159, 161, 168, 169, 192, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 256, 275, 287, 299, 300, 301, 302, 303, 313, 326, 335, 336], "zerodivisionerror": [107, 136], "zeros_lik": [107, 158, 159, 168, 169, 204, 205, 298], "zeroto": 110, "zeynep": 94, "zf": 336, "zf_size": 334, "zff": 320, "zhang": 94, "zholobenko": [94, 304], "zip": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 51, 52, 55, 60, 61, 64, 67, 68, 71, 75, 76, 77, 80, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 321, 346, 386], "zlabel": [23, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329], "zlim": [60, 61, 107, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 329, 331], "zmqshell": 339, "zoom": [75, 312, 329, 336, 339], "zo\u00e9": 94, "zpd": 336, "zscore": 151, "zsm": 320, "zuberbuehl": [94, 100, 304], "\u00b2": [316, 319], "\u00b2\u00f8": [316, 319], "\u00b3": [316, 319], "\u00b3\u00ba": [316, 319], "\u00b5": [61, 75, 77, 316, 319, 328, 331, 334], "\u00b5\u00f6": [316, 319], "\u00b9": [18, 37, 42, 44, 46, 48, 75, 91, 107, 136, 195, 312, 313, 316, 318, 319, 320, 326, 336, 338, 341], "\u00ba": [316, 319], "\u00bab": [316, 319], "\u00bajq": [316, 319], "\u00bal\u00ea\u00f0\u00bas\u00f6\u00fe\u00bav\u00f0m\u00ba\u00eeg4\u00bac\u00e0": [316, 319], "\u00bam\u00bcb\u00ba\u00e2\u00fe\u00e57\u00fb\u00ed": [316, 319], "\u00baq": [316, 319], "\u00ba\u00e1r\u00ef\u00b9\u00e7": [316, 319], "\u00ba\u00ed9\u00f4\u00ba\u00f3\u00e0\u00b3\u00baou": [316, 319], "\u00ba\u00f0\u00b9": [316, 319], "\u00ba\u00f3": [316, 319], "\u00ba\u00f4": [316, 319], "\u00ba\u00fc": [316, 319], "\u00bc": [316, 319], "\u00bd": [316, 319], "\u00bd\u00b2\u00f2": [316, 319], "\u00be": [316, 319], "\u00bec\u00f6": [316, 319], "\u00df": [316, 319], "\u00e0": [94, 316, 319], "\u00e0p": [316, 319], "\u00e1": 94, "\u00e1\u00f8": [316, 319], "\u00e2": [316, 319], "\u00e2\u00bd\u00e4": [316, 319], "\u00e3": [316, 319], "\u00e3i\u00b9": [316, 319], "\u00e4": [316, 319], "\u00e4\u00e4": [316, 319], "\u00e5": [316, 319], "\u00e5o": [316, 319], "\u00e6": [316, 319], "\u00e6\u00bap": [316, 319], "\u00e7": [94, 316, 319], "\u00e7e": [316, 319], "\u00e8x": [316, 319], "\u00e9": [94, 316, 319], "\u00e9chantillon": [316, 319], "\u00e9cran": [316, 319], "\u00ea": [316, 319], "\u00eap": [316, 319], "\u00ea\u00b9x\u00f5\u00bd": [316, 319], "\u00ea\u00f2\u00ba": [316, 319], "\u00eb": [316, 319], "\u00eb\u00ba": [316, 319], "\u00eb\u00e1\u00ba\u00e0": [316, 319], "\u00eb\u00f0": [316, 319], "\u00ec": [316, 319], "\u00ecncrement": 98, "\u00ecrdata": 316, "\u00ec\u00ba": [316, 319], "\u00ed": [316, 319], "\u00edn": [316, 319], "\u00edu": [316, 319], "\u00ed\u00b9": [316, 319], "\u00ee": [316, 319], "\u00ee\u00e2": [316, 319], "\u00ee\u00f6": [316, 319], "\u00efk\u00aa": [316, 319], "\u00efq9o\u00ec": [316, 319], "\u00f1": [316, 319], "\u00f1m\u00e0": [316, 319], "\u00f1\u00e8": [316, 319], "\u00f1\u00f1": [316, 319], "\u00f2": [316, 319], "\u00f249": [316, 319], "\u00f2\u00f9": [316, 319], "\u00f3": [94, 316, 319], "\u00f3\u00e5\u00ba": [316, 319], "\u00f3\u00e6": [316, 319], "\u00f4\u00ed\u00ba": [316, 319], "\u00f5": [316, 319], "\u00f6": [316, 319], "\u00f6\u00fe": [316, 319], "\u00f8": 94, "\u00f8\u00ba": [316, 319], "\u00f8\u00e31": [316, 319], "\u00fa": [316, 319], "\u00fa2": [316, 319], "\u00fa\u00bay": [316, 319], "\u00fa\u00eb": [316, 319], "\u00fb": [316, 319], "\u00fby\u00ee": [316, 319], "\u00fb\u00ba": [316, 319], "\u00fb\u00e6": [316, 319], "\u00fb\u00fd\u00e0": [316, 319], "\u00fc": [316, 319], "\u00fc\u00b9": [316, 319], "\u00fd": [316, 319], "\u00fdh": [316, 319], "\u00fd\u00e9\u00ba\u00f9h": [316, 319], "\u00fd\u00f3\u00e9\u00ba": [316, 319], "\u00fe": [316, 319], "\u00ff\u00e9\u00ba": [316, 319], "\u00ff\u00f0\u00e6": [316, 319], "\u0161tefan": 94, "\u03bb": 339, "\u2075": 326}, "titles": ["Citing SpectroChemPy", "Contributors", "SpectroChempy License", "See also", "Adding a Reader", "Contributing to SpectroChemPy", "Contributing to the code", "Contributing to specific parts of the code", "SpectroChemPy Docstring Guide", "Contributing to Documentation", "Adding your examples to the gallery", "Developer\u2019s Guide", "Reporting Issues", "Editors", "Decomposition", "EFA example", "EFA (Keller and Massart original example)", "FastICA example", "2D-IRIS analysis example", "MCR-ALS example (adapted from Jaumot et al. 2005)", "MCR-ALS with kinetic constraints", "NMF analysis example", "PCA example (iris dataset)", "PCA analysis example", "SIMPLISMA example", "Computation times", "Cross-decomposition", "PLS regression example", "Computation times", "Curvefitting", "Fitting 1D dataset", "Solve a linear equation using LSTSQ", "Computation times", "Analysis NDDataset", "Computation times", "How to use NDDataset", "NDDataset creation and plotting example", "NDDataset coordinates example", "Units manipulation examples", "NDDataset creation and plotting example", "Computation times", "Import / Export", "Reading datasets", "Loading an IR (omnic SPG) experimental file", "Loading Bruker OPUS files", "Loading of experimental 1D NMR data", "Loading RAMAN experimental file", "Reading Renishaw WiRE files", "Reading SPC format files", "Computation times", "Plotting datasets", "Using <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">plot_multiple</span></code> to plot several datasets on the same figure", "Introduction to the plotting librairie", "Computation times", "Project Management", "Project creation", "Computation times", "Core functionalities", "Computation times", "Apodization", "Exponential window multiplication", "Sine bell and squared Sine bell window multiplication", "Computation times", "Baseline", "NDDataset baseline correction", "Computation times", "Denoising", "Denoising a 2D Raman spectrum", "Removing cosmic ray spikes from a Raman spectrum", "Computation times", "filtering", "Savitky-Golay and Whittaker-Eilers smoothing of a Raman spectrum", "Computation times", "Processing NDDataset", "Processing NMR datasets", "Analysis CP NMR spectra", "Processing NMR spectra (slicing, baseline correction, peak picking, peak fitting)", "Processing Relaxation measurement", "Computation times", "Processing Raman datasets", "Processing RAMAN spectra", "Computation times", "Computation times", "Example\u2019s gallery", "Getting Help", "Installation Guide", "Optional Dependencies", "Install in Google Colaboratory (Colab)", "Installation Guide for Mac OSX and Linux", "Installation from Sources", "Installation Guide for Windows", "Quickstart Tutorial \ud83d\ude80", "Why SpectroChemPy?", "SpectroChemPy: Advanced Spectroscopic Data Analysis", "Bibliography", "Frequently asked questions (FAQ)", "spectrochempy.ActionMassKinetics", "spectrochempy.Baseline", "spectrochempy.Coord", "spectrochempy.CoordSet", "spectrochempy.EFA", "spectrochempy.FastICA", "spectrochempy.Filter", "spectrochempy.IRIS", "spectrochempy.IrisKernel", "spectrochempy.LSTSQ", "spectrochempy.MCRALS", "spectrochempy.NDDataset", "spectrochempy.NDDataset.save", "spectrochempy.NDDataset.save_as", "spectrochempy.NMF", "spectrochempy.NNLS", "spectrochempy.Optimize", "spectrochempy.PCA", "spectrochempy.PFR", "spectrochempy.PLSRegression", "spectrochempy.Project", "spectrochempy.Quantity", "spectrochempy.SIMPLISMA", "spectrochempy.SVD", "spectrochempy.Script", "spectrochempy.Unit", "spectrochempy.abs", "spectrochempy.absolute", "spectrochempy.align", "spectrochempy.all", "spectrochempy.amax", "spectrochempy.amin", "spectrochempy.any", "spectrochempy.arange", "spectrochempy.argmax", "spectrochempy.argmin", "spectrochempy.around", "spectrochempy.asls", "spectrochempy.asymmetricvoigtmodel", "spectrochempy.autosub", "spectrochempy.average", "spectrochempy.bartlett", "spectrochempy.basc", "spectrochempy.blackmanharris", "spectrochempy.clip", "spectrochempy.concatenate", "spectrochempy.conj", "spectrochempy.conjugate", "spectrochempy.coordmax", "spectrochempy.coordmin", "spectrochempy.cs", "spectrochempy.cumsum", "spectrochempy.dc", "spectrochempy.debug_", "spectrochempy.denoise", "spectrochempy.despike", "spectrochempy.detrend", "spectrochempy.diag", "spectrochempy.diagonal", "spectrochempy.dot", "spectrochempy.download_nist_ir", "spectrochempy.em", "spectrochempy.empty", "spectrochempy.empty_like", "spectrochempy.error_", "spectrochempy.eye", "spectrochempy.fft", "spectrochempy.find_peaks", "spectrochempy.fromfunction", "spectrochempy.fromiter", "spectrochempy.fsh", "spectrochempy.fsh2", "spectrochempy.full", "spectrochempy.full_like", "spectrochempy.gaussianmodel", "spectrochempy.general_hamming", "spectrochempy.geomspace", "spectrochempy.get_baseline", "spectrochempy.get_loglevel", "spectrochempy.gm", "spectrochempy.hamming", "spectrochempy.hann", "spectrochempy.ht", "spectrochempy.identity", "spectrochempy.ifft", "spectrochempy.info_", "spectrochempy.interpolate", "spectrochempy.is_units_compatible", "spectrochempy.ito", "spectrochempy.ito_base_units", "spectrochempy.ito_reduced_units", "spectrochempy.linspace", "spectrochempy.load", "spectrochempy.load_iris", "spectrochempy.logspace", "spectrochempy.lorentzianmodel", "spectrochempy.ls", "spectrochempy.max", "spectrochempy.mc", "spectrochempy.mean", "spectrochempy.min", "spectrochempy.multiplot", "spectrochempy.multiplot_image", "spectrochempy.multiplot_lines", "spectrochempy.multiplot_map", "spectrochempy.multiplot_scatter", "spectrochempy.multiplot_stack", "spectrochempy.multiplot_with_transposed", "spectrochempy.ones", "spectrochempy.ones_like", "spectrochempy.pathclean", "spectrochempy.pipe", "spectrochempy.pk", "spectrochempy.pk_exp", "spectrochempy.plot", "spectrochempy.plot_1D", "spectrochempy.plot_2D", "spectrochempy.plot_3D", "spectrochempy.plot_bar", "spectrochempy.plot_image", "spectrochempy.plot_map", "spectrochempy.plot_multiple", "spectrochempy.plot_pen", "spectrochempy.plot_scatter", "spectrochempy.plot_scatter_pen", "spectrochempy.plot_stack", "spectrochempy.plot_surface", "spectrochempy.plot_waterfall", "spectrochempy.plot_with_transposed", "spectrochempy.polynomialbaseline", "spectrochempy.ps", "spectrochempy.ptp", "spectrochempy.qsin", "spectrochempy.random", "spectrochempy.read", "spectrochempy.read_carroucell", "spectrochempy.read_csv", "spectrochempy.read_ddr", "spectrochempy.read_dir", "spectrochempy.read_hdr", "spectrochempy.read_jcamp", "spectrochempy.read_labspec", "spectrochempy.read_mat", "spectrochempy.read_matlab", "spectrochempy.read_omnic", "spectrochempy.read_opus", "spectrochempy.read_quadera", "spectrochempy.read_sdr", "spectrochempy.read_soc", "spectrochempy.read_spa", "spectrochempy.read_spc", "spectrochempy.read_spg", "spectrochempy.read_srs", "spectrochempy.read_topspin", "spectrochempy.read_wdf", "spectrochempy.read_wire", "spectrochempy.read_zip", "spectrochempy.remove_masks", "spectrochempy.roll", "spectrochempy.round", "spectrochempy.rs", "spectrochempy.run_all_scripts", "spectrochempy.run_script", "spectrochempy.savgol", "spectrochempy.set_complex", "spectrochempy.set_loglevel", "spectrochempy.set_nmr_context", "spectrochempy.show", "spectrochempy.show_versions", "spectrochempy.sigmoidmodel", "spectrochempy.simpson", "spectrochempy.sine", "spectrochempy.sinm", "spectrochempy.smooth", "spectrochempy.snip", "spectrochempy.sort", "spectrochempy.sp", "spectrochempy.squeeze", "spectrochempy.stack", "spectrochempy.std", "spectrochempy.sum", "spectrochempy.swapdims", "spectrochempy.take", "spectrochempy.to", "spectrochempy.to_array", "spectrochempy.to_base_units", "spectrochempy.to_reduced_units", "spectrochempy.to_xarray", "spectrochempy.transpose", "spectrochempy.trapezoid", "spectrochempy.triang", "spectrochempy.var", "spectrochempy.voigtmodel", "spectrochempy.warning_", "spectrochempy.whittaker", "spectrochempy.write", "spectrochempy.write_csv", "spectrochempy.write_excel", "spectrochempy.write_jcamp", "spectrochempy.write_mat", "spectrochempy.write_matlab", "spectrochempy.write_xls", "spectrochempy.zeros", "spectrochempy.zeros_like", "spectrochempy.zf", "spectrochempy.zf_auto", "spectrochempy.zf_double", "spectrochempy.zf_size", "Glossary", "Public API reference", "Papers citing <code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">SpectroChemPy</span></code>", "Computation times", "Fitting", "Analysis", "MCR ALS", "Principal Component Analysis", "Peak Maxima Finding", "Peak Integration", "Partial Least Squares Regression (PLSRegression)", "API Configuration", "Import Data in SpectroChemPy", "Import IR Data", "Import/Export of JCAMP-DX files", "Import of OMNIC files", "Import of Bruker OPUS files", "Import &amp; Export", "User Guide and Tutorials", "Starting Jupyter lab", "Introduction", "Markdown Cheat Sheet", "The NDDataset object", "Core objects", "Project management", "Plotting", "Alignment of datasets", "Apodization", "Baseline corrections", "Denoising", "One-dimensional (1D) Fourier transformation", "Processing", "FTIR interferogram processing", "Mathematical operations", "Slicing NDDatasets", "Filtering, Smoothing and Denoising", "Time domain baseline correction (NMR)", "Basic transformations", "What\u2019s New in Revision", "Release notes", "What\u2019s New in Revision 0.8.1", "Revisions 0.1.0 to 0.1.19", "What\u2019s new in revision 0.2.0", "What\u2019s new in revision 0.2.10 [2021-02-14]", "What\u2019s new in revision 0.2.11 [2021-02-17]", "What\u2019s new in revision 0.2.12 [2021-02-23]", "What\u2019s new in revision 0.2.13 [2021-02-23]", "What\u2019s new in revision 0.2.14 [2021-02-25]", "What\u2019s new in revision 0.2.15 [2021-03-29]", "What\u2019s new in revision 0.2.16 [2021-11-11]", "What\u2019s new in revision 0.2.17 [2021-11-29]", "What\u2019s new in revision 0.2.18 [2022-01-05]", "What\u2019s new in revision 0.2.21 [2022-01-09]", "What\u2019s new in revision 0.2.22 [2022-01-10]", "What\u2019s new in revision 0.2.23 [2022-01-16]", "What\u2019s new in revision 0.2.4", "What\u2019s new in revision 0.2.5", "What\u2019s new in revision 0.2.6", "What\u2019s new in revision 0.2.7", "What\u2019s new in revision 0.2.8", "What\u2019s new in revision 0.2.9 [2021-11-29]", "What\u2019s new in revision 0.3.0 [2022-01-20]", "What\u2019s new in revision 0.3.1 [2022-01-21]", "What\u2019s new in revision 0.3.2 [2022-01-31]", "What\u2019s new in revision 0.3.3 [2022-03-9]", "What\u2019s new in revision 0.4.1 [2022-03-14]", "What\u2019s new in revision 0.4.10 [2023-01-07]", "What\u2019s new in revision 0.4.2 [2022-03-16]", "What\u2019s new in revision 0.4.3 [2022-03-20]", "What\u2019s new in revision 0.4.4 [2022-03-22]", "What\u2019s new in revision 0.4.5 [2022-04-09]", "What\u2019s new in revision 0.4.6 [2022-05-16]", "What\u2019s new in revision 0.4.7 [2022-05-16]", "What\u2019s new in revision 0.4.9 [2023-01-05]", "What\u2019s new in revision 0.5.0 [2023-01-11]", "What\u2019s new in revision 0.5.1", "What\u2019s new in revision 0.5.2", "What\u2019s new in revision 0.5.3", "What\u2019s new in revision 0.5.4", "What\u2019s new in revision 0.5.5", "What\u2019s new in revision 0.6.1", "What\u2019s new in revision 0.6.10", "What\u2019s new in revision 0.6.2", "What\u2019s new in revision 0.6.3", "What\u2019s new in revision 0.6.4", "What\u2019s new in revision 0.6.5", "What\u2019s new in revision 0.6.6", "What\u2019s new in revision 0.6.7", "What\u2019s new in revision 0.6.8", "What\u2019s new in revision 0.6.9", "What\u2019s new in revision 0.7.0", "What\u2019s new in revision 0.7.1", "What\u2019s new in revision 0.7.2", "What\u2019s New in Revision 0.8.0", "What\u2019s New in Revision 0.8.1"], "titleterms": {"": [11, 83, 95, 324, 328, 337, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "0": [343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "01": [355, 356, 357, 358, 365, 366, 367, 370, 377, 378], "02": [347, 348, 349, 350, 351], "03": [352, 368, 369, 371, 372, 373], "04": 374, "05": [355, 375, 376, 377], "07": 370, "09": [356, 374], "1": [4, 16, 326, 343, 344, 345, 366, 369, 379, 384, 395, 398], "10": [347, 357, 370, 385], "11": [348, 353, 354, 364, 378], "12": 349, "13": 350, "14": [347, 351, 369], "15": 352, "16": [353, 358, 371, 375, 376], "17": [348, 354], "18": 355, "19": 345, "1d": [30, 45, 80, 326, 329, 334], "2": [4, 16, 326, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 371, 380, 386, 396], "20": [365, 372], "2005": 19, "2021": [306, 347, 348, 349, 350, 351, 352, 353, 354, 364], "2022": [306, 355, 356, 357, 358, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376], "2023": [306, 370, 377, 378], "2024": 306, "2025": 306, "21": [356, 366], "22": [357, 373], "23": [349, 350, 358], "25": 351, "29": [352, 354, 364], "2d": [18, 67, 76, 77, 80, 333], "3": [4, 16, 343, 365, 366, 367, 368, 372, 381, 387], "31": 367, "4": [4, 16, 343, 359, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382, 388], "5": [4, 343, 360, 374, 378, 379, 380, 381, 382, 383, 389], "6": [343, 361, 375, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393], "7": [343, 362, 376, 391, 394, 395, 396], "8": [343, 344, 363, 392, 397, 398], "9": [364, 368, 377, 393], "A": [310, 312], "NOT": 92, "One": 334, "The": [305, 310, 319, 326, 332, 339], "To": 310, "With": 18, "ab": [122, 337], "about": [310, 324, 326], "abscissa": 95, "absolut": [123, 316, 337], "absorpt": 16, "acquisit": 319, "act": 320, "actionmasskinet": 96, "ad": [4, 10, 326, 329], "adapt": 19, "add": [4, 337], "addit": [85, 90, 316], "advanc": [91, 93, 319, 332], "affect": 337, "al": [19, 20, 310], "algebra": 305, "alia": 337, "align": [124, 305, 330], "all": 125, "along": 330, "also": [3, 337], "altern": [85, 305], "amax": 126, "ambigu": 310, "amin": 127, "an": [43, 312, 328], "analys": [76, 77], "analysi": [16, 18, 21, 23, 33, 75, 91, 92, 93, 305, 309, 311], "angl": 337, "ani": 128, "annot": 329, "anoth": 316, "api": [9, 75, 76, 77, 305, 315, 324, 329, 332, 339], "apod": [59, 73, 305, 331], "applic": 323, "approach": 332, "ar": 95, "arang": 129, "arcco": 337, "arccosh": 337, "archiv": 316, "arcsin": 337, "arcsinh": 337, "arctan": 337, "arctanh": 337, "argmax": 130, "argmin": 131, "aris": 324, "arithmet": 337, "around": 132, "arrai": 337, "ascend": 95, "ask": 95, "asl": 133, "aspect": 329, "assess": 310, "asymmetr": 80, "asymmetricvoigtmodel": 134, "attribut": 326, "augment": 310, "autom": 312, "automat": 18, "autosub": 135, "averag": [136, 339], "axi": 319, "backend": 86, "backward": 6, "bartlett": 137, "basc": [138, 332], "baselin": [63, 64, 73, 76, 80, 91, 97, 305, 308, 332, 334, 340], "basic": [8, 305, 310, 320, 341], "behaviour": 312, "bell": 61, "between": [38, 326], "bibliographi": 94, "binari": 337, "blackmanharri": 139, "box": 325, "break": [325, 342, 369, 378, 384, 385, 386, 388, 392, 394, 396, 397], "broaden": 334, "browser": 323, "bruker": [44, 320], "bug": [342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398], "build": 9, "bullet": 325, "c": 146, "calcul": 334, "cantera": 86, "case": 310, "cbrt": 337, "ceil": 337, "chang": [5, 6, 305, 329, 341, 342, 369, 378, 384, 385, 386, 388, 392, 394, 396, 397], "cheat": [323, 325], "chromatogram": 16, "cite": [0, 306], "clip": [140, 305], "co": 337, "code": [6, 7, 89, 95, 312, 332], "colab": 87, "colaboratori": 87, "color": 325, "command": 316, "commit": 6, "comparison": 336, "compat": 6, "complex": [305, 337], "compon": [305, 311], "comput": [25, 28, 32, 34, 40, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 86, 307], "concaten": 141, "concentr": 310, "conda": 85, "configur": [13, 310, 315, 329], "conj": 142, "conjug": 143, "constant": 332, "constraint": [20, 308], "constructor": 326, "content": [4, 5, 6, 8, 9, 85, 87, 88, 89, 90, 92, 95, 305, 322, 326], "continu": 6, "contribut": [5, 6, 7, 9, 84], "contributor": 1, "control": [5, 13], "convers": 337, "convert": 38, "convolut": 339, "coord": 98, "coordin": [18, 36, 37, 39, 95, 305, 326, 338], "coordmax": 144, "coordmin": 145, "coordset": 99, "copi": 326, "core": [57, 327], "correct": [64, 76, 80, 91, 305, 308, 332, 334, 340], "cosh": 337, "cosmic": [68, 333], "cp": 75, "creat": [4, 17, 19, 21, 38, 85, 90, 305, 323, 326, 329], "creation": [36, 39, 55, 305, 328], "cross": [26, 33], "cumsum": 147, "curv": 305, "curvefit": [29, 33], "data": [4, 16, 36, 39, 45, 77, 86, 87, 91, 93, 305, 316, 317, 319, 329, 331, 332, 337, 341], "datadir": 316, "dataset": [16, 17, 18, 19, 21, 22, 30, 36, 37, 38, 39, 42, 50, 51, 57, 73, 74, 76, 79, 305, 310, 311, 312, 314, 326, 329, 330, 337], "date": [319, 326], "dc": 148, "debug_": 149, "decomposit": [14, 26, 33, 305], "default": [312, 316, 329], "definit": 308, "deg2rad": 337, "denois": [66, 67, 73, 80, 150, 305, 333, 339], "depend": [6, 86, 342, 394, 396, 397], "deprec": [342, 371, 375, 384, 385, 386, 388, 390, 396], "descend": 95, "design": 92, "despik": [151, 333], "detail": 317, "determin": 310, "detrend": [80, 152, 332], "develop": [5, 6, 11], "diag": 153, "diagon": 154, "differ": [305, 310], "dimens": [305, 326, 330], "dimension": 334, "dimensionless": 337, "directli": 87, "directori": 316, "discuss": 84, "displai": 312, "divid": 337, "do": 324, "docstr": 8, "document": [4, 6, 8, 9, 84], "domain": [305, 334, 340], "dot": 155, "download_nist_ir": 156, "drive": 87, "driven": 6, "dx": 318, "edit": 13, "editor": 13, "efa": [15, 16, 100, 310], "eiler": [71, 339], "element": 328, "em": 157, "emphasi": 325, "empti": 158, "empty_lik": 159, "environ": [5, 85, 88, 90], "equat": [31, 308], "error": [315, 319], "error_": 160, "estim": 310, "et": 19, "evolv": [16, 305], "exampl": [8, 10, 15, 16, 17, 18, 19, 21, 22, 23, 24, 27, 36, 37, 38, 39, 83, 86, 87, 91, 141, 150, 151, 152, 155, 157, 160, 162, 181, 189, 208, 210, 217, 221, 228, 230, 237, 239, 240, 241, 246, 249, 250, 251, 258, 261, 263, 268, 270, 271, 272, 291, 330, 332], "execut": 324, "exist": [305, 326], "exp": 337, "exp2": 337, "experiment": [43, 45, 46, 312], "explor": [87, 91], "expm1": 337, "exponenti": [60, 331], "export": [41, 57, 305, 318, 321], "extens": 86, "extern": [305, 325, 326], "ey": 161, "fab": 337, "factor": [16, 21, 305], "faq": 95, "fastica": [17, 101], "featur": [342, 344, 346, 347, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 383, 385, 386, 387, 388, 390, 391, 392, 394, 396, 397, 398], "fft": [162, 334], "figur": [51, 329], "file": [4, 42, 43, 44, 46, 47, 48, 87, 95, 305, 316, 317, 318, 319, 320], "fill": [305, 334], "filter": [70, 73, 102, 305, 333, 339], "find": [305, 308, 312], "find_peak": [163, 312], "first": 330, "fit": [17, 19, 21, 30, 76, 77, 305, 308], "fix": [342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398], "float": 337, "floor": 337, "floor_divid": 337, "font": 325, "format": [4, 8, 48, 317], "fourier": [305, 334], "free": 92, "frequent": 95, "from": [19, 42, 68, 89, 95, 305, 316, 326, 328, 333], "fromfunct": 164, "fromit": 165, "fsh": 166, "fsh2": 167, "ftir": 336, "full": 168, "full_lik": 169, "function": [57, 305, 325, 326, 331, 337], "galleri": [10, 83], "gaussian": 331, "gaussianmodel": 170, "gener": [5, 16, 95, 315, 316], "general_ham": 171, "geometr": 325, "geomspac": 172, "get": [5, 17, 84, 89, 91, 95, 310, 324, 328], "get_baselin": 173, "get_loglevel": 174, "git": [87, 89], "github": 84, "given": 320, "glossari": 304, "gm": 175, "go": 324, "golai": [71, 339], "good": 316, "googl": 87, "graphic": 325, "guess": 310, "gui": 86, "guid": [8, 9, 11, 85, 88, 90, 322, 324], "guidelin": 4, "ham": 176, "handl": [315, 319], "hann": 177, "head": 325, "help": [84, 310], "histori": 326, "horizont": 325, "how": [35, 57, 95, 324, 332], "ht": 178, "hyperbol": 337, "hypercomplex": 337, "i": 338, "ident": 179, "ifft": 180, "illustr": 310, "imaginari": 331, "import": [41, 42, 57, 75, 76, 77, 80, 305, 316, 317, 318, 319, 320, 321, 326], "indent": 325, "independ": [305, 332], "index": [95, 305, 338], "influenc": 339, "info_": 181, "inform": [310, 315], "initi": 310, "inner": 330, "input": 337, "insight": 326, "inspect": 312, "instal": [13, 85, 87, 88, 89, 90, 91], "integ": 305, "integr": [6, 305, 313], "interact": 305, "interferogram": 336, "intern": 325, "interpol": [182, 305], "introduct": [52, 87, 310, 311, 314, 324, 326, 331], "invers": 305, "ir": [43, 317], "iri": [18, 22, 91, 103], "iriskernel": 104, "is_units_compat": 183, "isfinit": 337, "isinf": 337, "isnan": 337, "issu": [12, 84], "ito": 184, "ito_base_unit": 185, "ito_reduced_unit": 186, "jaumot": 19, "jcamp": 318, "join": 305, "jupyt": 323, "keep": 337, "keller": 16, "kinet": [20, 305], "l": 192, "lab": 323, "label": 326, "last": 330, "least": [80, 305, 308, 314], "librairi": 52, "licens": [1, 2], "like": [305, 326], "line": [325, 334], "linear": [31, 305, 308, 332], "lineshap": 305, "link": 325, "linspac": 187, "linux": 88, "list": [325, 337], "load": [17, 19, 20, 43, 44, 45, 46, 87, 91, 188, 305, 311, 312, 314, 320, 324, 328, 329], "load_iri": 189, "local": 42, "log": [6, 305, 337], "log10": 337, "log1p": 337, "log2": 337, "logic": 305, "logical_not": 337, "loglevel": 315, "logspac": 190, "lorentzian": 331, "lorentzianmodel": 191, "lstsq": [31, 105, 308], "mac": 88, "magnitud": [334, 337], "main": 329, "maintain": 5, "make": 5, "manag": [54, 57, 85, 305, 328], "manipul": [38, 91, 305], "manual": [18, 312], "markdown": [323, 325], "mask": [305, 341], "massart": 16, "math": 326, "mathemat": [91, 305, 325, 337], "matplotlib": 329, "matrix": [16, 305], "max": 193, "maxima": 312, "maximum": 305, "mc": 194, "mcr": [19, 20, 310], "mcral": [106, 310], "mean": 195, "measur": 77, "median": 333, "metadata": [319, 320], "method": [85, 89, 305, 308, 312, 326, 330, 332, 333, 339], "min": 196, "minim": 310, "minimum": 305, "misc": 305, "miscellan": 305, "mix": 17, "mixtur": 305, "model": [19, 21, 77, 305, 308, 332], "modul": 4, "monospac": 325, "more": [310, 312, 326], "move": 339, "multidimension": 326, "multipl": [60, 61, 331], "multipli": 337, "multiplot": 197, "multiplot_imag": 198, "multiplot_lin": 199, "multiplot_map": 200, "multiplot_scatt": 201, "multiplot_stack": 202, "multiplot_with_transpos": 203, "multivari": [305, 332], "nd": [36, 39, 326], "ndataset": 305, "nddataset": [20, 33, 35, 36, 37, 39, 57, 64, 73, 91, 107, 108, 109, 305, 308, 326, 327, 329, 332, 337, 338, 339], "neg": [305, 308, 337], "new": [18, 37, 323, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "next": [88, 90, 91, 324], "nmd": 76, "nmf": [21, 110], "nmr": [45, 73, 74, 75, 76, 77, 334, 340], "nnl": [111, 308], "non": [305, 308], "note": [325, 343], "notebook": 323, "number": [305, 310, 325, 337], "numer": 305, "numpi": [326, 337], "o": 316, "object": [17, 19, 21, 91, 305, 326, 327, 337], "offset": 305, "omnic": [43, 319, 336], "ones": 204, "ones_lik": 205, "onli": 337, "open": 92, "oper": [91, 305, 319, 326, 337], "optim": [112, 305, 310], "optimis": 308, "option": [6, 9, 86, 312, 316], "opu": [44, 320], "order": [95, 319], "origin": [16, 331], "osx": 88, "other": [2, 91, 331, 332], "output": 329, "overflow": 84, "overview": [86, 329, 332], "own": 329, "p": 226, "packag": [85, 316], "paper": 306, "paramet": [8, 308, 310, 320, 329], "part": 7, "parti": 1, "partial": [305, 314], "path": 316, "pathclean": 206, "pathlib": 316, "pathnam": 316, "pca": [22, 23, 113, 310, 311], "peak": [76, 305, 308, 312, 313], "pep8": 6, "perman": 90, "pfr": 114, "phase": 305, "pick": 76, "pipe": 207, "pk": 208, "pk_exp": 209, "pl": 27, "plot": [17, 19, 21, 36, 39, 50, 51, 52, 57, 95, 210, 305, 312, 329, 331], "plot_1d": 211, "plot_2d": 212, "plot_3d": 213, "plot_bar": 214, "plot_imag": 215, "plot_map": 216, "plot_multipl": [51, 217], "plot_pen": 218, "plot_scatt": 219, "plot_scatter_pen": 220, "plot_stack": 221, "plot_surfac": 222, "plot_waterfal": 223, "plot_with_transpos": 224, "plsregress": [115, 314], "polynomi": 332, "polynomialbaselin": 225, "power": [92, 334], "pr": 5, "practic": 316, "pre": 6, "prefer": [95, 329], "prepar": [17, 21, 329], "preprocess": 334, "prerequisit": [85, 89], "princip": [305, 311], "principl": 5, "process": [73, 74, 76, 77, 79, 80, 91, 305, 325, 335, 336], "processor": [332, 339], "profil": [17, 310], "project": [54, 55, 57, 116, 305, 327, 328], "promin": 312, "properti": 312, "pseudo": 77, "ptp": 227, "public": 305, "pure": 310, "pytest": 6, "python": [6, 85, 92], "qsin": 228, "qt": 86, "quantiti": [38, 117], "question": [95, 324], "quick": [9, 87], "quickstart": 91, "r": 256, "rad2deg": 337, "radian": 337, "rai": [68, 333], "raman": [46, 67, 68, 71, 73, 79, 80, 333], "random": 229, "rang": 305, "read": [42, 47, 48, 230, 316, 320], "read_carroucel": 231, "read_csv": 232, "read_ddr": 233, "read_dir": 234, "read_hdr": 235, "read_jcamp": 236, "read_labspec": 237, "read_mat": 238, "read_matlab": 239, "read_omn": 240, "read_opu": 241, "read_quadera": 242, "read_sdr": 243, "read_soc": 244, "read_spa": 245, "read_spc": 246, "read_spg": 247, "read_sr": 248, "read_topspin": 249, "read_wdf": 250, "read_wir": 251, "read_zip": 252, "reader": [4, 316], "real": [331, 334], "reciproc": 337, "recommend": 85, "reconstruct": 17, "refer": 305, "regist": 4, "regress": [27, 305, 314], "regular": 18, "rel": 316, "relat": 305, "relax": 77, "releas": 343, "remot": 42, "remov": [68, 328, 333], "remove_mask": 253, "renishaw": 47, "report": 12, "repositori": 87, "requir": [88, 90, 337], "resolut": 305, "resourc": 85, "result": [19, 21], "return": 337, "revis": [342, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "rint": 337, "roll": [254, 305], "rotat": 310, "round": [255, 305], "rubberband": 332, "ruff": 6, "rule": 8, "run": [6, 311, 314], "run_all_script": 257, "run_script": 258, "same": [51, 329], "sampl": 4, "save": [95, 108, 328], "save_a": 109, "savgol": [259, 339], "savitki": 71, "savitzki": 339, "scienc": 92, "scientif": 86, "script": [120, 305, 308, 324, 327], "search": [18, 316], "section": 8, "see": 3, "segment": 332, "select": [91, 305, 329], "self": 305, "seri": 80, "set": [5, 18, 37, 326], "set_complex": 260, "set_coordset": 326, "set_loglevel": 261, "set_nmr_context": 262, "setup": [5, 88, 90], "sever": [51, 326, 329, 330, 332], "shape": 325, "share": 326, "sheet": [323, 325, 329], "shift": 331, "shortcut": 90, "show": 263, "show_vers": 264, "sigmoidmodel": 265, "sign": 337, "signbit": 337, "simpl": 305, "simplisma": [24, 118], "simpson": 266, "simul": 16, "sin": 337, "sine": [61, 267, 331], "singl": 326, "singular": 305, "sinh": 337, "sinm": 268, "size": 339, "slice": [76, 338], "smooth": [71, 80, 91, 269, 305, 339], "snip": 270, "snippet": [312, 332], "solut": 310, "solv": [31, 308], "solver": 305, "sort": [271, 305], "sourc": [9, 13, 17, 89, 92, 305], "sp": 272, "spa": 319, "spc": 48, "speci": 310, "specif": [7, 316], "specifi": 95, "spectra": [16, 75, 76, 77, 80, 319, 320, 333, 334], "spectral": [17, 91, 310], "spectrochempi": [0, 2, 5, 8, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 316, 324], "spectroscop": [91, 93, 305], "spectrum": [67, 68, 71, 334], "spg": [43, 319], "spike": [68, 333], "split": 305, "sqrt": 337, "squar": [61, 80, 305, 308, 314, 337], "squeez": 273, "stack": [84, 274], "standard": 6, "start": [5, 9, 13, 87, 91, 323, 324], "statist": 305, "std": 275, "step": [4, 85, 88, 90, 91], "structur": [8, 9], "studio": 13, "style": 329, "subtract": 337, "success": 5, "suit": 6, "sum": [276, 305], "summari": 326, "support": [86, 317], "svd": 119, "swapdim": 277, "symbol": 325, "syntax": [308, 326], "system": 17, "tabl": [5, 6, 85, 87, 88, 90, 95, 305, 326], "take": 278, "tan": 337, "tanh": 337, "techniqu": 91, "test": [4, 6, 16, 86], "thi": 324, "third": 1, "time": [25, 28, 32, 34, 40, 49, 53, 56, 58, 62, 65, 69, 72, 78, 81, 82, 305, 307, 326, 334, 340], "tip": [5, 9, 90], "titl": 329, "to_arrai": 280, "to_base_unit": 281, "to_reduced_unit": 282, "to_xarrai": 283, "todo": 327, "transform": [305, 334, 341], "transpos": [284, 305], "transposit": 341, "trapezoid": 285, "trend": 332, "triang": 286, "trigonometr": 337, "troubleshoot": 86, "trunc": 337, "tutori": [9, 91, 317, 322], "type": [305, 320, 329], "ufunc": 337, "unari": 337, "understand": 91, "unidimension": 326, "unit": [38, 121, 305, 326, 337, 341], "unitless": 337, "univers": 337, "up": 5, "updat": [89, 342, 394, 396, 397], "upload": [18, 37], "us": [6, 31, 35, 51, 57, 87, 141, 150, 151, 152, 155, 157, 160, 162, 181, 189, 208, 210, 217, 221, 228, 230, 237, 239, 240, 241, 246, 249, 250, 251, 258, 261, 263, 268, 270, 271, 272, 291, 305, 308, 310, 316, 323, 326, 329, 331, 332, 339], "usag": [95, 337], "user": [322, 324], "util": 305, "valu": 305, "var": 287, "verifi": [88, 89, 90], "version": [5, 343], "visual": [13, 91], "voigtmodel": 288, "warning_": 289, "web": 323, "what": [324, 338, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398], "where": [95, 324], "whittak": [71, 290, 339], "why": 92, "width": 312, "window": [60, 61, 90, 329, 331, 339], "wire": 47, "without": 18, "work": [87, 91, 332, 337], "write": [6, 9, 291, 324], "write_csv": 292, "write_excel": 293, "write_jcamp": 294, "write_mat": 295, "write_matlab": 296, "write_xl": 297, "y": 319, "your": [5, 10, 329], "zero": [298, 305, 334], "zeros_lik": 299, "zf": 300, "zf_auto": 301, "zf_doubl": 302, "zf_size": 303, "zip": 316}})