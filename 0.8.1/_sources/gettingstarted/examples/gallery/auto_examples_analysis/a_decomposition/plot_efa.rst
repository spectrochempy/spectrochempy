
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/plot_efa.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa.py:


EFA example
===========

In this example, we perform the Evolving Factor Analysis

.. GENERATED FROM PYTHON SOURCE LINES 15-16

sphinx_gallery_thumbnail_number = 2

.. GENERATED FROM PYTHON SOURCE LINES 18-22

.. code-block:: Python

    import os

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 23-24

Upload and preprocess a dataset

.. GENERATED FROM PYTHON SOURCE LINES 24-27

.. code-block:: Python

    datadir = scp.preferences.datadir
    dataset = scp.read_omnic(os.path.join(datadir, "irdata", "nh4y-activation.spg"))








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Change the time origin

.. GENERATED FROM PYTHON SOURCE LINES 29-31

.. code-block:: Python

    dataset.y -= dataset.y[0]








.. GENERATED FROM PYTHON SOURCE LINES 32-33

columns masking

.. GENERATED FROM PYTHON SOURCE LINES 33-36

.. code-block:: Python

    dataset[:, 1230.0:920.0] = scp.MASKED  # do not forget to use float in slicing
    dataset[:, 5997.0:5993.0] = scp.MASKED








.. GENERATED FROM PYTHON SOURCE LINES 37-39

difference spectra
dataset -= dataset[-1]

.. GENERATED FROM PYTHON SOURCE LINES 39-40

.. code-block:: Python

    dataset.plot_stack(title="NH4_Y activation dataset")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_001.png
   :alt: NH4_Y activation dataset
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_001.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 41-42

Evolving Factor Analysis

.. GENERATED FROM PYTHON SOURCE LINES 42-44

.. code-block:: Python

    efa1 = scp.EFA()
    efa1.fit(dataset)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <spectrochempy.analysis.decomposition.efa.EFA object at 0x7f3abe1ff8c0>



.. GENERATED FROM PYTHON SOURCE LINES 45-46

Forward evolution of the 5 first components

.. GENERATED FROM PYTHON SOURCE LINES 46-48

.. code-block:: Python

    f = efa1.f_ev[:, :5]
    f.T.plot(yscale="log", legend=f.k.labels)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_002.png
   :alt: plot efa
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_002.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 49-52

Note the use of coordinate 'k' (component axis) in the expression above.
Remember taht to find the actul names of the coordinates, the `dims`
attribute can be used as in the following:

.. GENERATED FROM PYTHON SOURCE LINES 52-57

.. code-block:: Python

    f.dims

    # Backward evolution
    b = efa1.b_ev[:, :5]
    b.T[:5].plot(yscale="log", legend=b.k.labels)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_003.png
   :alt: plot efa
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_003.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 58-61

Show results with 3 components (which seems to already explain a large part of the dataset)
we use the magnitude of the 4th component for the cut-off value (assuming it
corresponds mostly to noise)

.. GENERATED FROM PYTHON SOURCE LINES 61-67

.. code-block:: Python

    efa1.n_components = 3
    efa1.cutoff = efa1.f_ev[:, 3].max()

    # get concentration
    C1 = efa1.transform()
    C1.T.plot(title="EFA determined concentrations", legend=C1.k.labels)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_004.png
   :alt: EFA determined concentrations
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_004.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 68-71

Fit transform : Get the concentration in too commands
The number of desired components can be passed to the EFA model,
followed by the fit_transform method:

.. GENERATED FROM PYTHON SOURCE LINES 71-76

.. code-block:: Python


    efa2 = scp.EFA(n_components=3)
    C2 = efa2.fit_transform(dataset)
    assert C1 == C2








.. GENERATED FROM PYTHON SOURCE LINES 77-79

Get components


.. GENERATED FROM PYTHON SOURCE LINES 79-81

.. code-block:: Python

    St = efa2.get_components()
    St.plot(title="components", legend=St.k.labels)



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_005.png
   :alt: components
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_005.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 82-83

Compare with PCA

.. GENERATED FROM PYTHON SOURCE LINES 83-86

.. code-block:: Python

    pca = scp.PCA(n_components=3)
    C3 = pca.fit_transform(dataset)








.. GENERATED FROM PYTHON SOURCE LINES 87-88

.. code-block:: Python

    C3.T.plot(title="PCA scores")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_006.png
   :alt: PCA scores
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_006.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 89-92

.. code-block:: Python

    LT = pca.loadings
    LT.plot(title="PCA components", legend=LT.k.labels)




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_007.png
   :alt: PCA components
   :srcset: /gettingstarted/examples/gallery/auto_examples_analysis/a_decomposition/images/sphx_glr_plot_efa_007.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 93-95

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 95-97

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 3.311 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_analysis_a_decomposition_plot_efa.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_efa.ipynb <plot_efa.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_efa.py <plot_efa.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_efa.zip <plot_efa.zip>`
