
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gettingstarted/examples/gallery/auto_examples_core/a_nddataset/plot_preferences.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_preferences.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_preferences.py:


NDDataset creation and plotting example
=======================================
In this example, we create a 3D NDDataset from scratch,
and then we plot one section (a 2D plane)

.. GENERATED FROM PYTHON SOURCE LINES 16-24

Creation
--------
Now we will create a 3D NDDataset from scratch

Data
++++++
here we make use of numpy array functions to create the data for coordinates
axis and the array of data

.. GENERATED FROM PYTHON SOURCE LINES 24-26

.. code-block:: Python

    import numpy as np








.. GENERATED FROM PYTHON SOURCE LINES 27-28

As usual, we start by loading the spectrochempy library

.. GENERATED FROM PYTHON SOURCE LINES 28-30

.. code-block:: Python

    import spectrochempy as scp








.. GENERATED FROM PYTHON SOURCE LINES 31-33

.. code-block:: Python

    scp.__version__





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    '0.8.1'



.. GENERATED FROM PYTHON SOURCE LINES 34-37

.. code-block:: Python

    print(scp.preferences)






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    {
        "data": {
            "figure_figsize": [
                7,
                3
            ]
        },
        "name": null,
        "readonly": false
    }




.. GENERATED FROM PYTHON SOURCE LINES 38-39

We create the data for the coordinates axis and the array of data

.. GENERATED FROM PYTHON SOURCE LINES 39-49

.. code-block:: Python

    c0 = np.linspace(200.0, 300.0, 3)
    c1 = np.linspace(0.0, 60.0, 100)
    c2 = np.linspace(4000.0, 1000.0, 100)
    nd_data = np.array(
        [
            np.array([np.sin(2.0 * np.pi * c2 / 4000.0) * np.exp(-y / 60) for y in c1]) * t
            for t in c0
        ]
    )








.. GENERATED FROM PYTHON SOURCE LINES 50-54

Coordinates
+++++++++++
The `Coord` object allow making an array of coordinates
with additional metadata such as units, labels, title, etc

.. GENERATED FROM PYTHON SOURCE LINES 54-60

.. code-block:: Python

    coord0 = scp.Coord(
        data=c0, labels=["cold", "normal", "hot"], units="K", title="temperature"
    )
    coord1 = scp.Coord(data=c1, labels=None, units="minutes", title="time-on-stream")
    coord2 = scp.Coord(data=c2, labels=None, units="cm^-1", title="wavenumber")








.. GENERATED FROM PYTHON SOURCE LINES 61-62

Labels can be useful for instance for indexing

.. GENERATED FROM PYTHON SOURCE LINES 62-65

.. code-block:: Python

    a = coord0["normal"]
    print(a)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Coord: [float64] K (size: 1)




.. GENERATED FROM PYTHON SOURCE LINES 66-69

nd-Dataset
+++++++++++
The `NDDataset` object allow making the array of data with units, etc...

.. GENERATED FROM PYTHON SOURCE LINES 69-78

.. code-block:: Python

    mydataset = scp.NDDataset(
        nd_data, coordset=[coord0, coord1, coord2], title="Absorbance", units="absorbance"
    )
    mydataset.description = """Dataset example created for this tutorial.
    It's a 3-D dataset (with dimensionless intensity: absorbance )"""
    mydataset.name = "An example from scratch"
    mydataset.author = "Blake and Mortimer"
    print(mydataset)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    NDDataset: [float64] a.u. (shape: (z:3, y:100, x:100))




.. GENERATED FROM PYTHON SOURCE LINES 79-82

We want to plot a section of this 3D NDDataset:

NDDataset can be sliced like conventional numpy-array...

.. GENERATED FROM PYTHON SOURCE LINES 82-84

.. code-block:: Python

    new = mydataset[..., 0]








.. GENERATED FROM PYTHON SOURCE LINES 85-86

or maybe more conveniently in this case, using an axis labels:

.. GENERATED FROM PYTHON SOURCE LINES 86-88

.. code-block:: Python

    new = mydataset["hot"]








.. GENERATED FROM PYTHON SOURCE LINES 89-91

To plot a dataset, use the `plot` command (generic plot).
As the section NDDataset is 2D, a contour plot is displayed by default.

.. GENERATED FROM PYTHON SOURCE LINES 91-93

.. code-block:: Python

    new.plot()
    scp.plot(new)



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_001.png
         :alt: plot preferences
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_002.png
         :alt: plot preferences
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_002.png
         :class: sphx-glr-multi-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 94-97

But it is possible to display image

sphinx_gallery_thumbnail_number = 2

.. GENERATED FROM PYTHON SOURCE LINES 97-99

.. code-block:: Python

    new.plot_image()
    new.plot(method="image")



.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_003.png
         :alt: plot preferences
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_003.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_004.png
         :alt: plot preferences
         :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_004.png
         :class: sphx-glr-multi-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 100-101

or stacked plot

.. GENERATED FROM PYTHON SOURCE LINES 101-102

.. code-block:: Python

    new.plot(method="stack")



.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_005.png
   :alt: plot preferences
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_005.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 103-104

Note that the scp allows one to use this syntax too:

.. GENERATED FROM PYTHON SOURCE LINES 104-106

.. code-block:: Python

    scp.plot_stack(new)




.. image-sg:: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_006.png
   :alt: plot preferences
   :srcset: /gettingstarted/examples/gallery/auto_examples_core/a_nddataset/images/sphx_glr_plot_preferences_006.png
   :class: sphx-glr-single-img



.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">

    </div>
    <br />
    <br />

.. GENERATED FROM PYTHON SOURCE LINES 107-109

This ends the example ! The following line can be uncommented if no plot shows when
running the .py script with python

.. GENERATED FROM PYTHON SOURCE LINES 109-111

.. code-block:: Python


    # scp.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.106 seconds)


.. _sphx_glr_download_gettingstarted_examples_gallery_auto_examples_core_a_nddataset_plot_preferences.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_preferences.ipynb <plot_preferences.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_preferences.py <plot_preferences.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: plot_preferences.zip <plot_preferences.zip>`
